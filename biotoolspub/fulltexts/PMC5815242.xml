<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Algorithms Mol Biol</journal-id>
    <journal-id journal-id-type="iso-abbrev">Algorithms Mol Biol</journal-id>
    <journal-title-group>
      <journal-title>Algorithms for Molecular Biology : AMB</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1748-7188</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">5815242</article-id>
    <article-id pub-id-type="publisher-id">119</article-id>
    <article-id pub-id-type="doi">10.1186/s13015-017-0119-7</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Fast phylogenetic inference from typing data</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Carriço</surname>
          <given-names>João A.</given-names>
        </name>
        <address>
          <email>jcarrico@fm.ul.pt</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Crochemore</surname>
          <given-names>Maxime</given-names>
        </name>
        <address>
          <email>maxime.crochemore@kcl.ac.uk</email>
        </address>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-4852-1641</contrib-id>
        <name>
          <surname>Francisco</surname>
          <given-names>Alexandre P.</given-names>
        </name>
        <address>
          <email>aplf@ist.utl.pt</email>
        </address>
        <xref ref-type="aff" rid="Aff3">3</xref>
        <xref ref-type="aff" rid="Aff4">4</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Pissis</surname>
          <given-names>Solon P.</given-names>
        </name>
        <address>
          <email>solon.pissis@kcl.ac.uk</email>
        </address>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Ribeiro-Gonçalves</surname>
          <given-names>Bruno</given-names>
        </name>
        <address>
          <email>bfgoncalves@medicina.ulisboa.pt</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Vaz</surname>
          <given-names>Cátia</given-names>
        </name>
        <address>
          <email>cvaz@cc.isel.ipl.pt</email>
        </address>
        <xref ref-type="aff" rid="Aff3">3</xref>
        <xref ref-type="aff" rid="Aff5">5</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 2181 4263</institution-id><institution-id institution-id-type="GRID">grid.9983.b</institution-id><institution>Faculdade de Medicina, </institution><institution> Instituto de Microbiologia and Instituto de Medicina Molecular, Universidade de Lisboa, </institution></institution-wrap>Lisboa, Portugal </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 2322 6764</institution-id><institution-id institution-id-type="GRID">grid.13097.3c</institution-id><institution>Department of Informatics, </institution><institution> King’s College London, </institution></institution-wrap>London, UK </aff>
      <aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 0279 8114</institution-id><institution-id institution-id-type="GRID">grid.14647.30</institution-id><institution>INESC-ID Lisboa, </institution></institution-wrap>Rua Alves Redol 9, 1000-029 Lisboa, Portugal </aff>
      <aff id="Aff4"><label>4</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 2181 4263</institution-id><institution-id institution-id-type="GRID">grid.9983.b</institution-id><institution>Instituto Superior Técnico, Universidade de Lisboa, </institution></institution-wrap>Lisboa, Portugal </aff>
      <aff id="Aff5"><label>5</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0000 9084 0599</institution-id><institution-id institution-id-type="GRID">grid.418858.8</institution-id><institution>Instituto Superior de Engenharia de Lisboa, Instituto Politécnico de Lisboa, </institution></institution-wrap>Lisboa, Portugal </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>15</day>
      <month>2</month>
      <year>2018</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>15</day>
      <month>2</month>
      <year>2018</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2018</year>
    </pub-date>
    <volume>13</volume>
    <elocation-id>4</elocation-id>
    <history>
      <date date-type="received">
        <day>31</day>
        <month>10</month>
        <year>2017</year>
      </date>
      <date date-type="accepted">
        <day>22</day>
        <month>12</month>
        <year>2017</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2018</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold>This article is distributed under the terms of the Creative Commons Attribution 4.0 International License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p>Microbial typing methods are commonly used to study the relatedness of bacterial strains. Sequence-based typing methods are a gold standard for epidemiological surveillance due to the inherent portability of sequence and allelic profile data, fast analysis times and their capacity to create common nomenclatures for strains or clones. This led to development of several novel methods and several databases being made available for many microbial species. With the mainstream use of High Throughput Sequencing, the amount of data being accumulated in these databases is huge, storing thousands of different profiles. On the other hand, computing genetic evolutionary distances among a set of typing profiles or taxa dominates the running time of many phylogenetic inference methods. It is important also to note that most of genetic evolution distance definitions rely, even if indirectly, on computing the pairwise Hamming distance among sequences or profiles. </p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par1">We propose here an average-case linear-time algorithm to compute pairwise Hamming distances among a set of taxa under a given Hamming distance threshold. This article includes both a theoretical analysis and extensive experimental results concerning the proposed algorithm. We further show how this algorithm can be successfully integrated into a well known phylogenetic inference method, and how it can be used to speedup querying local phylogenetic patterns over large typing databases.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Computational biology</kwd>
      <kwd>Phylogenetic inference</kwd>
      <kwd>Hamming distance</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100001871</institution-id>
            <institution>Fundação para a Ciência e a Tecnologia</institution>
          </institution-wrap>
        </funding-source>
        <award-id>TUBITAK/0004/2014</award-id>
        <award-id>LISBOA-01-0145-FEDER-016394</award-id>
        <award-id>LISBOA-01-0145-FEDER-016417</award-id>
        <award-id>UID/CEC/500021/2013</award-id>
      </award-group>
      <award-group>
        <funding-source>
          <institution>Royal Society International Exchanges Scheme</institution>
        </funding-source>
      </award-group>
      <award-group>
        <funding-source>
          <institution>European Food Safety Authority</institution>
        </funding-source>
        <award-id>GP/EFSA/AFSCO/2015/01/CT2</award-id>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2018</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <sec id="Sec2">
      <title>Introduction</title>
      <p id="Par2">The evolutionary relationships between different species or <italic>taxa</italic> are usually inferred through known phylogenetic analysis techniques. Some of these techniques rely on the inference of phylogenetic trees, which can be computed from DNA or Protein sequences, or from allelic profiles where the sequences of defined loci are abstracted to categorical indexes. The most popular method is MultiLocus sequence typing (MLST) [<xref ref-type="bibr" rid="CR1">1</xref>] that typically uses seven 450–700 bp fragments of housekeeping genes for a given species. Phylogenetic trees are also used in other contexts, such as to understand the evolutionary history of gene families, to allow phylogenetic foot-printing, to trace the origin and transmission of infectious diseases, or to study the co-evolution of hosts and parasites [<xref ref-type="bibr" rid="CR2">2</xref>, <xref ref-type="bibr" rid="CR3">3</xref>].</p>
      <p id="Par3">In traditional phylogenetic methods, the process of phylogenetic inference starts with a multiple alignment of the sequences under study that is then corrected using models of DNA or Protein evolution. Tree-building methodologies can then be applied on the resulting distance matrix. These methods rely on some distance-based analysis of sequences or profiles [<xref ref-type="bibr" rid="CR4">4</xref>].</p>
      <p id="Par4">Distance-based methods for phylogenetic analysis rely on a measure of genetic evolution distance, which is often defined directly or indirectly from the fraction of mismatches at aligned positions, with gaps either ignored or counted as mismatches. A first step of these methods is to compute this distance between all pairs of sequences. The simplest approach is to use the Hamming distance, also known as observed <italic>p</italic>-distance, defined as the number of positions at which two aligned sequences differ. Note that the Hamming distance between two sequences underestimates their true evolutionary distance and, thus, a correction formula based on some model of evolution is often used [<xref ref-type="bibr" rid="CR2">2</xref>, <xref ref-type="bibr" rid="CR4">4</xref>]. Although distance-based methods not always produce the best tree for the data, usually they also incorporate an optimality criterion into the distance model for getting more plausible phylogenetic reconstructions, such as the minimum evolution criterion [<xref ref-type="bibr" rid="CR5">5</xref>], the least squares criterion [<xref ref-type="bibr" rid="CR6">6</xref>] or the clonal complexes expansion and diversification [<xref ref-type="bibr" rid="CR7">7</xref>]. Nevertheless, this category of methods are much faster than Maximum likelihood or Bayesian inference methods [<xref ref-type="bibr" rid="CR8">8</xref>], making them excellent choices for the primary analysis of large data sets.<fig id="Fig1"><label>Fig. 1</label><caption><p>Synthetic datasets, with <inline-formula id="IEq2"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma =2$$\end{document}</tex-math><mml:math id="M2"><mml:mrow><mml:mi>σ</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq2.gif"/></alternatives></inline-formula> and <inline-formula id="IEq3"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k=\lfloor m/(2\log m)\rfloor $$\end{document}</tex-math><mml:math id="M4"><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mo>⌊</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">/</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo>log</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>⌋</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq3.gif"/></alternatives></inline-formula> according to Theorem <xref ref-type="sec" rid="FPar1">1</xref>. Running time for computing pairwise distances by finding lower and higher bounds in the SA, and by processing LCP based clusters, as function of the input size <inline-formula id="IEq4"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n=dm$$\end{document}</tex-math><mml:math id="M6"><mml:mrow><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:mi>d</mml:mi><mml:mi>m</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq4.gif"/></alternatives></inline-formula></p></caption><graphic xlink:href="13015_2017_119_Fig1_HTML" id="MO1"/></fig>
<fig id="Fig2"><label>Fig. 2</label><caption><p>Synthetic datasets, with <inline-formula id="IEq5"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma =2$$\end{document}</tex-math><mml:math id="M8"><mml:mrow><mml:mi>σ</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq5.gif"/></alternatives></inline-formula> and <inline-formula id="IEq6"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m=4096$$\end{document}</tex-math><mml:math id="M10"><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>4096</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq6.gif"/></alternatives></inline-formula>. Running time for computing pairwise distances by finding lower and higher bounds in the SA, and by processing LCP based clusters, as function of the number <italic>d</italic> of profiles and for different values of <italic>k</italic></p></caption><graphic xlink:href="13015_2017_119_Fig2_HTML" id="MO2"/></fig>
<fig id="Fig3"><label>Fig. 3</label><caption><p>Synthetic datasets, with <inline-formula id="IEq7"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma =2$$\end{document}</tex-math><mml:math id="M12"><mml:mrow><mml:mi>σ</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq7.gif"/></alternatives></inline-formula> and <inline-formula id="IEq8"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k=\lfloor m/(2\log m)\rfloor $$\end{document}</tex-math><mml:math id="M14"><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mo>⌊</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">/</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo>log</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>⌋</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq8.gif"/></alternatives></inline-formula> according to Theorem <xref ref-type="sec" rid="FPar1">1</xref>. Running time for computing pairwise distances naïvely, by finding lower and higher bounds in the SA, and by processing LCP based clusters, as a function of the number <italic>d</italic> of profiles</p></caption><graphic xlink:href="13015_2017_119_Fig3_HTML" id="MO3"/></fig>
<fig id="Fig4"><label>Fig. 4</label><caption><p>The tree inferred for the largest connected component found with <inline-formula id="IEq9"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k=52$$\end{document}</tex-math><mml:math id="M16"><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>52</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq9.gif"/></alternatives></inline-formula> for the <italic>C. jejuni</italic> dataset.</p><p>Image produced by PHYLOViZ [<xref ref-type="bibr" rid="CR35">35</xref>]</p></caption><graphic xlink:href="13015_2017_119_Fig4_HTML" id="MO4"/></fig>
</p>
      <p id="Par5">Most of the distance-based methods are agglomerative methods. They start with each sequence being a singleton cluster and, at each step, they join two clusters. The iterative process stops when all sequences are part of a single cluster, resulting in a phylogenetic tree. At each step the candidate pair is selected taking into account the distance among clusters as well as the optimality criterion chosen to adjust it.</p>
      <p id="Par6">The computation of a distance matrix (2D array containing the pairwise distances between the elements of a set) is a common first step for distance-based methods, such as eBURST [<xref ref-type="bibr" rid="CR9">9</xref>], goeBURST [<xref ref-type="bibr" rid="CR10">10</xref>], Neighbor Joining [<xref ref-type="bibr" rid="CR11">11</xref>] and UPGMA [<xref ref-type="bibr" rid="CR12">12</xref>]. This particular step dominates the running time of most methods, taking <inline-formula id="IEq10"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Theta (m d^2)$$\end{document}</tex-math><mml:math id="M18"><mml:mrow><mml:mi mathvariant="normal">Θ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:msup><mml:mi>d</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq10.gif"/></alternatives></inline-formula> time in general, <italic>d</italic> being the number of sequences or profiles and <italic>m</italic> the length of each sequence or profile. For large-scale datasets this running time may be quite problematic. And nowadays, with the mainstream use of High Throughput Sequencing, the amount of data being accumulated in typing databases is huge. It is common to find databases storing thousands of different profiles for a single microbial species, with each profile having thousands of loci [<xref ref-type="bibr" rid="CR13">13</xref>, <xref ref-type="bibr" rid="CR14">14</xref>].<table-wrap id="Tab1"><label>Table 1</label><caption><p>Data structures used in our approach for each step</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Profile indexing</th><th align="left">Candidate profile pairs enumeration</th><th align="left">Pairs verification</th></tr></thead><tbody><tr><td align="left" rowspan="2">Suffix array</td><td align="left">Binary search</td><td align="left">Naïve</td></tr><tr><td align="left">LCP based clusters</td><td align="left"><inline-formula id="IEq11"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\text {RMQ}_\text {LCP}$$\end{document}</tex-math><mml:math id="M20"><mml:msub><mml:mtext>RMQ</mml:mtext><mml:mtext>LCP</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq11.gif"/></alternatives></inline-formula></td></tr></tbody></table></table-wrap>
</p>
      <p id="Par7">However, depending on application, on the underlying model of evolution and on the optimality criterion, it may not be strictly necessary to be aware of the complete distance matrix. There are methods that continue to provide optimal solutions without a complete matrix. For such methods, one may still consider a truncated distance matrix and several heuristics, combined with final local searches through topology rearrangements, to improve the running time [<xref ref-type="bibr" rid="CR6">6</xref>]. The goeBURST algorithm, one of our use cases in this article, is an example of a method that can work with truncated distance matrices by construction, i.e., one needs only to know which pairs are at Hamming distance at most <italic>k</italic>.</p>
    </sec>
    <sec id="Sec3">
      <title>Our results</title>
      <p id="Par8">We propose here an average-case <inline-formula id="IEq12"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(m d)$$\end{document}</tex-math><mml:math id="M22"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq12.gif"/></alternatives></inline-formula>-time and <inline-formula id="IEq13"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(m d)$$\end{document}</tex-math><mml:math id="M24"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq13.gif"/></alternatives></inline-formula>-space algorithm to compute the pairs of sequences, among <italic>d</italic> sequences of length <italic>m</italic>, that are at distance at most <italic>k</italic>, when <inline-formula id="IEq14"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k &lt; \frac{(m-k-1) \cdot \log \sigma }{\log m d}$$\end{document}</tex-math><mml:math id="M26"><mml:mrow><mml:mi>k</mml:mi><mml:mo>&lt;</mml:mo><mml:mfrac><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo>-</mml:mo><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>·</mml:mo><mml:mo>log</mml:mo><mml:mi>σ</mml:mi></mml:mrow><mml:mrow><mml:mo>log</mml:mo><mml:mi>m</mml:mi><mml:mi>d</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq14.gif"/></alternatives></inline-formula>, where <inline-formula id="IEq15"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma $$\end{document}</tex-math><mml:math id="M28"><mml:mi>σ</mml:mi></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq15.gif"/></alternatives></inline-formula> is the size of the sequences alphabet. We support our result with both a theoretical analysis and an experimental evaluation on synthetic and real datasets of different data types (MLST, cgMLST, wgMLST and SNP). We further show that our method improves goeBURST, and that we can use it to speedup querying local phylogenetic patterns over large typing databases.</p>
      <p id="Par9">A preliminary version of this paper was presented at the Workshop on Algorithms in Bioinformatics (WABI) 2017 [<xref ref-type="bibr" rid="CR15">15</xref>].</p>
    </sec>
  </sec>
  <sec id="Sec4">
    <title>Methods</title>
    <sec id="Sec5">
      <title>Closest pairs in linear time</title>
      <p id="Par10">Let <italic>P</italic> be the set of profiles (or sequences) each of length <italic>m</italic>, defined over an integer alphabet <inline-formula id="IEq16"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Sigma $$\end{document}</tex-math><mml:math id="M30"><mml:mi mathvariant="normal">Σ</mml:mi></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq16.gif"/></alternatives></inline-formula>, (i.e., <inline-formula id="IEq17"><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Sigma = \{1,\ldots ,m^{O(1)}\}$$\end{document}</tex-math><mml:math id="M32"><mml:mrow><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq17.gif"/></alternatives></inline-formula>), with <inline-formula id="IEq18"><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d=|P|$$\end{document}</tex-math><mml:math id="M34"><mml:mrow><mml:mi>d</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq18.gif"/></alternatives></inline-formula> and <inline-formula id="IEq19"><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma =|\Sigma |$$\end{document}</tex-math><mml:math id="M36"><mml:mrow><mml:mi>σ</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq19.gif"/></alternatives></inline-formula>. Let also <inline-formula id="IEq20"><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$H:P \times P \rightarrow \{0,\ldots ,m\}$$\end{document}</tex-math><mml:math id="M38"><mml:mrow><mml:mi>H</mml:mi><mml:mo>:</mml:mo><mml:mi>P</mml:mi><mml:mo>×</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq20.gif"/></alternatives></inline-formula> be the function such that <italic>H</italic>(<italic>u</italic>, <italic>v</italic>) is the Hamming distance between profiles <inline-formula id="IEq21"><alternatives><tex-math id="M39">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u,v\in P$$\end{document}</tex-math><mml:math id="M40"><mml:mrow><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mi>P</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq21.gif"/></alternatives></inline-formula>. Given an integer threshold <inline-formula id="IEq22"><alternatives><tex-math id="M41">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$0&lt; k &lt; m$$\end{document}</tex-math><mml:math id="M42"><mml:mrow><mml:mn>0</mml:mn><mml:mo>&lt;</mml:mo><mml:mi>k</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq22.gif"/></alternatives></inline-formula>, the problem is to compute all pairs <inline-formula id="IEq23"><alternatives><tex-math id="M43">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u,v\in P$$\end{document}</tex-math><mml:math id="M44"><mml:mrow><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mi>P</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq23.gif"/></alternatives></inline-formula> such that <inline-formula id="IEq24"><alternatives><tex-math id="M45">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$H(u,v) \le k$$\end{document}</tex-math><mml:math id="M46"><mml:mrow><mml:mi>H</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>≤</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq24.gif"/></alternatives></inline-formula>, and the corresponding <italic>H</italic>(<italic>u</italic>, <italic>v</italic>) value, faster than the <inline-formula id="IEq25"><alternatives><tex-math id="M47">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Theta (m d^2)$$\end{document}</tex-math><mml:math id="M48"><mml:mrow><mml:mi mathvariant="normal">Θ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:msup><mml:mi>d</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq25.gif"/></alternatives></inline-formula> time required to compute naïvely the complete distance matrix for the <italic>d</italic> profiles of length <italic>m</italic>.<table-wrap id="Tab2"><label>Table 2</label><caption><p>Real datasets used in the experimental evaluation</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"> Dataset</th><th align="left"> Typing method</th><th align="left"> Profile length</th><th align="left"> Number of distinct elements</th><th align="left"> References</th></tr></thead><tbody><tr><td align="left"><italic>Campylobacter jejuni</italic></td><td align="left">wgMLST</td><td char="." align="char"> 5446</td><td char="." align="char"> 5669</td><td align="left"> (*)</td></tr><tr><td align="left"><italic>Salmonella enterica</italic></td><td align="left">wgMLST</td><td char="." align="char"> 3002</td><td char="." align="char"> 6861</td><td align="left"> [<xref ref-type="bibr" rid="CR13">13</xref>]</td></tr><tr><td align="left"><italic>Salmonella typhi</italic></td><td align="left">SNP</td><td char="." align="char"> 22,143</td><td char="." align="char"> 1534</td><td align="left"> [<xref ref-type="bibr" rid="CR36">36</xref>]</td></tr><tr><td align="left"><italic>Streptococcus pneumoniae</italic></td><td align="left">cgMLST</td><td char="." align="char"> 235</td><td char="." align="char"> 1968</td><td align="left"> [<xref ref-type="bibr" rid="CR37">37</xref>–<xref ref-type="bibr" rid="CR39">39</xref>]</td></tr></tbody></table><table-wrap-foot><p>(*) Dataset provided by the Molecular Microbiology and Infection Unit, IMM</p></table-wrap-foot></table-wrap>
</p>
      <p id="Par11">We address this problem by indexing all profiles <italic>P</italic> using the suffix array (denoted by SA) and the longest common prefix (denoted by LCP) array [<xref ref-type="bibr" rid="CR16">16</xref>]. We rely also on a range minimum queries (RMQ) data structure [<xref ref-type="bibr" rid="CR17">17</xref>, <xref ref-type="bibr" rid="CR18">18</xref>] over the LCP array (denoted by <inline-formula id="IEq26"><alternatives><tex-math id="M49">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\text {RMQ}_\text {LCP}$$\end{document}</tex-math><mml:math id="M50"><mml:msub><mml:mtext>RMQ</mml:mtext><mml:mtext>LCP</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq26.gif"/></alternatives></inline-formula>). The problem is then solved in three main steps:<list list-type="order"><list-item><p id="Par12">Index all profiles using the SA data structure.</p></list-item><list-item><p id="Par13">Enumerate all candidate profile pairs given the maximum Hamming distance <italic>k</italic>.</p></list-item><list-item><p id="Par14">Verify each candidate profile pair by checking if the associated Hamming distance is no more than <italic>k</italic>.</p></list-item></list>Table <xref rid="Tab1" ref-type="table">1</xref> summarizes the data structures and strategies followed in each step. Profiles are concatenated and indexed using SA. Depending on the strategy to be used, we further process the SA and build the LCP array and pre-process it for fast RMQ. This allows for enumerating candidate profile pairs and computing distances faster. In what follows, we detail the above steps and show how the data structures are used to improve the overall running time.</p>
      <sec id="Sec6">
        <title>Step 1: Profile indexing</title>
        <p id="Par15">Profiles are concatenated and indexed in an SA in <inline-formula id="IEq27"><alternatives><tex-math id="M51">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(m d)$$\end{document}</tex-math><mml:math id="M52"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq27.gif"/></alternatives></inline-formula> time and space [<xref ref-type="bibr" rid="CR19">19</xref>, <xref ref-type="bibr" rid="CR20">20</xref>]. Let us denote this string by <italic>s</italic>. Since we only need to compute the distances between profiles that are at Hamming distance at most <italic>k</italic>, we can conceptually split each profile into <italic>k</italic> non-overlapping <italic>blocks</italic> of length <inline-formula id="IEq28"><alternatives><tex-math id="M53">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal{L}= {\lfloor \tfrac{m}{k+1} \rfloor }$$\end{document}</tex-math><mml:math id="M54"><mml:mrow><mml:mi mathvariant="script">L</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo>⌊</mml:mo><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mfrac><mml:mi>m</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac></mml:mstyle><mml:mo>⌋</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq28.gif"/></alternatives></inline-formula> each. It is then folklore knowledge that if two profiles are within distance <italic>k</italic>, they must share at least one such block of length <inline-formula id="IEq29"><alternatives><tex-math id="M55">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal{L}$$\end{document}</tex-math><mml:math id="M56"><mml:mi mathvariant="script">L</mml:mi></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq29.gif"/></alternatives></inline-formula>. Our approach is based on using the SA of <italic>s</italic> to efficiently identify matching blocks among profile pairs. This lets us quickly filter in candidate profile pairs and filter out the ones that can never be part of the output.</p>
      </sec>
      <sec id="Sec7">
        <title>Step 2: Candidate profile pairs enumeration</title>
        <p id="Par16">The candidate profile pairs enumeration step provides the pairs of profiles that do not differ in more than <italic>k</italic> positions, but it may include spurious pairs. Since SA is an ordered structure, a simple solution is to use a binary search approach. For each block of each profile, we can obtain in <inline-formula id="IEq30"><alternatives><tex-math id="M57">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(\mathcal{L} \log \ n)$$\end{document}</tex-math><mml:math id="M58"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">L</mml:mi><mml:mo>log</mml:mo><mml:mspace width="4pt"/><mml:mi>n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq30.gif"/></alternatives></inline-formula> time, where <inline-formula id="IEq31"><alternatives><tex-math id="M59">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ n = m d$$\end{document}</tex-math><mml:math id="M60"><mml:mrow><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:mi>m</mml:mi><mml:mi>d</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq31.gif"/></alternatives></inline-formula>, all the suffixes that have that block as a prefix. If a given match is not aligned with the initial block, i.e., it does not occur at the same position in the respective profile, then it should be discarded. Otherwise, a candidate profile pair is reported. This searching procedure is done in <inline-formula id="IEq32"><alternatives><tex-math id="M61">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(d k \mathcal{L} \log n) = \mathcal {O}(n \log n)$$\end{document}</tex-math><mml:math id="M62"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>d</mml:mi><mml:mi>k</mml:mi><mml:mi mathvariant="script">L</mml:mi><mml:mo>log</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>log</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq32.gif"/></alternatives></inline-formula> time.</p>
        <p id="Par17">Another solution relies on computing the LCP array: the longest common prefix between each pair of consecutive elements within the SA. This information can also be computed in <inline-formula id="IEq33"><alternatives><tex-math id="M63">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(n)$$\end{document}</tex-math><mml:math id="M64"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq33.gif"/></alternatives></inline-formula> time and space [<xref ref-type="bibr" rid="CR21">21</xref>]. Since SA is an ordered structure, for the contiguous suffixes <inline-formula id="IEq34"><alternatives><tex-math id="M65">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$s_{i}, s_{i+1}, s_{i+2}$$\end{document}</tex-math><mml:math id="M66"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq34.gif"/></alternatives></inline-formula> of <italic>s</italic>, with <inline-formula id="IEq35"><alternatives><tex-math id="M67">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$0 \le i&lt; n-2$$\end{document}</tex-math><mml:math id="M68"><mml:mrow><mml:mn>0</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>n</mml:mi><mml:mo>-</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq35.gif"/></alternatives></inline-formula>, we have that the common prefix between <inline-formula id="IEq36"><alternatives><tex-math id="M69">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$s_{i}$$\end{document}</tex-math><mml:math id="M70"><mml:msub><mml:mi>s</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq36.gif"/></alternatives></inline-formula> and <inline-formula id="IEq37"><alternatives><tex-math id="M71">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$s_{i+1}$$\end{document}</tex-math><mml:math id="M72"><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq37.gif"/></alternatives></inline-formula> is at least as long as the common prefix of <inline-formula id="IEq38"><alternatives><tex-math id="M73">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$s_i$$\end{document}</tex-math><mml:math id="M74"><mml:msub><mml:mi>s</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq38.gif"/></alternatives></inline-formula> and <inline-formula id="IEq39"><alternatives><tex-math id="M75">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$s_{i+2}$$\end{document}</tex-math><mml:math id="M76"><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq39.gif"/></alternatives></inline-formula>. By construction, it is possible to get the position of each suffix in the corresponding profile in constant time. Then, we cluster the corresponding profiles of contiguous pairs if they have an LCP value greater than or equal to <inline-formula id="IEq40"><alternatives><tex-math id="M77">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal{L}$$\end{document}</tex-math><mml:math id="M78"><mml:mi mathvariant="script">L</mml:mi></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq40.gif"/></alternatives></inline-formula> and they are also aligned. This clustering procedure can be done in <inline-formula id="IEq41"><alternatives><tex-math id="M79">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(k d ^2)$$\end{document}</tex-math><mml:math id="M80"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:msup><mml:mi>d</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq41.gif"/></alternatives></inline-formula> time.</p>
      </sec>
      <sec id="Sec8">
        <title>Step 3: Pairs verification</title>
        <p id="Par18">After getting the set of candidate profile pairs, a naïve solution would be to compute the distance for each pair of profiles by comparing them in linear time, i.e., <inline-formula id="IEq42"><alternatives><tex-math id="M81">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(m)$$\end{document}</tex-math><mml:math id="M82"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq42.gif"/></alternatives></inline-formula> time. However, if we compute the LCP array of <italic>s</italic>, we can then perform a sequence of <inline-formula id="IEq43"><alternatives><tex-math id="M83">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(k)$$\end{document}</tex-math><mml:math id="M84"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq43.gif"/></alternatives></inline-formula> RMQ over the LCP array for checking if a pair of profiles is at distance at most <italic>k</italic>. These RMQ over the LCP array correspond to longest common prefix queries between a pair of suffixes of <italic>s</italic>. Since after a linear-time pre-processing over the LCP array, RMQ can be answered in constant time per query [<xref ref-type="bibr" rid="CR17">17</xref>], we obtain a faster approach for computing the distances. This alternative approach takes <inline-formula id="IEq44"><alternatives><tex-math id="M85">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(k)$$\end{document}</tex-math><mml:math id="M86"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq44.gif"/></alternatives></inline-formula> time to verify each candidate profile pair instead of <inline-formula id="IEq45"><alternatives><tex-math id="M87">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(m)$$\end{document}</tex-math><mml:math id="M88"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq45.gif"/></alternatives></inline-formula> time.</p>
      </sec>
      <sec id="Sec9">
        <title>Average-case analysis</title>
        <p id="Par19">Algorithm 1 below details the solution based on LCP clusters; and Theorem <xref ref-type="sec" rid="FPar1">1</xref> shows that this algorithm runs in linear time on average using linear space. We rely here on well-known results concerning the linear-time construction of the SA [<xref ref-type="bibr" rid="CR19">19</xref>, <xref ref-type="bibr" rid="CR20">20</xref>] and the LCP array [<xref ref-type="bibr" rid="CR21">21</xref>], as well as the linear-time pre-processing for the RMQ data structure [<xref ref-type="bibr" rid="CR18">18</xref>].<table-wrap id="Tab3"><label>Table 3</label><caption><p>Time and percentage of pairs processed for each method and dataset</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" rowspan="2"> Dataset</th><th align="left" rowspan="2"><italic>k</italic></th><th align="left" colspan="2"> Naïve</th><th align="left" colspan="2"> Binary search</th><th align="left" colspan="2"> LCP clusters</th></tr><tr><th align="left"> t (s)</th><th align="left">Pairs (%)</th><th align="left"> t (s)</th><th align="left"> Pairs (%)</th><th align="left"> t (s)</th><th align="left"> Pairs (%)</th></tr></thead><tbody><tr><td align="left"><italic>C. jejuni</italic></td><td char="." align="char">8</td><td char="." align="char">108.59</td><td align="left">100</td><td char="." align="char">0.22</td><td char="." align="char">0.06</td><td char="." align="char"><italic>0.17</italic></td><td char="." align="char">0.06</td></tr><tr><td align="left"/><td char="." align="char">16</td><td char="." align="char">109.30</td><td align="left">100</td><td char="." align="char">0.48</td><td char="." align="char">0.32</td><td char="." align="char"><italic>0.34</italic></td><td char="." align="char">0.32</td></tr><tr><td align="left"/><td char="." align="char">32</td><td char="." align="char">108.60</td><td align="left">100</td><td char="." align="char">3.52</td><td char="." align="char">5.45</td><td char="." align="char"><italic>2.67</italic></td><td char="." align="char">5.45</td></tr><tr><td align="left"/><td char="." align="char">64</td><td char="." align="char"><italic>108.60</italic></td><td align="left">100</td><td char="." align="char">231.05</td><td char="." align="char">99.98</td><td char="." align="char">162.36</td><td char="." align="char">99.98</td></tr><tr><td align="left"><italic>S. enterica</italic></td><td char="." align="char">8</td><td char="." align="char">89.85</td><td align="left">100</td><td char="." align="char">1.04</td><td char="." align="char">2.37</td><td char="." align="char"><italic>0.95</italic></td><td char="." align="char">2.37</td></tr><tr><td align="left"/><td char="." align="char">16</td><td char="." align="char">87.26</td><td align="left">100</td><td char="." align="char">7.16</td><td char="." align="char">12.69</td><td char="." align="char"><italic>6.73</italic></td><td char="." align="char">12.69</td></tr><tr><td align="left"/><td char="." align="char">32</td><td char="." align="char">85.36</td><td align="left">100</td><td char="." align="char">36.29</td><td char="." align="char">33.22</td><td char="." align="char"><italic>30.76</italic></td><td char="." align="char">33.22</td></tr><tr><td align="left"/><td char="." align="char">64</td><td char="." align="char"><italic>84.63</italic></td><td align="left">100</td><td char="." align="char">254.45</td><td char="." align="char">82.44</td><td char="." align="char">187.15</td><td char="." align="char">82.44</td></tr><tr><td align="left"><italic>S. typhi</italic></td><td char="." align="char">89</td><td char="." align="char">28.83</td><td align="left">100</td><td char="." align="char">16.63</td><td char="." align="char">91.48</td><td char="." align="char"><italic>12.02</italic></td><td char="." align="char">91.48</td></tr><tr><td align="left"/><td char="." align="char">178</td><td char="." align="char"><italic>28.32</italic></td><td align="left">100</td><td char="." align="char">46.98</td><td char="." align="char">99.91</td><td char="." align="char">32.03</td><td char="." align="char">99.91</td></tr><tr><td align="left"/><td char="." align="char">890</td><td char="." align="char"><italic>30.04</italic></td><td align="left">100</td><td char="." align="char">113.57</td><td char="." align="char">100</td><td char="." align="char">129.14</td><td char="." align="char">100</td></tr><tr><td align="left"><italic>S. pneumoniae</italic></td><td char="." align="char">8</td><td char="." align="char">0.56</td><td align="left">100</td><td char="." align="char">0.02</td><td char="." align="char">0.93</td><td char="." align="char"><italic>0.02</italic></td><td char="." align="char">0.93</td></tr><tr><td align="left"/><td char="." align="char">16</td><td char="." align="char">0.57</td><td align="left">100</td><td char="." align="char">0.05</td><td char="." align="char">1.71</td><td char="." align="char"><italic>0.04</italic></td><td char="." align="char">1.71</td></tr><tr><td align="left"/><td char="." align="char">32</td><td char="." align="char">0.56</td><td align="left">100</td><td char="." align="char">0.20</td><td char="." align="char">4.42</td><td char="." align="char"><italic>0.15</italic></td><td char="." align="char">4.42</td></tr><tr><td align="left"/><td char="." align="char">64</td><td char="." align="char"><italic>0.58</italic></td><td align="left">100</td><td char="." align="char">5.63</td><td char="." align="char">73.36</td><td char="." align="char">5.01</td><td char="." align="char">73.36</td></tr></tbody></table><table-wrap-foot><p>The minimum time for each row is highlighted in italic</p></table-wrap-foot></table-wrap>
</p>
        <p id="Par20">In what follows, <inline-formula id="IEq46"><alternatives><tex-math id="M89">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\text {LCP}[i]$$\end{document}</tex-math><mml:math id="M90"><mml:mrow><mml:mtext>LCP</mml:mtext><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq46.gif"/></alternatives></inline-formula>, <inline-formula id="IEq47"><alternatives><tex-math id="M91">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$i&gt;0$$\end{document}</tex-math><mml:math id="M92"><mml:mrow><mml:mi>i</mml:mi><mml:mo>&gt;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq47.gif"/></alternatives></inline-formula>, stores the length of the longest common prefix of suffixes <inline-formula id="IEq48"><alternatives><tex-math id="M93">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$s_{i-1}$$\end{document}</tex-math><mml:math id="M94"><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq48.gif"/></alternatives></inline-formula> and <inline-formula id="IEq49"><alternatives><tex-math id="M95">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$s_{i}$$\end{document}</tex-math><mml:math id="M96"><mml:msub><mml:mi>s</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq49.gif"/></alternatives></inline-formula> of <italic>s</italic>, and <inline-formula id="IEq50"><alternatives><tex-math id="M97">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\text {RMQ}_{\text {LCP}}(i,j)$$\end{document}</tex-math><mml:math id="M98"><mml:mrow><mml:msub><mml:mtext>RMQ</mml:mtext><mml:mtext>LCP</mml:mtext></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq50.gif"/></alternatives></inline-formula> returns the index of the smallest element in the subarray <inline-formula id="IEq51"><alternatives><tex-math id="M99">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\text {LCP}[i\ldots j]$$\end{document}</tex-math><mml:math id="M100"><mml:mrow><mml:mtext>LCP</mml:mtext><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>…</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq51.gif"/></alternatives></inline-formula> in constant time [<xref ref-type="bibr" rid="CR18">18</xref>]. We rely also on some auxiliary subroutines; let <inline-formula id="IEq52"><alternatives><tex-math id="M101">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal{L}= {\lfloor \tfrac{m}{k+1} \rfloor }$$\end{document}</tex-math><mml:math id="M102"><mml:mrow><mml:mi mathvariant="script">L</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo>⌊</mml:mo><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mfrac><mml:mi>m</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac></mml:mstyle><mml:mo>⌋</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq52.gif"/></alternatives></inline-formula>:<list list-type="bullet"><list-item><p id="Par21"><bold>Aligned</bold>(i) Let <inline-formula id="IEq53"><alternatives><tex-math id="M103">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\ell = i\mod m$$\end{document}</tex-math><mml:math id="M104"><mml:mrow><mml:mi>ℓ</mml:mi><mml:mo>=</mml:mo><mml:mi>i</mml:mi><mml:mspace width="3.33333pt"/><mml:mo>mod</mml:mo><mml:mspace width="0.277778em"/><mml:mi>m</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq53.gif"/></alternatives></inline-formula>, i.e., the starting position of the suffix <inline-formula id="IEq54"><alternatives><tex-math id="M105">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$s_i$$\end{document}</tex-math><mml:math id="M106"><mml:msub><mml:mi>s</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq54.gif"/></alternatives></inline-formula> within a profile. Then this subroutine returns <inline-formula id="IEq55"><alternatives><tex-math id="M107">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\ell /\mathcal{L}$$\end{document}</tex-math><mml:math id="M108"><mml:mrow><mml:mi>ℓ</mml:mi><mml:mo stretchy="false">/</mml:mo><mml:mi mathvariant="script">L</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq55.gif"/></alternatives></inline-formula> if <inline-formula id="IEq56"><alternatives><tex-math id="M109">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\ell $$\end{document}</tex-math><mml:math id="M110"><mml:mi>ℓ</mml:mi></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq56.gif"/></alternatives></inline-formula> is multiple of <inline-formula id="IEq57"><alternatives><tex-math id="M111">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal{L}$$\end{document}</tex-math><mml:math id="M112"><mml:mi mathvariant="script">L</mml:mi></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq57.gif"/></alternatives></inline-formula>, and <inline-formula id="IEq58"><alternatives><tex-math id="M113">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$-1$$\end{document}</tex-math><mml:math id="M114"><mml:mrow><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq58.gif"/></alternatives></inline-formula> otherwise.</p></list-item><list-item><p id="Par22"><bold>HD</bold>( <inline-formula id="IEq59"><alternatives><tex-math id="M115">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p_i$$\end{document}</tex-math><mml:math id="M116"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq59.gif"/></alternatives></inline-formula> , <inline-formula id="IEq60"><alternatives><tex-math id="M117">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p_j$$\end{document}</tex-math><mml:math id="M118"><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq60.gif"/></alternatives></inline-formula> , <inline-formula id="IEq61"><alternatives><tex-math id="M119">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\ell $$\end{document}</tex-math><mml:math id="M120"><mml:mi>ℓ</mml:mi></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq61.gif"/></alternatives></inline-formula>) Given two profiles <inline-formula id="IEq62"><alternatives><tex-math id="M121">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p_i$$\end{document}</tex-math><mml:math id="M122"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq62.gif"/></alternatives></inline-formula> and <inline-formula id="IEq63"><alternatives><tex-math id="M123">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p_j$$\end{document}</tex-math><mml:math id="M124"><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq63.gif"/></alternatives></inline-formula> which share a substring of length <inline-formula id="IEq64"><alternatives><tex-math id="M125">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal{L}$$\end{document}</tex-math><mml:math id="M126"><mml:mi mathvariant="script">L</mml:mi></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq64.gif"/></alternatives></inline-formula>, starting at index <inline-formula id="IEq65"><alternatives><tex-math id="M127">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\ell \mathcal{L}$$\end{document}</tex-math><mml:math id="M128"><mml:mrow><mml:mi>ℓ</mml:mi><mml:mi mathvariant="script">L</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq65.gif"/></alternatives></inline-formula>, this subroutine computes the minimum of <italic>k</italic> and the Hamming distance between <inline-formula id="IEq66"><alternatives><tex-math id="M129">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p_i$$\end{document}</tex-math><mml:math id="M130"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq66.gif"/></alternatives></inline-formula> and <inline-formula id="IEq67"><alternatives><tex-math id="M131">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p_j$$\end{document}</tex-math><mml:math id="M132"><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq67.gif"/></alternatives></inline-formula>. This subroutine relies on <inline-formula id="IEq68"><alternatives><tex-math id="M133">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\text {RMQ}_{\text {LCP}}$$\end{document}</tex-math><mml:math id="M134"><mml:msub><mml:mtext>RMQ</mml:mtext><mml:mtext>LCP</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq68.gif"/></alternatives></inline-formula> to find matches between <inline-formula id="IEq69"><alternatives><tex-math id="M135">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p_i$$\end{document}</tex-math><mml:math id="M136"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq69.gif"/></alternatives></inline-formula> and <inline-formula id="IEq70"><alternatives><tex-math id="M137">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p_j$$\end{document}</tex-math><mml:math id="M138"><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq70.gif"/></alternatives></inline-formula> and, hence, it runs in <inline-formula id="IEq71"><alternatives><tex-math id="M139">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(k)$$\end{document}</tex-math><mml:math id="M140"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq71.gif"/></alternatives></inline-formula> time since it can terminate after <italic>k</italic> mismatches.</p></list-item></list>
</p>
        <graphic position="anchor" xlink:href="13015_2017_119_Figa_HTML" id="MO5"/>
        <sec id="FPar1">
          <title>
            <bold>Theorem 1</bold>
          </title>
          <p id="Par23">
            <italic>Given d profiles of length m each over an integer alphabet</italic>
            <inline-formula id="IEq72">
              <alternatives>
                <tex-math id="M141">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Sigma $$\end{document}</tex-math>
                <mml:math id="M142">
                  <mml:mi mathvariant="normal">Σ</mml:mi>
                </mml:math>
                <inline-graphic xlink:href="13015_2017_119_Article_IEq72.gif"/>
              </alternatives>
            </inline-formula>
            <italic> of size</italic>
            <inline-formula id="IEq73">
              <alternatives>
                <tex-math id="M143">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma &gt;1$$\end{document}</tex-math>
                <mml:math id="M144">
                  <mml:mrow>
                    <mml:mi>σ</mml:mi>
                    <mml:mo>&gt;</mml:mo>
                    <mml:mn>1</mml:mn>
                  </mml:mrow>
                </mml:math>
                <inline-graphic xlink:href="13015_2017_119_Article_IEq73.gif"/>
              </alternatives>
            </inline-formula>
            <italic> with the letters of the profiles being independent and identically distributed random variables uniformly distributed over</italic>
            <inline-formula id="IEq74">
              <alternatives>
                <tex-math id="M145">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Sigma, $$\end{document}</tex-math>
                <mml:math id="M146">
                  <mml:mrow>
                    <mml:mi mathvariant="normal">Σ</mml:mi>
                    <mml:mo>,</mml:mo>
                  </mml:mrow>
                </mml:math>
                <inline-graphic xlink:href="13015_2017_119_Article_IEq74.gif"/>
              </alternatives>
            </inline-formula>
            <italic> and the maximum Hamming distance</italic>
            <inline-formula id="IEq75">
              <alternatives>
                <tex-math id="M147">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$0&lt; k &lt; m,$$\end{document}</tex-math>
                <mml:math id="M148">
                  <mml:mrow>
                    <mml:mn>0</mml:mn>
                    <mml:mo>&lt;</mml:mo>
                    <mml:mi>k</mml:mi>
                    <mml:mo>&lt;</mml:mo>
                    <mml:mi>m</mml:mi>
                    <mml:mo>,</mml:mo>
                  </mml:mrow>
                </mml:math>
                <inline-graphic xlink:href="13015_2017_119_Article_IEq75.gif"/>
              </alternatives>
            </inline-formula>
            <italic> Algorithm 1 runs in</italic>
            <inline-formula id="IEq76">
              <alternatives>
                <tex-math id="M149">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(m d)$$\end{document}</tex-math>
                <mml:math id="M150">
                  <mml:mrow>
                    <mml:mi mathvariant="script">O</mml:mi>
                    <mml:mo stretchy="false">(</mml:mo>
                    <mml:mi>m</mml:mi>
                    <mml:mi>d</mml:mi>
                    <mml:mo stretchy="false">)</mml:mo>
                  </mml:mrow>
                </mml:math>
                <inline-graphic xlink:href="13015_2017_119_Article_IEq76.gif"/>
              </alternatives>
            </inline-formula>
            <italic> average-case time and space if</italic>
            <disp-formula id="Equ1">
              <alternatives>
                <tex-math id="M151">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} k &lt; \frac{(m-k-1) \cdot \log \sigma }{\log m d}. \end{aligned}$$\end{document}</tex-math>
                <mml:math id="M152" display="block">
                  <mml:mrow>
                    <mml:mtable>
                      <mml:mtr>
                        <mml:mtd columnalign="right">
                          <mml:mrow>
                            <mml:mi>k</mml:mi>
                            <mml:mo>&lt;</mml:mo>
                            <mml:mfrac>
                              <mml:mrow>
                                <mml:mo stretchy="false">(</mml:mo>
                                <mml:mi>m</mml:mi>
                                <mml:mo>-</mml:mo>
                                <mml:mi>k</mml:mi>
                                <mml:mo>-</mml:mo>
                                <mml:mn>1</mml:mn>
                                <mml:mo stretchy="false">)</mml:mo>
                                <mml:mo>·</mml:mo>
                                <mml:mo>log</mml:mo>
                                <mml:mi>σ</mml:mi>
                              </mml:mrow>
                              <mml:mrow>
                                <mml:mo>log</mml:mo>
                                <mml:mi>m</mml:mi>
                                <mml:mi>d</mml:mi>
                              </mml:mrow>
                            </mml:mfrac>
                            <mml:mo>.</mml:mo>
                          </mml:mrow>
                        </mml:mtd>
                      </mml:mtr>
                    </mml:mtable>
                  </mml:mrow>
                </mml:math>
                <graphic xlink:href="13015_2017_119_Article_Equ1.gif" position="anchor"/>
              </alternatives>
            </disp-formula>
          </p>
        </sec>
        <sec id="FPar2">
          <title>
            <italic>Proof</italic>
          </title>
          <p id="Par24">Let us denote by <italic>s</italic> the string of length <italic>md</italic> obtained after concatenating the <italic>d</italic> profiles. The time and space required for constructing the SA and the LCP arrays for <italic>s</italic> and the RMQ data structure over the LCP array is <inline-formula id="IEq77"><alternatives><tex-math id="M153">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(md)$$\end{document}</tex-math><mml:math id="M154"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq77.gif"/></alternatives></inline-formula>.</p>
          <p id="Par25">Let us denote by <inline-formula id="IEq78"><alternatives><tex-math id="M155">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\mathcal B}$$\end{document}</tex-math><mml:math id="M156"><mml:mi mathvariant="script">B</mml:mi></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq78.gif"/></alternatives></inline-formula> the total number of blocks over <italic>s</italic> and by <inline-formula id="IEq79"><alternatives><tex-math id="M157">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal{L}$$\end{document}</tex-math><mml:math id="M158"><mml:mi mathvariant="script">L</mml:mi></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq79.gif"/></alternatives></inline-formula> the block length. We set <inline-formula id="IEq80"><alternatives><tex-math id="M159">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\mathcal L}={\lfloor \tfrac{m}{k+1} \rfloor }$$\end{document}</tex-math><mml:math id="M160"><mml:mrow><mml:mi mathvariant="script">L</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo>⌊</mml:mo><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mfrac><mml:mi>m</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac></mml:mstyle><mml:mo>⌋</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq80.gif"/></alternatives></inline-formula> and thus we have that <inline-formula id="IEq81"><alternatives><tex-math id="M161">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\mathcal B} = {d \lfloor \tfrac{m}{\mathcal{L}}\rfloor }$$\end{document}</tex-math><mml:math id="M162"><mml:mrow><mml:mi mathvariant="script">B</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mi>d</mml:mi><mml:mo>⌊</mml:mo><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mfrac><mml:mi>m</mml:mi><mml:mi mathvariant="script">L</mml:mi></mml:mfrac></mml:mstyle><mml:mo>⌋</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq81.gif"/></alternatives></inline-formula>. Let us also denote by <italic>C</italic> a maximal set of indices over <italic>x</italic> satisfying the following:<list list-type="order"><list-item><p id="Par26">The length of the longest common prefix between any two suffixes of <italic>s</italic> starting at these indices is at least <inline-formula id="IEq82"><alternatives><tex-math id="M163">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal{L}$$\end{document}</tex-math><mml:math id="M164"><mml:mi mathvariant="script">L</mml:mi></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq82.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par27">both of these suffixes start at the starting position of a block;</p></list-item><list-item><p id="Par28">and both indices correspond to the starting position of the <italic>i</italic>th block in their profiles.</p></list-item></list>This can be done in <inline-formula id="IEq83"><alternatives><tex-math id="M165">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(md)$$\end{document}</tex-math><mml:math id="M166"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq83.gif"/></alternatives></inline-formula> time using the LCP array (lines 7–17). Processing all such sets <italic>C</italic> (lines 21–27) requires total time<disp-formula id="Equ2"><alternatives><tex-math id="M167">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \textsf {PROC}_{i,j} \times {Pairs} \end{aligned}$$\end{document}</tex-math><mml:math id="M168" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi mathvariant="sans-serif">PROC</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>×</mml:mo><mml:mrow><mml:mi mathvariant="italic">Pairs</mml:mi></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2017_119_Article_Equ2.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq84"><alternatives><tex-math id="M169">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\textsf {PROC}_{i,j}$$\end{document}</tex-math><mml:math id="M170"><mml:msub><mml:mi mathvariant="sans-serif">PROC</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq84.gif"/></alternatives></inline-formula> is the time required to process a pair <italic>i</italic>, <italic>j</italic> of elements of a set <italic>C</italic>, and <italic>Pairs</italic> is the sum of <inline-formula id="IEq85"><alternatives><tex-math id="M171">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$|C|^2$$\end{document}</tex-math><mml:math id="M172"><mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>C</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq85.gif"/></alternatives></inline-formula> over all such sets <italic>C</italic>. We have that <inline-formula id="IEq86"><alternatives><tex-math id="M173">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\textsf {PROC}_{i,j}=\mathcal {O}(k)$$\end{document}</tex-math><mml:math id="M174"><mml:mrow><mml:msub><mml:mi mathvariant="sans-serif">PROC</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi mathvariant="script">O</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq86.gif"/></alternatives></inline-formula> by using RMQ over the LCP array. Additionally, by the stated assumption on the <italic>d</italic> profiles, the expected value for <italic>Pairs</italic> is no more than <inline-formula id="IEq87"><alternatives><tex-math id="M175">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{{\mathcal B}d}{\sigma ^\mathcal{L}}$$\end{document}</tex-math><mml:math id="M176"><mml:mfrac><mml:mrow><mml:mi mathvariant="script">B</mml:mi><mml:mi>d</mml:mi></mml:mrow><mml:msup><mml:mi>σ</mml:mi><mml:mi mathvariant="script">L</mml:mi></mml:msup></mml:mfrac></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq87.gif"/></alternatives></inline-formula>: we have <inline-formula id="IEq88"><alternatives><tex-math id="M177">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\mathcal B}$$\end{document}</tex-math><mml:math id="M178"><mml:mi mathvariant="script">B</mml:mi></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq88.gif"/></alternatives></inline-formula> blocks in total and each block can only match at most <italic>d</italic> other blocks by the conditions above. Hence, the algorithm requires on average the following running time<disp-formula id="Equ3"><alternatives><tex-math id="M179">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \mathcal {O}\left(md + k \cdot \frac{{\mathcal B}d}{\sigma ^{\mathcal{L}}}\right). \end{aligned}$$\end{document}</tex-math><mml:math id="M180" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mi>m</mml:mi><mml:mi>d</mml:mi><mml:mo>+</mml:mo><mml:mi>k</mml:mi><mml:mo>·</mml:mo><mml:mfrac><mml:mrow><mml:mi mathvariant="script">B</mml:mi><mml:mi>d</mml:mi></mml:mrow><mml:msup><mml:mi>σ</mml:mi><mml:mi mathvariant="script">L</mml:mi></mml:msup></mml:mfrac></mml:mfenced><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2017_119_Article_Equ3.gif" position="anchor"/></alternatives></disp-formula>Let us analyze this further to obtain the relevant condition on <italic>k</italic>. We have the following:<disp-formula id="Equ4"><alternatives><tex-math id="M181">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} k \cdot \frac{{\mathcal B}d}{\sigma ^{\mathcal{L}}} = {\frac{k \cdot \lfloor \tfrac{m}{\lfloor m/(k+1) \rfloor}\rfloor \cdot d^2}{\sigma ^ {\lfloor \frac{m}{k+1}\rfloor }}} \le {\frac{k\cdot \left(\tfrac{m}{ \lfloor m/(k+1) \rfloor }\right) \cdot d^2}{\sigma ^ {\frac{m}{k+1}-1}}}. \end{aligned}$$\end{document}</tex-math><mml:math id="M182" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>k</mml:mi><mml:mo>·</mml:mo><mml:mfrac><mml:mrow><mml:mi mathvariant="script">B</mml:mi><mml:mi>d</mml:mi></mml:mrow><mml:msup><mml:mi>σ</mml:mi><mml:mi mathvariant="script">L</mml:mi></mml:msup></mml:mfrac><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>k</mml:mi><mml:mo>·</mml:mo><mml:mrow><mml:mo>⌊</mml:mo><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mfrac><mml:mi>m</mml:mi><mml:mrow><mml:mo>⌊</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">/</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>⌋</mml:mo></mml:mrow></mml:mfrac></mml:mstyle><mml:mo>⌋</mml:mo></mml:mrow><mml:mo>·</mml:mo><mml:msup><mml:mi>d</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:msup><mml:mi>σ</mml:mi><mml:mrow><mml:mo>⌊</mml:mo><mml:mfrac><mml:mi>m</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac><mml:mo>⌋</mml:mo></mml:mrow></mml:msup></mml:mfrac><mml:mo>≤</mml:mo><mml:mfrac><mml:mrow><mml:mi>k</mml:mi><mml:mo>·</mml:mo><mml:mfenced close=")" open="("><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mfrac><mml:mi>m</mml:mi><mml:mrow><mml:mo>⌊</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">/</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>⌋</mml:mo></mml:mrow></mml:mfrac></mml:mstyle></mml:mfenced><mml:mo>·</mml:mo><mml:msup><mml:mi>d</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:msup><mml:mi>σ</mml:mi><mml:mrow><mml:mfrac><mml:mi>m</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mfrac><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2017_119_Article_Equ4.gif" position="anchor"/></alternatives></disp-formula>Since <inline-formula id="IEq89"><alternatives><tex-math id="M183">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$0&lt; k &lt; m$$\end{document}</tex-math><mml:math id="M184"><mml:mrow><mml:mn>0</mml:mn><mml:mo>&lt;</mml:mo><mml:mi>k</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq89.gif"/></alternatives></inline-formula> by hypothesis, we have the following:<disp-formula id="Equ5"><alternatives><tex-math id="M185">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} {\frac{k \cdot \left(\tfrac{m}{ \lfloor m/(k+1) \rfloor }\right) \cdot d^2}{\sigma ^ {\frac{m}{k+1}-1}}} \le {\frac{(md)^2}{\sigma ^ {\frac{m}{k+1}-1}}}. \end{aligned}$$\end{document}</tex-math><mml:math id="M186" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mfrac><mml:mrow><mml:mi>k</mml:mi><mml:mo>·</mml:mo><mml:mfenced close=")" open="("><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mfrac><mml:mi>m</mml:mi><mml:mrow><mml:mo>⌊</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">/</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>⌋</mml:mo></mml:mrow></mml:mfrac></mml:mstyle></mml:mfenced><mml:mo>·</mml:mo><mml:msup><mml:mi>d</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:msup><mml:mi>σ</mml:mi><mml:mrow><mml:mfrac><mml:mi>m</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mfrac><mml:mo>≤</mml:mo><mml:mfrac><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:msup><mml:mi>σ</mml:mi><mml:mrow><mml:mfrac><mml:mi>m</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mfrac><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2017_119_Article_Equ5.gif" position="anchor"/></alternatives></disp-formula>By some simple rearrangements we have that:<disp-formula id="Equ6"><alternatives><tex-math id="M187">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} {\frac{(md)^2}{\sigma ^ {\frac{m}{k+1}-1}}} = {\frac{(md)^2}{(md)^ {\frac{\log \sigma }{\log md} \left(\frac{m}{k+1}-1\right)}}}= (md)^{2-\frac{(m-k-1) \log \sigma }{(k+1) \log md}}. \end{aligned}$$\end{document}</tex-math><mml:math id="M188" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mfrac><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:msup><mml:mi>σ</mml:mi><mml:mrow><mml:mfrac><mml:mi>m</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mfrac><mml:mo>=</mml:mo><mml:mfrac><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mfrac><mml:mrow><mml:mo>log</mml:mo><mml:mi>σ</mml:mi></mml:mrow><mml:mrow><mml:mo>log</mml:mo><mml:mi>m</mml:mi><mml:mi>d</mml:mi></mml:mrow></mml:mfrac><mml:mfenced close=")" open="(" separators=""><mml:mfrac><mml:mi>m</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mfenced></mml:mrow></mml:msup></mml:mfrac><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mo>-</mml:mo><mml:mfrac><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo>-</mml:mo><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>log</mml:mo><mml:mi>σ</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>log</mml:mo><mml:mi>m</mml:mi><mml:mi>d</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:msup><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2017_119_Article_Equ6.gif" position="anchor"/></alternatives></disp-formula>Consequently, in the case when<disp-formula id="Equ7"><alternatives><tex-math id="M189">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} k &lt; \frac{(m-k-1) \cdot \log \sigma }{\log md} \end{aligned}$$\end{document}</tex-math><mml:math id="M190" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>k</mml:mi><mml:mo>&lt;</mml:mo><mml:mfrac><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo>-</mml:mo><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>·</mml:mo><mml:mo>log</mml:mo><mml:mi>σ</mml:mi></mml:mrow><mml:mrow><mml:mo>log</mml:mo><mml:mi>m</mml:mi><mml:mi>d</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2017_119_Article_Equ7.gif" position="anchor"/></alternatives></disp-formula>the algorithm requires <inline-formula id="IEq90"><alternatives><tex-math id="M191">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(md)$$\end{document}</tex-math><mml:math id="M192"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq90.gif"/></alternatives></inline-formula> time on average. The extra space usage is clearly <inline-formula id="IEq91"><alternatives><tex-math id="M193">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(md)$$\end{document}</tex-math><mml:math id="M194"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq91.gif"/></alternatives></inline-formula>. <inline-formula id="IEq92"><alternatives><tex-math id="M195">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\square $$\end{document}</tex-math><mml:math id="M196"><mml:mo>□</mml:mo></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq92.gif"/></alternatives></inline-formula></p>
        </sec>
      </sec>
    </sec>
    <sec id="Sec10">
      <title>Use case 1: goeBURST algorithm</title>
      <p id="Par29">The distance matrix computation is a main step in distance-based methods for phylogenetic inference. This step dominates the running time of most methods, taking <inline-formula id="IEq93"><alternatives><tex-math id="M197">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Theta (m d^2)$$\end{document}</tex-math><mml:math id="M198"><mml:mrow><mml:mi mathvariant="normal">Θ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:msup><mml:mi>d</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq93.gif"/></alternatives></inline-formula> time, for <italic>d</italic> sequences of length <italic>m</italic>, since it must compute the distance among all sequence pairs. But for some methods, or when we are only interested in local phylogenies for sequences or profiles of interest, one does not need to know all pairwise distances for reconstructing a phylogenetic tree. The problem addressed in this article was motivated by the goeBURST algorithm [<xref ref-type="bibr" rid="CR10">10</xref>], our use case 1. goeBURST is one of such methods for which one must know only the pairs of sequences that are at Hamming distance at most <italic>k</italic>. The solution proposed here can however be extended to other distance-based phylogenetic inference methods, that rely directly or indirectly on Hamming distance computations. Note that most methods either consider the Hamming distance or its correction accordingly to some formula based on some model of evolution [<xref ref-type="bibr" rid="CR2">2</xref>, <xref ref-type="bibr" rid="CR4">4</xref>]. In both cases we must start by computing the Hamming distance among sequences, but not necessarily all of them [<xref ref-type="bibr" rid="CR6">6</xref>].</p>
      <p id="Par30">The underlying model of goeBURST is as follows: a given genotype increases in frequency in the population as a consequence of a fitness advantage or of random genetic drift, becoming a founder clone in the population; and this increase is accompanied by a gradual diversification of that genotype, by mutation and recombination, forming a cluster of phylogenetic closely-related strains. This diversification of the “founding” genotype is reflected in the appearance of genetic profiles differing only in one housekeeping gene sequence from this genotype—single locus variants (SLVs). Further diversification of those SLVs will result in the appearance of variations of the original genotype with more than one difference in the allelic profile, e.g., double and triple locus variants (DLVs and TLVs).</p>
      <p id="Par31">The problem solved by goeBURST can be stated as a graphic matroid optimization problem and, hence, it follows a classic greedy approach [<xref ref-type="bibr" rid="CR22">22</xref>]. Given the maximum Hamming distance <italic>k</italic>, we can define a graph <inline-formula id="IEq94"><alternatives><tex-math id="M199">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G = (V, E)$$\end{document}</tex-math><mml:math id="M200"><mml:mrow><mml:mi>G</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq94.gif"/></alternatives></inline-formula>, where <inline-formula id="IEq95"><alternatives><tex-math id="M201">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$V = P$$\end{document}</tex-math><mml:math id="M202"><mml:mrow><mml:mi>V</mml:mi><mml:mo>=</mml:mo><mml:mi>P</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq95.gif"/></alternatives></inline-formula> (set of profiles) and <inline-formula id="IEq96"><alternatives><tex-math id="M203">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$E= \{ (u,v) \in V^{2} \ |\ H(u,v) \le k \}$$\end{document}</tex-math><mml:math id="M204"><mml:mrow><mml:mi>E</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:msup><mml:mi>V</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mspace width="4pt"/><mml:mo stretchy="false">|</mml:mo><mml:mspace width="4pt"/><mml:mi>H</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>≤</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq96.gif"/></alternatives></inline-formula>. The main goal of goeBURST is then to compute a minimum spanning forest for <italic>G</italic> taking into account the distance <italic>H</italic> and a total order on links. It starts with a forest of singleton trees (each sequence/profile is a tree). Then it constructs the optimal forest by adding links connecting profiles in different trees in increasing order accordingly to the total order, similarly to what is done in the Kruskal’s algorithm [<xref ref-type="bibr" rid="CR23">23</xref>]. In the current implementation, a total order for links is implicitly defined based on the distance between sequences, on the number of SLVs, DLVs, TLVs, on the occurrence frequency of sequences, and on the assigned sequence identifier. With this total order, the construction of the tree consists of building a minimum spanning forest in a graph [<xref ref-type="bibr" rid="CR23">23</xref>], where each sequence is a node and the link weights are defined by the total order. By construction, the pairs at distance <inline-formula id="IEq97"><alternatives><tex-math id="M205">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\delta $$\end{document}</tex-math><mml:math id="M206"><mml:mi>δ</mml:mi></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq97.gif"/></alternatives></inline-formula> will be joined before the pairs at distance <inline-formula id="IEq98"><alternatives><tex-math id="M207">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\delta +1$$\end{document}</tex-math><mml:math id="M208"><mml:mrow><mml:mi>δ</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq98.gif"/></alternatives></inline-formula>.</p>
    </sec>
    <sec id="Sec11">
      <title>Use case 2: querying typing databases</title>
      <p id="Par32">A related problem is querying typing databases for similar typing profiles. Given a set <italic>P</italic> of <italic>d</italic> profiles of length <italic>m</italic> each, a profile <italic>u</italic> not necessarily in <italic>P</italic> but with the same length <italic>m</italic> as those in <italic>P</italic>, and <italic>k</italic> such that <inline-formula id="IEq99"><alternatives><tex-math id="M209">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$0&lt;k&lt;m$$\end{document}</tex-math><mml:math id="M210"><mml:mrow><mml:mn>0</mml:mn><mml:mo>&lt;</mml:mo><mml:mi>k</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq99.gif"/></alternatives></inline-formula>, the problem is to find all profiles <inline-formula id="IEq100"><alternatives><tex-math id="M211">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v\in P$$\end{document}</tex-math><mml:math id="M212"><mml:mrow><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mi>P</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq100.gif"/></alternatives></inline-formula> such that <inline-formula id="IEq101"><alternatives><tex-math id="M213">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$H(u,v)\le k$$\end{document}</tex-math><mml:math id="M214"><mml:mrow><mml:mi>H</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>≤</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq101.gif"/></alternatives></inline-formula>. One may be also interested on local phylogenetic patterns, but those can be inferred from found profiles using for instance the goeBURST algorithm.</p>
      <p id="Par33">Once we define the value for <italic>k</italic>, we can address this problem as follows. We index all <italic>d</italic> profiles in the database as before in linear time <inline-formula id="IEq102"><alternatives><tex-math id="M215">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(m d)$$\end{document}</tex-math><mml:math id="M216"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq102.gif"/></alternatives></inline-formula>, and given a query profile <italic>u</italic>, we enumerate all candidate profiles <italic>v</italic>. We then verify as before all candidate pairs and we return only those satisfying <inline-formula id="IEq103"><alternatives><tex-math id="M217">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$H(u,v)\le k$$\end{document}</tex-math><mml:math id="M218"><mml:mrow><mml:mi>H</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>≤</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq103.gif"/></alternatives></inline-formula>.</p>
      <p id="Par34">For indexing set <italic>P</italic>, we make use of the suffix tree data structure. The <italic>suffix tree</italic>
<inline-formula id="IEq104"><alternatives><tex-math id="M219">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {T}(x)$$\end{document}</tex-math><mml:math id="M220"><mml:mrow><mml:mi mathvariant="script">T</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq104.gif"/></alternatives></inline-formula> of a string <italic>x</italic> is a compact trie representing all suffixes of <italic>x</italic>. It is known that the suffix tree of a string of length <italic>n</italic>, over an integer alphabet, can be computed in time and space <inline-formula id="IEq105"><alternatives><tex-math id="M221">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(n)$$\end{document}</tex-math><mml:math id="M222"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq105.gif"/></alternatives></inline-formula> [<xref ref-type="bibr" rid="CR24">24</xref>]. For integer alphabets, in order to access the children of an explicit node of the suffix tree by the first letter of their edge label in <inline-formula id="IEq106"><alternatives><tex-math id="M223">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(1)$$\end{document}</tex-math><mml:math id="M224"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq106.gif"/></alternatives></inline-formula> time, we make use of <italic>perfect hashing</italic> [<xref ref-type="bibr" rid="CR25">25</xref>].</p>
      <p id="Par35">By using the suffix tree we find candidate matches through forward search: spelling blocks of <italic>u</italic> from the root. Specifically, given the <inline-formula id="IEq107"><alternatives><tex-math id="M225">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k+1$$\end{document}</tex-math><mml:math id="M226"><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq107.gif"/></alternatives></inline-formula> non-overlapping blocks of length <inline-formula id="IEq108"><alternatives><tex-math id="M227">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal{L}={\lfloor \tfrac{m}{k+1} \rfloor }$$\end{document}</tex-math><mml:math id="M228"><mml:mrow><mml:mi mathvariant="script">L</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo>⌊</mml:mo><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mfrac><mml:mi>m</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac></mml:mstyle><mml:mo>⌋</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq108.gif"/></alternatives></inline-formula> of <italic>u</italic>, we search (without reporting) for each one of them in <inline-formula id="IEq109"><alternatives><tex-math id="M229">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(\mathcal {L})$$\end{document}</tex-math><mml:math id="M230"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">L</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq109.gif"/></alternatives></inline-formula> time. Since we have <inline-formula id="IEq110"><alternatives><tex-math id="M231">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k+1$$\end{document}</tex-math><mml:math id="M232"><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq110.gif"/></alternatives></inline-formula> blocks, it takes <inline-formula id="IEq111"><alternatives><tex-math id="M233">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(k \mathcal {L}) = \mathcal {O}(m)$$\end{document}</tex-math><mml:math id="M234"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mi mathvariant="script">L</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq111.gif"/></alternatives></inline-formula> time to search for all <inline-formula id="IEq112"><alternatives><tex-math id="M235">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k+1$$\end{document}</tex-math><mml:math id="M236"><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq112.gif"/></alternatives></inline-formula> blocks of <italic>u</italic>. Finally, we can verify and report all candidate profiles <inline-formula id="IEq113"><alternatives><tex-math id="M237">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v\in P$$\end{document}</tex-math><mml:math id="M238"><mml:mrow><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mi>P</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq113.gif"/></alternatives></inline-formula> as detailed in Algorithm 2.<graphic position="anchor" xlink:href="13015_2017_119_Figb_HTML" id="MO13"/></p>
      <p id="Par36">Although, in the worst case, Algorithm 2 runs in time <inline-formula id="IEq114"><alternatives><tex-math id="M239">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(m d + m\log md)$$\end{document}</tex-math><mml:math id="M240"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mi>d</mml:mi><mml:mo>+</mml:mo><mml:mi>m</mml:mi><mml:mo>log</mml:mo><mml:mi>m</mml:mi><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq114.gif"/></alternatives></inline-formula>, as we may have <italic>d</italic> matches at most, we can prove a similar average case as in Theorem <xref ref-type="sec" rid="FPar1">1</xref>.</p>
      <sec id="FPar3">
        <title>
          <bold>Theorem 2</bold>
        </title>
        <p id="Par37">Given a profile <italic>u</italic> and a set of <italic>d</italic> profiles of length <italic>m</italic> each, all over an integer alphabet <inline-formula id="IEq115"><alternatives><tex-math id="M241">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Sigma $$\end{document}</tex-math><mml:math id="M242"><mml:mi mathvariant="normal">Σ</mml:mi></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq115.gif"/></alternatives></inline-formula> of size <inline-formula id="IEq116"><alternatives><tex-math id="M243">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma &gt;1$$\end{document}</tex-math><mml:math id="M244"><mml:mrow><mml:mi>σ</mml:mi><mml:mo>&gt;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq116.gif"/></alternatives></inline-formula>, with the letters of the profiles being independent and identically distributed random variables uniformly distributed over <inline-formula id="IEq117"><alternatives><tex-math id="M245">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Sigma $$\end{document}</tex-math><mml:math id="M246"><mml:mi mathvariant="normal">Σ</mml:mi></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq117.gif"/></alternatives></inline-formula>, the <inline-formula id="IEq118"><alternatives><tex-math id="M247">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {T}(s)$$\end{document}</tex-math><mml:math id="M248"><mml:mrow><mml:mi mathvariant="script">T</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq118.gif"/></alternatives></inline-formula> for the string <italic>s</italic> of length <italic>md</italic> obtained after concatenating the <italic>d</italic> profiles, and the maximum Hamming distance <inline-formula id="IEq119"><alternatives><tex-math id="M249">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$0&lt; k &lt; m$$\end{document}</tex-math><mml:math id="M250"><mml:mrow><mml:mn>0</mml:mn><mml:mo>&lt;</mml:mo><mml:mi>k</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq119.gif"/></alternatives></inline-formula>, Algorithm 2 runs in <inline-formula id="IEq120"><alternatives><tex-math id="M251">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(m)$$\end{document}</tex-math><mml:math id="M252"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq120.gif"/></alternatives></inline-formula> average-case time if<disp-formula id="Equ8"><alternatives><tex-math id="M253">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} k &lt; \frac{(m-k-1) \cdot \log \sigma }{\log m d}. \end{aligned}$$\end{document}</tex-math><mml:math id="M254" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>k</mml:mi><mml:mo>&lt;</mml:mo><mml:mfrac><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo>-</mml:mo><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>·</mml:mo><mml:mo>log</mml:mo><mml:mi>σ</mml:mi></mml:mrow><mml:mrow><mml:mo>log</mml:mo><mml:mi>m</mml:mi><mml:mi>d</mml:mi></mml:mrow></mml:mfrac><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2017_119_Article_Equ8.gif" position="anchor"/></alternatives></disp-formula>
</p>
      </sec>
      <sec id="FPar4">
        <title>
          <italic>Proof</italic>
        </title>
        <p id="Par38">Let us denote by <inline-formula id="IEq121"><alternatives><tex-math id="M255">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal{B}$$\end{document}</tex-math><mml:math id="M256"><mml:mi mathvariant="script">B</mml:mi></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq121.gif"/></alternatives></inline-formula> the total number of blocks over <italic>s</italic> and by <inline-formula id="IEq122"><alternatives><tex-math id="M257">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal{L}$$\end{document}</tex-math><mml:math id="M258"><mml:mi mathvariant="script">L</mml:mi></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq122.gif"/></alternatives></inline-formula> the block length. We set <inline-formula id="IEq123"><alternatives><tex-math id="M259">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal{L}={\lfloor \tfrac{m}{k+1} \rfloor }$$\end{document}</tex-math><mml:math id="M260"><mml:mrow><mml:mi mathvariant="script">L</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo>⌊</mml:mo><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mfrac><mml:mi>m</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac></mml:mstyle><mml:mo>⌋</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq123.gif"/></alternatives></inline-formula> and thus we have that <inline-formula id="IEq124"><alternatives><tex-math id="M261">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\mathcal B} = {d \lfloor \tfrac{m}{{\mathcal L}}\rfloor }$$\end{document}</tex-math><mml:math id="M262"><mml:mrow><mml:mi mathvariant="script">B</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mi>d</mml:mi><mml:mo>⌊</mml:mo><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mfrac><mml:mi>m</mml:mi><mml:mi mathvariant="script">L</mml:mi></mml:mfrac></mml:mstyle><mml:mo>⌋</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq124.gif"/></alternatives></inline-formula>.</p>
        <p id="Par39">By the stated assumption on the profiles, the expected value for the number of profiles matching <italic>u</italic> is no more than <inline-formula id="IEq125"><alternatives><tex-math id="M263">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{\mathcal B}{\sigma ^{\mathcal L}}$$\end{document}</tex-math><mml:math id="M264"><mml:mfrac><mml:mi mathvariant="script">B</mml:mi><mml:msup><mml:mi>σ</mml:mi><mml:mi mathvariant="script">L</mml:mi></mml:msup></mml:mfrac></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq125.gif"/></alternatives></inline-formula>: we have <inline-formula id="IEq126"><alternatives><tex-math id="M265">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal{B}$$\end{document}</tex-math><mml:math id="M266"><mml:mi mathvariant="script">B</mml:mi></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq126.gif"/></alternatives></inline-formula> blocks in total and each block can only match at most one other block in <italic>u</italic> (since <italic>they must be aligned</italic>; line 8).</p>
        <p id="Par40">Moreover, since we are not relying on the LCP array in this case (profile <italic>u</italic> is not indexed), the verification step (line 12) takes <inline-formula id="IEq127"><alternatives><tex-math id="M267">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(m)$$\end{document}</tex-math><mml:math id="M268"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq127.gif"/></alternatives></inline-formula> time using letter comparisons. Hence, the algorithm requires on average the following running time<disp-formula id="Equ9"><alternatives><tex-math id="M269">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \mathcal {O}(m + m \cdot \frac{\mathcal{B}}{\sigma ^{\mathcal{L}}}). \end{aligned}$$\end{document}</tex-math><mml:math id="M270" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo>+</mml:mo><mml:mi>m</mml:mi><mml:mo>·</mml:mo><mml:mfrac><mml:mi mathvariant="script">B</mml:mi><mml:msup><mml:mi>σ</mml:mi><mml:mi mathvariant="script">L</mml:mi></mml:msup></mml:mfrac><mml:mo stretchy="false">)</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2017_119_Article_Equ9.gif" position="anchor"/></alternatives></disp-formula>Let us analyze this further to obtain the relevant condition on <italic>k</italic>. We have the following:<disp-formula id="Equ10"><alternatives><tex-math id="M271">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} m \cdot \frac{\mathcal{B}}{\sigma ^{\mathcal{L}}} = {\frac{m \cdot \lfloor \tfrac{m}{\lfloor m/(k+1) \rfloor }\rfloor \cdot d}{\sigma ^ {\lfloor \frac{m}{k+1}\rfloor }}} \le {\frac{m\cdot (\tfrac{m}{ \lfloor m/(k+1) \rfloor }) \cdot d}{\sigma ^ {\frac{m}{k+1}-1}}} \le {\frac{m^2 d}{\sigma ^ {\frac{m}{k+1}-1}}}. \end{aligned}$$\end{document}</tex-math><mml:math id="M272" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>m</mml:mi><mml:mo>·</mml:mo><mml:mfrac><mml:mi mathvariant="script">B</mml:mi><mml:msup><mml:mi>σ</mml:mi><mml:mi mathvariant="script">L</mml:mi></mml:msup></mml:mfrac><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>m</mml:mi><mml:mo>·</mml:mo><mml:mo>⌊</mml:mo><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mfrac><mml:mi>m</mml:mi><mml:mrow><mml:mo>⌊</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">/</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>⌋</mml:mo></mml:mrow></mml:mfrac></mml:mstyle><mml:mo>⌋</mml:mo><mml:mo>·</mml:mo><mml:mi>d</mml:mi></mml:mrow><mml:msup><mml:mi>σ</mml:mi><mml:mrow><mml:mo>⌊</mml:mo><mml:mfrac><mml:mi>m</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac><mml:mo>⌋</mml:mo></mml:mrow></mml:msup></mml:mfrac><mml:mo>≤</mml:mo><mml:mfrac><mml:mrow><mml:mi>m</mml:mi><mml:mo>·</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mstyle displaystyle="false" scriptlevel="0"><mml:mfrac><mml:mi>m</mml:mi><mml:mrow><mml:mo>⌊</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">/</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>⌋</mml:mo></mml:mrow></mml:mfrac></mml:mstyle><mml:mo stretchy="false">)</mml:mo><mml:mo>·</mml:mo><mml:mi>d</mml:mi></mml:mrow><mml:msup><mml:mi>σ</mml:mi><mml:mrow><mml:mfrac><mml:mi>m</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mfrac><mml:mo>≤</mml:mo><mml:mfrac><mml:mrow><mml:msup><mml:mi>m</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mi>d</mml:mi></mml:mrow><mml:msup><mml:mi>σ</mml:mi><mml:mrow><mml:mfrac><mml:mi>m</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mfrac><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2017_119_Article_Equ10.gif" position="anchor"/></alternatives></disp-formula>By some simple rearrangements we have that:<disp-formula id="Equ11"><alternatives><tex-math id="M273">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} {\frac{m^2 d}{\sigma ^ {\frac{m}{k+1}-1}}} = {\frac{m^2 d}{(md)^ {\frac{\log \sigma }{\log md} (\frac{m}{k+1}-1)}}}= m (md)^{1-\frac{(m-k-1) \log \sigma }{(k+1) \log md}}.\end{aligned}$$\end{document}</tex-math><mml:math id="M274" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mfrac><mml:mrow><mml:msup><mml:mi>m</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mi>d</mml:mi></mml:mrow><mml:msup><mml:mi>σ</mml:mi><mml:mrow><mml:mfrac><mml:mi>m</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mfrac><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msup><mml:mi>m</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mi>d</mml:mi></mml:mrow><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mfrac><mml:mrow><mml:mo>log</mml:mo><mml:mi>σ</mml:mi></mml:mrow><mml:mrow><mml:mo>log</mml:mo><mml:mi>m</mml:mi><mml:mi>d</mml:mi></mml:mrow></mml:mfrac><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mfrac><mml:mi>m</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac><mml:mo>-</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:msup></mml:mfrac><mml:mo>=</mml:mo><mml:mi>m</mml:mi><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mfrac><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo>-</mml:mo><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>log</mml:mo><mml:mi>σ</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>log</mml:mo><mml:mi>m</mml:mi><mml:mi>d</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:msup><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2017_119_Article_Equ11.gif" position="anchor"/></alternatives></disp-formula>Consequently, in the case when<disp-formula id="Equ12"><alternatives><tex-math id="M275">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k &lt; \frac{(m-k-1) \cdot \log \sigma }{\log m d}$$\end{document}</tex-math><mml:math id="M276" display="block"><mml:mrow><mml:mi>k</mml:mi><mml:mo>&lt;</mml:mo><mml:mfrac><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo>-</mml:mo><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>·</mml:mo><mml:mo>log</mml:mo><mml:mi>σ</mml:mi></mml:mrow><mml:mrow><mml:mo>log</mml:mo><mml:mi>m</mml:mi><mml:mi>d</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:math><graphic xlink:href="13015_2017_119_Article_Equ12.gif" position="anchor"/></alternatives></disp-formula>the algorithm requires <inline-formula id="IEq128"><alternatives><tex-math id="M277">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(m)$$\end{document}</tex-math><mml:math id="M278"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq128.gif"/></alternatives></inline-formula> time on average.<inline-formula id="IEq920"><alternatives><tex-math id="M279">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\square $$\end{document}</tex-math><mml:math id="M280"><mml:mo>□</mml:mo></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq920.gif"/></alternatives></inline-formula></p>
        <p>This algorithm was implemented using a suffix array and then integrated in INNUENDO Platform, which is publicly available [<xref ref-type="bibr" rid="CR24">24</xref>]. The INNUENDO Platform is an infrastructure that provides the required framework for data analyses from bacterial raw reads sequencing data quality insurance to the integration of epidemiological data and visualization. As such, rapid methods for classification and search for closely related strains are a necessity for quick navigation through the platform database entries. More information about the project can be found at its website [<xref ref-type="bibr" rid="CR25">25</xref>].</p>
        <p>As a starting point and for the purpose of this study, a subset of 2312 wgMLST profiles of <italic>Escherichia coli</italic> retrieved from Enterobase [<xref ref-type="bibr" rid="CR13">13</xref>] were included in the INNUENDO database as well as their ancillary data and predefined core-genome cluster classification. Two tab-separated files containing the wgMLST and cgMLST profiles for the <italic>E. coli</italic> strains were also created to allow storing information on the currently available profiles and for updating with profiles that will become available upon the platform analyses.</p>
        <p>One of two index files are used depending on the type of search we want to perform: classification or search for <italic>k</italic>-closest. The cgMLST index file is used for strain classification, which relies on a nomenclature designed for the cgMLST profiles. As such, and since a pre-classification was performed on the database of <italic>E. coli</italic> strains, we continued using it for comparison purposes. However, when searching for the <italic>k</italic>-closest profiles, we take into consideration all targets available in the wgMLST profiles using the wgMLST index file for a higher discriminatory power.</p>
        <p>Each time a new profile is generated from the platform, it requires classification. The INNUENDO Platform performs the classification step based on the approach described in our "<xref rid="Sec11" ref-type="sec">Use case 2: querying typing databases</xref>" with a given maximum of <italic>k</italic> differences over core genes. It uses the cgMLST index file for the search since the classification is constructed based on those number of loci. If the method returns at least one match, it classifies the new profile with the classification of the closest. If not, a new classification is assigned. A new entry is then added to the INNUENDO database as well as to the cgMLST and wgMLST profiles files and the index files are updated.</p>
        <p>In the case of the search for the <italic>k</italic>-closest, it is useful to define the input data for visualization methods according to a defined number of differences on close strains. For each profile used as input for the search, the method searches for the <italic>k</italic>-closest strains considering at most <italic>k</italic> differences among all wgMLST loci. Since duplicate matches can occur between the profiles used for each search, the final file used as input for the visualization methods is the intersection of the results of the <italic>k</italic>-closest profiles between each input strain. The set of strain identifiers are then used to query the INNUENDO database to get the profiles and ancillary data to be sent to PHYLOViZ Online [<xref ref-type="bibr" rid="CR26">26</xref>] for further analysis, namely with the goeBURST algorithm.</p>
        <p>The drawback of using this method for classification and search is the need for rebuilding the index each time there is a new profile, which will depend on the number of profile entries on the database. Nevertheless, the number of updates is rather smaller compared to the number of queries and the index can be build in the background, with search functionalities still using the old index during the process. In our implementation, the index and related data structures are serialized in secondary memory and they are accessed by mapping them into memory. The implementation of the underlying tool is made publicly available [<xref ref-type="bibr" rid="CR27">27</xref>].</p>
        <p>The above described approaches in combination with the features offered by the INNUENDO Platform allow microbiologists to quickly and efficiently search for strains close to their strain of interest, allowing a more targeted, focused and simple visualization of results.</p>
      </sec>
    </sec>
  </sec>
  <sec id="Sec12">
    <title>Experimental evaluation</title>
    <p id="Par45">We evaluated the proposed approach to compute the pairs of profiles at distance at most <italic>k</italic> using both real and synthetic datasets. We used real datasets obtained through different typing schemas, namely whole-genome multi-locus sequence typing (wgMLST) data, core-genome multi-locus sequence typing (cgMLST) data, and single-nucleotide polymorphism (SNP) data. Table <xref rid="Tab2" ref-type="table">2</xref> summarizes the real datasets used. We should note that wgMLST and cgMLST datasets contain sequences of integers, where each column corresponds to a locus and different values in the same column denote different alleles. Synthetic datasets comprise sets of binary sequences of variable length, uniformly sampled, allowing us to validate our theoretical findings.</p>
    <p id="Par46">We implemented both versions described above in the C programming language: one based on binary search over the SA; and another one based on finding clusters in the LCP array. Since allelic profiles can be either string of letters or sequences of integers, we relied on libdivsufsort library [<xref ref-type="bibr" rid="CR28">28</xref>] and qsufsort code [<xref ref-type="bibr" rid="CR29">29</xref>, <xref ref-type="bibr" rid="CR30">30</xref>], respectively. For RMQ over the LCP array, we implemented a fast well-known solution that uses constant time per query and linearithmic space for pre-processing [<xref ref-type="bibr" rid="CR17">17</xref>].</p>
    <p id="Par47">All tests were conducted on a machine running Linux, with an Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40 GHz (8 cores, cache 32 KB/4096 KB) and with 32 GB of RAM. All binaries where produced using GCC 5.3 with full optimization enabled.</p>
    <sec id="Sec13">
      <title>Synthetic datasets</title>
      <p id="Par48">We first present results with synthetic data for different values of <italic>d</italic>, <italic>m</italic> and <italic>k</italic>. All synthetic sequences are binary sequences uniformly sampled. Results presented in this section were averaged over ten runs and for five different sets of synthetic data.</p>
      <p id="Par49">The bound proved in Theorem <xref ref-type="sec" rid="FPar1">1</xref> was verified in practice. For <italic>k</italic> satisfying the conditions in Theorem <xref ref-type="sec" rid="FPar1">1</xref>, the running time of our implementation grows almost linearly with <italic>n</italic>, the size of the input. We can observe in Fig. <xref rid="Fig1" ref-type="fig">1</xref> a growth slightly above linear. Since we included the time for constructing the SA, the LCP array and the RMQ data structure, with the last one in linearithmic time, that was expected.</p>
      <p id="Par50">We also tested our method for values of <italic>k</italic> exceeding the bound shown in Theorem <xref ref-type="sec" rid="FPar1">1</xref>. For <inline-formula id="IEq1260"><alternatives><tex-math id="M281">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d=m=4096$$\end{document}</tex-math><mml:math id="M282"><mml:mrow><mml:mi>d</mml:mi><mml:mo>=</mml:mo><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>4096</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq1260.gif"/></alternatives></inline-formula> and a binary alphabet, the bound for <italic>k</italic> given in Theorem <xref ref-type="sec" rid="FPar1">1</xref> is no more than <inline-formula id="IEq1270"><alternatives><tex-math id="M283">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\lfloor m/(2\log m)\rfloor =170$$\end{document}</tex-math><mml:math id="M284"><mml:mrow><mml:mo>⌊</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">/</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo>log</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>⌋</mml:mo><mml:mo>=</mml:mo><mml:mn>170</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq1270.gif"/></alternatives></inline-formula>. For <italic>k</italic> above this bound we expect that proposed approaches are no longer competitive with the naïve approach. As shown in Fig. <xref rid="Fig2" ref-type="fig">2</xref>, for <inline-formula id="IEq1280"><alternatives><tex-math id="M285">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k&gt;250$$\end{document}</tex-math><mml:math id="M286"><mml:mrow><mml:mi>k</mml:mi><mml:mo>&gt;</mml:mo><mml:mn>250</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq1280.gif"/></alternatives></inline-formula> and <inline-formula id="IEq129"><alternatives><tex-math id="M287">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k&gt;270$$\end{document}</tex-math><mml:math id="M288"><mml:mrow><mml:mi>k</mml:mi><mml:mo>&gt;</mml:mo><mml:mn>270</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq129.gif"/></alternatives></inline-formula> respectively, both limits above the predicted bound, the running time for both computing pairwise distances by finding lower and higher bounds in the SA, and by processing LCP based clusters, becomes slower than the running time of the naïve approach.</p>
      <p id="Par51">In Fig. <xref rid="Fig3" ref-type="fig">3</xref> we have the running time as a function of the number <italic>d</italic> of profiles, for different values of <italic>m</italic> and for <italic>k</italic> satisfying the bound given in Theorem <xref ref-type="sec" rid="FPar1">1</xref>. The running time for the naïve approach grows quadratically with <italic>d</italic>, while it grows linearly for both computing pairwise distances by finding lower and higher bounds in the SA, and by processing LCP based clusters. Hence, for synthetic data, as described by Theorem <xref ref-type="sec" rid="FPar1">1</xref>, the result holds.</p>
    </sec>
    <sec id="Sec14">
      <title>Real datasets</title>
      <p id="Par52">For each dataset in Table <xref rid="Tab2" ref-type="table">2</xref>, we ranged the threshold <italic>k</italic> accordingly and compared the approaches discussed in "<xref rid="Sec4" ref-type="sec">Methods</xref>" section with the naïve approach that computes the distance for all sequence pairs. Results are provided in Table <xref rid="Tab3" ref-type="table">3</xref>.</p>
      <p id="Par53">In most cases, the approach based on the LCP clusters is the fastest up to two orders of magnitude compared to the naïve approach. As expected, in the case when data are not uniformly random, our method works reasonably well for smaller values of <italic>k</italic> than the ones implied by the bound in Theorem <xref ref-type="sec" rid="FPar1">1</xref>. As an example, the upper bound on <italic>k</italic> for <italic>C. jejuni</italic> would be around 200, but the running time for the naïve approach is already better for <inline-formula id="IEq130"><alternatives><tex-math id="M289">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k=64$$\end{document}</tex-math><mml:math id="M290"><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>64</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq130.gif"/></alternatives></inline-formula>. We should note however that the number of candidate profile pairs at Hamming distance at most <italic>k</italic> is much higher than the expected number when data are uniformly random. This tells us that we can design a simple hybrid scheme that chooses a strategy (naïve or the proposed method) depending on the nature of the input data. It seems also to point out clustering effects on profile dissimilarities, which we may exploit to improve our results. We leave both tasks as future work for the full version of this article.</p>
      <p id="Par54">We incorporated the approach based on finding lower and higher bounds in the SA in the implementation of goeBURST algorithm, discussed in "<xref rid="Sec4" ref-type="sec">Methods</xref>" section. We did not incorporate the approach based on the LCP clusters as the running time did not improve much as observed above. Since running times are similar to those reported in Table <xref rid="Tab3" ref-type="table">3</xref>, we discuss only the running time for <italic>C. jejuni</italic>. We need only to index the input once. We can then use the index in the different stages of the algorithm and for different values of <italic>k</italic>. In the particular case of goeBURST, we use the index twice: once for computing the number of neighbors at a given distance, used for untying links according to the total order discussed in the description of goeBURST algorithm in methods section, and a second time for enumerating pairs at distance below a given threshold. Note that the goeBURST algorithm does not aim to link all nodes, but to identify clonal complexes (or connected components) for a given threshold on the distance among profiles [<xref ref-type="bibr" rid="CR10">10</xref>]. In the case of <italic>C. jejuni</italic> dataset, and for <inline-formula id="IEq131"><alternatives><tex-math id="M291">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k=52$$\end{document}</tex-math><mml:math id="M292"><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>52</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq131.gif"/></alternatives></inline-formula>, the running time is around 36 s, while the naïve approach takes around 115 s, yielding a threefold speedup. In this case we get several connected components, i.e., several trees, connecting the most similar profiles. We provide the tree for the largest component in Fig. <xref rid="Fig4" ref-type="fig">4</xref>, where each node represents a profile. The nodes are colored according to one of the loci for which profiles in this cluster differ. Note that this tree is optimal with respect to the criterion used by the goeBURST algorithm, not being affected by the threshold on the distance. In fact, since this problem is a graphic matroid, the trees found for a given threshold will be always subtrees of the trees found for larger thresholds [<xref ref-type="bibr" rid="CR22">22</xref>]. Comparing this tree with other inference methods is beyond the scope of this article; the focus here was on the faster computation of an optimal tree under this model.</p>
      <p id="Par55">In many studies, the computation of trees based on pairwise distances below a given threshold, usually small compared with the total number of loci, combined with ancillary data, such as antibiotic resistance and host information, allows microbiologists to uncover evolution patterns and study the mechanisms underlying the transmission of infectious diseases [<xref ref-type="bibr" rid="CR31">31</xref>].</p>
    </sec>
  </sec>
  <sec id="Sec15">
    <title>Conclusions</title>
    <p id="Par56">Most distance-based phylogenetic inference methods rely directly or indirectly on Hamming distance computations. The computation of a distance matrix is a common first step for such methods, taking <inline-formula id="IEq132"><alternatives><tex-math id="M293">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Theta (m d^2)$$\end{document}</tex-math><mml:math id="M294"><mml:mrow><mml:mi mathvariant="normal">Θ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:msup><mml:mi>d</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq132.gif"/></alternatives></inline-formula> time in general, with <italic>d</italic> being the number of sequences or profiles and <italic>m</italic> the length of each sequence or profile. For large-scale datasets this running time may be problematic; however, for some methods, we can avoid to compute all-pairs distances [<xref ref-type="bibr" rid="CR6">6</xref>].</p>
    <p id="Par57">We addressed this problem when only a truncated distance matrix is needed, i.e., one needs to know only which pairs are at Hamming distance at most <italic>k</italic>. This problem was motivated by the goeBURST algorithm [<xref ref-type="bibr" rid="CR10">10</xref>], which relies on a truncated distance matrix by construction. Both the problem and techniques discussed here are related to average-case approximate string matching [<xref ref-type="bibr" rid="CR32">32</xref>, <xref ref-type="bibr" rid="CR33">33</xref>]. We proposed here an average-case linear-time and linear-space algorithm to compute the pairs of sequences or profiles that are at Hamming distance at most <italic>k</italic>, when <inline-formula id="IEq133"><alternatives><tex-math id="M295">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k &lt; \frac{(m-k-1) \cdot \log \sigma }{\log m d}$$\end{document}</tex-math><mml:math id="M296"><mml:mrow><mml:mi>k</mml:mi><mml:mo>&lt;</mml:mo><mml:mfrac><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo>-</mml:mo><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>·</mml:mo><mml:mo>log</mml:mo><mml:mi>σ</mml:mi></mml:mrow><mml:mrow><mml:mo>log</mml:mo><mml:mi>m</mml:mi><mml:mi>d</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq133.gif"/></alternatives></inline-formula>, where <inline-formula id="IEq134"><alternatives><tex-math id="M297">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma $$\end{document}</tex-math><mml:math id="M298"><mml:mi>σ</mml:mi></mml:math><inline-graphic xlink:href="13015_2017_119_Article_IEq134.gif"/></alternatives></inline-formula> is the size of the alphabet. We integrated our solution in goeBURST demonstrating its effectiveness using both real and synthetic datasets.</p>
    <p id="Par58">We must note however that our analysis holds for uniformly random sequences and, hence, as observed with real data, the presented bound may be optimistic. It is thus interesting to investigate how to address this problem taking into account local conserved regions within sequences. Moreover, it might be interesting to consider in the analysis null models such as those used to evaluate the accuracy of distance-based phylogenetic inference methods [<xref ref-type="bibr" rid="CR4">4</xref>].</p>
    <p id="Par59">The proposed approach is particularly useful when one is interested in local phylogenies, i.e., local patterns of evolution, such as searching for similar sequences or profiles in large typing databases, as in our "<xref rid="Sec11" ref-type="sec">Use case 2: querying typing databases</xref>". In this case we do not need to construct full phylogenetic trees, with tens of thousands of taxa. We can focus our search on the most similar sequences or profiles, within a given threshold <italic>k</italic>. There are however some issues to be solved in this scenario, namely, dynamic updating of the data structures used in our algorithm. Note that after querying a database, if new sequences or profiles are identified, then we should be able to add them while keeping our data structures updated. Although more complex and dynamic data structures are known, a technique proposed recently for adding dynamism to otherwise static data structures can be useful to address this issue [<xref ref-type="bibr" rid="CR34">34</xref>]. This and other challenges raised above are left as future work.</p>
  </sec>
</body>
<back>
  <ack>
    <title>Authors' contributions</title>
    <p>MC, APF, SPP and CV conceived the study and contributed for the design and analysis of the methods and experimental evaluation. APF, SPP and CV implemented Algorithm 1 and run the experiments. JAC conceived the case study 2 and contributed with the biological background. APF and BRG implemented Algorithm 2 and integrated it in INNUENDO Platform. All authors contributed to the writing of the manuscript. All authors read and approved the final manuscript.</p>
    <sec id="d29e5466">
      <title>Acknowledgements</title>
      <p>This work was partly supported by the Royal Society International Exchanges Scheme, and by the following projects: BacGenTrack (TUBITAK/0004/2014) funded by FCT (Fundação para a Ciência e a Tecnologia) / Scientific and Technological Research Council of Turkey (Türkiye Bilimsel ve Teknolojik Araşrrma Kurumu, TÜBİTAK), PRECISE (LISBOA-01-0145-FEDER-016394) and ONEIDA (LISBOA-01-0145-FEDER-016417) projects co-funded by FEEI (Fundos Europeus Estruturais e de Investimento) from “Programa Operacional Regional Lisboa 2020” and by national funds from FCT, UID/CEC/500021/2013 funded by national funds from FCT, and INNUENDO project [<xref ref-type="bibr" rid="CR25">25</xref>] co-funded by the European Food Safety Authority (EFSA), grant agreement GP/EFSA/AFSCO/2015/01/CT2 (“New approaches in identifying and characterizing microbial and chemical hazards”). The conclusions, findings, and opinions expressed in this review paper reflect only the view of the authors and not the official position of the European Food Safety Authority (EFSA).</p>
    </sec>
    <sec id="d29e5474">
      <title>Competing interests</title>
      <p>The authors declare that they have no competing interests.</p>
    </sec>
    <sec id="d29e5479">
      <title>Publisher's Note</title>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </sec>
  </ack>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Maiden</surname>
            <given-names>MC</given-names>
          </name>
          <name>
            <surname>Bygraves</surname>
            <given-names>JA</given-names>
          </name>
          <name>
            <surname>Feil</surname>
            <given-names>EJ</given-names>
          </name>
          <name>
            <surname>Morelli</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Russell</surname>
            <given-names>JE</given-names>
          </name>
          <name>
            <surname>Urwin</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>Q</given-names>
          </name>
          <name>
            <surname>Zhou</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Zurth</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Caugant</surname>
            <given-names>DA</given-names>
          </name>
          <name>
            <surname>Feavers</surname>
            <given-names>IM</given-names>
          </name>
          <name>
            <surname>Achtman</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Spratt</surname>
            <given-names>BG</given-names>
          </name>
        </person-group>
        <article-title>Multilocus sequence typing: a portable approach to the identification of clones within populations of pathogenic microorganisms</article-title>
        <source>Proc Natl Acad Sci USA</source>
        <year>1998</year>
        <volume>95</volume>
        <issue>6</issue>
        <fpage>3140</fpage>
        <lpage>3145</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.95.6.3140</pub-id>
        <?supplied-pmid 9501229?>
        <pub-id pub-id-type="pmid">9501229</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Huson</surname>
            <given-names>DH</given-names>
          </name>
          <name>
            <surname>Rupp</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Scornavacca</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <source>Phylogenetic networks: concepts, algorithms and applications</source>
        <year>2010</year>
        <publisher-loc>New York</publisher-loc>
        <publisher-name>Cambridge University Press</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Robinson</surname>
            <given-names>DA</given-names>
          </name>
          <name>
            <surname>Feil</surname>
            <given-names>EJ</given-names>
          </name>
        </person-group>
        <source>Bacterial population genetics in infectious disease</source>
        <year>2010</year>
        <publisher-loc>Hoboken</publisher-loc>
        <publisher-name>Wiley</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Saitou</surname>
            <given-names>N</given-names>
          </name>
        </person-group>
        <source>Introduction to evolutionary genomics</source>
        <year>2013</year>
        <publisher-loc>London</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Desper</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Gascuel</surname>
            <given-names>O</given-names>
          </name>
        </person-group>
        <article-title>Fast and accurate phylogeny reconstruction algorithms based on the minimum-evolution principle</article-title>
        <source>J Comput Biol</source>
        <year>2002</year>
        <volume>9</volume>
        <issue>5</issue>
        <fpage>687</fpage>
        <lpage>705</lpage>
        <pub-id pub-id-type="doi">10.1089/106652702761034136</pub-id>
        <?supplied-pmid 12487758?>
        <pub-id pub-id-type="pmid">12487758</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Pardi</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Gascuel</surname>
            <given-names>O</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Kliman </surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Distance-based methods in phylogenetics</article-title>
        <source>Encyclopedia of evolutionary biology</source>
        <year>2016</year>
        <publisher-loc>Oxford</publisher-loc>
        <publisher-name>Elsevier</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Feil</surname>
            <given-names>EJ</given-names>
          </name>
          <name>
            <surname>Holmes</surname>
            <given-names>EC</given-names>
          </name>
          <name>
            <surname>Bessen</surname>
            <given-names>DE</given-names>
          </name>
          <name>
            <surname>Chan</surname>
            <given-names>M-S</given-names>
          </name>
          <name>
            <surname>Day</surname>
            <given-names>NP</given-names>
          </name>
          <name>
            <surname>Enright</surname>
            <given-names>MC</given-names>
          </name>
          <name>
            <surname>Goldstein</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Hood</surname>
            <given-names>DW</given-names>
          </name>
          <name>
            <surname>Kalia</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Moore</surname>
            <given-names>CE</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Recombination within natural populations of pathogenic bacteria: short-term empirical estimates and long-term phylogenetic consequences</article-title>
        <source>Proc Natl Acad Sci</source>
        <year>2001</year>
        <volume>98</volume>
        <issue>1</issue>
        <fpage>182</fpage>
        <lpage>187</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.98.1.182</pub-id>
        <?supplied-pmid 11136255?>
        <pub-id pub-id-type="pmid">11136255</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yang</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Rannala</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Molecular phylogenetics: principles and practice</article-title>
        <source>Nat Rev Genet</source>
        <year>2012</year>
        <volume>13</volume>
        <issue>5</issue>
        <fpage>303</fpage>
        <lpage>314</lpage>
        <pub-id pub-id-type="doi">10.1038/nrg3186</pub-id>
        <?supplied-pmid 22456349?>
        <pub-id pub-id-type="pmid">22456349</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Feil</surname>
            <given-names>EJ</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>BC</given-names>
          </name>
          <name>
            <surname>Aanensen</surname>
            <given-names>DM</given-names>
          </name>
          <name>
            <surname>Hanage</surname>
            <given-names>WP</given-names>
          </name>
          <name>
            <surname>Spratt</surname>
            <given-names>BG</given-names>
          </name>
        </person-group>
        <article-title>eBURST: inferring patterns of evolutionary descent among clusters of related bacterial genotypes from multilocus sequence typing data</article-title>
        <source>J Bacteriol</source>
        <year>2004</year>
        <volume>186</volume>
        <issue>5</issue>
        <fpage>1518</fpage>
        <lpage>1530</lpage>
        <pub-id pub-id-type="doi">10.1128/JB.186.5.1518-1530.2004</pub-id>
        <?supplied-pmid 14973027?>
        <pub-id pub-id-type="pmid">14973027</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Francisco</surname>
            <given-names>AP</given-names>
          </name>
          <name>
            <surname>Bugalho</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Ramirez</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Global optimal eBURST analysis of multilocus typing data using a graphic matroid approach</article-title>
        <source>BMC Bioinform</source>
        <year>2009</year>
        <volume>10</volume>
        <issue>1</issue>
        <fpage>152</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-10-152</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Saitou</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Nei</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>The neighbor-joining method: a new method for reconstructing phylogenetic trees</article-title>
        <source>Mol Biol Evol</source>
        <year>1987</year>
        <volume>4</volume>
        <issue>4</issue>
        <fpage>406</fpage>
        <lpage>425</lpage>
        <?supplied-pmid 3447015?>
        <pub-id pub-id-type="pmid">3447015</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sokal</surname>
            <given-names>RR</given-names>
          </name>
        </person-group>
        <article-title>A statistical method for evaluating systematic relationships</article-title>
        <source>Univ Kans Sci Bull</source>
        <year>1958</year>
        <volume>38</volume>
        <fpage>1409</fpage>
        <lpage>1438</lpage>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <mixed-citation publication-type="other">Sergean M, Zhou Z, Alikhan NF, Achtman M. EnteroBase. <ext-link ext-link-type="uri" xlink:href="https://enterobase.warwick.ac.uk/">https://enterobase.warwick.ac.uk/</ext-link>. Accessed 31 Oct 2017.</mixed-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jolley</surname>
            <given-names>KA</given-names>
          </name>
          <name>
            <surname>Maiden</surname>
            <given-names>MCJ</given-names>
          </name>
        </person-group>
        <article-title>BIGSdb: scalable analysis of bacterial genome variation at the population level</article-title>
        <source>BMC Bioinform</source>
        <year>2010</year>
        <volume>11</volume>
        <fpage>595</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-11-595</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <mixed-citation publication-type="other">Crochemore M, Francisco AP, Pissis SP, Vaz C. Towards distance-based phylogenetic inference in average-case linear-time. In: Schwartz R, Reinert K (eds.) 17th international workshop on algorithms in bioinformatics (WABI 2017). Leibniz International Proceedings in Informatics (LIPIcs), vol. 88, p. 9–1914. Schloss Dagstuhl–Leibniz-Zentrum fuer Informatik, Dagstuhl, Germany. 2017. 10.4230/LIPIcs.WABI.2017.9. <ext-link ext-link-type="uri" xlink:href="http://drops.dagstuhl.de/opus/volltexte/2017/7652">http://drops.dagstuhl.de/opus/volltexte/2017/7652</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Manber</surname>
            <given-names>U</given-names>
          </name>
          <name>
            <surname>Myers</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>Suffix arrays: a new method for on-line string searches</article-title>
        <source>SIAM J Comput</source>
        <year>1993</year>
        <volume>22</volume>
        <issue>5</issue>
        <fpage>935</fpage>
        <lpage>948</lpage>
        <pub-id pub-id-type="doi">10.1137/0222058</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <mixed-citation publication-type="other">Bender MA, Farach-Colton M. The LCA problem revisited. In: LATIN 2000: theoretical informatics: 4th Latin American symposium. Lecture notes in computer Sscience, vol. 1776, p. 88–94. Springer, Berlin, Heidelberg. 2000. 10.1007/10719839_9.</mixed-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bender</surname>
            <given-names>MA</given-names>
          </name>
          <name>
            <surname>Farach-Colton</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Pemmasani</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Skiena</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Sumazin</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Lowest common ancestors in trees and directed acyclic graphs</article-title>
        <source>J Algorithms</source>
        <year>2005</year>
        <volume>57</volume>
        <issue>2</issue>
        <fpage>75</fpage>
        <lpage>94</lpage>
        <pub-id pub-id-type="doi">10.1016/j.jalgor.2005.08.001</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kärkkäinen</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Sanders</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Burkhardt</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Linear work suffix array construction</article-title>
        <source>J ACM</source>
        <year>2006</year>
        <volume>53</volume>
        <issue>6</issue>
        <fpage>918</fpage>
        <lpage>936</lpage>
        <pub-id pub-id-type="doi">10.1145/1217856.1217858</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <mixed-citation publication-type="other">Ko P, Aluru S. Space efficient linear time construction of suffix arrays. In: Annual symposium on combinatorial pattern matching. Lecture notes in computer science, vol. 2676, p. 200–10. Springer, Berlin, Heidelberg. 2003. 10.1016/j.jda.2004.08.002.</mixed-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <mixed-citation publication-type="other">Kasai T, Lee G, Arimura H, Arikawa S, Park K. Linear-time longest-common-prefix computation in suffix arrays and its applications. In: Annual symposium on combinatorial pattern matching. Springer. 2001. p. 181–92. 10.1007/3-540-48194-X.</mixed-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Papadimitriou</surname>
            <given-names>CH</given-names>
          </name>
          <name>
            <surname>Steiglitz</surname>
            <given-names>K</given-names>
          </name>
        </person-group>
        <source>Combinatorial optimization: algorithms and complexity</source>
        <year>1982</year>
        <publisher-loc>Upper Saddle River</publisher-loc>
        <publisher-name>Prentice-Hall Inc</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kruskal</surname>
            <given-names>JB</given-names>
          </name>
        </person-group>
        <article-title>On the shortest spanning subtree of a graph and the traveling salesman problem</article-title>
        <source>Proc Am Math Soc</source>
        <year>1956</year>
        <volume>7</volume>
        <issue>1</issue>
        <fpage>48</fpage>
        <lpage>50</lpage>
        <pub-id pub-id-type="doi">10.1090/S0002-9939-1956-0078686-7</pub-id>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <mixed-citation publication-type="other">B-UMMI: INNUENDO platform. <ext-link ext-link-type="uri" xlink:href="https://github.com/B-UMMI/INNUENDO">https://github.com/B-UMMI/INNUENDO</ext-link>. Accessed 31 Oct 2017.</mixed-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <mixed-citation publication-type="other">INNUENDO: a novel cross-sectorial platform for the integration of genomics in surveillance of foodborne pathogens. <ext-link ext-link-type="uri" xlink:href="http://www.innuendoweb.org/">http://www.innuendoweb.org/</ext-link>. Accessed 31 Oct 2017.</mixed-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ribeiro-Gonçalves</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Francisco</surname>
            <given-names>AP</given-names>
          </name>
          <name>
            <surname>Vaz</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Ramirez</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Carriço</surname>
            <given-names>JA</given-names>
          </name>
        </person-group>
        <article-title>PHYLOViZ online: web-based tool for visualization, phylogenetic inference, analysis and sharing of minimum spanning trees</article-title>
        <source>Nucleic Acids Res</source>
        <year>2016</year>
        <volume>44</volume>
        <issue>Webserver–Issue</issue>
        <fpage>246</fpage>
        <lpage>251</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkw359</pub-id>
      </element-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <mixed-citation publication-type="other">B-UMMI: fast MLST searching and querying. <ext-link ext-link-type="uri" xlink:href="https://github.com/B-UMMI/fast-mlst">https://github.com/B-UMMI/fast-mlst</ext-link>. Accessed 31 Oct 2017.</mixed-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <mixed-citation publication-type="other">Mori Y. A lightweight suffix-sorting library. <ext-link ext-link-type="uri" xlink:href="https://github.com/y-256/libdivsufsort">https://github.com/y-256/libdivsufsort</ext-link>. Accessed 31 Oct 2017.</mixed-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <mixed-citation publication-type="other">Larsson NJ, Sadakane K. Suffix sorting implementation to accompany the paper Faster Suffix Sorting. <ext-link ext-link-type="uri" xlink:href="http://www.larsson.dogma.net/qsufsort.c">http://www.larsson.dogma.net/qsufsort.c</ext-link>. Accessed 31 Oct 2017.</mixed-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Larsson</surname>
            <given-names>NJ</given-names>
          </name>
          <name>
            <surname>Sadakane</surname>
            <given-names>K</given-names>
          </name>
        </person-group>
        <article-title>Faster suffix sorting</article-title>
        <source>Theor Comput Sci</source>
        <year>2007</year>
        <volume>387</volume>
        <issue>3</issue>
        <fpage>258</fpage>
        <lpage>272</lpage>
        <pub-id pub-id-type="doi">10.1016/j.tcs.2007.07.017</pub-id>
      </element-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Francisco</surname>
            <given-names>AP</given-names>
          </name>
          <name>
            <surname>Vaz</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Monteiro</surname>
            <given-names>PT</given-names>
          </name>
          <name>
            <surname>Melo-Cristino</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Ramirez</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Carriço</surname>
            <given-names>JA</given-names>
          </name>
        </person-group>
        <article-title>PHYLOViZ: phylogenetic inference and data visualization for sequence based typing methods</article-title>
        <source>BMC Bioinform</source>
        <year>2012</year>
        <volume>13</volume>
        <issue>1</issue>
        <fpage>87</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-13-87</pub-id>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fredriksson</surname>
            <given-names>K</given-names>
          </name>
        </person-group>
        <article-title>Average-optimal single and multiple approximate string matching</article-title>
        <source>ACM J Exp Algorithm</source>
        <year>2004</year>
        <volume>9</volume>
        <fpage>1</fpage>
        <lpage>4</lpage>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Barton</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Iliopoulos</surname>
            <given-names>CS</given-names>
          </name>
          <name>
            <surname>Pissis</surname>
            <given-names>SP</given-names>
          </name>
        </person-group>
        <article-title>Fast algorithms for approximate circular string matching</article-title>
        <source>Algorithms Mol Biol</source>
        <year>2014</year>
        <volume>9</volume>
        <fpage>9</fpage>
        <pub-id pub-id-type="doi">10.1186/1748-7188-9-9</pub-id>
        <?supplied-pmid 24656145?>
        <pub-id pub-id-type="pmid">24656145</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <mixed-citation publication-type="other">Munro JI, Nekrich Y, Vitter JS. Dynamic data structures for document collections and graphs. In: Proceedings of the 34th ACM symposium on principles of database systems. ACM, New York, NY, USA. 2015. 10.1145/2745754.2745778.</mixed-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nascimento</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Sousa</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Ramirez</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Francisco</surname>
            <given-names>AP</given-names>
          </name>
          <name>
            <surname>Carriço</surname>
            <given-names>JA</given-names>
          </name>
          <name>
            <surname>Vaz</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>PHYLOViZ 2.0: providing scalable data integration and visualization for multiple phylogenetic inference methods</article-title>
        <source>Bioinformatics</source>
        <year>2017</year>
        <volume>33</volume>
        <issue>1</issue>
        <fpage>128</fpage>
        <lpage>129</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btw582</pub-id>
        <?supplied-pmid 27605102?>
        <pub-id pub-id-type="pmid">27605102</pub-id>
      </element-citation>
    </ref>
    <ref id="CR36">
      <label>36.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Page</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Taylor</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Delaney</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Soares</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Seemann</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Keane</surname>
            <given-names>JA</given-names>
          </name>
          <name>
            <surname>Harris</surname>
            <given-names>SR</given-names>
          </name>
        </person-group>
        <article-title>SNP-sites: rapid efficient extraction of SNPs from multi-FASTA alignments</article-title>
        <source>Microbial Genom</source>
        <year>2016</year>
        <volume>2</volume>
        <issue>4</issue>
        <fpage>e000056</fpage>
      </element-citation>
    </ref>
    <ref id="CR37">
      <label>37.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Croucher</surname>
            <given-names>NJ</given-names>
          </name>
          <name>
            <surname>Finkelstein</surname>
            <given-names>JA</given-names>
          </name>
          <name>
            <surname>Pelton</surname>
            <given-names>SI</given-names>
          </name>
          <name>
            <surname>Mitchell</surname>
            <given-names>PK</given-names>
          </name>
          <name>
            <surname>Lee</surname>
            <given-names>GM</given-names>
          </name>
          <name>
            <surname>Parkhill</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Bentley</surname>
            <given-names>SD</given-names>
          </name>
          <name>
            <surname>Hanage</surname>
            <given-names>WP</given-names>
          </name>
          <name>
            <surname>Lipsitch</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Population genomics of post-vaccine changes in pneumococcal epidemiology</article-title>
        <source>Nat Genet</source>
        <year>2013</year>
        <volume>45</volume>
        <issue>6</issue>
        <fpage>656</fpage>
        <lpage>663</lpage>
        <pub-id pub-id-type="doi">10.1038/ng.2625</pub-id>
        <?supplied-pmid 23644493?>
        <pub-id pub-id-type="pmid">23644493</pub-id>
      </element-citation>
    </ref>
    <ref id="CR38">
      <label>38.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chewapreecha</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Harris</surname>
            <given-names>SR</given-names>
          </name>
          <name>
            <surname>Croucher</surname>
            <given-names>NJ</given-names>
          </name>
          <name>
            <surname>Turner</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Marttinen</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Cheng</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Pessia</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Aanensen</surname>
            <given-names>DM</given-names>
          </name>
          <name>
            <surname>Mather</surname>
            <given-names>AE</given-names>
          </name>
          <name>
            <surname>Page</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Salter</surname>
            <given-names>SJ</given-names>
          </name>
          <name>
            <surname>Harris</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Nosten</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Goldblatt</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Corander</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Parkhill</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Turner</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Bentley</surname>
            <given-names>SD</given-names>
          </name>
        </person-group>
        <article-title>Dense genomic sampling identifies highways of pneumococcal recombination</article-title>
        <source>Nat Genet</source>
        <year>2014</year>
        <volume>46</volume>
        <issue>3</issue>
        <fpage>305</fpage>
        <lpage>309</lpage>
        <pub-id pub-id-type="doi">10.1038/ng.2895</pub-id>
        <?supplied-pmid 24509479?>
        <pub-id pub-id-type="pmid">24509479</pub-id>
      </element-citation>
    </ref>
    <ref id="CR39">
      <label>39.</label>
      <mixed-citation publication-type="other">National Center for Biotechnology Information: GeneBank. <ext-link ext-link-type="uri" xlink:href="ftp://ftp.ncbi.nih.gov/genomes/archive/old_genbank/Bacteria/">ftp://ftp.ncbi.nih.gov/genomes/archive/old_genbank/Bacteria/</ext-link>. Accessed 31 Oct 2017.</mixed-citation>
    </ref>
  </ref-list>
</back>

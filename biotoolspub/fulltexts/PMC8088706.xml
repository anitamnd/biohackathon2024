<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Res Notes</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Res Notes</journal-id>
    <journal-title-group>
      <journal-title>BMC Research Notes</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1756-0500</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">8088706</article-id>
    <article-id pub-id-type="publisher-id">5573</article-id>
    <article-id pub-id-type="doi">10.1186/s13104-021-05573-0</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research Note</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Wellmap: a file format for microplate layouts</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-0051-5867</contrib-id>
        <name>
          <surname>Kundert</surname>
          <given-names>Kale</given-names>
        </name>
        <address>
          <email>kale@thekunderts.net</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <aff id="Aff1"><institution-wrap><institution-id institution-id-type="GRID">grid.38142.3c</institution-id><institution-id institution-id-type="ISNI">000000041936754X</institution-id><institution>Wyss Institute for Biologically Inspired Engineering, </institution><institution>Harvard University, </institution></institution-wrap>Boston, MA 02138 USA </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>1</day>
      <month>5</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>1</day>
      <month>5</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2021</year>
    </pub-date>
    <volume>14</volume>
    <elocation-id>164</elocation-id>
    <history>
      <date date-type="received">
        <day>29</day>
        <month>12</month>
        <year>2020</year>
      </date>
      <date date-type="accepted">
        <day>15</day>
        <month>4</month>
        <year>2021</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2021</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold>This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Objective</title>
        <p id="Par1">Microplates are ubiquitous in biological research because they make it easy to collect data for hundreds of different conditions in a single experiment. Despite this, there is no standard method to annotate the wealth of data contained in each plate.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">We introduce a new file format, called wellmap, for describing the layout of wells on microplates. The format is text-based and emphasizes being easy to read, write, and share. It is capable of describing any layout for any experiment. It is also accompanied by a tool for generating clear visualizations of layout files, and a simple API for parsing layout files in analysis scripts written in python or R. We have used wellmap in our own research to annotate data from a wide variety of experiments, including qPCR and flow cytometry. Given the large number of experiments that make use of microplates, it is our hope that other researchers will find this file format as useful as we have. For complete instructions on how to install and use wellmap, visit: <ext-link ext-link-type="uri" xlink:href="https://wellmap.rtfd.io">https://wellmap.rtfd.io</ext-link>.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>File format</kwd>
      <kwd>Microplate</kwd>
      <kwd>24-well</kwd>
      <kwd>96-well</kwd>
      <kwd>384-well</kwd>
      <kwd>Python</kwd>
      <kwd>R</kwd>
      <kwd>TOML</kwd>
    </kwd-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2021</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Introduction</title>
    <p id="Par8">24-, 96-, and 384-well plates are ubiquitous in biological research because they make it easy to collect data for hundreds of different conditions in a single experiment. Once the data have been collected, though, annotating which conditions were tested in which wells is more of a challenge than it might seem. These annotations must be easy to create, because a typical scientist might perform several microplate experiments every day. They must be easy to check for mistakes, because mislabeling the data could spoil the entire experiment. They must be easy to understand, because others might need to interpret the data without the help of the original scientist. And they must be easy to incorporate into analysis scripts, because the purpose of annotating data is to analyze them.</p>
    <p id="Par9">In the absence of a standard way to annotate microplate data, a number of ad hoc approaches have come into wide use. Unfortunately, none satisfy all the criteria listed above. Perhaps the worst approach is to describe plate layouts in a paper lab notebook. Such descriptions are easy to create, but hard to share, hard to keep associated with the data, hard to check for omissions or ambiguities, and impossible to use directly in analysis scripts. Another flawed approach is to hard-code layout information directly into analysis scripts. These scripts are both hard to write and hard for others to understand. They also encourage copy-and-pasting to perform similar analyses on different layouts, which makes it harder to fix bugs or otherwise improve the scripts. A better approach is to record layouts using spreadsheet files (e.g. CSV, TSV, XLSX). These files are easy to understand, and can be stored alongside the data so that they are unlikely to be lost. That said, spreadsheets are highly redundant because each condition must be specified separately for each well it applies to. This redundancy makes spreadsheets both tedious to create and prone to mistakes. It is also not trivial to parse annotations from a spreadsheet and associate them with raw data for analysis, although there are tools such as plater [<xref ref-type="bibr" rid="CR1">1</xref>] or plate_maps [<xref ref-type="bibr" rid="CR2">2</xref>] that can make this easier. Finally, some instruments come with proprietary software that can be used to specify plate layouts for experiments involving that instrument. These programs usually make it easy to create and visually check layouts, but they suffer from a lack of flexibility. Analysis is typically limited to a handful of options pre-programmed into the software, sharing layouts may require others to purchase the same software, some programs have arbitrary limits on the number of conditions per well or plates per analysis, and of course, these programs are not available for all instruments or all experiments. Overall, there is a need for a better way to annotate microplate data.</p>
    <p id="Par10">Here we address this need by introducing a file format, called wellmap, that can be used to describe any layout for any kind of microplate experiment. This file format is easy to write: The syntax is based on the established TOML configuration file format [<xref ref-type="bibr" rid="CR3">3</xref>], and can be learned from just a few examples. There is minimal redundancy, so even complex layouts can be described succinctly. The file format is easy to check for mistakes: A program is provided to create visual maps of wellmap files, where any mistakes will stand out. The file format is easy to share: It is a text-based format, so no special software is required to read or write it. Additionally, the syntax is well-documented and intuitive enough that it can be understood even by those unfamiliar with it. Finally, the file format is easy to parse: Parsers are provided for python and R, the two most common languages used for the analysis of biological data. In both languages, the parsed layout is returned as a tidy [<xref ref-type="bibr" rid="CR4">4</xref>] data frame. We hope that the wellmap file format will replace the existing methods for annotating microplate data and thereby make these experiments easier to annotate and analyze.</p>
  </sec>
  <sec id="Sec2">
    <title>Main text</title>
    <sec id="Sec3">
      <title>Workflow</title>
      <p id="Par11">The wellmap workflow has two steps. The first is to write a file that describes the plate layout for a particular experiment, and the second is to write an analysis script that makes use of the information in said layout file. Key aspects of both steps are highlighted below. For more in-depth and up-to-date information, refer to the online documentation: <ext-link ext-link-type="uri" xlink:href="https://wellmap.rtfd.io">https://wellmap.rtfd.io</ext-link>.</p>
      <sec id="Sec4">
        <title>Creating wellmap files</title>
        <p id="Par12">Wellmap files are organized into groups of wells, such as “row A”, “columns 3–5”, “a 2 × 2 block with A1 in the top left”, etc. Each well group can be associated with any number of experimental parameters, such as “mutant: Y37A”, “concentration: <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$100\,\upmu \hbox {g}/\hbox {mL}$$\end{document}</tex-math><mml:math id="M2"><mml:mrow><mml:mn>100</mml:mn><mml:mspace width="0.166667em"/><mml:mi mathvariant="normal">μ</mml:mi><mml:mtext>g</mml:mtext><mml:mo stretchy="false">/</mml:mo><mml:mtext>mL</mml:mtext></mml:mrow></mml:math><inline-graphic xlink:href="13104_2021_5573_Article_IEq1.gif"/></alternatives></inline-formula>”, “timepoint: 30 min”, etc. For example, the following snippet specifies that row A contains the Y37A mutant: <graphic position="anchor" xlink:href="13104_2021_5573_Figa_HTML" id="MO1"/></p>
        <p id="Par13">The wellmap file format is based on TOML [<xref ref-type="bibr" rid="CR3">3</xref>], a format that emphasizes being easy to read and write by hand. Typically, square brackets are used to identify groups of wells and any “key = value” lines that follow are used to specify experimental parameters for those wells. Note however that all of the following are equivalent: <graphic position="anchor" xlink:href="13104_2021_5573_Figb_HTML" id="MO2"/></p>
        <p id="Par14">Figure <xref rid="Fig1" ref-type="fig">1</xref> demonstrates most of the well groups that can be used in a wellmap file. Rows, columns, and blocks are particularly useful. Although not shown here, wellmap also supports (i) specifying layouts that span multiple plates, (ii) reusing information between related layouts, (iii) annotating layouts with metadata such as the name of the experimenter or the path to the raw data. See the online documentation for more information: <ext-link ext-link-type="uri" xlink:href="https://wellmap.rtfd.io">https://wellmap.rtfd.io</ext-link>.<fig id="Fig1"><label>Fig. 1</label><caption><p>A demonstration of the most commonly-used well groups. <bold>a</bold> A contrived layout that uses seven different well groups. Each row specifies a different value for the “x” parameter, each column a different value for the “y” parameter, etc. <bold>b</bold> A visualization of the layout in <bold>a</bold>, as rendered by the wellmap command-line program. In each heatmap, the cells represent different wells and the colors represent different values of the parameter indicated on the y-axis</p></caption><graphic xlink:href="13104_2021_5573_Fig1_HTML" id="MO3"/></fig><fig id="Fig2"><label>Fig. 2</label><caption><p>A real-life example of a layout used for a Bradford assay. <bold>a</bold> A layout file describing just the concentrations of a standard curve, which may be relevant to many layouts. These concentrations come specifically from the Pierce BCA Protein Assay Kit (ThermoFisher #23225). <bold>b</bold> A layout file describing the assay itself, including which mutants are being tested and what dilutions are being used. <bold>c</bold> A visualization of the layout in <bold>b</bold>, as rendered by the wellmap command-line program</p></caption><graphic xlink:href="13104_2021_5573_Fig2_HTML" id="MO4"/></fig></p>
        <p id="Par15">Once a layout file has been written, it is important to double-check that it does not contain any mistakes. The best way to do this is to look at a visualization of the layout, such as those in Figs. <xref rid="Fig1" ref-type="fig">1</xref> and <xref rid="Fig2" ref-type="fig">2</xref>. These visualizations were generated by a command-line program that is distributed with wellmap. Installing and using this program is quite simple: <graphic position="anchor" xlink:href="13104_2021_5573_Figc_HTML" id="MO5"/></p>
      </sec>
      <sec id="Sec5">
        <title>Parsing wellmap files</title>
        <p id="Par16">An important feature of the wellmap file format is that it can be easily parsed for use in analysis scripts. The API, which is available for both python and R, consists of a single load() function that parses a layout file and returns a tidy [<xref ref-type="bibr" rid="CR4">4</xref>] data frame with a row for each well and a column for each experimental parameter. This data frame can subsequently be merged with unlabeled data to label each datum with the parameters specified in the layout file. The load() function can also perform this merge automatically, if requested.</p>
        <p id="Par17">In many cases, converting an existing analysis script to use wellmap will take little effort and will make the script both simpler and more powerful. Little effort because the wellmap API uses standard data types and follows the “Unix philosophy” of doing just one thing (and doing it well) [<xref ref-type="bibr" rid="CR5">5</xref>]. Simpler because any code that was previously devoted to determining layout information can be replaced with a single command to parse a wellmap file. More powerful because the script will be able to analyze any layout that provides the expected experimental parameters, regardless of how the wells are organized on the plate.</p>
      </sec>
    </sec>
    <sec id="Sec6">
      <title>Discussion</title>
      <p id="Par18">Any project that uses scripts to analyze microplate data can benefit from wellmap. The file format itself is not specific to any particular experiment; it simply describes how wells are organized on plates. In our own research, we have applied wellmap to layouts from a broad range of experiments including quantitative polymerase chain reaction (qPCR), flow cytometry, enzyme-linked immunosorbent assays (ELISA), Bradford assays, Miller assays, and minimum inhibitory concentration (MIC) assays. Furthermore, incorporating wellmap into a project is not an onerous process. There are just two steps, both compatible with any workflow. First, write a short text file describing the layout of each experiment. Second, adapt any analysis scripts to load information from said files using a simple API.</p>
      <p id="Par19">There are several noteworthy advantages to using wellmap instead of an ad hoc approach to record plate layouts. The first is that wellmap makes it easier to write robust, reusable analysis scripts. Because all of the layout information is specified externally and parsed into a consistent format, the same analysis script will work seamlessly for any layout. And because the layout file can contain all the information needed for the analysis (even information that isn’t associated with particular wells, like the paths to the raw data files), the analysis will be easy to reproduce.</p>
      <p id="Par20">The second advantage is that the wellmap file format encourages good data management practices. A key principle of data management is that data should be maintained in a state where anyone (especially those not familiar with the project) could understand it. Wellmap is consistent with this principle because the file format is intuitive, easy-to-read, open-source, and well-documented. Another key principle of data management is that metadata should be kept in the same place as the data they describe, so that the two are less likely to be separated. Wellmap files are simple text files that can easily be stored alongside the data, and that can also specify the path(s) to the data file(s) in question. Both of these factors establish a strong link between the data and the metadata.</p>
      <p id="Par21">The third advantage is that several features of the wellmap file format combine to defend against mistakes. Foremost of these features is the ability to generate clear visual maps of layouts to check for mistakes. But also important is the fact that the file format avoids redundancy. When each piece of information is only specified in one place, errors are both harder to make and easier to fix. Similarly, using a single layout file for both note-keeping and analysis eliminates the possibility of there being discrepancies between the two.</p>
      <p id="Par22">Other packages have been developed to help analyze microplate data, but wellmap is the only one that provides a file format specifically designed for this task. Most of these alternatives use spreadsheet files, which are disadvantageous for the reasons discussed in the introduction. plater is an R library for parsing plate layouts from spreadsheet files into tidy data frames [<xref ref-type="bibr" rid="CR1">1</xref>]. It has excellent documentation and is easy to use, but is only available for R (not python) and does not provide a graphical tool for visualizing plate layouts. plate_maps is a command-line script for converting plate layouts stored in spreadsheet files into tidy CSV or TSV files [<xref ref-type="bibr" rid="CR2">2</xref>]. It can be used with any scripting language, but cannot visualize layouts or merge layouts with experimental data. Several other packages have the ability to load plate layouts from files (mostly spreadsheets), but do not make that information readily available to analysis scripts [<xref ref-type="bibr" rid="CR6">6</xref>–<xref ref-type="bibr" rid="CR8">8</xref>]. Mostly these packages have some other focus, such as analyzing data from RNAi experiments [<xref ref-type="bibr" rid="CR6">6</xref>] or simulating robotic pipetting protocols [<xref ref-type="bibr" rid="CR7">7</xref>].</p>
      <p id="Par23">As a demonstration of everything described here, Fig. <xref rid="Fig2" ref-type="fig">2</xref> shows a wellmap file that was used in a real experiment. In this case, the experiment is a Bradford assay [<xref ref-type="bibr" rid="CR9">9</xref>] meant to measure the concentrations of several purified protein mutants. This layout has several notable features. The first is that the standard curve is factored into its own file, so that it can be reused between experiments. This will make it especially easy to specify layouts for future Bradford assays. The second is that the layout seamlessly combines row-oriented, column-oriented, and block-oriented features. The “columns” in the standard curve are actually 1-by-3 blocks—because columns grow to fill all available rows, and the standard curve is meant to be included in layouts with any number of rows—but it is clear that the file format can succinctly describe layouts with realistic levels of complexity. Third, the [bradford] section provides information on how to parse and interpret the data, namely what format the data is in (since different plate readers export data in different formats) and what wavelengths were measured. With this information, the layout file contains all the information needed to analyze the results of the experiment.</p>
    </sec>
    <sec id="Sec7">
      <title>Conclusion</title>
      <p id="Par24">The wellmap file format provides an improved way to annotate data from microplate experiments, which are ubiquitous in biological research. Plate layouts are described using simple text files, which can quickly be written and readily be understood. These files can then be directly used for both visualization and analysis. Incorporating wellmap into an analysis pipeline is straight-forward and offers benefits ranging from greater flexibility to better data management. In summary, we hope that this software will be broadly useful to the large community of scientists who routinely perform microplate experiments.</p>
    </sec>
  </sec>
  <sec id="Sec8">
    <title>Limitations</title>
    <p id="Par25">
      <list list-type="bullet">
        <list-item>
          <p id="Par26">Using wellmap requires the ability to program in either python or R. For this reason, wellmap will be most useful to researchers who are already in the habit of writing their own analysis scripts for microplate experiments.</p>
        </list-item>
        <list-item>
          <p id="Par27">There are currently no third-party packages that use wellmap to analyze data from specific kinds of experiments (e.g. qPCR) or instruments (e.g. plate readers). Such packages would make it easier to get started with wellmap, especially for non-programmers. We have plans to develop some packages like these in the future, though.</p>
        </list-item>
      </list>
    </p>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>API:</term>
        <def>
          <p id="Par3">Application programming interface</p>
        </def>
      </def-item>
      <def-item>
        <term>CSV:</term>
        <def>
          <p id="Par4">Comma-separated values</p>
        </def>
      </def-item>
      <def-item>
        <term>TSV:</term>
        <def>
          <p id="Par5">Tab-separated values</p>
        </def>
      </def-item>
      <def-item>
        <term>XLSX:</term>
        <def>
          <p id="Par6">Microsoft Excel open XML spreadsheet</p>
        </def>
      </def-item>
      <def-item>
        <term>TOML:</term>
        <def>
          <p id="Par7">Tom’s obvious minimal language</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher's Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>Not applicable.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors' contributions</title>
    <p>KK conceived the software, implemented it, and wrote the manuscript. The author read and approved the final manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>Not applicable.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>Project name: wellmap</p>
    <p>Project home page: <ext-link ext-link-type="uri" xlink:href="https://wellmap.rtfd.io/">https://wellmap.rtfd.io/</ext-link></p>
    <p>Operating system(s): Platform independent</p>
    <p>Programming language: Python, R</p>
    <p>Other requirements: Python&gt;=3.6 or R&gt;=3.0</p>
    <p>License: MIT</p>
    <p>Any restrictions to use by non-academics: No.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar2">
      <title>Ethics approval and consent to participate</title>
      <p id="Par28">Not applicable.</p>
    </notes>
    <notes id="FPar3">
      <title>Consent for publication</title>
      <p id="Par29">Not applicable.</p>
    </notes>
    <notes id="FPar4" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par30">Not applicable.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <mixed-citation publication-type="other">Hughes S. plater. <ext-link ext-link-type="uri" xlink:href="https://cran.r-project.org/web/packages/plater/vignettes/plater-basics.html">https://cran.r-project.org/web/packages/plater/vignettes/plater-basics.html</ext-link></mixed-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <mixed-citation publication-type="other">Jones R. plate<inline-formula id="IEq3"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$_{-}$$\end{document}</tex-math><mml:math id="M4"><mml:msub><mml:mrow/><mml:mo>-</mml:mo></mml:msub></mml:math><inline-graphic xlink:href="13104_2021_5573_Article_IEq3.gif"/></alternatives></inline-formula>maps. <ext-link ext-link-type="uri" xlink:href="https://github.com/craic/plate_maps">https://github.com/craic/plate_maps</ext-link></mixed-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <mixed-citation publication-type="other">TOML: Tom’s Obvious, Minimal Language. <ext-link ext-link-type="uri" xlink:href="https://github.com/toml-lang/toml">https://github.com/toml-lang/toml</ext-link></mixed-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <mixed-citation publication-type="other">Wickham H. Tidy data. Journal of Statistical Software. 59(1):1–23. 10.18637/jss.v059.i10.</mixed-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Raymond</surname>
            <given-names>ES</given-names>
          </name>
        </person-group>
        <source>The Art of UNIX Programming</source>
        <year>2004</year>
        <publisher-loc>Boston</publisher-loc>
        <publisher-name>Addison-Wesley Professional</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <mixed-citation publication-type="other">Boutros M, Brás L.P, Wolfgang H. Analysis of cell-based RNAi screens. Genome Biology. 7(7):66. 10.1186/gb-2006-7-7-R66.</mixed-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <mixed-citation publication-type="other">Zulkower V. plateo. <ext-link ext-link-type="uri" xlink:href="https://edinburgh-genome-foundry.github.io/Plateo/index.html">https://edinburgh-genome-foundry.github.io/Plateo/index.html</ext-link></mixed-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <mixed-citation publication-type="other">Bernard F. BioPlate. <ext-link ext-link-type="uri" xlink:href="https://hatoris.github.io/BioPlate/index.html">https://hatoris.github.io/BioPlate/index.html</ext-link></mixed-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <mixed-citation publication-type="other">Bradford M.M. A rapid and sensitive method for the quantitation of microgram quantities of protein utilizing the principle of protein-dye binding. Analytical Biochemistry. 72(1):248–54. 10.1016/0003-2697(76)90527-3.</mixed-citation>
    </ref>
  </ref-list>
</back>

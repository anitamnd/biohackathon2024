<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6006848</article-id>
    <article-id pub-id-type="publisher-id">2242</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-018-2242-y</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>SamSelect: a sample sequence selection algorithm for quorum planted motif search on large DNA datasets</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Yu</surname>
          <given-names>Qiang</given-names>
        </name>
        <address>
          <email>qyu@mail.xidian.edu.cn</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Wei</surname>
          <given-names>Dingbang</given-names>
        </name>
        <address>
          <email>weidingbang1992@163.com</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-5436-1851</contrib-id>
        <name>
          <surname>Huo</surname>
          <given-names>Hongwei</given-names>
        </name>
        <address>
          <email>hwhuo@mail.xidian.edu.cn</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <aff id="Aff1"><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 0707 115X</institution-id><institution-id institution-id-type="GRID">grid.440736.2</institution-id><institution>School of Computer Science and Technology, </institution><institution>Xidian University, </institution></institution-wrap>Xi’an, 710071 China </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>18</day>
      <month>6</month>
      <year>2018</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>18</day>
      <month>6</month>
      <year>2018</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2018</year>
    </pub-date>
    <volume>19</volume>
    <elocation-id>228</elocation-id>
    <history>
      <date date-type="received">
        <day>2</day>
        <month>2</month>
        <year>2018</year>
      </date>
      <date date-type="accepted">
        <day>12</day>
        <month>6</month>
        <year>2018</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s). 2018</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold>This article is distributed under the terms of the Creative Commons Attribution 4.0 International License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">Given a set of <italic>t n</italic>-length DNA sequences, <italic>q</italic> satisfying 0 &lt; <italic>q</italic> ≤ 1, and <italic>l</italic> and <italic>d</italic> satisfying 0 ≤ <italic>d</italic> &lt; <italic>l</italic> &lt; <italic>n</italic>, the quorum planted motif search (qPMS) finds <italic>l</italic>-length strings that occur in at least <italic>qt</italic> input sequences with up to <italic>d</italic> mismatches and is mainly used to locate transcription factor binding sites in DNA sequences. Existing qPMS algorithms have been able to efficiently process small standard datasets (e.g., <italic>t</italic> = 20 and <italic>n</italic> = 600), but they are too time consuming to process large DNA datasets, such as ChIP-seq datasets that contain thousands of sequences or more.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">We analyze the effects of <italic>t</italic> and <italic>q</italic> on the time performance of qPMS algorithms and find that a large <italic>t</italic> or a small <italic>q</italic> causes a longer computation time. Based on this information, we improve the time performance of existing qPMS algorithms by selecting a sample sequence set <italic>D</italic>’ with a small <italic>t</italic> and a large <italic>q</italic> from the large input dataset <italic>D</italic> and then executing qPMS algorithms on <italic>D</italic>’. A sample sequence selection algorithm named SamSelect is proposed. The experimental results on both simulated and real data show (1) that SamSelect can select <italic>D</italic>’ efficiently and (2) that the qPMS algorithms executed on <italic>D</italic>’ can find implanted or real motifs in a significantly shorter time than when executed on <italic>D</italic>.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p id="Par3">We improve the ability of existing qPMS algorithms to process large DNA datasets from the perspective of selecting high-quality sample sequence sets so that the qPMS algorithms can find motifs in a short time in the selected sample sequence set <italic>D</italic>’, rather than take an unfeasibly long time to search the original sequence set <italic>D</italic>. Our motif discovery method is an approximate algorithm.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Quorum planted motif search</kwd>
      <kwd>Sample sequences</kwd>
      <kwd>Transcription factor binding sites</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100001809</institution-id>
            <institution>National Natural Science Foundation of China</institution>
          </institution-wrap>
        </funding-source>
        <award-id>61502366</award-id>
        <award-id>61373044</award-id>
        <principal-award-recipient>
          <name>
            <surname>Yu</surname>
            <given-names>Qiang</given-names>
          </name>
          <name>
            <surname>Huo</surname>
            <given-names>Hongwei</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>National Natural Science Foundation of China</institution>
        </funding-source>
        <award-id>61741215</award-id>
        <principal-award-recipient>
          <name>
            <surname>Huo</surname>
            <given-names>Hongwei</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>Fundamental Research Funds for the Central Universities</institution>
        </funding-source>
        <award-id>XJS17092</award-id>
        <principal-award-recipient>
          <name>
            <surname>Yu</surname>
            <given-names>Qiang</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2018</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par8">DNA motif discovery is a key factor in locating regulatory elements (e.g., transcription factor binding sites) in DNA sequences [<xref ref-type="bibr" rid="CR1">1</xref>–<xref ref-type="bibr" rid="CR4">4</xref>]. The quorum planted motif search (qPMS) [<xref ref-type="bibr" rid="CR5">5</xref>, <xref ref-type="bibr" rid="CR6">6</xref>], a widely studied formulation for motif discovery, defines a motif as an <italic>l</italic>-length string (<italic>l</italic>-mer) <italic>m</italic> that occurs in at least <italic>qt</italic> out of <italic>t n</italic>-length (<italic>n</italic> &gt; <italic>l</italic>) input sequences with up to <italic>d</italic> (0 ≤ <italic>d</italic> &lt; <italic>l</italic>) mismatches, where <italic>q</italic> (0 &lt; <italic>q</italic> ≤ 1) is the proportion of the input sequences containing motif occurrences; <italic>m</italic> and its occurrences in the sequences are called an (<italic>l</italic>, <italic>d</italic>) motif and its instances, respectively. Given a set of <italic>t n</italic>-length DNA sequences <italic>D =</italic> {<italic>s</italic><sub>1</sub>, <italic>s</italic><sub>2</sub>, …, <italic>s</italic><sub><italic>t</italic></sub>} containing a motif <italic>m</italic> and the parameters <italic>l</italic>, <italic>d</italic> and <italic>q</italic> describing <italic>m</italic>, the task of qPMS is to find all (<italic>l</italic>, <italic>d</italic>) motifs present in <italic>D</italic> such that <italic>m</italic> must exist in the found motifs.</p>
    <p id="Par9">qPMS is NP-complete [<xref ref-type="bibr" rid="CR7">7</xref>]. Over the past two decades, there have been many studies on qPMS algorithms [<xref ref-type="bibr" rid="CR8">8</xref>–<xref ref-type="bibr" rid="CR11">11</xref>]. The qPMS algorithms are based on searching possible combinations of motif instances or possible candidate motifs and are either sample driven or pattern driven. The sample-driven qPMS algorithms, such as WINNOWER [<xref ref-type="bibr" rid="CR5">5</xref>], DPCFG [<xref ref-type="bibr" rid="CR12">12</xref>] and RecMotif [<xref ref-type="bibr" rid="CR13">13</xref>], have an initial search space of (<italic>n</italic> – <italic>l</italic> + 1)<sup><italic>t</italic></sup><italic>t</italic>-tuples (<italic>x</italic><sub>1</sub>, <italic>x</italic><sub>2</sub>, …, <italic>x</italic><sub><italic>t</italic></sub>) in the case of <italic>q</italic> = 1; each <italic>t</italic> tuple is composed of <italic>t l</italic>-mers from <italic>t</italic> input sequences, i.e., a group of possible motif instances. The pattern-driven qPMS algorithms have an initial search space of 4<sup><italic>l</italic></sup> candidate motifs and verify if each candidate motif is an (<italic>l</italic>, <italic>d</italic>) motif. Because of the much smaller initial search space, the pattern-driven qPMS algorithms usually exhibit better time performance than the sample-driven qPMS algorithms.</p>
    <p id="Par10">The time performance of the pattern-driven qPMS algorithms depends mainly on two aspects: the number of candidate motifs and the efficiency of candidate motif verification. To speed up candidate motif verification, the suffix tree-based pattern driven (stpd) qPMS algorithms, such as Speller [<xref ref-type="bibr" rid="CR14">14</xref>], Weeder [<xref ref-type="bibr" rid="CR15">15</xref>], RISOTTO [<xref ref-type="bibr" rid="CR16">16</xref>] and FMotif [<xref ref-type="bibr" rid="CR17">17</xref>], construct a suffix tree of input sequences. The basic procedure for verifying a candidate motif <italic>m</italic> is then as follows: match <italic>m</italic> along different paths from the suffix tree root and record the current number of mismatches <italic>e</italic> on each path; if <italic>e</italic> is greater than <italic>d</italic>, then terminate the match on the corresponding path; and if the <italic>l</italic>-length paths with <italic>e</italic> ≤ <italic>d</italic> correspond to a group of strings that can span at least <italic>qt</italic> input sequences, then <italic>m</italic> is determined to be an (<italic>l</italic>, <italic>d</italic>) motif.</p>
    <p id="Par11">With a focus on reducing the number of candidate motifs, some algorithms combine the sample-driven and pattern-driven approaches. These are called sample-pattern-driven (spd) qPMS algorithms. In the sample-driven phase, these algorithms use <italic>t</italic> – <italic>qt</italic> + <italic>h</italic> reference sequences, which must contain at least <italic>h</italic> motif instances, and traverse all the <italic>h</italic>-tuples (<italic>x</italic><sub>1</sub>, <italic>x</italic><sub>2</sub>, …, <italic>x</italic><sub><italic>h</italic></sub>) in these reference sequences. An <italic>h</italic>-tuple consists of <italic>h l</italic>-mers from different reference sequences, i.e., a group of <italic>h</italic> possible motif instances. In the pattern-driven phase, these algorithms generate common <italic>d</italic>-neighbors of each <italic>h</italic>-tuple (a <italic>d</italic>-neighbor of an <italic>h</italic>-tuple is an <italic>l</italic>-mer <italic>y</italic> such that the Hamming distance between <italic>y</italic> and each <italic>l</italic>-mer <italic>x</italic><sub><italic>i</italic></sub> in the <italic>h</italic>-tuple is less than or equal to <italic>d</italic>), and take them as candidate motifs to verify one by one. The existing spd qPMS algorithms can be classified according to the different values of <italic>h</italic>, as follows: PMSP [<xref ref-type="bibr" rid="CR18">18</xref>] and PMSprune [<xref ref-type="bibr" rid="CR6">6</xref>] have <italic>h</italic> = 1, PairMotif [<xref ref-type="bibr" rid="CR19">19</xref>], qPMS7 [<xref ref-type="bibr" rid="CR20">20</xref>] and TravStrR [<xref ref-type="bibr" rid="CR21">21</xref>] have <italic>h</italic> = 2, iTriplet [<xref ref-type="bibr" rid="CR22">22</xref>] and PMS5 [<xref ref-type="bibr" rid="CR23">23</xref>] have <italic>h</italic> = 3, and PMS8 [<xref ref-type="bibr" rid="CR24">24</xref>] and qPMS9 [<xref ref-type="bibr" rid="CR25">25</xref>] have <italic>h</italic> ≥ 3.</p>
    <p id="Par12">The existing qPMS algorithms currently perform well when processing traditional standard DNA datasets [<xref ref-type="bibr" rid="CR5">5</xref>] (e.g., <italic>t</italic> = 20, <italic>n</italic> = 600), even for challenging (<italic>l</italic>, <italic>d</italic>) problem instances [<xref ref-type="bibr" rid="CR26">26</xref>]. However, these algorithms encounter bottlenecks when processing large DNA datasets, such as the ChIP-seq datasets [<xref ref-type="bibr" rid="CR9">9</xref>, <xref ref-type="bibr" rid="CR27">27</xref>], which typically contain thousands of DNA sequences or even more. ChIP-seq datasets enable the identification of transcription factor binding sites within the genome but present a significant computational challenge for qPMS. First, the sample-driven qPMS algorithms undergo a combinatorial explosion because the search space grows exponentially with the number <italic>t</italic> of DNA sequences. Second, for the stpd qPMS algorithms, the running time shows quadratic growth as <italic>t</italic> increases and also increases as <italic>q</italic> decreases (see the analysis in the section Why to Select Sample Sequences). Third, for the spd qPMS algorithms, there are too many <italic>h</italic>-tuples to be considered in the <italic>t</italic> – <italic>qt</italic> + <italic>h</italic> reference sequences, greatly extending the time required. Therefore, it is necessary to accelerate the existing qPMS algorithms for large DNA datasets.</p>
    <p id="Par13">As described above, the time performance of the qPMS algorithms is affected by both the number <italic>t</italic> of input sequences and the proportion <italic>q</italic> of the input sequences containing motif instances; specifically, a large <italic>t</italic> or a small <italic>q</italic> will increase the computation time for both the stpd and the spd qPMS algorithms. Consider a dataset <italic>D</italic> of a motif <italic>m</italic> such that there are <italic>qt</italic> sequences containing instances of <italic>m</italic> in a total of <italic>t</italic> sequences and a subset <italic>D</italic>’ of <italic>D</italic> such that there are <italic>q</italic>’<italic>t</italic>’ sequences containing instances of <italic>m</italic> in a total of <italic>t</italic>’ sequences, satisfying 0 &lt; <italic>t</italic>’ &lt; <italic>t</italic> and 1 ≥ <italic>q</italic>’ &gt; <italic>q</italic> &gt; 0. It is not difficult to find that when a qPMS algorithm is executed on <italic>D</italic> and <italic>D</italic>’ separately, the motif <italic>m</italic> can be found in both cases, and the running time on <italic>D</italic>’ can be significantly smaller than that on <italic>D</italic>. Based on this consideration, given a large DNA dataset <italic>D</italic>, one way to effectively improve the time performance of qPMS algorithms is to select a portion of the sequences from <italic>D</italic> to form a sample sequence set <italic>D</italic>’, making the proportion of the sequences containing motif instances higher in <italic>D</italic>’ than in <italic>D</italic>, and then execute qPMS algorithms on <italic>D</italic>’ to perform motif discovery.</p>
    <p id="Par14">In this paper, we analyze why the selection of sample sequences for the qPMS algorithms is important. Then, we propose a method of selecting sample sequences. Additionally, we use both simulated data and real data to validate the ability of the qPMS algorithms to perform motif discovery on the selected sample sequences, i.e., whether they can find the implanted or real motifs in a significantly shorter time.</p>
  </sec>
  <sec id="Sec2">
    <title>Methods</title>
    <sec id="Sec3">
      <title>Why to select sample sequences</title>
      <p id="Par15">The notations frequently used in this paper are summarized in Table <xref rid="Tab1" ref-type="table">1</xref>.<table-wrap id="Tab1"><label>Table 1</label><caption><p>Notations used in this paper</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Notation</th><th>Explanation</th></tr></thead><tbody><tr><td><italic>|x|</italic></td><td>The length of a string or the size of a set.</td></tr><tr><td>Σ</td><td>The DNA alphabet, Σ = {A, C, G, T}.</td></tr><tr><td><italic>l-mer</italic></td><td>An <italic>l</italic>-length string over Σ.</td></tr><tr><td><italic>s</italic>[<italic>i</italic>]</td><td>The <italic>i</italic>th character in the string <italic>s</italic>.</td></tr><tr><td><italic>s</italic>[<italic>i</italic>..<italic>j</italic>]</td><td>A substring of the string <italic>s</italic> from the <italic>i</italic>th position to the <italic>j</italic>th position.</td></tr><tr><td><italic>s</italic>∙<italic>s</italic>’</td><td>The concatenation of two strings <italic>s</italic> and <italic>s</italic>’.</td></tr><tr><td><italic>x</italic> ∈<sub><italic>l</italic></sub><italic>s</italic></td><td>The string <italic>x</italic> is an <italic>l</italic>-length substring of the string <italic>s</italic>. In other words, <italic>x</italic> is an <italic>l</italic>-mer in the string <italic>s</italic>.</td></tr><tr><td><italic>x</italic> ∈<sub><italic>l</italic></sub><italic>D</italic></td><td>The string <italic>x</italic> is an <italic>l</italic>-length substring of the sequence set <italic>D</italic>. In other words, there exists <italic>s</italic> ∈ <italic>D</italic> such that <italic>x</italic> ∈<sub><italic>l</italic></sub><italic>s</italic>.</td></tr><tr><td><italic>D =</italic> {<italic>s</italic><sub>1</sub>, <italic>s</italic><sub>2</sub>, …, <italic>s</italic><sub><italic>t</italic></sub>}, <italic>t</italic>, <italic>n</italic>, <italic>q</italic>, <italic>l</italic>, <italic>d</italic></td><td>Notations for the input. <italic>D</italic> is the input DNA sequence set, where each sequence <italic>s</italic><sub><italic>i</italic></sub> is an <italic>n</italic>-length string over Σ; <italic>t</italic> = |<italic>D</italic>|; <italic>n</italic> = |<italic>s</italic><sub><italic>i</italic></sub>| for 1 ≤ <italic>i</italic> ≤ <italic>t</italic>; <italic>q</italic> is the proportion of the input sequences containing motif instances in <italic>D</italic>; <italic>l</italic> is the motif length and <italic>d</italic> is the maximum number of mismatches between a motif and its instance.</td></tr><tr><td><italic>D</italic>’, <italic>t</italic>’, <italic>q</italic>’</td><td>Notations for the output. <italic>D</italic>’ is a sample sequence set selected from <italic>D</italic>, i.e., <italic>D</italic>’ ⊂ <italic>D</italic>; <italic>t</italic>’ = |<italic>D</italic>’|; <italic>q</italic>’ is the proportion of the input sequences containing motif instances in <italic>D</italic>’.</td></tr><tr><td><italic>count</italic><sub><italic>k</italic></sub>(<italic>x</italic>)</td><td>The count (number of occurrences) of a string <italic>x</italic> in <italic>D</italic> with up to <italic>k</italic> mismatches, represented by (4).</td></tr><tr><td><italic>count</italic>(<italic>x</italic>)</td><td>The count (number of occurrences) of a string <italic>x</italic> in <italic>D</italic>.</td></tr><tr><td><italic>d</italic><sub><italic>H</italic></sub>(<italic>y</italic>, <italic>x</italic>)</td><td>The Hamming distance between two strings <italic>y</italic> and <italic>x</italic> of equal length.</td></tr><tr><td><italic>B</italic><sub><italic>k</italic></sub>(<italic>x</italic>)</td><td>The set of <italic>k</italic>-neighbors of a string <italic>x</italic>, i.e., the set of strings with Hamming distance no more than <italic>k</italic> from <italic>x</italic>. <italic>B</italic><sub><italic>k</italic></sub>(<italic>x</italic>) = {<italic>y</italic>: <italic>y</italic> ∈ Σ<sup>|<italic>x</italic>|</sup>, <italic>d</italic><sub><italic>H</italic></sub>(<italic>y</italic>, <italic>x</italic>) ≤ <italic>k</italic>}.</td></tr><tr><td><italic>stn</italic>(<italic>y</italic>)</td><td>The integer obtained by conversion from a string <italic>y</italic> over Σ. The characters A, C, G and T are converted to binary numbers 00, 01, 10 and 11, respectively. Because of the need to compute <italic>count</italic><sub><italic>k</italic></sub>(<italic>y</italic>), <italic>y</italic> is first reversed and then converted to an integer. For example, if <italic>y</italic> = AC, then <italic>y</italic> is converted to the binary number 0100, i.e., the decimal number 4.</td></tr></tbody></table></table-wrap></p>
      <p id="Par16">Fixing (<italic>l</italic>, <italic>d</italic>) and the length <italic>n</italic> of a single sequence, we analyze the effects of the number <italic>t</italic> of input sequences and the proportion <italic>q</italic> of the input sequences containing motif instances on the time performance of qPMS algorithms. We analyze the stpd and the spd qPMS algorithms.</p>
      <p id="Par17">The stpd qPMS algorithms construct a suffix tree of <italic>t n</italic>-length input sequences [<xref ref-type="bibr" rid="CR14">14</xref>]. In the tree, each edge is labeled with a non-empty substring of the input sequences, and each node <italic>v</italic> corresponds to a string <italic>str</italic><sub><italic>v</italic></sub> representing the concatenation of the substrings on the path from the root of tree to <italic>v</italic>. If <italic>v</italic> is a leaf, then <italic>str</italic><sub><italic>v</italic></sub> is a suffix of input sequences; otherwise, <italic>str</italic><sub><italic>v</italic></sub> is a common prefix of the suffixes represented by all leaves under <italic>v</italic>. The suffix tree has exactly <italic>tn</italic> leaves, representing <italic>tn</italic> suffixes of input sequences. For each node <italic>v</italic> of the tree, the IDs of sequences in which <italic>str</italic><sub><italic>v</italic></sub> occurs exactly are stored by using a vector of <italic>t</italic> bits for good storage efficiency.</p>
      <p id="Par18">In addition to the suffix tree, these algorithms also use a pattern tree, a complete quadtree of depth <italic>l</italic> representing all the patterns over Σ with length ranging from 1 to <italic>l</italic>. Then, they perform a depth-first search on the pattern tree. When visiting a node <italic>v</italic> corresponding to a pattern <italic>p</italic>, they use the suffix tree to obtain the IDs of sequences in which all <italic>d</italic>-neighbors of <italic>p</italic> occur exactly, i.e., the IDs of sequences in which <italic>p</italic> occurs with up to <italic>d</italic> mismatches. If the number of the sequence IDs obtained is greater than or equal to <italic>qt</italic> and the length of <italic>p</italic> is less than <italic>l</italic>, they continue to visit the children of <italic>v</italic> corresponding to the patterns <italic>pb</italic> (<italic>b</italic> ∈ Σ) and otherwise prune the subtree of <italic>v</italic>. Finally, they output all the <italic>l</italic>-length patterns that span at least <italic>qt</italic> sequences.</p>
      <p id="Par19">The time and space complexity of the stpd qPMS algorithms can be evaluated as follows [<xref ref-type="bibr" rid="CR14">14</xref>]. The suffix tree of <italic>t n</italic>-length sequences has <italic>tn</italic> leaves and thus up to <italic>tn</italic> nodes of <italic>l</italic>-length strings; for each such node <italic>v</italic> in the suffix tree, at most |<italic>B</italic><sub><italic>d</italic></sub>(<italic>str</italic><sub><italic>v</italic></sub>)| patterns in the pattern tree have up to <italic>d</italic> mismatches with <italic>str</italic><sub><italic>v</italic></sub>; for each such pattern <italic>y</italic>, when it is verified as a candidate motif, the node <italic>v</italic> needs to be visited once, and the binary OR operation is executed on the vector of <italic>t</italic> bits in <italic>O</italic>(<italic>t</italic>) time. Therefore, the time complexity is <italic>O</italic>(<italic>t</italic><sup>2</sup><italic>n</italic>|<italic>B</italic><sub><italic>d</italic></sub>(<italic>str</italic><sub><italic>v</italic></sub>)|), which is approximately <italic>O</italic>(<italic>t</italic><sup>2</sup><italic>nl</italic><sup><italic>d</italic></sup>4<sup><italic>d</italic></sup>). Since a vector of <italic>t</italic> bits is stored in each of <italic>O</italic>(<italic>tn</italic>) nodes of the suffix tree, the space complexity is <italic>O</italic>(<italic>t</italic><sup>2</sup><italic>n</italic>/<italic>w</italic>), where <italic>w</italic> is the word size of the computer.</p>
      <p id="Par20">We find that <italic>t</italic> has a strong effect on both the time and space performance of the stpd qPMS algorithms, i.e., both the running time and the storage space show quadratic growth as <italic>t</italic> increases. Furthermore, although <italic>q</italic> does not appear in the time complexity evaluated above, it also affects the time performance because it affects the pruning efficiency when searching the pattern tree. As described above, the subtree of a node <italic>v</italic> corresponding to a pattern <italic>p</italic> that cannot span at least <italic>qt</italic> sequences is pruned. If <italic>q</italic> is small, then <italic>p</italic> has a higher probability <italic>P</italic><sub>span</sub> of spanning at least <italic>qt</italic> sequences (<italic>P</italic><sub>span</sub> is calculated by (1), where <italic>P</italic><sub><italic>d</italic></sub> is the probability that the Hamming distance between two random <italic>l</italic>-mers is less than or equal to <italic>d</italic>), which is detrimental to pruning. Therefore, the smaller the value of <italic>q</italic>, the higher is the computational time of the stpd qPMS algorithms.<disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ {P}_{\mathrm{span}}=\sum \limits_{i= qt}^t\left(\begin{array}{c}t\\ {}i\end{array}\right){\left(1-{\left(1-{P}_d\right)}^{\left(n-l+1\right)}\right)}^i{\left({\left(1-{P}_d\right)}^{\left(n-l+1\right)}\right)}^{t-i} $$\end{document}</tex-math><mml:math id="M2" display="block"><mml:msub><mml:mi>P</mml:mi><mml:mtext>span</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:munderover><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mi mathvariant="italic">qt</mml:mi></mml:mrow><mml:mi>t</mml:mi></mml:munderover><mml:mfenced close=")" open="("><mml:mtable columnalign="center"><mml:mtr><mml:mtd><mml:mi>t</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>i</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:mfenced><mml:msup><mml:mfenced close=")" open="("><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msup><mml:mfenced close=")" open="("><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:mrow></mml:mfenced><mml:mfenced close=")" open="("><mml:mrow><mml:mi>n</mml:mi><mml:mo>−</mml:mo><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfenced></mml:msup></mml:mrow></mml:mfenced><mml:mi>i</mml:mi></mml:msup><mml:msup><mml:mfenced close=")" open="("><mml:msup><mml:mfenced close=")" open="("><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:mrow></mml:mfenced><mml:mfenced close=")" open="("><mml:mrow><mml:mi>n</mml:mi><mml:mo>−</mml:mo><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfenced></mml:msup></mml:mfenced><mml:mrow><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msup></mml:math><graphic xlink:href="12859_2018_2242_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula><disp-formula id="Equ2"><label>2</label><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ {P}_d=\sum \limits_{i=0}^d\left(\begin{array}{c}l\\ {}i\end{array}\right)\frac{{\left(\left|\sum \right|-1\right)}^i}{{\left|\sum \right|}^l} $$\end{document}</tex-math><mml:math id="M4" display="block"><mml:msub><mml:mi>P</mml:mi><mml:mi>d</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:munderover><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mi>d</mml:mi></mml:munderover><mml:mfenced close=")" open="("><mml:mtable columnalign="center"><mml:mtr><mml:mtd><mml:mi>l</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>i</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:mfenced><mml:mfrac><mml:msup><mml:mfenced close=")" open="("><mml:mrow><mml:mfenced close="|" open="|"><mml:mo>∑</mml:mo></mml:mfenced><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfenced><mml:mi>i</mml:mi></mml:msup><mml:msup><mml:mfenced close="|" open="|"><mml:mo>∑</mml:mo></mml:mfenced><mml:mi>l</mml:mi></mml:msup></mml:mfrac></mml:math><graphic xlink:href="12859_2018_2242_Article_Equ2.gif" position="anchor"/></alternatives></disp-formula></p>
      <p id="Par21">The time performance of the spd qPMS algorithms depends mainly on the number of generated candidate motifs. These algorithms use all <italic>h</italic>-tuples in <italic>t</italic> – <italic>qt</italic> + <italic>h</italic> reference sequences to generate candidate motifs. That is, they must consider all possible combinations of <italic>h</italic> reference sequences in <italic>t</italic> – <italic>qt</italic> + <italic>h</italic> reference sequences; the number of possible combinations is denoted by <italic>N</italic><sub><italic>com</italic></sub> and calculated by (3). For a given algorithm, the value of <italic>h</italic> (<italic>h</italic> ≥ 1) is generally fixed, so <italic>N</italic><sub><italic>com</italic></sub> is mainly affected by <italic>t</italic> and <italic>q</italic>. Obviously, when <italic>t</italic> increases or <italic>q</italic> decreases, <italic>N</italic><sub><italic>com</italic></sub> will increase, leading to more candidate motifs and a higher computation time.<disp-formula id="Equ3"><label>3</label><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ {N}_{com}=\left(\begin{array}{c}t- qt+h\\ {}h\end{array}\right)=\frac{\prod \limits_{i=1}^h\left(t- qt+i\right)}{h!} $$\end{document}</tex-math><mml:math id="M6" display="block"><mml:msub><mml:mi>N</mml:mi><mml:mi mathvariant="italic">com</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mfenced close=")" open="("><mml:mtable columnalign="center"><mml:mtr><mml:mtd><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mi mathvariant="italic">qt</mml:mi><mml:mo>+</mml:mo><mml:mi>h</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>h</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:mfenced><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:munderover><mml:mo movablelimits="false">∏</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>h</mml:mi></mml:munderover><mml:mfenced close=")" open="("><mml:mrow><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mi mathvariant="italic">qt</mml:mi><mml:mo>+</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mfenced></mml:mrow><mml:mrow><mml:mi>h</mml:mi><mml:mo>!</mml:mo></mml:mrow></mml:mfrac></mml:math><graphic xlink:href="12859_2018_2242_Article_Equ3.gif" position="anchor"/></alternatives></disp-formula></p>
      <p id="Par22">Based on the above analysis, both <italic>t</italic> and <italic>q</italic> have the same effect on the stpd qPMS algorithms as on the spd qPMS algorithms: a large <italic>t</italic> or a small <italic>q</italic> will increase the computation time. Large DNA datasets, such as ChIP-seq datasets (see Tables <xref rid="Tab2" ref-type="table">2</xref> and <xref rid="Tab3" ref-type="table">3</xref>), typically contain thousands DNA sequences or even more; that is, <italic>t</italic> is very large. On the other hand, the proportion of sequences containing motif instances is not large, that is, <italic>q</italic> is small. The two aspects make qPMS algorithms too time consuming to process large DNA datasets.<table-wrap id="Tab2"><label>Table 2</label><caption><p>Real datasets selected from the ENCODE TF ChIP-seq data</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Dataset</th><th>Motif</th><th>(<italic>l</italic>, <italic>d</italic>)</th><th><italic>t</italic></th><th><italic>q</italic></th></tr></thead><tbody><tr><td>egr1</td><td>CCGCCCCCGCA</td><td>(11, 3)</td><td>15,400</td><td>0.68</td></tr><tr><td>elf1</td><td>AACCCGGAAGT</td><td>(11, 3)</td><td>8611</td><td>0.54</td></tr><tr><td>hnf4</td><td>GGGTCAAAGTCCA</td><td>(13, 4)</td><td>11,045</td><td>0.53</td></tr><tr><td>myc</td><td>ACCACGTGCTC</td><td>(11, 3)</td><td>4542</td><td>0.49</td></tr><tr><td>nfy</td><td>ACTAACCAATCAG</td><td>(13, 4)</td><td>9781</td><td>0.44</td></tr><tr><td>sp1</td><td>GGGGCGGGG</td><td>(9, 2)</td><td>14,779</td><td>0.52</td></tr><tr><td>srf</td><td>TGACCATATATGGTC</td><td>(15, 5)</td><td>4903</td><td>0.36</td></tr><tr><td>yy1</td><td>CGGCCATCT</td><td>(9, 2)</td><td>2077</td><td>0.49</td></tr></tbody></table></table-wrap><table-wrap id="Tab3"><label>Table 3</label><caption><p>Real datasets in the mESC data</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Dataset</th><th>Motif</th><th>(<italic>l</italic>, <italic>d</italic>)</th><th><italic>t</italic></th><th><italic>q</italic></th></tr></thead><tbody><tr><td>c-Myc</td><td>GCACGTGGC</td><td>(9, 2)</td><td>3422</td><td>0.60</td></tr><tr><td>CTCF</td><td>CCACCAGGGGGCG</td><td>(13, 4)</td><td>39,601</td><td>0.58</td></tr><tr><td>Esrrb</td><td>GGTCAAGGTCA</td><td>(11, 3)</td><td>21,644</td><td>0.54</td></tr><tr><td>Klf4</td><td>GGGTGTGGC</td><td>(9, 2)</td><td>10,872</td><td>0.61</td></tr><tr><td>Nanog</td><td>CCTTGTCATGC</td><td>(11, 3)</td><td>10,342</td><td>0.26</td></tr><tr><td>n-Myc</td><td>GCACGTGGC</td><td>(9, 2)</td><td>7181</td><td>0.57</td></tr><tr><td>Oct4</td><td>CATTGTTATGCAAAT</td><td>(15, 5)</td><td>3775</td><td>0.29</td></tr><tr><td>Smad1</td><td>CCTTTGTTATGCA</td><td>(13, 4)</td><td>1126</td><td>0.36</td></tr><tr><td>Sox2</td><td>CATTGTTATGCAAAT</td><td>(15, 5)</td><td>4525</td><td>0.39</td></tr><tr><td>STAT3</td><td>TTCCCGGAA</td><td>(9, 2)</td><td>2546</td><td>0.61</td></tr><tr><td>Tcfcp2I1</td><td>CCGGTTCAAACCG</td><td>(13, 4)</td><td>26,907</td><td>0.29</td></tr><tr><td>Zfx</td><td>GCTAGGCCGCG</td><td>(11, 3)</td><td>10,336</td><td>0.49</td></tr></tbody></table></table-wrap></p>
      <p id="Par23">One way to effectively improve the time performance of qPMS algorithms is to select a sample sequence set <italic>D</italic>’ with a larger proportion of sequences containing motif instances from the given dataset <italic>D</italic> and then to execute qPMS algorithms on <italic>D</italic>’ to perform motif discovery. Accordingly, the problem to be solved is described as follows.</p>
      <sec id="Sec4">
        <title>Sample sequence selection problem</title>
        <p id="Par24">Given a set of <italic>t n</italic>-length DNA sequences <italic>D =</italic> {<italic>s</italic><sub>1</sub>, <italic>s</italic><sub>2</sub>, …, <italic>s</italic><sub><italic>t</italic></sub>} containing instances of a motif <italic>m</italic>, along with the parameters <italic>l</italic>, <italic>d</italic> and <italic>q</italic> describing <italic>m</italic> (see Table <xref rid="Tab1" ref-type="table">1</xref> for the explanation of these parameters), the task is to select a portion of the sequences from <italic>D</italic> to form a sample sequence set <italic>D</italic>’ (let <italic>t</italic>’ = |<italic>D</italic>’|, and let <italic>q</italic>’ be the proportion of sequences containing instances of <italic>m</italic> in <italic>D</italic>’), so that <italic>t</italic>’ &lt; <italic>t</italic> and <italic>q</italic>’ &gt; <italic>q</italic>.</p>
      </sec>
    </sec>
    <sec id="Sec5">
      <title>How to select sample sequences</title>
      <sec id="Sec6">
        <title>Basic concept</title>
        <p id="Par25">Because of the conservation of DNA motifs, the instances of a particular motif are similar to each other. Thus, if a substring <italic>x</italic> in the input sequences overlaps a motif instance, the occurrence frequency of <italic>x</italic> is generally higher than that of a substring <italic>y</italic> with |<italic>y</italic>| = |<italic>x</italic>| in the background sequences. Based on this difference in frequency, our basic idea is to convert the problem of selecting sample sequences containing motif instances into the problem of selecting sample sequences containing high-frequency substrings. That is, we test whether a sequence contains a high-frequency substring to determine whether the sequence contains a motif instance.</p>
        <p id="Par26">Since most of the motif instances are similar but not exactly the same, the occurrence frequency of a substring <italic>x</italic> is evaluated by the count of <italic>x</italic> in <italic>D</italic> with up to <italic>k</italic> mismatches, denoted by <italic>count</italic><sub><italic>k</italic></sub>(<italic>x</italic>), i.e., the number of substrings <italic>y</italic> in <italic>D</italic> satisfying <italic>d</italic><sub><italic>H</italic></sub>(<italic>y</italic>, <italic>x</italic>) ≤ <italic>k</italic>. Notably, the time complexity of computing <italic>count</italic><sub><italic>k</italic></sub>(<italic>x</italic>) for a substring <italic>x</italic> grows dramatically as <italic>k</italic> increases; moreover, we need to compute <italic>count</italic><sub><italic>k</italic></sub>(<italic>x</italic>) for all substrings of a specified length <italic>w</italic> in the input sequences. Therefore, the value of <italic>k</italic> cannot be large if good time complexity is to be achieved. When <italic>k</italic> is small, the length <italic>w</italic> should also be small to obtain enough substrings overlapping motif instances.</p>
        <p id="Par27">The length <italic>w</italic> is generally smaller than the motif length <italic>l</italic>, and a motif instance in a sequence may produce multiple overlapped high-frequency <italic>w</italic>-mers. Therefore, after fetching high-frequency <italic>w</italic>-mers, a step is needed to combine multiple overlapped <italic>w</italic>-mers into one high-frequency substring. The length of the combined high-frequency substrings may not be equal but is generally greater than <italic>l</italic>. A high-frequency substring is expected to cover a motif instance.</p>
        <p id="Par28">Furthermore, the obtained high-frequency substrings need to be grouped. To guarantee a large value of <italic>q</italic>’, a sample sequence set is expected to contain only instances of a single motif. However, the input sequences may contain multiple motifs and the disturbance of random high-frequency substrings; that is, in general, the obtained high-frequency substrings are composed of instances of multiple motifs and some random high-frequency substrings. Therefore, we use a clustering method to divide the obtained high-frequency substrings into groups and thus may obtain two or more high-quality sample sequence sets so that a sample sequence set exists corresponding to the motif to be found.</p>
        <p id="Par29">Based on these considerations, SamSelect consists of the following three steps: i) word count with mismatches, used to fetch high-frequency <italic>w</italic>-mers; ii) high-frequency substring obtainment, used to obtain high-frequency substrings by combining overlapped <italic>w</italic>-mers; and iii) high-frequency substring grouping, used to obtain sample sequence sets by clustering high-frequency substrings.</p>
      </sec>
      <sec id="Sec7">
        <title>Word count with mismatches</title>
        <p id="Par30">We compute <italic>count</italic><sub><italic>k</italic></sub>(<italic>x</italic>) for all <italic>w</italic>-mers <italic>x</italic> in the input sequences. Given a <italic>w</italic>-mer <italic>x</italic>, <italic>count</italic><sub><italic>k</italic></sub>(<italic>x</italic>) is represented as<disp-formula id="Equ4"><label>4</label><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ {count}_k(x)=\sum \limits_{y{\in}_wD}{I}_y, $$\end{document}</tex-math><mml:math id="M8" display="block"><mml:msub><mml:mtext mathvariant="italic">count</mml:mtext><mml:mi>k</mml:mi></mml:msub><mml:mfenced close=")" open="("><mml:mi>x</mml:mi></mml:mfenced><mml:mo>=</mml:mo><mml:munder><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>y</mml:mi><mml:msub><mml:mo>∈</mml:mo><mml:mi>w</mml:mi></mml:msub><mml:mi>D</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>I</mml:mi><mml:mi>y</mml:mi></mml:msub><mml:mo>,</mml:mo></mml:math><graphic xlink:href="12859_2018_2242_Article_Equ4.gif" position="anchor"/></alternatives></disp-formula>where <italic>I</italic><sub><italic>y</italic></sub> is an indicator variable and it is 1 if <italic>d</italic><sub><italic>H</italic></sub>(<italic>y</italic>, <italic>x</italic>) ≤ <italic>k</italic>, 0 otherwise.</p>
        <p id="Par31">Our method for computing <italic>count</italic><sub><italic>k</italic></sub>(<italic>x</italic>) is based on the count operation (computing the number of occurrences of a string <italic>y</italic> in <italic>D</italic>, i.e., <italic>count</italic>(<italic>y</italic>)) of FM-Index [<xref ref-type="bibr" rid="CR28">28</xref>]. That is, <italic>count</italic><sub><italic>k</italic></sub>(<italic>x</italic>) is converted into the sum of the number of occurrences of all <italic>k</italic>-neighbors of <italic>x</italic>:<disp-formula id="Equ5"><label>5</label><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ {count}_k(x)=\sum \limits_{y\in {B}_k(x)} count(y). $$\end{document}</tex-math><mml:math id="M10" display="block"><mml:msub><mml:mtext mathvariant="italic">count</mml:mtext><mml:mi>k</mml:mi></mml:msub><mml:mfenced close=")" open="("><mml:mi>x</mml:mi></mml:mfenced><mml:mo>=</mml:mo><mml:munder><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>y</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>B</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mfenced close=")" open="("><mml:mi>x</mml:mi></mml:mfenced></mml:mrow></mml:munder><mml:mtext mathvariant="italic">count</mml:mtext><mml:mfenced close=")" open="("><mml:mi>y</mml:mi></mml:mfenced><mml:mo>.</mml:mo></mml:math><graphic xlink:href="12859_2018_2242_Article_Equ5.gif" position="anchor"/></alternatives></disp-formula></p>
        <p id="Par32">FM-Index is a self-indexed data structure. Let [<italic>L</italic><sub><italic>y</italic></sub>, <italic>R</italic><sub><italic>y</italic></sub>] denote the ranking interval of the suffixes of input sequences prefixed by a string <italic>y</italic>. With [<italic>L</italic><sub><italic>y</italic></sub>, <italic>R</italic><sub><italic>y</italic></sub>], <italic>count</italic>(<italic>y</italic>) = <italic>R</italic><sub><italic>y</italic></sub><italic>– L</italic><sub><italic>y</italic></sub> <italic>+</italic> 1 can be obtained immediately. The process of computing [<italic>L</italic><sub><italic>y</italic></sub>, <italic>R</italic><sub><italic>y</italic></sub>] is to traverse <italic>w</italic> characters of <italic>y</italic> from right to left (i.e., backward search); when the <italic>i</italic>th (1 ≤ <italic>i</italic> ≤ <italic>w</italic>) character <italic>y</italic>[<italic>i</italic>] is visited, the interval [<italic>L</italic><sub><italic>φ</italic></sub>, <italic>R</italic><sub><italic>φ</italic></sub>] for <italic>φ = y</italic>[<italic>i</italic>..<italic>w</italic>] is obtained in <italic>O</italic>(log|Σ|) time based on the interval [<italic>L</italic><sub><italic>φ</italic>’</sub>, <italic>R</italic><sub><italic>φ</italic>’</sub>] for <italic>φ</italic>’ <italic>= y</italic>[<italic>i</italic> + 1..<italic>w</italic>] through FM-Index. Thus, <italic>count</italic>(<italic>y</italic>) is computed in <italic>O</italic>(<italic>w</italic>log|Σ|) time.</p>
        <p id="Par33">The count of a single <italic>w</italic>-mer can be computed efficiently with FM-Index, but if we obtain <italic>count</italic><sub><italic>k</italic></sub>(<italic>x</italic>) by independently computing the count of each <italic>w</italic>-mer in <italic>B</italic><sub><italic>k</italic></sub>(<italic>x</italic>), then the backward search on the common suffixes of <italic>w</italic>-mers in <italic>B</italic><sub><italic>k</italic></sub>(<italic>x</italic>) will be performed repeatedly. For example, when computing <italic>count</italic><sub>1</sub>(<italic>x</italic>) for a 3-mer <italic>x</italic> = ACG, if we independently compute the counts of the four 3-mers ACG, CCG, GCG and TCG in <italic>B</italic><sub>1</sub>(<italic>x</italic>), then the backward search on the common suffix CG will be performed four times. Moreover, our goal is to obtain <italic>count</italic><sub><italic>k</italic></sub>(<italic>x</italic>) for all <italic>w</italic>-mers <italic>x</italic> in the input sequences, making the number of repeated backward searches even larger.</p>
        <p id="Par34">To address this problem, we design a method to minimize the number of repeated backward searches. As shown in Fig. <xref rid="Fig1" ref-type="fig">1</xref>, we first efficiently compute the values of <italic>count</italic>(<italic>y</italic>) for all <italic>w</italic>-mers <italic>y</italic> in the input sequences by using Algorithm 1 and store them in a Table <italic>T</italic> of size 4<sup><italic>w</italic></sup>, where <italic>T</italic>[<italic>i</italic>] stores the value of <italic>count</italic>(<italic>y</italic>) for the <italic>w</italic>-mer <italic>y</italic> with <italic>stn</italic>(<italic>y</italic>) = <italic>i</italic>; then, we obtain <italic>count</italic><sub><italic>k</italic></sub>(<italic>x</italic>) for a given <italic>w</italic>-mer <italic>x</italic> by querying <italic>T</italic> |<italic>B</italic><sub><italic>k</italic></sub>(<italic>x</italic>)| times and summing <italic>T</italic>[<italic>stn</italic>(<italic>y</italic>)] for each <italic>y</italic> in <italic>B</italic><sub><italic>k</italic></sub>(<italic>x</italic>). In Algorithm 1, we obtain <italic>T</italic> by searching a quadtree of depth <italic>w</italic>. The leaves and internal nodes of the quadtree correspond to all <italic>w</italic>-length strings over Σ and their common suffixes, respectively. All elements in <italic>T</italic> are initialized to zero; in searching the quadtree, when the value of <italic>count</italic>(<italic>y</italic>) for a <italic>w</italic>-mer <italic>y</italic> is greater than zero, <italic>T</italic>[<italic>stn</italic>(<italic>y</italic>)] is updated to <italic>count</italic>(<italic>y</italic>).<fig id="Fig1"><label>Fig. 1</label><caption><p>Illustration of word count with mismatches. This figure shows an illustration of word count with up to <italic>k</italic> mismatches</p></caption><graphic xlink:href="12859_2018_2242_Fig1_HTML" id="MO1"/></fig></p>
        <graphic position="anchor" xlink:href="12859_2018_2242_Figa_HTML" id="MO2"/>
        <p id="Par35">Algorithm 1 is able to minimize the number of repeated backward searches. When an arbitrary node <italic>v</italic> of the quadtree is being visited (let <italic>φ</italic> be the string corresponding to <italic>v</italic>), the interval [<italic>L</italic><sub><italic>φ</italic>’</sub>, <italic>R</italic><sub><italic>φ</italic>’</sub>] for <italic>φ</italic>’ = <italic>φ</italic>[2..<italic>|φ|</italic>] has already been obtained, and only <italic>O</italic>(log|Σ|) time is needed to obtain the interval [<italic>L</italic><sub><italic>φ</italic></sub>, <italic>R</italic><sub><italic>φ</italic></sub>] for <italic>φ</italic>. Therefore, for all strings with a common suffix <italic>φ</italic>, the backward search on the suffix <italic>φ</italic> is only executed once. Moreover, we use pruning technology in the search process. Once <italic>count</italic>(<italic>φ</italic>) for a string <italic>φ</italic> that corresponds to a node <italic>v</italic> is 0, the subtree of <italic>v</italic> is pruned.</p>
        <p id="Par36">To guarantee good space and time performance of word count with up to <italic>k</italic> mismatches, it is necessary to select appropriate values of <italic>w</italic> and <italic>k</italic>. Except for building FM-Index, which is not affected by <italic>w</italic> and <italic>k</italic>, the space complexity is <italic>O</italic>(4<sup><italic>w</italic></sup>), which is mainly used to store the Table <italic>T</italic>. The time complexity <italic>T</italic><sub>count</sub> depends on two parts, <italic>T</italic><sub>1</sub> and <italic>T</italic><sub>2</sub>. <italic>T</italic><sub>1</sub> is involved in building <italic>T</italic> by visiting every node of the <italic>w</italic>-depth quadtree in the worst case. <italic>T</italic><sub>2</sub> is used to compute <italic>count</italic><sub><italic>k</italic></sub>(<italic>x</italic>) for each <italic>w</italic>-mer <italic>x</italic> in <italic>t n</italic>-length sequences by querying <italic>T</italic> |<italic>B</italic><sub><italic>k</italic></sub>(<italic>w</italic>-mer)| times.<disp-formula id="Equ6"><label>6</label><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ {\displaystyle \begin{array}{l}{T}_{\mathrm{count}}=O\left({T}_1+{T}_2\right)\\ {}\kern2em =O\left(\sum \limits_{i=0}^w{4}^w\log \left|\Sigma \right|+ tn\left|{B}_k\left(w-\mathrm{mer}\right)\right|\right)\\ {}\kern2em =O\left(\sum \limits_{i=0}^w{4}^w\log \left|\Sigma \right|+ tn\sum \limits_{i=0}^k\left(\begin{array}{c}w\\ {}i\end{array}\right){\left(\left|\Sigma \right|-1\right)}^i\right)\end{array}} $$\end{document}</tex-math><mml:math id="M12" display="block"><mml:mtable columnalign="left" displaystyle="true"><mml:mtr><mml:mtd><mml:msub><mml:mi>T</mml:mi><mml:mtext>count</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mfenced></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mspace width="2em"/><mml:mo>=</mml:mo><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:munderover><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mi>w</mml:mi></mml:munderover><mml:msup><mml:mn>4</mml:mn><mml:mi>w</mml:mi></mml:msup><mml:mo>log</mml:mo><mml:mfenced close="|" open="|"><mml:mi mathvariant="normal">Σ</mml:mi></mml:mfenced><mml:mo>+</mml:mo><mml:mi mathvariant="italic">tn</mml:mi><mml:mfenced close="|" open="|"><mml:mrow><mml:msub><mml:mi>B</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mfenced close=")" open="("><mml:mrow><mml:mi>w</mml:mi><mml:mo>−</mml:mo><mml:mi>mer</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mspace width="2em"/><mml:mo>=</mml:mo><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:munderover><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mi>w</mml:mi></mml:munderover><mml:msup><mml:mn>4</mml:mn><mml:mi>w</mml:mi></mml:msup><mml:mo>log</mml:mo><mml:mfenced close="|" open="|"><mml:mi mathvariant="normal">Σ</mml:mi></mml:mfenced><mml:mo>+</mml:mo><mml:mi mathvariant="italic">tn</mml:mi><mml:munderover><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:munderover><mml:mfenced close=")" open="("><mml:mtable columnalign="center"><mml:mtr><mml:mtd><mml:mi>w</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>i</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:mfenced><mml:msup><mml:mfenced close=")" open="("><mml:mrow><mml:mfenced close="|" open="|"><mml:mi mathvariant="normal">Σ</mml:mi></mml:mfenced><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfenced><mml:mi>i</mml:mi></mml:msup></mml:mrow></mml:mfenced></mml:mtd></mml:mtr></mml:mtable></mml:math><graphic xlink:href="12859_2018_2242_Article_Equ6.gif" position="anchor"/></alternatives></disp-formula></p>
        <p id="Par37">Because <italic>k</italic> affects the time <italic>T</italic><sub>2</sub>, it is expected to be kept as small as possible; on the other hand, since the instances of a particular motif are a group of substrings similar to each other, it is more meaningful that <italic>k</italic> is greater than or equal to 1. The value of <italic>w</italic> affects both the space and time performance of the word count with up to <italic>k</italic> mismatches. According to empirical studies, <italic>w</italic> should be less than 15 to guarantee good performance by a personal computer. In SamSelect, we set <italic>w</italic> and <italic>k</italic> to 12 and 1, respectively. With this setting, in addition to the guarantee of good space and time performance, we would also like to obtain more motif information, as the probability analysis shows that <italic>count</italic><sub>1</sub>(12-mer) for a motif instance is significantly larger than that for a background substring [<xref ref-type="bibr" rid="CR29">29</xref>].</p>
      </sec>
      <sec id="Sec8">
        <title>High-frequency substring obtainment</title>
        <p id="Par38">We use high-frequency substrings in input sequences to represent the corresponding sequences, and make the following considerations for obtaining high-frequency substrings. First, we select the <italic>w</italic>-mers <italic>x</italic> in input sequences with <italic>count</italic><sub><italic>k</italic></sub>(<italic>x</italic>) greater than a certain threshold <italic>f</italic>, combine the overlapped <italic>w</italic>-mers to one substring and store the substrings of length greater than or equal to <italic>l</italic> in a set <italic>A</italic>. Second, to guarantee good time performance of the substring clustering in the next step, we set the total number of substrings to no more than 5000, which is much larger than the number of outputted sample sequences; if we obtain more than 5000 substrings, we will increase <italic>f</italic> repeatedly by a small amount. Third, we need to segment long high-frequency substrings because they may contain instances of two or more adjacent different motifs. This division guarantees that the substrings in a particular group correspond to the instances of the same motif; after segmentation, we store the substrings of length greater than or equal to <italic>l</italic> to a set <italic>A</italic>’.</p>
        <p id="Par39">The overall process of this step is shown in Fig. <xref rid="Fig2" ref-type="fig">2</xref>. The initial value of threshold <italic>f</italic> is set to the sum of <italic>N</italic><sub><italic>r</italic></sub> and <italic>N</italic><sub><italic>m</italic></sub>, where <italic>N</italic><sub><italic>r</italic></sub> and <italic>N</italic><sub><italic>m</italic></sub> are <italic>count</italic><sub><italic>k</italic></sub>(<italic>w</italic>-mer) for a background substring and a motif instance for a random case, respectively; the calculation method of <italic>N</italic><sub><italic>r</italic></sub> and <italic>N</italic><sub><italic>m</italic></sub> is given in [<xref ref-type="bibr" rid="CR29">29</xref>]. For any two overlapped <italic>w</italic>-mers, if the length of the overlap is greater than or equal to <italic>w</italic>/2, we combine the two <italic>w</italic>-mers into one substring. Notably, some substrings are obtained by combining more than two overlapped <italic>w</italic>-mers (e.g., the substring of <italic>s</italic><sub><italic>t</italic></sub> in Fig. <xref rid="Fig2" ref-type="fig">2</xref>).<fig id="Fig2"><label>Fig. 2</label><caption><p>Illustration of obtaining high-frequency substrings. This figure illustrates the process of obtaining high-frequency substrings. <italic>N</italic><sub><italic>r</italic></sub> and <italic>N</italic><sub><italic>m</italic></sub> are <italic>count</italic><sub><italic>k</italic></sub>(<italic>w</italic>-mer) for a background substring and a motif instance in the random case, respectively</p></caption><graphic xlink:href="12859_2018_2242_Fig2_HTML" id="MO3"/></fig></p>
        <p id="Par40">Next, we describe how to segment substrings. We first give some definitions. A |<italic>φ</italic>| – <italic>l</italic> + 1 size table denoted by <italic>attractTable</italic><sub><italic>φ</italic></sub> is built for each substring <italic>φ</italic> in <italic>A</italic>. To explain this table, we define the distance <italic>dis</italic>(<italic>φ</italic>, <italic>φ</italic>’) between two given substrings <italic>φ</italic> and <italic>φ</italic>’ as the minimum Hamming distance between two <italic>l</italic>-mers <italic>x</italic> ∈<sub><italic>l</italic></sub><italic>φ</italic> and <italic>x</italic>’ ∈<sub><italic>l</italic></sub><italic>φ</italic>’; <italic>dis</italic>(<italic>φ</italic>, <italic>φ</italic>’) is calculated by (7). The <italic>i</italic>th element of the table <italic>attractTable</italic><sub><italic>φ</italic></sub>[<italic>i</italic>] is calculated by (8), where <italic>minPos</italic><sub><italic>φ</italic></sub>(<italic>φ</italic>’) is the set of all positions of the <italic>l</italic>-mers in <italic>φ</italic> leading to <italic>dis</italic>(<italic>φ</italic>, <italic>φ</italic>’).<disp-formula id="Equ7"><label>7</label><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ dis\left(\varphi, {\varphi}^{\hbox{'}}\right)=\underset{x{\in}_l\varphi, x\hbox{'}{\in}_l\varphi \hbox{'}}{\min }{d}_H\left(x,{x}^{\hbox{'}}\right) $$\end{document}</tex-math><mml:math id="M14" display="block"><mml:mi mathvariant="italic">dis</mml:mi><mml:mfenced close=")" open="(" separators=","><mml:mi>φ</mml:mi><mml:msup><mml:mi>φ</mml:mi><mml:mo>'</mml:mo></mml:msup></mml:mfenced><mml:mo>=</mml:mo><mml:munder><mml:mo>min</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:msub><mml:mo>∈</mml:mo><mml:mi>l</mml:mi></mml:msub><mml:mi>φ</mml:mi><mml:mo>,</mml:mo><mml:mi>x</mml:mi><mml:mo>'</mml:mo><mml:msub><mml:mo>∈</mml:mo><mml:mi>l</mml:mi></mml:msub><mml:mi>φ</mml:mi><mml:mo>'</mml:mo></mml:mrow></mml:munder><mml:msub><mml:mi>d</mml:mi><mml:mi>H</mml:mi></mml:msub><mml:mfenced close=")" open="(" separators=","><mml:mi>x</mml:mi><mml:msup><mml:mi>x</mml:mi><mml:mo>'</mml:mo></mml:msup></mml:mfenced></mml:math><graphic xlink:href="12859_2018_2242_Article_Equ7.gif" position="anchor"/></alternatives></disp-formula><disp-formula id="Equ8"><label>8</label><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ {attractTable}_{\varphi}\left[i\right]=\left|\left\{{\varphi}^{\hbox{'}}:{\varphi}^{\hbox{'}}\in A-\left\{\varphi \right\},i\in {minPos}_{\varphi}\left({\varphi}^{\hbox{'}}\right)\right\}\right| $$\end{document}</tex-math><mml:math id="M16" display="block"><mml:msub><mml:mtext mathvariant="italic">attractTable</mml:mtext><mml:mi>φ</mml:mi></mml:msub><mml:mfenced close="]" open="["><mml:mi>i</mml:mi></mml:mfenced><mml:mo>=</mml:mo><mml:mfenced close="|" open="|"><mml:mfenced close="}" open="{" separators=","><mml:mrow><mml:msup><mml:mi>φ</mml:mi><mml:mo>'</mml:mo></mml:msup><mml:mo>:</mml:mo><mml:msup><mml:mi>φ</mml:mi><mml:mo>'</mml:mo></mml:msup><mml:mo>∈</mml:mo><mml:mi>A</mml:mi><mml:mo>−</mml:mo><mml:mfenced close="}" open="{"><mml:mi>φ</mml:mi></mml:mfenced></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mtext mathvariant="italic">minPos</mml:mtext><mml:mi>φ</mml:mi></mml:msub><mml:mfenced close=")" open="("><mml:msup><mml:mi>φ</mml:mi><mml:mo>'</mml:mo></mml:msup></mml:mfenced></mml:mrow></mml:mfenced></mml:mfenced></mml:math><graphic xlink:href="12859_2018_2242_Article_Equ8.gif" position="anchor"/></alternatives></disp-formula><disp-formula id="Equ9"><label>9</label><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ {minPos}_{\varphi}\left({\varphi}^{\hbox{'}}\right)=\underset{1\le i\le \left|\varphi \right|-l+1}{\arg \min } dis\left(\varphi \left[i\dots i+l-1\right],{\varphi}^{\hbox{'}}\right) $$\end{document}</tex-math><mml:math id="M18" display="block"><mml:msub><mml:mtext mathvariant="italic">minPos</mml:mtext><mml:mi>φ</mml:mi></mml:msub><mml:mfenced close=")" open="("><mml:msup><mml:mi>φ</mml:mi><mml:mo>'</mml:mo></mml:msup></mml:mfenced><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mo>arg</mml:mo><mml:mo>min</mml:mo></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mfenced close="|" open="|"><mml:mi>φ</mml:mi></mml:mfenced><mml:mo>−</mml:mo><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:munder><mml:mi mathvariant="italic">dis</mml:mi><mml:mfenced close=")" open="(" separators=","><mml:mrow><mml:mi>φ</mml:mi><mml:mfenced close="]" open="["><mml:mrow><mml:mi>i</mml:mi><mml:mo>…</mml:mo><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mi>l</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfenced></mml:mrow><mml:msup><mml:mi>φ</mml:mi><mml:mo>'</mml:mo></mml:msup></mml:mfenced></mml:math><graphic xlink:href="12859_2018_2242_Article_Equ9.gif" position="anchor"/></alternatives></disp-formula></p>
        <p id="Par41">The process of segmenting a substring <italic>φ</italic> is given in Algorithm 3. Let <italic>x</italic> be the <italic>l</italic>-mer in <italic>φ</italic> with the position of the maximum element in <italic>attractTable</italic><sub><italic>φ</italic></sub>. Since some deviations may occur between the position of <italic>x</italic> and that of the corresponding motif instance, we cut out <italic>x</italic> from <italic>φ</italic> and form a new substring by extending up to 3 characters from both the left and the right side of <italic>x</italic>. After cutting out <italic>x</italic>, if the length of the remaining left/right part of <italic>φ</italic> is still greater than or equal to <italic>l</italic>, we recursively segment the remaining left/right part of <italic>φ</italic>.</p>
        <graphic position="anchor" xlink:href="12859_2018_2242_Figb_HTML" id="MO4"/>
        <p id="Par42">The computation time of this step is mainly determined by the following two aspects. First, we scan all <italic>w</italic>-mers in the entire dataset in <italic>O</italic>(<italic>tn</italic>) time to obtain the initial high-frequency substrings and store them to the set <italic>A</italic>. Second, in segmenting substrings, we need to calculate the distance between each pair of substrings in <italic>A</italic> in <italic>O</italic>(<italic>L</italic><sup>2</sup>) time, where <italic>L</italic> is the average length of the substrings in <italic>A</italic>. Therefore, the time complexity of this step is <italic>O</italic>(<italic>tn</italic> + |<italic>A</italic>|<sup>2</sup> <italic>L</italic><sup>2</sup>).</p>
      </sec>
      <sec id="Sec9">
        <title>High-frequency substring grouping</title>
        <p id="Par43">We mainly use the clustering method to obtain sample sequence sets. The process is described in Algorithm 4, which includes three stages.</p>
        <graphic position="anchor" xlink:href="12859_2018_2242_Figc_HTML" id="MO5"/>
        <p id="Par44">In the first stage (line 1), we cluster the high-frequency substrings to distinguish substrings corresponding to different motifs. The AP algorithm [<xref ref-type="bibr" rid="CR30">30</xref>] is used for clustering; it can automatically determine the number of clusters and obtain cluster centers. For each cluster, we take the cluster center as the substring that is most similar to the motif and use it to filter out random high-frequency substrings in the cluster. In clustering, the similarity <italic>sim</italic>(<italic>φ</italic>, <italic>φ</italic>’) between two substrings <italic>φ</italic> and <italic>φ</italic>’ is evaluated as follows.<disp-formula id="Equ10"><label>10</label><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ sim\left(\varphi, {\varphi}^{\hbox{'}}\right)=\left\{\begin{array}{cc}- dis\left(\varphi, {\varphi}^{\hbox{'}}\right),&amp; \mathrm{if}\  dis\left(\varphi, {\varphi}^{\hbox{'}}\right)\le 2d\\ {}- dis\left(\varphi, {\varphi}^{\hbox{'}}\right)\times 10,&amp; \mathrm{otherwise}\end{array}\right. $$\end{document}</tex-math><mml:math id="M20" display="block"><mml:mi mathvariant="italic">sim</mml:mi><mml:mfenced close=")" open="(" separators=","><mml:mi>φ</mml:mi><mml:msup><mml:mi>φ</mml:mi><mml:mo>'</mml:mo></mml:msup></mml:mfenced><mml:mo>=</mml:mo><mml:mfenced close="" open="{"><mml:mtable columnalign="center"><mml:mtr><mml:mtd><mml:mo>−</mml:mo><mml:mi mathvariant="italic">dis</mml:mi><mml:mfenced close=")" open="(" separators=","><mml:mi>φ</mml:mi><mml:msup><mml:mi>φ</mml:mi><mml:mo>'</mml:mo></mml:msup></mml:mfenced><mml:mo>,</mml:mo></mml:mtd><mml:mtd><mml:mtext>if</mml:mtext><mml:mspace width="0.25em"/><mml:mi mathvariant="italic">dis</mml:mi><mml:mfenced close=")" open="(" separators=","><mml:mi>φ</mml:mi><mml:msup><mml:mi>φ</mml:mi><mml:mo>'</mml:mo></mml:msup></mml:mfenced><mml:mo>≤</mml:mo><mml:mn>2</mml:mn><mml:mi>d</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo>−</mml:mo><mml:mi mathvariant="italic">dis</mml:mi><mml:mfenced close=")" open="(" separators=","><mml:mi>φ</mml:mi><mml:msup><mml:mi>φ</mml:mi><mml:mo>'</mml:mo></mml:msup></mml:mfenced><mml:mo>×</mml:mo><mml:mn>10</mml:mn><mml:mo>,</mml:mo></mml:mtd><mml:mtd><mml:mtext>otherwise</mml:mtext></mml:mtd></mml:mtr></mml:mtable></mml:mfenced></mml:math><graphic xlink:href="12859_2018_2242_Article_Equ10.gif" position="anchor"/></alternatives></disp-formula></p>
        <p id="Par45">In the second stage (lines 2 to 11), the resulting clusters are combined, since multiple clusters may correspond to the same motif. For two clusters <italic>c</italic> and <italic>c</italic>’ (|<italic>c</italic>| ≥ |<italic>c</italic>’|), we use the cluster center <italic>φ</italic> of <italic>c</italic> to compare each substring <italic>φ</italic>’ in <italic>c</italic>’; in terms of (11), if the number of <italic>φ</italic>’ satisfying <italic>dis</italic>(<italic>φ</italic>, <italic>φ</italic>’) ≤ <italic>d</italic> is significantly larger than the number under random case <italic>P</italic><sub><italic>d</italic></sub>|<italic>c</italic>’|, we combine <italic>c</italic> and <italic>c</italic>’. Multiple clusters are combined by using a greedy strategy.<disp-formula id="Equ11"><label>11</label><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \left|\left\{{\varphi}^{\hbox{'}}:{\varphi}^{\hbox{'}}\in {c}^{\hbox{'}}, dis\left(\varphi, {\varphi}^{\hbox{'}}\right)\le d\right\}\right|&gt;{P}_d\left|{c}^{\hbox{'}}\right|+20\%\left|{c}^{\hbox{'}}\right| $$\end{document}</tex-math><mml:math id="M22" display="block"><mml:mfenced close="|" open="|"><mml:mfenced close="}" open="{" separators=","><mml:mrow><mml:msup><mml:mi>φ</mml:mi><mml:mo>'</mml:mo></mml:msup><mml:mo>:</mml:mo><mml:msup><mml:mi>φ</mml:mi><mml:mo>'</mml:mo></mml:msup><mml:mo>∈</mml:mo><mml:msup><mml:mi>c</mml:mi><mml:mo>'</mml:mo></mml:msup></mml:mrow><mml:mrow><mml:mi mathvariant="italic">dis</mml:mi><mml:mfenced close=")" open="(" separators=","><mml:mi>φ</mml:mi><mml:msup><mml:mi>φ</mml:mi><mml:mo>'</mml:mo></mml:msup></mml:mfenced><mml:mo>≤</mml:mo><mml:mi>d</mml:mi></mml:mrow></mml:mfenced></mml:mfenced><mml:mo>&gt;</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mi>d</mml:mi></mml:msub><mml:mfenced close="|" open="|"><mml:msup><mml:mi>c</mml:mi><mml:mo>'</mml:mo></mml:msup></mml:mfenced><mml:mo>+</mml:mo><mml:mn>20</mml:mn><mml:mo>%</mml:mo><mml:mfenced close="|" open="|"><mml:msup><mml:mi>c</mml:mi><mml:mo>'</mml:mo></mml:msup></mml:mfenced></mml:math><graphic xlink:href="12859_2018_2242_Article_Equ11.gif" position="anchor"/></alternatives></disp-formula></p>
        <p id="Par46">In the third stage (lines 12 to 17), we obtain sample sequence sets. For each cluster <italic>c</italic>, we sort the substrings in <italic>c</italic> in ascending order according to their distance from the cluster center and update <italic>c</italic> by keeping the first <italic>t</italic>’ substrings. The value of <italic>t</italic>’ is specified by the user and should be less than or equal to the maximum number of sequences containing motif instances <italic>qt</italic>. Then, to maximize the possibility that <italic>c</italic> corresponds to a set of motif instances, we use the following three rules in turn to test <italic>c</italic> and filter out a portion of substrings to make <italic>c</italic> satisfy these rules. Thus, the final value of <italic>t</italic>’ may be less than the specified value. Finally, for each cluster <italic>c</italic>, after filtering, we obtain a sample sequence set <italic>D</italic>’ consisting of the input sequences from which substrings in <italic>c</italic> are obtained. If we obtain two or more sample sequence sets, we rank them in descending order by size, since a large sample sequence set is more likely to contain a highly conserved motif.</p>
      </sec>
    </sec>
    <sec id="Sec10">
      <title>Rule 1</title>
      <p id="Par47">The distance between any two substrings in <italic>c</italic> is less than or equal to 2<italic>d</italic>.</p>
    </sec>
    <sec id="Sec11">
      <title>Rule 2</title>
      <p id="Par48">The distance between each substring in <italic>c</italic> and the cluster center is less than or equal to 3<italic>d</italic>/2.</p>
      <p id="Par49">The reason for adopting these two rules is as follows. For any two motif instances, their Hamming distance is less than or equal to 2<italic>d</italic>. The cluster center usually contains a motif instance of high conservation that is close to the motif and at distance &lt; <italic>d</italic> from the motif. Therefore, a more stringent distance constraint (≤ 3<italic>d</italic>/2) should be observed between each substring in <italic>c</italic> and the cluster center.</p>
    </sec>
    <sec id="Sec12">
      <title>Rule 3</title>
      <p id="Par50">The set <italic>c</italic> is a motif set.</p>
      <p id="Par51">The set <italic>c</italic> satisfying Rule 1 is called a <italic>pairwise bounded set</italic>. If <italic>c</italic> is a set of motif instances, a consensus <italic>m</italic> should exist such that the distance between <italic>m</italic> and each substring in <italic>c</italic> is less than or equal to <italic>d</italic>; such set <italic>c</italic> is called a <italic>motif set</italic>. A pairwise bounded set that is not a motif set is called a <italic>decoy set</italic>.</p>
      <p id="Par52">The work of Boucher and King [<xref ref-type="bibr" rid="CR31">31</xref>] shows a clear difference between the weight of motif sets and that of decoy sets (the weight is calculated by (12)), so the majority of motif sets and decoy sets can be distinguished with statistical methods. Specifically, for a given pairwise bounded set <italic>c</italic>, if <italic>w</italic>(<italic>c</italic>) ≤ <italic>a</italic><sub><italic>m</italic></sub> or <italic>w</italic>(<italic>c</italic>) ≥ <italic>a</italic><sub><italic>d</italic></sub>, where <italic>a</italic><sub><italic>m</italic></sub> and <italic>a</italic><sub><italic>d</italic></sub> (<italic>a</italic><sub><italic>m</italic></sub> &lt; <italic>a</italic><sub><italic>d</italic></sub>) are two thresholds obtained by statistical methods, <italic>c</italic> is determined as a motif set or a decoy set. Otherwise, an exhaustive method is required to determine whether <italic>c</italic> is a motif set. In our work, to maximize the possibility that <italic>c</italic> is a motif set, it is determined as a motif set if <italic>w</italic>(<italic>c</italic>) ≤ <italic>a</italic><sub><italic>m</italic></sub>; otherwise, ten substrings are removed from <italic>c</italic> iteratively. We use the following method to set the threshold <italic>a</italic><sub><italic>m</italic></sub>: randomly generate 1000 samples, each containing |<italic>c</italic>| motif instances; then, compute the mean μ and the standard deviation σ of the weights of these samples; finally, set <italic>a</italic><sub><italic>m</italic></sub> to μ + σ.<disp-formula id="Equ12"><label>12</label><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ w(c)=\sum \limits_{\varphi, \varphi \hbox{'}\in c} dis\left(\varphi, {\varphi}^{\hbox{'}}\right) $$\end{document}</tex-math><mml:math id="M24" display="block"><mml:mi>w</mml:mi><mml:mfenced close=")" open="("><mml:mi>c</mml:mi></mml:mfenced><mml:mo>=</mml:mo><mml:munder><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>φ</mml:mi><mml:mo>,</mml:mo><mml:mi>φ</mml:mi><mml:mo>'</mml:mo><mml:mo>∈</mml:mo><mml:mi>c</mml:mi></mml:mrow></mml:munder><mml:mi mathvariant="italic">dis</mml:mi><mml:mfenced close=")" open="(" separators=","><mml:mi>φ</mml:mi><mml:msup><mml:mi>φ</mml:mi><mml:mo>'</mml:mo></mml:msup></mml:mfenced></mml:math><graphic xlink:href="12859_2018_2242_Article_Equ12.gif" position="anchor"/></alternatives></disp-formula></p>
      <p id="Par53">For each obtained sample sequence set <italic>D</italic>’, <italic>t</italic>’ = |<italic>D</italic>’|, and the value of <italic>q</italic>’ is set to 0.9 to 0.95 according to the intensity of the disturbance information in the processed data. Although we maximize the possibility that <italic>D</italic>’ corresponds to a motif set, <italic>q</italic>’ cannot be set to 1. The reasons are as follows. First, the statistical method is used to determine a cluster of substrings as a motif set. Second, the distance between two substrings <italic>φ</italic> and <italic>φ</italic>’ is defined as the minimum Hamming distance between two <italic>l</italic>-mers <italic>x</italic> ∈<sub><italic>l</italic></sub><italic>φ</italic> and <italic>x</italic>’ ∈<sub><italic>l</italic></sub><italic>φ</italic>’; thus, when the distance of <italic>φ</italic> is calculated from different <italic>φ</italic>’, the <italic>l</italic>-mer in <italic>φ</italic> leading to <italic>dis</italic>(<italic>φ</italic>, <italic>φ</italic>’) may not come from a fixed position, which also affects the accuracy of determining a set as a motif set.</p>
      <p id="Par54">The computation time of this step is mainly determined by clustering the high-frequency substrings obtained in the previous step, i.e., the substrings stored in the set <italic>A</italic>’. To obtain the similarity matrix for clustering, we need to calculate the distance between each pair of substrings in <italic>A</italic>’ in <italic>O</italic>(<italic>L</italic>’<sup>2</sup>) time, where <italic>L</italic>’ is the average length of the substrings in <italic>A</italic>’. Then, given the similarity matrix, the time complexity of the AP clustering algorithm is <italic>O</italic>(|<italic>A</italic>’|<sup>2</sup><italic>r</italic>) [<xref ref-type="bibr" rid="CR30">30</xref>], where <italic>r</italic> is the number of iterations. Therefore, the time complexity of this step is <italic>O</italic>(|<italic>A</italic>’|<sup>2</sup>(<italic>L</italic>’<sup>2</sup> + <italic>r</italic>)).</p>
      <p id="Par55">The overall time complexity of SamSelect, denoted by <italic>T</italic><sub>SamSelect</sub>, is obtained by adding up the time complexity of the three steps of SamSelect. Since each sequence contains constant occurrences of high-frequency substrings, the number of obtained high-frequency substrings is <italic>O</italic>(<italic>t</italic>). Then, we have |<italic>A</italic>| = <italic>O</italic>(<italic>t</italic>) and |<italic>A</italic>’| = <italic>O</italic>(<italic>t</italic>). According to empirical studies, we have <italic>L</italic> = <italic>O</italic>(<italic>l</italic>) and <italic>L</italic>’ = <italic>O</italic>(<italic>l</italic>). Therefore, <italic>T</italic><sub>SamSelect</sub> is given as follows.<disp-formula id="Equ13"><label>13</label><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ {T}_{\mathrm{SamSelect}}=O\left(\sum \limits_{i=0}^w{4}^w\log \left|\Sigma \right|+ tn\sum \limits_{i=0}^k\left(\begin{array}{c}w\\ {}i\end{array}\right){\left(\left|\Sigma \right|-1\right)}^i+{t}^2{l}^2\right) $$\end{document}</tex-math><mml:math id="M26" display="block"><mml:msub><mml:mi>T</mml:mi><mml:mtext>SamSelect</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:munderover><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mi>w</mml:mi></mml:munderover><mml:msup><mml:mn>4</mml:mn><mml:mi>w</mml:mi></mml:msup><mml:mo>log</mml:mo><mml:mfenced close="|" open="|"><mml:mi mathvariant="normal">Σ</mml:mi></mml:mfenced><mml:mo>+</mml:mo><mml:mi mathvariant="italic">tn</mml:mi><mml:munderover><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:munderover><mml:mfenced close=")" open="("><mml:mtable columnalign="center"><mml:mtr><mml:mtd><mml:mi>w</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>i</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:mfenced><mml:msup><mml:mfenced close=")" open="("><mml:mrow><mml:mfenced close="|" open="|"><mml:mi mathvariant="normal">Σ</mml:mi></mml:mfenced><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfenced><mml:mi>i</mml:mi></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mi>t</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:msup><mml:mi>l</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:mfenced></mml:math><graphic xlink:href="12859_2018_2242_Article_Equ13.gif" position="anchor"/></alternatives></disp-formula></p>
    </sec>
  </sec>
  <sec id="Sec13">
    <title>Results and discussion</title>
    <sec id="Sec14">
      <title>Data, experimental setting and evaluation</title>
      <p id="Par56">Both the simulated data and real data are used in our experiment. The simulated data are generated as follows [<xref ref-type="bibr" rid="CR5">5</xref>]: randomly generate <italic>t n-</italic>length DNA sequences and an <italic>l</italic>-length motif <italic>m</italic>; then, randomly select <italic>qt</italic> sequences, each implanted with a random instance <italic>m</italic>’ of <italic>m</italic> in a random position. The Hamming distance between <italic>m</italic> and <italic>m</italic>’ is less than or equal to <italic>d</italic>. To control the motif conservation, an instance <italic>m</italic>’ of <italic>m</italic> is generated as follows: randomly select <italic>d</italic> positions of <italic>m</italic>, and then, for each selected position <italic>i</italic>, change <italic>m</italic>[<italic>i</italic>] to a different character with probability <italic>g</italic>; a large <italic>g</italic> leads to lower motif conservation.</p>
      <p id="Par57">According to the settings of (<italic>l</italic>, <italic>d</italic>), <italic>t</italic>, <italic>q</italic> and <italic>g</italic>, three groups of simulated datasets are generated. The first group of simulated datasets is used to test qPMS algorithms under different (<italic>l</italic>, <italic>d</italic>) problem instances by fixing <italic>t</italic> = 3000 and <italic>q</italic> = 0.5, varying (<italic>l</italic>, <italic>d</italic>) from (9, 2) to (19, 7) and taking <italic>g</italic> as 0.2, 0.5 and 0.8 to represent high, intermediate and low conservation, respectively. The second group of simulated datasets is used to test qPMS algorithms under different proportions of sequences containing motif instances by fixing (<italic>l</italic>, <italic>d</italic>) = (9, 2), <italic>t</italic> = 3000 and <italic>g</italic> = 0.8 and varying <italic>q</italic> from 0.2 to 0.9. The third group of simulated datasets is used to test qPMS algorithms with a different scale of input by fixing (<italic>l</italic>, <italic>d</italic>) = (9, 2), <italic>g</italic> = 0.8 and <italic>q</italic> = 0.5 and varying <italic>t</italic> from 3000 to 10,000. For each combination of (<italic>l</italic>, <italic>d</italic>), <italic>t</italic>, <italic>q</italic> and <italic>g</italic>, the result is the average obtained on five randomly generated datasets.</p>
      <p id="Par58">Eight <italic>Homo sapiens</italic> datasets selected from the ENCODE TF ChIP-seq data [<xref ref-type="bibr" rid="CR32">32</xref>] and twelve mouse datasets in the mouse embryonic stem cell (mESC) data [<xref ref-type="bibr" rid="CR33">33</xref>] are used as the real data. As shown in Tables <xref rid="Tab2" ref-type="table">2</xref> and <xref rid="Tab3" ref-type="table">3</xref>, these datasets, each named for the corresponding transcription factor, have different numbers <italic>t</italic> of sequences, ranging from 1126 to 39,601. We use the following method to obtain the proportion <italic>q</italic> of sequences containing motif instances for each dataset: determine a consensus motif <italic>m</italic> (see the second column of Tables <xref rid="Tab2" ref-type="table">2</xref> and <xref rid="Tab3" ref-type="table">3</xref>) according to the published motif (see Figs. <xref rid="Fig3" ref-type="fig">3</xref> and <xref rid="Fig4" ref-type="fig">4</xref>), and set its value of (<italic>l</italic>, <italic>d</italic>) to a challenge problem instance [<xref ref-type="bibr" rid="CR25">25</xref>]; then, scan the entire dataset using <italic>m</italic> to obtain the number <italic>Q</italic> of sequences containing at least one occurrence of <italic>m</italic> with up to <italic>d</italic> mismatches; finally, take <italic>q</italic> as <italic>Q</italic>/<italic>t</italic>. Note that, the actual value of <italic>q</italic> will be less than <italic>Q</italic>/<italic>t</italic> because the sequences contain random occurrences of <italic>m</italic>. We find that, although more sequences in ChIP-seq datasets than in traditional small datasets containing motif instances, the proportion <italic>q</italic> of sequences containing motif instances in ChIP-seq datasets is small. That is, a ChIP-seq dataset contains many background sequences.<fig id="Fig3"><label>Fig. 3</label><caption><p>Results on the ENCODE TF ChIP-seq data. This figure shows the results on the eight <italic>Homo sapiens</italic> datasets selected from the ENCODE TF ChIP-seq data</p></caption><graphic xlink:href="12859_2018_2242_Fig3_HTML" id="MO6"/></fig><fig id="Fig4"><label>Fig. 4</label><caption><p>Results on the mESC data. This figure shows the results on the 12 mouse datasets in the mESC data</p></caption><graphic xlink:href="12859_2018_2242_Fig4_HTML" id="MO7"/></fig></p>
      <p id="Par59">For the simulated data, the stpd qPMS algorithms (FMotif [<xref ref-type="bibr" rid="CR17">17</xref>]) and spd qPMS algorithms (TravStrR [<xref ref-type="bibr" rid="CR21">21</xref>] and qPMS9 [<xref ref-type="bibr" rid="CR25">25</xref>]) are tested separately to verify the effect of using the sample sequences. FMotif is designed to handle ChIP-seq datasets based on the suffix tree, whereas TravStrR and qPMS9 show good time performance when identifying motifs of large (<italic>l</italic>, <italic>d</italic>) on traditional datasets. For the real data, since the qPMS algorithms report the same results, we use a representative algorithm FMotif to verify that we can find real motifs in a reasonable time.</p>
      <p id="Par60">For each dataset <italic>D</italic>, the experiment uses SamSelect to select the sample sequence sets <italic>D</italic>’ from <italic>D</italic>, and then qPMS algorithms are executed separately on <italic>D</italic> and <italic>D</italic>’. When determining a sample sequence set <italic>D</italic>’, the number of sample sequences <italic>t</italic>’ is set to 100, and the proportion <italic>q</italic>’ of the sequences containing motif instances in <italic>D</italic>’ is set to 0.95 and 0.9 under the simulated and real data, respectively. Note that we use a smaller <italic>q</italic>’ for real data because more disturbance information is present in real data. The experimental environment is a 2.60 GHz 24-core platform with 64 Gbyte memory. SamSelect and FMotif are executed on a single core. TravStrR and qPMS9 are executed on 24 cores.</p>
      <p id="Par61">The sample sequence selection is evaluated in terms of the following two goals. The first is to compute the speedup of running time <italic>T</italic><sub><italic>D</italic></sub>/<italic>T</italic><sub><italic>s</italic></sub> + <italic>T</italic><sub><italic>D</italic></sub>’, where <italic>T</italic><sub><italic>s</italic></sub> is the time of selecting sample sequences using SamSelect, and <italic>T</italic><sub><italic>D</italic></sub> and <italic>T</italic><sub><italic>D</italic></sub>’ are the running time of a particular qPMS algorithm on <italic>D</italic> and <italic>D</italic>’, respectively. The speedup can be fairly large as the number of sequences grows. The second is to verify whether the qPMS algorithms can find the implanted or real motifs <italic>m</italic> on <italic>D</italic>’; for FMotif, since it can output the rank of the identified motifs, we also compare the rank of <italic>m</italic> among the motifs obtained on <italic>D</italic> and that on <italic>D</italic>’. Note that in the case of two or more <italic>D</italic>’, <italic>T</italic><sub><italic>D</italic></sub>’ is the total time on each <italic>D</italic>’. For the simulated data, the rank of <italic>m</italic> among the identified motifs is obtained on the first <italic>D</italic>’, since experimental results show that <italic>m</italic> is always present in the first <italic>D</italic>’; for the real data, both the rank of <italic>D</italic>’ containing <italic>m</italic> (denoted by <italic>D</italic>’<sub>m</sub>) among all <italic>D</italic>’ and the rank of <italic>m</italic> among the motifs obtained on <italic>D</italic>’<sub>m</sub> are reported.</p>
    </sec>
    <sec id="Sec15">
      <title>Results of accelerating suffix tree-based pattern-driven qPMS algorithms</title>
      <p id="Par62">Since the maximum number of sequences processed by FMotif is limited to 3000, we only perform experiments on the first and second groups of simulated datasets, and the results are shown in Tables <xref rid="Tab4" ref-type="table">4</xref> and <xref rid="Tab5" ref-type="table">5</xref>, respectively. We find that using the sample sequences selected by SamSelect to accelerate FMotif is effective. On the one hand, for each dataset <italic>D</italic>, the implanted motif <italic>m</italic> can be found on the selected sample sequence sets <italic>D</italic>’; in particular, the rank of <italic>m</italic> among the (<italic>l</italic>, <italic>d</italic>) motifs obtained on <italic>D</italic>’ can hold that on <italic>D</italic>, except for a few cases with a slight rise. On the other hand, the execution of FMotif on <italic>D</italic>’ achieves a good speedup (in some cases, the speedup can be more than 200); moreover, the running time of SamSelect is very small, generally negligible relative to the running time of qPMS algorithms on <italic>D</italic>.<table-wrap id="Tab4"><label>Table 4</label><caption><p>Results of stpd qPMS algorithms on the first group of simulated datasets</p></caption><table frame="hsides" rules="groups"><thead><tr><th rowspan="2">(<italic>l</italic>, <italic>d</italic>)</th><th rowspan="2">Conservation</th><th rowspan="2"><italic>T</italic><sub><italic>s</italic></sub></th><th colspan="5">FMotif</th></tr><tr><th><italic>T</italic><sub><italic>D</italic></sub></th><th><italic>R</italic><sub><italic>D</italic></sub></th><th><italic>T</italic><sub><italic>D</italic></sub>’</th><th><italic>R</italic><sub><italic>D</italic></sub>’</th><th>Speedup</th></tr></thead><tbody><tr><td rowspan="3">(9, 2)</td><td>High</td><td>33.0 s</td><td>1.6 m</td><td>1</td><td>1.2 s</td><td>1</td><td>3</td></tr><tr><td>Intermediate</td><td>17.0 s</td><td>1.7 m</td><td>1</td><td>0.7 s</td><td>1</td><td>6</td></tr><tr><td>Low</td><td>12.8 s</td><td>1.7 m</td><td>1</td><td>0.5 s</td><td>1</td><td>8</td></tr><tr><td rowspan="3">(11, 3)</td><td>High</td><td>26.8 s</td><td>21.1 m</td><td>1</td><td>7.0 s</td><td>1</td><td>37</td></tr><tr><td>Intermediate</td><td>18.0 s</td><td>21.1 m</td><td>1</td><td>6.0 s</td><td>1</td><td>53</td></tr><tr><td>Low</td><td>13.0 s</td><td>21.3 m</td><td>1</td><td>5.7 s</td><td>1</td><td>68</td></tr><tr><td rowspan="3">(13, 4)</td><td>High</td><td>28.8 s</td><td>3.0 h</td><td>1</td><td>1.0 m</td><td>1.2</td><td>119</td></tr><tr><td>Intermediate</td><td>20.2 s</td><td>3.0 h</td><td>1</td><td>1.0 m</td><td>1</td><td>130</td></tr><tr><td>Low</td><td>13.0 s</td><td>3.4 h</td><td>1</td><td>56.2 s</td><td>1.2</td><td>174</td></tr><tr><td rowspan="3">(15, 5)</td><td>High</td><td>29.4 s</td><td>37.7 h</td><td>1</td><td>10.4 m</td><td>1</td><td>208</td></tr><tr><td>Intermediate</td><td>20.2 s</td><td>34.1 h</td><td>1</td><td>9.6 m</td><td>1</td><td>207</td></tr><tr><td>Low</td><td>13.0 s</td><td>35.9 h</td><td>1</td><td>10.5 m</td><td>1</td><td>200</td></tr><tr><td rowspan="3">(17, 6)</td><td>High</td><td>29.4 s</td><td>N</td><td>N</td><td>1.7 h</td><td>1.2</td><td>&gt; 28</td></tr><tr><td>Intermediate</td><td>19.8 s</td><td>N</td><td>N</td><td>1.5 h</td><td>1</td><td>&gt; 31</td></tr><tr><td>Low</td><td>13.0 s</td><td>N</td><td>N</td><td>1.3 h</td><td>1</td><td>&gt; 36</td></tr><tr><td rowspan="3">(19, 7)</td><td>High</td><td>32.0 s</td><td>N</td><td>N</td><td>17.3 h</td><td>1</td><td>&gt; 3</td></tr><tr><td>Intermediate</td><td>21.0 s</td><td>N</td><td>N</td><td>15.9 h</td><td>1</td><td>&gt; 3</td></tr><tr><td>Low</td><td>12.8 s</td><td>N</td><td>N</td><td>13.0 h</td><td>1</td><td>&gt; 4</td></tr></tbody></table><table-wrap-foot><p><italic>s</italic> seconds, <italic>m</italic> minutes, <italic>h</italic> hours, <italic>N</italic> no result because the running time exceeds 48 h; <italic>T</italic><sub><italic>s</italic></sub>: running time of SamSelect; <italic>T</italic><sub><italic>D</italic></sub> and <italic>T</italic><sub><italic>D</italic></sub>’: running time of a qPMS algorithm on the original dataset <italic>D</italic> and the sample sequence sets <italic>D</italic>’, respectively; <italic>R</italic><sub><italic>D</italic></sub> and <italic>R</italic><sub><italic>D</italic></sub>’: the rank of the implanted motif among the identified motifs obtained on <italic>D</italic> and <italic>D</italic>’, respectively; speedup: <italic>T</italic><sub><italic>D</italic></sub> / <italic>T</italic><sub><italic>s</italic></sub> + <italic>T</italic><sub><italic>D</italic></sub>’</p></table-wrap-foot></table-wrap><table-wrap id="Tab5"><label>Table 5</label><caption><p>Results of stpd qPMS algorithms on the second group of simulated datasets</p></caption><table frame="hsides" rules="groups"><thead><tr><th rowspan="2"><italic>q</italic></th><th rowspan="2"><italic>T</italic><sub><italic>s</italic></sub></th><th colspan="5">FMotif</th></tr><tr><th><italic>T</italic><sub><italic>D</italic></sub></th><th><italic>R</italic><sub><italic>D</italic></sub></th><th><italic>T</italic><sub><italic>D</italic></sub>’</th><th><italic>R</italic><sub><italic>D</italic></sub>’</th><th>Speedup</th></tr></thead><tbody><tr><td>0.2</td><td>13.0 s</td><td>2.4 m</td><td>1</td><td>0.5 s</td><td>1</td><td>11</td></tr><tr><td>0.3</td><td>13.2 s</td><td>2.2 m</td><td>1</td><td>0.5 s</td><td>1</td><td>10</td></tr><tr><td>0.4</td><td>13.0 s</td><td>2.0 m</td><td>1</td><td>0.5 s</td><td>1</td><td>9</td></tr><tr><td>0.5</td><td>13.0 s</td><td>1.9 m</td><td>1</td><td>0.6 s</td><td>1</td><td>8</td></tr><tr><td>0.6</td><td>13.0 s</td><td>1.2 m</td><td>1</td><td>0.5 s</td><td>1</td><td>5</td></tr><tr><td>0.7</td><td>14.0 s</td><td>1.1 m</td><td>1</td><td>0.5 s</td><td>1</td><td>4</td></tr><tr><td>0.8</td><td>14.0 s</td><td>1.0 m</td><td>1</td><td>0.7 s</td><td>1</td><td>4</td></tr><tr><td>0.9</td><td>14.0 s</td><td>54.9 s</td><td>1</td><td>0.5 s</td><td>1</td><td>4</td></tr></tbody></table><table-wrap-foot><p><italic>s</italic> seconds, <italic>m</italic> minutes, <italic>T</italic><sub><italic>s</italic></sub>: running time of SamSelect; <italic>T</italic><sub><italic>D</italic></sub> and <italic>T</italic><sub><italic>D</italic></sub>’: running time of a qPMS algorithm on the original dataset <italic>D</italic> and the sample sequence sets <italic>D</italic>’, respectively; <italic>R</italic><sub><italic>D</italic></sub> and <italic>R</italic><sub><italic>D</italic></sub>’: the rank of the implanted motif among the identified motifs obtained on <italic>D</italic> and <italic>D</italic>’, respectively; speedup: <italic>T</italic><sub><italic>D</italic></sub> / <italic>T</italic><sub><italic>s</italic></sub> + <italic>T</italic><sub><italic>D</italic></sub>’</p></table-wrap-foot></table-wrap></p>
      <p id="Par63">We perform the following further analysis according to the results. First, the use of <italic>D</italic>’ can effectively reduce the effect of (<italic>l</italic>, <italic>d</italic>) on the time performance of FMotif. As shown in Table <xref rid="Tab4" ref-type="table">4</xref>, although the running time of FMotif increases dramatically with increasing (<italic>l</italic>, <italic>d</italic>), which is easily explained by the time complexity of the stpd qPMS algorithms, the largest (<italic>l</italic>, <italic>d</italic>) problem instances processed by FMotif within 48 h on <italic>D</italic> and <italic>D</italic>’ are (15, 5) and (19, 7), respectively. Second, the use of <italic>D</italic>’ can effectively reduce the effect of <italic>q</italic> on the time performance of FMotif. As shown in Table <xref rid="Tab5" ref-type="table">5</xref>, the running time of FMotif increases as <italic>q</italic> decreases for <italic>D</italic> of the same size, whereas FMotif executed on <italic>D</italic>’ can have efficient and stable time performance because the sizes of <italic>D</italic>’ and <italic>q</italic>’ obtained by SamSelect are nearly fixed. Third, the speedup is relatively small when processing small (<italic>l</italic>, <italic>d</italic>) problem instances with large <italic>q</italic> (e.g., (<italic>l</italic>, <italic>d</italic>) = (9, 2) and <italic>q</italic> = 0.9). In this case, the running time of SamSelect is larger than that of the FMotif executed on <italic>D</italic>’ but still smaller than that of FMotif executed on <italic>D</italic>. Finally, as shown in Table <xref rid="Tab4" ref-type="table">4</xref>, for a particular (<italic>l</italic>, <italic>d</italic>), the higher the conservation of implanted motifs the larger the running time of SamSelect. This difference occurs because a high conservation of implanted motifs leads to the accumulation of more substrings to be clustered, thus increasing the time cost of clustering.</p>
      <p id="Par64">We also perform experiments on the simulated datasets of non-challenging (<italic>l</italic>, <italic>d</italic>) instances. Except for (<italic>l</italic>, <italic>d</italic>), the settings of <italic>t</italic>, <italic>q</italic> and <italic>g</italic> for this group of simulated datasets are the same as those for the first group of simulated datasets. The results are shown in Table <xref rid="Tab6" ref-type="table">6</xref>. We find that using the selected sample sequences to accelerate FMotif is also effective for non-challenging (<italic>l</italic>, <italic>d</italic>) instances. It should be noted that, the speedup is less than 1 for the (9, 1) instance, which is a non-challenging instance with a small (<italic>l</italic>, <italic>d</italic>). In this case, the running time of FMotif is small even on the entire dataset and it is not necessary to further accelerate FMotif using the selected sample sequences.<table-wrap id="Tab6"><label>Table 6</label><caption><p>Results on the simulated datasets of non-challenging (<italic>l</italic>, <italic>d</italic>) instances</p></caption><table frame="hsides" rules="groups"><thead><tr><th rowspan="2">(<italic>l</italic>, <italic>d</italic>)</th><th rowspan="2">Conservation</th><th rowspan="2"><italic>T</italic><sub><italic>s</italic></sub></th><th colspan="5">FMotif</th></tr><tr><th><italic>T</italic><sub><italic>D</italic></sub></th><th><italic>R</italic><sub><italic>D</italic></sub></th><th><italic>T</italic><sub><italic>D</italic></sub>’</th><th><italic>R</italic><sub><italic>D</italic></sub>’</th><th>Speedup</th></tr></thead><tbody><tr><td rowspan="3">(9, 1)</td><td>High</td><td>27.6 s</td><td>8.7 s</td><td>1</td><td>0.1 s</td><td>1</td><td>&lt; 1</td></tr><tr><td>Intermediate</td><td>22.8 s</td><td>7.6 s</td><td>1</td><td>0.1 s</td><td>1</td><td>&lt; 1</td></tr><tr><td>Low</td><td>15.8 s</td><td>7.7 s</td><td>1</td><td>0.2 s</td><td>1.2</td><td>&lt; 1</td></tr><tr><td rowspan="3">(11, 2)</td><td>High</td><td>21.2 s</td><td>2.1 m</td><td>1</td><td>1.1 s</td><td>1</td><td>6</td></tr><tr><td>Intermediate</td><td>15.4 s</td><td>2.0 m</td><td>1</td><td>0.9 s</td><td>1</td><td>7</td></tr><tr><td>Low</td><td>12.0 s</td><td>2.1 m</td><td>1</td><td>1.0 s</td><td>1</td><td>10</td></tr><tr><td rowspan="3">(13, 3)</td><td>High</td><td>18.2 s</td><td>18.0 m</td><td>1</td><td>11.2 s</td><td>1.2</td><td>37</td></tr><tr><td>Intermediate</td><td>15.0 s</td><td>18.2 m</td><td>1</td><td>10.1 s</td><td>1</td><td>43</td></tr><tr><td>Low</td><td>12.0 s</td><td>18.1 m</td><td>1</td><td>9.7 s</td><td>1</td><td>50</td></tr><tr><td rowspan="3">(15, 4)</td><td>High</td><td>18.2 s</td><td>3.4 h</td><td>1</td><td>1.7 m</td><td>1.2</td><td>102</td></tr><tr><td>Intermediate</td><td>15.0 s</td><td>3.4 h</td><td>1</td><td>1.6 m</td><td>1</td><td>111</td></tr><tr><td>Low</td><td>11.0 s</td><td>3.3 h</td><td>1</td><td>1.5 m</td><td>1</td><td>116</td></tr><tr><td rowspan="3">(17, 5)</td><td>High</td><td>18.0 s</td><td>37.5 h</td><td>1</td><td>15.7 m</td><td>1</td><td>141</td></tr><tr><td>Intermediate</td><td>15.0 s</td><td>40.6 h</td><td>1</td><td>16.3 m</td><td>1</td><td>147</td></tr><tr><td>Low</td><td>10.8 s</td><td>38.8 h</td><td>1</td><td>13.8 m</td><td>1</td><td>166</td></tr><tr><td rowspan="3">(19, 6)</td><td>High</td><td>21.0 s</td><td>N</td><td>N</td><td>2.9 h</td><td>1</td><td>&gt; 17</td></tr><tr><td>Intermediate</td><td>16.2 s</td><td>N</td><td>N</td><td>2.3 h</td><td>1</td><td>&gt; 21</td></tr><tr><td>Low</td><td>10.6 s</td><td>N</td><td>N</td><td>2.1 h</td><td>1</td><td>&gt; 22</td></tr></tbody></table><table-wrap-foot><p><italic>s</italic> seconds, <italic>m</italic> minutes, <italic>h</italic> hours, <italic>N</italic> no result because the running time exceeds 48 h; <italic>T</italic><sub><italic>s</italic></sub>: running time of SamSelect; <italic>T</italic><sub><italic>D</italic></sub> and <italic>T</italic><sub><italic>D</italic></sub>’: running time of a qPMS algorithm on the original dataset <italic>D</italic> and the sample sequence sets <italic>D</italic>’, respectively; <italic>R</italic><sub><italic>D</italic></sub> and <italic>R</italic><sub><italic>D</italic></sub>’: the rank of the implanted motif among the identified motifs obtained on <italic>D</italic> and <italic>D</italic>’, respectively; speedup: <italic>T</italic><sub><italic>D</italic></sub> / <italic>T</italic><sub><italic>s</italic></sub> + <italic>T</italic><sub><italic>D</italic></sub>’</p></table-wrap-foot></table-wrap></p>
    </sec>
    <sec id="Sec16">
      <title>Results of accelerating sample-pattern-driven qPMS algorithms</title>
      <p id="Par65">Tables <xref rid="Tab7" ref-type="table">7</xref>, <xref rid="Tab8" ref-type="table">8</xref> and <xref rid="Tab9" ref-type="table">9</xref> give the results of testing spd qPMS algorithms (qPMS9 and TravStrR) on the first, second and third groups of simulated datasets, respectively. Since they output the same motifs as FMotif, they can also find the implanted (<italic>l</italic>, <italic>d</italic>) motifs, and thus we mainly consider their running time.<table-wrap id="Tab7"><label>Table 7</label><caption><p>Results of spd qPMS algorithms on the first group of simulated datasets</p></caption><table frame="hsides" rules="groups"><thead><tr><th rowspan="2">(<italic>l</italic>, <italic>d</italic>)</th><th rowspan="2">conservation</th><th rowspan="2"><italic>T</italic><sub><italic>s</italic></sub></th><th colspan="3">qPMS9</th><th colspan="3">TravStrR</th></tr><tr><th><italic>T</italic><sub><italic>D</italic></sub></th><th><italic>T</italic><sub><italic>D</italic></sub>’</th><th>Speedup</th><th><italic>T</italic><sub><italic>D</italic></sub></th><th><italic>T</italic><sub><italic>D</italic></sub>’</th><th>Speedup</th></tr></thead><tbody><tr><td rowspan="3">(9, 2)</td><td>high</td><td>33.0 s</td><td>N</td><td>2.3 s</td><td>&gt; 4895</td><td>N</td><td>0.3 s</td><td>&gt; 5189</td></tr><tr><td>intermediate</td><td>17.0 s</td><td>N</td><td>1.8 s</td><td>&gt; 9191</td><td>N</td><td>0.2 s</td><td>&gt; 10,047</td></tr><tr><td>low</td><td>12.8 s</td><td>N</td><td>1.7 s</td><td>&gt; 11,917</td><td>24.2 h</td><td>0.1 s</td><td>6766</td></tr><tr><td rowspan="3">(11, 3)</td><td>high</td><td>26.8 s</td><td>N</td><td>3.5 s</td><td>&gt; 5703</td><td>N</td><td>0.6 s</td><td>&gt; 6307</td></tr><tr><td>intermediate</td><td>18.0 s</td><td>N</td><td>3.1 s</td><td>&gt; 8190</td><td>N</td><td>0.3 s</td><td>&gt; 9443</td></tr><tr><td>low</td><td>13.0 s</td><td>N</td><td>3.0 s</td><td>&gt; 10,800</td><td>N</td><td>0.3 s</td><td>&gt; 12,992</td></tr><tr><td rowspan="3">(13, 4)</td><td>high</td><td>28.8 s</td><td>N</td><td>8.4 s</td><td>&gt; 46,456</td><td>N</td><td>2.8 s</td><td>&gt; 5468</td></tr><tr><td>intermediate</td><td>20.2 s</td><td>N</td><td>7.6 s</td><td>&gt; 6216</td><td>N</td><td>1.9 s</td><td>&gt; 7819</td></tr><tr><td>low</td><td>13.0 s</td><td>N</td><td>7.0 s</td><td>&gt; 8640</td><td>N</td><td>1.4 s</td><td>&gt; 12,000</td></tr><tr><td rowspan="3">(15, 5)</td><td>high</td><td>29.4 s</td><td>N</td><td>25.3 s</td><td>&gt; 3159</td><td>N</td><td>29.5 s</td><td>&gt; 2934</td></tr><tr><td>intermediate</td><td>20.2 s</td><td>N</td><td>13.6 s</td><td>&gt; 5112</td><td>N</td><td>10.6 s</td><td>&gt; 5610</td></tr><tr><td>low</td><td>13.0 s</td><td>N</td><td>12.5 s</td><td>&gt; 6776</td><td>N</td><td>5.6 s</td><td>&gt; 9290</td></tr><tr><td rowspan="3">(17, 6)</td><td>high</td><td>29.4 s</td><td>N</td><td>9.1 m</td><td>&gt; 300</td><td>N</td><td>6.4 m</td><td>&gt; 415</td></tr><tr><td>intermediate</td><td>19.8 s</td><td>N</td><td>47.8 s</td><td>&gt; 2556</td><td>N</td><td>36.8 s</td><td>&gt; 3053</td></tr><tr><td>low</td><td>13.0 s</td><td>N</td><td>16.1 s</td><td>&gt; 5938</td><td>N</td><td>14.0 s</td><td>&gt; 6400</td></tr><tr><td rowspan="3">(19, 7)</td><td>high</td><td>32.0 s</td><td>N</td><td>N</td><td>N</td><td>N</td><td>1.1 h</td><td>&gt; 43</td></tr><tr><td>intermediate</td><td>21.0 s</td><td>N</td><td>5.0 m</td><td>&gt; 541</td><td>N</td><td>4.5 m</td><td>&gt; 598</td></tr><tr><td>low</td><td>12.8 s</td><td>N</td><td>30.7 s</td><td>&gt; 3972</td><td>N</td><td>42.1 s</td><td>&gt; 3148</td></tr></tbody></table><table-wrap-foot><p><italic>s</italic> seconds, <italic>m</italic> minutes, <italic>h</italic> hours, <italic>N</italic> no result because the running time exceeds 48 h; <italic>T</italic><sub><italic>s</italic></sub>: running time of SamSelect; <italic>T</italic><sub><italic>D</italic></sub> and <italic>T</italic><sub><italic>D</italic></sub>’: running time of a qPMS algorithm on the original dataset <italic>D</italic> and the sample sequence sets <italic>D</italic>’, respectively; speedup: <italic>T</italic><sub><italic>D</italic></sub> / <italic>T</italic><sub><italic>s</italic></sub> + <italic>T</italic><sub><italic>D</italic></sub>’</p></table-wrap-foot></table-wrap><table-wrap id="Tab8"><label>Table 8</label><caption><p>Results of spd qPMS algorithms on the second group of simulated datasets</p></caption><table frame="hsides" rules="groups"><thead><tr><th rowspan="2"><italic>q</italic></th><th rowspan="2"><italic>T</italic><sub><italic>s</italic></sub></th><th colspan="3">qPMS9</th><th colspan="3">TravStrR</th></tr><tr><th><italic>T</italic><sub><italic>D</italic></sub></th><th><italic>T</italic><sub><italic>D</italic></sub>’</th><th>Speedup</th><th><italic>T</italic><sub><italic>D</italic></sub></th><th><italic>T</italic><sub><italic>D</italic></sub>’</th><th>Speedup</th></tr></thead><tbody><tr><td>0.2</td><td>13.0 s</td><td>N</td><td>1.3 s</td><td>&gt; 12,084</td><td>N</td><td>0.1 s</td><td>&gt; 13,191</td></tr><tr><td>0.3</td><td>13.2 s</td><td>N</td><td>1.5 s</td><td>&gt; 11,755</td><td>N</td><td>0.1 s</td><td>&gt; 12,992</td></tr><tr><td>0.4</td><td>13.0 s</td><td>N</td><td>1.7 s</td><td>&gt; 11,755</td><td>41.8 h</td><td>0.1 s</td><td>11,490</td></tr><tr><td>0.5</td><td>13.0 s</td><td>N</td><td>1.7 s</td><td>&gt; 11,755</td><td>24.3 h</td><td>0.1 s</td><td>6671</td></tr><tr><td>0.6</td><td>13.0 s</td><td>24.2 h</td><td>1.7 s</td><td>5919</td><td>11.2 h</td><td>0.1 s</td><td>3088</td></tr><tr><td>0.7</td><td>14.0 s</td><td>7.2 h</td><td>1.7 s</td><td>1651</td><td>3.1 h</td><td>0.1 s</td><td>785</td></tr><tr><td>0.8</td><td>14.0 s</td><td>1.5 h</td><td>1.7 s</td><td>338</td><td>1.5 h</td><td>0.1 s</td><td>377</td></tr><tr><td>0.9</td><td>14.0 s</td><td>9.2 m</td><td>1.7 s</td><td>35</td><td>4.1 m</td><td>0.1 s</td><td>17</td></tr></tbody></table><table-wrap-foot><p><italic>s</italic> seconds, <italic>m</italic> minutes, <italic>h</italic> hours, <italic>N</italic> no result because the running time exceeds 48 h; <italic>T</italic><sub><italic>s</italic></sub>: running time of SamSelect; <italic>T</italic><sub><italic>D</italic></sub> and <italic>T</italic><sub><italic>D</italic></sub>’: running time of a qPMS algorithm on the original dataset <italic>D</italic> and the sample sequence sets <italic>D</italic>’, respectively; speedup: <italic>T</italic><sub><italic>D</italic></sub> / <italic>T</italic><sub><italic>s</italic></sub> + <italic>T</italic><sub><italic>D</italic></sub>’</p></table-wrap-foot></table-wrap><table-wrap id="Tab9"><label>Table 9</label><caption><p>Results of spd qPMS algorithms on the third group of simulated datasets</p></caption><table frame="hsides" rules="groups"><thead><tr><th rowspan="2"><bold><italic>t</italic></bold></th><th rowspan="2"><italic>T</italic><sub><italic>s</italic></sub></th><th colspan="3">qPMS9</th><th colspan="3">TravStrR</th></tr><tr><th><italic>T</italic><sub><italic>D</italic></sub></th><th><italic>T</italic><sub><italic>D</italic></sub>’</th><th>Speedup</th><th><italic>T</italic><sub><italic>D</italic></sub></th><th><italic>T</italic><sub><italic>D</italic></sub>’</th><th>Speedup</th></tr></thead><tbody><tr><td>3000</td><td>13.0 s</td><td>N</td><td>1.7 s</td><td>&gt; 11,755</td><td>24.3 h</td><td>0.1 s</td><td>6671</td></tr><tr><td>4000</td><td>14.0 s</td><td>N</td><td>1.7 s</td><td>&gt; 11,006</td><td>N</td><td>0.1 s</td><td>&gt; 12,255</td></tr><tr><td>5000</td><td>15.0 s</td><td>N</td><td>1.7 s</td><td>&gt; 10,347</td><td>N</td><td>0.1 s</td><td>&gt; 11,444</td></tr><tr><td>6000</td><td>15.8 s</td><td>N</td><td>1.7 s</td><td>&gt; 9874</td><td>N</td><td>0.1 s</td><td>&gt; 10,868</td></tr><tr><td>7000</td><td>16.4 s</td><td>N</td><td>1.7 s</td><td>&gt; 9547</td><td>N</td><td>0.1 s</td><td>&gt; 10,473</td></tr><tr><td>8000</td><td>17.0 s</td><td>N</td><td>1.8 s</td><td>&gt; 9191</td><td>N</td><td>0.1 s</td><td>&gt; 10,105</td></tr><tr><td>9000</td><td>18.0 s</td><td>N</td><td>1.7 s</td><td>&gt; 8772</td><td>N</td><td>0.1 s</td><td>&gt; 9547</td></tr><tr><td>10,000</td><td>18.8 s</td><td>N</td><td>1.8 s</td><td>&gt; 8388</td><td>N</td><td>0.2 s</td><td>&gt; 9095</td></tr></tbody></table><table-wrap-foot><p><italic>s</italic> seconds, <italic>h</italic> hours, <italic>N</italic> no result because running time exceeds 48 h; <italic>T</italic><sub><italic>s</italic></sub>: running time of SamSelect; <italic>T</italic><sub><italic>D</italic></sub> and <italic>T</italic><sub><italic>D</italic></sub>’: running time of a qPMS algorithm on the original dataset <italic>D</italic> and the sample sequence sets <italic>D</italic>’, respectively; speedup: <italic>T</italic><sub><italic>D</italic></sub> / <italic>T</italic><sub><italic>s</italic></sub> + <italic>T</italic><sub><italic>D</italic></sub>’</p></table-wrap-foot></table-wrap></p>
      <p id="Par66">On the whole, both qPMS9 and TravStrR show poor time performance on <italic>D</italic>, spending more than 48 h for all (<italic>l</italic>, <italic>d</italic>) problem instances except small ones with large <italic>q</italic>. Therefore, a large speedup on <italic>D</italic>’ is achieved. The use of <italic>D</italic>’ can effectively reduce the effects of (<italic>l</italic>, <italic>d</italic>), <italic>q</italic> and <italic>t</italic> on the time performance. Furthermore, we perform the following analysis. First, as shown in Table <xref rid="Tab7" ref-type="table">7</xref>, for a particular (<italic>l</italic>, <italic>d</italic>), spd qPMS algorithms require more time to solve problem instances of high conservation because the motif instances contained in <italic>D</italic>’ are more similar in the case of high conservation, and too many <italic>h</italic> tuples are needed to generate candidate motifs. Therefore, it is not surprising that, for the case of (<italic>l</italic>, <italic>d</italic>) = (19, 7) with high conservation, qPMS9 executed on <italic>D</italic>’ still takes more than 48 h. Second, as shown in Table <xref rid="Tab9" ref-type="table">9</xref>, the running time of SamSelect increases slightly as the data scale increases but is still very small when <italic>t</italic> = 10,000.</p>
    </sec>
    <sec id="Sec17">
      <title>Results on real data</title>
      <p id="Par67">We use FMotif to validate that qPMS algorithms identify real motifs by using the selected sample sequence sets <italic>D</italic>’. For the sake of fairness, a uniform parameter setting is used for each data set <italic>D</italic> in the experiments: we set <italic>q</italic> = 0.3, (<italic>l</italic>, <italic>d</italic>) = (13, 4) and <italic>t</italic>’ = 100 to execute SamSelect. After obtaining <italic>D</italic>’, we set <italic>q</italic>’ = 0.9 and use FMotif to search (13, 4) motifs in <italic>D</italic>’.</p>
      <p id="Par68">In Figs. <xref rid="Fig3" ref-type="fig">3</xref> and <xref rid="Fig4" ref-type="fig">4</xref>, we give the experimental results, including the running time of SamSelect, the running time of FMotif on <italic>D</italic>’ and the predicted motifs. The found motif that is most similar to the published motif is taken as the predicted motif, shown in the form of a sequence logo [<xref ref-type="bibr" rid="CR34">34</xref>]. Let <italic>D</italic>’<sub>m</sub> denote the sample sequence set containing the predicted motif. Figures <xref rid="Fig3" ref-type="fig">3</xref> and <xref rid="Fig4" ref-type="fig">4</xref> also show the number of sample sequence sets obtained, the rank of <italic>D</italic>’<sub>m</sub> (<italic>R</italic><sub>1</sub>) and the rank of the predicted motif among the motifs present in <italic>D</italic>’<sub>m</sub> (<italic>R</italic><sub>2</sub>). For the real data, <italic>R</italic><sub>2</sub> is obtained by sorting the motifs present in <italic>D</italic>’<sub>m</sub> in ascending order according to their enrichment <italic>P</italic>-value [<xref ref-type="bibr" rid="CR35">35</xref>]. The sequence logo of the predicted motif is drawn by using the substrings similar to the motif in the entire dataset, i.e., the substrings with a Hamming distance no more than <italic>d</italic> / 2 from the motif. We find that FMotif executed on <italic>D</italic>’ can find the real motifs in a short time. It should be noted that the rank <italic>R</italic><sub>1</sub> and <italic>R</italic><sub>2</sub> differ greatly on some of the real datasets. The reasons are as follows. First, both the co-regulated motifs and the spurious motifs can disturb finding the motif to be identified. Second, the intensity of the disturbance, which affects the rank <italic>R</italic><sub>1</sub> and <italic>R</italic><sub>2</sub>, is usually different for different datasets.</p>
    </sec>
    <sec id="Sec18">
      <title>Applicability of SamSelect</title>
      <p id="Par69">Our motif discovery method is not an exact algorithm. Although our method can find the implanted (<italic>l</italic>, <italic>d</italic>) motif, it does not guarantee finding all (<italic>l</italic>, <italic>d</italic>) motifs present in the entire dataset <italic>D</italic>. Besides the implanted (<italic>l</italic>, <italic>d</italic>) motif, some spurious (<italic>l</italic>, <italic>d</italic>) motifs may also be present in <italic>D</italic> by chance and are usually less conserved than the implanted motif. Our method selects sample sequences by mining high-frequency substrings, which are more likely to be the instances of highly conserved motifs. Therefore, it may miss some spurious (<italic>l</italic>, <italic>d</italic>) motifs. Moreover, some reported motifs present in the sample sequence set <italic>D</italic>’ may not be the (<italic>l</italic>, <italic>d</italic>) motifs present in <italic>D</italic>, but it is not difficult to eliminate such motifs by verifying them in <italic>D</italic>.</p>
      <p id="Par70">Our method is particularly designed for large DNA sequence datasets. When processing traditional datasets (<italic>t</italic> = 20, <italic>n</italic> = 600), the existing qPMS algorithms have already performed well, even for challenging (<italic>l</italic>, <italic>d</italic>) problem instances. Therefore, it is not necessary to use our method to accelerate existing qPMS algorithms on small datasets.</p>
      <p id="Par71">Moreover, the setting of <italic>q</italic>’ is discussed as follows. In general, the proportion <italic>q</italic> of sequences containing motif instances in large datasets is relatively small. For example, the maximum value of <italic>q</italic> for the ChIP-seq datasets given in Tables <xref rid="Tab2" ref-type="table">2</xref> and <xref rid="Tab3" ref-type="table">3</xref> is 0.68. For the sample sequence set selected by our method, the value of <italic>q</italic>’ is set to 0.9 to 0.95 as described in the section Methods. When <italic>q</italic> &gt; 0.95, we still use our method to select the sample sequence set and set <italic>q</italic>’ = <italic>q</italic>. For a special case when <italic>q</italic> = 1, the reported motifs present in the sample sequence set must contain all the (<italic>l</italic>, <italic>d</italic>) motifs present in the entire dataset.</p>
    </sec>
  </sec>
  <sec id="Sec19">
    <title>Conclusions</title>
    <p id="Par72">To address the problem that existing qPMS algorithms are too time consuming for motif discovery on large DNA sequence datasets, we propose an algorithm to select a sample sequence set <italic>D</italic>’ from <italic>D</italic> such that <italic>D</italic>’ has a larger proportion of input sequences containing motif instances. Executed on <italic>D</italic>’, the qPMS algorithms are able to find implanted or real motifs in a significantly shorter time. In our future work, we will design the parallel version of SamSelect and the extended SamSelect algorithm for motif discovery on large alphabet datasets, e.g., protein datasets.</p>
    <p id="Par73">Notably, qPMS10 [<xref ref-type="bibr" rid="CR36">36</xref>, <xref ref-type="bibr" rid="CR37">37</xref>] is also a work of sample sequence selection for the quorum planted motif search. The main difference between qPMS10 and our work is as follows. qPMS10 adopts random sampling to select a sample sequence set with <italic>t</italic>’ ≤ <italic>t</italic> and <italic>q</italic>’ ≤ <italic>q</italic>. In our work, we analyze that for a particular <italic>t</italic>, a small <italic>q</italic> will cause larger computation time. Therefore, we use word count and clustering methods to select sample sequence sets with <italic>t</italic>’ &lt; <italic>t</italic> and 1 ≥ <italic>q</italic>’ &gt; <italic>q</italic>.</p>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>mESC</term>
        <def>
          <p id="Par4">Mouse embryonic stem cell</p>
        </def>
      </def-item>
      <def-item>
        <term>qPMS</term>
        <def>
          <p id="Par5">Quorum planted motif search</p>
        </def>
      </def-item>
      <def-item>
        <term>spd</term>
        <def>
          <p id="Par6">Sample-pattern-driven</p>
        </def>
      </def-item>
      <def-item>
        <term>stpd</term>
        <def>
          <p id="Par7">Suffix tree-based pattern driven</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <ack>
    <title>Acknowledgements</title>
    <p>We express our sincere appreciation to the editors and specialist reviewers for their instructions and help improving the article.</p>
    <sec id="FPar1">
      <title>Funding</title>
      <p id="Par74">This work was supported, in part, by the National Natural Science Foundation of China under Grants 61502366, 61741215 and 61373044 and by the Fundamental Research Funds for the Central Universities under Grant XJS17092. The funding body did not contribute to the design of the study, to the collection, analysis and interpretation of the data, or to the writing of the manuscript.</p>
    </sec>
    <sec id="FPar2">
      <title>Availability of data and materials</title>
      <p id="Par75">The source code of SamSelect and the datasets generated and analyzed during the current study are available at <ext-link ext-link-type="uri" xlink:href="https://github.com/qyu071/samselect">https://github.com/qyu071/samselect</ext-link>.</p>
    </sec>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors’ contributions</title>
    <p>Initial idea of the research was from QY. QY, DW and HH designed the proposed algorithm. DW and QY implemented the proposed algorithm and carried out the experiments. All authors participated in analysis and manuscript preparation. All authors read and approved the final version of the manuscript.</p>
  </notes>
  <notes notes-type="COI-statement">
    <sec id="FPar3">
      <title>Ethics approval and consent to participate</title>
      <p id="Par76">Not applicable</p>
    </sec>
    <sec id="FPar4">
      <title>Consent for publication</title>
      <p id="Par77">Not applicable</p>
    </sec>
    <sec id="FPar5">
      <title>Competing interests</title>
      <p id="Par78">The authors declare that they have no competing interests.</p>
    </sec>
    <sec id="FPar6">
      <title>Publisher’s Note</title>
      <p id="Par79">Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </sec>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>D’haeseleer</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>How does DNA sequence motif discovery work</article-title>
        <source>Nat Biotechnol</source>
        <year>2006</year>
        <volume>24</volume>
        <issue>8</issue>
        <fpage>959</fpage>
        <lpage>961</lpage>
        <pub-id pub-id-type="doi">10.1038/nbt0806-959</pub-id>
        <?supplied-pmid 16900144?>
        <pub-id pub-id-type="pmid">16900144</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wong</surname>
            <given-names>KC</given-names>
          </name>
          <name>
            <surname>Chan</surname>
            <given-names>TM</given-names>
          </name>
          <name>
            <surname>Peng</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>Z</given-names>
          </name>
        </person-group>
        <article-title>DNA motif elucidation using belief propagation</article-title>
        <source>Nucleic Acids Res</source>
        <year>2013</year>
        <volume>41</volume>
        <issue>16</issue>
        <fpage>e153</fpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkt574</pub-id>
        <?supplied-pmid 23814189?>
        <pub-id pub-id-type="pmid">23814189</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Weirauch</surname>
            <given-names>MT</given-names>
          </name>
          <name>
            <surname>Yang</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Albu</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Cote</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Montenegro-Montero</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Drewe</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Najafabadi</surname>
            <given-names>HS</given-names>
          </name>
          <name>
            <surname>Lambert</surname>
            <given-names>SA</given-names>
          </name>
          <name>
            <surname>Mann</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Cook</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Zheng</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Goity</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>van Bakel</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Lozano</surname>
            <given-names>JC</given-names>
          </name>
          <name>
            <surname>Galli</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Lewsey</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Huang</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Mukherjee</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Reece-Hoyes</surname>
            <given-names>JS</given-names>
          </name>
          <name>
            <surname>Govindarajan</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Shaulsky</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Walhout</surname>
            <given-names>AJM</given-names>
          </name>
          <name>
            <surname>Bouget</surname>
            <given-names>FY</given-names>
          </name>
          <name>
            <surname>Ratsch</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Larrondo</surname>
            <given-names>LF</given-names>
          </name>
          <name>
            <surname>Ecker</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Hughes</surname>
            <given-names>TR</given-names>
          </name>
        </person-group>
        <article-title>Determination and inference of eukaryotic transcription factor sequence specificity</article-title>
        <source>Cell</source>
        <year>2014</year>
        <volume>158</volume>
        <issue>6</issue>
        <fpage>1431</fpage>
        <lpage>1443</lpage>
        <pub-id pub-id-type="doi">10.1016/j.cell.2014.08.009</pub-id>
        <?supplied-pmid 25215497?>
        <pub-id pub-id-type="pmid">25215497</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wong</surname>
            <given-names>KC</given-names>
          </name>
        </person-group>
        <article-title>MotifHyades: expectation maximization for de novo DNA motif pair discovery on paired sequences</article-title>
        <source>Bioinformatics</source>
        <year>2017</year>
        <volume>33</volume>
        <issue>19</issue>
        <fpage>3028</fpage>
        <lpage>3035</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btx381</pub-id>
        <?supplied-pmid 28633280?>
        <pub-id pub-id-type="pmid">28633280</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Pevzner</surname>
            <given-names>PA</given-names>
          </name>
          <name>
            <surname>Sze</surname>
            <given-names>SH</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Altman</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Bailey</surname>
            <given-names>TL</given-names>
          </name>
        </person-group>
        <article-title>Combinatorial approaches to finding subtle signals in DNA sequences</article-title>
        <source>Proceedings of the Eighth International Conference on Intelligent Systems for Molecular Biology</source>
        <year>2000</year>
        <publisher-loc>California</publisher-loc>
        <publisher-name>AAAI Press</publisher-name>
        <fpage>269</fpage>
        <lpage>278</lpage>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Davila</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Balla</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Rajasekaran</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Fast and practical algorithms for planted (<italic>l</italic>, <italic>d</italic>) motif search</article-title>
        <source>IEEE/ACM Trans Comput Biol Bioinform</source>
        <year>2007</year>
        <volume>4</volume>
        <issue>4</issue>
        <fpage>544</fpage>
        <lpage>552</lpage>
        <pub-id pub-id-type="doi">10.1109/TCBB.2007.70241</pub-id>
        <?supplied-pmid 17975266?>
        <pub-id pub-id-type="pmid">17975266</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Evans</surname>
            <given-names>PA</given-names>
          </name>
          <name>
            <surname>Smith</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Wareham</surname>
            <given-names>HT</given-names>
          </name>
        </person-group>
        <article-title>On the complexity of finding common approximate substrings</article-title>
        <source>Theor Comput Sci</source>
        <year>2003</year>
        <volume>306</volume>
        <fpage>407</fpage>
        <lpage>430</lpage>
        <pub-id pub-id-type="doi">10.1016/S0304-3975(03)00320-7</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Das</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Dai</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>A survey of DNA motif finding algorithms</article-title>
        <source>BMC Bioinf</source>
        <year>2007</year>
        <volume>8</volume>
        <issue>Suppl 7</issue>
        <fpage>S21</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-8-S7-S21</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zambelli</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Pesole</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Pavesi</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>Motif discovery and transcription factor binding sites before and after the next generation sequencing era</article-title>
        <source>Brief Bioinform</source>
        <year>2013</year>
        <volume>14</volume>
        <issue>2</issue>
        <fpage>225</fpage>
        <lpage>237</lpage>
        <pub-id pub-id-type="doi">10.1093/bib/bbs016</pub-id>
        <?supplied-pmid 22517426?>
        <pub-id pub-id-type="pmid">22517426</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lihu</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Holban</surname>
            <given-names>Ş</given-names>
          </name>
        </person-group>
        <article-title>A review of ensemble methods for de novo motif discovery in ChIP-Seq data</article-title>
        <source>Brief Bioinform</source>
        <year>2015</year>
        <volume>16</volume>
        <issue>6</issue>
        <fpage>964</fpage>
        <lpage>973</lpage>
        <pub-id pub-id-type="doi">10.1093/bib/bbv022</pub-id>
        <?supplied-pmid 25888697?>
        <pub-id pub-id-type="pmid">25888697</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <mixed-citation publication-type="other">Liu B, Yang J, Li Y, Mcdermaid A, Ma Q. An algorithmic perspective of de novo cis-regulatory motif finding based on ChIP-seq data. Brief Bioinform. 2017; 10.1093/bib/bbx026.</mixed-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yang</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Rajapakse</surname>
            <given-names>JC</given-names>
          </name>
        </person-group>
        <article-title>Graphical approach to weak motif recognition</article-title>
        <source>Genome Inform</source>
        <year>2004</year>
        <volume>15</volume>
        <issue>2</issue>
        <fpage>52</fpage>
        <lpage>62</lpage>
        <?supplied-pmid 15706491?>
        <pub-id pub-id-type="pmid">15706491</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sun</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Low</surname>
            <given-names>MYH</given-names>
          </name>
          <name>
            <surname>Hsu</surname>
            <given-names>WJ</given-names>
          </name>
          <name>
            <surname>Rajapakse</surname>
            <given-names>JC</given-names>
          </name>
        </person-group>
        <article-title>RecMotif: a novel fast algorithm for weak motif discovery</article-title>
        <source>BMC Bioinformatics</source>
        <year>2010</year>
        <volume>11</volume>
        <issue>Suppl 11</issue>
        <fpage>S8</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-11-S11-S8</pub-id>
        <?supplied-pmid 21172058?>
        <pub-id pub-id-type="pmid">21172058</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Sagot</surname>
            <given-names>MF</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Lucchesi</surname>
            <given-names>CL</given-names>
          </name>
          <name>
            <surname>Moura</surname>
            <given-names>AV</given-names>
          </name>
        </person-group>
        <article-title>Spelling approximate repeated or common motifs using a suffix tree</article-title>
        <source>Proceedings of the Third Latin American Symposium: Theoretical Informatics</source>
        <year>1998</year>
        <publisher-loc>Campinas</publisher-loc>
        <publisher-name>LNCS</publisher-name>
        <fpage>111</fpage>
        <lpage>127</lpage>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pavesi</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Mereghetti</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Mauri</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Pesole</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>Weeder web: discovery of transcription factor binding sites in a set of sequences from co-regulated genes</article-title>
        <source>Nucleic Acids Res</source>
        <year>2004</year>
        <volume>32</volume>
        <issue>Web Server issue</issue>
        <fpage>199</fpage>
        <lpage>203</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkh465</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Pisanti</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Carvalho</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Marsan</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Sagot</surname>
            <given-names>MF</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Correa</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Hevia</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Kiwi</surname>
            <given-names>MA</given-names>
          </name>
        </person-group>
        <article-title>RISOTTO: Fast extraction of motifs with mismatches</article-title>
        <source>Proceedings of the Seventh Latin American Symposium: Theoretical Informatics</source>
        <year>2006</year>
        <publisher-loc>Valdivia</publisher-loc>
        <publisher-name>LNCS</publisher-name>
        <fpage>757</fpage>
        <lpage>768</lpage>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jia</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Carson</surname>
            <given-names>MB</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Lu</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>A new exhaustive method and strategy for finding motifs in ChIP-enriched regions</article-title>
        <source>PLoS One</source>
        <year>2014</year>
        <volume>9</volume>
        <issue>1</issue>
        <fpage>e86044</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0086044</pub-id>
        <?supplied-pmid 24475069?>
        <pub-id pub-id-type="pmid">24475069</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Davila</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Balla</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Rajasekaran</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Yi</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Zelikovsky</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Space and time efficient algorithms for planted motif search</article-title>
        <source>Proceedings of the Second International Workshop on Bioinformatics Research and Applications</source>
        <year>2006</year>
        <publisher-loc>UK</publisher-loc>
        <publisher-name>LNCS</publisher-name>
        <fpage>822</fpage>
        <lpage>829</lpage>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yu</surname>
            <given-names>Q</given-names>
          </name>
          <name>
            <surname>Huo</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Guo</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>PairMotif: a new pattern-driven algorithm for planted (l, d) DNA motif search</article-title>
        <source>PLoS One</source>
        <year>2012</year>
        <volume>7</volume>
        <issue>10</issue>
        <fpage>e48442</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0048442</pub-id>
        <?supplied-pmid 23119020?>
        <pub-id pub-id-type="pmid">23119020</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dinh</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Rajasekaran</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Davila</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>qPMS7: a fast algorithm for finding (l, d)-motifs in DNA and protein sequences</article-title>
        <source>PLoS One</source>
        <year>2012</year>
        <volume>7</volume>
        <issue>7</issue>
        <fpage>e41425</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0041425</pub-id>
        <?supplied-pmid 22848493?>
        <pub-id pub-id-type="pmid">22848493</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tanaka</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Improved exact enumerative algorithms for the planted (l, d)-motif search problem</article-title>
        <source>IEEE/ACM Trans Comput Biol Bioinf</source>
        <year>2014</year>
        <volume>11</volume>
        <issue>2</issue>
        <fpage>361</fpage>
        <lpage>374</lpage>
        <pub-id pub-id-type="doi">10.1109/TCBB.2014.2306842</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ho</surname>
            <given-names>ES</given-names>
          </name>
          <name>
            <surname>Jakubowski</surname>
            <given-names>CD</given-names>
          </name>
          <name>
            <surname>Gunderson</surname>
            <given-names>SI</given-names>
          </name>
        </person-group>
        <article-title>iTriplet, a rule-based nucleic acid sequence motif finder</article-title>
        <source>Algorithms Mol Biol</source>
        <year>2009</year>
        <volume>4</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>14</lpage>
        <pub-id pub-id-type="doi">10.1186/1748-7188-4-14</pub-id>
        <pub-id pub-id-type="pmid">19128477</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dinh</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Rajasekaran</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Kundeti</surname>
            <given-names>VK</given-names>
          </name>
        </person-group>
        <article-title>PMS5: an efficient exact algorithm for the (<italic>l</italic>, <italic>d</italic>)-motif finding problem</article-title>
        <source>BMC Bioinf</source>
        <year>2011</year>
        <volume>12</volume>
        <fpage>410</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-12-410</pub-id>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nicolae</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Rajasekaran</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Efficient sequential and parallel algorithms for planted motif search</article-title>
        <source>BMC Bioinf</source>
        <year>2014</year>
        <volume>15</volume>
        <fpage>34</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-15-34</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nicolae</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Rajasekaran</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>qPMS9: an efficient algorithm for quorum planted motif search</article-title>
        <source>Sci Rep</source>
        <year>2015</year>
        <volume>5</volume>
        <fpage>7813</fpage>
        <pub-id pub-id-type="doi">10.1038/srep07813</pub-id>
        <?supplied-pmid 25589474?>
        <pub-id pub-id-type="pmid">25589474</pub-id>
      </element-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Buhler</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Tompa</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Finding motifs using random projections</article-title>
        <source>J Comput Biol</source>
        <year>2002</year>
        <volume>9</volume>
        <issue>2</issue>
        <fpage>225</fpage>
        <lpage>242</lpage>
        <pub-id pub-id-type="doi">10.1089/10665270252935430</pub-id>
        <?supplied-pmid 12015879?>
        <pub-id pub-id-type="pmid">12015879</pub-id>
      </element-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bailey</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Krajewski</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Ladunga</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Lefebvre</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>Q</given-names>
          </name>
          <name>
            <surname>Liu</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Madrigal</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Taslim</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Practical guidelines for the comprehensive analysis of ChIP-seq data</article-title>
        <source>PLoS Comput Biol</source>
        <year>2013</year>
        <volume>9</volume>
        <issue>11</issue>
        <fpage>e1003326</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1003326</pub-id>
        <?supplied-pmid 24244136?>
        <pub-id pub-id-type="pmid">24244136</pub-id>
      </element-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Huo</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Zhao</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Vitter</surname>
            <given-names>JS</given-names>
          </name>
          <name>
            <surname>Nekrich</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Yu</surname>
            <given-names>Q</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Indyk</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>A data-aware FM-index</article-title>
        <source>Proceedings of the SODA Algorithm Engineering and Experiments (ALENEX)</source>
        <year>2015</year>
        <publisher-loc>San Diego</publisher-loc>
        <publisher-name>ACM Press</publisher-name>
        <fpage>10</fpage>
        <lpage>23</lpage>
      </element-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yu</surname>
            <given-names>Q</given-names>
          </name>
          <name>
            <surname>Huo</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Feng</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>PairMotifChIP: a fast algorithm for discovery of patterns conserved in large ChIP-seq data sets</article-title>
        <source>Biomed Res Int</source>
        <year>2016</year>
        <volume>2016</volume>
        <fpage>4986707</fpage>
        <?supplied-pmid 27843946?>
        <pub-id pub-id-type="pmid">27843946</pub-id>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Frey</surname>
            <given-names>BJ</given-names>
          </name>
          <name>
            <surname>Dueck</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>Clustering by passing messages between data points</article-title>
        <source>Science</source>
        <year>2007</year>
        <volume>315</volume>
        <issue>5814</issue>
        <fpage>972</fpage>
        <lpage>976</lpage>
        <pub-id pub-id-type="doi">10.1126/science.1136800</pub-id>
        <?supplied-pmid 17218491?>
        <pub-id pub-id-type="pmid">17218491</pub-id>
      </element-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Boucher</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>King</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Fast motif recognition via application of statistical thresholds</article-title>
        <source>BMC Bioinf</source>
        <year>2010</year>
        <volume>11</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>8</lpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-11-1</pub-id>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kheradpour</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Kellis</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Systematic discovery and characterization of regulatory motifs in ENCODE TF binding experiments</article-title>
        <source>Nucleic Acids Res</source>
        <year>2014</year>
        <volume>42</volume>
        <issue>5</issue>
        <fpage>2976</fpage>
        <lpage>2987</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkt1249</pub-id>
        <?supplied-pmid 24335146?>
        <pub-id pub-id-type="pmid">24335146</pub-id>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chen</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Xu</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Yuan</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Fang</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Huss</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Vega</surname>
            <given-names>VB</given-names>
          </name>
          <name>
            <surname>Wong</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Orlov</surname>
            <given-names>YL</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Jiang</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Loh</surname>
            <given-names>YH</given-names>
          </name>
          <name>
            <surname>Yeo</surname>
            <given-names>HC</given-names>
          </name>
          <name>
            <surname>Yeo</surname>
            <given-names>ZX</given-names>
          </name>
          <name>
            <surname>Narang</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Govindarajan</surname>
            <given-names>KR</given-names>
          </name>
          <name>
            <surname>Leong</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Shahab</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Ruan</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Bourque</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Sung</surname>
            <given-names>WK</given-names>
          </name>
          <name>
            <surname>Clarke</surname>
            <given-names>ND</given-names>
          </name>
          <name>
            <surname>Wei</surname>
            <given-names>CL</given-names>
          </name>
          <name>
            <surname>Ng</surname>
            <given-names>HH</given-names>
          </name>
        </person-group>
        <article-title>Integration of external signaling pathways with the core transcriptional network in embryonic stem cells</article-title>
        <source>Cell</source>
        <year>2008</year>
        <volume>133</volume>
        <issue>6</issue>
        <fpage>1106</fpage>
        <lpage>1117</lpage>
        <pub-id pub-id-type="doi">10.1016/j.cell.2008.04.043</pub-id>
        <?supplied-pmid 18555785?>
        <pub-id pub-id-type="pmid">18555785</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Crooks</surname>
            <given-names>GE</given-names>
          </name>
          <name>
            <surname>Hon</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Chandonia</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Brenner</surname>
            <given-names>SE</given-names>
          </name>
        </person-group>
        <article-title>WebLogo: a sequence Logo generator</article-title>
        <source>Genome Res</source>
        <year>2004</year>
        <volume>14</volume>
        <issue>6</issue>
        <fpage>1188</fpage>
        <lpage>1190</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.849004</pub-id>
        <?supplied-pmid 15173120?>
        <pub-id pub-id-type="pmid">15173120</pub-id>
      </element-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hartmann</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Guthöhrlein</surname>
            <given-names>EW</given-names>
          </name>
          <name>
            <surname>Siebert</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Luehr</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Söding</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>P-value-based regulatory motif discovery using positional weight matrices</article-title>
        <source>Genome Res</source>
        <year>2013</year>
        <volume>23</volume>
        <issue>1</issue>
        <fpage>181</fpage>
        <lpage>194</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.139881.112</pub-id>
        <?supplied-pmid 22990209?>
        <pub-id pub-id-type="pmid">22990209</pub-id>
      </element-citation>
    </ref>
    <ref id="CR36">
      <label>36.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Xiao</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Pal</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Rajasekaran</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Wang</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Burrage</surname>
            <given-names>K</given-names>
          </name>
        </person-group>
        <article-title>qPMS10: a randomized algorithm for efficiently solving quorum planted motif search problem</article-title>
        <source>Proceedings of the IEEE International Conference on Bioinformatics and Biomedicine</source>
        <year>2016</year>
        <publisher-loc>Shenzhen</publisher-loc>
        <publisher-name>IEEE Press</publisher-name>
        <fpage>670</fpage>
        <lpage>675</lpage>
      </element-citation>
    </ref>
    <ref id="CR37">
      <label>37.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Xiao</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Pal</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Rajasekaran</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Randomised sequential and parallel algorithms for efficient quorum planted motif search</article-title>
        <source>Int J Data Min Bioinform</source>
        <year>2017</year>
        <volume>18</volume>
        <issue>2</issue>
        <fpage>105</fpage>
        <lpage>124</lpage>
        <pub-id pub-id-type="doi">10.1504/IJDMB.2017.086457</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

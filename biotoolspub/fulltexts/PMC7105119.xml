<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1d3 20150301//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 39.96?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id>
    <journal-id journal-id-type="iso-abbrev">PLoS Comput. Biol</journal-id>
    <journal-id journal-id-type="publisher-id">plos</journal-id>
    <journal-id journal-id-type="pmc">ploscomp</journal-id>
    <journal-title-group>
      <journal-title>PLoS Computational Biology</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1553-734X</issn>
    <issn pub-type="epub">1553-7358</issn>
    <publisher>
      <publisher-name>Public Library of Science</publisher-name>
      <publisher-loc>San Francisco, CA USA</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">7105119</article-id>
    <article-id pub-id-type="pmid">32155140</article-id>
    <article-id pub-id-type="publisher-id">PCOMPBIOL-D-19-00132</article-id>
    <article-id pub-id-type="doi">10.1371/journal.pcbi.1007635</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research Article</subject>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Research and Analysis Methods</subject>
        <subj-group>
          <subject>Simulation and Modeling</subject>
          <subj-group>
            <subject>Agent-Based Modeling</subject>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Computer and Information Sciences</subject>
        <subj-group>
          <subject>Systems Science</subject>
          <subj-group>
            <subject>Agent-Based Modeling</subject>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Physical Sciences</subject>
        <subj-group>
          <subject>Mathematics</subject>
          <subj-group>
            <subject>Systems Science</subject>
            <subj-group>
              <subject>Agent-Based Modeling</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Cell Biology</subject>
          <subj-group>
            <subject>Cell Processes</subject>
            <subj-group>
              <subject>Cell Cycle and Cell Division</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Medicine and Health Sciences</subject>
        <subj-group>
          <subject>Oncology</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Engineering and Technology</subject>
        <subj-group>
          <subject>Human Factors Engineering</subject>
          <subj-group>
            <subject>Man-Computer Interface</subject>
            <subj-group>
              <subject>Graphical User Interfaces</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Computer and Information Sciences</subject>
        <subj-group>
          <subject>Computer Architecture</subject>
          <subj-group>
            <subject>User Interfaces</subject>
            <subj-group>
              <subject>Graphical User Interfaces</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Physical Sciences</subject>
        <subj-group>
          <subject>Mathematics</subject>
          <subj-group>
            <subject>Geometry</subject>
            <subj-group>
              <subject>Radii</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Computer and Information Sciences</subject>
        <subj-group>
          <subject>Programming Languages</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Medicine and Health Sciences</subject>
        <subj-group>
          <subject>Pharmaceutics</subject>
          <subj-group>
            <subject>Drug Delivery</subject>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Neuroscience</subject>
          <subj-group>
            <subject>Cognitive Science</subject>
            <subj-group>
              <subject>Cognitive Psychology</subject>
              <subj-group>
                <subject>Language</subject>
              </subj-group>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Psychology</subject>
          <subj-group>
            <subject>Cognitive Psychology</subject>
            <subj-group>
              <subject>Language</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Social Sciences</subject>
        <subj-group>
          <subject>Psychology</subject>
          <subj-group>
            <subject>Cognitive Psychology</subject>
            <subj-group>
              <subject>Language</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Hybrid Automata Library: A flexible platform for hybrid modeling with real-time visualization</article-title>
      <alt-title alt-title-type="running-head">Hybrid Automata Library: A flexible platform for hybrid modeling</alt-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-0065-4341</contrib-id>
        <name>
          <surname>Bravo</surname>
          <given-names>Rafael R.</given-names>
        </name>
        <role content-type="http://credit.casrai.org/">Conceptualization</role>
        <role content-type="http://credit.casrai.org/">Methodology</role>
        <role content-type="http://credit.casrai.org/">Software</role>
        <role content-type="http://credit.casrai.org/">Validation</role>
        <role content-type="http://credit.casrai.org/">Visualization</role>
        <role content-type="http://credit.casrai.org/">Writing – original draft</role>
        <role content-type="http://credit.casrai.org/">Writing – review &amp; editing</role>
        <xref ref-type="aff" rid="aff001">
          <sup>1</sup>
        </xref>
        <xref ref-type="corresp" rid="cor001">*</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Baratchart</surname>
          <given-names>Etienne</given-names>
        </name>
        <role content-type="http://credit.casrai.org/">Methodology</role>
        <role content-type="http://credit.casrai.org/">Software</role>
        <role content-type="http://credit.casrai.org/">Validation</role>
        <role content-type="http://credit.casrai.org/">Writing – review &amp; editing</role>
        <xref ref-type="aff" rid="aff001">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0001-9579-4664</contrib-id>
        <name>
          <surname>West</surname>
          <given-names>Jeffrey</given-names>
        </name>
        <role content-type="http://credit.casrai.org/">Visualization</role>
        <role content-type="http://credit.casrai.org/">Writing – review &amp; editing</role>
        <xref ref-type="aff" rid="aff001">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-0294-0106</contrib-id>
        <name>
          <surname>Schenck</surname>
          <given-names>Ryan O.</given-names>
        </name>
        <role content-type="http://credit.casrai.org/">Validation</role>
        <role content-type="http://credit.casrai.org/">Visualization</role>
        <xref ref-type="aff" rid="aff001">
          <sup>1</sup>
        </xref>
        <xref ref-type="aff" rid="aff002">
          <sup>2</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-3099-1648</contrib-id>
        <name>
          <surname>Miller</surname>
          <given-names>Anna K.</given-names>
        </name>
        <role content-type="http://credit.casrai.org/">Methodology</role>
        <role content-type="http://credit.casrai.org/">Validation</role>
        <role content-type="http://credit.casrai.org/">Writing – review &amp; editing</role>
        <xref ref-type="aff" rid="aff001">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0001-9831-6676</contrib-id>
        <name>
          <surname>Gallaher</surname>
          <given-names>Jill</given-names>
        </name>
        <role content-type="http://credit.casrai.org/">Methodology</role>
        <role content-type="http://credit.casrai.org/">Writing – review &amp; editing</role>
        <xref ref-type="aff" rid="aff001">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-9730-5964</contrib-id>
        <name>
          <surname>Gatenbee</surname>
          <given-names>Chandler D.</given-names>
        </name>
        <role content-type="http://credit.casrai.org/">Methodology</role>
        <role content-type="http://credit.casrai.org/">Software</role>
        <xref ref-type="aff" rid="aff001">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-8527-0776</contrib-id>
        <name>
          <surname>Basanta</surname>
          <given-names>David</given-names>
        </name>
        <role content-type="http://credit.casrai.org/">Visualization</role>
        <xref ref-type="aff" rid="aff001">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Robertson-Tessi</surname>
          <given-names>Mark</given-names>
        </name>
        <role content-type="http://credit.casrai.org/">Funding acquisition</role>
        <role content-type="http://credit.casrai.org/">Writing – original draft</role>
        <role content-type="http://credit.casrai.org/">Writing – review &amp; editing</role>
        <xref ref-type="aff" rid="aff001">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-2536-4383</contrib-id>
        <name>
          <surname>Anderson</surname>
          <given-names>Alexander R. A.</given-names>
        </name>
        <role content-type="http://credit.casrai.org/">Conceptualization</role>
        <role content-type="http://credit.casrai.org/">Funding acquisition</role>
        <role content-type="http://credit.casrai.org/">Methodology</role>
        <role content-type="http://credit.casrai.org/">Supervision</role>
        <role content-type="http://credit.casrai.org/">Writing – original draft</role>
        <role content-type="http://credit.casrai.org/">Writing – review &amp; editing</role>
        <xref ref-type="aff" rid="aff001">
          <sup>1</sup>
        </xref>
        <xref ref-type="corresp" rid="cor001">*</xref>
      </contrib>
    </contrib-group>
    <aff id="aff001">
      <label>1</label>
      <addr-line>Integrated Mathematical Oncology, Moffitt Cancer Center, Tampa, Florida, United States of America</addr-line>
    </aff>
    <aff id="aff002">
      <label>2</label>
      <addr-line>Wellcome Centre for Human Genetics, University of Oxford, Oxford, United Kingdom</addr-line>
    </aff>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Merks</surname>
          <given-names>Roeland M.H.</given-names>
        </name>
        <role>Editor</role>
        <xref ref-type="aff" rid="edit1"/>
      </contrib>
    </contrib-group>
    <aff id="edit1">
      <addr-line>Universiteit Leiden, NETHERLANDS</addr-line>
    </aff>
    <author-notes>
      <fn fn-type="COI-statement" id="coi001">
        <p>No authors have competing interests.</p>
      </fn>
      <corresp id="cor001">* E-mail: <email>rafael.bravo@moffitt.org</email> (RRB); <email>alexander.anderson@moffitt.org</email> (ARAA)</corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <month>3</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>10</day>
      <month>3</month>
      <year>2020</year>
    </pub-date>
    <volume>16</volume>
    <issue>3</issue>
    <elocation-id>e1007635</elocation-id>
    <history>
      <date date-type="received">
        <day>23</day>
        <month>1</month>
        <year>2019</year>
      </date>
      <date date-type="accepted">
        <day>6</day>
        <month>1</month>
        <year>2020</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© 2020 Bravo et al</copyright-statement>
      <copyright-year>2020</copyright-year>
      <copyright-holder>Bravo et al</copyright-holder>
      <license xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an open access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p>
      </license>
    </permissions>
    <self-uri content-type="pdf" xlink:href="pcbi.1007635.pdf"/>
    <abstract>
      <p>The Hybrid Automata Library (HAL) is a Java Library developed for use in mathematical oncology modeling. It is made of simple, efficient, generic components that can be used to model complex spatial systems. HAL’s components can broadly be classified into: on- and off-lattice agent containers, finite difference diffusion fields, a GUI building system, and additional tools and utilities for computation and data collection. These components are designed to operate independently and are standardized to make them easy to interface with one another. As a demonstration of how modeling can be simplified using our approach, we have included a complete example of a hybrid model (a spatial model with interacting agent-based and PDE components). HAL is a useful asset for researchers who wish to build performant 1D, 2D and 3D hybrid models in Java, while not starting entirely from scratch. It is available on GitHub at <ext-link ext-link-type="uri" xlink:href="https://github.com/MathOnco/HAL">https://github.com/MathOnco/HAL</ext-link> under the MIT License. HAL requires the Java JDK version 1.8 or later to compile and run the source code.</p>
    </abstract>
    <abstract abstract-type="summary">
      <title>Author summary</title>
      <p>In this paper we introduce the Hybrid Automata Library (HAL) with the purpose of simplifying the implementation and sharing of hybrid models for use in mathematical oncology. Hybrid modeling is used in oncology to create spatial models of tissue, typically by modeling cells using agent-based techniques, and by modeling diffusible chemicals using partial differential equations (PDEs). HAL’s key components are designed to run agent-based models, PDEs, and visualization. The components are standardized and are completely decoupled, so models can be built with any combination of them. We first explore the philosophy behind HAL, then summarize the components. Lastly we demonstrate how the components work together with an example of a hybrid model, and a walk-through of the code used to construct it. HAL is open-source and will produce identical results on any machine that supports Java 8 and above, making it highly portable. We recommend HAL to modelers interested in spatial dynamics, even those outside of mathematical oncology, as the components are general enough to facilitate a variety of model types. A community page that provides a download link and online documentation can be found at <ext-link ext-link-type="uri" xlink:href="https://halloworld.org">https://halloworld.org</ext-link>.</p>
    </abstract>
    <funding-group>
      <funding-statement>This work was possible through the generous support of National Institutes of Health funding, (A.R.A.A) and (M.R.T) acknowledge National Cancer Institute U54CA193489, <ext-link ext-link-type="uri" xlink:href="https://www.cancer.gov/">https://www.cancer.gov/</ext-link>. (A.R.A.A) and (R.B) acknowledge National Cancer Institute UH2CA203781 <ext-link ext-link-type="uri" xlink:href="https://www.cancer.gov/">https://www.cancer.gov/</ext-link>. (D.B), (E.B), and (A.K.M) acknowledge National Cancer Institute U01CA202958-01 <ext-link ext-link-type="uri" xlink:href="https://www.cancer.gov/">https://www.cancer.gov/</ext-link>. The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement>
    </funding-group>
    <counts>
      <fig-count count="10"/>
      <table-count count="3"/>
      <page-count count="28"/>
    </counts>
    <custom-meta-group>
      <custom-meta>
        <meta-name>PLOS Publication Stage</meta-name>
        <meta-value>vor-update-to-uncorrected-proof</meta-value>
      </custom-meta>
      <custom-meta>
        <meta-name>Publication Update</meta-name>
        <meta-value>2020-03-30</meta-value>
      </custom-meta>
      <custom-meta id="data-availability">
        <meta-name>Data Availability</meta-name>
        <meta-value>The data found in the Results section can be generated by running the competitive release example model found in the Examples folder of HAL. See the manual for instructions on how to install HAL and run the example.</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
  <notes>
    <title>Data Availability</title>
    <p>The data found in the Results section can be generated by running the competitive release example model found in the Examples folder of HAL. See the manual for instructions on how to install HAL and run the example.</p>
  </notes>
</front>
<body>
  <disp-quote>
    <p>This is a <italic>PLOS Computational Biology</italic> Software paper.</p>
  </disp-quote>
  <sec sec-type="intro" id="sec001">
    <title>Introduction</title>
    <p>The Hybrid Automata Library (HAL) was created to assist the growing mathematical oncology community with a common framework to facilitate building and visualizing hybrid models. Hybrid models in oncology usually represent cells (both of the tumor and of the surrounding tissue) using agent-based modeling (ABMs) and the concentrations of relevant chemicals (drugs, resources and signaling molecules) as continuous partial differential equations (PDEs). These models can simulate local interactions between cells with complex internal dynamics and decision-making processes while also allowing cells to interact with the PDE concentration fields in their local environment.</p>
    <p>Hybrid models have been widely adopted within the Mathematical Oncology community to model many aspects of cancer [<xref rid="pcbi.1007635.ref001" ref-type="bibr">1</xref>–<xref rid="pcbi.1007635.ref008" ref-type="bibr">8</xref>]. A unique strength of the hybrid modeling approach is that it allows for a mechanistic understanding of the ecological feedback between the cancer cells and their tissue environment. Cancer cell agents can be modeled as a part of a larger tissue structure and interact with the systems that normally maintain homeostasis [<xref rid="pcbi.1007635.ref009" ref-type="bibr">9</xref>–<xref rid="pcbi.1007635.ref015" ref-type="bibr">15</xref>]. Drugs may be subsequently introduced to add additional selective pressure to the model, and to observe the long-term effects on the evolving tumor [<xref rid="pcbi.1007635.ref016" ref-type="bibr">16</xref>]. A better understanding of these selection dynamics can be used to help develop more effective drug sequences to prevent cancer from resisting therapy and to develop evolutionary therapies to control cancers that cannot be cured with maximum tolerated dose [<xref rid="pcbi.1007635.ref017" ref-type="bibr">17</xref>–<xref rid="pcbi.1007635.ref019" ref-type="bibr">19</xref>]. Further realism can be incorporated by initializing spatial models with clinical or histological data [<xref rid="pcbi.1007635.ref020" ref-type="bibr">20</xref>, <xref rid="pcbi.1007635.ref021" ref-type="bibr">21</xref>].</p>
    <p>Whilst a number of agent-based modeling frameworks have been used for tissue modeling, HAL distinguishes itself primarily through its flexibility. Instead of a fixed modeling environment, HAL provides a lightweight set of generic tools to help modelers build their own workflows without needing to reinvent commonly used functions.</p>
    <p>Many frameworks facilitate model building under specific assumptions. Cells can be approximated as spheres or ellipsoids, with Newtonian adhesion-repulsion dynamics used to efficiently simulate large populations. PhysiCell [<xref rid="pcbi.1007635.ref022" ref-type="bibr">22</xref>], CellSys [<xref rid="pcbi.1007635.ref023" ref-type="bibr">23</xref>], BioCellion [<xref rid="pcbi.1007635.ref024" ref-type="bibr">24</xref>], Timothy [<xref rid="pcbi.1007635.ref025" ref-type="bibr">25</xref>], Yalla [<xref rid="pcbi.1007635.ref026" ref-type="bibr">26</xref>], and Episim [<xref rid="pcbi.1007635.ref027" ref-type="bibr">27</xref>] make this assumption. Another assumption called Cellular Potts represents cells as composites of lattice positions, which can migrate over time in response to energy minimization functions. This allows for cell deformation but is typically more computationally expensive. CompuCell3D [<xref rid="pcbi.1007635.ref028" ref-type="bibr">28</xref>], Morpheus [<xref rid="pcbi.1007635.ref029" ref-type="bibr">29</xref>], and the Tissue Simulation Toolkit [<xref rid="pcbi.1007635.ref030" ref-type="bibr">30</xref>] make this assumption. HAL does not include the same depth in the domains specific to these frameworks, but uses a broader design to provide the capacity for a variety of approaches.</p>
    <p>Some frameworks that also take a broad approach are Chaste [<xref rid="pcbi.1007635.ref031" ref-type="bibr">31</xref>], NetLogo [<xref rid="pcbi.1007635.ref032" ref-type="bibr">32</xref>], Repast [<xref rid="pcbi.1007635.ref033" ref-type="bibr">33</xref>] and MASON [<xref rid="pcbi.1007635.ref034" ref-type="bibr">34</xref>]. Chaste uses a modular system for model building, in which modular rules are composed to define behavior, and behaviors that are not currently represented can be added as new modules. This modular approach allows for very rapid prototyping, and increases the reproducibility of results. NetLogo provides an accessible integrated model development and interaction environment, and a custom scripting language to simplify coding, making it a great choice for new modelers/coders. Repast and MASON both feature composable spatial containers and built-in visualization/interaction tools, but differ in how they handle agent scheduling. Repast uses a hierarchical nesting approach to group agents into sets that will all execute actions, while in MASON optionally repeating agent step functions are added individually per agent. A comparative list of useful features and common built-in assumptions pertinent to tissue modeling are summarized in <xref rid="pcbi.1007635.t001" ref-type="table">Table 1</xref>.</p>
    <table-wrap id="pcbi.1007635.t001" orientation="portrait" position="float">
      <object-id pub-id-type="doi">10.1371/journal.pcbi.1007635.t001</object-id>
      <label>Table 1</label>
      <caption>
        <title>Comparison of HAL with other agent-based modeling frameworks commonly used in tissue modeling as of December 2019.</title>
        <p>Features are marked according to whether there exists a built-in user accessible implementation.</p>
      </caption>
      <alternatives>
        <graphic id="pcbi.1007635.t001g" xlink:href="pcbi.1007635.t001"/>
        <table frame="box" rules="all" border="0">
          <colgroup span="1">
            <col align="left" valign="middle" span="1"/>
            <col align="left" valign="middle" span="1"/>
            <col align="left" valign="middle" span="1"/>
            <col align="left" valign="middle" span="1"/>
            <col align="left" valign="middle" span="1"/>
            <col align="left" valign="middle" span="1"/>
            <col align="left" valign="middle" span="1"/>
            <col align="left" valign="middle" span="1"/>
            <col align="left" valign="middle" span="1"/>
            <col align="left" valign="middle" span="1"/>
            <col align="left" valign="middle" span="1"/>
            <col align="left" valign="middle" span="1"/>
            <col align="left" valign="middle" span="1"/>
            <col align="left" valign="middle" span="1"/>
            <col align="left" valign="middle" span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th align="center" style="border-bottom:thick" rowspan="1" colspan="1">Feature</th>
              <th align="center" style="border-bottom:thick" rowspan="1" colspan="1">HAL</th>
              <th align="center" style="border-bottom:thick" rowspan="1" colspan="1">Cha</th>
              <th align="center" style="border-bottom:thick" rowspan="1" colspan="1">Rep</th>
              <th align="center" style="border-bottom:thick" rowspan="1" colspan="1">Mas</th>
              <th align="center" style="border-bottom:thick" rowspan="1" colspan="1">Net</th>
              <th align="center" style="border-bottom:thick" rowspan="1" colspan="1">Phy</th>
              <th align="center" style="border-bottom:thick" rowspan="1" colspan="1">Cel</th>
              <th align="center" style="border-bottom:thick" rowspan="1" colspan="1">Bio</th>
              <th align="center" style="border-bottom:thick" rowspan="1" colspan="1">Tim</th>
              <th align="center" style="border-bottom:thick" rowspan="1" colspan="1">Yal</th>
              <th align="center" style="border-bottom:thick" rowspan="1" colspan="1">Epi</th>
              <th align="center" style="border-bottom:thick" rowspan="1" colspan="1">Com</th>
              <th align="center" style="border-bottom:thick" rowspan="1" colspan="1">Mor</th>
              <th align="center" style="border-bottom:thick" rowspan="1" colspan="1">TST</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="center" rowspan="1" colspan="1">On-Lattice ABMs</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1"/>
            </tr>
            <tr>
              <td align="center" rowspan="1" colspan="1">Off-Lattice Point ABMs</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
            </tr>
            <tr>
              <td align="center" rowspan="1" colspan="1">Off-Lattice Spherical ABMs</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
            </tr>
            <tr>
              <td align="center" rowspan="1" colspan="1">Voronoi Tesselation ABMs</td>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
            </tr>
            <tr>
              <td align="center" rowspan="1" colspan="1">Cellular Potts ABMs</td>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
            </tr>
            <tr>
              <td align="center" rowspan="1" colspan="1">Multinomial Population ABMs [<xref rid="pcbi.1007635.ref035" ref-type="bibr">35</xref>]</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
            </tr>
            <tr>
              <td align="center" rowspan="1" colspan="1">Diffusion PDEs</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
            </tr>
            <tr>
              <td align="center" rowspan="1" colspan="1">Advection PDEs</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1"/>
            </tr>
            <tr>
              <td align="center" rowspan="1" colspan="1">SBML Compatible [<xref rid="pcbi.1007635.ref036" ref-type="bibr">36</xref>]</td>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1"/>
            </tr>
            <tr>
              <td align="center" rowspan="1" colspan="1">Real-Time Visualization</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
            </tr>
            <tr>
              <td align="center" rowspan="1" colspan="1">Single-Model Parallelization</td>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
            </tr>
            <tr>
              <td align="center" rowspan="1" colspan="1">Windows Compatible</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
            </tr>
            <tr>
              <td align="center" rowspan="1" colspan="1">Mac Compatible</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1"/>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
            </tr>
            <tr>
              <td align="center" rowspan="1" colspan="1">Linux Compatible</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
              <td align="center" rowspan="1" colspan="1">✔</td>
            </tr>
            <tr>
              <td align="center" rowspan="1" colspan="1">User-Facing Programming Language<xref ref-type="table-fn" rid="t001fn002">*</xref></td>
              <td align="center" rowspan="1" colspan="1">
                <bold>J</bold>
              </td>
              <td align="center" rowspan="1" colspan="1">
                <bold>C</bold>
              </td>
              <td align="center" rowspan="1" colspan="1">
                <bold>R</bold>
              </td>
              <td align="center" rowspan="1" colspan="1">
                <bold>J</bold>
              </td>
              <td align="center" rowspan="1" colspan="1">
                <bold>N</bold>
              </td>
              <td align="center" rowspan="1" colspan="1">
                <bold>C</bold>
              </td>
              <td align="center" rowspan="1" colspan="1">
                <bold>C</bold>
              </td>
              <td align="center" rowspan="1" colspan="1">
                <bold>C</bold>
              </td>
              <td align="center" rowspan="1" colspan="1">
                <bold>C</bold>
              </td>
              <td align="center" rowspan="1" colspan="1">
                <bold>U</bold>
              </td>
              <td align="center" rowspan="1" colspan="1">
                <bold>I</bold>
              </td>
              <td align="center" rowspan="1" colspan="1">
                <bold>P</bold>
              </td>
              <td align="center" rowspan="1" colspan="1">
                <bold>M</bold>
              </td>
              <td align="center" rowspan="1" colspan="1">
                <bold>C</bold>
              </td>
            </tr>
          </tbody>
        </table>
      </alternatives>
      <table-wrap-foot>
        <fn id="t001fn001">
          <p>Framework Abbreviations: <bold>HAL</bold>:Hybrid Automata Library, <bold>Cha</bold>:Chaste, <bold>Rep</bold>:Repast, <bold>Mas</bold>:Mason, <bold>Net</bold>:Netlogo, <bold>Phy</bold>:Physicell, <bold>Cel</bold>:CellSys, <bold>Bio</bold>:Biocellion, <bold>Tim</bold>:Timothy, <bold>Yal</bold>:Yalla, <bold>Epi</bold>:Episim, <bold>Com</bold>:CompuCell3D, <bold>Mor</bold>:Morpheus, <bold>TST</bold>:Tissue Simulation Toolkit</p>
        </fn>
        <fn id="t001fn002">
          <p>* User-Facing Programming Languages: <bold>J</bold>: Java, <bold>C</bold>: C/C++, <bold>R</bold>: Relogo/Java/Groovy, <bold>N</bold>: NetLogo Programming Language, <bold>U</bold>: CUDA/C++, <bold>I</bold>: Graphical Interface, <bold>P</bold>: Python/XML, <bold>M</bold>: Morpheus model description language</p>
        </fn>
      </table-wrap-foot>
    </table-wrap>
    <p>HAL shares many characteristics with these frameworks, but differentiates itself with a minimal, decentralized design made up of independent building blocks that are thematically similar. There is no centralized controller or scheduler, so the modeler designs the logical flow and the scheduling of interactions between model components. This removes common presuppositions or requirements made by schedulers in other frameworks (e.g. when/how models should be visualized, when their step logic should run, when model resources should be created or destroyed, etc.) and leaves these decisions up to the modeler. This cuts down on any unnecessary use of resources by the modeling system, and increases modeling flexibility. These considerations have led to a lightweight framework that is easy to use, highly flexible, and effective within the scope of hybrid modeling, agent-based modeling, and the solving of reaction-diffusion PDEs using finite differences. HAL was designed with mathematical oncology in mind, but is general enough to facilitate modeling systems from many domains (e.g. ecology [<xref rid="pcbi.1007635.ref037" ref-type="bibr">37</xref>], development, population dynamics, and network theory). While some familiarity with the Java programming language is recommended for new users of HAL, we imagine that its simplicity and explicit nature could make it a useful educational platform.</p>
    <p>The main components of HAL consist of n-dimensional (0D,1D,2D,3D) grids that hold Agents, 1D,2D, and 3D finite difference PDE fields, 2D and 3D visualization tools, and methods for sampling distributions and data recording. In this paper we will discuss the philosophy behind these components, then look at their design and capabilities in more detail. See the manual for a complete reference on how to use these components [<xref rid="pcbi.1007635.ref038" ref-type="bibr">38</xref>].</p>
  </sec>
  <sec sec-type="materials|methods" id="sec002">
    <title>Design and implementation</title>
    <sec id="sec003">
      <title>Design philosophy</title>
      <p>In the next section, we discuss some of the design decisions that have driven the architecture of HAL.</p>
      <sec id="sec004">
        <title>Decentralization and extensibility</title>
        <p>HAL’s components can each function independently, making HAL fundamentally decentralized. This permits any number of components to be used in a single model, with the use of spatial queries to combine components, as seen in <xref ref-type="fig" rid="pcbi.1007635.g001">Fig 1</xref>. Decentralization also allows modelers to choose only the components of HAL that are of interest for their project. These components can be easily mixed and matched with other software, such as using the AgentGrids with a different PDE solver, or using the GUI and Visualization components with a different modeling system. Modelers can also structure the modeling components in ways that are best suited to their workflow, for example by reusing the same model resources across multiple runs for more efficient parameter sweeping, or visualizing many models with a single visualization to compare dynamics across them, or inversely to use multiple visualizations to observe several aspects of a running model simultaneously. Decentralization also makes adding new components more manageable and easier to test without adding bulk or modifications to the existing platform.</p>
        <fig id="pcbi.1007635.g001" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1007635.g001</object-id>
          <label>Fig 1</label>
          <caption>
            <title>HAL’s decentralized design helps build complex models out of simple components.</title>
            <p>The highlighted on-lattice agent in the topmost grid searches for local overlaps with several other grids and PDEs. These overlaps can be used in a model to generate spatial interactions.</p>
          </caption>
          <graphic xlink:href="pcbi.1007635.g001"/>
        </fig>
        <p>Given the incremental nature of many scientific endeavors, we also wanted to allow models and components to be extended and modified. Java’s extension architecture provides an excellent environment for layered development. As an example of the extensibility of HAL, the built-in Spherical Agent types (SphericalAgent2D, SphericalAgent3D) extend the Point Agent types (AgentPT2D, AgentPT3D). By default, Point Agents have no radius and will not collide with each other. This behavior can be useful for modeling phenomena such as the Brownian motion of small particles, as visualized in <xref ref-type="fig" rid="pcbi.1007635.g002">Fig 2a</xref>. Spherical Agents extend Point Agents by adding an additional radius variable and velocity component variables. These properties combined with added functions for summing force vectors in response to overlap allow for a Newtonian adhesion-repulsion spherical model of spatial agents. This behavior can be useful for modeling tissue formation, as visualized in <xref ref-type="fig" rid="pcbi.1007635.g002">Fig 2b</xref>. A more complete description of the extension architecture of the Agent and Grid types is included in Fig D in <xref ref-type="supplementary-material" rid="pcbi.1007635.s001">S1 Text</xref>.</p>
        <fig id="pcbi.1007635.g002" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1007635.g002</object-id>
          <label>Fig 2</label>
          <caption>
            <title>Off-lattice agent examples.</title>
            <p>Each example contains 1000 agents. <bold>(A)</bold>Example of 2D Point Agents modeling Brownian motion. The Point Agents move freely and cannot collide. <bold>(B)</bold> Example of 2D Spherical Agents modeling a growing cell colony. The agents will push apart from each other to a uniform density. Agent radii are shown as gray circles around their centers. Examples Displayed using the OpenGL2DWindow object.</p>
          </caption>
          <graphic xlink:href="pcbi.1007635.g002"/>
        </fig>
        <p>It is also possible to extend completed models using the same approach. For example, grids and agents from published models can be used as a scaffold on which to do additional studies. This allows for followup studies to focus on implementing whatever additional assumptions and functionality they need, while leaving intact the base model code with all of its published assumptions.</p>
      </sec>
      <sec id="sec005">
        <title>Language choice</title>
        <p>In designing HAL we have tried to balance an adherence to performance, memory management, simplicity, stability, and extensibility. The Java language itself balances these considerations very well, making it a suitable basis for HAL. Commonly used low-level languages such as C, C++, and FORTRAN will typically run at similar speeds or faster than Java. However, these languages do not have the same safety guarantees as they permit out-of-bounds memory accesses and memory leaks. Higher level languages, such as Python, while more flexible and syntactically intuitive than Java, are typically significantly slower. The fact that Java is entirely cross-platform is also ideal. Many other languages, including the others mentioned above, don’t run on a virtual machine and require maintaining multiple versions of libraries for cross-platform compatibility, and may not perform identically across platforms. Java is also one of the most commonly used and taught programming languages today, which helps facilitate the adoption of HAL by new users. Models can also be built with HAL using any languages that can interop with Java: such as Scala, Groovy, Kotlin and Clojure.</p>
      </sec>
      <sec id="sec006">
        <title>Simplicity and stability</title>
        <p>An important design principle was to make HAL simple to use without sacrificing performance. Simplicity makes HAL easy to learn and forces the components to be more generic, meaning that the same components can be applied to a greater variety of modeling problems. There is also a consistency to each framework component, such that learning to use some components is often sufficient to grasp the others, and using them in combination is intuitive.</p>
        <p>Another key design principle is stability, which is achieved in three ways:</p>
        <list list-type="simple">
          <list-item>
            <label>Encapsulation</label>
            <p>By providing safe interaction functions and preventing direct interaction with component internals. For example, modelers are not permitted to directly modify the position properties of agents. Instead, they must call the provided movement functions that also update the grid position of the agents for future spatial queries.</p>
          </list-item>
          <list-item>
            <label>Defensive Programming</label>
            <p>By including checks in functions for invalid inputs. The program halts and throws an error message immediately when one of these problematic inputs occurs, such as inputting a diffusion rate constant that is unstable, or moving two unstackable agents to the same position. This allows the modeler to see the problem as it arises, rather than seeing its effects later down the line. While this may entail a small performance impact, it ensures that modelers are rarely confused by the behavior of components, and prevents their malfunction.</p>
          </list-item>
          <list-item>
            <label>Testing</label>
            <p>By testing HAL’s components. HAL’s algorithms are tested in a series of small test programs. These tests help ensure confidence in the algorithm implementations. Unit tests verify three main areas: PDE algorithm accuracy, ABM aggregate behavior, and mathematical utilities. We also verified L1, L2, and L∞ convergence in time and space for the PDEGrid functions, and diffusion modeled using the PopulationGrid(see Fig E—AZ in <xref ref-type="supplementary-material" rid="pcbi.1007635.s001">S1 Text</xref>).</p>
          </list-item>
        </list>
      </sec>
      <sec id="sec007">
        <title>Speed and memory management</title>
        <p>Much of the performance capability of HAL comes directly from its decentralized design. Having no built-in scheduler/underlying structure means that there is comparatively little work that the program does that the modeler is unaware of. This combined with the modular components and utilities allows modelers the flexibility to incorporate only the functionality that they need.</p>
        <p>HAL also prioritizes performance in its algorithmic implementation. HAL includes efficient PDE solving algorithms, such as the ADI (alternating direction implicit) method, and uses efficient distribution sampling algorithms (see the Unit Tests section of <xref ref-type="supplementary-material" rid="pcbi.1007635.s001">S1 Text</xref>). The integrated visualization tools are also highly efficient, using Swing BufferedImages for lattice-based visualization, and LWJGL OpenGL for 2D and 3D polygon graphics. Whenever possible, primitives and arrays are used to store data rather than classes, which takes advantage of Java’s optimization for these simpler data types. Java is also an inherently fast language, which helps efficiently execute agent behavioral logic.</p>
        <p>There is a memory footprint consideration with most of HAL’s assets. A common criticism of Java applications is that they tend to use a lot of memory and are slowed down by Java’s “garbage collector” which deletes objects that are no longer being used. To sidestep these memory issues, most of the objects generated internally by HAL are recycled rather than discarded. This reuse also has a performance benefit: if a function using the same object is called many times sequentially, the object will be faster to access in the computer’s memory because it was already cached from the earlier calls.</p>
        <p>A key example of this reuse: when agents die and are removed from the model during a simulation run, the removed agents are kept internally and will be returned again for re-initialization when a new agent is requested. Agent recycling ensures that the number of agents that the model creates over a complete model run is capped to the maximum population that exists in the model at one time.</p>
        <p>We profiled the performance scaling of our On-Lattice and Spherical Agent Types, as well as our ADI agorithm, and they all scale approximately linearly up to around 10 million agents and diffusible lattice points, after which memory constraints become prohibitive. (see Fig A—C in <xref ref-type="supplementary-material" rid="pcbi.1007635.s001">S1 Text</xref>).</p>
      </sec>
    </sec>
    <sec id="sec008">
      <title>Component overview</title>
      <p>We now move from the abstract discussion of the unifying principles behind HAL to a look at its core components in more detail. Although it may seem that learning how to use these components would be a difficult task given their number and variety, all components were designed with a consistent API (Application Programming Interface), which makes changing between agent/grid types and learning their methods much easier.</p>
      <sec id="sec009">
        <title>AgentGrids</title>
        <p>AgentGrids are used as spatial containers for agents. They come in 1D, 2D, 3D, and non-spatial types. An example usage of a 3D AgentGrid is shown in <xref ref-type="fig" rid="pcbi.1007635.g003">Fig 3</xref>. These objects hold populations of agents that exist either bound to a lattice, or are free to move continuously. Internally, AgentGrids are composed of two data-structures: an agent list for agent iteration, and an agent lattice for spatial queries (even off-lattice agents are stored on a lattice for quick access). The agent list can be shuffled at every iteration to randomize iteration order, and the list holds onto removed agents to facilitate object recycling.</p>
        <fig id="pcbi.1007635.g003" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1007635.g003</object-id>
          <label>Fig 3</label>
          <caption>
            <title>An example of a 3D on-lattice hybrid model of tumor cells spreading through tissue (located in Examples/5Example3D).</title>
            <p>The light red vertical lines represent vessels, and the blue dots represent tumor cells. The cell color goes from pink to blue depending on how much oxygen is locally available. The oxygen availability is also indicated via a heatmap on the floor of the display. With a cell radius of 10 μm, the domain has dimensions 1.6 × 1.6 × 0.4 mm. Displayed using the OpenGL3DWindow object.</p>
          </caption>
          <graphic xlink:href="pcbi.1007635.g003"/>
        </fig>
      </sec>
      <sec id="sec010">
        <title>Agents</title>
        <p>There are 10 base types of agent, introduced in <xref rid="pcbi.1007635.t002" ref-type="table">Table 2</xref>. The SQ and PT suffixes refer to whether the agents are imagined to exist as lattice bound squares/voxels, or as non-volumetric points in space.</p>
        <table-wrap id="pcbi.1007635.t002" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1007635.t002</object-id>
          <label>Table 2</label>
          <caption>
            <title>The 10 base agent types in HAL.</title>
            <p>The differences between them are displayed in each column. Stackable refers to whether multiple agents can exist on the same lattice position. The complete type heirarchy used in HAL is described in Fig D in <xref ref-type="supplementary-material" rid="pcbi.1007635.s001">S1 Text</xref>.</p>
          </caption>
          <alternatives>
            <graphic id="pcbi.1007635.t002g" xlink:href="pcbi.1007635.t002"/>
            <table frame="box" rules="all" border="0">
              <colgroup span="1">
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
              </colgroup>
              <thead>
                <tr>
                  <th align="center" style="border-bottom:thick" rowspan="1" colspan="1">Name</th>
                  <th align="center" style="border-bottom:thick" rowspan="1" colspan="1">Spatial Dimension</th>
                  <th align="center" style="border-bottom:thick" rowspan="1" colspan="1">Lattice Bound</th>
                  <th align="center" style="border-bottom:thick" rowspan="1" colspan="1">Stackable</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td align="center" rowspan="1" colspan="1">Agent0D</td>
                  <td align="center" rowspan="1" colspan="1">0</td>
                  <td align="center" rowspan="1" colspan="1">N/A</td>
                  <td align="center" rowspan="1" colspan="1">N/A</td>
                </tr>
                <tr>
                  <td align="center" rowspan="1" colspan="1">AgentSQ1D</td>
                  <td align="center" rowspan="1" colspan="1">1</td>
                  <td align="center" rowspan="1" colspan="1">yes</td>
                  <td align="center" rowspan="1" colspan="1">yes</td>
                </tr>
                <tr>
                  <td align="center" rowspan="1" colspan="1">AgentSQ1Dunstackable</td>
                  <td align="center" rowspan="1" colspan="1">1</td>
                  <td align="center" rowspan="1" colspan="1">yes</td>
                  <td align="center" rowspan="1" colspan="1">no</td>
                </tr>
                <tr>
                  <td align="center" rowspan="1" colspan="1">AgentPT1D</td>
                  <td align="center" rowspan="1" colspan="1">1</td>
                  <td align="center" rowspan="1" colspan="1">no</td>
                  <td align="center" rowspan="1" colspan="1">yes</td>
                </tr>
                <tr>
                  <td align="center" rowspan="1" colspan="1">AgentSQ2D</td>
                  <td align="center" rowspan="1" colspan="1">2</td>
                  <td align="center" rowspan="1" colspan="1">yes</td>
                  <td align="center" rowspan="1" colspan="1">yes</td>
                </tr>
                <tr>
                  <td align="center" rowspan="1" colspan="1">AgentSQ2Dunstackable</td>
                  <td align="center" rowspan="1" colspan="1">2</td>
                  <td align="center" rowspan="1" colspan="1">yes</td>
                  <td align="center" rowspan="1" colspan="1">no</td>
                </tr>
                <tr>
                  <td align="center" rowspan="1" colspan="1">AgentPT2D</td>
                  <td align="center" rowspan="1" colspan="1">2</td>
                  <td align="center" rowspan="1" colspan="1">no</td>
                  <td align="center" rowspan="1" colspan="1">yes</td>
                </tr>
                <tr>
                  <td align="center" rowspan="1" colspan="1">AgentSQ3D</td>
                  <td align="center" rowspan="1" colspan="1">3</td>
                  <td align="center" rowspan="1" colspan="1">yes</td>
                  <td align="center" rowspan="1" colspan="1">yes</td>
                </tr>
                <tr>
                  <td align="center" rowspan="1" colspan="1">AgentSQ3Dunstackable</td>
                  <td align="center" rowspan="1" colspan="1">3</td>
                  <td align="center" rowspan="1" colspan="1">yes</td>
                  <td align="center" rowspan="1" colspan="1">no</td>
                </tr>
                <tr>
                  <td align="center" rowspan="1" colspan="1">AgentPT3D</td>
                  <td align="center" rowspan="1" colspan="1">3</td>
                  <td align="center" rowspan="1" colspan="1">no</td>
                  <td align="center" rowspan="1" colspan="1">yes</td>
                </tr>
              </tbody>
            </table>
          </alternatives>
        </table-wrap>
        <p>Agent objects are always bound to a grid. In their base class form, agents keep track of their position on the grid and their age. Newly created agents are not included in the same iteration loop in which they are created, to prevent infinite loops of “runaway proliferation.” The base agent classes can be extended to include additional state properties and methods as needed.</p>
      </sec>
      <sec id="sec011">
        <title>PDEGrids</title>
        <p>The PDE Grids consist of either a 1D, 2D, or 3D lattice of concentrations. PDE grids contain functions that will solve reaction-diffusion equations. PDE function operations are accumulated on a separate lattice so they can be applied all at once in a simultaneous update. Currently implemented PDE solution methods include:</p>
        <list list-type="bullet">
          <list-item>
            <p>Forward difference in time and 2nd order central difference in space diffusion</p>
          </list-item>
          <list-item>
            <p>ADI Diffusion [<xref rid="pcbi.1007635.ref039" ref-type="bibr">39</xref>]</p>
          </list-item>
          <list-item>
            <p>1st order upwind finite difference advection for incompressible flows [<xref rid="pcbi.1007635.ref040" ref-type="bibr">40</xref>]</p>
          </list-item>
          <list-item>
            <p>1st order finite volume upwind advection for compressible flows</p>
          </list-item>
          <list-item>
            <p>Modification of values at single lattice positions to facilitate reaction with agents or other sources/sinks.</p>
          </list-item>
        </list>
        <p>Most of these methods are flexible, allowing for spatially heterogeneous diffusion rates and advection velocities as well as different boundary conditions such as periodic, Dirichlet, and zero-flux Neumann.</p>
      </sec>
      <sec id="sec012">
        <title>PopulationGrids</title>
        <p>When dealing with large numbers of cells, especially at the tissue scale, it is often useful to model the spatial-temporal cellular dynamics as densities using PDEs [<xref rid="pcbi.1007635.ref041" ref-type="bibr">41</xref>–<xref rid="pcbi.1007635.ref043" ref-type="bibr">43</xref>]. This approach is effective in modeling dynamics at the population level, however it does not directly represent individuals nor rare stochastic events. To bridge between PDE modeling and agent-based stochasticity, we introduce the PopulationGrid. The PopulationGrid is similar to the AgentGrid, but stores homogeneous populations at each lattice position rather than storing individual agents. The Binomial and Multinomial functions are used to update the populations in response to probabilistic events [<xref rid="pcbi.1007635.ref035" ref-type="bibr">35</xref>]. These events may consist of migration, proliferation, death, or changes in agent state (eg. mutation). The benefit of this type of grid is that it can efficiently handle arbitrarily large populations at each lattice position (up to the maximum size of a Java Long ≈ 9 × 10<sup>18</sup>). The downside is that all of the agents at one lattice position in a given PopulationGrid are considered identical. Changes in agent state can be implemented by shifting populations between multiple PopulationGrids or between lattice positions. <xref ref-type="fig" rid="pcbi.1007635.g004">Fig 4</xref> demonstrates how this approach may be used to model stochastic occurrences of very unlikely events over large populations, such as specific driver mutations occurring in a growing tumor.</p>
        <fig id="pcbi.1007635.g004" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1007635.g004</object-id>
          <label>Fig 4</label>
          <caption>
            <title>An example PopulationGrid model of tumor growth and mutation in 2D (located in Examples/PopulationTumor).</title>
            <p>At the start 1000 cells are placed in the center of the domain. Cells turn over and migrate over time. Two fitness-increasing mutations are possible, and can occur with probability 2 × 10<sup>−6</sup> per cell division. The colors white, red, green, and blue indicate density of cells with no mutations, one mutation, the other mutation, and both mutations respectively. Each lattice position in the domain has a carrying capacity of 100,000 cells. If we assume that cells are growing in cubic volumes, then each position represents an overall area of 1 mm<sup>3</sup> for a total domain size of 150 × 150 × 1 mm. Displayed using the GridWindow object.</p>
          </caption>
          <graphic xlink:href="pcbi.1007635.g004"/>
        </fig>
      </sec>
      <sec id="sec013">
        <title>Graphical User Interface (GUI)</title>
        <p>The GUI building system consists of the following components:</p>
        <list list-type="bullet">
          <list-item>
            <p>UIWindow: a window that displays GUI sub-components which are added in columns. the UIWindow will automatically scale to the appropriate size to fit all sub-components. The following five sub-components can be added:
<list list-type="bullet"><list-item><p>UIGrid: a grid of pixels whose values are set individually. These are typically used to plot agent positions and diffusible concentrations, and can be easily output in GIF or PNG formats.</p></list-item><list-item><p>UIPlot: an extension of the UIGrid, the UIPlot is used to create real-time plots. The UIPlot will automatically resize to fit points that fall out of its bounds.</p></list-item><list-item><p>UILabel: a label that presents modifiable text.</p></list-item><list-item><p>UIButton: a button that executes a function when clicked</p></list-item><list-item><p>UIInputFields: various fields that accept bounded input of Integers, Doubles, Strings, Booleans, File Creation/Selection, and Combo boxes</p></list-item></list></p>
          </list-item>
          <list-item>
            <p>Window2DOpenGL/Window3DOpenGL: visualization windows that use OpenGL to efficiently render polygon graphics.</p>
          </list-item>
          <list-item>
            <p>GridWindow: A shortcut to generate a UIWindow with a single UIGrid component embedded. This simple component is used in the results section example.</p>
          </list-item>
          <list-item>
            <p>GifMaker: An object that can turn UIGrid visualization snapshots into GIFs [<xref rid="pcbi.1007635.ref044" ref-type="bibr">44</xref>].</p>
          </list-item>
        </list>
        <p>An example GUI that uses the UIWindow with embedded UIButtons, InputFields, UILabels, and a UIGrid is shown in <xref ref-type="fig" rid="pcbi.1007635.g005">Fig 5</xref>.</p>
        <fig id="pcbi.1007635.g005" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1007635.g005</object-id>
          <label>Fig 5</label>
          <caption>
            <title>An example UIWindow GUI.</title>
            <p>When the “Run” UIButton (bottom left) is clicked, the UIGrid component (right) displays a running model that is parameterized with the given UIInputField settings (left). In this example model based on [<xref rid="pcbi.1007635.ref045" ref-type="bibr">45</xref>], the red cells are stem cells, and the blue cells are differentiated cells. Differentiated cells have a limited number of divisions and therefore can only spread a limited distance from the stem cells. UILabels (top) show the current timestep and population size. With a cell radius of 10 μm, the domain has dimensions 4 × 4 mm.</p>
          </caption>
          <graphic xlink:href="pcbi.1007635.g005"/>
        </fig>
      </sec>
      <sec id="sec014">
        <title>Utilities</title>
        <p>The Util and Rand classes are used with almost every project. The Util class consists of a collection of standalone functions that solve common problems such as: Generating colors for use with the visualization tools, array manipulation, generating coordinate neighborhoods (e.g. Von Neumann, Moore, Hex, Triangular), spatial mathematical operations, multicore parallelization (typically used to run many models in parallel for parameter sweeps), functions to save and load model states, etc. The Rand class is used for generating random numbers and for sampling distributions (e.g. Gaussian, Poisson, Binomial, Multinomial—created using code adapted from the Colt and NumPy open source libraries [<xref rid="pcbi.1007635.ref046" ref-type="bibr">46</xref>, <xref rid="pcbi.1007635.ref047" ref-type="bibr">47</xref>]) See the manual for more information [<xref rid="pcbi.1007635.ref038" ref-type="bibr">38</xref>].</p>
      </sec>
      <sec id="sec015">
        <title>Tools</title>
        <p>A set of miscellaneous tool objects are included to help with specific modeling tasks, these include:</p>
        <list list-type="bullet">
          <list-item>
            <p>A FileIO object that is used to read input files and output results. The object supports character and binary formats, and contains shortcuts for reading and writing delimiter separated values.</p>
          </list-item>
          <list-item>
            <p>A GenomeTracker object that internally stores phylogeny information in a searchable tree structure, and can be used to model branching processes.</p>
          </list-item>
          <list-item>
            <p>An ODESolver object that can solve ODEs numerically using Euler, Runge-Kutta 4, and Runge-Kutta-Fehlberg 4,5 integration.</p>
          </list-item>
          <list-item>
            <p>A Multi-Well Experiment object that uses multi-threading to run and display many models simultaneously. The modeler simply creates an array of initialized models, defines an update and draw step, and can then feed many models into the Multi-Well experiment object and observe divergences in dynamics. This allows modelers to intuitively seed different models or replicates of the same conditions and observe differences in their behavior over time, see <xref ref-type="fig" rid="pcbi.1007635.g006">Fig 6</xref>.</p>
          </list-item>
          <list-item>
            <p>An InteractiveModel object that embeds models in a graphical user interface from which the modeler can schedule modifications to parameters, such as treatment application, and interact with their model in real time. Modelers may also rewind execution to adjust settings, helping them to more quickly understand their model dynamics, and identify useful drug combinations and schedules. The InteractiveModel GUI uses a UIPlot object for the timeline, as well as several UIGrids and UIButtons for other interactive components. This tool was used as part of the development of the Cancer Crusade game [<xref rid="pcbi.1007635.ref048" ref-type="bibr">48</xref>] to test the effects of therapy on a model by Robertson-Tessi et al. [<xref rid="pcbi.1007635.ref017" ref-type="bibr">17</xref>], see <xref ref-type="fig" rid="pcbi.1007635.g007">Fig 7</xref>.</p>
          </list-item>
        </list>
        <fig id="pcbi.1007635.g006" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1007635.g006</object-id>
          <label>Fig 6</label>
          <caption>
            <title>Example of a 10x10 Multi-Well experiment where evolutionary competition of two phenotypes (red,green) shows divergent results with different random seeds.</title>
            <p>Models are separated with red lines. With a cell radius of 10 μm, each well has a domain size of 2 × 2 mm.</p>
          </caption>
          <graphic xlink:href="pcbi.1007635.g006"/>
        </fig>
        <fig id="pcbi.1007635.g007" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1007635.g007</object-id>
          <label>Fig 7</label>
          <caption>
            <title>An example of the InteractiveModel object, which allows the modeler to experiment with treatment strategies using a model by Robertson-Tessi et al. [<xref rid="pcbi.1007635.ref017" ref-type="bibr">17</xref>].</title>
            <p><bold>(A)</bold> A spatial visualization of the current model state. <bold>(B)</bold> A control panel of UIButtons allows the user to quickly restart the model, pause execution, clear all treatments, and undo previous changes. Hotkeys for these controls are in brackets. <bold>(C)</bold> A Speed Control option allows the user to easily adjust the execution speed of the model to range from evaluating as fast as possible to taking a second between timesteps, allowing for careful observation of model dynamics. <bold>(D)</bold> A timeline that will plot timestep information so that the user may observe aggregate changes over time in response to treatment. The user may also click anywhere in the timeline to backtrack to a previous time point and replay the model from there. The timeline will also automatically backtrack to recalculate any necessary frames when a treatment schedule change is made. <bold>(E)</bold> A set of sliders that allow the user to select different treatment intensities for each drug. <bold>(F)</bold> Each horizontal bar parallels the simulation timeline and displays the schedule of a different treatment. Modelers can click on regions within these bars to change regions to a new treatment intensity selected in (E). Modelers may also use the hotkeys presented in (E) to apply the selected intensities in real time as the model runs.</p>
          </caption>
          <graphic xlink:href="pcbi.1007635.g007"/>
        </fig>
      </sec>
    </sec>
  </sec>
  <sec id="sec016">
    <title>Results: Competitive release model</title>
    <p>To demonstrate how the aforementioned principles and components of HAL are applied, we consider a simple but complete example of hybrid modeling. We implement the model of pulsed therapy based on a recent publication by Gallaher et al. [<xref rid="pcbi.1007635.ref019" ref-type="bibr">19</xref>]. We also showcase the flexibility that the modular component approach brings by displaying three different parameterizations of the same model side by side.</p>
    <sec id="sec017">
      <title>Competitive release introduction</title>
      <p>The model in [<xref rid="pcbi.1007635.ref019" ref-type="bibr">19</xref>] describes two competing tumor-cell phenotypes: a rapidly dividing, drug-sensitive phenotype and a slower dividing, drug-resistant phenotype. There is also a diffusible drug that enters the system through the domain boundaries and is consumed by the tumor cells over time.</p>
      <p>Every timestep (“tick”) each cell has a probability of death and a probability of division. The division probability depends on phenotype (resistant cells divide less frequently) and the availability of space (cells will divide only if there is an open space in the nearest eight grid square neighborhood or Moore neighborhood). Sensitive cells have a death rate that increases when the cells are exposed to drug, while resistant cells have a constant death rate. With a cell radius of 10 μm, the domain size is 100 by 100 cells, or 4 mm<sup>2</sup>. The model runs for 10000 time steps, where each time step represents 2 hours, approximately 2.3 years.</p>
      <p>The modular design of HAL allows us to test 3 different treatment conditions, each with an identical starting tumor (no drug, constant drug, and pulsed drug). An interesting outcome of the experiment is that pulsed therapy is better at managing the tumor than constant therapy. Under pulsed therapy the sensitive population is kept in check, while still competing spatially with the resistant phenotype and preventing its expansion. The rest of the section describes in detail how this abstract model is generated.</p>
      <p><xref ref-type="fig" rid="pcbi.1007635.g008">Fig 8</xref> provides a high level look at the structure of the code. Bold font indicates where a section of the coding example is called. <xref rid="pcbi.1007635.t003" ref-type="table">Table 3</xref> provides a quick reference for the built-in HAL functions used in this example. Any functions that are used by the example but do not exist in the table are defined within the example itself and explained in detail below the code. Those fluent in Java may be able to understand the example just by reading the code and using <xref rid="pcbi.1007635.t003" ref-type="table">Table 3</xref>. Built-in HAL functions and classes are highlighted in bold in the following source code to make identifying HAL’s components easier.</p>
      <fig id="pcbi.1007635.g008" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.1371/journal.pcbi.1007635.g008</object-id>
        <label>Fig 8</label>
        <caption>
          <p>(<bold>A</bold>) Example program flow diagram. Bold font indicates where coding example sections are first called. (<bold>B</bold>) CellStep function flow diagram.</p>
        </caption>
        <graphic xlink:href="pcbi.1007635.g008"/>
      </fig>
      <table-wrap id="pcbi.1007635.t003" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.1371/journal.pcbi.1007635.t003</object-id>
        <label>Table 3</label>
        <caption>
          <title>HAL functions used in the example.</title>
          <p>Each function is a method of a particular object, meaning that when the function is called it may use properties that pertain to the object that it is called from.</p>
        </caption>
        <alternatives>
          <graphic id="pcbi.1007635.t003g" xlink:href="pcbi.1007635.t003"/>
          <table frame="box" rules="all" border="0">
            <colgroup span="1">
              <col align="left" valign="middle" span="1"/>
              <col align="left" valign="middle" span="1"/>
              <col align="left" valign="middle" span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th align="center" style="border-bottom:thick" rowspan="1" colspan="1">Function</th>
                <th align="center" style="border-bottom:thick" rowspan="1" colspan="1">Object</th>
                <th align="left" style="border-bottom:thick" rowspan="1" colspan="1">Action</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="center" rowspan="1" colspan="1">NewAgentSQ(INDEX)</td>
                <td align="center" rowspan="1" colspan="1">AgentGrid2D</td>
                <td align="left" rowspan="1" colspan="1">Returns a new agent, placed at the center of the square at the provided position INDEX.</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1">ShuffleAgents(RNG)</td>
                <td align="center" rowspan="1" colspan="1">AgentGrid2D</td>
                <td align="left" rowspan="1" colspan="1">Usually called after every timestep to shuffle the order of agent iteration.</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1">GetTick()</td>
                <td align="center" rowspan="1" colspan="1">AgentGrid2D</td>
                <td align="left" rowspan="1" colspan="1">Returns the current grid timestep.</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1">ItoX(INDEX), ItoY(INDEX)</td>
                <td align="center" rowspan="1" colspan="1">AgentGrid2D</td>
                <td align="left" rowspan="1" colspan="1">Converts from a grid position INDEX into the x and y components that point to the same grid position.</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1">MapHood(NEIGHBORHOOD,X,Y)</td>
                <td align="center" rowspan="1" colspan="1">AgentGrid2D</td>
                <td align="left" rowspan="1" colspan="1">Finds all position indices in the provided neighborhood, centered around X,Y that don’t fall out of bounds of the AgentGrid2D. Writes these indices into the NEIGHBORHOOD argument, and returns the number that were found.</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1">MapEmptyHood(NEIGHBORHOOD)</td>
                <td align="center" rowspan="1" colspan="1">AgentSQ2D</td>
                <td align="left" rowspan="1" colspan="1">Finds all position indices in the provided neighborhood, centered around the agent, that do not have an agent occupying them. Writes these indices into the NEIGHBORHOOD argument, and returns the number that were found.</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1">G</td>
                <td align="center" rowspan="1" colspan="1">AgentSQ2D</td>
                <td align="left" rowspan="1" colspan="1">Gets the grid that the agent occupies.</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1">Isq()</td>
                <td align="center" rowspan="1" colspan="1">AgentSQ2D</td>
                <td align="left" rowspan="1" colspan="1">Gets the position index of the grid square that the agent occupies.</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1">Dispose()</td>
                <td align="center" rowspan="1" colspan="1">AgentSQ2D</td>
                <td align="left" rowspan="1" colspan="1">Removes the agent from the grid and from iteration.</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1">Get(INDEX)</td>
                <td align="center" rowspan="1" colspan="1">PDEGrid2D</td>
                <td align="left" rowspan="1" colspan="1">Returns the concentration of the PDE field at the given index.</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1">Mul(INDEX, VALUE)</td>
                <td align="center" rowspan="1" colspan="1">PDEGrid2D</td>
                <td align="left" rowspan="1" colspan="1">Multiplies the concentration at the given INDEX by VALUE and adds the result to the current concentration when Update() is called</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1">DiffusionADI(RATE)</td>
                <td align="center" rowspan="1" colspan="1">PDEGrid2D</td>
                <td align="left" rowspan="1" colspan="1">Applies diffusion using the ADI method with the rate constant provided. A reflective boundary is assumed. The result is applied when Update() is called.</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1">DiffusionADI(RATE, BOUNDARY_COND)</td>
                <td align="center" rowspan="1" colspan="1">PDEGrid2D</td>
                <td align="left" rowspan="1" colspan="1">Applies diffusion using the ADI method with the RATE constant provided. The BOUNDARY_COND value diffuses from the grid borders. The result is applied when Update() is called.</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1">Update()</td>
                <td align="center" rowspan="1" colspan="1">PDEGrid2D</td>
                <td align="left" rowspan="1" colspan="1">Applies all state changes simultaneously to the PDEGrid</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1">SetPix(INDEX, COLOR)</td>
                <td align="center" rowspan="1" colspan="1">GridWindow</td>
                <td align="left" rowspan="1" colspan="1">Sets the color of a pixel.</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1">TickPause(MILLISECONDS)</td>
                <td align="center" rowspan="1" colspan="1">GridWindow</td>
                <td align="left" rowspan="1" colspan="1">Pauses the program between calls to TickPause. The function automatically subtracts the time between calls from MILLISECONDS to ensure a consistent timestep rate for visualization.</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1">ToPNG(FILENAME)</td>
                <td align="center" rowspan="1" colspan="1">GridWindow</td>
                <td align="left" rowspan="1" colspan="1">Writes out the current state of the UIWindow to a PNG image file.</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1">Close()</td>
                <td align="center" rowspan="1" colspan="1">GridWindow</td>
                <td align="left" rowspan="1" colspan="1">Closes the GridWindow.</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1">ProbScale(PROB, DURATION)</td>
                <td align="center" rowspan="1" colspan="1">Util</td>
                <td align="left" rowspan="1" colspan="1">Scales the probability that an event will occur in 1 unit of time to the probability that the event will occur at least once in the DURATION.</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1">RGB(RED, GREEN, BLUE)</td>
                <td align="center" rowspan="1" colspan="1">Util</td>
                <td align="left" rowspan="1" colspan="1">Returns an integer with the requested color in RGB format. This value can be used for visualization.</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1">HeatMapRGB(VALUE)</td>
                <td align="center" rowspan="1" colspan="1">Util</td>
                <td align="left" rowspan="1" colspan="1">Maps the VALUE argument (assumed to be between 0 and 1) to a color in the heat colormap.</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1">CircleHood(INCLUDE_ORIGIN, RADIUS)</td>
                <td align="center" rowspan="1" colspan="1">Util</td>
                <td align="left" rowspan="1" colspan="1">Returns a set of coordinate pairs that define the neighborhood of all squares whose centers are within the RADIUS distance of the center (0, 0) origin square. The INCLUDE_ORIGIN argument specifies whether to include the origin in this set of coordinates.</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1">MooreHood(INCLUDE_ORIGIN)</td>
                <td align="center" rowspan="1" colspan="1">Util</td>
                <td align="left" rowspan="1" colspan="1">Returns a set of coordinate pairs that define a Moore neighborhood around the (0, 0) origin square. The INCLUDE_ORIGIN Boolean specifies whether we intend to include the origin in this set of coordinates.</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1">Write(STRING)</td>
                <td align="center" rowspan="1" colspan="1">FileIO</td>
                <td align="left" rowspan="1" colspan="1">Writes the STRING to the output file.</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1">Close()</td>
                <td align="center" rowspan="1" colspan="1">FileIO</td>
                <td align="left" rowspan="1" colspan="1">Closes the output file.</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1">Double()</td>
                <td align="center" rowspan="1" colspan="1">Rand</td>
                <td align="left" rowspan="1" colspan="1">Generates a random double value in the range [0 − 1)</td>
              </tr>
            </tbody>
          </table>
        </alternatives>
      </table-wrap>
    </sec>
    <sec id="sec018">
      <title>Main function</title>
      <p>We first examine the ‘main’ function for a bird’s-eye view of how the program is structured. Source code elements highlighted in red are built-in HAL functions and objects, and can be referenced in <xref rid="pcbi.1007635.t003" ref-type="table">Table 3</xref>.</p>
      <p specific-use="line">1 public static void main(String[] args) {</p>
      <p specific-use="line">2  //<italic>setting up starting constants and data collection</italic></p>
      <p specific-use="line">3  int x = 100, y = 100, visScale = 5, tumorRad = 10, msPause = 5;</p>
      <p specific-use="line">4  double resistantProb = 0.5;</p>
      <p specific-use="line">5  <bold>GridWindow</bold> win = new <bold>GridWindow</bold>(“<italic>Competitive Release</italic>”, x * 3, y, visScale);</p>
      <p specific-use="line">6  <bold>FileIO</bold> popsOut = new <bold>FileIO</bold>(“<italic>populations.csv</italic>”, “<italic>w</italic>”);</p>
      <p specific-use="line">7  //<italic>setting up models</italic></p>
      <p specific-use="line">8  ExampleModel[] models = new ExampleModel[3];</p>
      <p specific-use="line">9  for (int i = 0; i &lt; models.length; i++) {</p>
      <p specific-use="line">10   models[i] = new ExampleModel(x, y, new <bold>Rand</bold>(0));</p>
      <p specific-use="line">11   models[i].InitTumor(tumorRad, resistantProb);</p>
      <p specific-use="line">12  }</p>
      <p specific-use="line">13  models[0].DRUG_DURATION = 0;//<italic>no drug</italic></p>
      <p specific-use="line">14  models[1].DRUG_DURATION = 200;//<italic>constant drug</italic></p>
      <p specific-use="line">15  //<italic>Main run loop</italic></p>
      <p specific-use="line">16  for (int tick = 0; tick &lt; 10000; tick++) {</p>
      <p specific-use="line">17   win.<bold>TickPause</bold>(msPause);</p>
      <p specific-use="line">18   for (int i = 0; i &lt; models.length; i++) {</p>
      <p specific-use="line">19    models[i].ModelStep(tick);</p>
      <p specific-use="line">20    models[i].DrawModel(win, i);</p>
      <p specific-use="line">21   }</p>
      <p specific-use="line">22   //<italic>data recording</italic></p>
      <p specific-use="line">23   popsOut.<bold>Write</bold>(models[0].<bold>Pop</bold>() + “,” + models[1].<bold>Pop</bold>() + “,” + models[2].<bold>Pop</bold>() + “\<italic>n</italic>”);</p>
      <p specific-use="line">24   if(tick%(int)(10/models[0].TIMESTEP) ⩵ 0) {</p>
      <p specific-use="line">25    win.<bold>ToPNG</bold>(“<italic>ModelsDay</italic>” + (int)(tick * models[0].TIMESTEP) + “.<italic>png</italic>”);</p>
      <p specific-use="line">26   }</p>
      <p specific-use="line">27  }</p>
      <p specific-use="line">28  //<italic>closing data collection</italic></p>
      <p specific-use="line">29  popsOut.<bold>Close</bold>();</p>
      <p specific-use="line">30  win.<bold>Close</bold>();</p>
      <p specific-use="line">31 }</p>
      <list list-type="simple">
        <list-item>
          <label>Lines 3-4</label>
          <p>Defines all of the constants that will be needed to setup the model and display.</p>
        </list-item>
        <list-item>
          <label>5</label>
          <p>Creates a GridWindow of RGB pixels for visualization and for generating timestep PNG images. x*3, y define the dimensions of the pixel grid. the x variable is multiplied by 3 so that 3 models can be visualized side by side in the same window. The last argument is a scaling factor that specifies that each pixel on the grid will be viewed as a 5x5 square of pixels on the screen.</p>
        </list-item>
        <list-item>
          <label>6</label>
          <p>Creates a file output object that will write to a file called populations.csv.</p>
        </list-item>
        <list-item>
          <label>8</label>
          <p>Creates an array with 3 entries that will be populated with models.</p>
        </list-item>
        <list-item>
          <label>9-12</label>
          <p>Fills the model list with models that are initialized identically, with identical random number generators. Each model will hold and update its own cells and diffusible drug. See the Grid Definition and Constructor section and the InitTumor Function section for more details.</p>
        </list-item>
        <list-item>
          <label>13-14</label>
          <p>Setting the DRUG_DURATION constant creates the only difference in the 3 models being compared. In models[0] no drug will be administered. In models[1] drug administration will be constant (DRUG_DURATION is set equal to DRUG_CYCLE). In models[2] drug will be administered periodically (the default value of DRUG_DURATION is 40). See the ExampleModel Constructor and Properties section for the default model initialization.</p>
        </list-item>
        <list-item>
          <label>16</label>
          <p>Executes the main loop for 10000 timesteps.</p>
        </list-item>
        <list-item>
          <label>17</label>
          <p>Requires every iteration of the loop to take a minimum number of milliseconds. This slows down the execution and display of the model and makes it easier for the viewer to follow.</p>
        </list-item>
        <list-item>
          <label>18</label>
          <p>Loops over all models to update them.</p>
        </list-item>
        <list-item>
          <label>19</label>
          <p>Advances the state of the agents and diffusibles in each model by one timestep. See the Model Step Function for more details.</p>
        </list-item>
        <list-item>
          <label>20</label>
          <p>Draws the current state of each model to the window. See the Draw Model Function for more details.</p>
        </list-item>
        <list-item>
          <label>23</label>
          <p>Writes the population sizes of each model every timestep to allow the models to be compared.</p>
        </list-item>
        <list-item>
          <label>24-25</label>
          <p>Every 10 days, writes the state of the model as captured by the GridWindow to a PNG file.</p>
        </list-item>
        <list-item>
          <label>29-30</label>
          <p>After the main for loop has finished, the FileIO object and the visualization window are closed, and the program ends.</p>
        </list-item>
      </list>
    </sec>
    <sec id="sec019">
      <title>ExampleModel constructor and properties</title>
      <p>This section explains how the grid is defined and instantiated.</p>
      <p specific-use="line">1 public class ExampleModel extends <bold>AgentGrid2D</bold>&lt;ExampleCell&gt; {</p>
      <p specific-use="line">2  //<italic>model constants</italic></p>
      <p specific-use="line">3  public final static int RESISTANT = <bold>RGB</bold> (0, 1, 0), SENSITIVE = <bold>RGB</bold>(0, 0, 1);</p>
      <p specific-use="line">4  public double TIMESTEP = 2.0/24;//2 <italic>hours per timestep</italic></p>
      <p specific-use="line">5  public double SPACE_STEP = 20;//<italic>um</italic></p>
      <p specific-use="line">6  public double DIV_PROB_SEN = <bold>ProbScale</bold> (0.5, TIMESTEP);</p>
      <p specific-use="line">7  public double DIV_PROB_RES = <bold>ProbScale</bold> (0.2, TIMESTEP);</p>
      <p specific-use="line">8  public double DEATH_PROB = <bold>ProbScale</bold> (0.02, TIMESTEP);</p>
      <p specific-use="line">9  public double DRUG_DEATH = <bold>ProbScale</bold> (0.8, TIMESTEP);</p>
      <p specific-use="line">10  public double DRUG_START = 20/TIMESTEP;</p>
      <p specific-use="line">11  public double DRUG_PERIOD = 15/TIMESTEP;</p>
      <p specific-use="line">12  public double DRUG_DURATION = 2/TIMESTEP;</p>
      <p specific-use="line">13  public double DRUG_UPTAKE = −0.03 *TIMESTEP;</p>
      <p specific-use="line">14  public double DRUG_DIFF_RATE = 0.02*60*60*24*(TIMESTEP/(SPACE_STEP*SPACE_STEP));</p>
      <p specific-use="line">15  public double DRUG_BOUNDARY_VAL = 1.0;</p>
      <p specific-use="line">16  //<italic>internal model objects</italic></p>
      <p specific-use="line">17  public <bold>PDEGrid2D</bold> drug;</p>
      <p specific-use="line">18  public <bold>Rand</bold> rng;</p>
      <p specific-use="line">19  public int [] divHood = <bold>MooreHood</bold> (false);</p>
      <p specific-use="line">20</p>
      <p specific-use="line">21  public ExampleModel (int <bold>xDim</bold>, int <bold>yDim</bold>, <bold>Rand</bold> rng) {</p>
      <p specific-use="line">22   super (<bold>xDim</bold>, <bold>yDim</bold>, ExampleCell.class);</p>
      <p specific-use="line">23   this.rng = rng;</p>
      <p specific-use="line">24   drug = new <bold>PDEGrid2D</bold>(<bold>xDim</bold>, <bold>yDim</bold>);</p>
      <p specific-use="line">25  }</p>
      <list list-type="simple">
        <list-item>
          <label>1</label>
          <p>The ExampleModel class, which is user defined and specific to this example, is built by extending the generic AgentGrid2D class. The extended grid class requires an agent type parameter, which specifies the type of agent that will live on the grid. To meet this requirement, the &lt;ExampleCell&gt; type parameter is added to the declaration.</p>
        </list-item>
        <list-item>
          <label>3</label>
          <p>Defines RESISTANT and SENSITIVE constants, which are created by the Util RGB function. These constants serve as both colors for drawing and as labels for the different cell types.</p>
        </list-item>
        <list-item>
          <label>4-5</label>
          <p>All grids in HAL assume unit spatial dimensions, and operations such as diffusion assume unit timesteps. This means that all rate/probability constants should be scaled such that when applied, they operate at a consistent resolution chosen for the grids.</p>
        </list-item>
        <list-item>
          <label>6-9</label>
          <p>Probabilistic constants are scaled from their original probabilities (per day) into probabilities per 2 hours, such that the expected value per day is the same.</p>
        </list-item>
        <list-item>
          <label>10-12</label>
          <p>Defines treatment application constants. These values can be reassigned after model creation to test different treatment schedules. In the main function, the DRUG_DURATION variable is modified for the Constant-Drug, and Pulsed Therapy experiment cases.</p>
        </list-item>
        <list-item>
          <label>13-15</label>
          <p>Defines the PDE constants, the DRUG_DIFF_RATE is scaled from um<sup>2</sup>/second to um<sup>2</sup>/day, and is then scaled by the timestep and space-step.</p>
        </list-item>
        <list-item>
          <label>17</label>
          <p>Declares that the model will contain a PDEGrid2D, which will hold the drug concentrations. The PDEGrid2D can only be initialized when the x and y dimensions of the model are known, which is why we do not create the PDEGrid2D object until the constructor function is called.</p>
        </list-item>
        <list-item>
          <label>18</label>
          <p>Declares that the Grid will contain a Random number generator (the Rand object), but takes it in as a constructor argument to allow the modeler to seed the generator if desired for consistent output.</p>
        </list-item>
        <list-item>
          <label>19</label>
          <p>Creates a neighborhood using the MooreHood function. The MooreHood function generates a set of coordinates that define the Moore Neighborhood (the 8 closest coordinates to a central origin), centered around (0, 0). The false argument declares that we do not want to include the origin in the neighborhood, just the 8 coordinates around that position. The neighborhood is stored in the format [0<sub>1</sub>0<sub>2</sub>, …, 0<sub><italic>n</italic></sub>, <italic>x</italic><sub>1</sub>, <italic>y</italic><sub>1</sub>, <italic>x</italic><sub>2</sub>, <italic>y</italic><sub>2</sub>, …, <italic>x</italic><sub><italic>n</italic></sub>, <italic>y</italic><sub><italic>n</italic></sub>]. The leading zeros are written to when MapHood is called, and will store the position indices that the neighborhood maps to. See the CellStep function for more information, and the InitTumor Function Line 3 for another example of the use of neighborhoods</p>
        </list-item>
        <list-item>
          <label>21</label>
          <p>Defines the model constructor, which takes as arguments the x and y dimensions of the model and a random number generator (a Rand object).</p>
        </list-item>
        <list-item>
          <label>22</label>
          <p>Calls the AgentGrid2D constructor with super, passing it the x and y dimensions of the model, and the ExampleCell Class. This Class is used by the Grid to generate a new cell when the NewAgentSQ function is called.</p>
        </list-item>
        <list-item>
          <label>23-24</label>
          <p>The Rand argument is assigned and the drug PDEGrid2D is defined with matching dimensions.</p>
        </list-item>
      </list>
    </sec>
    <sec id="sec020">
      <title>InitTumor function</title>
      <p>The next segment of code is a function from the ExampleModel class that defines how the tumor is first seeded after the ExampleModel is created.</p>
      <p specific-use="line">1 public void InitTumor(double radius, double resistantProb) {</p>
      <p specific-use="line">2  //<italic>get a list of indices that fill a circle at the center of the grid</italic></p>
      <p specific-use="line">3  int[] tumorNeighborhood = <bold>CircleHood</bold>(true, radius);</p>
      <p specific-use="line">4  int hoodSize = <bold>MapHood</bold>(tumorNeighborhood, <bold>xDim</bold> / 2, <bold>yDim</bold> / 2);</p>
      <p specific-use="line">5  for (int i = 0; i &lt; hoodSize; i++) {</p>
      <p specific-use="line">6   if (rng.<bold>Double</bold> () &lt; resistantProb) {</p>
      <p specific-use="line">7    <bold>NewAgentSQ</bold>(tumorNeighborhood[i]).type = RESISTANT;</p>
      <p specific-use="line">8   } else {</p>
      <p specific-use="line">9    <bold>NewAgentSQ</bold>(tumorNeighborhood[i]).type = SENSITIVE;</p>
      <p specific-use="line">10   }</p>
      <p specific-use="line">11  }</p>
      <p specific-use="line">12 }</p>
      <list list-type="simple">
        <list-item>
          <label>1</label>
          <p>The arguments passed to the InitTumor function are the approximate radius of the circular tumor being created and the probability that each created cell will be of the resistant phenotype.</p>
        </list-item>
        <list-item>
          <label>3</label>
          <p>Sets the tumorNeighborhood array using the CircleHood function, which stores coordinates in the form [0<sub>1</sub>, 0<sub>2</sub>, …, 0<sub><italic>n</italic></sub>, <italic>x</italic><sub>1</sub>, <italic>y</italic><sub>1</sub>, <italic>x</italic><sub>2</sub>, <italic>y</italic><sub>2</sub>, …<italic>x</italic><sub><italic>n</italic></sub>, <italic>y</italic><sub><italic>n</italic></sub>]. The x,y coordinate pairs define a neighborhood of all squares whose centers are within the radius distance of the center (0, 0) origin square. The leading 0s are used by the MapHood function to store the mapped indices. The Boolean argument specifies that the origin will be included in this set of squares, thus making a completely filled circle of squares.</p>
        </list-item>
        <list-item>
          <label>4</label>
          <p>Uses the MapHood function to map the neighborhood defined above to be centered around xDim/2,yDim/2 (the dimensions of the AgentGrid). The results of the mapping are written as position indices to the beginning of the tumorNeighborhood array. MapHood returns the number of valid indices found, and this will be the size of the starting population.</p>
        </list-item>
        <list-item>
          <label>5</label>
          <p>Loops from 0 to hoodSize, allowing access to each mapped position index in the tumorNeighborhood.</p>
        </list-item>
        <list-item>
          <label>6</label>
          <p>Samples a random number in the range [0 − 1) and compares to the resistantProb argument to set whether the cell should have the resistant phenotype or the sensitive phenotype.</p>
        </list-item>
        <list-item>
          <label>7-9</label>
          <p>Uses the NewAgentSQ function to place a new cell at each tumorNeighborhood position. In the same line we also specify that the phenotype should be either resistant or sensitive, depending on the result of the rng.Double() call.</p>
        </list-item>
      </list>
    </sec>
    <sec id="sec021">
      <title>ModelStep function</title>
      <p>This section looks at the model’s step function which is executed once per timestep by each Model.</p>
      <p specific-use="line">1 public void ModelStep(int tick) {</p>
      <p specific-use="line">2  <bold>ShuffleAgents</bold>(rng);</p>
      <p specific-use="line">3  for (ExampleCell cell: this) {</p>
      <p specific-use="line">4   cell.CellStep();</p>
      <p specific-use="line">5  }</p>
      <p specific-use="line">6  double periodTick = (tick − DRUG_START) % DRUG_PERIOD;</p>
      <p specific-use="line">7  if (periodTick &gt; 0 &amp;&amp; periodTick &lt; DRUG_DURATION) {</p>
      <p specific-use="line">8   //<italic>drug will enter through boundaries</italic></p>
      <p specific-use="line">9   drug.<bold>DiffusionADI</bold>(DRUG_DIFF_RATE, DRUG_BOUNDARY_VAL);</p>
      <p specific-use="line">10  } else {</p>
      <p specific-use="line">11   //<italic>drug will not enter through boundaries</italic></p>
      <p specific-use="line">12   drug.<bold>DiffusionADI</bold>(DRUG_DIFF_RATE);</p>
      <p specific-use="line">13  }</p>
      <p specific-use="line">14  drug.<bold>Update</bold>();</p>
      <p specific-use="line">15 }</p>
      <list list-type="simple">
        <list-item>
          <label>2</label>
          <p>The ShuffleAgents function randomizes the order of iteration so that the agents are always looped through in random order.</p>
        </list-item>
        <list-item>
          <label>3-4</label>
          <p>Iterates over every cell on the grid, and calls the CellStep function on every cell.</p>
        </list-item>
        <list-item>
          <label>6-7</label>
          <p>The periodTick variable stores at what point in the drug delivery cycle the tick is, and the If statement checks whether the tick is in the right part of the drug cycle to apply drug, (See the Grid Definition and Constructor section for the values of the constants involved, the DRUG_DURATION variable is set differently for each model in the Main Function)</p>
        </list-item>
        <list-item>
          <label>9</label>
          <p>If it is time to add drug to the model, the DiffusionADI function is called. DiffusionADI uses the ADI method which is more stable than 2D Euler and allows us to take larger steps. The additional argument to the DiffusionADI function specifies the boundary condition value DRUG_BOUNDARY_VAL. This causes the drug to diffuse into the PDEGrid2D from the boundary. Here we assume that drug is only delivered from the boundaries of the domain</p>
        </list-item>
        <list-item>
          <label>12</label>
          <p>Without the second argument the DiffusionADI function assumes a zero-flux boundary, meaning that drug concentration cannot escape or enter through the sides of the model. Therefore the only way for the drug concentration to decrease is via uptake by the Cells. See the CellStep function section, line 6, for more information.</p>
        </list-item>
        <list-item>
          <label>14</label>
          <p>Update is called to apply the reaction and diffusion changes to the PDEGrid.</p>
        </list-item>
      </list>
    </sec>
    <sec id="sec022">
      <title>CellStep function and cell properties</title>
      <p>We next look at how the ExampleCell Agent is defined and at the CellStep function that runs once per Cell per timestep. The G property that is referenced many times in this section is a built-in agent property that gives access to the ExampleGrid object that the cell lives on.</p>
      <p specific-use="line">1 class ExampleCell extends <bold>AgentSQ2Dunstackable</bold>&lt;ExampleModel&gt; {</p>
      <p specific-use="line">2  public int type;</p>
      <p specific-use="line">3</p>
      <p specific-use="line">4  public void CellStep() {</p>
      <p specific-use="line">5   //<italic>uptake of Drug</italic></p>
      <p specific-use="line">6   <bold>G</bold>.drug.<bold>Mul</bold>(<bold>Isq</bold>(), <bold>G</bold>.DRUG_UPTAKE);</p>
      <p specific-use="line">7   double deathProb, divProb;</p>
      <p specific-use="line">8   //<italic>Chance of Death, depends on resistance and drug concentration</italic></p>
      <p specific-use="line">9   if (this.type ⩵ RESISTANT) {</p>
      <p specific-use="line">10    deathProb = <bold>G</bold>.DEATH_PROB;</p>
      <p specific-use="line">11   } else {</p>
      <p specific-use="line">12    deathProb = <bold>G</bold>.DEATH_PROB + <bold>G</bold>.drug.<bold>Get</bold>(<bold>Isq</bold>()) * <bold>G</bold>.DRUG_DEATH;</p>
      <p specific-use="line">13   }</p>
      <p specific-use="line">14   if (<bold>G</bold>.rng.<bold>Double</bold>() &lt; deathProb) {</p>
      <p specific-use="line">15    <bold>Dispose</bold>();</p>
      <p specific-use="line">16    return;</p>
      <p specific-use="line">17   }</p>
      <p specific-use="line">18   //<italic>Chance of Division, depends on resistance</italic></p>
      <p specific-use="line">19   if (this.type ⩵ RESISTANT) {</p>
      <p specific-use="line">20    divProb = <bold>G</bold>.DIV_PROB_RES;</p>
      <p specific-use="line">21   } else {</p>
      <p specific-use="line">22    divProb = <bold>G</bold>.DIV_PROB_SEN;</p>
      <p specific-use="line">23   }</p>
      <p specific-use="line">24   if (<bold>G</bold>.rng.<bold>Double</bold>() &lt; divProb) {</p>
      <p specific-use="line">25    int options = <bold>MapEmptyHood</bold>(<bold>G</bold>.divHood);</p>
      <p specific-use="line">26    if (options &gt; 0) {</p>
      <p specific-use="line">27     <bold>G.NewAgentSQ</bold>(<bold>G</bold>.divHood[<bold>G</bold>.rng.Int(options)]).type = this.type;</p>
      <p specific-use="line">28    }</p>
      <p specific-use="line">29   }</p>
      <p specific-use="line">30  }</p>
      <p specific-use="line">31 }</p>
      <list list-type="simple">
        <list-item>
          <label>1</label>
          <p>The ExampleCell class is built by extending the generic AgentSQ2Dunstackable class. The extended Agent class requires the ExampleModel class as a type argument, which is the type of Grid that the Agent will live on. To meet this requirement, we add the &lt;ExampleModel&gt; type parameter to the extension.</p>
        </list-item>
        <list-item>
          <label>2</label>
          <p>Defines a cell property called “type”. Each Cell holds a value for this field. If the value is RESISTANT, the Cell is of the resistant phenotype, if the value is SENSITIVE, the cell is of the sensitive phenotype. The RESISTANT and SENSITIVE values are defined in the ExampleGrid as constants (See the ExampleModel Constructor and Properties, line 3).</p>
        </list-item>
        <list-item>
          <label>6</label>
          <p>The G property is used to access the ExampleGrid object that the Cell lives on. G is used often with agent functions as the AgentGrid is expected to contain any information that is not local to the individual agent. Here it is used to get the drug PDEGrid2D. The drug concentration at the index that the Cell is currently occupying (Isq()) is then multiplied by the drug uptake constant, thus modeling local drug uptake by the Cell.</p>
        </list-item>
        <list-item>
          <label>7</label>
          <p>Defines deathProb and divProb variables, these will be assigned different values depending on whether the ExampleCell is RESISTANT or SENSITIVE.</p>
        </list-item>
        <list-item>
          <label>9-12</label>
          <p>If the cell is resistant, the deathProb variable is set to the DEATH_PROB value alone, if the cell is sensitive, an additional term is added to account for the probability of the cell dying from drug exposure, using the concentration of drug at the cell’s position (Isq())</p>
        </list-item>
        <list-item>
          <label>14-16</label>
          <p>Samples a random number in the range [0 − 1) and compares to deathProb to determine whether the cell will die. If so, the built-in agent Dispose() function is called, which removes the agent from the grid, and then return is called so that the dead cell will not divide.</p>
        </list-item>
        <list-item>
          <label>19-22</label>
          <p>Sets the divProb variable to either DIV_PROB_RES for resistant cells, or DIV_PROB_SEN for sensitive cells.</p>
        </list-item>
        <list-item>
          <label>24</label>
          <p>Samples a random number in the range [0 − 1) and compares to divProb to determine whether the cell will divide.</p>
        </list-item>
        <list-item>
          <label>25</label>
          <p>If the cell divides, the MapEmptyHood function is used, which checks the positions in the divHood (the Moore neighborhood as defined in the ExampleModel Constructor and Properties section, line 11) around the Cell, and writes the position indices that do not contain any agents into the divHood. MapEmptyHood returns the number of valid empty positions found.</p>
        </list-item>
        <list-item>
          <label>26-27</label>
          <p>If there are one or more valid division options, a new daughter cell is created using the NewAgentSQ function and its starting location is chosen by randomly sampling the divHood array to pull out one if its valid locations. The other daughter is assumed to occupy the same location as the mother cell. Finally with the.type = this.type statement, the phenotype of the newly placed daughter cell is inherited from the mother cell.</p>
        </list-item>
      </list>
    </sec>
    <sec id="sec023">
      <title>DrawModel function</title>
      <p>We next look at the DrawModel Function, which is used to display a summary of the model state on a GridWindow object. In this program, DrawModel is called once for each model per timestep; see the main function section for more information.</p>
      <p specific-use="line">1 public void DrawModel(<bold>GridWindow</bold> vis, int iModel) {</p>
      <p specific-use="line">2  for (int x = 0; x &lt; <bold>xDim</bold>; x++) {</p>
      <p specific-use="line">3   for (int y = 0; y &lt; <bold>yDim</bold>; y++) {</p>
      <p specific-use="line">4    ExampleCell drawMe = GetAgent(x, y);</p>
      <p specific-use="line">5    if (drawMe != null) {</p>
      <p specific-use="line">6     vis.<bold>SetPix</bold>(x + iModel * <bold>xDim</bold>, y, drawMe.type);</p>
      <p specific-use="line">7    } else {</p>
      <p specific-use="line">8     vis.<bold>SetPix</bold>(x + iModel * <bold>xDim</bold>, y, <bold>HeatMapRGB</bold>(drug.<bold>Get</bold>(x, y)));</p>
      <p specific-use="line">9    }</p>
      <p specific-use="line">10   }</p>
      <p specific-use="line">11  }</p>
      <p specific-use="line">12 }</p>
      <list list-type="simple">
        <list-item>
          <label>2-3</label>
          <p>Loops over every lattice position of the grid being drawn, xDim and yDim refer to the dimensions of the model.</p>
        </list-item>
        <list-item>
          <label>4</label>
          <p>Uses the GetAgent function to get the Cell that is at the x,y position.</p>
        </list-item>
        <list-item>
          <label>5-6</label>
          <p>If a cell exists at the requested position, the corresponding pixel on the GridWindow is set to the cell’s phenotype color. To draw the models side by side, the pixel being drawn is displaced to the right by the model index.</p>
        </list-item>
        <list-item>
          <label>7-8</label>
          <p>If there is no cell to draw, then the pixel color is set based on the drug concentration at the same index, using the built-in heat colormap.</p>
        </list-item>
      </list>
    </sec>
    <sec id="sec024">
      <title>Imports</title>
      <p>The final code snippet looks at the imports that are needed. Any modern Java IDE should generate import statements automatically.</p>
      <p specific-use="line">1 package Examples._6CompetitiveRelease;</p>
      <p specific-use="line">2 import HAL.GridsAndAgents.<bold>AgentGrid2D</bold>;</p>
      <p specific-use="line">3 import HAL.GridsAndAgents.<bold>PDEGrid2D</bold>;</p>
      <p specific-use="line">4 import HAL.Gui.<bold>GridWindow</bold>;</p>
      <p specific-use="line">5 import HAL.GridsAndAgents.<bold>AgentSQ2Dunstackable</bold>;</p>
      <p specific-use="line">6 import HAL.<bold>Tools</bold>.<bold>FileIO</bold>;</p>
      <p specific-use="line">7 import HAL.<bold>Rand</bold>;</p>
      <p specific-use="line">8 import static Examples._6CompetitiveRelease.ExampleModel.*;</p>
      <p specific-use="line">9 import static HAL.<bold>Util</bold>.*;</p>
      <list list-type="simple">
        <list-item>
          <label>1</label>
          <p>The package statement specifies where the file exists in the larger project structure</p>
        </list-item>
        <list-item>
          <label>2-7</label>
          <p>Imports all of the classes that we will need for the program.</p>
        </list-item>
        <list-item>
          <label>8</label>
          <p>Imports the static fields of the model so that we can use the type names defined there in the Agent class.</p>
        </list-item>
        <list-item>
          <label>9</label>
          <p>Imports the static functions of the Util file, which adds all of the Util functions to the current namespace, so we can natively call them. Statically importing Util is recommended for every project.</p>
        </list-item>
      </list>
    </sec>
    <sec id="sec025">
      <title>Model results</title>
      <p><xref ref-type="fig" rid="pcbi.1007635.g010">Fig 10</xref> displays the model visualization at Day 0, Day 20, Day 200, Day 500, and Day 650 recorded from the GridWindow ToPNG function. <xref ref-type="fig" rid="pcbi.1007635.g009">Fig 9</xref> displays the population sizes as recorded by the FileIO Write function at the end of every timestep.</p>
      <fig id="pcbi.1007635.g009" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.1371/journal.pcbi.1007635.g009</object-id>
        <label>Fig 9</label>
        <caption>
          <title>FileIO population output.</title>
          <p>This plot summarizes the changes in tumor burden over time for each model. This plot was constructed using data accumulated in the program output populations.csv file. Displayed using the Java XChart package.</p>
        </caption>
        <graphic xlink:href="pcbi.1007635.g009"/>
      </fig>
      <fig id="pcbi.1007635.g010" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.1371/journal.pcbi.1007635.g010</object-id>
        <label>Fig 10</label>
        <caption>
          <title>Selected model visualizations.</title>
          <p>Blue cells are drug sensitive, Green cells are drug resistant, background heatmap colors show drug concentration. The model domain size is 100 by 100 cells, or 4 mm<sup>2</sup></p>
        </caption>
        <graphic xlink:href="pcbi.1007635.g010"/>
      </fig>
      <p>This example illustrates the power of HAL’s approach to model building. Writing relatively little complex code, we setup a three model experiment with nontrivial dynamics along with methods to collect data and visualize the models. We now briefly review the model results.</p>
      <p>As can be seen in <xref ref-type="fig" rid="pcbi.1007635.g010">Fig 10</xref>, at Day 0 and Day 20 (right before drug application starts), all 3 models are identical. At Day 200 the differences in treatment application show different effects: when no drug is applied, the rapidly dividing sensitive cells quickly fill the domain, while when drug is applied constantly, the resistant cells start to overtake the sensitive population. Pulsed drug kills some sensitive cells, but leaves enough alive to prevent growth of the resistant cells. At Day 500, the resistant cells have begun to emerge from the center of the pulsed drug model. At Day 650, all domains are filled.</p>
      <p>As can be seen in <xref ref-type="fig" rid="pcbi.1007635.g009">Fig 9</xref>, the pulsed therapy is the most effective at preventing tumor growth long-term, however the resistant cells ultimately succeed in breaking out of the tumor center and out-competing the sensitive cells on the fringes of the tumor. It may be possible to contain a population of sensitive and resistant cells for longer by using a different pulsing schedule or by modifying the treatment schedule in response to the tumor growth (adaptive therapy). As the presented model is primarily an example, we do not explore how to improve treatment further. For a more detailed exploration of the potential of adaptive therapy for prolonging competitive release, see [<xref rid="pcbi.1007635.ref019" ref-type="bibr">19</xref>].</p>
    </sec>
  </sec>
  <sec id="sec026">
    <title>Availability and future directions</title>
    <sec id="sec027">
      <title>How to download and contribute</title>
      <p>HAL is publicly available on GitHub, at <ext-link ext-link-type="uri" xlink:href="https://github.com/MathOnco/HAL">https://github.com/MathOnco/HAL</ext-link>. A manual is included that walks the user through installation and serves as a coding reference. For those interested in using HAL, downloading and setting up the project is a good first start. From there running and examining the included examples is recommended, as they do a good job of summarizing HAL’s capabilities. Modelers can contribute tools that they develop by making pull requests to the repository.</p>
    </sec>
    <sec id="sec028">
      <title>Future directions</title>
      <sec id="sec029">
        <title>Cross model validation</title>
        <p>Having many different paradigms to choose from adds several complications to modeling: It can take significant effort to build a model from scratch under one paradigm, and then significant additional effort to migrate the model to a different paradigm. By adding more modeling approaches with a consistent interface, HAL will lower the model migration barrier and allow modelers to test the merits of many paradigms in their investigation, and to validate their results by seeing whether they hold true across paradigms [<xref rid="pcbi.1007635.ref049" ref-type="bibr">49</xref>]. Note that our goal is not to recreate all of the functionality of the pre-existing frameworks that support these paradigms, it is to provide their core algorithms in an accessible and consistent format so that users can easily choose from and compare them.</p>
        <p>To take HAL’s modeling flexibility further we hope to incorporate additional modeling paradigms that are commonly used in agent-based modeling of cells. A potential addition is a Voronoi Agent type, which would use Voronoi tessellation [<xref rid="pcbi.1007635.ref050" ref-type="bibr">50</xref>] to find the cell’s nearest neighbors and determine cell volume. We are also considering including modeling paradigms that construct cells out of smaller subunits, such as Deformable Ellipsoid Cell Modeling [<xref rid="pcbi.1007635.ref051" ref-type="bibr">51</xref>], as this would allow us to model the mechanics of tissue formation and cell migration in more detail.</p>
      </sec>
      <sec id="sec030">
        <title>Bridging spatial scales</title>
        <p>We also hope to explore the possibility of adjusting spatial scales for both our PDEs and Agents. For PDEs, this is a readily understood problem, and we intend to add scalable PDEGrids to HAL soon. However, for agent-based modeling the process of changing scales while preserving dynamics is not so well defined, though we imagine that it may be possible under certain assumptions. This would be useful for helping us bridge the divide between cell level and tissue/organ/tumor level dynamics, as the number of cells involved at these scales are orders of magnitude greater than what desktop machines can tractably model. The PopulationGrid modeling system is an example of this.</p>
      </sec>
      <sec id="sec031">
        <title>Assumption modules</title>
        <p>A common modeling task is exploring how combinations of different assumptions influence model behavior. The included ModuleSetManager object helps design models specifically with this in mind. The design entails providing code “hooks” so that code can be added to influence specific agent decisions and model events, (e.g. whether an agent will reproduce). Modelers can then write assumption modules that will influence these events (e.g. by altering the probability of reproduction based on an environmental factor that would otherwise be ignored).</p>
        <p>This approach allows modelers to combine and remove assumption modules without having to worry about breaking the model. This facilitates easy exploration of the space of assumptions until ones suitable for understanding biological phenomena are found. We are very excited about the potential of this approach for collaborative projects and for building increasingly complex models by encapsulating the complexity into manageable parts, and hope to improve on the tools for this paradigm as we explore its potential.</p>
      </sec>
      <sec id="sec032">
        <title>Advanced scheduling</title>
        <p>Taking inspiration from Repast, SWARM, and MASON, another expected extension is the inclusion of optional schedulers to facilitate more complex methods of iterating through agents than simply looping over each grid. This is not intended to replace the simple grid iteration approach, but instead should augment it with optional complex methods. An AgentList object is currently included to begin to address this. It allows modelers to make selective lists of agents for more flexible iteration.</p>
      </sec>
      <sec id="sec033">
        <title>Building a community</title>
        <p>HAL has already seen adoption within the labs at the Integrated Mathematical Oncology department of Moffitt Cancer Center and beyond. We certainly hope that more outside users will be interested in its potential. As the user-base for HAL grows, we plan to extend the base of resources around the platform. The current set of resources that exist for new users to get started are the manual [<xref rid="pcbi.1007635.ref038" ref-type="bibr">38</xref>], a website with an online version of the manual [<xref rid="pcbi.1007635.ref052" ref-type="bibr">52</xref>] and a playlist of YouTube videos [<xref rid="pcbi.1007635.ref053" ref-type="bibr">53</xref>]. We intend to increase HAL’s online presence by including a website with a code repository to make sharing models and tools easier.</p>
      </sec>
    </sec>
    <sec id="sec034">
      <title>Conclusion</title>
      <p>Cancer is a complex and heterogeneous disease whose mathematical study is still being developed. To make better progress in this endeavor, it is helpful to have a set of highly generic tools that encapsulate the key components of spatial modeling so that researchers can produce efficient models quickly without being constrained in their approach, nor in the complexity of the systems that they can produce. HAL is our attempt to achieve this.</p>
      <p>HAL was made easily extensible so that researchers can build models and more specific tools on top of HAL’s generic base. The hope is that by this process HAL will grow into a powerful tool set that will help standardize and coordinate hybrid modeling in mathematical oncology.</p>
      <p>We recommend HAL to anyone building spatial models for oncology, as the tools presented are primarily geared toward this end. However, given the amount of overlap and cross talk between the approaches used in different modeling applications, we hope that modelers outside of mathematical oncology will also take interest and contribute, to our mutual benefit.</p>
    </sec>
  </sec>
  <sec sec-type="supplementary-material" id="sec035">
    <title>Supporting information</title>
    <supplementary-material content-type="local-data" id="pcbi.1007635.s001">
      <label>S1 Text</label>
      <caption>
        <title>Supplementary materials.</title>
        <p>(PDF)</p>
      </caption>
      <media xlink:href="pcbi.1007635.s001.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ref-list>
    <title>References</title>
    <ref id="pcbi.1007635.ref001">
      <label>1</label>
      <mixed-citation publication-type="journal"><name><surname>Anderson</surname><given-names>AR</given-names></name>. <article-title>A hybrid mathematical model of solid tumour invasion: the importance of cell adhesion</article-title>. <source>Mathematical medicine and biology: a journal of the IMA</source>. <year>2005</year>;<volume>22</volume>(<issue>2</issue>):<fpage>163</fpage>–<lpage>186</lpage>. <pub-id pub-id-type="doi">10.1093/imammb/dqi005</pub-id><?supplied-pmid 15781426?><pub-id pub-id-type="pmid">15781426</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref002">
      <label>2</label>
      <mixed-citation publication-type="journal"><name><surname>Rejniak</surname><given-names>KA</given-names></name>, <name><surname>Anderson</surname><given-names>AR</given-names></name>. <article-title>Hybrid models of tumor growth</article-title>. <source>Wiley Interdisciplinary Reviews: Systems Biology and Medicine</source>. <year>2011</year>;<volume>3</volume>(<issue>1</issue>):<fpage>115</fpage>–<lpage>125</lpage>. <pub-id pub-id-type="doi">10.1002/wsbm.102</pub-id><?supplied-pmid 21064037?><pub-id pub-id-type="pmid">21064037</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref003">
      <label>3</label>
      <mixed-citation publication-type="journal"><name><surname>Anderson</surname><given-names>AR</given-names></name>, <name><surname>Chaplain</surname><given-names>M</given-names></name>. <article-title>Continuous and discrete mathematical models of tumor-induced angiogenesis</article-title>. <source>Bulletin of mathematical biology</source>. <year>1998</year>;<volume>60</volume>(<issue>5</issue>):<fpage>857</fpage>–<lpage>899</lpage>. <pub-id pub-id-type="doi">10.1006/bulm.1998.0042</pub-id><?supplied-pmid 9739618?><pub-id pub-id-type="pmid">9739618</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref004">
      <label>4</label>
      <mixed-citation publication-type="journal"><name><surname>Gerlee</surname><given-names>P</given-names></name>, <name><surname>Anderson</surname><given-names>AR</given-names></name>. <article-title>An evolutionary hybrid cellular automaton model of solid tumour growth</article-title>. <source>Journal of theoretical biology</source>. <year>2007</year>;<volume>246</volume>(<issue>4</issue>):<fpage>583</fpage>–<lpage>603</lpage>. <pub-id pub-id-type="doi">10.1016/j.jtbi.2007.01.027</pub-id><?supplied-pmid 17374383?><pub-id pub-id-type="pmid">17374383</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref005">
      <label>5</label>
      <mixed-citation publication-type="journal"><name><surname>Norton</surname><given-names>KA</given-names></name>, <name><surname>Gong</surname><given-names>C</given-names></name>, <name><surname>Jamalian</surname><given-names>S</given-names></name>, <name><surname>Popel</surname><given-names>AS</given-names></name>. <article-title>Multiscale agent-based and hybrid modeling of the tumor immune microenvironment</article-title>. <source>Processes</source>. <year>2019</year>;<volume>7</volume>(<issue>1</issue>):<fpage>37</fpage><pub-id pub-id-type="doi">10.3390/pr7010037</pub-id><?supplied-pmid 30701168?><pub-id pub-id-type="pmid">30701168</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref006">
      <label>6</label>
      <mixed-citation publication-type="journal"><name><surname>Dormann</surname><given-names>S</given-names></name>, <name><surname>Deutsch</surname><given-names>A</given-names></name>. <article-title>Modeling of self-organized avascular tumor growth with a hybrid cellular automaton</article-title>. <source>In silico biology</source>. <year>2002</year>;<volume>2</volume>(<issue>3</issue>):<fpage>393</fpage>–<lpage>406</lpage>. <?supplied-pmid 12542422?><pub-id pub-id-type="pmid">12542422</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref007">
      <label>7</label>
      <mixed-citation publication-type="journal"><name><surname>Kim</surname><given-names>Y</given-names></name>, <name><surname>Stolarska</surname><given-names>MA</given-names></name>, <name><surname>Othmer</surname><given-names>HG</given-names></name>. <article-title>A hybrid model for tumor spheroid growth in vitro I: theoretical development and early results</article-title>. <source>Mathematical Models and Methods in Applied Sciences</source>. <year>2007</year>;<volume>17</volume>(<issue>supp01</issue>):<fpage>1773</fpage>–<lpage>1798</lpage>. <pub-id pub-id-type="doi">10.1142/S0218202507002479</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref008">
      <label>8</label>
      <mixed-citation publication-type="journal"><name><surname>Sanga</surname><given-names>S</given-names></name>, <name><surname>Frieboes</surname><given-names>HB</given-names></name>, <name><surname>Zheng</surname><given-names>X</given-names></name>, <name><surname>Gatenby</surname><given-names>R</given-names></name>, <name><surname>Bearer</surname><given-names>EL</given-names></name>, <name><surname>Cristini</surname><given-names>V</given-names></name>. <article-title>Predictive oncology: a review of multidisciplinary, multiscale in silico modeling linking phenotype, morphology and growth</article-title>. <source>Neuroimage</source>. <year>2007</year>;<volume>37</volume>:<fpage>S120</fpage>–<lpage>S134</lpage>. <pub-id pub-id-type="doi">10.1016/j.neuroimage.2007.05.043</pub-id><?supplied-pmid 17629503?><pub-id pub-id-type="pmid">17629503</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref009">
      <label>9</label>
      <mixed-citation publication-type="journal"><name><surname>Basanta</surname><given-names>D</given-names></name>, <name><surname>Anderson</surname><given-names>A</given-names></name>. <article-title>Homeostasis Back and Forth: An Ecoevolutionary Perspective of Cancer</article-title>. <source>Cold Spring Harbor perspectives in medicine</source>. <year>2017</year>;<volume>7</volume>(<issue>9</issue>). <pub-id pub-id-type="doi">10.1101/cshperspect.a028332</pub-id><?supplied-pmid 28289244?><pub-id pub-id-type="pmid">28289244</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref010">
      <label>10</label>
      <mixed-citation publication-type="journal"><name><surname>Basanta</surname><given-names>D</given-names></name>, <name><surname>Strand</surname><given-names>DW</given-names></name>, <name><surname>Lukner</surname><given-names>RB</given-names></name>, <name><surname>Franco</surname><given-names>OE</given-names></name>, <name><surname>Cliffel</surname><given-names>DE</given-names></name>, <name><surname>Ayala</surname><given-names>GE</given-names></name>, <etal>et al</etal><article-title>The Role of Transforming Growth Factor-<italic>β</italic>–Mediated Tumor-Stroma Interactions in Prostate Cancer Progression: An Integrative Approach</article-title>. <source>Cancer research</source>. <year>2009</year>;<volume>69</volume>(<issue>17</issue>):<fpage>7111</fpage>–<lpage>7120</lpage>. <pub-id pub-id-type="doi">10.1158/0008-5472.CAN-08-3957</pub-id><?supplied-pmid 19706777?><pub-id pub-id-type="pmid">19706777</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref011">
      <label>11</label>
      <mixed-citation publication-type="journal"><name><surname>Kim</surname><given-names>E</given-names></name>, <name><surname>Rebecca</surname><given-names>V</given-names></name>, <name><surname>Fedorenko</surname><given-names>IV</given-names></name>, <name><surname>Messina</surname><given-names>JL</given-names></name>, <name><surname>Mathew</surname><given-names>R</given-names></name>, <name><surname>Maria-Engler</surname><given-names>SS</given-names></name>, <etal>et al</etal><article-title>Senescent fibroblasts in melanoma initiation and progression: an integrated theoretical, experimental, and clinical approach</article-title>. <source>Cancer research</source>. <year>2013</year>;. <pub-id pub-id-type="doi">10.1158/0008-5472.CAN-13-1720</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref012">
      <label>12</label>
      <mixed-citation publication-type="journal"><name><surname>Anderson</surname><given-names>AR</given-names></name>, <name><surname>Weaver</surname><given-names>AM</given-names></name>, <name><surname>Cummings</surname><given-names>PT</given-names></name>, <name><surname>Quaranta</surname><given-names>V</given-names></name>. <article-title>Tumor morphology and phenotypic evolution driven by selective pressure from the microenvironment</article-title>. <source>Cell</source>. <year>2006</year>;<volume>127</volume>(<issue>5</issue>):<fpage>905</fpage>–<lpage>915</lpage>. <pub-id pub-id-type="doi">10.1016/j.cell.2006.09.042</pub-id><?supplied-pmid 17129778?><pub-id pub-id-type="pmid">17129778</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref013">
      <label>13</label>
      <mixed-citation publication-type="journal"><name><surname>Araujo</surname><given-names>A</given-names></name>, <name><surname>Cook</surname><given-names>LM</given-names></name>, <name><surname>Lynch</surname><given-names>CC</given-names></name>, <name><surname>Basanta</surname><given-names>D</given-names></name>. <article-title>An integrated computational model of the bone microenvironment in bone-metastatic prostate cancer</article-title>. <source>Cancer research</source>. <year>2014</year>;<volume>74</volume>(<issue>9</issue>):<fpage>2391</fpage>–<lpage>2401</lpage>. <pub-id pub-id-type="doi">10.1158/0008-5472.CAN-13-2652</pub-id><?supplied-pmid 24788098?><pub-id pub-id-type="pmid">24788098</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref014">
      <label>14</label>
      <mixed-citation publication-type="journal"><name><surname>Scianna</surname><given-names>M</given-names></name>, <name><surname>Bell</surname><given-names>C</given-names></name>, <name><surname>Preziosi</surname><given-names>L</given-names></name>. <article-title>A review of mathematical models for the formation of vascular networks</article-title>. <source>Journal of theoretical biology</source>. <year>2013</year>;<volume>333</volume>:<fpage>174</fpage>–<lpage>209</lpage>. <pub-id pub-id-type="doi">10.1016/j.jtbi.2013.04.037</pub-id><?supplied-pmid 23684907?><pub-id pub-id-type="pmid">23684907</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref015">
      <label>15</label>
      <mixed-citation publication-type="journal"><name><surname>Metzcar</surname><given-names>J</given-names></name>, <name><surname>Wang</surname><given-names>Y</given-names></name>, <name><surname>Heiland</surname><given-names>R</given-names></name>, <name><surname>Macklin</surname><given-names>P</given-names></name>. <article-title>A review of cell-based computational modeling in cancer biology</article-title>. <source>JCO clinical cancer informatics</source>. <year>2019</year>;<volume>2</volume>:<fpage>1</fpage>–<lpage>13</lpage>. <pub-id pub-id-type="doi">10.1200/CCI.18.00069</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref016">
      <label>16</label>
      <mixed-citation publication-type="journal"><name><surname>Chamseddine</surname><given-names>IM</given-names></name>, <name><surname>Rejniak</surname><given-names>KA</given-names></name>. <article-title>Hybrid modeling frameworks of tumor development and treatment</article-title>. <source>Wiley Interdisciplinary Reviews: Systems Biology and Medicine</source>. <year>2019</year>; p. <fpage>e1461</fpage><pub-id pub-id-type="doi">10.1002/wsbm.1461</pub-id><?supplied-pmid 31313504?><pub-id pub-id-type="pmid">31313504</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref017">
      <label>17</label>
      <mixed-citation publication-type="journal"><name><surname>Robertson-Tessi</surname><given-names>M</given-names></name>, <name><surname>Gillies</surname><given-names>RJ</given-names></name>, <name><surname>Gatenby</surname><given-names>RA</given-names></name>, <name><surname>Anderson</surname><given-names>AR</given-names></name>. <article-title>Impact of metabolic heterogeneity on tumor growth, invasion, and treatment outcomes</article-title>. <source>Cancer research</source>. <year>2015</year>;<volume>75</volume>(<issue>8</issue>):<fpage>1567</fpage>–<lpage>1579</lpage>. <pub-id pub-id-type="doi">10.1158/0008-5472.CAN-14-1428</pub-id><?supplied-pmid 25878146?><pub-id pub-id-type="pmid">25878146</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref018">
      <label>18</label>
      <mixed-citation publication-type="journal"><name><surname>Zhang</surname><given-names>J</given-names></name>, <name><surname>Cunningham</surname><given-names>JJ</given-names></name>, <name><surname>Brown</surname><given-names>JS</given-names></name>, <name><surname>Gatenby</surname><given-names>RA</given-names></name>. <article-title>Integrating evolutionary dynamics into treatment of metastatic castrate-resistant prostate cancer</article-title>. <source>Nature communications</source>. <year>2017</year>;<volume>8</volume>(<issue>1</issue>):<fpage>1816</fpage><pub-id pub-id-type="doi">10.1038/s41467-017-01968-5</pub-id><?supplied-pmid 29180633?><pub-id pub-id-type="pmid">29180633</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref019">
      <label>19</label>
      <mixed-citation publication-type="journal"><name><surname>Gallaher</surname><given-names>JA</given-names></name>, <name><surname>Enriquez-Navas</surname><given-names>PM</given-names></name>, <name><surname>Luddy</surname><given-names>KA</given-names></name>, <name><surname>Gatenby</surname><given-names>RA</given-names></name>, <name><surname>Anderson</surname><given-names>AR</given-names></name>. <article-title>Adaptive vs continuous cancer therapy: Exploiting space and trade-offs in drug scheduling</article-title>. <source>bioRxiv</source>. <year>2017</year>;.</mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref020">
      <label>20</label>
      <mixed-citation publication-type="journal"><name><surname>Karolak</surname><given-names>A</given-names></name>, <name><surname>Rejniak</surname><given-names>KA</given-names></name>. <article-title>Micropharmacology: an in silico approach for assessing drug efficacy within a tumor tissue</article-title>. <source>Bulletin of mathematical biology</source>. <year>2018</year>; p. <fpage>1</fpage>–<lpage>19</lpage>.</mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref021">
      <label>21</label>
      <mixed-citation publication-type="journal"><name><surname>Alfonso</surname><given-names>J</given-names></name>, <name><surname>Talkenberger</surname><given-names>K</given-names></name>, <name><surname>Seifert</surname><given-names>M</given-names></name>, <name><surname>Klink</surname><given-names>B</given-names></name>, <name><surname>Hawkins-Daarud</surname><given-names>A</given-names></name>, <name><surname>Swanson</surname><given-names>K</given-names></name>, <etal>et al</etal><article-title>The biology and mathematical modelling of glioma invasion: a review</article-title>. <source>Journal of the Royal Society Interface</source>. <year>2017</year>;<volume>14</volume>(<issue>136</issue>):<fpage>20170490</fpage><pub-id pub-id-type="doi">10.1098/rsif.2017.0490</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref022">
      <label>22</label>
      <mixed-citation publication-type="journal"><name><surname>Ghaffarizadeh</surname><given-names>A</given-names></name>, <name><surname>Heiland</surname><given-names>R</given-names></name>, <name><surname>Friedman</surname><given-names>SH</given-names></name>, <name><surname>Mumenthaler</surname><given-names>SM</given-names></name>, <name><surname>Macklin</surname><given-names>P</given-names></name>. <article-title>PhysiCell: an open source physics-based cell simulator for 3-D multicellular systems</article-title>. <source>PLoS Comput Biol</source>. <year>2018</year>;<volume>14</volume>(<issue>2</issue>):<fpage>e1005991</fpage><pub-id pub-id-type="doi">10.1371/journal.pcbi.1005991</pub-id><?supplied-pmid 29474446?><pub-id pub-id-type="pmid">29474446</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref023">
      <label>23</label>
      <mixed-citation publication-type="journal"><name><surname>Hoehme</surname><given-names>S</given-names></name>, <name><surname>Drasdo</surname><given-names>D</given-names></name>. <article-title>A cell-based simulation software for multi-cellular systems</article-title>. <source>Bioinformatics</source>. <year>2010</year>;<volume>26</volume>(<issue>20</issue>):<fpage>2641</fpage>–<lpage>2642</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btq437</pub-id><?supplied-pmid 20709692?><pub-id pub-id-type="pmid">20709692</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref024">
      <label>24</label>
      <mixed-citation publication-type="journal"><name><surname>Kang</surname><given-names>S</given-names></name>, <name><surname>Kahan</surname><given-names>S</given-names></name>, <name><surname>McDermott</surname><given-names>J</given-names></name>, <name><surname>Flann</surname><given-names>N</given-names></name>, <name><surname>Shmulevich</surname><given-names>I</given-names></name>. <article-title>Biocellion: accelerating computer simulation of multicellular biological system models</article-title>. <source>Bioinformatics</source>. <year>2014</year>;<volume>30</volume>(<issue>21</issue>):<fpage>3101</fpage>–<lpage>3108</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btu498</pub-id><?supplied-pmid 25064572?><pub-id pub-id-type="pmid">25064572</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref025">
      <label>25</label>
      <mixed-citation publication-type="journal"><name><surname>Cytowski</surname><given-names>M</given-names></name>, <name><surname>Szymańska</surname><given-names>Z</given-names></name>, <name><surname>Umiński</surname><given-names>P</given-names></name>, <name><surname>Andrejczuk</surname><given-names>G</given-names></name>, <name><surname>Raszkowski</surname><given-names>K</given-names></name>. <article-title>Implementation of an agent-based parallel tissue modelling framework for the Intel MIC architecture</article-title>. <source>Scientific Programming</source>. <year>2017</year>;<volume>2017</volume><pub-id pub-id-type="doi">10.1155/2017/8721612</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref026">
      <label>26</label>
      <mixed-citation publication-type="journal"><name><surname>Germann</surname><given-names>P</given-names></name>, <name><surname>Marin-Riera</surname><given-names>M</given-names></name>, <name><surname>Sharpe</surname><given-names>J</given-names></name>. <article-title>ya|| a: GPU-powered Spheroid Models for Mesenchyme and Epithelium</article-title>. <source>Cell systems</source>. <year>2019</year>;. <pub-id pub-id-type="doi">10.1016/j.cels.2019.02.007</pub-id><?supplied-pmid 30904379?><pub-id pub-id-type="pmid">30904379</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref027">
      <label>27</label>
      <mixed-citation publication-type="journal"><name><surname>Sütterlin</surname><given-names>T</given-names></name>, <name><surname>Kolb</surname><given-names>C</given-names></name>, <name><surname>Dickhaus</surname><given-names>H</given-names></name>, <name><surname>Jäger</surname><given-names>D</given-names></name>, <name><surname>Grabe</surname><given-names>N</given-names></name>. <article-title>Bridging the scales: semantic integration of quantitative SBML in graphical multi-cellular models and simulations with EPISIM and COPASI</article-title>. <source>Bioinformatics</source>. <year>2012</year>;<volume>29</volume>(<issue>2</issue>):<fpage>223</fpage>–<lpage>229</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/bts659</pub-id><?supplied-pmid 23162085?><pub-id pub-id-type="pmid">23162085</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref028">
      <label>28</label>
      <mixed-citation publication-type="journal"><name><surname>Swat</surname><given-names>MH</given-names></name>, <name><surname>Thomas</surname><given-names>GL</given-names></name>, <name><surname>Belmonte</surname><given-names>JM</given-names></name>, <name><surname>Shirinifard</surname><given-names>A</given-names></name>, <name><surname>Hmeljak</surname><given-names>D</given-names></name>, <name><surname>Glazier</surname><given-names>JA</given-names></name>. <article-title>Multi-scale modeling of tissues using CompuCell3D</article-title>. <source>Methods in cell biology</source>. <year>2012</year>;<volume>110</volume>:<fpage>325</fpage><pub-id pub-id-type="doi">10.1016/B978-0-12-388403-9.00013-8</pub-id><?supplied-pmid 22482955?><pub-id pub-id-type="pmid">22482955</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref029">
      <label>29</label>
      <mixed-citation publication-type="journal"><name><surname>Starruß</surname><given-names>J</given-names></name>, <name><surname>de Back</surname><given-names>W</given-names></name>, <name><surname>Brusch</surname><given-names>L</given-names></name>, <name><surname>Deutsch</surname><given-names>A</given-names></name>. <article-title>Morpheus: a user-friendly modeling environment for multiscale and multicellular systems biology</article-title>. <source>Bioinformatics</source>. <year>2014</year>;<volume>30</volume>(<issue>9</issue>):<fpage>1331</fpage>–<lpage>1332</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btt772</pub-id><?supplied-pmid 24443380?><pub-id pub-id-type="pmid">24443380</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref030">
      <label>30</label>
      <mixed-citation publication-type="journal"><name><surname>Graner</surname><given-names>F</given-names></name>, <name><surname>Glazier</surname><given-names>JA</given-names></name>. <article-title>Simulation of biological cell sorting using a two-dimensional extended Potts model</article-title>. <source>Physical review letters</source>. <year>1992</year>;<volume>69</volume>(<issue>13</issue>):<fpage>2013</fpage><pub-id pub-id-type="doi">10.1103/PhysRevLett.69.2013</pub-id><?supplied-pmid 10046374?><pub-id pub-id-type="pmid">10046374</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref031">
      <label>31</label>
      <mixed-citation publication-type="journal"><name><surname>Mirams</surname><given-names>GR</given-names></name>, <name><surname>Arthurs</surname><given-names>CJ</given-names></name>, <name><surname>Bernabeu</surname><given-names>MO</given-names></name>, <name><surname>Bordas</surname><given-names>R</given-names></name>, <name><surname>Cooper</surname><given-names>J</given-names></name>, <name><surname>Corrias</surname><given-names>A</given-names></name>, <etal>et al</etal><article-title>Chaste: an open source C++ library for computational physiology and biology</article-title>. <source>PLoS computational biology</source>. <year>2013</year>;<volume>9</volume>(<issue>3</issue>):<fpage>e1002970</fpage><pub-id pub-id-type="doi">10.1371/journal.pcbi.1002970</pub-id><?supplied-pmid 23516352?><pub-id pub-id-type="pmid">23516352</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref032">
      <label>32</label>
      <mixed-citation publication-type="other">Tisue S, Wilensky U. Netlogo: A simple environment for modeling complexity. In: International conference on complex systems. vol. 21. Boston, MA; 2004. p. 16–21. Available from: <ext-link ext-link-type="uri" xlink:href="https://ccl.northwestern.edu/papers/netlogo-iccs2004.pdf">https://ccl.northwestern.edu/papers/netlogo-iccs2004.pdf</ext-link>.</mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref033">
      <label>33</label>
      <mixed-citation publication-type="journal"><name><surname>Collier</surname><given-names>N</given-names></name>. <article-title>Repast: An extensible framework for agent simulation</article-title>. <source>The University of Chicagos Social Science Research</source>. <year>2003</year>;<volume>36</volume>:<fpage>2003</fpage>.</mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref034">
      <label>34</label>
      <mixed-citation publication-type="other">Luke S, Cioffi-Revilla C, Panait L, Sullivan K. Mason: A new multi-agent simulation toolkit. In: Proceedings of the 2004 swarmfest workshop. vol. 8. Department of Computer Science and Center for Social Complexity, George Mason University Fairfax, VA; 2004. p. 316–327. Available from: <ext-link ext-link-type="uri" xlink:href="http://cobweb.cs.uga.edu/~maria/pads/papers/mason-SwarmFest04.pdf">http://cobweb.cs.uga.edu/~maria/pads/papers/mason-SwarmFest04.pdf</ext-link>.</mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref035">
      <label>35</label>
      <mixed-citation publication-type="journal"><name><surname>Lampoudi</surname><given-names>S</given-names></name>, <name><surname>Gillespie</surname><given-names>DT</given-names></name>, <name><surname>Petzold</surname><given-names>LR</given-names></name>. <article-title>The multinomial simulation algorithm for discrete stochastic simulation of reaction-diffusion systems</article-title>. <source>The Journal of chemical physics</source>. <year>2009</year>;<volume>130</volume>(<issue>9</issue>):<fpage>094104</fpage><pub-id pub-id-type="doi">10.1063/1.3074302</pub-id><?supplied-pmid 19275393?><pub-id pub-id-type="pmid">19275393</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref036">
      <label>36</label>
      <mixed-citation publication-type="journal"><name><surname>Hucka</surname><given-names>M</given-names></name>, <name><surname>Finney</surname><given-names>A</given-names></name>, <name><surname>Sauro</surname><given-names>HM</given-names></name>, <name><surname>Bolouri</surname><given-names>H</given-names></name>, <name><surname>Doyle</surname><given-names>JC</given-names></name>, <name><surname>Kitano</surname><given-names>H</given-names></name>, <etal>et al</etal><article-title>The systems biology markup language (SBML): a medium for representation and exchange of biochemical network models</article-title>. <source>Bioinformatics</source>. <year>2003</year>;<volume>19</volume>(<issue>4</issue>):<fpage>524</fpage>–<lpage>531</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btg015</pub-id><?supplied-pmid 12611808?><pub-id pub-id-type="pmid">12611808</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref037">
      <label>37</label>
      <mixed-citation publication-type="journal"><name><surname>Anderson</surname><given-names>A</given-names></name>, <name><surname>Sleeman</surname><given-names>B</given-names></name>, <name><surname>Young</surname><given-names>I</given-names></name>, <name><surname>Griffiths</surname><given-names>B</given-names></name>. <article-title>Nematode movement along a chemical gradient in a structurally heterogeneous environment: 2. Theory</article-title>. <source>Fundamental and applied nematology</source>. <year>1997</year>;<volume>20</volume>(<issue>2</issue>):<fpage>165</fpage>–<lpage>172</lpage>.</mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref038">
      <label>38</label>
      <mixed-citation publication-type="other">Bravo R. HAL Manual; 2018. Available from: <ext-link ext-link-type="uri" xlink:href="https://github.com/MathOnco/HAL/blob/master/manual.pdf">https://github.com/MathOnco/HAL/blob/master/manual.pdf</ext-link>.</mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref039">
      <label>39</label>
      <mixed-citation publication-type="journal"><name><surname>Peaceman</surname><given-names>DW</given-names></name>, <name><surname>Rachford</surname><given-names>HH</given-names><suffix>Jr</suffix></name>. <article-title>The numerical solution of parabolic and elliptic differential equations</article-title>. <source>Journal of the Society for industrial and Applied Mathematics</source>. <year>1955</year>;<volume>3</volume>(<issue>1</issue>):<fpage>28</fpage>–<lpage>41</lpage>. <pub-id pub-id-type="doi">10.1137/0103003</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref040">
      <label>40</label>
      <mixed-citation publication-type="journal"><name><surname>Courant</surname><given-names>R</given-names></name>, <name><surname>Isaacson</surname><given-names>E</given-names></name>, <name><surname>Rees</surname><given-names>M</given-names></name>. <article-title>On the solution of nonlinear hyperbolic differential equations by finite differences</article-title>. <source>Communications on Pure and Applied Mathematics</source>. <year>1952</year>;<volume>5</volume>(<issue>3</issue>):<fpage>243</fpage>–<lpage>255</lpage>. <pub-id pub-id-type="doi">10.1002/cpa.3160050303</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref041">
      <label>41</label>
      <mixed-citation publication-type="journal"><name><surname>Swanson</surname><given-names>KR</given-names></name>, <name><surname>Alvord</surname><given-names>EC</given-names><suffix>Jr</suffix></name>, <name><surname>Murray</surname><given-names>J</given-names></name>. <article-title>A quantitative model for differential motility of gliomas in grey and white matter</article-title>. <source>Cell proliferation</source>. <year>2000</year>;<volume>33</volume>(<issue>5</issue>):<fpage>317</fpage>–<lpage>329</lpage>. <pub-id pub-id-type="doi">10.1046/j.1365-2184.2000.00177.x</pub-id><?supplied-pmid 11063134?><pub-id pub-id-type="pmid">11063134</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref042">
      <label>42</label>
      <mixed-citation publication-type="journal"><name><surname>Ambrosi</surname><given-names>D</given-names></name>, <name><surname>Preziosi</surname><given-names>L</given-names></name>. <article-title>On the closure of mass balance models for tumor growth</article-title>. <source>Mathematical Models and Methods in Applied Sciences</source>. <year>2002</year>;<volume>12</volume>(<issue>05</issue>):<fpage>737</fpage>–<lpage>754</lpage>. <pub-id pub-id-type="doi">10.1142/S0218202502001878</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref043">
      <label>43</label>
      <mixed-citation publication-type="journal"><name><surname>Byrne</surname><given-names>H</given-names></name>, <name><surname>Preziosi</surname><given-names>L</given-names></name>. <article-title>Modelling solid tumour growth using the theory of mixtures</article-title>. <source>Mathematical medicine and biology: a journal of the IMA</source>. <year>2003</year>;<volume>20</volume>(<issue>4</issue>):<fpage>341</fpage>–<lpage>366</lpage>. <pub-id pub-id-type="doi">10.1093/imammb/20.4.341</pub-id><?supplied-pmid 14969384?><pub-id pub-id-type="pmid">14969384</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref044">
      <label>44</label>
      <mixed-citation publication-type="other">Meister P. gifAnimation processing library; 2015. Available from: <ext-link ext-link-type="uri" xlink:href="https://github.com/extrapixel/gif-animation">https://github.com/extrapixel/gif-animation</ext-link>.</mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref045">
      <label>45</label>
      <mixed-citation publication-type="book"><name><surname>Poleszczuk</surname><given-names>J</given-names></name>, <name><surname>Macklin</surname><given-names>P</given-names></name>, <name><surname>Enderling</surname><given-names>H</given-names></name>. <chapter-title>Agent-based modeling of cancer stem cell driven solid tumor growth</chapter-title> In: <source>Stem Cell Heterogeneity</source>. <publisher-name>Springer</publisher-name>; <year>2016</year> p. <fpage>335</fpage>–<lpage>346</lpage>.</mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref046">
      <label>46</label>
      <mixed-citation publication-type="book"><name><surname>Oliphant</surname><given-names>TE</given-names></name>. <source>A guide to NumPy</source>. <volume>vol. 1</volume><publisher-name>Trelgol Publishing</publisher-name><publisher-loc>USA</publisher-loc>; <year>2006</year>.</mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref047">
      <label>47</label>
      <mixed-citation publication-type="other">CERN. Colt; 2004. Available from: <ext-link ext-link-type="uri" xlink:href="http://dst.lbl.gov/ACSSoftware/colt/">http://dst.lbl.gov/ACSSoftware/colt/</ext-link>.</mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref048">
      <label>48</label>
      <mixed-citation publication-type="other">Bravo R, Robertson-Tessi M, West J, Anderson AR. Cancer Crusade; 2018. Available from: <ext-link ext-link-type="uri" xlink:href="https://cancercrusadegame.com">https://cancercrusadegame.com</ext-link>.</mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref049">
      <label>49</label>
      <mixed-citation publication-type="journal"><name><surname>Kursawe</surname><given-names>J</given-names></name>, <name><surname>Baker</surname><given-names>RE</given-names></name>, <name><surname>Fletcher</surname><given-names>AG</given-names></name>. <article-title>Impact of implementation choices on quantitative predictions of cell-based computational models</article-title>. <source>Journal of Computational Physics</source>. <year>2017</year>;<volume>345</volume>:<fpage>752</fpage>–<lpage>767</lpage>. <pub-id pub-id-type="doi">10.1016/j.jcp.2017.05.048</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref050">
      <label>50</label>
      <mixed-citation publication-type="journal"><name><surname>Bock</surname><given-names>M</given-names></name>, <name><surname>Tyagi</surname><given-names>AK</given-names></name>, <name><surname>Kreft</surname><given-names>JU</given-names></name>, <name><surname>Alt</surname><given-names>W</given-names></name>. <article-title>Generalized voronoi tessellation as a model of two-dimensional cell tissue dynamics</article-title>. <source>Bulletin of mathematical biology</source>. <year>2010</year>;<volume>72</volume>(<issue>7</issue>):<fpage>1696</fpage>–<lpage>1731</lpage>. <pub-id pub-id-type="doi">10.1007/s11538-009-9498-3</pub-id><?supplied-pmid 20082148?><pub-id pub-id-type="pmid">20082148</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref051">
      <label>51</label>
      <mixed-citation publication-type="book"><name><surname>Anderson</surname><given-names>Alexander</given-names></name><name><surname>R</surname><given-names>K</given-names></name><name><surname>Chaplain</surname><given-names>Mark A J</given-names></name>. <source>Single-Cell-Based Models in Biology and Medicine</source>. illustrated ed. <publisher-name>Springer Science &amp; Business Media</publisher-name>; <year>2007</year>.</mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref052">
      <label>52</label>
      <mixed-citation publication-type="other">Jeffrey West RB. Hybrid Automata Library; 2018. Available from: <ext-link ext-link-type="uri" xlink:href="https://halloworld.org">https://halloworld.org</ext-link>.</mixed-citation>
    </ref>
    <ref id="pcbi.1007635.ref053">
      <label>53</label>
      <mixed-citation publication-type="other">Bravo R. HAL Tutorial 1: Setup; 2018. Available from: <ext-link ext-link-type="uri" xlink:href="https://www.youtube.com/watch?v=yjTmH3qORFQ&amp;t=43s">https://www.youtube.com/watch?v=yjTmH3qORFQ&amp;t=43s</ext-link>.</mixed-citation>
    </ref>
  </ref-list>
</back>

<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6513153</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/bty839</article-id>
    <article-id pub-id-type="publisher-id">bty839</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Applications Notes</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Phylogenetics</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>ParGenes: a tool for massively parallel model selection and phylogenetic tree inference on thousands of genes</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">http://orcid.org/0000-0001-6286-4419</contrib-id>
        <name>
          <surname>Morel</surname>
          <given-names>Benoit</given-names>
        </name>
        <xref ref-type="aff" rid="bty839-aff1">1</xref>
        <xref ref-type="corresp" rid="COR1"/>
        <!--<email>benoit.morel@h-its.org</email>-->
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Kozlov</surname>
          <given-names>Alexey M</given-names>
        </name>
        <xref ref-type="aff" rid="bty839-aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Stamatakis</surname>
          <given-names>Alexandros</given-names>
        </name>
        <xref ref-type="aff" rid="bty839-aff1">1</xref>
        <xref ref-type="aff" rid="bty839-aff2">2</xref>
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Schwartz</surname>
          <given-names>Russell</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <aff id="bty839-aff1"><label>1</label>Heidelberg Institute for Theoretical Studies, Schloss-Wolfsbrunnenweg 35, Heidelberg, Germany</aff>
    <aff id="bty839-aff2"><label>2</label>Department of Informatics, Karlsruhe Institute of Technology, Institute of Theoretical Informatics, Postfach 6980, Karlsruhe, Germany</aff>
    <author-notes>
      <corresp id="COR1">Email: <email>benoit.morel@h-its.org</email></corresp>
    </author-notes>
    <pub-date pub-type="ppub">
      <day>15</day>
      <month>5</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2018-10-15">
      <day>15</day>
      <month>10</month>
      <year>2018</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>15</day>
      <month>10</month>
      <year>2018</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. -->
    <volume>35</volume>
    <issue>10</issue>
    <fpage>1771</fpage>
    <lpage>1773</lpage>
    <history>
      <date date-type="received">
        <day>26</day>
        <month>7</month>
        <year>2018</year>
      </date>
      <date date-type="rev-recd">
        <day>18</day>
        <month>9</month>
        <year>2018</year>
      </date>
      <date date-type="accepted">
        <day>12</day>
        <month>10</month>
        <year>2018</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2018. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2018</copyright-year>
      <license license-type="cc-by-nc" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">http://creativecommons.org/licenses/by-nc/4.0/</ext-link>), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.com</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="bty839.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>Coalescent- and reconciliation-based methods are now widely used to infer species phylogenies from genomic data. They typically use per-gene phylogenies as input, which requires conducting multiple individual tree inferences on a large set of multiple sequence alignments (MSAs). At present, no easy-to-use parallel tool for this task exists. <italic>Ad hoc</italic> scripts for this purpose do not only induce additional implementation overhead, but can also lead to poor resource utilization and long times-to-solution. We present ParGenes, a tool for simultaneously determining the best-fit model and inferring maximum likelihood (ML) phylogenies on thousands of independent MSAs using supercomputers.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>ParGenes executes common phylogenetic pipeline steps such as model-testing, ML inference(s), bootstrapping and computation of branch support values via a <italic>single</italic> parallel program invocation. We evaluated ParGenes by inferring &gt; 20 000 phylogenetic gene trees with bootstrap support values from Ensembl Compara and VectorBase alignments in 28 h on a cluster with 1024 nodes.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p>GNU GPL at <ext-link ext-link-type="uri" xlink:href="https://github.com/BenoitMorel/ParGenes">https://github.com/BenoitMorel/ParGenes</ext-link>.</p>
      </sec>
      <sec id="s4">
        <title>Supplementary information</title>
        <p><xref ref-type="supplementary-material" rid="sup1">Supplementary material</xref> is available at Bioinformatics online.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">Klaus Tschira Foundation</named-content>
          <named-content content-type="funder-identifier">10.13039/501100007316</named-content>
        </funding-source>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">DFG</named-content>
          <named-content content-type="funder-identifier">10.13039/100004807</named-content>
        </funding-source>
        <award-id>STA 860/4-2</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="3"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction </title>
    <p>The availability of genomic data for an increasing number of organisms allows to use thousands of genomic loci (henceforth: genes) to delineate evolutionary relationships between species. Species tree inference methods can be divided into supermatrix and supertree approaches. The former infer the species tree directly from a large concatenated MSA (<italic>supermatrix</italic>), whereas the latter infer individual per-gene trees which are then reconciled into a species phylogeny. Supermatrix methods are widely used due their simplicity and availability of efficient implementations (<xref rid="bty839-B4" ref-type="bibr">Kozlov <italic>et al.</italic>, 2015</xref>; <xref rid="bty839-B8" ref-type="bibr">Nguyen <italic>et al.</italic>, 2015</xref>). However, supertree inference methods gain popularity as they can model events such as incomplete lineage sorting (<xref rid="bty839-B7" ref-type="bibr">Mirarab and Warnow, 2015</xref>), gene duplication and loss (<xref rid="bty839-B1" ref-type="bibr">Arvestad <italic>et al.</italic>, 2003</xref>), as well as horizontal gene transfer (<xref rid="bty839-B6" ref-type="bibr">Linz <italic>et al.</italic>, 2007</xref>).</p>
    <p>As input, supertree methods typically require a set of per-gene trees (potentially also including bootstrap trees) that shall be reconciled (<xref rid="bty839-B2" ref-type="bibr">Boussau <italic>et al.</italic>, 2012</xref>). Inferring this set of per-gene trees using maximum likelihood (ML) methods is computationally intensive and requires the use of cluster computing resources.</p>
    <p>While popular parallel tools for ML tree inference [e.g. RAxML (<xref rid="bty839-B10" ref-type="bibr">Stamatakis, 2014</xref>), IQ-TREE (<xref rid="bty839-B8" ref-type="bibr">Nguyen <italic>et al.</italic>, 2015</xref>)] can efficiently process large supermatrices, no dedicated parallel tool exists for inferring per-MSA trees on a large set of MSAs. In current studies users deploy <italic>ad hoc</italic>, and thus potentially error-prone, scripts for submitting each individual gene tree inference to a cluster as a single job. As cluster systems typically limit the number of sequential jobs a single user can execute in parallel, this can substantially increase the time-to-solution.</p>
    <p>To this end, we have developed and made available a novel tool called ParGenes. It offers a simple command-line interface that allows to select the best-fit model, infer ML trees and compute bootstrap support values on thousands of gene MSAs in a single MPI run. ParGenes relies on ModelTest-NG (<ext-link ext-link-type="uri" xlink:href="https://github.com/ddarriba/modeltest">https://github.com/ddarriba/modeltest</ext-link>) and RAxML-NG (<xref rid="bty839-B5" ref-type="bibr">Kozlov, 2018</xref>) to perform model selection and tree inference, respectively.</p>
  </sec>
  <sec>
    <title>2 Features</title>
    <p>ParGenes encapsulates all per-gene calculations into one single MPI invocation. To improve load balance and decrease time-to-solution, ParGenes schedules per-gene inferences and allocates a variable number of cores to these inferences within its MPI runtime environment. In the following, we describe some of the key features.</p>
    <sec>
      <title>2.1 Simultaneous processing of MSAs</title>
      <p>Unlike standard tools for ML inference, ParGenes analyzes multiple MSAs. Thus, the user needs to provide a directory containing all MSAs in PHYLIP or FASTA format. One can either specify global or MSA-specific options for both, RAxML-NG and ModelTest-NG. We pre-process each MSA, to check that the file is valid, compress it, save it in a binary file, and read its number of taxa and unique patterns.</p>
    </sec>
    <sec>
      <title>2.2 Model selection</title>
      <p>ParGenes employs ModelTest-NG, a re-designed, substantially more efficient version of the widely used Modeltest tool (<xref rid="bty839-B9" ref-type="bibr">Posada and Crandall, 1998</xref>), to select the best-fit model of evolution for a given MSA. If model testing is enabled in ParGenes, it will first execute ModelTest-NG on each MSA, and then use the best-fit model for subsequent ML inferences.</p>
    </sec>
    <sec>
      <title>2.3 ML searches and bootstrapping</title>
      <p>ParGenes schedules the per-MSA inference jobs that are executed using RAxML-NG (<xref rid="bty839-B5" ref-type="bibr">Kozlov, 2018</xref>). ParGenes allows to run multiple RAxML-NG tree searches per MSA from independent starting trees, which is recommended to better explore the tree search space. Then, it identifies the best-scoring ML tree for each gene. To increase job granularity and thereby improve load balance, each independent tree search is separately scheduled. ParGenes can also conduct a user-specified number of bootstrap (BS) inferences. It schedules independent tree inferences of BS replicates (10 BS replicates per job), and subsequently concatenates the resulting trees into one per-MSA BS tree file. Then, it runs RAxML-NG again to compute support values.</p>
    </sec>
    <sec>
      <title>2.4 Checkpointing</title>
      <p>Since ParGenes performs massively parallel and compute-intensive runs, it also offers a checkpointing feature that allows to resume calculations (e.g. if program execution was interrupted due to typical cluster run-time limitations of 24 or 48 h).</p>
      <p>ParGenes keeps track of all jobs that have finished so far, and skips them upon restart from a checkpoint. A job is typically an individual per-gene ML search, a batch of 10 bootstrap replicate searches, or a ModelTest-NG run.</p>
      <p>Furthermore, RAxML-NG and ModelTest-NG also have their own intrinsic checkpointing mechanisms: RAxML-NG writes a checkpoint after each inference step (e.g. model optimization, topological optimization cycle, etc.) of the tree search, and ModelTest-NG after each model it tests. ParGenes uses these checkpointing mechanisms as well, thereby allowing for a very fine-grained checkpointing.</p>
    </sec>
    <sec>
      <title>2.5 Estimating the optimal number of cores</title>
      <p>Given the input MSAs, ParGenes can calculate an <italic>a priori</italic> estimate of the number of overall cores that will yield ‘good’ parallel efficiency. This is important, as it is difficult for users to set this value prior to running the analysis.</p>
    </sec>
  </sec>
  <sec>
    <title>3 Job scheduling</title>
    <p>ParGenes implements a scheduler that simultaneously executes independent jobs with a varying number of cores per job. A job is either a per-MSA RAxML-NG or ModelTest-NG run. We first outline the parallelization scheme and then the scheduling strategy.</p>
    <sec>
      <title>3.1 Parallelization scheme</title>
      <p>For the typical use case, the input data will contain thousands of independent (per-gene) MSAs with hundreds to a few thousand sites each. While standard tools like RAxML parallelize likelihood computations over MSA sites, ParGenes parallelizes the computations over the MSAs. Note that, the parallel efficiency of the RAxML parallelization is limited by MSA length (rule-of-thumb: 1000 MSA sites per core). While most of input MSAs are small, their size exhibits substantial variance with respect to both, the number of taxa, and sites (<xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S1</xref>). Therefore, inferring trees on large per-gene MSAs on a single core has two drawbacks. First, the MSA size might exceed the available main memory per core. Second, this can decrease parallel efficiency as a large job might take longer to complete than all other jobs (<xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S2a</xref>). To this end, ParGenes allocates several cores for the largest jobs (MSAs) by invoking the respective multi-threaded RAxML-NG executable (<xref ref-type="fig" rid="bty839-F1">Fig. 1</xref>). For each MSA, ParGenes first calls RAxML-NG in parsing mode to obtain the recommended number of cores for optimal parallel efficiency via the fine-grained parallelization of the likelihood function in RAxML-NG (<xref rid="bty839-B11" ref-type="bibr">Stamatakis, 2015</xref>). The actual number of cores assigned to a job is then rounded down to the next power of two to simplify scheduling. We also assign twice the number of cores to the 5% MSAs with the largest number of taxa (<xref ref-type="supplementary-material" rid="sup1">Supplementary Material</xref>, Section 2).
</p>
      <fig id="bty839-F1" orientation="portrait" position="float">
        <label>Fig. 1.</label>
        <caption>
          <p>Typical ParGenes core utilization, for a run with 512 cores. Each colored block represents a per-MSA job including the number of cores allocated to the job (x-axis, block width) and the execution time of the job relative to the overall ParGenes execution time (y-axis, block height). The gray blocks depict idle time. The exact experimental setup is described in the <xref ref-type="supplementary-material" rid="sup1">Supplementary Material</xref></p>
        </caption>
        <graphic xlink:href="bty839f1"/>
      </fig>
    </sec>
    <sec>
      <title>3.2 Scheduling strategy</title>
      <p>ParGenes first sorts all jobs by (i) decreasing number of required cores and (ii) decreasing overall number of characters per MSA. As the number of cores per job (see Section 3) is always a power of two, ParGenes can always keep all cores busy, as long as there are jobs left to process. This works because the MSAs requiring the largest number of cores are scheduled first.</p>
    </sec>
  </sec>
  <sec>
    <title>4 Results</title>
    <p>We evaluated ParGenes on two large empirical datasets obtained from Ensembl (<xref rid="bty839-B12" ref-type="bibr">Zerbino <italic>et al.</italic>, 2018</xref>) and VectorBase (<xref rid="bty839-B3" ref-type="bibr">Emrich <italic>et al.</italic>, 2015</xref>). They comprise 8880 and 12 000 gene families, respectively. Executing the entire ParGenes pipeline on 1024 cores (model testing, ML tree search from 20 starting trees, bootstrapping analysis with 100 replicates) took 25 h for the Ensembl dataset and 3 h for the VectorBase dataset. The VectorBase dataset required less time as its MSAs are smaller. In the <xref ref-type="supplementary-material" rid="sup1">Supplementary Material</xref>, we show scalability results for different core counts.</p>
  </sec>
  <sec>
    <title>5 Conclusions and future work</title>
    <p>We have presented an efficient parallel tool for comprehensive phylogenetic inference of gene trees on thousands of MSAs via a singl<italic>e</italic> MPI invocation. Apart from being flexible with respect to the inference options, ParGenes also yields ‘good’ parallel efficiency via appropriate scheduling mechanisms. We expect that ParGenes will contribute to increasing throughput times and productivity in gene-tree/species-tree reconciliation studies. Future directions entail the improvement of fault-tolerance mechanisms (e.g. core failures or single jobs failing for other reasons) and more accurate RAxML-NG runtime prediction approaches (e.g. machine learning).</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="sup1">
      <label>bty839_Supplementary_Data</label>
      <media xlink:href="bty839_supplementary_data.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack id="ACK1">
    <title>Acknowledgements</title>
    <p>This work was financially supported by the Klaus Tschira Foundation and by DFG grant STA 860/4-2. We are grateful to B. Bousseau, C. Rey and E. Tannier for providing the datasets. </p>
    <p><italic>Conflict of Interest</italic>: none declared.</p>
  </ack>
  <ref-list id="REF1">
    <title>References</title>
    <ref id="bty839-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Arvestad</surname><given-names>L.</given-names></name></person-group><etal>et al</etal> (<year>2003</year>) 
<article-title>Bayesian gene/species tree reconciliation and orthology analysis using MCMC</article-title>. <source>Bioinformatics</source>, <volume>19</volume>, <fpage>1</fpage>–<lpage>10</lpage>.</mixed-citation>
    </ref>
    <ref id="bty839-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Boussau</surname><given-names>B.</given-names></name></person-group><etal>et al</etal> (<year>2012</year>) 
<article-title>Genome-scale coestimation of species and gene trees</article-title>. <source>Genome Res</source>., <volume>23</volume>, <fpage>323</fpage>–<lpage>330</lpage>.<pub-id pub-id-type="pmid">23132911</pub-id></mixed-citation>
    </ref>
    <ref id="bty839-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Emrich</surname><given-names>S.J.</given-names></name></person-group><etal>et al</etal> (<year>2015</year>) 
<article-title>VectorBase: an updated bioinformatics resource for invertebrate vectors and other organisms related with human diseases</article-title>. <source>Nucleic Acids Res</source>., <volume>43</volume>, <fpage>707</fpage>–<lpage>713</lpage>.</mixed-citation>
    </ref>
    <ref id="bty839-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Kozlov</surname><given-names>A.M.</given-names></name></person-group><etal>et al</etal> (<year>2015</year>) 
<article-title>Examl version 3: a tool for phylogenomic analyses on supercomputers</article-title>. <source>Bioinformatics</source>, <volume>31</volume>, <fpage>2577</fpage>–<lpage>2579</lpage>.<pub-id pub-id-type="pmid">25819675</pub-id></mixed-citation>
    </ref>
    <ref id="bty839-B5">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Kozlov</surname><given-names>O.</given-names></name></person-group> (<year>2018</year>) Models, optimizations, and tools for large-scale phylogenetic inference, handling sequence uncertainty, and taxonomic validation, <ext-link ext-link-type="uri" xlink:href="https://sco.h-its.org/exelixis/pubs/dissAlexey.pdf">https://sco.h-its.org/exelixis/pubs/dissAlexey.pdf</ext-link>.</mixed-citation>
    </ref>
    <ref id="bty839-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Linz</surname><given-names>S.</given-names></name></person-group><etal>et al</etal> (<year>2007</year>) 
<article-title>A likelihood framework to measure horizontal gene transfer</article-title>. <source>Mol. Biol. Evol</source>., <volume>24</volume>, <fpage>1312</fpage>–<lpage>1319</lpage>.<pub-id pub-id-type="pmid">17374878</pub-id></mixed-citation>
    </ref>
    <ref id="bty839-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Mirarab</surname><given-names>S.</given-names></name>, <name name-style="western"><surname>Warnow</surname><given-names>T.</given-names></name></person-group> (<year>2015</year>) 
<article-title>Astral-ii: coalescent-based species tree estimation with many hundreds of taxa and thousands of genes</article-title>. <source>Bioinformatics</source>, <volume>31</volume>, <fpage>i44</fpage>–<lpage>i52</lpage>.<pub-id pub-id-type="pmid">26072508</pub-id></mixed-citation>
    </ref>
    <ref id="bty839-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Nguyen</surname><given-names>L.-T.</given-names></name></person-group><etal>et al</etal> (<year>2015</year>) 
<article-title>Iq-tree: a fast and effective stochastic algorithm for estimating maximum-likelihood phylogenies</article-title>. <source>Mol. Biol. Evol</source>., <volume>32</volume>, <fpage>268</fpage>–<lpage>274</lpage>.<pub-id pub-id-type="pmid">25371430</pub-id></mixed-citation>
    </ref>
    <ref id="bty839-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Posada</surname><given-names>D.</given-names></name>, <name name-style="western"><surname>Crandall</surname><given-names>K.A.</given-names></name></person-group> (<year>1998</year>) 
<article-title>MODELTEST: testing the model of DNA substitution</article-title>. <source>Bioinformatics</source>, <volume>14</volume>, <fpage>817</fpage>–<lpage>818</lpage>.<pub-id pub-id-type="pmid">9918953</pub-id></mixed-citation>
    </ref>
    <ref id="bty839-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Stamatakis</surname><given-names>A.</given-names></name></person-group> (<year>2014</year>) 
<article-title>Raxml version 8: a tool for phylogenetic analysis and post-analysis of large phylogenies</article-title>. <source>Bioinformatics</source>, <volume>30</volume>, <fpage>1312</fpage>–<lpage>1313</lpage>.<pub-id pub-id-type="pmid">24451623</pub-id></mixed-citation>
    </ref>
    <ref id="bty839-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Stamatakis</surname><given-names>A.</given-names></name></person-group> (<year>2015</year>) 
<article-title>Using RAxML to infer phylogenies</article-title>. <source>Curr. Protoc. Bioinformatics</source>, <volume>51</volume>, <fpage>6.14.1</fpage>–<lpage>6.14.14</lpage>.<pub-id pub-id-type="pmid">26334924</pub-id></mixed-citation>
    </ref>
    <ref id="bty839-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zerbino</surname><given-names>D.R.</given-names></name></person-group><etal>et al</etal> (<year>2018</year>) 
<article-title>Ensembl 2018</article-title>. <source>Nuclic Acids Res</source>., <volume>46</volume>, <fpage>D754</fpage>–<lpage>D761</lpage>.</mixed-citation>
    </ref>
  </ref-list>
</back>

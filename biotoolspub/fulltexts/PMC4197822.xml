<?DTDIdentifier.IdentifierValue article.dtd?>
<?DTDIdentifier.IdentifierType system?>
<?SourceDTD.DTDName article.dtd?>
<?SourceDTD.Version 1.0?>
<?ConverterInfo.XSLTName bmc2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Genome Biol</journal-id>
    <journal-id journal-id-type="iso-abbrev">Genome Biol</journal-id>
    <journal-title-group>
      <journal-title>Genome Biology</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1465-6906</issn>
    <issn pub-type="epub">1465-6914</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">4197822</article-id>
    <article-id pub-id-type="publisher-id">gb-2014-15-6-r84</article-id>
    <article-id pub-id-type="pmid">24970577</article-id>
    <article-id pub-id-type="doi">10.1186/gb-2014-15-6-r84</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Method</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>LUMPY: a probabilistic framework for structural variant discovery</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" id="A1">
        <name>
          <surname>Layer</surname>
          <given-names>Ryan M</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>rl6sf@virginia.edu</email>
      </contrib>
      <contrib contrib-type="author" id="A2">
        <name>
          <surname>Chiang</surname>
          <given-names>Colby</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>cc2qe@virginia.edu</email>
      </contrib>
      <contrib contrib-type="author" corresp="yes" id="A3">
        <name>
          <surname>Quinlan</surname>
          <given-names>Aaron R</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <xref ref-type="aff" rid="I2">2</xref>
        <xref ref-type="aff" rid="I3">3</xref>
        <email>arq5x@virginia.edu</email>
      </contrib>
      <contrib contrib-type="author" corresp="yes" id="A4">
        <name>
          <surname>Hall</surname>
          <given-names>Ira M</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <xref ref-type="aff" rid="I3">3</xref>
        <email>irahall@virginia.edu</email>
      </contrib>
    </contrib-group>
    <aff id="I1"><label>1</label>Department of Biochemistry and Molecular Genetics, Center for Public Health Genomics, University of Virginia, Charlottesville, VA 22908, USA</aff>
    <aff id="I2"><label>2</label>Department of Public Health Sciences, University of Virginia, Charlottesville, VA 22908, USA</aff>
    <aff id="I3"><label>3</label>Center for Public Health Genomics, University of Virginia, Charlottesville, VA 22908, USA</aff>
    <pub-date pub-type="ppub">
      <year>2014</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>26</day>
      <month>6</month>
      <year>2014</year>
    </pub-date>
    <volume>15</volume>
    <issue>6</issue>
    <fpage>R84</fpage>
    <lpage>R84</lpage>
    <history>
      <date date-type="received">
        <day>27</day>
        <month>11</month>
        <year>2013</year>
      </date>
      <date date-type="accepted">
        <day>26</day>
        <month>6</month>
        <year>2014</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright © 2014 Layer et al.; licensee BioMed Central Ltd.</copyright-statement>
      <copyright-year>2014</copyright-year>
      <copyright-holder>Layer et al.; licensee BioMed Central Ltd.</copyright-holder>
      <license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0">http://creativecommons.org/licenses/by/2.0</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly credited. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="http://genomebiology.com/2014/15/6/R84"/>
    <abstract>
      <p>Comprehensive discovery of structural variation (SV) from whole genome sequencing data requires multiple detection signals including read-pair, split-read, read-depth and prior knowledge. Owing to technical challenges, extant SV discovery algorithms either use one signal in isolation, or at best use two sequentially. We present LUMPY, a novel SV discovery framework that naturally integrates multiple SV signals jointly across multiple samples. We show that LUMPY yields improved sensitivity, especially when SV signal is reduced owing to either low coverage data or low intra-sample variant allele frequency. We also report a set of 4,564 validated breakpoints from the NA12878 human genome. <ext-link ext-link-type="uri" xlink:href="https://github.com/arq5x/lumpy-sv">https://github.com/arq5x/lumpy-sv</ext-link>.</p>
    </abstract>
  </article-meta>
</front>
<body>
  <sec>
    <title>Background</title>
    <p>Differences in chromosome structure are a prominent source of human genetic variation. These differences are collectively known as structural variation (SV), a term that encompasses diverse genomic alterations including deletion, duplication, insertion, inversion, translocation or complex rearrangement of relatively large (for example, &gt;100 bp) segments. While SVs are considerably less common than smaller-scale forms of genetic variation such as single nucleotide polymorphisms (SNPs), they have greater functional potential due to their larger size, and they are more likely to alter gene structure or dosage.</p>
    <p>Our current understanding of the prevalence and impact of SV has been driven by recent advances in genome sequencing. However, the discovery and genotyping of SV from DNA sequence data have lagged far behind SNP discovery and genotyping because they are fundamentally more complex. SVs vary considerably in size, architecture and genomic context, and read alignment accuracy is compromised near SVs by the presence of novel junctions (that is, breakpoints) between the ‘sample’ and reference genomes. Moreover, SVs generate multiple alignment signals, including altered sequence coverage within duplications or deletions (read-depth), breakpoint-spanning paired-end reads that align discordantly relative to each other (read-pair), and breakpoint-containing single reads that align in split fashion to discontiguous loci in the reference genome (split-read) [<xref ref-type="bibr" rid="B1">1</xref>,<xref ref-type="bibr" rid="B2">2</xref>]. These diverse alignment signals are difficult to integrate and most algorithms use just one. Other methods use two signals, but to our knowledge these limit initial detection to one signal and use the second to add confidence, refine breakpoint intervals, or genotype additional samples [<xref ref-type="bibr" rid="B3">3</xref>-<xref ref-type="bibr" rid="B7">7</xref>].</p>
    <p>An approach that integrates multiple signals allows for more sensitive SV discovery than methods that examine merely one signal, especially when considering heterogeneous samples and/or low coverage data, because each individual read generally produces only one signal type (for example, read-pair or split-read, but not both). The impact of improved sensitivity is particularly acute in low coverage datasets or in studies of heterogeneous cancer samples where any given variant may only be present in a subset of cells. However, even with high coverage data, integration of multiple signals can increase specificity by allowing for more stringent criteria for reporting a variant call.</p>
  </sec>
  <sec sec-type="results">
    <title>Results</title>
    <p>Here, we present a novel and general probabilistic SV discovery framework that naturally integrates multiple SV detection signals, including those generated from read alignments or prior evidence, and that can readily adapt to any additional source of evidence that may become available with future technological advances.</p>
    <sec>
      <title>Overview of LUMPY</title>
      <p>Our framework is based upon a general probabilistic representation of an SV breakpoint that allows any number of alignment signals to be integrated into a single discovery process (Materials and methods). We define a breakpoint as a pair of bases that are adjacent in an experimentally sequenced ‘sample’ genome but not in the reference genome. To account for the varying level of genomic resolution inherent to different types of alignment evidence, we represent a breakpoint with a pair of probability distributions spanning the predicted breakpoint regions (Figure <xref ref-type="fig" rid="F1">1</xref>; Materials and methods). The probability distributions reflect the relative uncertainty that a given position in the reference genome represents one end of the breakpoint.</p>
      <fig id="F1" position="float">
        <label>Figure 1</label>
        <caption>
          <p><bold>The LUMPY framework for integrating multiple structural variation signals. (A)</bold> A scenario in which LUMPY integrates three different sequence alignment signals (read-pair, split-read and read-depth) from a genome single sample. Additionally, sites of known variants are provided to LUMPY as prior knowledge in order to improve sensitivity. <bold>(B)</bold> A single signal type (in this case, read-pair) that is integrated from three different genome samples. We present these as example scenarios and emphasize that multi-signal and multi-sample workflows are not mutually exclusive. CNV, copy number variation.</p>
        </caption>
        <graphic xlink:href="gb-2014-15-6-r84-1"/>
      </fig>
      <p>Our framework provides distinct modules that map signals from each alignment evidence type to the common probability interval pair. For example, paired-end sequence alignments are projected to a pair of intervals upstream or downstream (depending on orientation) of the mapped reads (Figure <xref ref-type="fig" rid="F1">1</xref>A). The size of the intervals and the probability at each position is based on the empirical size distribution of the sample’s DNA fragment library. The distinct advantage of this approach is that any type of evidence can be considered, as long there exists a direct mapping from the SV signal to a breakpoint probability distribution. Here, we provide three modules for converting SV signals to probability distributions: read-pair, split-read, and generic. However, we emphasize that our framework is readily extensible to new signals that may potentially result from new DNA sequencing technologies or alternative SV detection approaches. The read-pair module maps the output of a paired-end sequence alignment algorithm such as NOVOALIGN (C Hercus, unpublished) [<xref ref-type="bibr" rid="B8">8</xref>] or BWA [<xref ref-type="bibr" rid="B9">9</xref>], the split-read module maps the output of a split-read sequence alignment algorithm (for example, YAHA [<xref ref-type="bibr" rid="B10">10</xref>], BWA-SW [<xref ref-type="bibr" rid="B11">11</xref>], or BWA-MEM [<xref ref-type="bibr" rid="B5">5</xref>]), and the generic module allows users to include signals that do not have a specific module implemented such as prior knowledge of known SV (for example, 1000 Genomes [<xref ref-type="bibr" rid="B12">12</xref>]), and output from copy number variation (CNV) discovery tools (for example, CNVnator [<xref ref-type="bibr" rid="B13">13</xref>]).</p>
      <p>Once the evidence from the different alignment signals is mapped to breakpoint intervals, overlapping intervals are clustered and the probabilities are integrated (see Materials and methods for details). Any clustered breakpoint region that contains sufficient evidence (based on user-defined arguments) is returned as a predicted SV. The resolution of the predicted breakpoint regions can be improved by trimming the positions with probabilities in the lower percentile of the distribution (for example, the lowest 0.1%).</p>
      <p>It is well established that variant calling is improved by integrating data from multiple samples [<xref ref-type="bibr" rid="B5">5</xref>,<xref ref-type="bibr" rid="B6">6</xref>,<xref ref-type="bibr" rid="B14">14</xref>,<xref ref-type="bibr" rid="B15">15</xref>]. The LUMPY framework naturally handles multiple samples by tracking the sample origin of each probability distribution during clustering (Figure <xref ref-type="fig" rid="F1">1</xref>B; Materials and methods). As an example of a typical analysis, LUMPY can identify SVs in a whole-genome, 50X coverage paired-end Illumina dataset from the NA12878 CEPH individual in 12.2 hours using 8 Gb of memory using a single processor (Materials and methods). Given that these performance characteristics are comparable to existing approaches for SNP and indel detection, and that there is an approximately linear relationship between data volume, time and memory usage, we anticipate that simultaneous analysis of tens and eventually hundreds of human genomes will be possible with LUMPY using commodity hardware.</p>
      <p>We implemented LUMPY in an open source C++ software package (available at [<xref ref-type="bibr" rid="B16">16</xref>]) that is capable of detecting SV from multiple alignment signals in BAM [<xref ref-type="bibr" rid="B17">17</xref>] files from one or more samples.</p>
    </sec>
    <sec>
      <title>Performance comparisons</title>
      <p>We compared LUMPY’s performance to three other popular and actively maintained SV discovery packages: GASVPro [<xref ref-type="bibr" rid="B4">4</xref>], DELLY [<xref ref-type="bibr" rid="B3">3</xref>] and Pindel [<xref ref-type="bibr" rid="B18">18</xref>]. These algorithms were selected due to their widespread use and inclusion in large-scale projects such as The Cancer Genome Atlas (GASVPro) and 1000 Genomes (DELLY and Pindel). Moreover, Pindel was one of the first published SV discovery tools, and GASVPro and DELLY both consider a secondary SV signal along with paired-end alignments (read-depth and split-read, respectively). Both GASVPro and DELLY have also demonstrated substantial improvement over other popular SV tools such as Breakdancer [<xref ref-type="bibr" rid="B19">19</xref>] and HYDRA [<xref ref-type="bibr" rid="B20">20</xref>].</p>
      <p>Detection performance was measured using both simulated data and previously published Illumina sequencing data from the widely studied NA12878 CEPH individual. The first simulation measured each tool’s basic detection capabilities in a prototypical scenario by simulating 2,500 homozygous variants from various SV classes at random genomic locations. The second simulation assessed the power of each tool to detect 5,516 known deletion variants present at varying allele frequencies within a mixed sample, as often occurs in heterogeneous tumors. Lastly, the analysis of SVs in the NA12878 genome assessed the performance of each tool on real data containing sequencing errors and other detection confounders that are difficult to simulate. In addition, the analysis of NA12878 (and her parents) measured the effect of considering multiple samples, prior SV knowledge, and third-party CNV predictions on LUMPY’s performance. In each case, we measured performance in terms of sensitivity and false discovery rate (FDR) by comparing the predicted SV breakpoints to either known breakpoints or split-read alignments from long-reads (Pacific Biosciences (PacBio) and Illumina Moleculo) that span the breakpoint. Predictions that either overlapped known variants or had sufficient long-read support were considered true positives, and all other predictions were considered false positives (Materials and methods).The simulated results were base on alignments generated by NOVOALIGN, and the NA12878 results were based on BWA alignments. In both cases, YAHA was used to generate split-read alignments. LUMPY was also tested using alternative read alignment pipelines using either BWA-backtrack or BWA-MEM for paired-end alignment, and BWA-MEM for split-read alignment (with roughly similar results; Figure <xref ref-type="fig" rid="F2">2</xref>D, E).</p>
      <fig id="F2" position="float">
        <label>Figure 2</label>
        <caption>
          <p><bold>Performance comparison using homozygous variants of various structural variation types.</bold> We simulated a genome with SVs by embedding 2,500 deletions, tandem duplications, inversions or translocations in random locations in the human reference genome. We then simulated sequence data from the altered genome with varying levels of sequence coverage. The performance measurements for LUMPY and DELLY were based on paired-end (pe) and split-read (sr) alignments, GASVPro considered pe and read-depth (rd), and Pindel considered sr alignments. <bold>(A)</bold> Sensitivity for each tool. LUMPY was the most sensitive in most cases, and had a marked improvement at lower coverage. DELLY detected three more translocations than LUMPY at 20X, at the expense of 93 more false positives. <bold>(B)</bold> The corresponding FDR for each tool. LUMPY’s FDR was low in all but the highest coverage cases. GASVPro and Pindel did not support tandem duplications, but false calls were made in some cases, which resulted in a 100% FDR. <bold>(C)</bold> The absolute number of false positive calls. LUMPY had a high number of false positives in some cases, but these are counterbalanced by a higher number of true positives <bold>(A)</bold>. <bold>(D,E)</bold> To determine the impact that sequence alignment strategies had on SV detection accuracy, LUMPY’s sensitivity <bold>(D)</bold> and FDR <bold>(E)</bold> are shown when predicting deletions at 5X coverage via different alignment strategies from the simulations in (A-C). BWA-MEM produces both pe and sr alignment signals in a single alignment step, and serves as a basis of comparison to the NOVOALIGN (pe) and YAHA (sr) strategy. BWA-MEM provides better sensitivity than NOVOALIGN when using the pe signal alone, yet YAHA provides better sensitivity than BWA-MEM when using the sr signal alone. Sensitivity and FDR are roughly equivalent with either the BWA-MEM or NOVOALIGN/YAHA strategies when LUMPY integrates both alignment signals.</p>
        </caption>
        <graphic xlink:href="gb-2014-15-6-r84-2"/>
      </fig>
    </sec>
    <sec>
      <title>Homozygous variants of different structural variation types</title>
      <p>To assess the impact of coverage, SV type and SV size on algorithm performance, we first simulated a set of sample genomes that included 2,500 deletions, tandem duplications, inversions and translocations, randomly placed throughout the human genome (Additional file <xref ref-type="supplementary-material" rid="S1">1</xref>). Variants were created with SVsim, a tool that creates defined alterations to the reference genome (G Faust and I Hall, unpublished) [<xref ref-type="bibr" rid="B21">21</xref>]. For each SV type, the variant size ranged from 100 bp to 10 kb. We then used the WGSIM read simulator (H Li, unpublished) [<xref ref-type="bibr" rid="B22">22</xref>] to ‘sequence’ each simulated genome at 2X, 5X, 10X, 20X, and 50X haploid coverage.LUMPY was consistently more sensitive than the other algorithms across nearly all coverage levels and SV types (Figure <xref ref-type="fig" rid="F2">2</xref>A). DELLY had negligibly higher sensitivity (less than one percentage point) for translocations at higher coverage. LUMPY and DELLY were the only algorithms that detected all variant types; GASVPro and Pindel do not support detection of tandem duplications. (Note that tandem duplication was added to Pindel since we performed the analysis.) LUMPY’s superior sensitivity was most dramatic in lower coverage tests (&lt;10X). For example, LUMPY detected 32.4% and 87.2% of all deletions at 2X and 5X coverage, respectively, whereas GASVPro detected 7.4% and 49.8%, DELLY detected 10.3% and 63.8%, and Pindel detected 7.4% and 50%. At best, LUMPY was 35.5 times more sensitive than Pindel for detecting translocations at 5X coverage (69.1% versus 2%). At worst, LUMPY was 0.009 times less sensitive than DELLY for detecting translocations at 2X coverage (69.1% versus 70.0%). At higher coverage (10 to 50X), LUMPY’s sensitivity advantage persisted; it ranged from 88.8% to 99.6% across all SV types, whereas GASVPro ranged from 14.3% to 94.3%; DELLY ranged from 81.2% to 98.0%; and Pindel ranged from 5.2% to 96.5% (excluding the SV types that GASVPro and Pindel are incapable of detecting).LUMPY’s FDR remained low (less than 4%) in all but the highest coverage cases (Figure <xref ref-type="fig" rid="F2">2</xref>B), and there was only one instance where LUMPY’s FDR was more than two percentage points higher than the best performing tool (GASVPro’s FDR for inversions at 50X was 1.6% while LUMPY’s was 4.9%). In general, the FDR for LUMPY, GASVPro, DELLY, and Pindel increased as coverage increased, ranging from 0% to 7.2% for LUMPY, 0% to 7.1% for GASVPro, 1% to 10% for DELLY, and 0% to 53.2% for Pindel. These patterns suggest that coverage-based parameter tuning could be used to minimize FDR for all the tools (as in Figure <xref ref-type="fig" rid="F3">3</xref>). We also note that FDR calculations depend on the number of true positives, which vary widely across SV varieties (Figure <xref ref-type="fig" rid="F2">2</xref>C). In certain cases (for example, translocations), LUMPY had a far higher absolute number of false positives, but these were counterbalanced by a much higher number of true positives as well. Alternatively, in cases where a specific SV type is not supported and no true positive calls were made (that is, GASVPro and Pindel for tandem duplications), the FDR reached 100%.</p>
      <fig id="F3" position="float">
        <label>Figure 3</label>
        <caption>
          <p><bold>Receiver operating characteristic</bold> (<bold>ROC) curves comparing deletion prediction performance in the NA12878 individual.</bold> The relationship between true positive and false positive calls for deletions in the NA12878 genome is given for LUMPY, GASVPro, DELLY, and Pindel. Each point on a given tool’s ROC curve represents a minimum evidence support threshold ranging from 4 to 11 for 5X coverage and 4 to 20 for 50X coverage. Correctness was determined by two different methods: intersection with one of the 3,376 non-overlapping validated deletions from Mills <italic>et al</italic>. [<xref ref-type="bibr" rid="B12">12</xref>], or validation by PacBio/Moleculo data. <bold>(A,B)</bold> As in Figure <xref ref-type="fig" rid="F5">5</xref>, prediction performance was measured with both 5X mean genome coverage <bold>(A)</bold> and 50X coverage <bold>(B)</bold>. The curves are colored following the same convention described in Figure <xref ref-type="fig" rid="F5">5</xref>. LUMPY outperforms all other tools in all but one case. Pindel slightly outperforms LUMPY at higher-evidence thresholds in the 5X coverage case considering the Mills <italic>et al</italic>. truth set; we note that this is expected given Pindel was used by the 1000 Genomes Project as one of the tools to define this truth set. At the lower coverage, LUMPY’s performance is boosted by the inclusion of either prior evidence or NA12878’s parental genomes, but the read-depth signal is too weak to offer any improvement. The distinction between tools at 50X coverage is low, but it is expected given the coverage and quality of the data. At higher coverage, LUMPY is able to provide a high-confidence call set when considering read-depth, but priors and parental genomes have little added benefit. pe, paired-end; rd, read-depth; sr, split-read.</p>
        </caption>
        <graphic xlink:href="gb-2014-15-6-r84-3"/>
      </fig>
    </sec>
    <sec>
      <title>Heterogeneous tumor simulation</title>
      <p>Variant detection is especially challenging in tumor studies because biopsied samples generally include a mixture of abnormal and normal tissue, and because many tumor samples are composed of multiple clonal lineages defined by distinct somatic mutations. To assess the performance of our algorithm in this more realistic scenario where increased sensitivity is crucial, we simulated heterogeneous samples by pooling reads from an ‘abnormal’ genome and a ‘normal’ genome at varying ratios (Additional file <xref ref-type="supplementary-material" rid="S2">2</xref>). The source of the simulated abnormal genome was the human reference genome (build 37) modified (using SVsim) with 5,516 non-overlapping deletions identified by the 1000 Genomes Project [<xref ref-type="bibr" rid="B12">12</xref>], and an unmodified human reference genome was used to simulate the normal genome. As above, each genome was ‘sequenced’ using WGSIM, and the reads from the two genomes were combined in varying proportions to create a single heterogeneous sample. The ratio of the reads from the abnormal genome (SV allele frequency) varied between 5% and 50%, and the total coverage ranged from 10X and 80X. For example, to simulate a sample with a 5% SV allele frequency at 10X coverage, the abnormal genome was sequenced at 0.5X coverage and the normal genome at 9.5X coverage: when combined, the two sets of reads represent a single heterogeneous sample sequenced at 10X coverage.LUMPY was more sensitive than GASVPro, DELLY, and Pindel in nearly all cases, especially when the coverage of the abnormal genome was low owing to either lower coverage, low SV allele frequency, or both (Figure <xref ref-type="fig" rid="F4">4</xref>A). For example, at 10X coverage and 20% SV allele frequency LUMPY detects 30.7% of the SVs, whereas GASVPro, DELLY, and Pindel detect only 9.6%, 10.9%, and 6.2% of the SVs, respectively. This represents a 2.8-fold increase in sensitivity over the next best method. In general, to achieve the same level of sensitivity, GASVPro, DELLY and Pindel required roughly twice as much evidence as LUMPY (by either increased coverage or SV allele frequency). For example, at 20X coverage LUMPY detected 6.2% of variants present at 5% SV allele frequency, whereas GASVPro, DELLY, and Pindel required 10% SV allele frequency to achieve similar sensitivity (10.3%, 9.1%, and 5.5%, respectively). We note that this trend is also apparent across SV varieties in the previous homozygous test (Figure <xref ref-type="fig" rid="F2">2</xref>A). LUMPY had slightly lower sensitivity at higher coverage levels and SV allele frequencies, but was never more than four percentage points lower than the best performing tool. For example, at 80X coverage and 50% SV allele frequency LUMPY’s sensitivity was 95.9% and the best performing tool was GASVPro at 99.69% (a 3.79% difference).In all but the highest coverage and SV allele frequency case, the FDR for LUMPY was less than 4% (Figure <xref ref-type="fig" rid="F4">4</xref>B), and the FDR for GASVPro was less than 1% in all cases. For DELLY and Pindel, the FDR was particularly high when SV allele frequency was low. For example, at 10X coverage the FDR for DELLY was 3.4 times higher at 5% SV allele frequency than at 50% frequency, and the Pindel FDR was 111.9 times higher. At 20X coverage these differences were 10.9 and 21.5 times higher at 5% frequency than at 50% frequency for DELLY and Pindel, respectively. This is in contrast to LUMPY, where modest coverage-associated increases to FDR can likely be managed via parameter tuning, without significantly decreasing sensitivity.</p>
      <fig id="F4" position="float">
        <label>Figure 4</label>
        <caption>
          <p><bold>Performance comparison for structural variations in a simulated heterogeneous tumor cell population.</bold> To measure SV detection performance in the case of a heterogeneous tumor sample, we created a mock tumor genome by embedding 5,516 non-overlapping deletions identified by the 1000 Genomes Project into the human reference genome (build 37). Sequence reads were simulated separately from both the ‘tumor’ genome and the unaltered reference genome. We then mixed reads from both genomes in varying proportions to obtain simulated datasets representing a tumor cell population with different SV allele frequencies. Sequencing coverage levels are shown above each plot, and SV allele frequencies are shown beneath each plot. <bold>(A)</bold> Sensitivity for detecting SVs at varying allele frequencies and coverage levels. In all cases, LUMPY was more sensitive than GASVPro, DELLY, and Pindel, and showed a marked improvement when the coverage of the ‘tumor’ genome was low owing to either low sequence coverage or low SV allele frequency. In general, to achieve the same level of sensitivity as LUMPY, the other tools required twice the evidence from the ‘tumor’ genome. pe, paired-end; rd, read-depth; sr, split-read. <bold>(B)</bold> The FDRs for each tool at varying allele frequencies and coverage levels. The FDR for LUMPY was better than all other tools in all cases, with a notable improvement at lower SV allele frequencies. <bold>(C)</bold> The change in sensitivity when considering two SV detection signals versus a single signal alone is shown for the three tools at 40X coverage and at different SV allele frequencies. At low SV allele frequencies (for example, 5%), LUMPY’s use of two signals (that is, pe + sr) has a super-additive effect on sensitivity relative to either signal alone (that is, pe or sr), whereas the sensitivity of GASVPro and DELLY was either unchanged or modestly improved with one signal versus two.</p>
        </caption>
        <graphic xlink:href="gb-2014-15-6-r84-4"/>
      </fig>
    </sec>
    <sec>
      <title>SV detection in the NA12878 genome</title>
      <p>Although it is difficult to precisely measure the sensitivity and accuracy of SV predictions made from a real data set, it is also important to evaluate each tool’s performance when confronted with real data containing artifacts that are not easily captured by simulations (for example, PCR artifacts, chimeric molecules, reads from poorly assembled genomic regions, and so on). In this experiment we compared SV detection performance in the NA12878 individual by analyzing the Illumina Platinum Genomes dataset, which represents approximately 50X coverage of the NA12878 genome (European Nucleotide Archives; ERA172924). We additionally subsampled this dataset to approximately 5X coverage to assess SV detection in low coverage scenarios.</p>
      <p>To estimate sensitivity and FDR, we compared predictions made by each tool to two truth sets: 1) 3,376 validated, non-overlapping deletions from the 1000 Genomes Project [<xref ref-type="bibr" rid="B12">12</xref>] (Additional file <xref ref-type="supplementary-material" rid="S3">3</xref>); and 2) 4,095 deletions that were detected by at least one tool in the 50X dataset, or that were reported by Mills <italic>et al</italic>. [<xref ref-type="bibr" rid="B12">12</xref>] (which used numerous SV detection tools), and that were validated by split-read mapping analysis of independent long-read sequencing data from PacBio or Illumina Moleculo platforms (Additional file <xref ref-type="supplementary-material" rid="S4">4</xref>). We expect that most <italic>bona fide</italic> SV calls will be validated by PacBio and/or Moleculo data given the read lengths (mean 3.7 kb and 1.8 kb, respectively) and coverage depth (mean 28.8X and 29.2X) of these datasets. The rationale for two truth sets is that although the 1000 Genomes callset is, to our knowledge, the most comprehensive set of deletions for NA12878, it still represents only a subset of the actual deletions in that individual’s genome. Analyses performed here have the benefit of higher quality sequencing data, longer reads and improved SV detection tools, and thus are likely to discover novel variants that were missed by Mills <italic>et al</italic>. [<xref ref-type="bibr" rid="B12">12</xref>]. Furthermore, since Pindel was one of the tools used to generate the 1000 Genomes callset [<xref ref-type="bibr" rid="B12">12</xref>], this truth set is biased against predictions made by LUMPY, GASVPro and DELLY. Monte Carlo shuffling of each SV callset resulted in validation efficiencies of less than 3%, indicating a low rate of spurious validation for false positive calls (Table <xref ref-type="table" rid="T1">1</xref>; Materials and methods). Together, these two complementary approaches establish a catalog of high-confidence structural variants in the NA12878 genome.</p>
      <table-wrap position="float" id="T1">
        <label>Table 1</label>
        <caption>
          <p>Long-read validation rates for each tool relative to randomly permuted data</p>
        </caption>
        <table frame="hsides" rules="groups" border="1">
          <colgroup>
            <col align="left"/>
            <col align="center"/>
            <col align="center"/>
            <col align="center"/>
          </colgroup>
          <thead valign="top">
            <tr>
              <th align="left">
                <bold>Method</bold>
              </th>
              <th align="center">
                <bold>Total calls</bold>
              </th>
              <th align="center">
                <bold>Observed validations (fraction)</bold>
              </th>
              <th align="center">
                <bold>Expected validations (fraction)</bold>
              </th>
            </tr>
          </thead>
          <tbody valign="top">
            <tr>
              <td colspan="4" align="left" valign="bottom">
                <bold>50X coverage</bold>
                <hr/>
              </td>
            </tr>
            <tr>
              <td align="left" valign="bottom">  LUMPY (pe + sr)<hr/></td>
              <td align="center" valign="bottom">4,347<hr/></td>
              <td align="center" valign="bottom">2,653 (0.61)<hr/></td>
              <td align="center" valign="bottom">37.9 ± 1.2 (0.009)<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">  LUMPY (pe + sr + prior)<hr/></td>
              <td align="center" valign="bottom">4,809<hr/></td>
              <td align="center" valign="bottom">2,706 (0.563)<hr/></td>
              <td align="center" valign="bottom">41.1 ± 1.3 (0.009)<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">  LUMPY trio (pe + sr)<hr/></td>
              <td align="center" valign="bottom">5,108<hr/></td>
              <td align="center" valign="bottom">2,660 (0.521)<hr/></td>
              <td align="center" valign="bottom">31.5 ± 1.1 (0.006)<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">  LUMPY (pe + sr&amp;rd)<hr/></td>
              <td align="center" valign="bottom">1,355<hr/></td>
              <td align="center" valign="bottom">1,114 (0.822)<hr/></td>
              <td align="center" valign="bottom">5.4 ± 0.5 (0.001)<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">  GASVPro<hr/></td>
              <td align="center" valign="bottom">3,929<hr/></td>
              <td align="center" valign="bottom">2,249 (0.572)<hr/></td>
              <td align="center" valign="bottom">61.1 ± 1.5 (0.016)<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">  DELLY<hr/></td>
              <td align="center" valign="bottom">12,272<hr/></td>
              <td align="center" valign="bottom">3,127 (0.255)<hr/></td>
              <td align="center" valign="bottom">219.2 ± 2.9 (0.018)<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">  Pindel<hr/></td>
              <td align="center" valign="bottom">7,219<hr/></td>
              <td align="center" valign="bottom">2,208 (0.306)<hr/></td>
              <td align="center" valign="bottom">0.7 ± 0.2 (~0)<hr/></td>
            </tr>
            <tr>
              <td colspan="4" align="left" valign="bottom">
                <bold>5X coverage</bold>
                <hr/>
              </td>
            </tr>
            <tr>
              <td align="left" valign="bottom">  LUMPY (pe + sr)<hr/></td>
              <td align="center" valign="bottom">643<hr/></td>
              <td align="center" valign="bottom">619 (0.963)<hr/></td>
              <td align="center" valign="bottom">4.9 ± 0.4 (0.008)<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">  LUMPY (pe + sr + prior)<hr/></td>
              <td align="center" valign="bottom">840<hr/></td>
              <td align="center" valign="bottom">785 (0.935)<hr/></td>
              <td align="center" valign="bottom">4.3 ± 0.4 (0.005)<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">  LUMPY trio (pe + sr)<hr/></td>
              <td align="center" valign="bottom">1,006<hr/></td>
              <td align="center" valign="bottom">958 (0.952)<hr/></td>
              <td align="center" valign="bottom">4.1 ± 0.4 (0.004)<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">  LUMPY (pe + sr&amp;rd)<hr/></td>
              <td align="center" valign="bottom">73<hr/></td>
              <td align="center" valign="bottom">66 (0.904)<hr/></td>
              <td align="center" valign="bottom">0.01 ± 0.02 (~0)<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">  GASVPro<hr/></td>
              <td align="center" valign="bottom">356<hr/></td>
              <td align="center" valign="bottom">338 (0.949)<hr/></td>
              <td align="center" valign="bottom">10.2 ± 0.6 (0.029)<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">  DELLY<hr/></td>
              <td align="center" valign="bottom">798<hr/></td>
              <td align="center" valign="bottom">698 (0.875)<hr/></td>
              <td align="center" valign="bottom">4.5 ± 0.4 (0.006)<hr/></td>
            </tr>
            <tr>
              <td align="left">  Pindel</td>
              <td align="center">640</td>
              <td align="center">521 (0.814)</td>
              <td align="center">0.04 ± 0.04 (~0)</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <p>Monte Carlo simulations were performed to assess the rate at which false positive SV calls are validated purely by chance using split-read mapping analysis of PacBio and Moleculo data. For each NA12878 deletion callset shown in Figures <xref ref-type="fig" rid="F5">5</xref> and <xref ref-type="fig" rid="F6">6</xref>, deletion coordinates were shuffled 100 times (retaining the breakpoint interval sizes and total span of each deletion call), and validation experiments were conducted precisely as for real data. For each callset, we show the total number of deletion calls, the number of validated calls with the fraction validation in parentheses, and the number of validations expected by chance and the 95% confidence interval (with the expected fraction in parentheses) based on Monte Carlo simulations. pe, paired-end; rd, read-depth; sr, split-read.</p>
        </table-wrap-foot>
      </table-wrap>
      <p>A unique strength of LUMPY relative to other tools is the ability to consider different types of evidence from multiple samples. To demonstrate this capability, we included results for four different LUMPY configurations: 1) the standard configuration of read-pair and split-read signals from NA12878; 2) read-pair and split-read signals from NA12878, as well as prior knowledge (using LUMPY’s generic evidence module) of deletions discovered by the 1000 Genomes Project using low coverage whole genome sequencing (phase 1, release version 3); 3) read-pair and split-read signals from both NA12878 and her parents (NA12891 and NA12892); 4) read-pair and split-read signals from NA12878, plus CNV predictions based on read-depth analysis using CNVnator [<xref ref-type="bibr" rid="B13">13</xref>] (also using LUMPY’s generic evidence module). For clarity, this last dataset was filtered to only include LUMPY calls with both read-pair/split-read and CNV evidence. The last three calling strategies are unique to LUMPY and are intended to demonstrate both the ability and the benefit of including data from different samples, prior results, and other SV detection methods.</p>
      <p>At 5X coverage (Figure <xref ref-type="fig" rid="F5">5</xref>A), LUMPY was more sensitive than both GASVPro and Pindel (16.4% versus 8.6% and 15% for the first (that is, 1000 Genomes) truth set and 16.3% versus 8.6% and 13.7% for the second (that is, the expanded ‘long-read’) truth set and had a better FDR (10.7% versus 15.7% and 14.1% for the first truth set and 8.1% versus 10.1% and 19.2% for the second truth set). While DELLY was more sensitive than LUMPY (18.1% for the first truth set and 18.3% for the second), it was at the expense of at least 60% higher FDR (20.4% and 13.4%). When LUMPY is provided with priors from the 1000 Genomes low coverage deletion calls, sensitivity increased to 21.3% and 20.8% with almost no change to FDR. Sensitivity is further improved to 25.6% and 24.7% when LUMPY performs simultaneous variant calling on NA12878 and her parents, with a similarly small effect on FDR, which clearly demonstrates the benefit of pooled variant calling on genetically related samples. Inclusion of read depth-based CNV calls as an additional input to LUMPY, followed by filtering to require CNV evidence, resulted in the lowest FDR among all tools (6.8% and 4.1%) but also greatly reduced sensitivity (1.7% in both cases); however, we note that CNVnator makes very few calls using low coverage data (n = 507), and thus this approach is better suited to high-coverage data (see below). As expected, the observed FDR for LUMPY, GASVPro, and DELLY was reduced (decreasing by 2.6, 5.6, and 7 percentage points, respectively) when lower coverage SV predictions were compared to the expanded ‘long-read’ truth set. In contrast, Pindel’s FDR increased by 5.2 percentage points; however, we note that this effect is expected considered that Pindel was used in part to create the 1000 Genomes Project truth set [<xref ref-type="bibr" rid="B12">12</xref>]. These results demonstrate that the expanded ‘long-read‘ truth set is a more comprehensive and unbiased reference; it will, therefore, be the basis for the remaining performance comparisons.At 50X coverage (Figure <xref ref-type="fig" rid="F5">5</xref>B) and considering solely the second (‘long-read’) truth set, the effect on performance was dramatic for all the tools except Pindel (as expected given the aforementioned bias). DELLY had the highest sensitivity at 83.8%, but this came at the expense of an extremely high FDR (72.9%). GASVPRO and Pindel exhibit intermediate levels of sensitivity (58.3% and 61%, respectively) and FDR (41.2% and 66.2%). LUMPY had the second highest sensitivity (69.1%) and the lowest FDR (37.5%) of any tool. When read depth-based CNV calls from CNVnator (n = 6,248) are included as input to LUMPY, the resulting FDR (15.3%) is nearly 2.5X lower than the next-best performing tool, although this comes at the cost of reduced sensitivity (29.5%). The main utility of such an analysis is therefore to greatly reduce lower FDR at calls exhibiting independent read-depth evidence, and to properly classify SVs that alter copy number. Similarly, if we consider a high confidence subset of 1,195 deletion calls that are detected by both paired-end and split-read signals, the FDR falls dramatically from 37.5% to 7.6%, but sensitivity also decreases from 69.1% to 28.9% (Figure <xref ref-type="fig" rid="F6">6</xref>A). This indicates that most variant calls exhibiting both paired-end and split-read signals are true positives, but that many variants are not well captured by one or the other signal, presumably due to local sequence features that inhibit accurate alignment. This interpretation is consistent with the observation that the strength of paired-end and split-read signals are not well correlated with each other (Figure <xref ref-type="fig" rid="F6">6</xref>B), which may account (at least in part) for LUMPY’s improved sensitivity over methods that consider the two signals sequentially. Taken together, the above results demonstrate that LUMPY provides significantly improved performance over other tools when one considers the trade-off between sensitivity and FDR.</p>
      <fig id="F5" position="float">
        <label>Figure 5</label>
        <caption>
          <p><bold>Performance comparison of deletion detection in high and low coverage Illumina sequencing data from NA12878.</bold> We analyzed an approximately 50X coverage dataset of the NA12878 genome from the Illumina Platinum Genomes dataset. We tested LUMPY’s performance under four different variant calling scenarios. First, ‘LUMPY (pe + sr)’ considered both paired-end (pe) and split-read (sr) alignments (using YAHA) from NA12878. Second, ‘LUMPY with prior’ considered pe and sr alignments as well as 1000 Genomes variants as prior evidence. Third, ‘LUMPY trio’ considered pe and sr alignments for NA12878 as well as alignments from her parents (NA12891 and NA12892). Lastly, ‘LUMPY with CNVnator’ integrated pe and sr alignments with copy number loss predictions made by CNVnator (read depth (rd)). DELLY considered pe and sr alignments, GASVPro considered pe alignments and rd, and Pindel considered sr alignments. Sensitivity and FDR were estimated using two truth sets: 3,376 non-overlapping validated deletions from Mills <italic>et al</italic>. [<xref ref-type="bibr" rid="B12">12</xref>], and 4,095 deletions that were predicted by at least one tool and validated by PacBio or Moleculo alignments. <bold>(A)</bold> SV detection sensitivity and FDR on a 5X coverage subsample of the original data. LUMPY pe + sr was more sensitive than both GASVPro and Pindel and had either an equivalent or better FDR. DELLY was more sensitive than LUMPY pe + sr, but also had a higher FDR. Prior evidence or parental genomes improved LUMPY sensitivity. Given the low coverage, the read-depth signal was weak and only a small number of CNVs clustered with paired-end or split-read calls. <bold>(B)</bold> SV detection sensitivity and FDR on the original 50X coverage data. LUMPY pe + sr, DELLY, and Pindel had similar sensitivity in the Mills <italic>et al</italic>. truth set, and in the PacBio/Moleculo truth set DELLY had the highest sensitivity and FDR. LUMPY pe + sr had the next best sensitivity and the lowest FDR.</p>
        </caption>
        <graphic xlink:href="gb-2014-15-6-r84-5"/>
      </fig>
      <fig id="F6" position="float">
        <label>Figure 6</label>
        <caption>
          <p><bold>Relationship between paired-end and split-read signals for the NA12878 callset. (A)</bold> Venn diagram showing the total number of calls identified by paired-end alignments alone (left), by split-read alignments alone (right), or by both (center). Shown are the total number of calls, the sensitivity, and the FDR. Sensitivity and FDR are calculated precisely as in Figure <xref ref-type="fig" rid="F5">5</xref>. <bold>(B)</bold> Scatter plots showing the relationship between the number of split-reads (y-axis) and paired-end reads (x-axis) that identify each SV breakpoint in the entire callset (left), the unvalidated SV calls (center) and the validated SV calls (right). The number of variants in each category and the R<sup>2</sup> values are shown above each plot. Note that one unvalidated call is not visible in these plots due to cropping; it was identified by 236 split reads and 0 paired-end reads.</p>
        </caption>
        <graphic xlink:href="gb-2014-15-6-r84-6"/>
      </fig>
      <p>In addition, the 4,095 deletions from our ‘long-read’ truth set (Additional file <xref ref-type="supplementary-material" rid="S4">4</xref>) combined with the 469 validated non-deletion variants reported by LUMPY (Additional file <xref ref-type="supplementary-material" rid="S5">5</xref>) provide what is, to our knowledge, the largest collection of validated SV breakpoints (N = 4,564) yet reported for a single ‘normal’ human genome. This dataset will be a valuable resource for future benchmarking studies.</p>
    </sec>
    <sec>
      <title>Improved performance in common usage scenarios</title>
      <p>Importantly, although the comparisons presented in Figure <xref ref-type="fig" rid="F5">5</xref> are based upon the choice of a single detection threshold chosen for each tool (Materials and methods), LUMPY outperforms other tools across a broad spectrum of thresholds (Figure <xref ref-type="fig" rid="F3">3</xref>), indicating that the framework itself - not arbitrary parameter choices - underlies LUMPY’s superior performance. It is also clear from this result that a more relevant measure of tool performance is the relative SV detection sensitivity achieved by each tool under parameter settings that result in an acceptably low FDR. We therefore varied the minimum-evidence parameter of each tool to select settings that achieved an FDR of approximately 10% at 5X coverage and approximately 20% at 50X coverage (Figure <xref ref-type="fig" rid="F7">7</xref>A). Using these settings, LUMPY was twice as sensitive as the next-best performing tool GASVPro (16.3% versus 8.6%) on low coverage 5X data, with DELLY at 4.9% and Pindel at 0.4% (Figure <xref ref-type="fig" rid="F7">7</xref>A). At 50X coverage, LUMPY was 1.1X more sensitive than the next-best performing tool, DELLY (58.2% versus 53%), with GASVPRO at 32.5% and Pindel at 33.5%. Therefore, when we control for FDR, LUMPY is significantly more sensitive than other tools on both low and high coverage data.</p>
      <fig id="F7" position="float">
        <label>Figure 7</label>
        <caption>
          <p><bold>Detection performance in the NA12878 individual when restricting false discovery rates.</bold> We compared the performance of each tool in terms of sensitivity and novel variant discovery ability when considering only the subset of calls that meet a maximum FDR threshold. Using the results given in Figure <xref ref-type="fig" rid="F6">6</xref>, each tool’s FDR was calculated for each of the minimum-evidence settings used to generate the respective receiver operating characteristic (ROC) curves. This provided a mapping from the maximum FDR to the subset of calls that meet the associated minimum-evidence threshold for each tool. Sensitivity and FDR were estimated using the 4,095 deletions that were predicted by at least one tool and validated by PacBio or Moleculo alignments. <bold>(A)</bold> Sensitivity given a maximum FDR threshold. At 5X coverage, an FDR threshold of approximately 10% is achieved with a minimum of four alignments for LUMPY (8.1% FDR), four for GASVPro (10.1% FDR), six for DELLY (11.3% FDR), and nine for Pindel (6.3% FDR). An approximately 20% FDR at 50X coverage requires 8 alignments for LUMPY (18% FDR), 16 for GASVPro (19% FDR), 12 for DELLY (17.6% FDR), and 20 for Pindel (18.8% FDR). LUMPY had the highest sensitivity at both coverage levels and the relative improvement was most substantial at lower coverage. <bold>(B)</bold> Venn diagrams reflecting the absolute number of variants discovered uniquely and jointly among the different tools at both 10% FDR for 5X and 20% FDR for 50X. In both cases LUMPY found the most number of unique variants. The difference was most dramatic in the 5X coverage experiment, where only 46 out of 665 (6.9%) of the variants found among all four tools were missed by LUMPY. pe, paired-end; rd, read-depth; sr, split-read.</p>
        </caption>
        <graphic xlink:href="gb-2014-15-6-r84-7"/>
      </fig>
      <p>The above result has important practical implications: in the vast majority of genome sequencing-based study designs it is necessary to select tool parameter settings that constrain the FDR to acceptable levels, and an algorithm’s sensitivity under these conditions determines the number of true variants that can be discovered and the biological insights that can be gleaned. For example, at 5X coverage LUMPY finds 281 more true deletion variants than the next-best tool, GASVPro (619 versus 338), and finds 237 ‘novel’ deletions not found by any other tool (Figure <xref ref-type="fig" rid="F7">7</xref>B). At 50X coverage, LUMPY finds 232 more deletions than the next-best tool, DELLY (2,246 versus 2,014) and 312 ‘novel’ deletions not found by any other tool. In contrast, all other tools combined find only 46 variants not detected by LUMPY at 5X coverage, and only 428 at 50X coverage. Thus, although LUMPY finds only 196 truly novel validated deletions in NA12878 when one considers the entire set of calls made by all tools regardless of FDR (90 of which were not reported previously [<xref ref-type="bibr" rid="B12">12</xref>]), LUMPY detects hundreds of true variants that are not detected by the other methods when rational parameters that constrain FDR are used. Considering that our algorithmic approach is especially advantageous when variant coverage is low, and that clinically relevant somatic variants are often present at low allele frequencies due to tumor heterogeneity, LUMPY’s unsurpassed sensitivity at acceptable FDR levels translates directly to more comprehensive variant callsets and, hence, new biological insights.</p>
    </sec>
  </sec>
  <sec sec-type="discussion">
    <title>Discussion</title>
    <p>We have developed a general probabilistic framework for SV discovery, and have demonstrated that our framework outperforms existing discovery tools across all SV types and coverage levels, and in both real and simulated human genome datasets. LUMPY’s performance improvements are especially pronounced when evidence is scarce, either due to low coverage data or low variant allele frequency. LUMPY therefore represents an important technological advance, particularly in the context of cancer genomics where sensitivity is crucial for identifying low frequency variants within heterogeneous tumor samples.</p>
    <p>LUMPY’s high sensitivity is a direct consequence of combining multiple SV detection signals. LUMPY integrates disparate signals by converting them to a common format in which the two predicted breakpoint intervals in the reference genome are represented as paired probability distributions. SV prediction operations are then performed at this higher level. This novel approach has the key advantage that any SV detection signal can be integrated into the framework so long as a breakpoint probability can be assigned to each base pair in a candidate breakpoint region. Potential detection signals include paired-end and split-read alignments, alignments from assembled contigs, raw read-depth measurements, or CNVs detected by segmentation of read-depth, array comparative genomic hybridization or SNP array data. As we demonstrate using the NA12878 genome, inclusion of previously discovered SVs as priors can significantly enhance SV discovery sensitivity, while inclusion of third-party CNV calls as an input signal can significantly lower FDR, both of which are examples of the flexibility and generality of our framework. To facilitate integration, each evidence type can be assigned a different weight reflecting the user’s prior expectations. As sequencing technologies and SV detection strategies evolve, new sources of evidence can be easily incorporated without modifying the underlying logic of the SV detection algorithm itself; the sole requirement is the development of a new module that maps the SV detection signal to a paired probability distribution.In addition to facilitating signal integration, our use of probability distributions should, in theory, enable more accurate prediction of breakpoint positions. In most cases, not all coordinates within a predicted breakpoint interval are equally likely to be the breakpoint based on input data, and LUMPY’s use of probability distributions allows this spatial uncertainty to be propagated throughout the SV detection process. Although a detailed analysis of the spatial resolution provided by each SV detection tool is complicated by the variable ways in which different tools report breakpoints, our data suggest that LUMPY is matching if not exceeding the resolution of other tools. LUMPY reported significantly smaller breakpoint intervals than GASVPro (Figure <xref ref-type="fig" rid="F8">8</xref>), and although DELLY and Pindel report predictions at single base resolution, in order to achieve respectable validation rates it was necessary to ‘pad’ these coordinates to a similar interval size as those reported by LUMPY (Materials and methods). The use of probability distributions also allows LUMPY to report breakpoints at different levels of precision; by default, LUMPY reports the entire interval predicted to contain each breakpoint, the 95% confidence interval, and the most likely single base position. This feature will enable more accurate functional annotation of SV predictions. Following SV detection, LUMPY can report the final integrated probability distribution for each predicted variant to allow for comparison across studies. Alternatively, the final breakpoint probability distributions from one study could potentially be used as a source of prior evidence in another.</p>
    <fig id="F8" position="float">
      <label>Figure 8</label>
      <caption>
        <p><bold>Breakpoint interval size distributions for structural variation calls in NA12878.</bold> LUMPY refines the location of a given breakpoint by taking the product of the probability distributions in the breakpoint’s evidence set. The shape of each distribution depends on the breakpoint uncertainty that is inherent to the evidence signal type (for example, the spatial uncertainty of breakpoints predicted by paired-end alignments is much higher than with split-read alignments). <bold>(A)</bold> The distribution of predicted breakpoint intervals for SV calls when using solely paired-end alignments. The variability in fragment size causes a significant amount of uncertainty in the paired-end signal, which results in a wide (over 500 bases for the NA12878 sample) distribution in the predicted breakpoint intervals. <bold>(B)</bold> The distribution of predicted breakpoint intervals for SV calls when using solely split-read alignments. Split-read alignments inherently have far less uncertainty in the predicted breakpoint location and, therefore, they yield a distribution with much lower variance. <bold>(C)</bold> The resulting breakpoint uncertainty distribution when both paired-end and split-read alignments are jointly considered. By taking the product of the distributions, the inherent breakpoint precision afforded by split-read alignments is not substantially diluted by paired-end alignments. <bold>(D)</bold> A comparison of the predicted breakpoint intervals reported by GASVPro (left) all LUMPY calls (center), and the 95% confidence interval for the LUMPY calls (right). Size distributions are not shown for DELLY or Pindel since they only report single base coordinates. stdev, standard deviation.</p>
      </caption>
      <graphic xlink:href="gb-2014-15-6-r84-8"/>
    </fig>
    <p>How could LUMPY’s performance be further improved? First and foremost, native support for read-depth data as an input signal should significantly improve performance at duplication and deletion variants. Here, we have incorporated read-depth information by converting the output of a copy number segmentation tool to breakpoint probability distributions, and providing these to LUMPY using the generic module (Figure <xref ref-type="fig" rid="F1">1</xref>A); however, we expect that more significant improvements will be possible using raw read-depth data. Second, for applications that require ultra-sensitive detection of known structural variants - such as low coverage population scale sequencing - LUMPY could be packaged with dataset priors reflecting the positions and allele frequencies of previously identified SVs. While we show that this is feasible using the existing LUMPY framework (Figure <xref ref-type="fig" rid="F5">5</xref>), we note that substantial improvements to sensitivity may require more comprehensive and accurate SV catalogs than are currently available. Third, LUMPY’s current evidence clustering logic is suboptimal for small insertion variants that are fully captured within a single read. These insertions are a special case because proper clustering of split-read signals requires that the size of the insertion event - as defined by read coordinates rather than the reference genome coordinates - be taken into account during clustering. Although this weakness is predicted to have minimal impact using short-read data, improving LUMPY’s behavior on insertion variants is a high priority given increasing use of long-read data. Finally, a major challenge for SV detection is distinguishing <italic>bona fide</italic> variants from false positives caused by alignment artifacts and other sources of error. In this respect, breakpoint probability distributions provide a highly quantitative source of information regarding the relative spacing of discordant and/or split alignments at a locus. By training on a set of known variants, it should be possible to derive a probabilistic measure of variant confidence that is based not only on the number of clustered reads, but also on the shape of the final integrated probability distribution. Alternatively, knowledge of the shape of ‘true’ breakpoint probability distributions could potentially be used as an objective function during read clustering.</p>
    <p>In a more general sense, our approach for integrating SV detection signals - in essence, performing genome interval comparison operations using probability distributions rather than ‘flat’ features - could be useful for any application that involves comparison of genomic features whose exact coordinates are unknown, and whose positional uncertainty can be represented rationally in the form of a probability distribution. Rapid and efficient probabilistic comparisons could be enabled through extensions to existing interval-based software such as BEDTools [<xref ref-type="bibr" rid="B23">23</xref>].</p>
  </sec>
  <sec sec-type="conclusions">
    <title>Conclusions</title>
    <p>LUMPY’s superior sensitivity in these performance tests is a direct consequence of the fact that it simultaneously integrates multiple SV detection signals during SV discovery. The benefits of this approach are clear from the super-additive effect of combining read-pair and split-read signals within the LUMPY framework, relative to using either signal alone (Figure <xref ref-type="fig" rid="F4">4</xref>C). In contrast, although other tools such as GASVPro [<xref ref-type="bibr" rid="B4">4</xref>], DELLY [<xref ref-type="bibr" rid="B3">3</xref>], CNVer [<xref ref-type="bibr" rid="B7">7</xref>], CREST [<xref ref-type="bibr" rid="B6">6</xref>] and Genome STRiP [<xref ref-type="bibr" rid="B5">5</xref>] also exploit multiple SV detection signals, to our knowledge they first use one signal (that is, read-pair) to drive discovery and then refine and/or genotype candidates with a second signal (that is, split-read or read-depth). An intrinsic limitation of stepwise integration is that other available signals cannot increase the number of true positive SV calls beyond those candidates identified by the signal used for initial discovery. Consistent with this interpretation, inclusion of a second SV detection signal has little to no effect on DELLY’s or GASVPro’s sensitivity (Figure <xref ref-type="fig" rid="F4">4</xref>C) relative to using the primary read-pair signal alone.</p>
  </sec>
  <sec sec-type="materials|methods">
    <title>Materials and methods</title>
    <p>We propose a breakpoint prediction framework that can accommodate multiple classes of evidence from multiple sources in the same analysis. Our framework makes use of an abstract breakpoint evidence type to define a set of functions that serve as an interface between specific evidence subtypes (for example, paired-end sequence alignments and split-read mappings) and the breakpoint type. Any class of evidence for which these functions can be defined may be included in our framework. To demonstrate the applicability of this abstraction, we defined three breakpoint evidence subtypes: read-pair, split-read, and a general breakpoint interface.</p>
    <p>Since our framework combines evidence from multiple classes, it extends naturally to include evidence from multiple sources. The sources that can be considered in a single analysis may be any combination of evidence from different samples, different evidence subclasses from a single sample, or prior information about known variant positions. We refer to a given set of data as a breakpoint evidence instance, and assume that each instance contains only one evidence subtype and is from a single sample. To help organize the results of analysis with multiple samples or multiple instances for a single sample, each instance is assigned an identifier that can be shared across instances.</p>
    <sec>
      <title>Breakpoint</title>
      <p>A breakpoint is a pair of genomic coordinates that are adjacent in a sample genome but not in a reference genome. Breakpoints can be detected, and their locations predicted by various evidence classes such as paired-end sequence alignments or split-read mappings. To support the inclusion of different evidence classes into a single analysis, we define a high-level breakpoint type as a collection of the evidence that corroborates the location and variety (for example, deletion, tandem duplication, and so on) of a particular breakpoint. Since many evidence classes provide a range of possible breakpoint locations, we represent the breakpoint’s location with a pair of breakpoint intervals where each interval has a start position, an end position, and a probability vector that represents the relative probability that a given position in the interval is one end of the breakpoint. More formally, a breakpoint is a tuple <italic>b</italic> = ⟨<italic>E,l,r,v</italic>⟩, where <italic>b.E</italic> is the set of evidence that corroborates the location and variety of a particular breakpoint; <italic>b.l</italic> and <italic>b.r</italic> are left and right breakpoint intervals each with values <italic>b.l.s</italic> and <italic>b.l.e</italic> that are the start and end genomic coordinates and <italic>b.lp</italic> is a probability vector where |<italic>b.l.p</italic>| = <italic>b.l.e</italic> – <italic>b.l.s</italic> and <italic>b.l.p</italic>[<italic>i</italic>] is the relative probability that position <italic>b.l.s</italic> + <italic>i</italic> is one end of the breakpoint (similar for <italic>b.r</italic>); and <italic>b.v</italic> is the breakpoint variety. Within the context of this method, breakpoint variety determinations are based on the orientation of the evidence. It is important to note that while a breakpoint may be labeled as a deletion when it contains evidence from a paired-end sequence alignment with a +/-orientation, the breakpoint may in fact be the result of some other event or series of complex events.</p>
      <p>If there exist two breakpoints <italic>b</italic> and <italic>c</italic> in the set of all breakpoints <italic>B</italic> where <italic>b</italic> and <italic>c</italic> intersect (<italic>b.r</italic> intersects <italic>c.r</italic>, <italic>b.l</italic> intersects <italic>c.l</italic>, and <italic>b.v</italic> = <italic>c.v</italic>), then <italic>b</italic> and <italic>c</italic> are merged into interval <italic>m</italic>, <italic>b</italic> and <italic>c</italic> are removed from <italic>B</italic>, and <italic>m</italic> is placed into <italic>B</italic>. The evidence set <italic>m.E</italic> is the union of the evidence sets <italic>b.E</italic> and <italic>c.E</italic>.</p>
      <p>A straightforward method to define breakpoint intervals <italic>m.l</italic> and <italic>m.r</italic> would be to let <italic>m.l.s</italic> = max(<italic>b.l.s</italic>, <italic>c.l.s</italic>) and <italic>m.l.e</italic> = min(<italic>b.l.e</italic>, <italic>c.l.e</italic>), similar for <italic>m.r</italic>. However, if a spurious alignment is merged into a set of genuine breakpoints, the resulting breakpoint interval can be ‘pulled’ away from the actual breakpoint. The impact of an outlier can be minimized or eliminated once the full set of corroborating alignments is collected for a given breakpoint, but collecting the full set is complicated by the fact that alignments are considered in order and outliers typically occur first. To account for this, we define a liberal merge process where <italic>m.l.s</italic> is the mean start position for the left intervals in <italic>m.E</italic>, and <italic>m.l.e</italic> is the mean end position for the left intervals in <italic>m.E</italic>, similar for <italic>m.r</italic>.</p>
      <p>Once all the evidence has been considered, an SV call <italic>s</italic> (also a breakpoint) is made for each breakpoint <italic>b</italic> ∈ <italic>B</italic> that meets a user-defined minimum evidence threshold (for example, four pieces of evidence). The boundaries of the breakpoint intervals <italic>s.l</italic> and <italic>s.r</italic> are the trimmed product of the distributions of the left and right intervals in <italic>b.E</italic>. Let <italic>s.l.s</italic> = max({<italic>e.l.s</italic> | <italic>e</italic> ∈ <italic>b.E</italic>}), <italic>s.l.e</italic> = min({<italic>e.l.e</italic> | <italic>e</italic> ∈ <italic>b.E</italic>}), and <italic>s.l.p</italic>[<italic>i</italic>] = ∏<sub><italic>e</italic>∈<italic>b.E</italic></sub><italic>e.l.p</italic>[<italic>i</italic>-<italic>o</italic>] where <italic>o</italic> is the offset value <italic>e.l.s</italic> - <italic>s.l.s</italic> (similar for <italic>s.r</italic>). The intervals <italic>s.l</italic> and <italic>s.r</italic> can then trimmed to include only those positions that are in the top percentile (for example, top 99.9% of values) based on a user-provided value. Given the liberal merge process, it is possible for <italic>b.E</italic> to contain non-overlapping distributions that would result in a zero-length product. In this case, we identify the maximum point among the sum of the distributions in <italic>b.E</italic>, any distribution not intersecting this point is removed, and the resulting subset processed normally. Regardless of the trimming value, LUMPY reports both the intervals that contain 95% of the resulting probability distribution and the maximum position of <italic>s.l.p</italic> and <italic>s.r.p</italic>. Summation is another option for calculating the combined distribution boundaries and values. In that case <italic>s.l</italic> and <italic>s.r</italic> are the trimmed mixture distributions of the left and right intervals in <italic>b.E</italic>. Let <italic>s.l.s</italic> = min({<italic>e.l.s</italic> | <italic>e</italic> ∈ <italic>b.E</italic>}), <italic>s.l.e</italic> = max({<italic>e.l.e</italic> | <italic>e</italic> ∈ <italic>b.E</italic>}), and <italic>s.l.p</italic>[<italic>i</italic>] = ∑<sub><italic>e</italic>∈<italic>b.E</italic></sub><italic>e.l.p</italic>[<italic>i</italic>-<italic>o</italic>]. The value at <italic>s.l.p</italic>[<italic>i</italic>] (or <italic>s.r.p</italic>[<italic>i</italic>]) represents the level of agreement among the evidence in <italic>b.E</italic> that position <italic>i</italic> is one end of the breakpoint. While summation will give less precise breakpoint predictions, it can be a useful option when considering low-quality data.</p>
    </sec>
    <sec>
      <title>Breakpoint evidence</title>
      <p>To combine distinct SV alignment signals such as read-pair and split-read alignments with the general breakpoint type defined above, we define an abstract breakpoint evidence type. This abstract type defines an interface that allows for the inclusion of any data that can provide the following functions: is_bp determines if a particular instance of the data contains evidence of a breakpoint; get_v determines the breakpoint variety (for example, deletion, tandem duplication, inversion, and so on); and get_bpi maps the data to a pair of breakpoint intervals.</p>
      <p>To demonstrate the applicability of this abstraction, we defined three breakpoint evidence instances: paired-end sequencing alignments, split-read alignments, and a general breakpoint interface. Read-pair and split-read are the most frequently used evidence types for breakpoint detection, and the general interface provides a mechanism to include any other sources of information such as known variant positions or output from other analysis pipelines (for example, read-depth calls). As technologies evolve and our understanding of structural variation improves, other instances can be easily added.</p>
    </sec>
    <sec>
      <title>Paired-end alignments</title>
      <p>Paired-end sequencing involves fragmenting genomic DNA into roughly uniformly sized fragments, and sequencing both ends of each fragment to produce paired-end reads ⟨<italic>x</italic>, <italic>y</italic>⟩, which we will refer to as ‘read-pairs’. Each read is aligned to a reference genome <italic>R</italic>(<italic>x</italic>) = ⟨<italic>c</italic>, <italic>o</italic>, <italic>s</italic>, <italic>e</italic>⟩, where <italic>R</italic>(<italic>x</italic>).<italic>c</italic> is the chromosome that <italic>x</italic> aligned to in the reference genome, <italic>R</italic>(<italic>x</italic>).<italic>o</italic> = +| - indicates the alignment orientation, and <italic>R</italic>(<italic>x</italic>).<italic>s</italic> and <italic>R</italic>(<italic>x</italic>).<italic>e</italic> delineate the start and end positions of the matching sequence within the chromosome. We assume that both <italic>x</italic> and <italic>y</italic> align uniquely to the reference and that <italic>R</italic>(<italic>x</italic>).<italic>s</italic> &lt; <italic>R</italic>(<italic>x</italic>).<italic>e</italic> &lt; <italic>R</italic>(<italic>y</italic>).<italic>s</italic> &lt; <italic>R</italic>(<italic>y</italic>).<italic>e</italic>. While in practice it is not possible to know the position of read <italic>x</italic> in the sample genome (in the absence of whole-genome assembly), it is useful to refer to <italic>S</italic>(<italic>x</italic>) = ⟨<italic>o</italic>, <italic>s</italic>, <italic>e</italic>⟩ as the alignment of <italic>x</italic> with respect to the originating sample’s genome.</p>
      <p>Assuming that genome sequencing was performed with the Illumina platform, read-pairs are expected to align to the reference genome with a <italic>R</italic>(<italic>x</italic>).<italic>o</italic> = +, <italic>R</italic>(<italic>y</italic>).<italic>o</italic> = - orientation, and at distance <italic>R</italic>(<italic>y</italic>).<italic>e</italic> - <italic>R</italic>(<italic>x</italic>).<italic>s</italic> roughly equivalent to the fragment size from the sample preparation step. Any read-pair that aligns with an unexpected configuration can be evidence of a breakpoint. These unexpected configurations include matching orientation <italic>R</italic>(<italic>x</italic>).<italic>o</italic> = <italic>R</italic>(<italic>y</italic>).<italic>o</italic>, alignments with switched orientation <italic>R</italic>(<italic>x</italic>).<italic>o</italic> = -, <italic>R</italic>(<italic>y</italic>).<italic>o</italic> = +, and an apparent fragment length (<italic>R</italic>(<italic>y</italic>).<italic>e</italic> - <italic>R</italic>(<italic>x</italic>).<italic>s</italic>) that is either shorter or longer than expected. We estimated the expected fragment length to be the sample mean fragment length <italic>l</italic>, and the fragment length standard deviation to be the sample standard deviation <italic>s</italic> from the set of properly mapped read-pairs (as defined by the SAM specification) in the sample data set. Considering the variability in the sequencing process, we extend the expected fragment length to include sizes <italic>l</italic> + <italic>v</italic><sub><italic>l</italic></sub><italic>s</italic>, where <italic>v</italic><sub><italic>l</italic></sub> is a tuning parameter that reflects spread in the data.</p>
      <p>When <italic>x</italic> and <italic>y</italic> align to the same chromosome (<italic>R</italic>(<italic>x</italic>)<italic>.c = R</italic>(<italic>y</italic>)<italic>.c</italic>), the breakpoint variety can be inferred from the orientation of <italic>R</italic>(<italic>x</italic>) and <italic>R</italic>(<italic>y</italic>). If the orientations match, then the breakpoint is labeled as an inversion, and if <italic>R</italic>(<italic>x</italic>).<italic>o</italic> = - and <italic>R</italic>(<italic>y</italic>).<italic>o</italic> = + then the breakpoint is labeled as a tandem duplication. Any breakpoint with the orientation <italic>R</italic>(<italic>x</italic>).<italic>o</italic> = + and <italic>R</italic>(<italic>y</italic>).<italic>o</italic> = - is labeled as a deletion. When <italic>x</italic> and <italic>y</italic> align to different chromosomes (<italic>R</italic>(<italic>x</italic>)<italic>.c ≠ R</italic>(<italic>y</italic>)<italic>.c</italic>), the variety is labeled inter-chromosomal. At present, LUMPY does not explicitly support identification of insertions that are spanned by paired-end reads; however, if desired these can be identified in a post-processing step through assessment of ‘deletion’ calls.</p>
      <p>To map ⟨<italic>x</italic>, <italic>y</italic>⟩ to breakpoint intervals <italic>l</italic> and <italic>r</italic>, the ranges of possible breakpoint locations must be determined and probabilities assigned to each position in those ranges. By convention, <italic>x</italic> maps to <italic>l</italic> and <italic>y</italic> to <italic>r</italic>, and for the sake of brevity we will focus on <italic>x</italic> and <italic>l</italic> since the same process applies to <italic>y</italic> and <italic>r</italic>. Assuming that a single breakpoint exists between <italic>x</italic> and <italic>y</italic>, then the orientation of <italic>x</italic> determines if <italic>l</italic> will be upstream or downstream of <italic>x</italic>. If the <italic>R</italic>(<italic>x</italic>).<italic>s</italic> = +, then the breakpoint interval begins after <italic>R</italic>(<italic>x</italic>).<italic>e</italic> (downstream), otherwise the interval ends before <italic>R</italic>(<italic>x</italic>).<italic>s</italic> (upstream).</p>
      <p>The length of each breakpoint interval is proportional to the expected fragment length <italic>L</italic> and standard deviation <italic>s</italic>. Since we assume that only one breakpoint exists between <italic>x</italic> and <italic>y</italic>, and that it is unlikely that the distance between the ends of a pair in the sample genome (<italic>S</italic>(<italic>y</italic>).<italic>e</italic> - <italic>S</italic>(<italic>x</italic>).<italic>s</italic>) is greater than <italic>L</italic>, then it is also unlikely that one end of the breakpoint is at a position greater than <italic>R</italic>(<italic>x</italic>).<italic>s</italic> + <italic>L</italic>, assuming that <italic>R</italic>(<italic>x</italic>).<italic>o</italic> = +. If <italic>R</italic>(<italic>x</italic>).<italic>o</italic> = -, then it is unlikely that a breakpoint is at a position less than <italic>R</italic>(<italic>x</italic>).<italic>e</italic> - <italic>L</italic>. To account for variability in the fragmentation process, we extend the breakpoint to <italic>R</italic>(<italic>x</italic>).<italic>e</italic> + (<italic>L</italic> + <italic>v</italic><sub><italic>f</italic></sub><italic>s</italic>) when <italic>R</italic>(<italic>x</italic>).<italic>o</italic> = +, and <italic>R</italic>(<italic>x</italic>).<italic>s</italic> - (<italic>L</italic> + <italic>v</italic><sub><italic>f</italic></sub><italic>s</italic>) when <italic>R</italic>(<italic>x</italic>).<italic>o</italic> = -, where <italic>v</italic><sub><italic>f</italic></sub> is a tuning parameter that, like <italic>v</italic><sub><italic>l</italic></sub>, reflects the spread in the data.</p>
      <p>The probability that a particular position <italic>i</italic> in the breakpoint interval <italic>l</italic> is part of the actual breakpoint can be estimated by the probability that <italic>x</italic> and <italic>y</italic> span that position in the sample. For <italic>x</italic> and <italic>y</italic> to span <italic>i</italic>, the fragment that produced ⟨<italic>x</italic>, <italic>y</italic>⟩ must be longer than the distance from the start of <italic>x</italic> to <italic>i</italic>, otherwise <italic>y</italic> would occur before <italic>i</italic> and <italic>x</italic> and <italic>y</italic> would not span <italic>i</italic> (contradiction). The resulting probability is P(<italic>S</italic>(<italic>y</italic>).<italic>e</italic> - <italic>S</italic>(<italic>x</italic>).<italic>s</italic> &gt; <italic>i</italic> - <italic>R</italic>(<italic>x</italic>).<italic>s</italic>) if <italic>R</italic>(<italic>x</italic>).<italic>o</italic> = +, and P(<italic>S</italic>(<italic>y</italic>).<italic>e</italic> - <italic>S</italic>(<italic>x</italic>).<italic>s</italic> &gt; <italic>R</italic>(<italic>x</italic>).<italic>e</italic> - <italic>i</italic>) if <italic>R</italic>(<italic>x</italic>).<italic>o</italic> = -. While we cannot directly measure the sample fragment length (<italic>S</italic>(<italic>y</italic>).<italic>e</italic> - <italic>S</italic>(<italic>x</italic>).<italic>s</italic>), we can estimate its distribution by constructing a frequency-based cumulative distribution <italic>D</italic> of fragment lengths from the same sample that was used to find <italic>L</italic> and <italic>s</italic>, where <italic>D</italic>(<italic>j</italic>) gives the proportion of the sample with fragment length greater than <italic>j</italic>.</p>
    </sec>
    <sec>
      <title>Split-read alignments</title>
      <p>A split-read alignment is a single DNA fragment <italic>X</italic> that does not contiguously align to the reference genome. Instead, <italic>X</italic> contains a set of two or more substrings <italic>x</italic><sub><italic>i</italic></sub>…<italic>x</italic><sub><italic>j</italic></sub> (<italic>X</italic> = <italic>x</italic><sub>1</sub><italic>x</italic><sub>2</sub>…<italic>x</italic><sub><italic>n</italic></sub>), where each substring aligns to the reference <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub>) = ⟨<italic>c</italic>, <italic>o</italic>, <italic>s</italic>, <italic>e</italic>⟩, and adjacent substrings align to non-adjacent locations in the reference genome <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub>).<italic>e</italic> ≠ <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub> + 1).<italic>s</italic> + 1 or <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub>).<italic>c</italic> ≠ <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub> + 1).<italic>c</italic> for 1 ≤ <italic>i</italic> ≤ <italic>n</italic> – 1. A single split-read alignment maps to a set of adjacent split-read sequence pairs (⟨<italic>x</italic><sub>1</sub>, <italic>x</italic><sub>2</sub>⟩,⟨<italic>x</italic><sub>2</sub>, <italic>x</italic><sub>3</sub>⟩,…,⟨<italic>x</italic><sub><italic>n</italic></sub>-1,<italic>x</italic><sub><italic>n</italic></sub>⟩), and each pair ⟨<italic>x</italic><sub><italic>i</italic></sub>,<italic>x</italic><sub><italic>i</italic></sub> + 1⟩ is considered individually.</p>
      <p>By definition, a split-read mapping is evidence of a breakpoint and therefore the function is_bp trivially returns true.</p>
      <p>Both orientation and mapping location must be considered to infer the breakpoint variety for ⟨<italic>x</italic><sub><italic>i</italic></sub>, <italic>x</italic><sub><italic>i</italic></sub> + 1⟩. When the orientations match <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub>).o = <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub> + 1).<italic>o</italic>, the event is marked as either a deletion or a tandem duplication. Assuming that <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub>).<italic>o</italic> = <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub> + 1).<italic>o</italic> = +, <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub>).<italic>s</italic> &lt; <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub> + 1).<italic>s</italic> indicates a gap caused by a deletion and <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub>).<italic>s</italic> &gt; <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub> + 1).<italic>s</italic> indicates a tandem duplication. These observations are flipped when orientations <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub>).<italic>o</italic> = <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub> + 1).<italic>o</italic> = -. When the orientations do not match <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub>).o ≠ <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub> + 1).<italic>o</italic>, the event is marked as an inversion and the mapping locations do not need to be considered. When <italic>x</italic> and <italic>y</italic> align to different chromosomes, the variety is marked as inter-chromosomal. LUMPY does not currently attempt to identify insertions that are completely contained within a long read, but this will be supported in future versions. We note that this capability requires long-read aligners to report the number and order of alignments within a read (which is not formally supported in the current SAM format specifications).</p>
      <p>The possibility of errors in the sequencing and alignment processes creates some ambiguity in the exact location of the breakpoint associated with a split-read alignment. To account for this, each alignment pair ⟨<italic>x</italic><sub><italic>i</italic></sub>, <italic>x</italic><sub><italic>i</italic></sub> + 1⟩ maps to two breakpoint intervals <italic>l</italic> and <italic>r</italic> centered at the split. The probability vectors <italic>l.p</italic> and <italic>r.p</italic> are highest at the midpoint and decrease exponentially toward their edges. The size of this interval is a configurable parameter <italic>v</italic><sub><italic>s</italic></sub> and is based on the quality of the sample under consideration and the specificity of the alignment algorithm used to map the sequences to the reference genome.</p>
      <p>Depending on the breakpoint variety, the intervals <italic>l</italic> and <italic>r</italic> are centered on either the start or the end of <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub>) and <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub> + 1). When the breakpoint is a deletion <italic>l</italic> is centered at <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub>).<italic>e</italic> and <italic>r</italic> at <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub> + 1).<italic>s</italic>, and when the breakpoint is a tandem duplication <italic>l</italic> is centered at <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub>).<italic>s</italic> and <italic>r</italic> at <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub> + 1).<italic>e</italic>. If the breakpoint is an inversion, <italic>l</italic> and <italic>r</italic> are both centered either at the start positions or end positions of <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub>) and <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub> + 1), respectively. Assuming that <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub>).<italic>s</italic> &lt; <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub> + 1).<italic>s</italic>, if <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub>).<italic>o</italic> = + then <italic>l</italic> and <italic>r</italic> are centered at <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub>).<italic>e</italic> and <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub> + 1).<italic>e</italic>, otherwise they are centered at <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub>).<italic>s</italic> and <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub> + 1).<italic>s</italic>. If <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub>).<italic>s</italic> &gt; <italic>R</italic>(<italic>x</italic><sub><italic>i</italic></sub> + 1).<italic>s</italic>, then the conditions are swapped.</p>
    </sec>
    <sec>
      <title>Generic evidence</title>
      <p>The generic evidence subclass provides a mechanism to directly encode breakpoint intervals using the BEDPE format [<xref ref-type="bibr" rid="B17">17</xref>]. BEDPE is an extension of the popular BED format that provides a means to specify a pair of genomic coordinates; in this case the pair represents the two breakpoint positions in the reference genome. This subclass extends our framework to include SV signal types that do not yet have a specific subclass implemented. For example, the set of variants that are known to exist in the population can be included in the analysis of an individual or variants that are known to exist in a particular type of cancer can be included in the analysis of a tumor. This signal can be included in the analysis by expanding the edges of the predicted intervals to create breakpoint intervals, and encoding these intervals in BEDPE format. Each BEDPE entry is assumed to be a real breakpoint (is_bp), the variety is encoded in the auxiliary fields in BEDPE (get_v), and the intervals are directly encoded in BEDPE (get_bpi).</p>
    </sec>
    <sec>
      <title>Performance comparisons</title>
      <p>Both simulated and real datasets were used to compare the sensitivity and FDR of LUMPY to other SV detection algorithms (GASVPro, DELLY, and Pindel). Two types of simulations were performed: one in which homozygous variants of diverse varieties were introduced at random positions throughout the reference genome, and another in which a heterogeneous tumor sample was simulated by mixing reads from a modified ‘abnormal’ human reference genome (containing 1000 Genomes deletions) and an unmodified ‘normal’ human reference genome in varying proportions. We also used publicly available Illumina sequencing data of the NA12878, NA12891, and NA12892 individuals. Two scenarios were considered: the original 50X coverage files, and 5X subsamples of the original data sets.</p>
      <p>In the case of the homozygous simulation, we used SVsim to create new versions of the human reference genome (build 37) containing 2,500 simulated variants of each variety. For deletions, tandem duplications and inversions we randomly placed 2,500 non-overlapping variants ranging from 100 bp to 10,000 bp in size. To simulate translocations, we randomly inserted 2,500 non-overlapping inter-chromosomal regions of 1,000 bp, derived from random donor sites in the reference genome. Although we note that the true variant variety in this case is actually an insertion, the inserted segment exceeds the insert size of the sequencing library as well as the read length, and thus the breakpoints formed by such insertions accurately simulate a translocation. Each simulated genome was sampled to 40X, 20X, 10X, 5X, and 2X coverage.</p>
      <p>To simulate a heterogeneous tumor sample, we combined simulated reads from both a modified and unmodified version of the human reference genome (build 37). The modified genome was created using SVsim, and included 5,516 non-overlapping deletions identified by the 1000 Genomes Project. Each simulation combined reads from both the modified and unmodified genomes in varying proportions. We refer to the proportion of reads that were derived from the modified genome as the SV allele frequency. The simulated SV allele frequencies were 5%, 10%, 20% and 50%, and the simulated coverages were 10X, 20X, 40X, and 80X. For example, in the simulation with 5% SV allele frequency and 10X coverage, the modified genome was sampled at 0.5X coverage and the unmodified genome was sampled at 9.5X coverage. The two sets of reads are then pooled into a single 10X coverage sample.</p>
      <p>For all simulations, WGSIM was used to sample paired-end reads with a 150 bp read length, a 500 bp mean outer distance with a 50 bp standard deviation, and default error rate settings. Paired-end reads were mapped to the reference genome with NOVOALIGN version V2.07.08, using the random repeat reporting and allowing only one alignment per read. From the NOVOALIGN output, all soft-clipped (≥20 bp clipped length) and unmapped reads were realigned with the split-read aligner YAHA using a word length of 11 and a minimum match of 15. The NOVOALIGN output was used as input to DELLY, GASVPro, and Pindel, and both NOVOALIGN and YAHA output were used as input to LUMPY. In all algorithms, the minimum evidence threshold was four. For LUMPY, the tuning parameters min_non_overlap was set to 150, discordant_z was set to 4, back_distance was set to 20, weight was set to 1, and min_mapping_threshold was set to 1. For GASVPro, LIBRARY_SEPARATED was set to all, CUTOFF_LMINLMAX was set to SD = 4, WRITE_CONCORDANT was set to true, and WRITE_LOWQ was set to true. For DELLY, map-qual was set to 1, and the inc-map flag was set. DELLY paired-end (pe) and split-read (sr) calls were combined into a single paired-end and split-read (pe + sr) callset by taking the union of the two sets where the split-read call was retained when a call was common to both sets. For Pindel, minimum_support_for_event was set to 4, all chromosomes were considered, and report_interchromosomal_events was set to true. Since the output of DELLY and Pindel are single-base-resolution intervals, we increased the size of those intervals to match the mean interval size of a similar LUMPY call. Any call that had split-read support (Pindel and DELLY sr calls) was expanded to a 28 bp interval, and any call that had only paired-end support (DELLY pe calls) was expanded to a 282 bp interval. The intervals for GASVPro were not modified since, like LUMPY, it reports an interval whose size is based on the supporting evidence.</p>
      <p>For the real data, LUMPY, GASVPro, DELLY, and Pindel considered Illumina sequencing of the NA12878 individual. The original sequencing files were at 50X coverage and were used in the 50X experiments. The 5X experiments considered sequencing files that were created by subsamples 10% of the original paired-end alignments. For all the tools, only deletion predictions on chromosomes 1 though X were considered. All sequencing samples were retrieved from the European Nucleotide Archives (submission ERA172924), and were previously aligned using BWA. Soft-clipped (≥20 bp clipped length) and unmapped reads were realigned with the split-read aligner YAHA using a word length of 11 and a minimum match of 15. In addition to the NA12878 data, the LUMPY trio results also considered sequencing data from that individual’s parents, NA12891 and NA12892. The LUMPY prior result considered all 1000 Genomes variant calls using the generic evidence module. The LUMPY read-depth results considered all deletion calls made by CNVnator [<xref ref-type="bibr" rid="B13">13</xref>] for the NA12878 genome with a window size of 100 for the 50X coverage experiment and 1,000 for the 5X coverage experiment. The single-base-resolution regions predicted by CNVnator were extended upstream and downstream by one-half the window size before being considered by LUMPY. Each tool was run with the same options that were used in the simulation experiments, except the minimum mapping quality for LUMPY, GASVPro, and Pindel was increased to 10. Since Pindel uses paired-end reads differently than the other tools, the default mapping quality of 20 was used. Each call required support of at least four. In the LUMPY trio result, a call had to have support of four from at least one individual (NA12878, NA12891, or NA12892) and at least one piece of support from NA12878. The weight for the 1000 Genomes variant calls in the LUMPY prior result was set to 2. In the LUMPY read-depth result, a call had to have support from read-depth and paired-end or split-read.</p>
      <p>For the identification of the first truth sets, the Mills <italic>et al</italic>. study [<xref ref-type="bibr" rid="B12">12</xref>] validated 14,012 deletions in NA12878 across 11 independent laboratories. Once duplicate predictions were removed, the first truth set contained 3,376 non-overlapping deletions. The SV breakpoints predicted by each algorithm were compared to the known variants. A true positive was defined as a variant call where the two breakpoint intervals reported by a given SV detection tool both intersect with the two breakpoints introduced in the reference genome by simulation, and where the SV types (for example, deletion) match. To account for varied spatial resolution among the tools, we pad the simulated breakpoint coordinates with 50 bp of bidirectional slop, such that each simulated variant is represented by two 100 bp breakpoint intervals.</p>
      <p>The second truth set consisted of the 4,095 deletions called by at least one tool in the 50X dataset or by the 1000 Genomes Project [<xref ref-type="bibr" rid="B12">12</xref>], and that were also validated by long-read sequencing from PacBio or Illumina Moleculo data. Overlapping calls were merged by retaining the minimum shared interval. PacBio reads (median length, 880 bp; mean depth, 30X) were aligned to GRCh37 using BWA Smith-Waterman (bwa bwasw -b 5 -q 2 -r 1 -z 20 -w 500). Illumina Moleculo reads (median length, 3,012 bp; mean depth, 30X) were aligned to GRCh37 with BWA-MEM (bwa mem -t 1 -B 4 -O 6 -E 1 -M). These BAM files are available from the 1000 Genomes Project repository at [<xref ref-type="bibr" rid="B24">24</xref>,<xref ref-type="bibr" rid="B25">25</xref>], respectively.</p>
      <p>Deletion calls were considered to be validated if supported by at least two non-duplicate PacBio split reads or at least one Moleculo split read. A supporting long-read is defined by the following criteria: 1) the long-read is split by the aligner such that at least 20 bp aligned to the flanking sequence on either side of the reported breakpoint; 2) the left and right intervals of the split long-read both intersect with the respective left and right intervals of reported breakpoint, allowing 5 bp of slop space on either side of the long-read breakpoint to account for microhomology or inserted sequence at the novel adjacency; 3) the strand orientation of the split long-read is consistent with the strand orientation at the reported breakpoint; 4) in the case of PacBio, where at least two non-duplicate long-reads are required to validate a call, the two long-reads must not only fill criteria 1 to 3, but must also overlap with each other within 5 bp of slop on either side.</p>
      <p>We performed Monte Carlo shuffling of the callsets to estimate the number of spurious long-read validations due to random chance. We shuffled each callset 100 times using BEDTools shuffle while retaining identical interval sizes, variant spans, and number of variants for each iteration [<xref ref-type="bibr" rid="B23">23</xref>]. Regions of the genome that were excluded from the original analyses were also excluded from the shuffling (see ‘Excluded regions’ section below). We then performed long-read validation as described above to each shuffled callset, with less than 3% of shuffled calls validating (Table <xref ref-type="table" rid="T1">1</xref>).</p>
    </sec>
    <sec>
      <title>Excluded regions</title>
      <p>For structural variation detection with LUMPY and other tools, we excluded regions of the reference genome with consistently high sequencing depth over multiple individuals, since high depth is indicative of artifacts in the reference assembly. To define these regions, we first aligned the 17-member CEPH 1463 pedigree to the GRCh37 human reference genome using BWA-MEM 0.7.5a-r405 (bwa mem -t 32 -M -p) [<xref ref-type="bibr" rid="B26">26</xref>]. Each member of the pedigree was whole-genome sequenced from a PCR-free library to 50X coverage with 101 bp reads, and is publicly available through the Illumina Platinum Genomes project [<xref ref-type="bibr" rid="B27">27</xref>]. We used BEDTools v2.17.0 to generate a BED graph of aggregate per-base coverage from all 17 individuals [<xref ref-type="bibr" rid="B23">23</xref>]. The mode and standard deviation of the aggregate depth were calculated separately for the autosomes and sex chromosomes. Any regions with depth exceeding 2 * mode + 3 standard deviations were excluded from our analyses. (We chose to double the mode to allow inclusion of duplicated copy number variant regions.) Finally, the mitochondrial chromosome was excluded entirely. A BED graph of the excluded regions can be obtained at [<xref ref-type="bibr" rid="B28">28</xref>].</p>
    </sec>
  </sec>
  <sec>
    <title>Abbreviations</title>
    <p>bp: base pair; CNV: copy number variation; FDR: false discovery rate; PacBio: Pacific Biosciences; PCR: polymerase chain reaction; SNP: single nucleotide polymorphism; SV: structural variation.</p>
  </sec>
  <sec>
    <title>Competing interests</title>
    <p>The authors declare that they have no competing interests.</p>
  </sec>
  <sec>
    <title>Authors’ contributions</title>
    <p>RL developed the algorithms, wrote the source code, performed the experiments and prepared the figures. CC performed the long-read SV validation experiments. AQ and IH conceived the framework, devised the experiments and co-advised the project. RL, AQ and IH contributed equally to the writing of the manuscript. All authors read and approved the final manuscript.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="S1">
      <caption>
        <title>Additional file 1</title>
        <p><bold>This file contains the breakpoints used for the homozygous variant simulation.</bold> The format is BEDPE. Each line has a ‘TYPE:’ field that indicates DELETION, DUPLICATION, INVERSION, or TRANSLOCATION.</p>
      </caption>
      <media xlink:href="gb-2014-15-6-r84-S1.zip">
        <caption>
          <p>Click here for file</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="S2">
      <caption>
        <title>Additional file 2</title>
        <p><bold>This file contains the breakpoints used for the heterogeneous tumor simulation.</bold> The format is BEDPE. These deletions are based on the variants released by the 1000 Genomes Project in [<xref ref-type="bibr" rid="B29">29</xref>]. We selected non-overlapping deletions that were at least 50 bases long and successfully lifted over from build 36 of the human reference genome to build 37.</p>
      </caption>
      <media xlink:href="gb-2014-15-6-r84-S2.zip">
        <caption>
          <p>Click here for file</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="S3">
      <caption>
        <title>Additional file 3</title>
        <p><bold>This file contains the breakpoints used for the Mills </bold><bold><italic>et al</italic></bold><bold>. truth set. </bold>The format is BEDPE, which is described by [<xref ref-type="bibr" rid="B30">30</xref>]. The breakpoints are the non-overlapping validated deletions observed in NA12878 and are based on the variants given in [<xref ref-type="bibr" rid="B31">31</xref>].</p>
      </caption>
      <media xlink:href="gb-2014-15-6-r84-S3.zip">
        <caption>
          <p>Click here for file</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="S4">
      <caption>
        <title>Additional file 4</title>
        <p><bold>This file contains the breakpoint intervals for the deletion predictions that were made by LUMPY (pe + sr, trio, prior, pe + sr&amp;rd), GASVPro, DELLY, Pindel, or the 1000 Genomes Project </bold>[<xref ref-type="bibr" rid="B12">12</xref>]<bold> and that were validated by long read alignments from PacBio and/or Illumina Moleculo sequencing.</bold> The format is BEDPE, and the score field indicates the number of overlapping predictions. Note: in some cases one algorithm made two predictions that contributed to a single call. For example, there are two calls with a score of 8. In both cases Pindel contributed two very similar calls.</p>
      </caption>
      <media xlink:href="gb-2014-15-6-r84-S4.zip">
        <caption>
          <p>Click here for file</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="S5">
      <caption>
        <title>Additional file 5</title>
        <p><bold>This file contains the calls made by LUMPY for NA12878 with paired-end and split-read evidence that were also validated with PacBio/Moleculo data.</bold> The format is BEDPE and the score field is the total amount of supporting evidence. This file contains extra fields that are described at [<xref ref-type="bibr" rid="B16">16</xref>].</p>
      </caption>
      <media xlink:href="gb-2014-15-6-r84-S5.zip">
        <caption>
          <p>Click here for file</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <sec>
    <title>Acknowledgements</title>
    <p>We thank G Faust for sharing unpublished SV simulation algorithms and for advising on simulation experiments, M Lindberg for code development, A Ritz and S Sindi for help with GASVPro, T Rausch for help with DELLY, and K Ye for help with Pindel. This work was supported by an NIH/NHGRI award to AQ (1R01HG006693-01) and an NIH New Innovator Award (DP2OD006493-01) and a Burroughs Wellcome Fund Career Award to IH.</p>
  </sec>
  <ref-list>
    <ref id="B1">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Alkan</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Coe</surname>
          <given-names>BP</given-names>
        </name>
        <name>
          <surname>Eichler</surname>
          <given-names>EE</given-names>
        </name>
        <article-title>Genome structural variation discovery and genotyping</article-title>
        <source>Nat Rev Genet</source>
        <year>2011</year>
        <volume>12</volume>
        <fpage>363</fpage>
        <lpage>376</lpage>
        <pub-id pub-id-type="pmid">21358748</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B2">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Medvedev</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Stanciu</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Brudno</surname>
          <given-names>M</given-names>
        </name>
        <article-title>Computational methods for discovering structural variation with next-generation sequencing</article-title>
        <source>Nat Methods</source>
        <year>2009</year>
        <volume>6</volume>
        <fpage>S13</fpage>
        <lpage>S20</lpage>
        <pub-id pub-id-type="pmid">19844226</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B3">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Rausch</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Zichner</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Schlattl</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Stutz</surname>
          <given-names>AM</given-names>
        </name>
        <name>
          <surname>Benes</surname>
          <given-names>V</given-names>
        </name>
        <name>
          <surname>Korbel</surname>
          <given-names>JO</given-names>
        </name>
        <article-title>DELLY: structural variant discovery by integrated paired-end and split-read analysis</article-title>
        <source>Bioinformatics</source>
        <year>2012</year>
        <volume>28</volume>
        <fpage>i333</fpage>
        <lpage>i339</lpage>
        <pub-id pub-id-type="pmid">22962449</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B4">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Sindi</surname>
          <given-names>SS</given-names>
        </name>
        <name>
          <surname>Onal</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Peng</surname>
          <given-names>LC</given-names>
        </name>
        <name>
          <surname>Wu</surname>
          <given-names>HT</given-names>
        </name>
        <name>
          <surname>Raphael</surname>
          <given-names>BJ</given-names>
        </name>
        <article-title>An integrative probabilistic model for identification of structural variation in sequencing data</article-title>
        <source>Genome Biol</source>
        <year>2012</year>
        <volume>13</volume>
        <fpage>R22</fpage>
        <pub-id pub-id-type="pmid">22452995</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B5">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Handsaker</surname>
          <given-names>RE</given-names>
        </name>
        <name>
          <surname>Korn</surname>
          <given-names>JM</given-names>
        </name>
        <name>
          <surname>Nemesh</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>McCarroll</surname>
          <given-names>SA</given-names>
        </name>
        <article-title>Discovery and genotyping of genome structural polymorphism by sequencing on a population scale</article-title>
        <source>Nat Genet</source>
        <year>2011</year>
        <volume>43</volume>
        <fpage>269</fpage>
        <lpage>276</lpage>
        <pub-id pub-id-type="pmid">21317889</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B6">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Wang</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Mullighan</surname>
          <given-names>CG</given-names>
        </name>
        <name>
          <surname>Easton</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Roberts</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Heatley</surname>
          <given-names>SL</given-names>
        </name>
        <name>
          <surname>Ma</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Rusch</surname>
          <given-names>MC</given-names>
        </name>
        <name>
          <surname>Chen</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>Harris</surname>
          <given-names>CC</given-names>
        </name>
        <name>
          <surname>Ding</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Holmfeldt</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Payne-Turner</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Fan</surname>
          <given-names>X</given-names>
        </name>
        <name>
          <surname>Wei</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Zhao</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Obenauer</surname>
          <given-names>JC</given-names>
        </name>
        <name>
          <surname>Naeve</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Mardis</surname>
          <given-names>ER</given-names>
        </name>
        <name>
          <surname>Wilson</surname>
          <given-names>RK</given-names>
        </name>
        <name>
          <surname>Downing</surname>
          <given-names>JR</given-names>
        </name>
        <name>
          <surname>Zhang</surname>
          <given-names>J</given-names>
        </name>
        <article-title>CREST maps somatic structural variation in cancer genomes with base-pair resolution</article-title>
        <source>Nat Methods</source>
        <year>2011</year>
        <volume>8</volume>
        <fpage>652</fpage>
        <lpage>654</lpage>
        <pub-id pub-id-type="pmid">21666668</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B7">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Medvedev</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Fiume</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Dzamba</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Smith</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Brudno</surname>
          <given-names>M</given-names>
        </name>
        <article-title>Detecting copy number variation with mated short reads</article-title>
        <source>Genome Res</source>
        <year>2010</year>
        <volume>20</volume>
        <fpage>1613</fpage>
        <lpage>1622</lpage>
        <pub-id pub-id-type="pmid">20805290</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B8">
      <mixed-citation publication-type="other">
        <article-title>Novoalign</article-title>
        <comment>[<ext-link ext-link-type="uri" xlink:href="http://www.novocraft.com">http://www.novocraft.com</ext-link>]</comment>
      </mixed-citation>
    </ref>
    <ref id="B9">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Li</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Durbin</surname>
          <given-names>R</given-names>
        </name>
        <article-title>Fast and accurate short read alignment with Burrows-Wheeler transform</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>2</volume>
        <fpage>1754</fpage>
        <lpage>1760</lpage>
        <pub-id pub-id-type="pmid">19451168</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B10">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Faust</surname>
          <given-names>GG</given-names>
        </name>
        <name>
          <surname>Hall</surname>
          <given-names>IM</given-names>
        </name>
        <article-title>YAHA: fast and flexible long-read alignment with optimal breakpoint detection</article-title>
        <source>Bioinformatics</source>
        <year>2012</year>
        <volume>28</volume>
        <fpage>2417</fpage>
        <lpage>2424</lpage>
        <pub-id pub-id-type="pmid">22829624</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B11">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Li</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Durbin</surname>
          <given-names>R</given-names>
        </name>
        <article-title>Fast and accurate long-read alignment with Burrows-Wheeler transform</article-title>
        <source>Bioinformatics</source>
        <year>2010</year>
        <volume>26</volume>
        <fpage>589</fpage>
        <lpage>595</lpage>
        <pub-id pub-id-type="pmid">20080505</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B12">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Mills</surname>
          <given-names>RE</given-names>
        </name>
        <name>
          <surname>Walter</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>Stewart</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Handsaker</surname>
          <given-names>RE</given-names>
        </name>
        <name>
          <surname>Chen</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>Alkan</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Abyzov</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Yoon</surname>
          <given-names>SC</given-names>
        </name>
        <name>
          <surname>Ye</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>Cheetham</surname>
          <given-names>RK</given-names>
        </name>
        <name>
          <surname>Chinwalla</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Conrad</surname>
          <given-names>DF</given-names>
        </name>
        <name>
          <surname>Fu</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Grubert</surname>
          <given-names>F</given-names>
        </name>
        <name>
          <surname>Hajirasouliha</surname>
          <given-names>I</given-names>
        </name>
        <name>
          <surname>Hormozdiari</surname>
          <given-names>F</given-names>
        </name>
        <name>
          <surname>Iakoucheva</surname>
          <given-names>LM</given-names>
        </name>
        <name>
          <surname>Iqbal</surname>
          <given-names>Z</given-names>
        </name>
        <name>
          <surname>Kang</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Kidd</surname>
          <given-names>JM</given-names>
        </name>
        <name>
          <surname>Konkel</surname>
          <given-names>MK</given-names>
        </name>
        <name>
          <surname>Korn</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Khurana</surname>
          <given-names>E</given-names>
        </name>
        <name>
          <surname>Kural</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Lam</surname>
          <given-names>HY</given-names>
        </name>
        <name>
          <surname>Leng</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Li</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Li</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Lin</surname>
          <given-names>CY</given-names>
        </name>
        <name>
          <surname>Luo</surname>
          <given-names>R</given-names>
        </name>
        <etal/>
        <article-title>Mapping copy number variation by population-scale genome sequencing</article-title>
        <source>Nature</source>
        <year>2011</year>
        <volume>470</volume>
        <fpage>59</fpage>
        <lpage>65</lpage>
        <pub-id pub-id-type="pmid">21293372</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B13">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Abyzov</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Urban</surname>
          <given-names>AE</given-names>
        </name>
        <name>
          <surname>Snyder</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Gerstein</surname>
          <given-names>M</given-names>
        </name>
        <article-title>CNVnator: an approach to discover, genotype, and characterize typical and atypical CNVs from family and population genome sequencing</article-title>
        <source>Genome Res</source>
        <year>2011</year>
        <volume>21</volume>
        <fpage>974</fpage>
        <lpage>984</lpage>
        <pub-id pub-id-type="pmid">21324876</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B14">
      <mixed-citation publication-type="journal">
        <name>
          <surname>DePristo</surname>
          <given-names>MA</given-names>
        </name>
        <name>
          <surname>Banks</surname>
          <given-names>E</given-names>
        </name>
        <name>
          <surname>Poplin</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Garimella</surname>
          <given-names>KV</given-names>
        </name>
        <name>
          <surname>Maguire</surname>
          <given-names>JR</given-names>
        </name>
        <name>
          <surname>Hartl</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Philippakis</surname>
          <given-names>AA</given-names>
        </name>
        <name>
          <surname>del Angel</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Rivas</surname>
          <given-names>MA</given-names>
        </name>
        <name>
          <surname>Hanna</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>McKenna</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Fennell</surname>
          <given-names>TJ</given-names>
        </name>
        <name>
          <surname>Kernytsky</surname>
          <given-names>AM</given-names>
        </name>
        <name>
          <surname>Sivachenko</surname>
          <given-names>AY</given-names>
        </name>
        <name>
          <surname>Cibulskis</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>Gabriel</surname>
          <given-names>SB</given-names>
        </name>
        <name>
          <surname>Altshuler</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Daly</surname>
          <given-names>MJ</given-names>
        </name>
        <article-title>A framework for variation discovery and genotyping using next-generation DNA sequencing data</article-title>
        <source>Nat Genet</source>
        <year>2011</year>
        <volume>43</volume>
        <fpage>491</fpage>
        <lpage>498</lpage>
        <pub-id pub-id-type="pmid">21478889</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B15">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Hormozdiari</surname>
          <given-names>F</given-names>
        </name>
        <name>
          <surname>Hajirasouliha</surname>
          <given-names>I</given-names>
        </name>
        <name>
          <surname>McPherson</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Eichler</surname>
          <given-names>EE</given-names>
        </name>
        <name>
          <surname>Sahinalp</surname>
          <given-names>SC</given-names>
        </name>
        <article-title>Simultaneous structural variation discovery among multiple paired-end sequenced genomes</article-title>
        <source>Genome Res</source>
        <year>2011</year>
        <volume>21</volume>
        <fpage>2203</fpage>
        <lpage>2212</lpage>
        <pub-id pub-id-type="pmid">22048523</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B16">
      <mixed-citation publication-type="other">
        <article-title>LUMPY</article-title>
        <comment>[<ext-link ext-link-type="uri" xlink:href="https://github.com/arq5x/lumpy-sv">https://github.com/arq5x/lumpy-sv</ext-link>]</comment>
      </mixed-citation>
    </ref>
    <ref id="B17">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Li</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Handsaker</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Wysoker</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Fennell</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Ruan</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Homer</surname>
          <given-names>N</given-names>
        </name>
        <name>
          <surname>Marth</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Abecasis</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Durbin</surname>
          <given-names>R</given-names>
        </name>
        <article-title>The Sequence Alignment/Map format and SAMtools</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <fpage>2078</fpage>
        <lpage>2079</lpage>
        <pub-id pub-id-type="pmid">19505943</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B18">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Ye</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>Schulz</surname>
          <given-names>MH</given-names>
        </name>
        <name>
          <surname>Long</surname>
          <given-names>Q</given-names>
        </name>
        <name>
          <surname>Apweiler</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Ning</surname>
          <given-names>Z</given-names>
        </name>
        <article-title>Pindel: a pattern growth approach to detect break points of large deletions and medium sized insertions from paired-end short reads</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <fpage>2865</fpage>
        <lpage>2871</lpage>
        <pub-id pub-id-type="pmid">19561018</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B19">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Chen</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>Wallis</surname>
          <given-names>JW</given-names>
        </name>
        <name>
          <surname>McLellan</surname>
          <given-names>MD</given-names>
        </name>
        <name>
          <surname>Larson</surname>
          <given-names>DE</given-names>
        </name>
        <name>
          <surname>Kalicki</surname>
          <given-names>JM</given-names>
        </name>
        <name>
          <surname>Pohl</surname>
          <given-names>CS</given-names>
        </name>
        <name>
          <surname>McGrath</surname>
          <given-names>SD</given-names>
        </name>
        <name>
          <surname>Wendl</surname>
          <given-names>MC</given-names>
        </name>
        <name>
          <surname>Zhang</surname>
          <given-names>Q</given-names>
        </name>
        <name>
          <surname>Locke</surname>
          <given-names>DP</given-names>
        </name>
        <name>
          <surname>Shi</surname>
          <given-names>X</given-names>
        </name>
        <name>
          <surname>Fulton</surname>
          <given-names>RS</given-names>
        </name>
        <name>
          <surname>Ley</surname>
          <given-names>TJ</given-names>
        </name>
        <name>
          <surname>Wilson</surname>
          <given-names>RK</given-names>
        </name>
        <name>
          <surname>Ding</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Mardis</surname>
          <given-names>ER</given-names>
        </name>
        <article-title>BreakDancer: an algorithm for high-resolution mapping of genomic structural variation</article-title>
        <source>Nat Methods</source>
        <year>2009</year>
        <volume>6</volume>
        <fpage>677</fpage>
        <lpage>681</lpage>
        <pub-id pub-id-type="pmid">19668202</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B20">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Quinlan</surname>
          <given-names>AR</given-names>
        </name>
        <name>
          <surname>Clark</surname>
          <given-names>RA</given-names>
        </name>
        <name>
          <surname>Sokolova</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Leibowitz</surname>
          <given-names>ML</given-names>
        </name>
        <name>
          <surname>Zhang</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Hurles</surname>
          <given-names>ME</given-names>
        </name>
        <name>
          <surname>Mell</surname>
          <given-names>JC</given-names>
        </name>
        <name>
          <surname>Hall</surname>
          <given-names>IM</given-names>
        </name>
        <article-title>Genome-wide mapping and assembly of structural variant breakpoints in the mouse genome</article-title>
        <source>Genome Res</source>
        <year>2010</year>
        <volume>20</volume>
        <fpage>623</fpage>
        <lpage>635</lpage>
        <pub-id pub-id-type="pmid">20308636</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B21">
      <mixed-citation publication-type="other">
        <article-title>SVsim</article-title>
        <comment>[<ext-link ext-link-type="uri" xlink:href="https://github.com/GregoryFaust/SVsim">https://github.com/GregoryFaust/SVsim</ext-link>]</comment>
      </mixed-citation>
    </ref>
    <ref id="B22">
      <mixed-citation publication-type="other">
        <article-title>WGSIM</article-title>
        <comment>[<ext-link ext-link-type="uri" xlink:href="https://github.com/lh3/wgsim">https://github.com/lh3/wgsim</ext-link>]</comment>
      </mixed-citation>
    </ref>
    <ref id="B23">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Quinlan</surname>
          <given-names>AR</given-names>
        </name>
        <name>
          <surname>Hall</surname>
          <given-names>IM</given-names>
        </name>
        <article-title>BEDTools: a flexible suite of utilities for comparing genomic features</article-title>
        <source>Bioinformatics</source>
        <year>2010</year>
        <volume>26</volume>
        <fpage>841</fpage>
        <lpage>842</lpage>
        <pub-id pub-id-type="pmid">20110278</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B24">
      <mixed-citation publication-type="other">
        <article-title>Long-read Pacific Biosciences sequencing of NA12878</article-title>
        <comment>[<ext-link ext-link-type="ftp" xlink:href="ftp://ftp-trace.ncbi.nih.gov/1000genomes/ftp/technical/working/20131209_na12878_pacbio/Schadt/">ftp://ftp-trace.ncbi.nih.gov/1000genomes/ftp/technical/working/20131209_na12878_pacbio/Schadt/</ext-link>]</comment>
      </mixed-citation>
    </ref>
    <ref id="B25">
      <mixed-citation publication-type="other">
        <article-title>Long-read Moleculo sequencings of NA12878</article-title>
        <comment>[<ext-link ext-link-type="ftp" xlink:href="ftp://ftp-trace.ncbi.nih.gov/1000genomes/ftp/technical/working/20131209_na12878_moleculo/">ftp://ftp-trace.ncbi.nih.gov/1000genomes/ftp/technical/working/20131209_na12878_moleculo/</ext-link>]</comment>
      </mixed-citation>
    </ref>
    <ref id="B26">
      <mixed-citation publication-type="other">
        <name>
          <surname>Li</surname>
          <given-names>H</given-names>
        </name>
        <article-title>Aligning sequence reads, clone sequences and assembly contigs with BWA-MEM</article-title>
        <comment>[<ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/1303.3997">http://arxiv.org/abs/1303.3997</ext-link>]</comment>
      </mixed-citation>
    </ref>
    <ref id="B27">
      <mixed-citation publication-type="other">
        <article-title>Deep whole genome Illumina paired-end sequence data for the CEPH 1463 family</article-title>
        <comment>[<ext-link ext-link-type="uri" xlink:href="http://www.ebi.ac.uk/ena/data/view/ERP001775">http://www.ebi.ac.uk/ena/data/view/ERP001775</ext-link>]</comment>
      </mixed-citation>
    </ref>
    <ref id="B28">
      <mixed-citation publication-type="other">
        <article-title>Regions excluded to do abnormally high coverage</article-title>
        <comment>[<ext-link ext-link-type="uri" xlink:href="https://github.com/cc2qe/speedseq/blob/master/annotations/ceph18.b37.lumpy.exclude.2014-01-15.bed">https://github.com/cc2qe/speedseq/blob/master/annotations/ceph18.b37.lumpy.exclude.2014-01-15.bed</ext-link>]</comment>
      </mixed-citation>
    </ref>
    <ref id="B29">
      <mixed-citation publication-type="other">
        <article-title>Variants released by the 1000 Genomes Project</article-title>
        <comment>[<ext-link ext-link-type="ftp" xlink:href="ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/release/20110521/ALL.wgs.phase1_release_v3.20101123.snps_indels_sv.sites.vcf.gz">ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/release/20110521/ALL.wgs.phase1_release_v3.20101123.snps_indels_sv.sites.vcf.gz</ext-link>]</comment>
      </mixed-citation>
    </ref>
    <ref id="B30">
      <mixed-citation publication-type="other">
        <article-title>The BEDPE file format specification</article-title>
        <comment>[<ext-link ext-link-type="uri" xlink:href="http://bedtools.readthedocs.org/en/latest/content/general-usage.html#bedpe-format">http://bedtools.readthedocs.org/en/latest/content/general-usage.html#bedpe-format</ext-link>]</comment>
      </mixed-citation>
    </ref>
    <ref id="B31">
      <mixed-citation publication-type="other">
        <article-title>Validated variants from the NA12878 genome</article-title>
        <comment>[<ext-link ext-link-type="uri" xlink:href="http://www.nature.com/nature/journal/v470/n7332/extref/nature09708-s5.zip">http://www.nature.com/nature/journal/v470/n7332/extref/nature09708-s5.zip</ext-link>]</comment>
      </mixed-citation>
    </ref>
  </ref-list>
</back>

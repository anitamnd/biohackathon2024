<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">7137194</article-id>
    <article-id pub-id-type="publisher-id">3463</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-020-3463-4</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>ORdensity: user-friendly R package to identify differentially expressed genes</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Martínez-Otzeta</surname>
          <given-names>José María</given-names>
        </name>
        <address>
          <email>josemaria.martinezo@ehu.eus</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Irigoien</surname>
          <given-names>Itziar</given-names>
        </name>
        <address>
          <email>itziar.irigoien@ehu.eus</email>
        </address>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Sierra</surname>
          <given-names>Basilio</given-names>
        </name>
        <address>
          <email>b.sierra@ehu.eus</email>
        </address>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-6489-4934</contrib-id>
        <name>
          <surname>Arenas</surname>
          <given-names>Concepción</given-names>
        </name>
        <address>
          <email>carenas@ub.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff4">4</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="ISNI">0000000121671098</institution-id><institution-id institution-id-type="GRID">grid.11480.3c</institution-id><institution>Department of Computation Science and Artificial Intelligence, University of the Basque Country UPV/EHU, </institution></institution-wrap>Donostia, Spain </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ISNI">0000000121671098</institution-id><institution-id institution-id-type="GRID">grid.11480.3c</institution-id><institution>Department of Computation Science and Artificial Intelligence, University of the Basque Country UPV/EHU, </institution></institution-wrap>Donostia, Spain </aff>
      <aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="ISNI">0000000121671098</institution-id><institution-id institution-id-type="GRID">grid.11480.3c</institution-id><institution>Department of Computation Science and Artificial Intelligence, University of the Basque Country UPV/EHU, </institution></institution-wrap>Donostia, Spain </aff>
      <aff id="Aff4"><label>4</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0004 1937 0247</institution-id><institution-id institution-id-type="GRID">grid.5841.8</institution-id><institution>Department of Genetics, Microbiology and Statistics, University of Barcelona, </institution></institution-wrap>Barcelona, Spain </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>7</day>
      <month>4</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>7</day>
      <month>4</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2020</year>
    </pub-date>
    <volume>21</volume>
    <elocation-id>135</elocation-id>
    <history>
      <date date-type="received">
        <day>30</day>
        <month>5</month>
        <year>2019</year>
      </date>
      <date date-type="accepted">
        <day>20</day>
        <month>3</month>
        <year>2020</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2020</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article’s Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article’s Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">Microarray technology provides the expression level of many genes. Nowadays, an important issue is to select a small number of informative differentially expressed genes that provide biological knowledge and may be key elements for a disease. With the increasing volume of data generated by modern biomedical studies, software is required for effective identification of differentially expressed genes. Here, we describe an R package, called ORdensity, that implements a recent methodology (Irigoien and Arenas, 2018) developed in order to identify differentially expressed genes. The benefits of parallel implementation are discussed.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">ORdensity gives the user the list of genes identified as differentially expressed genes in an easy and comprehensible way. The experimentation carried out in an off-the-self computer with the parallel execution enabled shows an improvement in run-time. This implementation may also lead to an important use of memory load. Results previously obtained with simulated and real data indicated that the procedure implemented in the package is robust and suitable for differentially expressed genes identification.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p id="Par3">The new package, ORdensity, offers a friendly and easy way to identify differentially expressed genes, which is very useful for users not familiar with programming.</p>
      </sec>
      <sec>
        <title>Availability</title>
        <p id="Par4">https://github.com/rsait/ORdensity
</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Differentially expressed gene</kwd>
      <kwd>Multivariate statistics</kwd>
      <kwd>Outlier</kwd>
      <kwd>Parallel implementation</kwd>
      <kwd>Quantile</kwd>
      <kwd>R package</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100003329</institution-id>
            <institution>Ministerio de Econom?a y Competitividad</institution>
          </institution-wrap>
        </funding-source>
        <award-id>RTI2018-093337-B-I00</award-id>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100003329</institution-id>
            <institution>Ministerio de Econom?a y Competitividad</institution>
          </institution-wrap>
        </funding-source>
        <award-id>TI2018-100968-B-I00</award-id>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2020</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p>Analysis of gene expression using microarray or RNA-Seq technologies is a very important task and the main goal is to identify a small number of informative genes whose patterns of expression differ according to the experimental conditions. An important challenge is the discovery of these differentially expressed genes (DEGs). This is because there is a large number of genes, a relatively small number of samples and it is important to identify which genes, independent of the sample studied of the same disease, are selected as DE genes. In order to identify a list of DEGs, different procedures were introduced in the scientific community. Significance Analysis of Microarrays (SAM) [<xref ref-type="bibr" rid="CR1">1</xref>] works with a modified t-test introducing a factor to minimize the effect of small per-gene variances. An integrated solution for analyzing data from gene expression experiments is provided by limma [<xref ref-type="bibr" rid="CR2">2</xref>, <xref ref-type="bibr" rid="CR3">3</xref>], an R package for Bioconductor [<xref ref-type="bibr" rid="CR4">4</xref>]. The empirical Bayes method (eBayes) [<xref ref-type="bibr" rid="CR5">5</xref>] also uses moderated t-statistics, where, instead of the global or single gene estimated variances, a weighted average of the global and single-gene variances is used. A different approach, the ORdensity procedure, was recently introduced [<xref ref-type="bibr" rid="CR6">6</xref>]. This method returns three measures which are related to the concepts of outlier and density of false positives in a neighbourhood, and this allow us to identify the DEGs with high classification accuracy. The first measure is an index called OR, previously introduced in [<xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR8">8</xref>], that identifies outliers; the other two measures, called false positives in a neighbourhood (FP), and density of false positives in a neighbourhood (dFP) were introduced in [<xref ref-type="bibr" rid="CR6">6</xref>]. This new procedure has been implemented in the ORdensity package described below.</p>
    <p>Ideally, effective software making the identification of differentially expressed genes possible on desktop computers should facilitate data manipulation and should be easy to carry out. It should also offer understandable outputs to give access to a wide range of users. Furthermore, due to the large dimensionality of the data sets used it should implement fast procedures. With these objectives in mind, we developed the ORdensity software implemented as an R package and offers a friendly and easy-to-use tool to perform the ORdensity method.</p>
  </sec>
  <sec id="Sec2">
    <title>Implementation</title>
    <p>In this section, the structure of the package and the functions implemented are explained. The ORdensity package was developed for the free statistical R environment (http://www.r-project.org) and runs under all major operating systems. We do not delve into details of the underlying statistical methodology that can be consulted in [<xref ref-type="bibr" rid="CR6">6</xref>], and only the main results are presented.</p>
    <sec id="Sec3">
      <title>Background</title>
      <p>Let <italic>M</italic> be an <italic>n</italic>×<italic>s</italic> matrix containing the expression level of <italic>n</italic> genes under two experimental conditions measured in <italic>s</italic><sub>1</sub> and <italic>s</italic><sub>2</sub> samples for experimental condition 1 and 2, respectively (<italic>s</italic><sub>1</sub>+<italic>s</italic><sub>2</sub>=<italic>s</italic>). Let <italic>X</italic><sub><italic>g</italic></sub> and <italic>Y</italic><sub><italic>g</italic></sub> be the random variables representing the expression level of gene <italic>g</italic> in conditions 1 and 2, respectively (<italic>g</italic>=1,...,<italic>n</italic>). The proposed approach focuses on the differences of quantiles between samples: <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$V_{gp} =F_{X_{g}}^{-1}(p)- F_{Y_{g}}^{-1}(p)$\end{document}</tex-math><mml:math id="M2"><mml:msub><mml:mrow><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">gp</mml:mtext></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msubsup><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>)</mml:mo><mml:mo>−</mml:mo><mml:msubsup><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>Y</mml:mi></mml:mrow><mml:mrow><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12859_2020_3463_Article_IEq1.gif"/></alternatives></inline-formula>, <italic>p</italic>∈<italic>C</italic><sub><italic>p</italic></sub> where <italic>C</italic><sub><italic>p</italic></sub> is a set of probabilities. As we can observe in Fig. <xref rid="Fig1" ref-type="fig">1</xref>, a gene <italic>g</italic>, whose expressions under the two conditions were considered not differentially expressed (left) would verify that <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$F_{X_{g}}^{-1}(p) = F_{Y_{g}}^{-1}(p)$\end{document}</tex-math><mml:math id="M4"><mml:msubsup><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:msubsup><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>Y</mml:mi></mml:mrow><mml:mrow><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12859_2020_3463_Article_IEq2.gif"/></alternatives></inline-formula>, where <italic>F</italic> is the cumulative distribution function, and <italic>p</italic>∈[0,1]. Otherwise, gene <italic>g</italic> is differentially expressed or it is important (right). Therefore, matrix <bold>V</bold>=(<italic>v</italic><sub><italic>gp</italic></sub>) with <inline-formula id="IEq3"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$v_{gp} = \hat {F}_{X_{g}}^{-1}(p)- \hat {F}_{Y_{g}}^{-1}(p)$\end{document}</tex-math><mml:math id="M6"><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">gp</mml:mtext></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msubsup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mo>^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>)</mml:mo><mml:mo>−</mml:mo><mml:msubsup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mo>^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>Y</mml:mi></mml:mrow><mml:mrow><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12859_2020_3463_Article_IEq3.gif"/></alternatives></inline-formula>, for <italic>g</italic>=1,…,<italic>G</italic> and <italic>p</italic>∈<italic>C</italic><sub><italic>p</italic></sub> must contain small values corresponding to the majority of no DEGs. The most differentially expressed genes should show a different behaviour, hence, they can be considered as outliers in <bold>V</bold>. Thus, the approach attempts to find outliers in <bold>V</bold> which can be identified as differentially expressed genes. In a first step, given a fixed <italic>α</italic>∈(0,1), the procedure reduces the number of genes selecting <italic>potential</italic> differentially expressed genes. In a second step, the method identifies the differential expressed genes among the <italic>potential</italic> ones using three indexes. The index <italic>OR</italic>, previously introduced in [<xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR8">8</xref>], which identifies outliers, and two measures called false positives in a <italic>K</italic>-Nearest Neighbourhood (FP) and density of false positives in a <italic>K</italic>-Nearest Neighbourhood (dFP) that are related with the false positives obtained by the permutation sampling (see [<xref ref-type="bibr" rid="CR6">6</xref>] for more details about these indexes, <italic>Subsections 2.1</italic> and <italic>2.2</italic>). Furthermore, the procedure clusters the <italic>potential</italic> DE genes according to the values of these indexes. The motivation behind the clustering is to distinguish those false positive genes that score high in OR and low in mean FP and density, but are similar to simulated permuted cases and we can therefore conclude they are not genuinely DEGs.
<fig id="Fig1"><label>Fig. 1</label><caption><p>Visualization of <inline-formula id="IEq4"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\hat {F}_{X_g}^{-1}(p)- \hat {F}_{Y_g}^{-1}(p)$\end{document}</tex-math><mml:math id="M8"><mml:msubsup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mo>^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>)</mml:mo><mml:mo>−</mml:mo><mml:msubsup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mo>^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>Y</mml:mi></mml:mrow><mml:mrow><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12859_2020_3463_Article_IEq4.gif"/></alternatives></inline-formula> differences for <italic>p</italic>∈<italic>C</italic><sub><italic>p</italic></sub>={0.25,0.5,0.75} for two genes. In the left side, a gene whose expressions in conditions X and Y are not differentially expressed (No DE gene); in the right side, a gene that is differentially expressed in conditions X and Y (DE gene)</p></caption><graphic xlink:href="12859_2020_3463_Fig1_HTML" id="MO1"/></fig></p>
    </sec>
    <sec id="Sec4">
      <title>Input</title>
      <p>The input data are the corresponding expression level of <italic>n</italic> genes under two experimental conditions measured in <italic>s</italic><sub>1</sub> and <italic>s</italic><sub>2</sub> samples. Let M1 and M2 be the two <italic>n</italic>×<italic>s</italic><sub>1</sub> and <italic>n</italic>×<italic>s</italic><sub>2</sub> matrices containing the samples for the experimental conditions 1 and 2, respectively. As the package does not include any pre-processing algorithm, if it is necessary, matrices M1 and M2 must be previously normalized or transformed in a convenient way. The aforementioned first step of the method is carried out by building the object called ORdensity.</p>
    </sec>
    <sec id="Sec5">
      <title>ORdensity object</title>
      <p>The ORdensity object is an S4 class created to gather the <italic>potential</italic> differentially expressed genes given a value <italic>α</italic>∈(0,1). The object has the following slots:
<list list-type="bullet"><list-item><p><bold>Slots</bold></p><p>Exp_cond_1 = ~matrix~, Exp_cond_2 = ~matrix~, the two matrices M1 and M2 (<italic>n</italic>×<italic>s</italic><sub>1</sub> and <italic>n</italic>×<italic>s</italic><sub>2</sub>) containing the expression level for each gene under the two experimental conditions.</p><p>labels, vector of characters identifying the genes, by default rownames(Exp_cond_1) is inherited. If NULL, the genes are named ‘Gene1’, …, ‘Gene<italic>n</italic>’ according to the order given in Exp_cond_1.</p><p>B = ~numeric~, by default the method considers 100 permutations in order to generate values associated with genes which are not differentially expressed (see [<xref ref-type="bibr" rid="CR6">6</xref>], Subsection <italic>First step: finding potential differentially expressed genes</italic>).</p><p>scale = ~logical~, by default scale = TRUE. It is advisable to scale the differences between quantiles when the variability of genes among different types of samples is different.</p><p>alpha = ~numeric~, by default alpha = 0.05 is the value used by the method to calculate the percentile (1−<italic>α</italic>)100<italic>%</italic> of all the elements of the matrix with the permuted samples. Only genes with <italic>OR</italic> value above the (1−<italic>α</italic>)100<italic>%</italic> percentile in the permuted distribution are considered as <italic>potential</italic> DEGs.</p><p>fold = ~numeric~, by default fold = 10 (see [<xref ref-type="bibr" rid="CR6">6</xref>], Subsection <italic>Second step: identifying differentially expressed genes</italic> and <italic>Note 3</italic>).</p><p>probs = ~numeric~, by default probs = c(0.25, 0.5, 0.75) are the considered quantiles.</p><p>weights = ~numeric~, by default weights = c(0.25, 0.5, 0.25) are the weights given to the considered quantiles in probs. It may be interesting to give greater importance to some of them, therefore different weights can be introduced.</p><p>numneighbours = ~numeric~, number of Nearest-Neighbours to consider, by default.</p><p>numneighbours = 10</p><p>numclustoseek = ~numeric~, maximum number of clusters that are considered when looking for the best partition, by default numclustoseek = 10.</p><p>parallel = ~logical~, by default, no parallelizing is enabled. To enable it, set parallel = TRUE.</p><p>nprocs = ~numeric~, number of processes launched when the option parallel is enabled. The default value is the number of processors.</p><p>replicable = ~logical~ and seed =~numeric~, it is also possible to enable or disable replicability, and to pass the seed to the pseudorandom number generator. The default values are replicable = TRUE, seed = 0 with the function using the given seed to set the random generator. If replicable = FALSE, no seed is used.</p></list-item><list-item><p><bold>Usage</bold></p><p>Following the standard procedure in R, an instance of a class ORdensity is created via the new() constructer function:</p><p>new(~ORdensity~, Exp_cond_1 = M1, Exp_cond_2 = M2)</p><p>Slots Exp_cond_1 and Exp_cond_2 are compulsory since they contain the expression level of genes. When a slot is not specified, the default value is considered. First, the S4 object of class ORdensity must be created. Then, the <italic>potential</italic> DEGs are identified and gathered in the object itself. The rest of the functions in the package are based on this object so that useful information for the user is extracted and computed.</p></list-item></list></p>
      <sec id="Sec6">
        <title>Function summary</title>
        <p>Once the <italic>potential</italic> DEGs genes are in the object ORdensity, it is important to find out what the main patterns among them are. That means to look for clusters of genes that have similar <italic>OR</italic>, <italic>FP</italic> and <italic>dFP</italic> values. The motivation of the clustering is to distinguish those false positives that score high in <italic>OR</italic> and low in mean <italic>FP</italic> and density, but are similar to other known false positives obtained by the permutation sampling. The <italic>potential</italic> genes are clustered using the Partition Around Medoids (PAM) method [<xref ref-type="bibr" rid="CR9">9</xref>] based on indexes <italic>OR</italic>, <italic>FP</italic> and <italic>dFP</italic> once they are scaled. By default, the number of clusters is selected according to the silhouette analysis [<xref ref-type="bibr" rid="CR10">10</xref>]. Function summary provides a general overview of the obtained clusters. It returns the number of <italic>potential</italic> genes in each cluster, the characteristics of the clusters in terms of the indexes <italic>OR</italic>, <italic>FP</italic> and <italic>dFP</italic> and also the identification labels of the genes in the cluster.
<list list-type="bullet"><list-item><p><bold>Usage</bold></p><p>summary(object, numclusters)</p></list-item><list-item><p><bold>Arguments</bold></p><p>object, an object of class ORdensity.</p><p>numclusters, optional, an integer number indicating the number of clusters the genes are partioned. By default NULL, the number of clusters is calculated according to silhouette index as mentioned before.</p></list-item><list-item><p><bold>Value</bold></p><p>A list of <italic>k</italic> lists where <italic>k</italic> is the best number of clusters found. The clusters are ordered based on their importance, that is, the first one is the most important and the last one is the least important, in the sense that the most differentially expressed genes will be in the first cluster, and so on. Each list has the elements:</p><p>numberOfGenes, number of genes in the cluster.</p><p>CharacteristicsCluster, matrix with mean values and standard deviation of variables <italic>OR</italic>, <italic>FP</italic> and <italic>dFP</italic> for each cluster.</p><p>genes, identification of the genes in the cluster.</p></list-item></list></p>
      </sec>
      <sec id="Sec7">
        <title>Function findDEgenes and function preclusteredData</title>
        <p>We should also check a more detailed summary of the object and obtain the genes identified as DE genes. Following [<xref ref-type="bibr" rid="CR6">6</xref>], two types of differentially expressed gene selection can be made:</p>
        <p><bold>ORdensity strong selection:</bold> take as differentially expressed genes those with a large <italic>OR</italic> value and with <italic>FP</italic> and <italic>dFP</italic> equal to 0.</p>
        <p><bold>ORdensity relaxed selection:</bold> take as differentially expressed genes those with a large <italic>OR</italic> value and with small <italic>FP</italic> and <italic>dFP</italic> values. As a reference to look for small values of <italic>FP</italic> and <italic>dFP</italic>, the expected number of false positive neighbours is computed.</p>
        <p>Function findDEgenes gives the genes identified as DE according to the strong and relaxed selection. The genes are presented in the clusters obtained, by default, using the PAM method and the silhouette index as previously mentioned. For those users that want to study different clustering methods, function preclusteredData offers the description of all the <italic>potential</italic> DE genes in terms of indexes <italic>OR</italic>, <italic>FP</italic> and <italic>dFP</italic> in only one table. Therefore, the user can easily apply different approaches in order to discover similar gene patterns.</p>
        <p>
          <italic>2.3.2.1 </italic>
          <bold>
            <italic>Function</italic>
          </bold>
          <italic> findDEgenes</italic>
          <list list-type="bullet">
            <list-item>
              <p>
                <bold>Usage</bold>
              </p>
              <p>findDEgenes(object, numclusters)</p>
            </list-item>
            <list-item>
              <p>
                <bold>Arguments</bold>
              </p>
              <p>object, an object of class ‘ORdensity’.</p>
              <p>numclusters, optional, an integer number indicating the number of clusters the genes are partitioned. By default NULL, the number of clusters is calculated according to the silhouette index as previously mentioned.</p>
            </list-item>
            <list-item>
              <p>
                <bold>Value</bold>
              </p>
              <p>The function returns a list with the following elements:</p>
              <p>neighbours, number of Nearest-Neighbours considered (inherits from slot numneighbours of the ORdensity object).</p>
              <p>expectedFalsePositiveNeighbours, number of False Positive Neighbours expected within the Nearest Neighbourhood under the uniform distribution that corresponds to the proportion permuted cases among all the <italic>potential</italic> DEGs and permuted cases (see [<xref ref-type="bibr" rid="CR6">6</xref>], Subsection <italic>Second step: identifying differentially expressed genes</italic>).</p>
              <p>clusters, a list of data.frames. Each data.frame corresponds to a cluster gathering the indexes: <italic>OR</italic>, <italic>FP</italic>, <italic>dFP</italic> as well as the labels obtained by the aforementioned Strong and Relaxed selection criteria.</p>
            </list-item>
          </list>
        </p>
        <p>
          <italic>2.3.2.2 </italic>
          <bold>
            <italic>Function</italic>
          </bold>
          <italic> preclusteredData</italic>
          <list list-type="bullet">
            <list-item>
              <p>
                <bold>Usage</bold>
              </p>
              <p>preclusteredData(object)</p>
            </list-item>
            <list-item>
              <p>
                <bold>Arguments</bold>
              </p>
              <p>object, an object of class ‘ORdensity’.</p>
            </list-item>
            <list-item>
              <p>
                <bold>Value</bold>
              </p>
              <p>The function returns a data.frame with all <italic>potential</italic> DEGs, indicating which are identified as DEGs by the strong and the relaxed selection.</p>
            </list-item>
          </list>
        </p>
      </sec>
      <sec id="Sec8">
        <title>Function plot</title>
        <p>A plot with a representation of the <italic>potential</italic> genes based on <italic>OR</italic>, <italic>FP</italic> and <italic>dFP</italic> can also be obtained using function plot.
<list list-type="bullet"><list-item><p><bold>Usage</bold></p><p>plot(object, numberclusters)</p></list-item><list-item><p><bold>Arguments</bold></p><p>object, an object of class ‘ORdensity’.</p><p>numclusters, optional, an integer number indicating the number of clusters the genes are partitioned. By default NULL, the number of clusters is calculated according to the silhouette index as previously mentioned.</p></list-item><list-item><p><bold>Value</bold></p><p>This function returns a plot with a representation of the <italic>potential</italic> genes based on <italic>OR</italic> (vertical axis), <italic>FP</italic> (horizontal axis) and <italic>dFP</italic> (size of the symbol is inversely proportional to its value). Moreover, genes identified as DE by the relaxed selection are represented by the symbol “ △”.</p></list-item></list></p>
      </sec>
    </sec>
    <sec id="Sec9">
      <title>Installation</title>
      <p>The package is hosted in GitHub and to install the package from the repository, just run the following codelibrary(devtools)install_github(’rsait/ORdensity’)</p>
      <p>This package requires the cluster library to be installed; otherwise it will automatically install and load it. Likewise, the parallel, foreach and doRNG libraries are used for parallelization. For the computation of the distances, the distances library is used.</p>
      <p>To start working with the package, just load it in the R environment with the following command</p>
      <p>library(ORdensity)</p>
    </sec>
    <sec id="Sec10">
      <title>Parallel implementation</title>
      <p>An intrinsic computational issue in this context is the enormous computational burden that is involved. Let us take into account that to compute the median of the distances between every pair of genes in a set of <italic>n</italic> genes, <italic>n</italic>(<italic>n</italic>+1)/2 distances need to be calculated and stored. The running time of the fastest algorithm to find the median of a list ([<xref ref-type="bibr" rid="CR11">11</xref>]) is <italic>O</italic>(<italic>k</italic>) on average and <italic>O</italic>(<italic>k</italic><sup>2</sup>) in the worst case, where <italic>k</italic> is the number of elements in the list. As the number of distances is <italic>n</italic><sup>2</sup>/2, and there are <italic>B</italic> permutation replicates, the average running time of the median of all the replicates is <italic>O</italic>(<italic>B</italic><italic>n</italic><sup>2</sup>), with <italic>O</italic>(<italic>B</italic><italic>n</italic><sup>4</sup>) in the worst case. The space requirements are of <italic>n</italic><sup>2</sup>/2 8-byte floating point numbers to store the distances. As the implementation uses a R dist object that has to be converted into a matrix before computing the median with Rfast::med, the actual space requirement doubles. For example, in the case of the distances between 10,000 genes, an object with a size of 762.9 Mb is created in each replication. Furthermore, more temporary space allocation is done during the execution, as for example when performing subsetting over a matrix, or when computing the median. Due to R being an interpreted language, the memory management is not so efficient as in other compiled languages as C.</p>
      <p>We alleviated this problem by means of a parallel implementation of the bootstrap procedure. R uses a garbage collection mechanism to claim unused memory when needed, and the release of memory by individual processes when working in parallel has not been optimized. These facts make the parallel execution being sometimes slower than the sequential version due to an intensive use of swap memory. The parallel execution can be activated calling the ORdensity objects constructor with the parameter parallel = TRUE. By default, it is set to FALSE. When parallel execution is selected, the function uses the libraries parallel, foreach and doRNG. The first two are needed for parallel execution of the code, while doRNG enables replicability of pseudorandom number generations in a parallel environment. When the parallel option is enabled, the user can choose the number of processes to be run in parallel. When no number is specified, a number of processes equal to the number of processors in the machine is launched. This improves the speed, but at the cost of a higher memory load, because several objects containing the list of distances of each permutation replication will coexist in the memory at the same time. The researcher will have to take into account this trade-off, and be wary of possible memory crashes due to RAM exhaustion or of serious slowing down due to intensive use of swap memory. We conducted a series of experiments to assess the runtime. We used data sets involving different numbers of genes, from 1,000 to 15,000, and we considered different numbers of bootstrap samples, where B is equal to 100, 500 and 1,000, respectively. All the experimentation was performed on a personal computer (Intel i7-7700, 8 cores, 3.60GHz, 16 GB of RAM and 7.5 GB of swap space) running Ubuntu 16.04. Without the memory management issues previously described, based on the time complexity of the algorithm, the execution time should increase linearly with the number of bootstrap replicates, quadratically with the number of genes (estimating average time for the computation of the median), and should decrease linearly with the number of processes. In our experimental setup we observe that when working in the low range of the number of genes, processes and bootstrap replications the expected behaviour is obtained. Nevertheless, in the high end of the values of the aforementioned parameters there is a clear decrease in the performance. Even in some cases, the execution crashed due to exhaustion of RAM and swap space. For instance, when <italic>N</italic>=1,000, using up to 5 or 6 cores the execution times reduces roughly as expected (using 6 cores, the execution is 5.4 times faster than the sequential execution; 51.5 sec. and 280.02 sec., respectively). For <italic>N</italic>=10,000 genes, the improvement is observed up to 4 cores (with 4 cores the execution time is 3.7 times lower compared to the sequential implementation; 2093.1 sec. and 7662.7 sec., respectively). For big number of genes (<italic>N</italic>=15,000) the execution in parallel offers an improvement when only 2 cores are working being the execution in parallel 2 times faster (8157.5 sec and 16477.6 sec., respectively). When more cores were working the previously mentioned memory issues prevail. See Fig. <xref rid="Fig2" ref-type="fig">2</xref> for details.
<fig id="Fig2"><label>Fig. 2</label><caption><p>Running times for simulated data with different numbers of genes, different numbers of cores and different number of permutations used in the bootstrap procedure. In the vertical axis the type of execution: sequential or the number of processes working</p></caption><graphic xlink:href="12859_2020_3463_Fig2_HTML" id="MO2"/></fig></p>
    </sec>
  </sec>
  <sec id="Sec11">
    <title>Results and case of use</title>
    <p>In addition to the experiments performed in our own computer, a code capsule has been created to allow the readers to experiment without having to install anything in their machines. The code capsule runs Ubuntu 18.04, and the versions of the installed software are the following: R 3.5.3, libgsl-dev 2.4+dfsg-6, Rfast 1.9.3, cluster 2.0.8, distances 0.1.7, doParallel 1.0.14, doRNG 1.7.1, foreach 1.4.4 and rngtools 1.3.1. The ORdensity package ensures reproducibility for a given configuration. In particular, the results of sequential and parallel computation could differ slightly due to the use of a different pseudorandom generator, but several sequential executions would return the same results, as well as several parallel executions even using different number of processes.</p>
    <p>ORdensity stands out for its simplicity and ease of use. For example, consider the following simulated data, called simexpr, included in the package. We assumed a total of 1000 genes, among which 100 were generated as differentially expressed genes. The expression levels of all no DE genes were generated by <italic>N</italic>(0,1) distribution in both conditions 1 and 2. The DE genes were generated using the <italic>N</italic>(0,1) and <italic>N</italic>(<italic>μ</italic><sub><italic>g</italic></sub>,1) distributions for conditions 1 and 2, respectively, with |<italic>μ</italic><sub><italic>g</italic></sub>|=<italic>Δ</italic>. Parameter <italic>Δ</italic> sets the importance of gene <italic>g</italic>, where the bigger <italic>Δ</italic> is, the more important gene <italic>g</italic> is. We considered <italic>Δ</italic> in {1.5,2,3}.</p>
    <p>To summarize, each row <italic>g</italic> in simexpr corresponds to a simulated gene. The first column indicates whether gene <italic>g</italic> is DE or not. The second column contains <italic>Δ</italic> values. Columns 3-32 and 33-62 have the expression levels under experimental condition 1 and 2, respectively.</p>
    <p>First, we extract the samples from each experimental condition from the simexpr database, and the created S4 object which was stored in myORdensity.</p>
    <p>
      <graphic position="anchor" xlink:href="12859_2020_3463_Figa_HTML" id="MO6"/>
    </p>
    <p>Thus far, the first step of the procedure is performed, and it detected 107 genes as <italic>potential</italic> DEGs that are stored. The identified <italic>potential</italic> genes turned out to be clustered in two clusters:</p>
    <p>
      <graphic position="anchor" xlink:href="12859_2020_3463_Figb_HTML" id="MO4"/>
    </p>
    <p>We applied the summary function without specifying the number of clusters the genes are partitioned and we got a message informing that the best number of clusters is 2. As a result, a description of the clusters is calculated. For instance,</p>
    <p>
      <graphic position="anchor" xlink:href="12859_2020_3463_Figc_HTML" id="MO5"/>
    </p>
    <p>Thus, the procedure considers 107 genes as <italic>potential</italic> DEGs and clustered them in two clusters with 83 and 24 genes respectively. As the clusters are ordered in decreasing order according to the value of the mean of the OR statistic, we can see that the mean is higher in the first cluster (63.58) than in the second one (11.11), which means that the first group is made up of genes whose expression is very different in the two groups. The second is composed of genes with expressions that do not differ so much between groups.</p>
    <p>Using plot(myORdensity) the user can visualize the clusters. Figure <xref rid="Fig3" ref-type="fig">3</xref> shows the values of indexes <italic>OR</italic>, <italic>FP</italic>, and <italic>dFP</italic> for the <italic>potential</italic> selected genes. In the vertical and horizontal axes, values <italic>OR</italic> and <italic>FP</italic>, are presented respectively. The size of the symbols is inversely proportional to <italic>dFP</italic>. As we can observe, the first cluster has genes with very high <italic>OR</italic> values as well as low <italic>FP</italic> and <italic>dFP</italic> values. Therefore, as we have pointed out, this cluster contains, as expected, the most differentially expressed genes.
<fig id="Fig3"><label>Fig. 3</label><caption><p>For the simexpr data set, representation of the potential genes based on <italic>OR</italic> (vertical axis), <italic>FP</italic> (horizontal axis) and <italic>dFP</italic> (size of the circle is inversely proportional to its value). Genes identified by the relaxed selection as DEGs are indicated by the symbol “ △”; in red and blue, genes belonging to cluster 1 and cluster 2, respectively</p></caption><graphic xlink:href="12859_2020_3463_Fig3_HTML" id="MO3"/></fig></p>
    <p>In order to determine which genes are considered as DEGs, we calculated more detailed clustering output with,</p>
    <p>
      <graphic position="anchor" xlink:href="12859_2020_3463_Figd_HTML" id="MO7"/>
    </p>
    <p>The information is shown in slots, along with the obtained partition of genes:</p>
    <p>
      <graphic position="anchor" xlink:href="12859_2020_3463_Fige_HTML" id="MO8"/>
    </p>
    <p>With this data, the package gives the following information, $expectedFalsePositiveNeighbours is 8.24. Thus, for a gene and according to a uniform distribution, on average, the expected number of false positives among the 10-nearest neighbours is 8.24, because considering all data, the proportion of permuted samples is 82.37%. As this is the threshold used for the relaxed selection, with this selection the procedure identifies 97 DEGs, where 12 of them were also selected by the strong selection.</p>
    <p>As we can observe in Table <xref rid="Tab1" ref-type="table">1</xref>, 83 of these 97 genes identified as DEGs are in cluster 1 (<italic>#</italic>cluster 1 = 83) and 14 of them are in cluster 2 (<italic>#</italic>cluster 2 = 24). In this simulated data, we know by construction which genes were generated as DEGs and it is easy to check that 96 of the 97 genes identified as DEGs by the relaxed selection are truly DEGs, so, we only find one false positive. The 4 genes simulated as DEGs but not selected by the procedure (false negatives) were associated to the smallest value <italic>Δ</italic>=1.5, one of them was not considered as <italic>potential</italic> DE gene and the other 3 were considered <italic>potential</italic> genes.
<table-wrap id="Tab1"><label>Table 1</label><caption><p>Using the simexpr data set, distribution among the two clusters of the genes identified by ORdensity as DEGs</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"><italic>n</italic></th><th align="left"><italic>Δ</italic></th><th align="left">Identified DEGs</th><th align="left"/></tr></thead><tbody><tr><td align="left">True DE genes</td><td align="left"/><td align="left">Cluster 1</td><td align="left">Cluster2</td></tr><tr><td align="left">35</td><td align="left">3</td><td align="left">34 (9S/25R)</td><td align="left">1 (0S/1R)</td></tr><tr><td align="left">32</td><td align="left">2</td><td align="left">31 (2S/29R)</td><td align="left">0</td></tr><tr><td align="left">33</td><td align="left">1.5</td><td align="left">18 (1S/17R)</td><td align="left">12 (0S/12R)</td></tr><tr><td align="left">Not true DE</td><td align="left"/><td align="left"/><td align="left"/></tr><tr><td align="left">900</td><td align="left">-</td><td align="left">0</td><td align="left">1 (0S/1R)</td></tr></tbody></table><table-wrap-foot><p>In brackets the number of DEGs selected by strong (S) and relaxed (R) criterion, respectively</p></table-wrap-foot></table-wrap></p>
    <p>In order to evaluate the impact in the results of different initial seeds (in sequential and parallel executions the random seeds are handled differently), we repeated 100 times, with different inital seeds, and analyzed the results on the simexpr database. The mean number of genes detected as <italic>potential</italic> DE genes was 106.94 with 0.62 as standard deviation, and 891 genes never were considered <italic>potential</italic> DE genes. Regarding the 100 DE genes, one of them never was considered as <italic>potential</italic> DE gene, while the other 99 were always included in the set of <italic>potential</italic> DE genes. Between these 99 genes, 2 never were identified as DE genes; 1 was only detected as DE gene in less than 25 runs, and the other 96 genes were always identified as DE genes. The assignation of the label “strong” leads to a bigger variability because in fact it is a discretization of a quantitative variable (FP) given a threshold value at 0. Nevertheless, the variability of each DE gene concerning his FP values among the 100 repetitions is low: the minimum value for the standard deviation was 0.00 and the maximum 0.67, for variable FP that ranges between 0 and 10.</p>
  </sec>
  <sec id="Sec12" sec-type="discussion">
    <title>Discussion</title>
    <p>As we have shown, our ORdensity package requires minimal user intervention and obtains results in only a few instructions. The user can identify DEGs with data sets containing large number of genes (&lt;20,000). When the user runs ORdensity can get, in addition to the results, one graph which shows the values of the three indexes used for the DEGs identification. Furthermore, ORdensity allows the user to modify the weights of the quantiles if some of them are considered more important than the others. Users can also change the cluster method and the number of clusters that, by default, are calculated using PAM procedure and the silhouette criterion. Because to guarantee reproducible analysis the method uses permutation sampling, the user can fix the seed to set the random generation. Moreover, to analyze a large number of genes and to have small run-times, parallelization across the permutation sampling procedure was implemented. However, one limitation of the method is the long execution time when the number of genes is large (&gt;10000), an issue that is only partially improved with the parallelization, although it alleviates this inconvenience. Furthermore, like many permutation-based methods, the program requires large amount of memory to store intermediate data and the replicates of the original data matrix. Although this fact may limit the use of the program, ORdensity should be understood as an alternative program to the existing ones. Since its approach is innovative and different to other methods, it can shed light to identify interesting genes that would not be detected with other techniques. Moreover, the method for identifying DE genes implemented in the package, as it was pointed out in [<xref ref-type="bibr" rid="CR6">6</xref>], avoids some of the shortcomings of the individual gene identification and it is stable when the original sample is changed by subsamples.</p>
    <p>As future work, we intend to improve the running time and needed memory space by two different ways. The first one is to develop a version that makes use of Nvidia GPUs for the computation of distance matrices, and the second one is to test median approximations not so demanding computationally. GPU computation could lower the computation time when building the distance matrix, but it would still be needed to store the whole matrix in order to find the median. On the other hand, the remedian [<xref ref-type="bibr" rid="CR12">12</xref>] algorithm (median of medians) could reduce drastically the needed memory, but at the expense of returning only an approximation to the median. Further experiments would need to be conducted to test if the ORdensity results are similar using the median or the remedian.</p>
    <p>Although due to sequential and parallel computation, the use of a different pseu-dorandom generator may slightly affect the results, the biological impact that it can have is small, since the results vary very slightly and only affect those very poorly expressed genes.</p>
    <p>Finally, it is worth to remark that ORdensity allows practitioners to perform their applied research in a user-friendly environment.</p>
  </sec>
  <sec id="Sec13" sec-type="conclusion">
    <title>Conclusions</title>
    <p>ORdensity is a free and comprehensible R package available to the biomedical community. This computational tool is designed to identify DEGs following the method introduced in [<xref ref-type="bibr" rid="CR6">6</xref>]. In few sentences, this tool executes an efficient and accurate analysis producing a list of differentially expressed genes, it requires a minimal user expertise and it displays the results in an easy way to interpret them. All these features make ORdensity powerful software for studies of DEGs.</p>
  </sec>
  <sec id="Sec14">
    <title>Availability and requirements</title>
    <p>Project name: ORdensity Project home page: <ext-link ext-link-type="uri" xlink:href="https://github.com/rsait/ORdensity">https://github.com/rsait/ORdensity</ext-link>Operating system(s): Platform independent Programming language: R 3.5.3 or higher Other requirements: Rfast 1.9.3 or higher, cluster 2.0.8 or higher, distances 0.1.7 or higher, doParallel 1.0.14 or higher, doRNG 1.7.1 or higher, foreach 1.4.4 or higher, rngtools 1.3.1 or higher License: GNU GPLv2+ Any restrictions to use by non-academics: no restrictions</p>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>DE</term>
        <def>
          <p>Differentially Expressed</p>
        </def>
      </def-item>
      <def-item>
        <term>DEGs</term>
        <def>
          <p>Differentially Expressed Genes</p>
        </def>
      </def-item>
      <def-item>
        <term>
          <italic>dFP</italic>
        </term>
        <def>
          <p>Average density of false positive permuted cases in k-NN</p>
        </def>
      </def-item>
      <def-item>
        <term>
          <italic>FP</italic>
        </term>
        <def>
          <p>Average number of false positive permuted cases in k-NN</p>
        </def>
      </def-item>
      <def-item>
        <term>limma</term>
        <def>
          <p>Linear models with Empirical Bayes statistic</p>
        </def>
      </def-item>
      <def-item>
        <term>
          <italic>OR</italic>
        </term>
        <def>
          <p>Outlier Robust index</p>
        </def>
      </def-item>
      <def-item>
        <term>PAM</term>
        <def>
          <p>Partition Around Medoids clustering method</p>
        </def>
      </def-item>
      <def-item>
        <term>SAM</term>
        <def>
          <p>The Significant Analysis of Microarrays</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher’s Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>We express our sincere thanks to the researchers that are interested in our ORdensity method and have encouraged us to elaborate this package. Furthermore, the authors are very grateful to the anonymous reviewers whose helpful comments have greatly improved the quality of this article.</p>
  </ack>
  <notes notes-type="author-contribution">
    <sec id="FPar1">
      <title>Authors’ contributions</title>
      <p>II and CA designed the study. II and JMO wrote and debugged the software. II, CA and JMO checked the software. II, CA, JMO and BS wrote and reviewed the manuscript. All authors have read and approved the final manuscript.</p>
    </sec>
    <sec id="FPar2">
      <title>Authors’ information</title>
      <p>José María Martínez-Otzeta received a PhD degree in Computer Science from the University of the Basque Country where he works as a postdoc researcher in the Robotics and Autonomous Systems Group in Donostia-San Sebastian. His research interests include machine learning, data mining, computer vision and robotics.</p>
      <p>Itziar Irigoien received a PhD degree in Informatics from the University of the Basque Country, Donostia, Spain, where she is now a research professor in the Department of Computation Science and Artificial Intelligence. Her research interests include the development of new statistical methods and software to solve bioinformatics and biomedical questions.</p>
      <p>Basilio Sierra is Full Professor in the Computer Sciences and Artificial Intelligence Department at the University of the Basque Country. He received his B.Sc. in Computer Sciences in 1990, M.Sc. in Computer Science and Architecture in 1992 and Ph.D. in Computer Sciences in 2000 at the University of the Basque Country. He is co-director of the Robotics and Autonomous Systems Group in Donostia-San Sebastian. Prof. Sierra is presently a researcher in the fields of Robotics and Machine Learning, and he is working on the use of different paradigms to improve behaviours.</p>
      <p>Concepción Arenas received a PhD degree in Mathematics, spezializing in Statistics, from the University of Barcelona (Spain), where she is now a research professor in the Department of Genetics, Microbiology and Statistics, Statistics section. Her research interests include multivariate analysis as applied to bioinformatics, specifically DNA sequence analysis and microarray interpretation. She also works in biomedical statistics.</p>
    </sec>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>The authors disclosed receipt of the following financial support for the research, authorship, and/or publication of this article. This study was partially supported: II by the Spanish Ministerio de Economia y Competitividad (TIN2015-64395-R; PROSA-MED: TIN2016-77820-C3-1-R) and by the Basque Government Research Team Grant (IT313-10) SAIOTEK ProjectSA-2013/00397 and by the University of the Basque Country UPV/EHU (Grant UFI11/45 (BAILab). CA by the Spanish Ministerio de Economia y Competitividad (RTI2018-093337-B-I00), by the Spanish Ministerio de Economia y Competitividad((RTI2018-100968-B-I00) and by Grant 2017SGR622 (GRBIO) from the Departament d’Economia i Coneixement de la Generalitat de Catalunya. The funders had no role in the study design, data collection and interpretation, or the decision to submit the work for publication.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>The only data set used is the simulated data set simexpr that is included in the package.</p>
  </notes>
  <notes>
    <title>Ethics approval and consent to participate</title>
    <p>Not applicable.</p>
  </notes>
  <notes>
    <title>Consent for publication</title>
    <p>Not applicable.</p>
  </notes>
  <notes notes-type="COI-statement">
    <title>Competing interests</title>
    <p>The authors declare that they have no competing interests.</p>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tusher</surname>
            <given-names>VG</given-names>
          </name>
          <name>
            <surname>Tibshirani</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Chu</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>Significance analysis of microarrays applied to the ionizing radiation response</article-title>
        <source>Proc Natl Acad Sci U S A</source>
        <year>2001</year>
        <volume>90</volume>
        <issue>9</issue>
        <fpage>5116</fpage>
        <lpage>21</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.091062498</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Smyth</surname>
            <given-names>GK</given-names>
          </name>
        </person-group>
        <article-title>Linear models and empirical bayes methods for assessing differential expression in microarray experiments</article-title>
        <source>Stat Appl Genet Mol Biol</source>
        <year>2004</year>
        <volume>3</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>25</lpage>
        <pub-id pub-id-type="doi">10.2202/1544-6115.1027</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ritchie</surname>
            <given-names>ME</given-names>
          </name>
          <name>
            <surname>Phipson</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Hu</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Law</surname>
            <given-names>CW</given-names>
          </name>
          <name>
            <surname>Shi</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Smyth</surname>
            <given-names>GK</given-names>
          </name>
        </person-group>
        <article-title>Limma powers differential expression analyses for rna-sequencing and microarray studies</article-title>
        <source>Nucleic Acids Res</source>
        <year>2015</year>
        <volume>43</volume>
        <issue>7</issue>
        <fpage>47</fpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkv007</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gentleman</surname>
            <given-names>RC</given-names>
          </name>
          <name>
            <surname>Carey</surname>
            <given-names>VJ</given-names>
          </name>
          <name>
            <surname>Bates</surname>
            <given-names>DM</given-names>
          </name>
          <name>
            <surname>Bolstad</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Dettling</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Dudoit</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Ellis</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Gautier</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Ge</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Gentry</surname>
            <given-names>J</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Bioconductor: open software development for computational biology and bioinformatics</article-title>
        <source>Genome Biol</source>
        <year>2004</year>
        <volume>5</volume>
        <issue>10</issue>
        <fpage>80</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2004-5-10-r80</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Efron</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Tibshirani</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Empirical bayes methods and false discovery rates for microarrays</article-title>
        <source>Genet Epidemiol</source>
        <year>2002</year>
        <volume>23</volume>
        <issue>1</issue>
        <fpage>70</fpage>
        <lpage>86</lpage>
        <pub-id pub-id-type="doi">10.1002/gepi.1124</pub-id>
        <pub-id pub-id-type="pmid">12112249</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Irigoien</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Arenas</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>Identification of differentially expressed genes by means of outlier detection</article-title>
        <source>BMC Bioinformatics</source>
        <year>2018</year>
        <volume>19</volume>
        <fpage>317</fpage>
        <lpage>37</lpage>
        <pub-id pub-id-type="doi">10.1186/s12859-018-2318-8</pub-id>
        <pub-id pub-id-type="pmid">30200879</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Arenas</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Toma</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Cormand</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Irigoien</surname>
            <given-names>I</given-names>
          </name>
        </person-group>
        <article-title>Identifying extreme observations, outliers and noise in clinical and genetic data</article-title>
        <source>Curr Bioinform</source>
        <year>2017</year>
        <volume>12</volume>
        <issue>2</issue>
        <fpage>101</fpage>
        <lpage>17</lpage>
        <pub-id pub-id-type="doi">10.2174/1574893611666160606161031</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Arenas</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Irigoien</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Mestres</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Toma</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Cormand</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Extreme observations in biomedical data</article-title>
        <source>Ainsbury EA, Calle ML, Cardis, E et Al. (eds) Extended Abstracts Fall 2015. Trends in Mathematics, vol. 7</source>
        <year>2017</year>
        <publisher-loc>Birkhäuser, Cham</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Kaufman</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Rousseeuw</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <source>Clustering by Means of Medoids</source>
        <year>1987</year>
        <publisher-loc>Amsterdam</publisher-loc>
        <publisher-name>North-Holland</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rousseeuw</surname>
            <given-names>PJ</given-names>
          </name>
        </person-group>
        <article-title>Silhouettes: a graphical aid to the interpretation and validation of cluster analysis</article-title>
        <source>J Comp Appl Stat</source>
        <year>1987</year>
        <volume>20</volume>
        <issue>1</issue>
        <fpage>53</fpage>
        <lpage>65</lpage>
        <pub-id pub-id-type="doi">10.1016/0377-0427(87)90125-7</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hoare</surname>
            <given-names>CAR</given-names>
          </name>
        </person-group>
        <article-title>Algorithm 65: Find</article-title>
        <source>Commun ACM</source>
        <year>1961</year>
        <volume>4</volume>
        <issue>7</issue>
        <fpage>321</fpage>
        <lpage>2</lpage>
        <pub-id pub-id-type="doi">10.1145/366622.366644</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rousseeuw</surname>
            <given-names>PJ</given-names>
          </name>
          <name>
            <surname>Bassett Jr</surname>
            <given-names>GW</given-names>
          </name>
        </person-group>
        <article-title>The remedian: A robust averaging method for large data sets</article-title>
        <source>J Am Stat Assoc</source>
        <year>1990</year>
        <volume>85</volume>
        <issue>409</issue>
        <fpage>97</fpage>
        <lpage>104</lpage>
        <pub-id pub-id-type="doi">10.1080/01621459.1990.10475311</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

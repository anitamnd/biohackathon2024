<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">8275324</article-id>
    <article-id pub-id-type="pmid">34252961</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btab266</article-id>
    <article-id pub-id-type="publisher-id">btab266</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Genome Sequence Analysis</subject>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>doubletD: detecting doublets in single-cell DNA sequencing data</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Weber</surname>
          <given-names>Leah L</given-names>
        </name>
        <aff><institution>Department of Computer Science, University of Illinois at Urbana-Champaign</institution>, Urbama, IL 61801, <country country="US">USA</country></aff>
        <xref rid="btab266-FM1" ref-type="author-notes"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Sashittal</surname>
          <given-names>Palash</given-names>
        </name>
        <aff><institution>Department of Computer Science, University of Illinois at Urbana-Champaign</institution>, Urbama, IL 61801, <country country="US">USA</country></aff>
        <aff><institution>Department of Aerospace Engineering, University of Illinois at Urbana-Champaign</institution>, Urbana, IL 61801, <country country="US">USA</country></aff>
        <xref rid="btab266-FM1" ref-type="author-notes"/>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>El-Kebir</surname>
          <given-names>Mohammed</given-names>
        </name>
        <aff><institution>Department of Computer Science, University of Illinois at Urbana-Champaign</institution>, Urbama, IL 61801, <country country="US">USA</country></aff>
        <xref rid="btab266-cor1" ref-type="corresp"/>
        <!--melkebir@illinois.edu-->
      </contrib>
    </contrib-group>
    <author-notes>
      <fn id="btab266-FM1">
        <p>The authors wish it to be known that, in their opinion, the first two authors should be regarded as Joint First Authors.</p>
      </fn>
      <corresp id="btab266-cor1">To whom correspondence should be addressed. <email>melkebir@illinois.edu</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <month>7</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2021-07-12">
      <day>12</day>
      <month>7</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>12</day>
      <month>7</month>
      <year>2021</year>
    </pub-date>
    <volume>37</volume>
    <issue>Suppl 1</issue>
    <issue-title>ISMB/ECCB 2021 Proceedings</issue-title>
    <fpage>i214</fpage>
    <lpage>i221</lpage>
    <permissions>
      <copyright-statement>Â© The Author(s) 2021. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2021</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btab266.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>While single-cell DNA sequencing (scDNA-seq) has enabled the study of intratumor heterogeneity at an unprecedented resolution, current technologies are error-prone and often result in doublets where two or more cells are mistaken for a single cell. Not only do doublets confound downstream analyses, but the increase in doublet rate is also a major bottleneck preventing higher throughput with current single-cell technologies. Although doublet detection and removal are standard practice in scRNA-seq data analysis, options for scDNA-seq data are limited. Current methods attempt to detect doublets while also performing complex downstream analyses tasks, leading to decreased efficiency and/or performance.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>We present <sc>doublet</sc>D, the first standalone method for detecting doublets in scDNA-seq data. Underlying our method is a simple maximum likelihood approach with a closed-form solution. We demonstrate the performance of doubletD on simulated data as well as real datasets, outperforming current methods for downstream analysis of scDNA-seq data that jointly infer doublets as well as standalone approaches for doublet detection in scRNA-seq data. Incorporating <sc>doublet</sc>D in scDNA-seq analysis pipelines will reduce complexity and lead to more accurate results.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p><ext-link xlink:href="https://github.com/elkebir-group/doubletD" ext-link-type="uri">https://github.com/elkebir-group/doubletD</ext-link>.</p>
      </sec>
      <sec id="s5">
        <title>Supplementary information</title>
        <p><xref rid="sup1" ref-type="supplementary-material">Supplementary data</xref> are available at <italic toggle="yes">Bioinformatics</italic> online.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>National Science Foundation</institution>
            <institution-id institution-id-type="DOI">10.13039/100000001</institution-id>
          </institution-wrap>
          <!-- oupReleaseDelayRemoved from OA Article (00|0) -->
        </funding-source>
        <award-id>CCF 1850502</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>CCF 2046488</institution>
          </institution-wrap>
          <!-- oupReleaseDelayRemoved from OA Article (00|0) -->
        </funding-source>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="8"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>The increased use of single-cell sequencing for cancer research is providing a wealth of new insights regarding intratumor heterogeneity, metastasis and the landscape of the tumor microenvironment (<xref rid="btab266-B5" ref-type="bibr">Gawad <italic toggle="yes">et al.</italic>, 2014</xref>; <xref rid="btab266-B12" ref-type="bibr">Lim <italic toggle="yes">et al.</italic>, 2020</xref>; <xref rid="btab266-B19" ref-type="bibr">Miles <italic toggle="yes">et al.</italic>, 2020</xref>; <xref rid="btab266-B21" ref-type="bibr">Morita <italic toggle="yes">et al.</italic>, 2020</xref>). In particular, the ongoing improvement in single-cell DNA sequencing (scDNA-seq) assays is rapidly advancing methods for reconstructing the evolutionary history of a tumor (<xref rid="btab266-B4" ref-type="bibr">El-Kebir, 2018</xref>; <xref rid="btab266-B8" ref-type="bibr">Jahn <italic toggle="yes">et al.</italic>, 2016</xref>; <xref rid="btab266-B25" ref-type="bibr">Ross and Markowetz, 2016</xref>; <xref rid="btab266-B26" ref-type="bibr">Roth <italic toggle="yes">et al.</italic>, 2016</xref>; <xref rid="btab266-B28" ref-type="bibr">Satas <italic toggle="yes">et al.</italic>, 2020</xref>; <xref rid="btab266-B35" ref-type="bibr">Zafar <italic toggle="yes">et al.</italic>, 2019</xref>). While scDNA-seq is more labor intensive and error-prone than traditional bulk DNA sequencing (<xref rid="btab266-B23" ref-type="bibr">Pellegrino <italic toggle="yes">et al.</italic>, 2018</xref>), scDNA-seq permits the observation of mutation co-occurrence patterns within a single cell, yielding both higher fidelity tumor phylogeny reconstructions and more accurate identification of a set of distinct tumor clones or genotypes.</p>
    <p>The smaller amount of DNA material within a cell compared to RNA poses additional sequencing challenges than those faced in single-cell RNA-sequencing (scRNA-seq) (<xref rid="btab266-B2" ref-type="bibr">De Bourcy <italic toggle="yes">et al.</italic>, 2014</xref>). Medium to high coverage scDNA-seq technology, suitable for detecting single-nucleotide variants, suffers from elevated rates of technical errors due to whole-genome amplification that may impact downstream analyses, including allelic dropout (ADO), copying mistakes in the amplification reaction, unbalanced amplification and doublets. Specifically, when ADO occurs, one or more of the alleles may fail to be amplified during the early stages of the process and thus the allele is said to âdrop outâ prior to sequencing. While technological advances have decreased the frequency of these errors, one remaining technical challenge is when multiple cells, or <italic toggle="yes">multiplets</italic>, are captured within a droplet and linked to a single barcode making all subsequent reads appearing as if they originated from one cell. To mitigate this effect, practitioners utilize a Poisson distribution to estimate the probability that a droplet contains a specified number of cells. The rate parameter of the Poisson distribution is then determined by a function of the cell solution concentration and droplet volume to obtain the desired probability of multiplets (<xref rid="btab266-B13" ref-type="bibr">Liu <italic toggle="yes">et al.</italic>, 2020</xref>). This results in the majority of droplets containing zero cells and multiplets with more than two cells are rare. However, <italic toggle="yes">doublets</italic>, which are droplets containing two cells, occur frequently and are therefore the focus of this work (<xref rid="btab266-B9" ref-type="bibr">Kuipers <italic toggle="yes">et al.</italic>, 2017a</xref>; <xref rid="btab266-B22" ref-type="bibr">Navin and Chen, 2016</xref>; <xref rid="btab266-B34" ref-type="bibr">Zafar <italic toggle="yes">et al.</italic>, 2018</xref>).</p>
    <p>Adapting terminology from the scRNA-seq literature (<xref rid="btab266-B29" ref-type="bibr">Wolock <italic toggle="yes">et al.</italic>, 2019</xref>), we introduce three categories for doublets in scDNA-seq: (i) selflet, (ii) nested and (iii) neotypic (<xref rid="btab266-F1" ref-type="fig">Fig.Â 1a</xref>). <italic toggle="yes">Selflets</italic> are comprised of cells with identical genotypes. <italic toggle="yes">Nested</italic> doublets occur when the set of mutations in one cell is a proper subset of the mutations in the other cell. A <italic toggle="yes">neotypic</italic> doublet is a doublet that is not nested or a selflet and implies the existence of a novel genotype not present in the sample. Neotypic doublets thus distort the signal of mutation co-occurrence patterns and makes it challenging to distinguish the presence of rare clones, that may be resistant to certain treatments, from a neotypic doublet (<xref rid="btab266-B23" ref-type="bibr">Pellegrino <italic toggle="yes">et al.</italic>, 2018</xref>). Although nested doublets and selflets will not impact the analysis of mutation co-occurrence or mutual exclusivity patterns, they may impact the estimation of clonal abundances, which are used to model both the evolutionary trajectory and the fitness landscape of a tumor (<xref rid="btab266-B19" ref-type="bibr">Miles <italic toggle="yes">et al.</italic>, 2020</xref>; <xref rid="btab266-B27" ref-type="bibr">Salehi <italic toggle="yes">et al.</italic>, 2020</xref>).</p>
    <fig position="float" id="btab266-F1">
      <label>Fig. 1.</label>
      <caption>
        <p><sc>doublet</sc>D calls doublets in medium to high coverage scDNA-seq data. (<bold>a</bold>) The first step of most single-cell sequencing technologies involves cell capture where the goal is to encapsulate single cells into droplets, known as singlets. However, errors in this process (details in Section 1) can lead to three kind of doubletsâneotypic doublets, nested doublets and selflets. (<bold>b</bold>) The cells in each isolated droplet <italic toggle="yes">i</italic> undergo whole-genome amplification and sequencing independently. These processes introduce errors such as ADOs and imbalance in amplification. (<bold>c</bold>) The resulting aligned reads are used for variant calling yielding alternate <inline-formula id="IE1"><mml:math id="IM1" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and total <inline-formula id="IE2"><mml:math id="IM2" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> read counts at each locus of interest <italic toggle="yes">j</italic>. (d) <sc>doublet</sc>D uses the observed variant allele frequencies <inline-formula id="IE3"><mml:math id="IM3" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> as the key signal, while accounting for sequencing and amplification errors to detect doublets in the sample. The symbol <inline-formula id="IE4"><mml:math id="IM4" display="inline" overflow="scroll"><mml:mo>â</mml:mo></mml:math></inline-formula> denotes element-wise division</p>
      </caption>
      <graphic xlink:href="btab266f1" position="float"/>
    </fig>
    <p>While there are downstream analysis methods, such as genotype and/or phylogeny inference methods, that account for the presence of doublets, to the best of our knowledge, there exists no standalone method for doublet detection in scDNA-seq data. There are a number of drawbacks to methods that jointly infer the doublets during any downstream analysis. First, methods like <inline-formula id="IE5"><mml:math id="IM5" display="inline" overflow="scroll"><mml:mo>â</mml:mo></mml:math></inline-formula>SCITE (<xref rid="btab266-B10" ref-type="bibr">Kuipers <italic toggle="yes">et al.</italic>, 2017b</xref>), SCG (<xref rid="btab266-B26" ref-type="bibr">Roth <italic toggle="yes">et al.</italic>, 2016</xref>) and <sc>Si</sc><sc>Clone</sc><sc>Fit</sc> (<xref rid="btab266-B35" ref-type="bibr">Zafar <italic toggle="yes">et al.</italic>, 2019</xref>) utilize Bayesian inference in the form of Markov chain Monte Carlo (MCMC) or variational inference, which scale poorly with the inclusion of doublets and size of the input (<xref rid="btab266-B10" ref-type="bibr">Kuipers <italic toggle="yes">et al.</italic>, 2017b</xref>; <xref rid="btab266-B26" ref-type="bibr">Roth <italic toggle="yes">et al.</italic>, 2016</xref>; <xref rid="btab266-B35" ref-type="bibr">Zafar <italic toggle="yes">et al.</italic>, 2019</xref>). Second, methods, such as <sc>Scis</sc><sc>Tree</sc> (<xref rid="btab266-B30" ref-type="bibr">Wu, 2020</xref>), are able to identify doublets only under the infinite sites model of evolution. Third, most methods require a binarized or discretized experiment by loci matrix input as opposed to positional variant and reference allele read counts. This results in the loss of useful information for doublet identification. Lastly, as a result of the discrete input and/or utilizing the infinite sites assumption, methods that do identify doublets are at best only able to identify neotypic doublets.</p>
    <p>In contrast, there exist a number of standalone methods for detecting doublets in single-cell RNA-sequencing data (<xref rid="btab266-B3" ref-type="bibr">DePasquale <italic toggle="yes">et al.</italic>, 2019</xref>; <xref rid="btab266-B17" ref-type="bibr">McGinnis <italic toggle="yes">et al.</italic>, 2019</xref>; <xref rid="btab266-B29" ref-type="bibr">Wolock <italic toggle="yes">et al.</italic>, 2019</xref>). See <xref rid="btab266-B31" ref-type="bibr">Xi and Li (2020)</xref> for an excellent overview and benchmarking of scRNA-seq doublet detection methods. Doublets in single-cell RNA-sequencing (scRNA-seq) result in the observation of neotypic gene expression profiles, which impacts cell clustering and the identification of cell-state trajectories (<xref rid="btab266-B31" ref-type="bibr">Xi and Li, 2020</xref>). In general, these methods follow a four-step process. First, simulated doublets are created by mixing observed gene expression profiles. Second, the observed and simulated data are embedded into a latent space using dimensionality reduction. Third, machine learning methods are used to estimate the probability that a droplet is a doublet. Finally, a threshold scheme is enacted based on knowledge of the experimental doublet rate to classify experiments as either a singlet or doublet. The main variation within these methods is the choice of embedding/dimension reduction and classifier. Additionally, these methods are designed to capture neotypic doublets and struggle to identify embedded doublets, which are often located within clusters of singlets in the embedded space. While it is possible to directly apply scRNA-seq doublet detection methods on DNA variant read counts, such methods do not properly account for the distinct error profile of scDNA-seq data.</p>
    <p>As a first step in addressing the need for a fast, standalone method for scDNA-seq doublet detection, we introduce <sc>doublet</sc>D, which performs doublet detection in medium to high coverage scDNA-seq data. Critically, <sc>doublet</sc>D does not make any assumptions about the model of evolution, the number of distinct clones or assume a threshold on the minimum clonal abundance in the sample. <sc>doublet</sc>D operates directly on variant and reference allele counts without the need to discretize the input, thus retaining a critical signal for doublet detection in the form of the variant allele frequency (VAF) (<xref rid="btab266-F1" ref-type="fig">Fig.Â 1c</xref>). Specifically, underlying <sc>doublet</sc>D is the observation that doublets in scDNA-seq data have a characteristic VAF spectrum due to increased number of copies and/or ADO (<xref rid="btab266-F1" ref-type="fig">Fig.Â 1d</xref>). Others have noted the presence of some of these characteristics in a <italic toggle="yes">post hoc</italic> analysis of either single-nucleotide variant (<xref rid="btab266-B14" ref-type="bibr">Luquette <italic toggle="yes">et al.</italic>, 2019</xref>) or copy-number aberration (CNA) calling (<xref rid="btab266-B32" ref-type="bibr">Zaccaria and Raphael, 2020</xref>). <sc>doublet</sc>D considers each droplet independently but borrows strength from the entire dataset while using a maximum likelihood approach in order to rapidly classify an experiment as either a doublet or singlet prior to downstream analyses. We demonstrate on both simulated and real datasets that these design choices allow <sc>doublet</sc>D to be utilized in conjunction with any downstream analysis of choice and therefore obviates the need for more complex downstream methods to individually account for the presence of doublets within their own models.</p>
  </sec>
  <sec>
    <title>2 Materials and methods</title>
    <sec>
      <title>2.1 Generative model</title>
      <p>Similarly to scRNA-seq, there are two main types of high-throughput cell capture strategies in scDNA-seq: microfluidics and well-based protocols, which, respectively, distribute a cell suspension into either droplets or wells (<xref rid="btab266-B1" ref-type="bibr">Chen <italic toggle="yes">et al.</italic>, 2019</xref>; <xref rid="btab266-B7" ref-type="bibr">Hwang <italic toggle="yes">et al.</italic>, 2018</xref>). Here, we use the term âdropletâ independent of the used technology. Consider a scDNA-seq experiment with <italic toggle="yes">n</italic> droplets and <italic toggle="yes">m</italic> mutation loci that were identified after read alignment and variant calling. Each mutation locus has two alleles: a reference allele and a variant allele. Thus, we are given <inline-formula id="IE6"><mml:math id="IM6" display="inline" overflow="scroll"><mml:mrow><mml:mi>C</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">]</mml:mo><mml:mo>â</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">N</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>Ã</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> total read counts and <inline-formula id="IE7"><mml:math id="IM7" display="inline" overflow="scroll"><mml:mrow><mml:mi>V</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">]</mml:mo><mml:mo>â</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">N</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>Ã</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> variant counts, which are independent across droplets and loci. Read counts <inline-formula id="IE8"><mml:math id="IM8" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE9"><mml:math id="IM9" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> of mutation locus <italic toggle="yes">j</italic> in droplet <italic toggle="yes">i</italic> are affected by (i) whether droplet <italic toggle="yes">i</italic> is a doublet (Section 2.1.1), (ii) the genotype(s) at locus <italic toggle="yes">j</italic> in the droplet (Section 2.1.2), and errors during sequencing including (iii) ADO (Section 2.1.3) and (iv) amplification bias and sequencing errors (Section 2.1.4). We make these relationships explicit in a generative model for <inline-formula id="IE10"><mml:math id="IM10" display="inline" overflow="scroll"><mml:mi>C</mml:mi></mml:math></inline-formula> and <inline-formula id="IE11"><mml:math id="IM11" display="inline" overflow="scroll"><mml:mi>V</mml:mi></mml:math></inline-formula> (<xref rid="btab266-F2" ref-type="fig">Fig.Â 2</xref>).</p>
      <fig position="float" id="btab266-F2">
        <label>Fig. 2.</label>
        <caption>
          <p>Plate diagram of <sc>doublet</sc>D âs graphical model. Observed total and variant read counts <inline-formula id="IE12"><mml:math id="IM12" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>C</mml:mi><mml:mo>,</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> of <italic toggle="yes">m</italic> loci in <italic toggle="yes">n</italic> droplets are affected by doublet status <inline-formula id="IE13"><mml:math id="IM13" display="inline" overflow="scroll"><mml:mi>z</mml:mi></mml:math></inline-formula>, ADO and additional errors during sequencing</p>
        </caption>
        <graphic xlink:href="btab266f2" position="float"/>
      </fig>
      <sec>
        <title>2.1.1 Doublet model</title>
        <p>In the following, we will define random variables <inline-formula id="IE14"><mml:math id="IM14" display="inline" overflow="scroll"><mml:mrow><mml:mi>z</mml:mi><mml:mo>â</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:mrow><mml:mi>n</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula>, where <italic toggle="yes">z<sub>i</sub></italic> indicates whether droplet <italic toggle="yes">i</italic> is a doublet (i.e. <italic toggle="yes">z<sub>i</sub></italic>â=â1) or a singlet (i.e. <italic toggle="yes">z<sub>i</sub></italic>â=â0). During the capture step, cells are released into a nozzle with a constant rate <italic toggle="yes">r</italic> and there is a fixed time-interval <italic toggle="yes">t</italic> in which a droplet is formed. The number of cells in a droplet is given by the number of cells that enter the nozzle in the time-interval during which the droplet is formed. Therefore, the prior on the doublet probability is a Poisson distribution with mean <inline-formula id="IE15"><mml:math id="IM15" display="inline" overflow="scroll"><mml:mrow><mml:mo>Î»</mml:mo><mml:mo>=</mml:mo><mml:mi>r</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:math></inline-formula>. Moreover, only nonempty droplets will yield sequence reads. This combined with the fact that doublets are composed of two cells, we have that <italic toggle="yes">z<sub>i</sub></italic>â=â1, i.e. the event of droplet <italic toggle="yes">i</italic> being a doublet, equals
<disp-formula id="E1"><mml:math id="M1" display="block" overflow="scroll"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mo>Î</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo>;</mml:mo><mml:mo>Î»</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:munderover><mml:mo>â</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>â</mml:mo></mml:munderover><mml:mo>Î</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo>;</mml:mo><mml:mo>Î»</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mo>Î</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo>;</mml:mo><mml:mo>Î»</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>â</mml:mo><mml:mo>Î</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo>;</mml:mo><mml:mo>Î»</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>where <inline-formula id="IE16"><mml:math id="IM16" display="inline" overflow="scroll"><mml:mrow><mml:mo>Î</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo>;</mml:mo><mml:mo>Î»</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is the probability of <inline-formula id="IE17"><mml:math id="IM17" display="inline" overflow="scroll"><mml:mrow><mml:mi>k</mml:mi><mml:mo>â</mml:mo><mml:mi mathvariant="double-struck">N</mml:mi></mml:mrow></mml:math></inline-formula> occurrences (here cells) under a Poisson distribution with mean <italic toggle="yes">Î»</italic>. In practice <italic toggle="yes">rt</italic> is very small (i.e. <inline-formula id="IE18"><mml:math id="IM18" display="inline" overflow="scroll"><mml:mrow><mml:mo>Î»</mml:mo><mml:mo>âª</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>), and thus the mass of the Poisson distribution <inline-formula id="IE19"><mml:math id="IM19" display="inline" overflow="scroll"><mml:mrow><mml:mo>Î</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo>;</mml:mo><mml:mo>Î»</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is concentrated around two outcomes <inline-formula id="IE20"><mml:math id="IM20" display="inline" overflow="scroll"><mml:mrow><mml:mi>k</mml:mi><mml:mo>â</mml:mo><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>. Therefore, <italic toggle="yes">z<sub>i</sub></italic> can be approximately modeled by a Bernoulli distribution with probability of success <inline-formula id="IE21"><mml:math id="IM21" display="inline" overflow="scroll"><mml:mrow><mml:mo>Î´</mml:mo><mml:mo>=</mml:mo><mml:mo>Î</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo>;</mml:mo><mml:mo>Î»</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>/</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mo>Î</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>;</mml:mo><mml:mo>Î»</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mo>Î</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo>;</mml:mo><mml:mo>Î»</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> so that
<disp-formula id="E2"><mml:math id="M2" display="block" overflow="scroll"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mo>Î´</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p>
        <p>Considering independence between distinct droplets, we get
<disp-formula id="E3"><label>(1)</label><mml:math id="M3" display="block" overflow="scroll"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munderover><mml:mo>â</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover><mml:mrow><mml:msup><mml:mrow><mml:mo>Î´</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:msup></mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>â</mml:mo><mml:mo>Î´</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>â</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p>
      </sec>
      <sec>
        <title>2.1.2 Genotype model</title>
        <p>We make the simplifying assumption that each mutation locus has copy number 2 in a single cellâwe show robustness of violations to this assumption in Section 3.1. Thus the genotype of a locus <italic toggle="yes">j</italic> in a single cell can be in one of three states: (i) wild-type (wt) where both copies have the reference allele, (ii) heterozygous (het) with one variant and one reference copy and (iii) homozygous (hom) where both copies have the variant allele. Let <inline-formula id="IE22"><mml:math id="IM22" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mo>Î¼</mml:mo></mml:mrow><mml:mrow><mml:mtext>wt</mml:mtext><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>â</mml:mo><mml:msub><mml:mrow><mml:mo>Î¼</mml:mo></mml:mrow><mml:mrow><mml:mtext>het</mml:mtext><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE23"><mml:math id="IM23" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mo>Î¼</mml:mo></mml:mrow><mml:mrow><mml:mtext>hom</mml:mtext><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> be the mutation probabilities at locus <italic toggle="yes">j</italic> of the three types, respectively, such that <inline-formula id="IE24"><mml:math id="IM24" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mo>Î¼</mml:mo></mml:mrow><mml:mrow><mml:mtext>wt</mml:mtext><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mo>Î¼</mml:mo></mml:mrow><mml:mrow><mml:mtext>het</mml:mtext><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mo>Î¼</mml:mo></mml:mrow><mml:mrow><mml:mtext>hom</mml:mtext><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>. Let <inline-formula id="IE25"><mml:math id="IM25" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> indicate the VAF at locus <italic toggle="yes">j</italic> in droplet <italic toggle="yes">i</italic>. In case <italic toggle="yes">i</italic> is a singlet, we have that <inline-formula id="IE26"><mml:math id="IM26" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>â</mml:mo><mml:msub><mml:mrow><mml:mo>Î£</mml:mo></mml:mrow><mml:mrow><mml:mtext>singlet</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> where <inline-formula id="IE27"><mml:math id="IM27" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mo>Î£</mml:mo></mml:mrow><mml:mrow><mml:mtext>singlet</mml:mtext></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> for any locus <italic toggle="yes">j</italic>. On the other hand, if <italic toggle="yes">i</italic> is a doublet, we have that <inline-formula id="IE28"><mml:math id="IM28" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>â</mml:mo><mml:msub><mml:mrow><mml:mo>Î£</mml:mo></mml:mrow><mml:mrow><mml:mtext>doublet</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> where <inline-formula id="IE29"><mml:math id="IM29" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mo>Î£</mml:mo></mml:mrow><mml:mrow><mml:mtext>doublet</mml:mtext></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>/</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> for any locus <italic toggle="yes">j</italic>. For a droplet <italic toggle="yes">i</italic> comprising of a single cell (<italic toggle="yes">z<sub>i</sub></italic>â=â0), the probability <inline-formula id="IE30"><mml:math id="IM30" display="inline" overflow="scroll"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> equals
<disp-formula id="E4"><mml:math id="M4" display="block" overflow="scroll"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="true">{</mml:mo><mml:mrow><mml:mtable><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mrow><mml:mo>Î¼</mml:mo></mml:mrow><mml:mrow><mml:mtext>wt</mml:mtext><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mtext>if</mml:mtext><mml:mo>â</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mrow><mml:mo>Î¼</mml:mo></mml:mrow><mml:mrow><mml:mtext>het</mml:mtext><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mtext>if</mml:mtext><mml:mo>Â </mml:mo><mml:mo>â</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mrow><mml:mo>Î¼</mml:mo></mml:mrow><mml:mrow><mml:mtext>hom</mml:mtext><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mtext>if</mml:mtext><mml:mo>â</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mtext>otherwise</mml:mtext><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula></p>
        <p>Following current single-cell literature (<xref rid="btab266-B6" ref-type="bibr">Gerstung <italic toggle="yes">et al.</italic>, 2012</xref>; <xref rid="btab266-B33" ref-type="bibr">Zafar <italic toggle="yes">et al.</italic>, 2016</xref>), we assume that a doublet contains two cells with independent genotypes. Therefore, we may define <inline-formula id="IE31"><mml:math id="IM31" display="inline" overflow="scroll"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> using probabilities <inline-formula id="IE32"><mml:math id="IM32" display="inline" overflow="scroll"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> as
<disp-formula id="E5"><mml:math id="M5" display="block" overflow="scroll"><mml:mrow><mml:mfrac><mml:mrow><mml:munder><mml:mo>â</mml:mo><mml:mrow><mml:mi>g</mml:mi><mml:mo>,</mml:mo><mml:mi>h</mml:mi><mml:mo>â</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>g</mml:mi><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>h</mml:mi><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:munder><mml:mo>â</mml:mo><mml:mrow><mml:mi>g</mml:mi><mml:mo>,</mml:mo><mml:mi>h</mml:mi><mml:mo>â</mml:mo><mml:msub><mml:mrow><mml:mo>Î£</mml:mo></mml:mrow><mml:mrow><mml:mtext>singlet</mml:mtext></mml:mrow></mml:msub><mml:mo>Ã</mml:mo><mml:msub><mml:mrow><mml:mo>Î£</mml:mo></mml:mrow><mml:mrow><mml:mtext>singlet</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:munder><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>g</mml:mi><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>h</mml:mi><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>where <inline-formula id="IE33"><mml:math id="IM33" display="inline" overflow="scroll"><mml:mrow><mml:mi>S</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>g</mml:mi><mml:mo>,</mml:mo><mml:mi>h</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>â</mml:mo><mml:msub><mml:mrow><mml:mo>Î£</mml:mo></mml:mrow><mml:mrow><mml:mtext>singlet</mml:mtext></mml:mrow></mml:msub><mml:mo>Ã</mml:mo><mml:msub><mml:mrow><mml:mo>Î£</mml:mo></mml:mrow><mml:mrow><mml:mtext>singlet</mml:mtext></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:mn>2</mml:mn><mml:mi>g</mml:mi><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:mi>h</mml:mi><mml:mo>=</mml:mo><mml:mn>4</mml:mn><mml:mi>f</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> gives all pairs (<italic toggle="yes">g</italic>, <italic toggle="yes">h</italic>) of VAFs in <inline-formula id="IE34"><mml:math id="IM34" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mo>Î£</mml:mo></mml:mrow><mml:mrow><mml:mtext>singlet</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> that result in the doublet VAF <italic toggle="yes">f</italic>. For example, a doublet VAF <italic toggle="yes">f</italic>â=â1/2 results from two cells with pairs (<italic toggle="yes">g</italic>, <italic toggle="yes">h</italic>) of VAFs in the set <inline-formula id="IE35"><mml:math id="IM35" display="inline" overflow="scroll"><mml:mrow><mml:mi>S</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>.</p>
      </sec>
      <sec>
        <title>2.1.3 ADO model</title>
        <p>We follow the work in <xref rid="btab266-B24" ref-type="bibr">Posada (2020)</xref> and <xref rid="btab266-B33" ref-type="bibr">Zafar <italic toggle="yes">et al.</italic> (2016)</xref> to model the shift in VAF due to ADOs. In this model, ADO is introduced by deciding for each cell whether a given allele is amplified or not according to a specific probability <italic toggle="yes">Î²</italic> known as the ADO rate. Dropout of distinct alleles is assumed to be independent and the ADO rate <italic toggle="yes">Î²</italic> is assumed to be constant for all cells and all loci. Although this could be easily extended to account for site-specific ADO as considered in other work (<xref rid="btab266-B11" ref-type="bibr">LÃ¤hnemann <italic toggle="yes">et al.</italic>, 2020</xref>); here, we opt for a global ADO rate to reduce the number of parameters. The VAF <inline-formula id="IE36"><mml:math id="IM36" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> at locus <italic toggle="yes">j</italic> in droplet <italic toggle="yes">i</italic> after the dropout event depends on the VAF <inline-formula id="IE37"><mml:math id="IM37" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and doublet indicator <italic toggle="yes">z<sub>i</sub></italic> (<xref rid="btab266-F2" ref-type="fig">Fig.Â 2</xref>). Specifically, each possible pair <inline-formula id="IE38"><mml:math id="IM38" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, where <inline-formula id="IE39"><mml:math id="IM39" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>â</mml:mo><mml:msub><mml:mrow><mml:mo>Î£</mml:mo></mml:mrow><mml:mrow><mml:mtext>singlet</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> when <italic toggle="yes">z<sub>i</sub></italic>â=â0 and <inline-formula id="IE40"><mml:math id="IM40" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>â</mml:mo><mml:msub><mml:mrow><mml:mo>Î£</mml:mo></mml:mrow><mml:mrow><mml:mtext>doublet</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> when <italic toggle="yes">z<sub>i</sub></italic>â=â1, can yield varying <inline-formula id="IE41"><mml:math id="IM41" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> with probabilities that depend on the number of alleles that are dropped during amplification. Using that each mutation locus has copy number 2 in a single cell and allowing any number of copies to drop out, we have <inline-formula id="IE42"><mml:math id="IM42" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>â</mml:mo><mml:msub><mml:mrow><mml:mo>Î</mml:mo></mml:mrow><mml:mrow><mml:mtext>singlet</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> where <inline-formula id="IE43"><mml:math id="IM43" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mo>Î</mml:mo></mml:mrow><mml:mrow><mml:mtext>singlet</mml:mtext></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> if droplet <italic toggle="yes">i</italic> is a singlet. Conversely, if <italic toggle="yes">i</italic> is a doublet, we have <inline-formula id="IE44"><mml:math id="IM44" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>â</mml:mo><mml:msub><mml:mrow><mml:mo>Î</mml:mo></mml:mrow><mml:mrow><mml:mtext>doublet</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> where <inline-formula id="IE45"><mml:math id="IM45" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mo>Î</mml:mo></mml:mrow><mml:mrow><mml:mtext>doublet</mml:mtext></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>/</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>/</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>. <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S1</xref> lists all values of <inline-formula id="IE46"><mml:math id="IM46" display="inline" overflow="scroll"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> for varying <inline-formula id="IE47"><mml:math id="IM47" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> and given ADO rate <italic toggle="yes">Î²</italic>. Supplementary Figure S1 shows an illustrative example of ADO.</p>
      </sec>
      <sec>
        <title>2.1.4 Read count model</title>
        <p>Beyond ADO, there are two types of additional errors that affect read counts <inline-formula id="IE48"><mml:math id="IM48" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> and lead to an observed VAF <inline-formula id="IE49"><mml:math id="IM49" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> that differs from the latent VAF <inline-formula id="IE50"><mml:math id="IM50" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> after ADO: (i) copy errors, which occur early during PCR and lead to a propagation of incorrect nucleotides, and (ii) allelic imbalance, where amplification is biased toward one of the alleles (<xref rid="btab266-B2" ref-type="bibr">De Bourcy <italic toggle="yes">et al.</italic>, 2014</xref>). We model the resulting overdispersion with a beta-binomial as is standard in the field (<xref rid="btab266-B6" ref-type="bibr">Gerstung <italic toggle="yes">et al.</italic>, 2012</xref>; <xref rid="btab266-B11" ref-type="bibr">LÃ¤hnemann <italic toggle="yes">et al.</italic>, 2020</xref>; <xref rid="btab266-B33" ref-type="bibr">Zafar <italic toggle="yes">et al.</italic>, 2016</xref>). We use an uninformative prior on total read counts <inline-formula id="IE51"><mml:math id="IM51" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> yielding
<disp-formula id="E6"><mml:math id="M6" display="block" overflow="scroll"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>â</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p>
        <p>While copy errors and uneven amplification errors happen simultaneously during the amplification stage, here, following <xref rid="btab266-B11" ref-type="bibr">LÃ¤hnemann <italic toggle="yes">et al.</italic> (2020)</xref>, we employ a simpler model that assumes that the copy errors precede the allelic imbalance during amplification. We capture copy errors using a specified false positive rate <inline-formula id="IE52"><mml:math id="IM52" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mo>Î±</mml:mo></mml:mrow><mml:mrow><mml:mtext>fp</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, which is the probability of generating an alternate allele in the copy when the template has the reference allele, and false negative rate <inline-formula id="IE53"><mml:math id="IM53" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mo>Î±</mml:mo></mml:mrow><mml:mrow><mml:mtext>fn</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, which is the probability of generating a reference allele in the copy when the template has the alternate allele. Specifically, the probability <inline-formula id="IE54"><mml:math id="IM54" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> of producing a copy with the alternate allele at locus <italic toggle="yes">j</italic> in experiment <italic toggle="yes">i</italic> is given by
<disp-formula id="E7"><mml:math id="M7" display="block" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>â</mml:mo><mml:msub><mml:mrow><mml:mo>Î±</mml:mo></mml:mrow><mml:mrow><mml:mtext>fn</mml:mtext></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>â</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mrow><mml:mo>Î±</mml:mo></mml:mrow><mml:mrow><mml:mtext>fp</mml:mtext></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mo>Î±</mml:mo></mml:mrow><mml:mrow><mml:mtext>fp</mml:mtext></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>â</mml:mo><mml:msub><mml:mrow><mml:mo>Î±</mml:mo></mml:mrow><mml:mrow><mml:mtext>fp</mml:mtext></mml:mrow></mml:msub><mml:mo>â</mml:mo><mml:msub><mml:mrow><mml:mo>Î±</mml:mo></mml:mrow><mml:mrow><mml:mtext>fn</mml:mtext></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p>
        <p>The number <inline-formula id="IE55"><mml:math id="IM55" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> of variant reads resulting after amplification in the presence of allelic imbalance is modeled by the following beta-binomial distribution
<disp-formula id="E8"><mml:math id="M8" display="block" overflow="scroll"><mml:mtable><mml:mtr><mml:mtd><mml:msub><mml:mrow><mml:mo>Ï</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>â¼</mml:mo><mml:mtext>beta</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mo>Ï</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>â¼</mml:mo><mml:mtext>Binom</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mo>Ï</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula>where <italic toggle="yes">s</italic> is the precision parameter that quantifies allelic imbalance error. A low precision <italic toggle="yes">s</italic> signifies high unevenness in amplification.</p>
      </sec>
    </sec>
    <sec>
      <title>2.2 Posterior probability</title>
      <p>To determine which droplets are doublets, we are interested in the posterior probability of <inline-formula id="IE56"><mml:math id="IM56" display="inline" overflow="scroll"><mml:mi>z</mml:mi></mml:math></inline-formula> for the given single-cell sequencing data <inline-formula id="IE57"><mml:math id="IM57" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>C</mml:mi><mml:mo>,</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, which is defined as
<disp-formula id="E9"><label>(2)</label><mml:math id="M9" display="block" overflow="scroll"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo>|</mml:mo><mml:mi>C</mml:mi><mml:mo>,</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>C</mml:mi><mml:mo>,</mml:mo><mml:mi>V</mml:mi><mml:mo>|</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>C</mml:mi><mml:mo>,</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac><mml:mo>â</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>C</mml:mi><mml:mo>,</mml:mo><mml:mi>V</mml:mi><mml:mo>|</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p>
      <p>In line with current methods (<xref rid="btab266-B33" ref-type="bibr">Zafar <italic toggle="yes">et al.</italic>, 2016</xref>, <xref rid="btab266-B35" ref-type="bibr">2019</xref>), we use independence of read counts across mutation loci and droplets and obtain
<disp-formula id="E10"><mml:math id="M10" display="block" overflow="scroll"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>C</mml:mi><mml:mo>,</mml:mo><mml:mi>V</mml:mi><mml:mo>|</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munderover><mml:mo>â</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover><mml:mrow><mml:munderover><mml:mo>â</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>m</mml:mi></mml:munderover><mml:mi>P</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p>
      <p>We now express <inline-formula id="IE58"><mml:math id="IM58" display="inline" overflow="scroll"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> in terms of <inline-formula id="IE59"><mml:math id="IM59" display="inline" overflow="scroll"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> (described in Section 2.1.2), <inline-formula id="IE60"><mml:math id="IM60" display="inline" overflow="scroll"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> (described in Section 2.1.3) and <inline-formula id="IE61"><mml:math id="IM61" display="inline" overflow="scroll"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> (described in Section 2.1.4). Marginalizing over <inline-formula id="IE62"><mml:math id="IM62" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE63"><mml:math id="IM63" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> yields
<disp-formula id="E11"><mml:math id="M11" display="block" overflow="scroll"><mml:mtable><mml:mtr><mml:mtd><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mo>â</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>â</mml:mo><mml:msub><mml:mrow><mml:mo>Î£</mml:mo></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:munder><mml:mrow><mml:munder><mml:mo>â</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>â</mml:mo><mml:msub><mml:mrow><mml:mo>Î</mml:mo></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:munder><mml:mi>P</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo>=</mml:mo><mml:munder><mml:mo>â</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>â</mml:mo><mml:msub><mml:mrow><mml:mo>Î£</mml:mo></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:munder><mml:mrow><mml:munder><mml:mo>â</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>â</mml:mo><mml:msub><mml:mrow><mml:mo>Î</mml:mo></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:munder><mml:mi>P</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo>=</mml:mo><mml:munder><mml:mo>â</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>â</mml:mo><mml:msub><mml:mrow><mml:mo>Î£</mml:mo></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:munder><mml:mrow><mml:munder><mml:mo>â</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>â</mml:mo><mml:msub><mml:mrow><mml:mo>Î</mml:mo></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:munder><mml:mi>P</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula></p>
      <p>where
<disp-formula id="E12"><mml:math id="M12" display="block" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mo>Î£</mml:mo></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="true">{</mml:mo><mml:mrow><mml:mtable><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mrow><mml:mo>Î£</mml:mo></mml:mrow><mml:mrow><mml:mtext>singlet</mml:mtext></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>â</mml:mo><mml:mtext>if</mml:mtext><mml:mo>â</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mrow><mml:mo>Î£</mml:mo></mml:mrow><mml:mrow><mml:mtext>doublet</mml:mtext></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>â</mml:mo><mml:mtext>otherwise</mml:mtext><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow><mml:mo>â</mml:mo><mml:mo>Â </mml:mo><mml:mtext>and</mml:mtext><mml:mo>Â </mml:mo><mml:mo>â</mml:mo><mml:msub><mml:mrow><mml:mo>Î</mml:mo></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="true">{</mml:mo><mml:mrow><mml:mtable><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mrow><mml:mo>Î</mml:mo></mml:mrow><mml:mrow><mml:mtext>singlet</mml:mtext></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>â</mml:mo><mml:mtext>if</mml:mtext><mml:mo>â</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mrow><mml:mo>Î</mml:mo></mml:mrow><mml:mrow><mml:mtext>doublet</mml:mtext></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>â</mml:mo><mml:mtext>otherwise</mml:mtext><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula></p>
    </sec>
    <sec>
      <title>2.3 doubletD</title>
      <p>Our goal is to find <inline-formula id="IE64"><mml:math id="IM64" display="inline" overflow="scroll"><mml:mrow><mml:mi>z</mml:mi><mml:mo>â</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:mrow><mml:mi>n</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula> such that the likelihood function [<xref rid="E9" ref-type="disp-formula">Equation (2)</xref>] is maximized. Substituting the doublet prior from <xref rid="E3" ref-type="disp-formula">Equation (1)</xref> in <xref rid="E9" ref-type="disp-formula">Equation (2)</xref> and taking <inline-formula id="IE65"><mml:math id="IM65" display="inline" overflow="scroll"><mml:mrow><mml:mtext>log</mml:mtext><mml:mo>â</mml:mo></mml:mrow></mml:math></inline-formula>, we get
<disp-formula id="E13"><label>(3)</label><mml:math id="M13" display="block" overflow="scroll"><mml:mrow><mml:mtext>log</mml:mtext><mml:mo>â</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo>|</mml:mo><mml:mi>C</mml:mi><mml:mo>,</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munderover><mml:mo>â</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover><mml:mrow><mml:munderover><mml:mo>â</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>m</mml:mi></mml:munderover><mml:mrow><mml:mo>â</mml:mo><mml:mtext>log</mml:mtext><mml:mo>â</mml:mo></mml:mrow></mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:munderover><mml:mo>â</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover><mml:mrow><mml:mo>â</mml:mo><mml:mtext>log</mml:mtext><mml:mo>â</mml:mo></mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mi>K</mml:mi></mml:mrow></mml:math>,</disp-formula>where <italic toggle="yes">K</italic> is the constant of proportionality. Since <italic toggle="yes">z<sub>i</sub></italic> is an indicator variable (i.e. <inline-formula id="IE66"><mml:math id="IM66" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>â</mml:mo><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>), we linearize the above equation in terms of <inline-formula id="IE67"><mml:math id="IM67" display="inline" overflow="scroll"><mml:mi>z</mml:mi></mml:math></inline-formula> using
<disp-formula id="E14"><mml:math id="M14" display="block" overflow="scroll"><mml:mrow><mml:mtext>log</mml:mtext><mml:mo>â</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mtext>log</mml:mtext><mml:mo>â</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:msub><mml:mrow><mml:mo>Î©</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p>
      <p>where
<disp-formula id="E15"><mml:math id="M15" display="block" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mo>Î©</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mtext>log</mml:mtext><mml:mo>â</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mfrac><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>and
<disp-formula id="E16"><mml:math id="M16" display="block" overflow="scroll"><mml:mi mathvariant="normal">Â </mml:mi><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:maligngroup/><mml:mi>l</mml:mi><mml:mi mathvariant="italic">ogP</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mi mathvariant="italic">logP</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>)</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mfenced separators="|"><mml:mrow><mml:mfrac><mml:mrow><mml:mi mathvariant="normal">log</mml:mi><mml:mi>P</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">log</mml:mi><mml:mi>P</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>)</mml:mo></mml:mrow></mml:mfrac></mml:mrow></mml:mfenced></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:maligngroup/><mml:mo>=</mml:mo><mml:mi mathvariant="italic">logP</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>â</mml:mo><mml:mtext>log</mml:mtext><mml:mo>â</mml:mo><mml:mfenced separators="|"><mml:mrow><mml:mfrac><mml:mrow><mml:mo>Î´</mml:mo></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mo>Î´</mml:mo></mml:mrow></mml:mfrac></mml:mrow></mml:mfenced><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula>where the last equality uses doublet prior model [<xref rid="E3" ref-type="disp-formula">Equation (1)</xref>]. Note that, since the read counts <inline-formula id="IE68"><mml:math id="IM68" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> are observed, the matrix <inline-formula id="IE69"><mml:math id="IM69" display="inline" overflow="scroll"><mml:mrow><mml:mo>Î©</mml:mo><mml:mo>=</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mrow><mml:mo>Î©</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">]</mml:mo><mml:mo>â</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>Ã</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> is constant. Ignoring the constant of proportionality <italic toggle="yes">K</italic>, which is independent of <inline-formula id="IE70"><mml:math id="IM70" display="inline" overflow="scroll"><mml:mi>z</mml:mi></mml:math></inline-formula>, and using linearization of <inline-formula id="IE71"><mml:math id="IM71" display="inline" overflow="scroll"><mml:mrow><mml:mtext>log</mml:mtext><mml:mo>â</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE72"><mml:math id="IM72" display="inline" overflow="scroll"><mml:mrow><mml:mtext>log</mml:mtext><mml:mo>â</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> in <xref rid="E13" ref-type="disp-formula">Equation (3)</xref>, we get the following linear objective function:
<disp-formula id="E17"><mml:math id="M17" display="block" overflow="scroll"><mml:mrow><mml:mi>J</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mo>Î¦</mml:mo><mml:mo>+</mml:mo><mml:munderover><mml:mo>â</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover><mml:mrow><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:munderover><mml:mo>â</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>m</mml:mi></mml:munderover><mml:mrow><mml:msub><mml:mrow><mml:mo>Î©</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>+</mml:mo><mml:mtext>log</mml:mtext><mml:mo>â</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mfrac><mml:mo>Î´</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>â</mml:mo><mml:mo>Î´</mml:mo></mml:mrow></mml:mfrac></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p>
      <p>where <inline-formula id="IE73"><mml:math id="IM73" display="inline" overflow="scroll"><mml:mo>Î¦</mml:mo></mml:math></inline-formula> is a constant defined as follows:
<disp-formula id="E18"><mml:math id="M18" display="block" overflow="scroll"><mml:mrow><mml:mo>Î¦</mml:mo><mml:mo>=</mml:mo><mml:munderover><mml:mo>â</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover><mml:mrow><mml:munderover><mml:mo>â</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>m</mml:mi></mml:munderover><mml:mrow><mml:mo>â</mml:mo><mml:mtext>log</mml:mtext><mml:mo>â</mml:mo></mml:mrow></mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:munderover><mml:mo>â</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover><mml:mrow><mml:mo>â</mml:mo><mml:mtext>log</mml:mtext><mml:mo>â</mml:mo></mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p>
      <p>Since <inline-formula id="IE74"><mml:math id="IM74" display="inline" overflow="scroll"><mml:mrow><mml:mi>J</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is linear, we have the following closed-form solution maximizing <inline-formula id="IE75"><mml:math id="IM75" display="inline" overflow="scroll"><mml:mrow><mml:mi>J</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>
Â <disp-formula id="E19"><mml:math id="M19" display="block" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mtable><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>â</mml:mo><mml:mtext>if</mml:mtext><mml:mo>â</mml:mo><mml:munderover><mml:mo>â</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>m</mml:mi></mml:munderover><mml:mrow><mml:msub><mml:mrow><mml:mo>Î©</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>+</mml:mo><mml:mtext>log</mml:mtext><mml:mo>â</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mfrac><mml:mo>Î´</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>â</mml:mo><mml:mo>Î´</mml:mo></mml:mrow></mml:mfrac></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>&gt;</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mo>â</mml:mo><mml:mtext>otherwise</mml:mtext><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula></p>
      <sec>
        <title>2.3.1 Implementation details</title>
        <p>Our resulting method, doubletD, identifies <inline-formula id="IE76"><mml:math id="IM76" display="inline" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold">z</mml:mi><mml:mo>â</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:mrow><mml:mi>n</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula> given total and variant read counts <inline-formula id="IE77"><mml:math id="IM77" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>C</mml:mi><mml:mo>,</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> with maximum posterior probability <inline-formula id="IE78"><mml:math id="IM78" display="inline" overflow="scroll"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo>|</mml:mo><mml:mi>C</mml:mi><mml:mo>,</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. To do so, doubletD requires input mutation probabilities <inline-formula id="IE79"><mml:math id="IM79" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mo>Î¼</mml:mo></mml:mrow><mml:mrow><mml:mtext>wt</mml:mtext></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mo>Î¼</mml:mo></mml:mrow><mml:mrow><mml:mtext>het</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE80"><mml:math id="IM80" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mo>Î¼</mml:mo></mml:mrow><mml:mrow><mml:mtext>hom</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> at each locus <italic toggle="yes">j</italic> used in the genotype model (Section 2.1.2), and the precision parameter <italic toggle="yes">s</italic> used in the read count model (Section 2.1.4). <xref rid="sup1" ref-type="supplementary-material">Supplementary Appendix</xref> A.1 describes a data-driven approach to estimate these parameters. Moreover, the doublet prior probability <italic toggle="yes">Î´</italic> can either be taken as input or estimated by maximizing the posterior probability. doubletD is implemented in Python 3, is open source (BSD-3-Clause license), and is available at <ext-link xlink:href="https://github.com/elkebir-group/doubletD" ext-link-type="uri">https://github.com/elkebir-group/doubletD</ext-link>.</p>
      </sec>
    </sec>
  </sec>
  <sec>
    <title>3 Results</title>
    <p>We evaluated the performance of <sc>doublet</sc>D via <italic toggle="yes">in-silico</italic> experiments with known ground-truth doublets (Section 3.1) as well as two real datasets: (i) a two cell line mixture (Section 3.2) and (ii) six patients with acute lymphoblastic leukemia (<xref rid="btab266-B5" ref-type="bibr">Gawad <italic toggle="yes">et al.</italic>, 2014</xref>) (Section 3.3).</p>
    <sec>
      <title>3.1 <italic toggle="yes">In-silico</italic> experiments</title>
      <p>We aim to answer the following questions: (i) Is <sc>doublet</sc>D agnostic to the choice of scDNA-seq assay and experimental design? (ii) How robust is <sc>doublet</sc>D to the presence of CNAs? (iii) Will the removal of doublets improve downstream analyses? To this end, we simulated scDNA-seq data of 10 genotypes under an evolutionary model that incorporates CNAs and SNVs, varying the number of SNVs <inline-formula id="IE81"><mml:math id="IM81" display="inline" overflow="scroll"><mml:mrow><mml:mi>m</mml:mi><mml:mo>â</mml:mo><mml:mo>{</mml:mo><mml:mn>10</mml:mn><mml:mo>,</mml:mo><mml:mn>50</mml:mn><mml:mo>,</mml:mo><mml:mn>100</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>, the doublet probability <inline-formula id="IE82"><mml:math id="IM82" display="inline" overflow="scroll"><mml:mrow><mml:mo>Î´</mml:mo><mml:mo>â</mml:mo><mml:mo>{</mml:mo><mml:mn>0.1</mml:mn><mml:mo>,</mml:mo><mml:mn>0.2</mml:mn><mml:mo>,</mml:mo><mml:mn>0.4</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>, the mean sequencing coverage <inline-formula id="IE83"><mml:math id="IM83" display="inline" overflow="scroll"><mml:mrow><mml:mi>c</mml:mi><mml:mo>â</mml:mo><mml:mo>{</mml:mo><mml:mn>10</mml:mn><mml:mo>Ã</mml:mo><mml:mo>,</mml:mo><mml:mn>50</mml:mn><mml:mo>Ã</mml:mo><mml:mo>,</mml:mo><mml:mn>100</mml:mn><mml:mo>Ã</mml:mo><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> and ADO probability <inline-formula id="IE84"><mml:math id="IM84" display="inline" overflow="scroll"><mml:mrow><mml:mo>Î²</mml:mo><mml:mo>â</mml:mo><mml:mo>{</mml:mo><mml:mn>0.0</mml:mn><mml:mo>,</mml:mo><mml:mn>0.05</mml:mn><mml:mo>,</mml:mo><mml:mn>0.25</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>. Each combination of simulation parameters was replicated with five different random number generator seeds, amounting to a total of 405 experiments. In each experiment, we simulated 500 <italic toggle="yes">in-silico droplet</italic>. We benchmarked our method against SCG (<xref rid="btab266-B26" ref-type="bibr">Roth <italic toggle="yes">et al.</italic>, 2016</xref>), a genotyping method for scDNA-seq data whose model optionally incorporates doublet detection, which we refer to as SCG:<sc>doublet</sc>, and <sc>Scrublet</sc> (<xref rid="btab266-B29" ref-type="bibr">Wolock <italic toggle="yes">et al.</italic>, 2019</xref>), a standalone doublet detection method designed for scRNA-seq data. We were not able to benchmark against <sc>Si</sc><sc>Clone</sc><sc>Fit</sc> (<xref rid="btab266-B35" ref-type="bibr">Zafar <italic toggle="yes">et al.</italic>, 2019</xref>) and <inline-formula id="IE85"><mml:math id="IM85" display="inline" overflow="scroll"><mml:mo>â</mml:mo></mml:math></inline-formula>SCITE (<xref rid="btab266-B10" ref-type="bibr">Kuipers <italic toggle="yes">et al.</italic>, 2017b</xref>), which are tree inference methods that also incorporate doublets, due to their prohibitive runtimes when run in doublet mode. <xref rid="sup1" ref-type="supplementary-material">Supplementary Appendix</xref> B.1 further details the simulation design, evolutionary model and method arguments. In particular, for SCG, we performed 25 restarts unless specified otherwise, using the restart with the maximum evidence lower bound (ELBO).</p>
      <sec>
        <title>3.1.1 Assay and design agnosticism</title>
        <p>We focus on simulations with a mean coverage of <inline-formula id="IE86"><mml:math id="IM86" display="inline" overflow="scroll"><mml:mrow><mml:mi>c</mml:mi><mml:mo>=</mml:mo><mml:mn>50</mml:mn><mml:mo>Ã</mml:mo></mml:mrow></mml:math></inline-formula> and simulated doublet probability of <inline-formula id="IE87"><mml:math id="IM87" display="inline" overflow="scroll"><mml:mrow><mml:mo>Î´</mml:mo><mml:mo>=</mml:mo><mml:mn>0.2</mml:mn></mml:mrow></mml:math></inline-formula>. We refer to <xref rid="sup1" ref-type="supplementary-material">Supplementary Appendix</xref> B.1 for other simulation regimes. While all three methods show increasing <italic toggle="yes">F</italic><sub>1</sub> scores (the harmonic mean between precision and recall) with increasing number <italic toggle="yes">m</italic> of mutations, <sc>doublet</sc>D achieves the highest <italic toggle="yes">F</italic><sub>1</sub> score (median: 0.88) compared to SCG:<sc>doublet</sc> (median: 0.76) and <sc>Scrublet</sc> (median: 0.37) (<xref rid="btab266-F3" ref-type="fig">Fig.Â 3a</xref>). Specifically, we find that <sc>Scrublet</sc> has the worst performance in terms of both recall (median: 0.35) and precision (median: 0.38), demonstrating that doublet detection methods developed for scRNA-seq data <italic toggle="yes">cannot</italic> be directly applied to scDNA-seq data. While both <sc>doublet</sc>D and SCG:<sc>doublet</sc> have equivalently high precision (SCG:<sc>doublet</sc> median: 0.99 versus <sc>doublet</sc>D median: 0.98), <sc>doublet</sc>D has superior recall (median: 0.78) among all methods (median recall of 0.67 for SCG:<sc>doublet</sc> and 0.35 for <sc>Scrublet</sc>). Strikingly, SCG:<sc>doublet</sc> performs poorly in the regime of a small number <italic toggle="yes">m</italic>â=â10 of mutations, with a median recall and precision of 0.21 and 1.00, compared to 0.70 and 0.87 for <sc>doublet</sc>D, respectively. Such small number of mutations do occur in practiceâe.g. the ALL data analyzed in Section 3.3.</p>
        <fig position="float" id="btab266-F3">
          <label>Fig. 3.</label>
          <caption>
            <p>Simulations show that <sc>doublet</sc>D has high recall and precision in doublet detection, outperforming SCG and Scrublet across various experimental regimes and improving performance in downstream genotyping. (<bold>a</bold>) <italic toggle="yes">F</italic><sub>1</sub> score, precision and recall of doublet detection for the three competing methods (doubletD, SCG:<sc>doublet</sc> and Scrublet) in simulations with varying ADO rate <italic toggle="yes">Î²</italic> and number of mutations <italic toggle="yes">m</italic> in the absence of CNAs (<italic toggle="yes">Î³</italic>â=â0). (<bold>b</bold>) Recall of the three kind of doublets, i.e. neotypic, nested and selflet. (<bold>c</bold>) <italic toggle="yes">F</italic><sub>1</sub> score, precision and recall by method in the presence of CNAs (<inline-formula id="IE88"><mml:math id="IM88" display="inline" overflow="scroll"><mml:mrow><mml:mo>Î³</mml:mo><mml:mo>â</mml:mo><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>0.1</mml:mn><mml:mo>,</mml:mo><mml:mn>0.5</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>) and varying ADO rate <italic toggle="yes">Î²</italic>. All results are for simulations with doublet probability <inline-formula id="IE89"><mml:math id="IM89" display="inline" overflow="scroll"><mml:mrow><mml:mo>Î´</mml:mo><mml:mo>=</mml:mo><mml:mn>0.2</mml:mn></mml:mrow></mml:math></inline-formula>, mean read depth <inline-formula id="IE90"><mml:math id="IM90" display="inline" overflow="scroll"><mml:mrow><mml:mi>c</mml:mi><mml:mo>=</mml:mo><mml:mn>50</mml:mn><mml:mo>Ã</mml:mo></mml:mrow></mml:math></inline-formula> and precision parameter <italic toggle="yes">s</italic>â=â15</p>
          </caption>
          <graphic xlink:href="btab266f3" position="float"/>
        </fig>
        <p>Zooming in on doublet type in <xref rid="btab266-F3" ref-type="fig">FigureÂ 3b</xref>, we find that all methods have the highest recall for neotypic doublets (median: 1.00 for <sc>doublet</sc>D, 1.00 for SCG:<sc>doublet</sc> and 0.50 for <sc>Scrublet</sc>), and that the recall increases for both nested and neotypic doublets with increasing number of mutations and increasing ADO. Notably, <sc>doublet</sc>D has the highest recall for nested doublets (median: 0.85) compared to SCG:<sc>doublet</sc> (median: 0.57) and <sc>Scrublet</sc> (median: 0.15). As expected, <sc>doublet</sc>D and SCG:<sc>doublet</sc> are unable to detect selflets for ADO rate 0.05 while <sc>Scrublet</sc> does detect a small proportion of selflets (median: 0.05). However, when ADO rate is 0.25, <sc>doublet</sc>D has significantly higher recall (median: 0.6) as compared with SCG:<sc>doublet</sc> (median: 0) and <sc>Scrublet</sc> (median: 0.2). Note that SCG:<sc>doublet</sc> is unable to detect selflets due to VAF discretization. Further, both SCG:<sc>doublet</sc> (IQR: 0.34â0.80) and <sc>Scrublet</sc> (IQR: 0.13â0.50) show large variance in recall rates as opposed to <sc>doublet</sc>D (IQR: 0.73â0.92).</p>
        <p>Additionally, we find that our method maintains its good performance in simulations when varying coverage and doublet probabilities (Supplementary <xref rid="sup1" ref-type="supplementary-material">Fig. S2</xref>). The lower bound of coverage for the <italic toggle="yes">in-silico</italic> experiments was <inline-formula id="IE91"><mml:math id="IM91" display="inline" overflow="scroll"><mml:mrow><mml:mn>10</mml:mn><mml:mo>Ã</mml:mo></mml:mrow></mml:math></inline-formula>. Even at such a low coverage, doubletD maintains its good performance (median precision: 0.83 and median recall 0.78, see Supplementary <xref rid="sup1" ref-type="supplementary-material">Fig. S2a</xref>). It is also important to note that <sc>doublet</sc>Dâs improved performance does not come at the expense of running time (Supplementary <xref rid="sup1" ref-type="supplementary-material">Fig. S4a</xref>, median: 14.9âs versus <inline-formula id="IE92"><mml:math id="IM92" display="inline" overflow="scroll"><mml:mrow><mml:mn>11</mml:mn><mml:mo>,</mml:mo><mml:mn>000.0</mml:mn></mml:mrow></mml:math></inline-formula> s for SCG:<sc>doublet</sc> and 4.1âs for Scrublet). Finally, doubletD is robust to the choice of user-specified parameters such as the precision <italic toggle="yes">s</italic> (<xref rid="sup1" ref-type="supplementary-material">Supplementary Appendix</xref> B.1.4, Supplementary Figs S5âS8). In summary, we find that <sc>doublet</sc>D is robust to many variations in experimental assays and design, outperforming SCG:<sc>doublet</sc> and <sc>Scrublet</sc>.</p>
      </sec>
      <sec>
        <title>3.1.2 Robustness with respect to CNAs</title>
        <p>In order to evaluate the robustness of doubletD to the presence of CNAs, we generated simulations with varying probability of CNAs <inline-formula id="IE93"><mml:math id="IM93" display="inline" overflow="scroll"><mml:mrow><mml:mo>Î³</mml:mo><mml:mo>â</mml:mo><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>0.1</mml:mn><mml:mo>,</mml:mo><mml:mn>0.5</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>, where <italic toggle="yes">Î³â</italic>=â0 represents simulations with no CNAs. More specifically, for each locus that undergoes a CNA (with probability <italic toggle="yes">Î³</italic>), we introduced a loss with probability <inline-formula id="IE94"><mml:math id="IM94" display="inline" overflow="scroll"><mml:mrow><mml:mi>â</mml:mi><mml:mo>â</mml:mo><mml:mo>{</mml:mo><mml:mn>0.1</mml:mn><mml:mo>,</mml:mo><mml:mn>0.5</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> and a gain otherwise. We ran SCG:<sc>doublet</sc> with five restarts due to increased runtimes compared to the copy-neutral simulations.</p>
        <p>Although doubletD does not explicitly account for CNAs, <xref rid="btab266-F3" ref-type="fig">Fig.Â 3c</xref> shows that doubletD is robust to varying CNA probability <italic toggle="yes">Î³</italic>, outperforming SCG:<sc>doublet</sc> and Scrublet in most regimes. Specifically, doubletD yields the highest recall (median: 0.79) with good precision (median: 0.98) resulting in the highest <italic toggle="yes">F</italic><sub>1</sub> score (median: 0.87) compared to SCG:<sc>doublet</sc> (median: 0.80) and Scrublet (0.36). While SCG:<sc>doublet</sc> has the same precision as doubletD (median: 0.98), this comes at the cost of lower recall (median: 0.73) compared to doubletD (median: 0.79).</p>
        <p>The robustness of doubletD can be explained by the observation that losses (deletions) introduced by CNAs behave similarly to ADOs, which is a key signal used by doubletD to detect doublets. We demonstrate the vulnerability of doubletD to copy number gains on simulations with highest possible CNA probability <italic toggle="yes">Î³â</italic>=â1 and lowest possible loss probability <inline-formula id="IE95"><mml:math id="IM95" display="inline" overflow="scroll"><mml:mrow><mml:mi>â</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> (Supplementary <xref rid="sup1" ref-type="supplementary-material">Fig. S3</xref>). Note that this kind of extreme presentation of CNAs is not observed in practice and that copy number losses including loss of heterozygosity events are common in cancer (<xref rid="btab266-B4" ref-type="bibr">El-Kebir, 2018</xref>; <xref rid="btab266-B18" ref-type="bibr">McPherson <italic toggle="yes">et al.</italic>, 2016</xref>; <xref rid="btab266-B28" ref-type="bibr">Satas <italic toggle="yes">et al.</italic>, 2020</xref>).</p>
        <p>In summary, we find that doubletD is robust to the presence of CNAs and outperforms both SCG:<sc>doublet</sc> and Scrublet in doublet detection.</p>
      </sec>
      <sec>
        <title>3.1.3 Improving downstream genotype calling</title>
        <p>SCG is a genotyping method for scDNA-seq data of tumors that includes doublet detection. It has two modes: in <italic toggle="yes">singlet mode</italic> (SCG:<sc>singlet</sc>) all droplets are considered singlets, whereas in <italic toggle="yes">doublet mode</italic> (SCG:<sc>doublet</sc>) genotypes and doublets in the sample are jointly inferred. Here, we assess whether the sequential use of doubletD followed by SCG:<sc>singlet</sc> (<sc>doublet</sc>Dâ+âSCG:<sc>singlet</sc>) performs better than SCG:<sc>singlet</sc> and SCG:<sc>doublet</sc>. In each of these settings, SCG is run with 25 restarts.</p>
        <p>Recall that each of our simulated instances contain 10 genotypes. To assess the performance of the three methods, we compute recall, precision and <italic toggle="yes">F</italic><sub>1</sub> score with respect to these ground-truth genotypes, considering a genotype as correctly inferred (i.e. a true positive) if it precisely matches a ground-truth genotype. Thus, if a method infers the exact set of 10 ground-truth genotypes, its recall, precision and <italic toggle="yes">F</italic><sub>1</sub> score will be 1. We find that <sc>doublet</sc>Dâ+âSCG:<sc>singlet</sc> has the highest <italic toggle="yes">F</italic><sub>1</sub> score (median: 0.95) compared to SCG:<sc>singlet</sc> (median: 0.73) and SCG:<sc>doublet</sc> (median 0.89) across all experimental regimes (<xref rid="btab266-F4" ref-type="fig">Fig.Â 4a</xref>). SCG:<sc>singlet</sc> has good genotype recall (median: 0.9) but reduced precision (median: 0.64) since it misidentifies doublets as cells with distinct genotypes. SCG:<sc>doublet</sc>, on the other hand, has better precision (median: 1.0) but filters out rare genotypes misidentified as doublets resulting in reduced recall (median: 0.80). <sc>doublet</sc>Dâ+âSCG:<sc>singlet</sc> yields the highest recall (median: 0.90) and precision (median: 1.0). In general, SCG:<sc>singlet</sc> calls more genotypes (median: 14) while SCG:<sc>doublet</sc> calls fewer genotypes (median: 8.5) compared to the ground truth of 10 genotypes (Supplementary <xref rid="sup1" ref-type="supplementary-material">Fig. S9</xref>). On the other hand, <sc>doublet</sc>Dâ+âSCG:<sc>singlet</sc> is closer to ground truth with a median of 9.5 distinct genotypes. Furthermore, <xref rid="btab266-F4" ref-type="fig">Fig.Â 4b</xref> shows that <sc>doublet</sc>Dâ+âSCG:<sc>singlet</sc> takes orders of magnitude less time compared to SCG:doublet. While SCG:singlet takes the least time to run, it also yields the lowest <italic toggle="yes">F</italic><sub>1</sub> score (<xref rid="btab266-F4" ref-type="fig">Fig.Â 4a</xref>).</p>
        <fig position="float" id="btab266-F4">
          <label>Fig. 4.</label>
          <caption>
            <p>Simulations show that removal of doublets using doubletD improves downstream genotype calling with reduced runtime. (<bold>a</bold>) <italic toggle="yes">F</italic><sub>1</sub> score, precision and recall of genotypes for <sc>doublet</sc>Dâ+âSCG:<sc>singlet</sc>, SCG:<sc>doublet</sc> and SCG:<sc>singlet</sc> for varying number of mutation <italic toggle="yes">m</italic> and ADO rate <italic toggle="yes">Î²</italic> and without CNAs (<italic toggle="yes">Î³</italic>â=â0). (<bold>b</bold>) Running time for genotype calling using <sc>doublet</sc>Dâ+âSCG:<sc>singlet</sc>, SCG:<sc>doublet</sc> and SCG:<sc>singlet</sc> for simulations with varying number of mutations <italic toggle="yes">m</italic> without CNAs (<italic toggle="yes">Î³</italic>â=â0). All results are for simulations with doublet probability <inline-formula id="IE96"><mml:math id="IM96" display="inline" overflow="scroll"><mml:mrow><mml:mo>Î´</mml:mo><mml:mo>=</mml:mo><mml:mn>0.2</mml:mn></mml:mrow></mml:math></inline-formula>, mean read depth <inline-formula id="IE97"><mml:math id="IM97" display="inline" overflow="scroll"><mml:mrow><mml:mi>c</mml:mi><mml:mo>=</mml:mo><mml:mn>50</mml:mn><mml:mo>Ã</mml:mo></mml:mrow></mml:math></inline-formula> and precision parameter <italic toggle="yes">s</italic>â=â15</p>
          </caption>
          <graphic xlink:href="btab266f4" position="float"/>
        </fig>
        <p>In summary, we find that the use of doubletD improves genotype calling of SCG while incurring runtimes comparable to SCG in singlet mode. This suggests that doublet removal using doubletD is a useful preprocessing step for downstream analyses of scDNA-seq data of tumors.</p>
      </sec>
    </sec>
    <sec>
      <title>3.2 Mixture of two cell lines</title>
      <p>We validated doubletD on a dataset of <inline-formula id="IE98"><mml:math id="IM98" display="inline" overflow="scroll"><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:mn>1569</mml:mn></mml:math></inline-formula> droplets comprised of a 50â50% mix of KG-1 and Raji cell lines (with <italic toggle="yes">m</italic>â=â26 loci) captured by Mission Bioâs Tapestri platform and sequenced by Illumina NextSeq (<ext-link xlink:href="https://portal.missionbio.com/datasets/KG-1-Raji-50-50-Myeloid" ext-link-type="uri">https://portal.missionbio.com/datasets/KG-1-Raji-50-50-Myeloid</ext-link>). <xref rid="sup1" ref-type="supplementary-material">Supplementary Appendix</xref> B.2 details the data preparation, including the exclusion of 23 cells that had a genotype distinct from the two cell lines. KG-1 had 12 heterozygous (het), 7 wt and 7 homozygous loci, while Raji had 11 heterozygous, 7 wt and 8 homozygous loci (Supplementary <xref rid="sup1" ref-type="supplementary-material">Fig. S10</xref>). The mean sequencing coverage <italic toggle="yes">c</italic> was <inline-formula id="IE99"><mml:math id="IM99" display="inline" overflow="scroll"><mml:mrow><mml:mn>110</mml:mn><mml:mo>Ã</mml:mo></mml:mrow></mml:math></inline-formula>. Following the procedure outlined in <xref rid="sup1" ref-type="supplementary-material">Supplementary Appendix</xref> A.1, we fit beta-binomial precision <italic toggle="yes">s</italic>â=â10.5, <inline-formula id="IE100"><mml:math id="IM100" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mo>Î±</mml:mo></mml:mrow><mml:mrow><mml:mtext>fp</mml:mtext></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0.015</mml:mn><mml:mo>,</mml:mo><mml:mo>â</mml:mo><mml:msub><mml:mrow><mml:mo>Î±</mml:mo></mml:mrow><mml:mrow><mml:mtext>fn</mml:mtext></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0.0073</mml:mn></mml:mrow></mml:math></inline-formula> and locus-specific mutation probabilities <inline-formula id="IE101"><mml:math id="IM101" display="inline" overflow="scroll"><mml:mi mathvariant="bold-italic">Î¼</mml:mi></mml:math></inline-formula> to the observed variant <inline-formula id="IE102"><mml:math id="IM102" display="inline" overflow="scroll"><mml:mi>V</mml:mi></mml:math></inline-formula> and total read counts <inline-formula id="IE103"><mml:math id="IM103" display="inline" overflow="scroll"><mml:mi>C</mml:mi></mml:math></inline-formula>. We used the experimental ADO rate (<inline-formula id="IE104"><mml:math id="IM104" display="inline" overflow="scroll"><mml:mo>Î²</mml:mo><mml:mo>=</mml:mo><mml:mn>0.06</mml:mn><mml:mo>)</mml:mo></mml:math></inline-formula> previously estimated by <xref rid="btab266-B21" ref-type="bibr">Morita <italic toggle="yes">et al.</italic> (2020)</xref> on a large patient cohort using Mission Bioâs Tapestri platform.</p>
      <p>There are two unique characteristics of this dataset that permit identification of neotypic doublets for orthogonal validation: (i) the droplets are easily clustered into two clones by the cell line of origin (Supplementary <xref rid="sup1" ref-type="supplementary-material">Fig. S10</xref>) and (ii) the droplets are comprised of distinct cell lines with distinct evolutionary histories. These characteristics are uncommon in regular datasets where the number of clones and associated genotypes is unknown <italic toggle="yes">a priori</italic> and droplets originate from a single tumor whose clones have a shared evolutionary history. As such, we conclude that doublets will be either neotypic (one cell from each cell line), or selflets (two cells from one cell line).</p>
      <p>Using the property that the two cell lines have independent origins and relaxing Mission Bioâs standard filtering criteria, we identified an additional set of five <italic toggle="yes">validation loci</italic> with distinct wt/homozygous states among the two cell lines, i.e. each validation locus has state wt (hom) in one cell line and hom (wt) in the other (<xref rid="btab266-F5" ref-type="fig">Fig.Â 5a</xref>). Recall that a singlet <italic toggle="yes">i</italic> will have an observed VAF <inline-formula id="IE105"><mml:math id="IM105" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> of approximately 1 if locus <italic toggle="yes">j</italic> is homozygous and VAF 0 if locus <italic toggle="yes">j</italic> is wt. As such, any droplets with observed VAF not close to either 0 or 1 (<xref rid="btab266-F5" ref-type="fig">Fig.Â 5a</xref>) indicate that the droplet may be a neotypic doublet comprised of a cell from each cell line. We therefore assign a <italic toggle="yes">neotypic doublet confidence score</italic> (NCS) to each droplet, counting the number of validation loci with VAF between 0.15 and 0.85. This approach yielded <inline-formula id="IE106"><mml:math id="IM106" display="inline" overflow="scroll"><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>494</mml:mn></mml:mrow></mml:math></inline-formula> droplets with <inline-formula id="IE107"><mml:math id="IM107" display="inline" overflow="scroll"><mml:mrow><mml:mtext>NCS</mml:mtext><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula>, 33 droplets with <inline-formula id="IE108"><mml:math id="IM108" display="inline" overflow="scroll"><mml:mrow><mml:mtext>NCS</mml:mtext><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> and 42 droplets with <inline-formula id="IE109"><mml:math id="IM109" display="inline" overflow="scroll"><mml:mrow><mml:mtext>NCS</mml:mtext><mml:mo>â¥</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math></inline-formula>. Note that the NCS is specifically designed to express confidence that a doublet is neotypic but does not capture selflets. Supplementary Figure S10 shows a comparison of the observed VAF of droplets categorized by cell line droplets with a <inline-formula id="IE110"><mml:math id="IM110" display="inline" overflow="scroll"><mml:mrow><mml:mtext>NCS</mml:mtext><mml:mo>â¥</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math></inline-formula>.</p>
      <fig position="float" id="btab266-F5">
        <label>Fig. 5.</label>
        <caption>
          <p><sc>doublet</sc>D successfully recalls all <inline-formula id="IE111"><mml:math id="IM111" display="inline" overflow="scroll"><mml:mrow><mml:mn>42</mml:mn></mml:mrow></mml:math></inline-formula> orthogonally validated high confidence neotypic doublets and identifies <inline-formula id="IE112"><mml:math id="IM112" display="inline" overflow="scroll"><mml:mrow><mml:mn>11</mml:mn></mml:mrow></mml:math></inline-formula> putative selflets in a two cell line mixture dataset. (<bold>a</bold>) The VAF for each droplet at each of the five validation loci. Droplets are assigned a NCS, which is the number of validation loci whose VAF was in the range <inline-formula id="IE113"><mml:math id="IM113" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>0.15</mml:mn><mml:mo>,</mml:mo><mml:mn>0.85</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> (dotted lines). (<bold>b</bold>) The resulting proportion (total) of droplet calls by method (<sc>doublet</sc>D, SCG:<sc>doublet</sc> and <sc>Scrublet</sc>) by prediction (singlet, doublet) and NCS. (<bold>c</bold>) The aggregated observed VAF distribution by <sc>doublet</sc>D prediction and cell line for droplets with <inline-formula id="IE114"><mml:math id="IM114" display="inline" overflow="scroll"><mml:mrow><mml:mtext>NCS</mml:mtext><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula>. The number of droplets in the aggregate are shown in the parentheses</p>
        </caption>
        <graphic xlink:href="btab266f5" position="float"/>
      </fig>
      <p>We ran doubletD, SCG:<sc>doublet</sc> (with five restarts) and Scrublet. Since we did not know the true doublet probability <italic toggle="yes">Î´</italic>, we used the maximum likelihood criterion to establish the estimate the doublet probability for doubletD as <inline-formula id="IE115"><mml:math id="IM115" display="inline" overflow="scroll"><mml:mrow><mml:mo>Î´</mml:mo><mml:mo>=</mml:mo><mml:mn>0.05</mml:mn></mml:mrow></mml:math></inline-formula> (Supplementary <xref rid="sup1" ref-type="supplementary-material">Fig. S11a</xref>). However, we provided SCG and Scrublet with the doublet probability <inline-formula id="IE116"><mml:math id="IM116" display="inline" overflow="scroll"><mml:mrow><mml:mo>Î´</mml:mo><mml:mo>=</mml:mo><mml:mn>0.09</mml:mn></mml:mrow></mml:math></inline-formula> as estimated by Mission Bio in similar cell line experiments (<xref rid="btab266-B20" ref-type="bibr">Mission Bio, 2019</xref>). For each method and NCS, we calculated the proportion of predicted singlets and doublets (<xref rid="btab266-F5" ref-type="fig">Fig.Â 5b</xref>). doubletD identified the most droplets as doublets (54), followed by SCG:<sc>doublet</sc> (42) and <sc>Scrublet</sc> (30). doubletD predicted 100% of doublets with <inline-formula id="IE117"><mml:math id="IM117" display="inline" overflow="scroll"><mml:mrow><mml:mtext>NCS</mml:mtext><mml:mo>â¥</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math></inline-formula> whereas SCG:<sc>doublet</sc> identifies 95.2% of these droplets with similarly high NCS. Scrublet is the worst performing, identifying only 61.9% of such droplets (<xref rid="btab266-F5" ref-type="fig">Fig.Â 5b</xref>). In terms of running time, SCG:<sc>doublet</sc> took <inline-formula id="IE118"><mml:math id="IM118" display="inline" overflow="scroll"><mml:mrow><mml:mn>16</mml:mn><mml:mo>,</mml:mo><mml:mn>259.7</mml:mn></mml:mrow></mml:math></inline-formula>âs, doubletD took 24.1âs and Scrublet took 2.4âs.</p>
      <p>All three methods designated the same droplet at <inline-formula id="IE119"><mml:math id="IM119" display="inline" overflow="scroll"><mml:mrow><mml:mtext>NCS</mml:mtext><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> as a doublet. This suggests that for the remaining 32 droplets at <inline-formula id="IE120"><mml:math id="IM120" display="inline" overflow="scroll"><mml:mrow><mml:mtext>NCS</mml:mtext><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> the observed VAF in <inline-formula id="IE121"><mml:math id="IM121" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>0.15</mml:mn><mml:mo>,</mml:mo><mml:mn>0.85</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> at one of these five validation loci is likely attributable to amplification and sequencing error. The one doublet identified by all methods does appear to be neotypic as evidenced by an observed VAF of 0.39 for the validation locus on chromosome 17, which is far from the cut off criterion of 0.15 and is hard to explain by other errors. Furthermore, the VAF distribution across the 26 inference loci for this droplet has a peak at 0.25 and is strikingly different from the distribution of the other Raji droplets with NCS equal to 1 (Supplementary <xref rid="sup1" ref-type="supplementary-material">Fig. S11b</xref>). Lastly, doubletD identifies 11 (proportion: 0.007) putative selflets at <inline-formula id="IE122"><mml:math id="IM122" display="inline" overflow="scroll"><mml:mrow><mml:mtext>NCS</mml:mtext><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula>, 3 of which are KG-1 and 8 are Raji. SCG calls 1, which was also called by doubletD, and Scrublet calls 3 such droplets with only one called by doubletD. Corroborating this, we note a visual difference in the aggregated VAF distribution across the inference 26 loci between doubletD predicted singlets and doublets with <inline-formula id="IE123"><mml:math id="IM123" display="inline" overflow="scroll"><mml:mrow><mml:mtext>NCS</mml:mtext><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> (<xref rid="btab266-F5" ref-type="fig">Fig.Â 5c</xref>). A Venn diagram of the droplets with different NCS score that were predicted as doublets by the three competing methods is shown in Supplementary <xref rid="sup1" ref-type="supplementary-material">Fig. S12</xref>.</p>
      <p>In summary, doubletD is able to recall all orthogonally validated high confidence neotypic doublets (with NCS <inline-formula id="IE124"><mml:math id="IM124" display="inline" overflow="scroll"><mml:mrow><mml:mo>â¥</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math></inline-formula>) as well as successfully distinguish the VAF signal of neotypic doublets from sequencing-related error. In addition, we suspect that doubletD is able to recall a small number of selflets even in the presence of low ADO rates (<inline-formula id="IE125"><mml:math id="IM125" display="inline" overflow="scroll"><mml:mrow><mml:mo>Î²</mml:mo><mml:mo>=</mml:mo><mml:mn>0.05</mml:mn></mml:mrow></mml:math></inline-formula>).</p>
    </sec>
    <sec>
      <title>3.3 Phylogeny inference of an acute lymphoblastic leukemia patient</title>
      <p>As discussed in Section 1, while nested doublets and selflets do not yield new genotypes, neotypic doublets can be mistaken as an additional clone with a unique genotype (<xref rid="btab266-B22" ref-type="bibr">Navin and Chen, 2016</xref>). In the extreme case of a phylogeny with only two branches, neotypic doublets that correspond to the two leaves of this tree will include all mutations. Consequently, phylogeny inference under the infinite sites assumption will yield a linear phylogeny. Here, we investigate the impact of doublets on phylogeny inference for a patient (Patient 1) in an acute lymphoblastic leukemia cohort previously suspected to contain doublet droplets (<xref rid="btab266-B5" ref-type="bibr">Gawad <italic toggle="yes">et al.</italic>, 2014</xref>)âwe refer to <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S2</xref> for doubletD results of the other patients.</p>
      <p><xref rid="btab266-B5" ref-type="bibr">Gawad <italic toggle="yes">et al.</italic> (2014)</xref> sequenced 243 droplets and identified 20 mutations for Patient 1. We analyzed this patient using <sc>Ph</sc>ISCS-B (<xref rid="btab266-B16" ref-type="bibr">Malikic <italic toggle="yes">et al.</italic>, 2019b</xref>), which is a phylogeny inference method that seeks to identify a tree constrained by the infinite sites assumption. Since it does not account for doublets, <sc>Ph</sc>ISCS-B requires doublets be removed in a preprocessing step. While SCG:<sc>doublet</sc> was unable to identify any doublets, doubletD identified 50 doublets for this patient. Supplementary Figure S13 corroborates these doublets, showing distinct VAF distributions between singlets and doublets for an orthogonal set of holdout loci. We ran <sc>Ph</sc>ISCS-B in single-cell data mode on the complete set of droplets (including doublets) as well as the set of droplets without doublets (details in <xref rid="sup1" ref-type="supplementary-material">Supplementary Appendix</xref> B.3). <xref rid="btab266-F6" ref-type="fig">FigureÂ 6</xref> shows that doublet removal in this patient results in a branching phylogeny with a higher mean likelihood (<inline-formula id="IE126"><mml:math id="IM126" display="inline" overflow="scroll"><mml:mrow><mml:mo>â</mml:mo><mml:mn>1157.39</mml:mn><mml:mo>/</mml:mo><mml:mn>193</mml:mn><mml:mo>=</mml:mo><mml:mo>â</mml:mo><mml:mn>6.00</mml:mn></mml:mrow></mml:math></inline-formula>) compared to a linear phylogeny (<inline-formula id="IE127"><mml:math id="IM127" display="inline" overflow="scroll"><mml:mrow><mml:mo>â</mml:mo><mml:mn>2806.49</mml:mn><mml:mo>/</mml:mo><mml:mn>243</mml:mn><mml:mo>=</mml:mo><mml:mo>â</mml:mo><mml:mn>11.55</mml:mn></mml:mrow></mml:math></inline-formula>) on the complete set of droplets. Furthermore, the branching pattern observed in the inferred phylogeny after doublet removal is in agreement with several other trees published for Patient 1, with identical grouping of the mutations across the two branches (<xref rid="btab266-B5" ref-type="bibr">Gawad <italic toggle="yes">et al.</italic>, 2014</xref>; <xref rid="btab266-B10" ref-type="bibr">Kuipers <italic toggle="yes">et al.</italic>, 2017b</xref>; <xref rid="btab266-B15" ref-type="bibr">Malikic <italic toggle="yes">et al.</italic>, 2019a</xref>).</p>
      <fig position="float" id="btab266-F6">
        <label>Fig. 6.</label>
        <caption>
          <p>Doublets lead to incorrect phylogeny inference in acute lymphoblastic leukemia patient 1. (<bold>a</bold>) <sc>Ph</sc>ISCS-B returns a linear phylogeny with mean log likelihood of <inline-formula id="IE128"><mml:math id="IM128" display="inline" overflow="scroll"><mml:mrow><mml:mo>â</mml:mo><mml:mn>2806.49</mml:mn><mml:mo>/</mml:mo><mml:mn>243</mml:mn><mml:mo>=</mml:mo><mml:mo>â</mml:mo><mml:mn>11.55</mml:mn></mml:mrow></mml:math></inline-formula> if the 50 doublets detected by <sc>doublet</sc>D are retained. (<bold>b</bold>) <sc>Ph</sc>ISCS-B returns a branching phylogeny with higher mean likelihood of <inline-formula id="IE129"><mml:math id="IM129" display="inline" overflow="scroll"><mml:mrow><mml:mo>â</mml:mo><mml:mn>1157.39</mml:mn><mml:mo>/</mml:mo><mml:mn>193</mml:mn><mml:mo>=</mml:mo><mml:mo>â</mml:mo><mml:mn>6.00</mml:mn></mml:mrow></mml:math></inline-formula></p>
        </caption>
        <graphic xlink:href="btab266f6" position="float"/>
      </fig>
      <p>Thus, phylogeny inference is an additional example of a downstream analysis where the inclusion of doublets may yield incorrect conclusions.</p>
    </sec>
  </sec>
  <sec>
    <title>4 Discussion</title>
    <p>In this work, we introduced <sc>doublet</sc>D, the first standalone method for detecting doublets in scDNA-seq data with medium to high coverage <inline-formula id="IE130"><mml:math id="IM130" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>â¥</mml:mo><mml:mn>5</mml:mn><mml:mo>Ã</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> suitable for single-nucleotide variants. Our method operates directly on variant and total read counts of mutation loci. Underlying our method is the observation that doublets in scDNA-seq data have a characteristic VAF distribution. An additional signal that we exploit is the shift in VAFs due to ADO. This unique approach enables doubletD to capitalize on a major downside of single-cell sequencing in order to identify selflets and nested doublets, that are notoriously hard to detect by current methods. <sc>doublet</sc>D utilizes a probabilistic model that specifically accounts for allelic imbalance and dropout during whole-genome amplification in scDNA-seq as well as sequencing errors. We introduced a closed-form solution for the inference problem. We demonstrated that our method outperforms current methods for downstream analysis of scDNA-seq data that jointly infer doublets and genotypes (<xref rid="btab266-B26" ref-type="bibr">Roth <italic toggle="yes">et al.</italic>, 2016</xref>) as well as standalone approaches for doublet detection in scRNA-seq data (<xref rid="btab266-B29" ref-type="bibr">Wolock <italic toggle="yes">et al.</italic>, 2019</xref>). Moreover, we showed that removing doublets using doubletD improves the accuracy and efficiency of downstream analyses such as genotype calling and phylogeny inference.</p>
    <p>There are several opportunities for future work. First, while this paper focused on cancer, <sc>doublet</sc>D can be applied to normal samples as well using heterozygous germline SNPs. Moreover, the same characteristic signal used by our method to detect doublets can be used to detect cells that have undergone whole-genome duplication or are in S-phase with actively replicating DNA. Second, our approach can be extended to support low (<inline-formula id="IE131"><mml:math id="IM131" display="inline" overflow="scroll"><mml:mrow><mml:mn>0.1</mml:mn><mml:mo>â</mml:mo><mml:mn>0.5</mml:mn><mml:mo>Ã</mml:mo></mml:mrow></mml:math></inline-formula>) to ultra-low (<inline-formula id="IE132"><mml:math id="IM132" display="inline" overflow="scroll"><mml:mrow><mml:mo>&lt;</mml:mo><mml:mn>0.05</mml:mn><mml:mo>Ã</mml:mo></mml:mrow></mml:math></inline-formula>) coverage scDNA-seq samples, suitable for CNAs, by pooling heterozygous germline SNPs located within haplotype blocks. Third, our current formulation assumes that normal cells are diploid. As noted in our simulations, performance slightly decreased in the presence of CNAs. We plan to extend our probabilistic model to account for copy number. Finally, we envision that doubletD will improve downstream analysis of current and future methods, making doublet detection and removal a standard practice in scDNA-seq analysis.</p>
  </sec>
  <sec>
    <title>Funding</title>
    <p>M.E-K. was supported by the National Science Foundation under award numbers CCF 1850502 and CCF 2046488.</p>
    <p><italic toggle="yes">Conflict of Interest</italic>: none declared.</p>
  </sec>
  <sec sec-type="data-availability">
    <title>Data availability statement</title>
    <p>The data underlying this article are available at <ext-link xlink:href="https://github.com/elkebir-group/doubletD_data" ext-link-type="uri">https://github.com/elkebir-group/doubletD_data</ext-link>.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>btab266_Supplementary_Data</label>
      <media xlink:href="btab266_supplementary_data.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btab266-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chen</surname><given-names>G.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2019</year>) <article-title>Single-cell RNA-seq technologies and related computational data analysis</article-title>. <source>Front. Genet</source>., <volume>10</volume>, <fpage>317</fpage>.<pub-id pub-id-type="pmid">31024627</pub-id></mixed-citation>
    </ref>
    <ref id="btab266-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>De Bourcy</surname><given-names>C.F.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2014</year>) <article-title>A quantitative comparison of single-cell whole genome amplification methods</article-title>. <source>PLoS One</source>, <volume>9</volume>, <fpage>e105585</fpage>.<pub-id pub-id-type="pmid">25136831</pub-id></mixed-citation>
    </ref>
    <ref id="btab266-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>DePasquale</surname><given-names>E.A.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2019</year>) <article-title>DoubletDecon: deconvoluting doublets from single-cell RNA-sequencing data</article-title>. <source>Cell Rep</source>., <volume>29</volume>, <fpage>1718</fpage>â<lpage>1727</lpage>.<pub-id pub-id-type="pmid">31693907</pub-id></mixed-citation>
    </ref>
    <ref id="btab266-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>El-Kebir</surname><given-names>M.</given-names></string-name></person-group> (<year>2018</year>) <article-title>SPhyR: tumor phylogeny estimation from single-cell sequencing data under loss and error</article-title>. <source>Bioinformatics</source>, <volume>34</volume>, <fpage>i671</fpage>â<lpage>i679</lpage>.<pub-id pub-id-type="pmid">30423070</pub-id></mixed-citation>
    </ref>
    <ref id="btab266-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gawad</surname><given-names>C.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2014</year>) <article-title>Dissecting the clonal origins of childhood acute lymphoblastic leukemia by single-cell genomics</article-title>. <source>Proc. Natl. Acad. Sci. USA</source>, <volume>111</volume>, <fpage>17947</fpage>â<lpage>17952</lpage>.<pub-id pub-id-type="pmid">25425670</pub-id></mixed-citation>
    </ref>
    <ref id="btab266-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gerstung</surname><given-names>M.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2012</year>) <article-title>Reliable detection of subclonal single-nucleotide variants in tumour cell populations</article-title>. <source>Nat. Commun</source>., <volume>3</volume>, <fpage>1</fpage>â<lpage>8</lpage>.</mixed-citation>
    </ref>
    <ref id="btab266-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hwang</surname><given-names>B.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2018</year>) <article-title>Single-cell RNA sequencing technologies and bioinformatics pipelines</article-title>. <source>Exp. Mol. Med</source>., <volume>50</volume>, <fpage>1</fpage>â<lpage>14</lpage>.</mixed-citation>
    </ref>
    <ref id="btab266-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Jahn</surname><given-names>K.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2016</year>) <article-title>Tree inference for single-cell data</article-title>. <source>Genome Biol</source>., <volume>17</volume>, <fpage>1</fpage>â<lpage>17</lpage>.<pub-id pub-id-type="pmid">26753840</pub-id></mixed-citation>
    </ref>
    <ref id="btab266-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kuipers</surname><given-names>J.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2017a</year>) <article-title>Advances in understanding tumour evolution through single-cell sequencing</article-title>. <source>Biochim. Biophys. Acta</source>, <volume>1867</volume>, <fpage>127</fpage>â<lpage>138</lpage>.</mixed-citation>
    </ref>
    <ref id="btab266-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kuipers</surname><given-names>J.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2017b</year>) <article-title>Single-cell sequencing data reveal widespread recurrence and loss of mutational hits in the life histories of tumors</article-title>. <source>Genome Res</source>., <volume>27</volume>, <fpage>1885</fpage>â<lpage>1894</lpage>.<pub-id pub-id-type="pmid">29030470</pub-id></mixed-citation>
    </ref>
    <ref id="btab266-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>LÃ¤hnemann</surname><given-names>D.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2020</year>) <article-title>Prosolo: accurate variant calling from single cell DNA sequencing data</article-title>. <source>bioRxiv</source>.</mixed-citation>
    </ref>
    <ref id="btab266-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lim</surname><given-names>B.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2020</year>) <article-title>Advancing cancer research and medicine with single-cell genomics</article-title>. <source>Cancer Cell</source>, <volume>37</volume>, <fpage>456</fpage>â<lpage>470</lpage>.<pub-id pub-id-type="pmid">32289270</pub-id></mixed-citation>
    </ref>
    <ref id="btab266-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Liu</surname><given-names>H.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2020</year>) <article-title>Improving single-cell encapsulation efficiency and reliability through neutral buoyancy of suspension</article-title>. <source>Micromachines</source>, <volume>11</volume>, <fpage>94</fpage>.<pub-id pub-id-type="pmid">31952228</pub-id></mixed-citation>
    </ref>
    <ref id="btab266-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Luquette</surname><given-names>L.J.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2019</year>) <article-title>Identification of somatic mutations in single cell DNA-seq using a spatial model of allelic imbalance</article-title>. <source>Nat. Commun</source>., <volume>10</volume>, <fpage>3908</fpage>.<pub-id pub-id-type="pmid">31467286</pub-id></mixed-citation>
    </ref>
    <ref id="btab266-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Malikic</surname><given-names>S.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2019a</year>) <article-title>Integrative inference of subclonal tumour evolution from single-cell and bulk sequencing data</article-title>. <source>Nat. Commun</source>., <volume>10</volume>, <fpage>1</fpage>â<lpage>12</lpage>.<pub-id pub-id-type="pmid">30602773</pub-id></mixed-citation>
    </ref>
    <ref id="btab266-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Malikic</surname><given-names>S.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2019b</year>) <article-title>PhISCS: a combinatorial approach for subperfect tumor phylogeny reconstruction via integrative use of single-cell and bulk sequencing data</article-title>. <source>Genome Res</source>., <volume>29</volume>, <fpage>1860</fpage>â<lpage>1877</lpage>.<pub-id pub-id-type="pmid">31628256</pub-id></mixed-citation>
    </ref>
    <ref id="btab266-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>McGinnis</surname><given-names>C.S.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2019</year>) <article-title>DoubletFinder: doublet detection in single-cell RNA sequencing data using artificial nearest neighbors</article-title>. <source>Cell Syst</source>., <volume>8</volume>, <fpage>329</fpage>â<lpage>337</lpage>.<pub-id pub-id-type="pmid">30954475</pub-id></mixed-citation>
    </ref>
    <ref id="btab266-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>McPherson</surname><given-names>A.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2016</year>) <article-title>Divergent modes of clonal spread and intraperitoneal mixing in high-grade serous ovarian cancer</article-title>. <source>Nat. Genet</source>., <volume>48</volume>, <fpage>758</fpage>.<pub-id pub-id-type="pmid">27182968</pub-id></mixed-citation>
    </ref>
    <ref id="btab266-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Miles</surname><given-names>L.A.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2020</year>) <article-title>Single-cell mutation analysis of clonal evolution in myeloid malignancies</article-title>. <source>Nature</source>, <volume>587</volume>, <fpage>477</fpage>â<lpage>482</lpage>.<pub-id pub-id-type="pmid">33116311</pub-id></mixed-citation>
    </ref>
    <ref id="btab266-B20">
      <mixed-citation publication-type="other">Mission Bio (<year>2019</year>) <article-title>Performance of the Tapestri platform for single-cell targeted DNA sequencing</article-title>. Technical report.Â Mission Bio, San Francisco, CA.</mixed-citation>
    </ref>
    <ref id="btab266-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Morita</surname><given-names>K.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2020</year>) <article-title>Clonal evolution of acute myeloid leukemia revealed by high-throughput single-cell genomics</article-title>. <source>Nat. Commun</source>., <volume>11</volume>, <fpage>1</fpage>â<lpage>1</lpage>.<pub-id pub-id-type="pmid">31911652</pub-id></mixed-citation>
    </ref>
    <ref id="btab266-B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Navin</surname><given-names>N.E.</given-names></string-name>, <string-name><surname>Chen</surname><given-names>K.</given-names></string-name></person-group> (<year>2016</year>) <article-title>Genotyping tumor clones from single-cell data</article-title>. <source>Nat. Methods</source>, <volume>13</volume>, <fpage>555</fpage>â<lpage>556</lpage>.<pub-id pub-id-type="pmid">27355792</pub-id></mixed-citation>
    </ref>
    <ref id="btab266-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Pellegrino</surname><given-names>M.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2018</year>) <article-title>High-throughput single-cell DNA sequencing of acute myeloid leukemia tumors with droplet microfluidics</article-title>. <source>Genome Res</source>., <volume>28</volume>, <fpage>1345</fpage>â<lpage>1352</lpage>.<pub-id pub-id-type="pmid">30087104</pub-id></mixed-citation>
    </ref>
    <ref id="btab266-B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Posada</surname><given-names>D.</given-names></string-name></person-group> (<year>2020</year>) <article-title>CellCoal: coalescent simulation of single-cell sequencing samples</article-title>. <source>Mol. Biol. Evol</source>., <volume>37</volume>, <fpage>1535</fpage>â<lpage>1542</lpage>.<pub-id pub-id-type="pmid">32027371</pub-id></mixed-citation>
    </ref>
    <ref id="btab266-B25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ross</surname><given-names>E.M.</given-names></string-name>, <string-name><surname>Markowetz</surname><given-names>F.</given-names></string-name></person-group> (<year>2016</year>) <article-title>OncoNEM: inferring tumor evolution from single-cell sequencing data</article-title>. <source>Genome Biol</source>., <volume>17</volume>, <fpage>1</fpage>â<lpage>14</lpage>.<pub-id pub-id-type="pmid">26753840</pub-id></mixed-citation>
    </ref>
    <ref id="btab266-B26">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Roth</surname><given-names>A.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2016</year>) <article-title>Clonal genotype and population structure inference from single-cell tumor sequencing</article-title>. <source>Nat. Methods</source>, <volume>13</volume>, <fpage>573</fpage>â<lpage>576</lpage>.<pub-id pub-id-type="pmid">27183439</pub-id></mixed-citation>
    </ref>
    <ref id="btab266-B27">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Salehi</surname><given-names>S.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2020</year>) <article-title>Single cell fitness landscapes induced by genetic and pharmacologic perturbations in cancer</article-title>. <source>bioRxiv</source>.</mixed-citation>
    </ref>
    <ref id="btab266-B28">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Satas</surname><given-names>G.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2020</year>) <article-title>Scarlet: single-cell tumor phylogeny inference with copy-number constrained mutation losses</article-title>. <source>Cell Syst</source>., <volume>10</volume>, <fpage>323</fpage>â<lpage>332</lpage>.<pub-id pub-id-type="pmid">32864481</pub-id></mixed-citation>
    </ref>
    <ref id="btab266-B29">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wolock</surname><given-names>S.L.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2019</year>) <article-title>Scrublet: computational identification of cell doublets in single-cell transcriptomic data</article-title>. <source>Cell Syst</source>., <volume>8</volume>, <fpage>281</fpage>â<lpage>291</lpage>.<pub-id pub-id-type="pmid">30954476</pub-id></mixed-citation>
    </ref>
    <ref id="btab266-B30">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wu</surname><given-names>Y.</given-names></string-name></person-group> (<year>2020</year>) <article-title>Accurate and efficient cell lineage tree inference from noisy single cell data: the maximum likelihood perfect phylogeny approach</article-title>. <source>Bioinformatics</source>, <volume>36</volume>, <fpage>742</fpage>â<lpage>750</lpage>.<pub-id pub-id-type="pmid">31504211</pub-id></mixed-citation>
    </ref>
    <ref id="btab266-B31">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Xi</surname><given-names>N.M.</given-names></string-name>, <string-name><surname>Li</surname><given-names>J.J.</given-names></string-name></person-group> (<year>2020</year>) <article-title>Benchmarking computational doublet-detection methods for single-cell RNA sequencing data</article-title>. <source>Cell Syst</source>., <volume>12</volume>, <fpage>176</fpage>â<lpage>194.e6</lpage>.<pub-id pub-id-type="pmid">33338399</pub-id></mixed-citation>
    </ref>
    <ref id="btab266-B32">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zaccaria</surname><given-names>S.</given-names></string-name>, <string-name><surname>Raphael</surname><given-names>B.J.</given-names></string-name></person-group> (<year>2020</year>) <article-title>Characterizing allele- and haplotype-specific copy numbers in single cells with CHISEL</article-title>. <source>Nat. Biotechnol</source>., <volume>39</volume>, <fpage>207</fpage>â<lpage>214</lpage>.<pub-id pub-id-type="pmid">32879467</pub-id></mixed-citation>
    </ref>
    <ref id="btab266-B33">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zafar</surname><given-names>H.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2016</year>) <article-title>Monovar: single-nucleotide variant detection in single cells</article-title>. <source>Nat. Methods</source>, <volume>13</volume>, <fpage>505</fpage>â<lpage>507</lpage>.<pub-id pub-id-type="pmid">27088313</pub-id></mixed-citation>
    </ref>
    <ref id="btab266-B34">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zafar</surname><given-names>H.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2018</year>) <article-title>Computational approaches for inferring tumor evolution from single-cell genomic data</article-title>. <source>Curr. Opin. Syst. Biol</source>., <volume>7</volume>, <fpage>16</fpage>â<lpage>25</lpage>.</mixed-citation>
    </ref>
    <ref id="btab266-B35">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zafar</surname><given-names>H.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2019</year>) <article-title>SiCloneFit: Bayesian inference of population structure, genotype, and phylogeny of tumor clones from single-cell genome sequencing data</article-title>. <source>Genome Res</source>., <volume>29</volume>, <fpage>1847</fpage>â<lpage>1859</lpage>.<pub-id pub-id-type="pmid">31628257</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

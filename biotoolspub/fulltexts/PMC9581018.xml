<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v2.3 20070202//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName journalpublishing.dtd?>
<?SourceDTD.Version 2.3?>
<?ConverterInfo.XSLTName nlm2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Front Bioinform</journal-id>
    <journal-id journal-id-type="iso-abbrev">Front Bioinform</journal-id>
    <journal-id journal-id-type="publisher-id">Front. Bioinform.</journal-id>
    <journal-title-group>
      <journal-title>Frontiers in Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2673-7647</issn>
    <publisher>
      <publisher-name>Frontiers Media S.A.</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">9581018</article-id>
    <article-id pub-id-type="publisher-id">749008</article-id>
    <article-id pub-id-type="doi">10.3389/fbinf.2021.749008</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Bioinformatics</subject>
        <subj-group>
          <subject>Original Research</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>PASS: Protein Annotation Surveillance Site for Protein Annotation Using Homologous Clusters, NLP, and Sequence Similarity Networks</article-title>
      <alt-title alt-title-type="left-running-head">Tao et al.</alt-title>
      <alt-title alt-title-type="right-running-head">PASS: Protein Annotation Surveillance Site</alt-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Tao</surname>
          <given-names>Jin</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">
          <sup>1</sup>
        </xref>
        <uri xlink:href="https://loop.frontiersin.org/people/1415820/overview"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Brayton</surname>
          <given-names>Kelly A.</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">
          <sup>1</sup>
        </xref>
        <xref rid="aff2" ref-type="aff">
          <sup>2</sup>
        </xref>
        <xref rid="aff3" ref-type="aff">
          <sup>3</sup>
        </xref>
        <uri xlink:href="https://loop.frontiersin.org/people/352760/overview"/>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Broschat</surname>
          <given-names>Shira L.</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">
          <sup>1</sup>
        </xref>
        <xref rid="aff2" ref-type="aff">
          <sup>2</sup>
        </xref>
        <xref rid="aff3" ref-type="aff">
          <sup>3</sup>
        </xref>
        <xref rid="c001" ref-type="corresp">*</xref>
        <uri xlink:href="https://loop.frontiersin.org/people/616621/overview"/>
      </contrib>
    </contrib-group>
    <aff id="aff1"><label><sup>1</sup></label>School of Electrical Engineering and Computer Science, Washington State University, <addr-line>Pullman</addr-line>, <addr-line>WA</addr-line>, <country>United States</country></aff>
    <aff id="aff2"><label><sup>2</sup></label>Department of Veterinary Microbiology and Pathology, Washington State University, <addr-line>Pullman</addr-line>, <addr-line>WA</addr-line>, <country>United States</country></aff>
    <aff id="aff3"><label><sup>3</sup></label>Paul G. Allen School for Global Health, Washington State University, <addr-line>Pullman</addr-line>, <addr-line>WA</addr-line>, <country>United States</country></aff>
    <author-notes>
      <fn fn-type="edited-by">
        <p><bold>Edited by:</bold><ext-link xlink:href="https://loop.frontiersin.org/people/531759/overview" ext-link-type="uri">Quan Zou</ext-link>, University of Electronic Science and Technology of China, China</p>
      </fn>
      <fn fn-type="edited-by">
        <p><bold>Reviewed by:</bold><ext-link xlink:href="https://loop.frontiersin.org/people/882776/overview" ext-link-type="uri">Shanwen Sun</ext-link>, Northeast Forestry University, China</p>
        <p><ext-link xlink:href="https://loop.frontiersin.org/people/651650/overview" ext-link-type="uri">Kaiyang Qu</ext-link>, Nanyang Institute of Technology, China</p>
      </fn>
      <corresp id="c001">*Correspondence: Shira L. Broschat, <email>shira@wsu.edu</email>
</corresp>
      <fn fn-type="other">
        <p>This article was submitted to Protein Bioinformatics, a section of the journal Frontiers in Bioinformatics</p>
      </fn>
    </author-notes>
    <pub-date pub-type="epub">
      <day>29</day>
      <month>9</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2021</year>
    </pub-date>
    <volume>1</volume>
    <elocation-id>749008</elocation-id>
    <history>
      <date date-type="received">
        <day>28</day>
        <month>7</month>
        <year>2021</year>
      </date>
      <date date-type="accepted">
        <day>06</day>
        <month>9</month>
        <year>2021</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright © 2021 Tao, Brayton and Broschat.</copyright-statement>
      <copyright-year>2021</copyright-year>
      <copyright-holder>Tao, Brayton and Broschat</copyright-holder>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License (CC BY). The use, distribution or reproduction in other forums is permitted, provided the original author(s) and the copyright owner(s) are credited and that the original publication in this journal is cited, in accordance with accepted academic practice. No use, distribution or reproduction is permitted which does not comply with these terms.</license-p>
      </license>
    </permissions>
    <abstract>
      <p>Advances in genome sequencing have accelerated the growth of sequenced genomes but at a cost in the quality of genome annotation. At the same time, computational analysis is widely used for protein annotation, but a dearth of experimental verification has contributed to inaccurate annotation as well as to annotation error propagation. Thus, a tool to help life scientists with accurate protein annotation would be useful. In this work we describe a website we have developed, the Protein Annotation Surveillance Site (PASS), which provides such a tool. This website consists of three major components: a database of homologous clusters of more than eight million protein sequences deduced from the representative genomes of bacteria, archaea, eukarya, and viruses, together with sequence information; a machine-learning software tool which periodically queries the UniprotKB database to determine whether protein function has been experimentally verified; and a query-able webpage where the FASTA headers of sequences from the cluster best matching an input sequence are returned. The user can choose from these sequences to create a sequence similarity network to assist in annotation or else use their expert knowledge to choose an annotation from the cluster sequences. Illustrations demonstrating use of this website are presented.</p>
    </abstract>
    <kwd-group>
      <kwd>protein annotation</kwd>
      <kwd>machine learning</kwd>
      <kwd>natural language processing</kwd>
      <kwd>homologous clusters</kwd>
      <kwd>network science</kwd>
      <kwd>web application</kwd>
    </kwd-group>
  </article-meta>
</front>
<body>
  <sec id="s1">
    <title>1 Introduction</title>
    <p>Recent advances in the development of high-throughput sequencing technologies and computing capacity have greatly improved the speed of genome sequencing and, as a consequence, have contributed to the exponential growth of genomes in public repositories (<xref rid="B31" ref-type="bibr">Tao et al., 2021</xref>). Concomitantly, computational analysis, homology-based inference, and prediction are being widely used to annotate proteins, but the majority of annotations have not been experimentally verified. Lack of experimental verification contributes to inaccurate protein annotation and the propagation of existing annotation errors. The inaccuracy and confusion associated with protein annotation has been well reported, and it is well known that numerous protein sequences are missing annotation (<xref rid="B12" ref-type="bibr">Galperin and Koonin, 1998</xref>; <xref rid="B13" ref-type="bibr">Gilks et al., 2005</xref>; <xref rid="B25" ref-type="bibr">Schnoes et al., 2009</xref>; <xref rid="B24" ref-type="bibr">Salzberg, 2019</xref>; <xref rid="B17" ref-type="bibr">Lockwood et al., 2019</xref>; <xref rid="B31" ref-type="bibr">Tao et al., 2021</xref>). For example, in (<xref rid="B17" ref-type="bibr">Lockwood et al., 2019</xref>) homologous clustering was performed using protein sequences downloaded from the National Center for Biotechnology Information (NCBI) GenBank ftp service (<xref rid="B3" ref-type="bibr">Benson et al., 2005</xref>), and it was found that among 2,826 Proteobacterial protein sequences within one homologous cluster, 82% of the sequences used GroEL or GroL in their annotation while annotations of the remaining sequences included “not yet annotated,” <italic>mopA</italic> (obsolete gene name), thermosome, and 60 kDa chaperonin (11.78%). Moreover, 44 non-GroEL protein sequences were incorrectly annotated as chaperonin GroEL by the authors submitting the sequences. For this universally conserved protein, the preferred annotation in the UniProtKB/Swiss-Prot database is 60 kDa chaperonin while NCBI RefSeq annotates it as molecular chaperone GroEL (<xref rid="B17" ref-type="bibr">Lockwood et al., 2019</xref>), demonstrating a clear inconsistency even between the two databases. In (<xref rid="B20" ref-type="bibr">Mohanta et al., 2020</xref>), an analysis performed on 7.15 million protein sequences of 689 fungal species found that the protein sequence annotated as “calcium dependent protein kinase” did not, in fact, encode calcium binding EF-hands in the regulatory domain. In addition, protein sequences with annotations containing “selenocysteine” did not encode the Selenocysteine (U) amino acid. The latter work demonstrates that protein misannotation is not only a problem for bacterial species, but it is also a problem for fungi. The awareness of problems with protein annotation and, in particular, the issue of error propagation, indicates that a tool to help life scientists with accurate protein annotation would be useful.</p>
    <p>Traditional methods for protein annotation involve mass spectrometry, microscopy, and RNA interference. Unfortunately, these methods are time-consuming and require the use of substantial resources due to their low throughput and restricted scope of methodology (<xref rid="B26" ref-type="bibr">Schnoes et al., 2013</xref>; <xref rid="B5" ref-type="bibr">Cao and Cheng, 2016</xref>; <xref rid="B11" ref-type="bibr">Frasca and Cesa-Bianchi, 2017</xref>; <xref rid="B14" ref-type="bibr">Hong et al., 2020</xref>). As a result, automatic methods for annotation have been adopted, and in recent years, considerable work on the automatic annotation of proteins has been performed. In (<xref rid="B10" ref-type="bibr">Fleischmann et al., 1999</xref>), the annotation algorithm extracts conditions from an external database, groups the UniProtKB/Swiss-Prot database entries that fulfill each condition to find the common annotation among each group, and finally extends the annotation to entries from the uncurated UniProtKB/TrEMBL database that are grouped by the same conditions. However, this method has a low coverage rate of 10% and focuses on high specificity because it is impractical to enumerate all the rules and conditions. In (<xref rid="B28" ref-type="bibr">Steinegger et al., 2019</xref>), the method used vectorizes and accelerates profile Hidden Markov Model (HMM) alignment which extends sequence profiles by increasing position-specific amino acid substitution scores with position-specific penalties for insertions and deletions. The idea is to use homology detection for deep functional annotation. However, protein homology does not guarantee the same molecular function, and further annotation verification and evaluation are essential. In (<xref rid="B33" ref-type="bibr">Xie et al., 2002</xref>), the authors achieve protein annotation based on sequence homology with Gene-Ontology-annotated proteins and protein domain analysis. Though text information is used to improve annotation accuracy, the relationships between specific words and specific Gene Ontology (GO) are based on term frequency only, ignoring semantic information. While cutoff thresholds can be made more stringent in traditional similarity-based methods such as HMMER (<xref rid="B9" ref-type="bibr">Finn et al., 2011</xref>) to improve the accuracy of homology detection, recent efforts in automatic protein annotation have turned to machine learning (ML) techniques. ML methods use features that are correlated with a specific function in a training set containing experimentally annotated proteins, formulating annotation as a multi-class classification problem using models such as support vector machines and deep neural networks (<xref rid="B23" ref-type="bibr">Radivojac et al., 2013</xref>; <xref rid="B8" ref-type="bibr">Fa et al., 2018</xref>; <xref rid="B30" ref-type="bibr">Sun et al., 2020</xref>; <xref rid="B35" ref-type="bibr">Zhang et al., 2020</xref>). For example, (<xref rid="B21" ref-type="bibr">Nakano et al., 2019</xref>) explores and evaluates the ability of hierarchical multi-label classification methods to detect missing or incorrect annotations in Functional Catalogue (FunCat) or GO benchmark datasets. In (<xref rid="B14" ref-type="bibr">Hong et al., 2020</xref>), the authors consider the effectiveness of applying a convolutional neural network (CNN) method together with a protein encoding strategy to improve prediction stability. However, none of these efforts in annotation prediction use reliable verification and validation of protein annotations based on experimental evidence.</p>
    <p>In this paper, we consider an alternative approach to accurate protein annotation. We introduce the Protein Annotation Surveillance Site (PASS), which provides a tool for life scientists to choose accurate annotations for protein sequences. This website has three major components: a database of homologous clusters of protein sequences representing the four domains bacteria, archaea, eukarya, and viruses, together with sequence information; a machine-learning software tool which periodically queries the UniprotKB database to determine whether protein function has been experimentally verified; and a query-able webpage where the FASTA headers of sequences from the cluster best matching an input sequence are returned. Protein sequences that have been marked by the human curator as having been verified or have “function” publications in the Swiss-Prot database are identified by colored FASTA text. Because homology does not guarantee the same molecular function, the user can use their expert knowledge to choose an annotation from the cluster sequences or else they can create a sequence similarity network (SSN) to assist with annotation. The SSN indicates the sequences most closely related to their query sequence. A sequence that has been confirmed experimentally is listed in color with the SSN results.</p>
    <p>A major advantage of using our alternative approach to annotation, e.g., compared to using BLASTp, is that sequences matching the query sequence are provided in the form of a homologous cluster of sequences representing multiple species, potentially from four different domains. Moreover, our database contains more than 360,000 homologous clusters containing more than eight million sequences. Illustrations demonstrating use of the PASS website are given in the Results and Discussion section.</p>
  </sec>
  <sec id="s2">
    <title>2 Materials and Methods</title>
    <p>Our annotation pipeline contains three major components: homologous clusters of close to 8.5 million protein sequences deduced from the representative genomes of bacteria, archaea, eukarya, and viruses, which contribute to a database containing all the sequence information; a machine-learning software tool which periodically queries the UniprotKB database to determine whether protein function has been experimentally verified; and a query-able webpage where the FASTA headers of sequences from the cluster best matching an input sequence are returned. Each component is addressed in the following subsections.</p>
    <sec id="s2-1">
      <title>2.1 Large-Scale Homologous Clustering Using pClust and Sub-Cluster Merging</title>
      <p>We collected the protein sequences for our database using the Genome Information Browser by Organism available through the National Center for Biotechnology Information (NCBI) in July 2020, choosing only organisms with completely sequenced genomes in the representative category of RefSeq. The average sequence length is 350 amino acids while the longest length is 36,805. <xref rid="T1" ref-type="table">Table 1</xref> shows the number of organisms we collected in each domain.</p>
      <table-wrap position="float" id="T1">
        <label>TABLE 1</label>
        <caption>
          <p>Number of representative genomes of bacteria, archaea, eukarya, and viruses obtained using the Genome Information Browser by Organism available through the National Center for Biotechnology Information (NCBI) in July 2020.</p>
        </caption>
        <table frame="hsides" rules="groups">
          <thead valign="top">
            <tr>
              <th align="left" rowspan="1" colspan="1">Bacteria</th>
              <th align="center" rowspan="1" colspan="1">Eukarya</th>
              <th align="center" rowspan="1" colspan="1">Virus</th>
              <th align="center" rowspan="1" colspan="1">Archaea</th>
            </tr>
          </thead>
          <tbody valign="top">
            <tr>
              <td align="left" rowspan="1" colspan="1">2,989</td>
              <td align="char" char="." rowspan="1" colspan="1">16<xref rid="Tfn1" ref-type="table-fn"><sup>a</sup></xref>
</td>
              <td align="char" char="." rowspan="1" colspan="1">47</td>
              <td align="char" char="." rowspan="1" colspan="1">201</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <fn id="Tfn1">
            <label>a</label>
            <p>Of the 39 entries meeting the requirements, 23 did not have RefSeq links at the time of collection.</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
      <p>The total number of protein sequences for the 3,253 organisms was approximately 11.2 million including duplicate sequences and sequences with the annotation “hypothetical protein.”</p>
      <sec id="s2-1-1">
        <title>2.1.1 Homologous Clustering Using pClust</title>
        <p>There are numerous methods for clustering protein and gene sequences, but here we mention only a few. One novel approach by (<xref rid="B1" ref-type="bibr">Abnousi et al., 2018</xref>) uses an alignment-free technique to cluster protein sequences. Another novel approach uses a 3-dimensional method to cluster gene expression data (<xref rid="B16" ref-type="bibr">Lambrou et al., 2019</xref>). For our work, we used the pClust method, in part because it worked well for our iterative approach. To generate our homologous protein clusters, we applied the multi-core version of the pClust pipeline (<xref rid="B18" ref-type="bibr">Lockwood, 2016</xref>), employing semi-global pairwise sequence alignment with Parasail (<xref rid="B7" ref-type="bibr">Daily, 2016</xref>) and scalable community detection with Grappolo (<xref rid="B19" ref-type="bibr">Lu et al., 2015</xref>). First, Parasail generates an undirected graph with edges connecting similar sequences, where the sequences are the vertices of the graph. Grappolo then uses the graph results from Parasail to create clusters.</p>
        <p>Parasail (<xref rid="B7" ref-type="bibr">Daily, 2016</xref>) stands for Pairwise Sequence Alignment Library, and it is a SIMD C library which includes implementations of the Smith-Waterman local sequence alignment, Needleman-Wunsch global sequence alignment, and semi-global sequence alignment algorithms. For this work, we used the semi-global pairwise sequence alignment algorithm because we did not want to penalize gaps at the beginning and/or end of an alignment when the downstream part of one sequence overlapped with the upstream part of the other or when the lengths of two aligned sequences differed significantly. The input for Parasail is a set of protein sequences, and the output is an undirected graph with three alignment statistics for each edge computed, where an edge indicates sequence similarity between two protein sequences. The three alignment statistics are length of alignment over maximum length, number of exact matches over alignment length, and alignment score over self score. We focused on the first alignment statistic, using it as the weight for each edge. It represents the minimum required length of alignment relative to the longest sequence among all sequences to be aligned, and the default threshold is 80%, which has been shown to give optimal results (<xref rid="B15" ref-type="bibr">Khaledian and Broschat, 2020</xref>). Only edges with values greater than this threshold were kept to ensure strong similarity between sequences.</p>
        <p>Grappolo (<xref rid="B19" ref-type="bibr">Lu et al., 2015</xref>) clusters the sequences by parallelization of the Louvain heuristic for community detection in large-scale graphs. Community detection is an NP-complete problem (<xref rid="B4" ref-type="bibr">Brandes et al., 2007</xref>) requiring a brute force approach to solve. The Louvain method (<xref rid="B2" ref-type="bibr">Bader et al., 2012</xref>), an iterative and greedy heuristic algorithm for producing hierarchical communities, was proposed as an efficient method for solving the community detection problem. Initially, each vertex, or protein sequence, exists in a separate community. Closely related protein sequences are considered members of one community. Modularity (<xref rid="B22" ref-type="bibr">Newman and Girvan, 2004</xref>) is defined as the fraction of edges existing within communities minus the expected fraction of edges if they were distributed randomly. It measures the quality of a particular division of a network, and an increase in modularity, representing an improvement in the quality of a network partition, is called its gain. Modularity gain is computed after each iteration until a desired threshold of 10<sup>–6</sup> is reached. This threshold balances speed of convergence and the quality of the final network partition (<xref rid="B19" ref-type="bibr">Lu et al., 2015</xref>). As mentioned, Grappolo is a parallelization of the Louvain heuristic. In each iteration of Grappolo, all the vertices are scanned in parallel in an arbitrary but predetermined order. For a given vertex, the communities containing its neighbors are examined and the modularity gain is computed when the vertex is moved from its current community to each of the neighboring communities. The input to Grappolo is an undirected weighted graph, and the output is a partitioning of communities, or clusters, containing a subset of vertices (protein sequences) for which modularity has been maximized. It should be noted that a community can consist of a single vertex which is called a singleton.</p>
      </sec>
      <sec id="s2-1-2">
        <title>2.1.2 A Two-Step Iterative Clustering and Sub-Cluster Merging Scheme</title>
        <p>The ∼11.2 million protein sequences for the 3,253 organisms were downloaded in FASTA files. The sequences were divided into batches, and the sequences annotated as hypothetical proteins as well as duplicate sequences were removed from each batch; ∼9.26 million sequences remained. This number included more than 191,000 duplicate sequences that we were unable to remove because they were distributed across different batches. Some of these duplicates were removed later.</p>
        <p>Given the constraints of the computing facilities available to us, it was impossible to cluster the ∼9.26 million sequences as a single set. Because of this, we considered clustering each batch and then combining clusters and singletons from each batch. However, this posed several challenges, including how to name each cluster and singleton in different batches to avoid confusion and how to combine them to achieve accurate results.</p>
        <p>We decided that a suitable approach for determining homologous clusters was to adopt a two-step scheme using iterative clustering with sub-cluster merging. To implement our approach, we start by dividing all protein sequences into batches and clustering each batch independently, obtaining homologous clusters and singletons for each batch. Because the homologous clusters are not in their final form, we use the term sub-clusters to describe them. In the next iteration, we reduce the number of sequences and batches by selecting one representative sequence from each sub-cluster (to enable faster sequence-cluster mapping, we select the first sequence within each sub-cluster as the representative), adding all the representative sequences and singletons from a batch to form a new batch, combining several new batches, and clustering the sequences in these. In the final iteration, clustering is performed on a single batch. Sub-clusters generated in the current iteration indicate how sub-clusters and singletons generated in the previous iteration are merged. For example, if two sequences representing sub-clusters in two different batches in the previous iteration cluster together in the current iteration, the two sub-clusters in the previous iteration will be merged. Sub-cluster and singleton merging starts with the results of the final iteration, and conceptually, sequences within each sub-cluster from the final batch are mapped to and merged with sub-clusters or singletons generated in the previous iteration. This is performed repeatedly until sub-clusters and singletons obtained during the first iteration have been merged appropriately. Details on the two steps of our scheme are described in the following sub-sections.</p>
      </sec>
      <sec id="s2-1-3">
        <title>2.1.3 Iterative Clustering</title>
        <p>For the first iteration, we started with the ∼9.26 million sequences distributed in eleven batches. The first ten batches consisted only of bacterial sequences, while the 11th batch contained sequences from bacteria, archaea, eukarya, and viruses. To avoid confusion between sequences in different batches, we adopted the following naming convention: We used the uppercase letters A-K to designate the eleven separate batches followed by a number to indicate the index of the sub-cluster, for example, A_0 (indexing begins at 0) designates the first sub-cluster in the first batch and K_9 the 10th sub-cluster in the 11th batch. Individual sequences within a batch were labeled by the lowercase equivalent of the batch letter followed by an index value. This sequence index is determined by pClust which indexes each sequence in a single batch sequentially from start to finish. To identify a sequence in a sub-cluster, we simply concatenate the sub-cluster name and the sequence label for a given batch, for example, A_11#a_15 means the sequence labeled a_15 from batch 1 is in the 12th sub-cluster in batch 1. For singletons, we prefix the original sequence label by S and concatenate this with the original sequence label, for example, for a sequence labeled a_1 in batch 1, Sa_1#a_1 means the second sequence in batch 1 is a singleton and Sa_1091#a_1091 means the 1092nd sequence in batch 1 is a singleton.</p>
        <p>In our first iteration, we used pClust to cluster each of the eleven batches of sequences separately. The number of input sequences used and the number of sub-clusters and singletons obtained for each batch are presented in <xref rid="T2" ref-type="table">Table 2</xref>. Also given in this table are the number of output sequences obtained from the first iteration for use in the second iteration. For each batch, we combined all the singletons and the first sequence from each sub-cluster to represent it, producing a new and much smaller set of input sequences designated as “Output Seqs” in <xref rid="T2" ref-type="table">Table 2</xref>. The ratio in the last row and column of this table shows a reduction in overall input size for the second iteration of almost 80%. Note that after the first iteration, singletons can combine with other singletons to form sub-clusters in the next iteration or they can combine with other sub-clusters.</p>
        <table-wrap position="float" id="T2">
          <label>TABLE 2</label>
          <caption>
            <p>“Input Seqs” denotes the number of input sequences for each batch in the first iteration; “Sub-clusters” denotes the number of sub-clusters obtained from each batch; “Singletons” denotes the number of singletons obtained for each batch; “Output Seqs” gives the number of output sequences from the first iteration to be used in the second iteration; and “Out/In” indicates the reduction in size of the sequences to be used in the second iteration compared to the first. The reduction in input size for the second iteration is almost 80%. Each value in the “Output Seqs” column is the sum of the number of sub-clusters and the number of singletons. The first sequence in each sub-cluster was used to represent the entire sub-cluster in the second iteration.</p>
          </caption>
          <table frame="hsides" rules="groups">
            <thead valign="top">
              <tr>
                <th align="left" rowspan="1" colspan="1">Iter 1</th>
                <th align="center" rowspan="1" colspan="1">Input seqs</th>
                <th align="center" rowspan="1" colspan="1">Sub-clusters</th>
                <th align="center" rowspan="1" colspan="1">Singletons</th>
                <th align="center" rowspan="1" colspan="1">Output seqs</th>
                <th align="center" rowspan="1" colspan="1">Out/In (%)</th>
              </tr>
            </thead>
            <tbody valign="top">
              <tr>
                <td align="left" rowspan="1" colspan="1">Batch 1</td>
                <td align="center" rowspan="1" colspan="1">788,410</td>
                <td align="center" rowspan="1" colspan="1">61,842</td>
                <td align="center" rowspan="1" colspan="1">138,042</td>
                <td align="center" rowspan="1" colspan="1">199,884</td>
                <td align="char" char="." rowspan="1" colspan="1">25.35</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">Batch 2</td>
                <td align="center" rowspan="1" colspan="1">820,250</td>
                <td align="center" rowspan="1" colspan="1">62,774</td>
                <td align="center" rowspan="1" colspan="1">165,842</td>
                <td align="center" rowspan="1" colspan="1">228,616</td>
                <td align="char" char="." rowspan="1" colspan="1">27.87</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">Batch 3</td>
                <td align="center" rowspan="1" colspan="1">860,911</td>
                <td align="center" rowspan="1" colspan="1">68,321</td>
                <td align="center" rowspan="1" colspan="1">156,397</td>
                <td align="center" rowspan="1" colspan="1">224,718</td>
                <td align="char" char="." rowspan="1" colspan="1">26.10</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">Batch 4</td>
                <td align="center" rowspan="1" colspan="1">886,836</td>
                <td align="center" rowspan="1" colspan="1">63,252</td>
                <td align="center" rowspan="1" colspan="1">120,205</td>
                <td align="center" rowspan="1" colspan="1">183,457</td>
                <td align="char" char="." rowspan="1" colspan="1">20.69</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">Batch 5</td>
                <td align="center" rowspan="1" colspan="1">898,559</td>
                <td align="center" rowspan="1" colspan="1">63,882</td>
                <td align="center" rowspan="1" colspan="1">123,095</td>
                <td align="center" rowspan="1" colspan="1">186,977</td>
                <td align="char" char="." rowspan="1" colspan="1">20.81</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">Batch 6</td>
                <td align="center" rowspan="1" colspan="1">977,601</td>
                <td align="center" rowspan="1" colspan="1">66,695</td>
                <td align="center" rowspan="1" colspan="1">122,559</td>
                <td align="center" rowspan="1" colspan="1">189,254</td>
                <td align="char" char="." rowspan="1" colspan="1">19.36</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">Batch 7</td>
                <td align="center" rowspan="1" colspan="1">940,736</td>
                <td align="center" rowspan="1" colspan="1">69,612</td>
                <td align="center" rowspan="1" colspan="1">122,955</td>
                <td align="center" rowspan="1" colspan="1">192,567</td>
                <td align="char" char="." rowspan="1" colspan="1">20.47</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">Batch 8</td>
                <td align="center" rowspan="1" colspan="1">918,110</td>
                <td align="center" rowspan="1" colspan="1">67,816</td>
                <td align="center" rowspan="1" colspan="1">132,898</td>
                <td align="center" rowspan="1" colspan="1">200,714</td>
                <td align="char" char="." rowspan="1" colspan="1">21.86</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">Batch 9</td>
                <td align="center" rowspan="1" colspan="1">945,086</td>
                <td align="center" rowspan="1" colspan="1">67,356</td>
                <td align="center" rowspan="1" colspan="1">135,681</td>
                <td align="center" rowspan="1" colspan="1">203,037</td>
                <td align="char" char="." rowspan="1" colspan="1">21.48</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">Batch 10</td>
                <td align="center" rowspan="1" colspan="1">769,210</td>
                <td align="center" rowspan="1" colspan="1">49,596</td>
                <td align="center" rowspan="1" colspan="1">89,756</td>
                <td align="center" rowspan="1" colspan="1">139,352</td>
                <td align="char" char="." rowspan="1" colspan="1">18.12</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">Batch 11</td>
                <td align="center" rowspan="1" colspan="1">451,428</td>
                <td align="center" rowspan="1" colspan="1">33,248</td>
                <td align="center" rowspan="1" colspan="1">64,939</td>
                <td align="center" rowspan="1" colspan="1">98,187</td>
                <td align="char" char="." rowspan="1" colspan="1">21.75</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">Total</td>
                <td align="center" rowspan="1" colspan="1">9,257,137</td>
                <td align="center" rowspan="1" colspan="1">674,394</td>
                <td align="center" rowspan="1" colspan="1">1,372,369</td>
                <td align="center" rowspan="1" colspan="1">2,046,763</td>
                <td align="char" char="." rowspan="1" colspan="1">22.11</td>
              </tr>
            </tbody>
          </table>
        </table-wrap>
        <p>For the second iteration, we combined the output sequences from batches 1, 2, and 3 together, the output sequences from batches 4, 5, 6, and 7 together, and the output sequences from batches 8, 9, 10, and 11 together to form three new batches of sequences. We used pClust on each of these three batches to obtain sub-clusters. The number of input sequences used and the number of sub-clusters and singletons obtained are given in <xref rid="T3" ref-type="table">Table 3</xref>. Again, the number of output sequences in this table is the sum of the number of singletons and the number of sub-clusters, and the ratio in the last row and column shows a reduction in input size for the third iteration of almost 30%.</p>
        <table-wrap position="float" id="T3">
          <label>TABLE 3</label>
          <caption>
            <p>“Input Seqs” denotes the number of input sequences for each batch in the second iteration; “Sub-clusters” denotes the number of sub-clusters obtained from each batch; “Singletons” denotes the number of singletons obtained for each batch; “Output Seqs” gives the number of sequences to be used in the third iteration; and “Out/In” indicates the reduction in size of the sequences to be used in the third iteration compared to the second. The reduction in input size for the third iteration is almost 30%. Each value in the “Output Seqs” column is the sum of the number of sub-clusters and the number of singletons. The first sequence in each sub-cluster was used to represent the entire sub-cluster in the third iteration.</p>
          </caption>
          <table frame="hsides" rules="groups">
            <thead valign="top">
              <tr>
                <th align="left" rowspan="1" colspan="1">Iter 2</th>
                <th align="center" rowspan="1" colspan="1">Input seqs</th>
                <th align="center" rowspan="1" colspan="1">Sub-clusters</th>
                <th align="center" rowspan="1" colspan="1">Singletons</th>
                <th align="center" rowspan="1" colspan="1">Output seqs</th>
                <th align="center" rowspan="1" colspan="1">Out/In (%)</th>
              </tr>
            </thead>
            <tbody valign="top">
              <tr>
                <td align="left" rowspan="1" colspan="1">Batch<sub>123</sub>
</td>
                <td align="center" rowspan="1" colspan="1">653,218</td>
                <td align="center" rowspan="1" colspan="1">110,985</td>
                <td align="center" rowspan="1" colspan="1">375,672</td>
                <td align="center" rowspan="1" colspan="1">486,657</td>
                <td align="char" char="." rowspan="1" colspan="1">74.50</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">Batch<sub>4567</sub>
</td>
                <td align="center" rowspan="1" colspan="1">752,255</td>
                <td align="center" rowspan="1" colspan="1">142,130</td>
                <td align="center" rowspan="1" colspan="1">333,160</td>
                <td align="center" rowspan="1" colspan="1">475,290</td>
                <td align="char" char="." rowspan="1" colspan="1">63.18</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">Batch<sub>891011</sub>
</td>
                <td align="center" rowspan="1" colspan="1">641,290</td>
                <td align="center" rowspan="1" colspan="1">98,555</td>
                <td align="center" rowspan="1" colspan="1">397,303</td>
                <td align="center" rowspan="1" colspan="1">495,858</td>
                <td align="char" char="." rowspan="1" colspan="1">77.32</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">Total</td>
                <td align="center" rowspan="1" colspan="1">2,046,763</td>
                <td align="center" rowspan="1" colspan="1">351,670</td>
                <td align="center" rowspan="1" colspan="1">1,106,135</td>
                <td align="center" rowspan="1" colspan="1">1,457,805</td>
                <td align="char" char="." rowspan="1" colspan="1">71.22</td>
              </tr>
            </tbody>
          </table>
        </table-wrap>
        <p>For the third iteration, we repeated the same steps as used for the first two except that duplicate sequences were removed, and only Batch_123 and Batch_4567 were combined and used as the input to pClust. Values are presented in <xref rid="T4" ref-type="table">Table 4</xref>.</p>
        <table-wrap position="float" id="T4">
          <label>TABLE 4</label>
          <caption>
            <p>“Input Seqs” denotes the number of input sequences for each batch in the third iteration; “Sub-clusters” denotes the number of sub-clusters obtained from each batch; “Singletons” denotes the number of singletons obtained for each batch; “Output Seqs” gives the number of sequences to be used in the fourth iteration; and “Out/In” indicates the reduction in size of the sequences used in the fourth iteration compared to the third. The reduction in input size for the fourth iteration is about 22%. Each value in the “Output Seqs” column is the sum of the number of sub-clusters and the number of singletons. The first sequence in each sub-cluster was used to represent the entire sub-cluster in the fourth and final iteration.</p>
          </caption>
          <table frame="hsides" rules="groups">
            <thead valign="top">
              <tr>
                <th align="left" rowspan="1" colspan="1">Iter 3</th>
                <th align="center" rowspan="1" colspan="1">Input seqs</th>
                <th align="center" rowspan="1" colspan="1">Sub-clusters</th>
                <th align="center" rowspan="1" colspan="1">Singletons</th>
                <th align="center" rowspan="1" colspan="1">Output seqs</th>
                <th align="center" rowspan="1" colspan="1">Out/In (%)</th>
              </tr>
            </thead>
            <tbody valign="top">
              <tr>
                <td align="left" rowspan="1" colspan="1">Batch<sub>1234567</sub>
</td>
                <td align="center" rowspan="1" colspan="1">960,807</td>
                <td align="center" rowspan="1" colspan="1">170,279</td>
                <td align="center" rowspan="1" colspan="1">595,586</td>
                <td align="center" rowspan="1" colspan="1">765,865</td>
                <td align="char" char="." rowspan="1" colspan="1">79.71</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">Batch<sub>891011</sub>
</td>
                <td align="center" rowspan="1" colspan="1">641,290</td>
                <td align="center" rowspan="1" colspan="1">98,555</td>
                <td align="center" rowspan="1" colspan="1">397,303</td>
                <td align="center" rowspan="1" colspan="1">495,858</td>
                <td align="char" char="." rowspan="1" colspan="1">77.32</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">Total</td>
                <td align="center" rowspan="1" colspan="1">1,602,097</td>
                <td align="center" rowspan="1" colspan="1">268,834</td>
                <td align="center" rowspan="1" colspan="1">992,889</td>
                <td align="center" rowspan="1" colspan="1">1,261,723</td>
                <td align="char" char="." rowspan="1" colspan="1">78.75</td>
              </tr>
            </tbody>
          </table>
        </table-wrap>
        <p>There were 1,261,723 output sequences at the conclusion of the third iteration, but after removal of duplicate sequences, 1,260,580 were retained and used as the input to pClust for the fourth and final iteration. The number of input sequences and sub-clusters for the final iteration are presented in <xref rid="T5" ref-type="table">Table 5</xref>.</p>
        <table-wrap position="float" id="T5">
          <label>TABLE 5</label>
          <caption>
            <p>“Input Seqs” denotes the number of input sequences in the single batch in the fourth and final iteration; “Sub-clusters” denotes the number of sub-clusters obtained.</p>
          </caption>
          <table frame="hsides" rules="groups">
            <thead valign="top">
              <tr>
                <th align="left" rowspan="1" colspan="1">Iter 4</th>
                <th align="center" rowspan="1" colspan="1">Input seqs</th>
                <th align="center" rowspan="1" colspan="1">Sub-clusters</th>
              </tr>
            </thead>
            <tbody valign="top">
              <tr>
                <td align="left" rowspan="1" colspan="1">Batch<sub>1234567891011</sub>
</td>
                <td align="center" rowspan="1" colspan="1">1,260,580</td>
                <td align="center" rowspan="1" colspan="1">194,521</td>
              </tr>
            </tbody>
          </table>
        </table-wrap>
      </sec>
      <sec id="s2-1-4">
        <title>2.1.4 Sub-Cluster Merging</title>
        <p>After completing the iterative clustering, we proceeded to sub-cluster merging. We start with the sub-clusters found in the fourth and final iteration. The basic idea is to map the sub-clusters and singletons to the results of the third iteration, then to the results of the second iteration, and finally to the results of the first iteration, merging all the sequences to create homologous clusters. This is possible because of the naming convention we adopted as described previously. Briefly, sequences from different batches are identified by concatenating the sub-cluster name and sequence index with the batch name.</p>
        <p>Next, we illustrate the sub-cluster merging process using a toy example. This example doesn’t represent realistic results and doesn’t use our naming convention. The simplification is meant to provide an understanding of the concept underlying the formation of our final clusters. After completion of the iterative clustering step, we assume the partial results shown in <xref rid="F1" ref-type="fig">Figure 1</xref>, where “bi” indicates batch number “i”, “cj” indicates cluster number “j”, “sk” indicates sequence number “k”, and “Sm” indicates singleton number “m”. As shown, the results of the first iteration are a single cluster in Batch_1 comprised of two sequences b1_s1 and b1_s2 and one singleton each in Batch_2 through Batch_11. For the second iteration, only the first sequence b1_s1 is used to represent the cluster b1_c1, and this sequence clusters with the singleton b2_S2 to form the cluster b123_c1. In addition, the second iteration results in two more clusters composed of singletons from the first iteration. For the third iteration, again only single sequences from each of the clusters b123_c1 and b4567_c1 are used to represent them (note that b891011_c1 is not used for this iteration), and the third iteration results in the two clusters as shown (with b891011_c1 retained from the second iteration). Finally, the fourth iteration results in a single cluster b1234567891011_c1 comprised of the two single representative sequences b1_s1 and b8_S1 from the previous iteration. Then mapping and merging give the results shown in <xref rid="F2" ref-type="fig">Figure 2</xref>. We see how the cluster membership expands as we move from the last iteration to the first. For example, the two sequences in cluster b1234567891011_c1 from the last iteration are mapped and merged with sequences from the third iteration. The final result is a single homologous cluster with sequences b1_s1, b1_s2, b2_S1, b4_S1, b7_s1, b8_S1, and b9_S1 and the five singletons from the first iteration that didn’t cluster (b3_S1, b5_S1, b6_S1, b10_S1, and b11_S1).</p>
        <fig position="float" id="F1">
          <label>FIGURE 1</label>
          <caption>
            <p>We illustrate the sub-cluster merging process using a toy example. This example doesn't represent realistic results and doesn't use our naming convention. The simplification is meant to provide an understanding of the concept underlying the formation of our final clusters. This figure presents the partial results after completion of the iterative clustering step.</p>
          </caption>
          <graphic xlink:href="fbinf-01-749008-g001" position="float"/>
        </fig>
        <fig position="float" id="F2">
          <label>FIGURE 2</label>
          <caption>
            <p>We illustrate the sub-cluster merging process using a toy example. This example doesn't represent realistic results and doesn't use our naming convention. The simplification is meant to provide an understanding of the concept underlying the formation of our final clusters. This figure presents the results after mapping and merging.</p>
          </caption>
          <graphic xlink:href="fbinf-01-749008-g002" position="float"/>
        </fig>
        <p>With more than nine million protein sequences, the algorithm used to accomplish the sub-cluster merging step was non-trivial. The end result was 361,135 homologous clusters ranging in size from 2 to 26,577 sequences, an average of 23 sequences, and a median of 4 sequences (numerous clusters have only 2 sequences), as well as 818,791 singletons. The membership information for each of the ∼9.26 million sequences populating the clusters and singletons consists of its identification number, accession number, annotation, cluster identification, and a validation flag denoting whether its function has been experimentally validated. We store this membership information as well as the mapping of an organism to its corresponding order in a PostgreSQL relational database (<xref rid="B29" ref-type="bibr">Stonebraker and Kemnitz, 1991</xref>), which is a free and open-source object-relational database management system that can handle the workload required for large web applications with many concurrent users. The FASTA files for all the sequences are integrated into a BLAST database.</p>
      </sec>
    </sec>
    <sec id="s2-2">
      <title>2.2 An Automated, Smart Natural Language Processing Tool</title>
      <p>To determine whether functional annotation has been confirmed for a protein sequence, we developed a smart natural language processing (NLP) tool which periodically and automatically queries the UniprotKB database to determine whether a protein function has been experimentally verified. The input to our smart program are publication titles retrieved from the UniProtKB database that are linked to a given accession number for a protein sequence; the output is a binary prediction of whether protein function has been experimentally verified. Prediction uses the results of recurrent convolutional neural network, logistic regression, and support vector machine models and employs a voting scheme. The NLP is based on word embeddings and uses BioWordVec (<xref rid="B34" ref-type="bibr">Zhang et al., 2019</xref>) and BioSentVec (<xref rid="B6" ref-type="bibr">Chen et al., 2019</xref>). Complete details are given in (<xref rid="B31" ref-type="bibr">Tao et al., 2021</xref>).</p>
      <p>Our smart program is integrated into the PASS website as a back-end program which is inaccessible to PASS users. It is executed automatically and periodically based on an estimate of when a sufficient amount of new data are available in the UniprotKB database. This estimate can be changed. During program execution, each accession number for a sequence yet to be validated is mapped to the entry identifier in the UniprotKB database. If the entry is in the UniProtKB/Swiss-Prot database, which is the manually curated section of the UniprotKB database, the program checks for publications categorized as a “Function” publication. If such a publication exists, a validation flag is changed from 0 to 1 in the PASS PostgreSQL database. If the entry is in the UniProtKB/TrEMBL database, publication titles associated with the entry are extracted and used as input to the ML tool. If at least one publication associated with a protein entry is classified as positive, the publication title(s) and the protein accession number are submitted to a human curator for manual review (<xref rid="B31" ref-type="bibr">Tao et al., 2021</xref>). The curator is responsible for changing the validation flag after reviewing the relevant publication(s). Sequences with verified functional annotation are identified by FASTA headers in red font.</p>
      <p>At the time of writing, our smart program had identified 370 protein sequences in the UniProtKB/Swiss-Prot database whose function has been experimentally validated. Initial use of the NLP algorithm identified 814 protein sequences with publications potentially containing proof of experimental validation. These publications are currently awaiting review by our human curator. Subsequent deployment of the NLP algorithm will likely result in significantly smaller numbers. The total number of sequences, less than 1200, is a small fraction of the total number of sequences in the database, but this number will increase with time. In the meantime, sequences with consensus annotations will provide useful guidance for the correct annotation, and when there is no clear consensus, the SSN, described in the next section, will allow a user to determine the annotation most likely to be correct for their sequence.</p>
    </sec>
    <sec id="s2-3">
      <title>2.3 Sequence Similarity Networks</title>
      <p>A sequence query submitted by a PASS user will return a list of FASTA headers for the cluster that best matches the query. When there is a consensus annotation, the user will have no issue, but if there are distinctly different annotations, the user will have to decide which annotation to use. The user can either infer the correct annotation based on their expertise or else create a sequence similarity network (SSN) on our website. Because homology does not guarantee the same molecular function, an SSN can assist a user with choosing an accurate annotation. The user simply selects a minimum of two sequences from the FASTA headers in the cluster, including any that have been verified, and an SSN is generated. Visualization of the SSN is implemented by NetworkX, a Python package for network analysis, based on the pairwise distances between sequences provided in a distance matrix. The best match in the SSN is listed, where 0 is a perfect match, i.e., sequences are identical.</p>
      <p>To create the distance matrix, we use Clustal Omega (<xref rid="B27" ref-type="bibr">Sievers et al., 2011</xref>). Clustal Omega provides a fast and accurate alignment program and generation of the pairwise distance matrix used in NetworkX to create the SSN. To create the distance matrix, Clustal Omega compares unaligned sequences using <italic>k</italic>-mer distance (<xref rid="B32" ref-type="bibr">Wilbur and Lipman, 1983</xref>).</p>
    </sec>
    <sec id="s2-4">
      <title>2.4 The Protein Annotation Surveillance Site Query-Able Website</title>
      <p>The Protein Annotation Surveillance Site (PASS) is implemented in a clear and easy-to-use style using Django, a free, open-source web framework which uses Python. The PASS flowchart is provided in <xref rid="F3" ref-type="fig">Figure 3</xref>. The web page interface links directly with the underlying database system. <xref rid="F4" ref-type="fig">Figure 4</xref> displays the PASS homepage with the query window. Administration of the PASS website is performed directly from a web browser for sequence curation and via the host server for other functions.</p>
      <fig position="float" id="F3">
        <label>FIGURE 3</label>
        <caption>
          <p>PASS flowchart demonstrating the query process.</p>
        </caption>
        <graphic xlink:href="fbinf-01-749008-g003" position="float"/>
      </fig>
      <fig position="float" id="F4">
        <label>FIGURE 4</label>
        <caption>
          <p>PASS home page showing the query window where a user enters their protein sequence.</p>
        </caption>
        <graphic xlink:href="fbinf-01-749008-g004" position="float"/>
      </fig>
      <p>After a user enters their query sequence and clicks on the search button, the query engine looks for similar sequences using BLAST and retrieves the cluster with the best match, displaying the header of the FASTA file with annotation information for each sequence in the cluster. If the query is unsuccessful, the user is returned to the homepage. The user can scroll through the list of all cluster members and select the sequences they believe are most likely to be related to their query sequence to create an SSN. Any sequences that have been validated experimentally are highlighted in red. When available, the user can include sequences of proteins that have been experimentally validated to make a more informed annotation choice. In the next section we present several examples to demonstrate use of the PASS website.</p>
    </sec>
  </sec>
  <sec sec-type="results|discussion" id="s3">
    <title>3 Results and Discussion</title>
    <p>In this section, we present two use cases to demonstrate the use of PASS. We consider two protein sequences, one from the yeast <italic>Kluyveromyces lactis</italic> and one from a coronavirus.</p>
    <sec id="s3-1">
      <title>3.1 Example 1: Eukarya</title>
      <p>We use the protein sequence annotated as uncharacterized protein KLLA0_C15807 g from the yeast <italic>Kluyveromyces lactis</italic> as the query sequence for the PASS website as shown in <xref rid="F5" ref-type="fig">Figure 5</xref>. Its complete FASTA file is available at <ext-link xlink:href="http://www.ncbi.nlm.nih.gov/protein/XP_452906.1?report=fasta" ext-link-type="uri">www.ncbi.nlm.nih.gov/protein/XP_452906.1?report=fasta</ext-link>. The FASTA file can be used with or without its header.</p>
      <fig position="float" id="F5">
        <label>FIGURE 5</label>
        <caption>
          <p>The protein sequence annotated as uncharacterized protein KLLA0_C15807 g from the yeast <italic>Kluyveromyces lactis</italic> is used as the query sequence in PASS.</p>
        </caption>
        <graphic xlink:href="fbinf-01-749008-g005" position="float"/>
      </fig>
      <p>Our query sequence matches a homologous cluster containing eleven sequences (<xref rid="F6" ref-type="fig">Figure 6</xref>). We choose the six sequences with annotations to create a sequence similarity network; the input sequence is automatically included in the SSN. From the SSN in <xref rid="F7" ref-type="fig">Figure 7</xref> we note that the query sequence is most similar to the sequence with accession number NP_983056.1, with a distance of 0.134454, and annotated as ABR109Cp. However, this annotation is not particularly informative, and the majority of sequences are annotated as cyclin-dependent kinase regulatory subunit. In addition, the distance between, for example, our query sequence and sequence #6, annotated as cyclin-dependent kinase regulatory subunit, is 0.151515 which indicates close similarity between them as well. Thus, it is probably best to use the majority annotation in this example.</p>
      <fig position="float" id="F6">
        <label>FIGURE 6</label>
        <caption>
          <p>The query sequence for the yeast protein matches a cluster with eleven sequences, and the six sequences with annotations are chosen to create a sequence similarity network (SSN).</p>
        </caption>
        <graphic xlink:href="fbinf-01-749008-g006" position="float"/>
      </fig>
      <fig position="float" id="F7">
        <label>FIGURE 7</label>
        <caption>
          <p>Sequence similarity network (SSN) composed of the query sequence and sequences selected by the user. In an SSN, smaller distances indicate more similarity between sequences and a greater likelihood of similar function.</p>
        </caption>
        <graphic xlink:href="fbinf-01-749008-g007" position="float"/>
      </fig>
    </sec>
    <sec id="s3-2">
      <title>3.2 Example 2: Virus</title>
      <p>For our second example, we use a spike protein from a coronavirus (CoV) as our query sequence as shown in <xref rid="F8" ref-type="fig">Figure 8</xref>; its complete FASTA file is available at <ext-link xlink:href="http://www.ncbi.nlm.nih.gov/protein/YP_009825061.1?report=fasta" ext-link-type="uri">www.ncbi.nlm.nih.gov/protein/YP_009825061.1?report=fasta</ext-link>. The query sequence matches a homologous cluster with three sequences as shown in <xref rid="F9" ref-type="fig">Figure 9</xref>. One of the three cluster sequences is highlighted by red font, indicating that the function of this sequence has been experimentally validated. We choose all three sequences to generate the SSN shown in <xref rid="F10" ref-type="fig">Figure 10</xref> where we see that the query sequence is identical to the validated sequence (#2), i.e., the distance between the two sequences is 0, with accession number NP_828858.1 and annotated as nucleocapsid protein from SARS-CoV. Interestingly, sequence #2 is from SARS-CoV, sequence #3 is from MERS-CoV, and sequence #4 is from SARS-CoV-2. From the SSN results, it’s most likely that the query sequence is from SARS-CoV. The SSN also shows that the nucleocapsid proteins for SARS-CoV and SARS-CoV-2 are more similar to each other than to the nucleocapsid protein of MERS-CoV.</p>
      <fig position="float" id="F8">
        <label>FIGURE 8</label>
        <caption>
          <p>A spike protein from a coronavirus (CoV) is used as the query sequence in PASS.</p>
        </caption>
        <graphic xlink:href="fbinf-01-749008-g008" position="float"/>
      </fig>
      <fig position="float" id="F9">
        <label>FIGURE 9</label>
        <caption>
          <p>The query sequence for the coronavirus spike protein matches a cluster with three sequences. All three sequences are chosen to create an SSN.</p>
        </caption>
        <graphic xlink:href="fbinf-01-749008-g009" position="float"/>
      </fig>
      <fig position="float" id="F10">
        <label>FIGURE 10</label>
        <caption>
          <p>Sequence similarity network (SSN) composed of the query sequence and sequences selected by the user. In an SSN, smaller distances indicate more similarity between sequences and a greater likelihood of similar function.</p>
        </caption>
        <graphic xlink:href="fbinf-01-749008-g010" position="float"/>
      </fig>
    </sec>
  </sec>
  <sec id="s4">
    <title>4 Conclusion</title>
    <p>In this work, we presented the Protein Annotation Surveillance Site (PASS), a system developed to help life scientists with protein annotation and their fundamental research on proteins. The proposed system has multiple advantages. First, our database contains homologous clusters of close to 8.5 million protein sequences deduced from the representative genomes of bacteria, archaea, eukarya, and viruses. Our data source for protein sequences is the National Center for Biotechnology (NCBI) Reference Sequence (RefSeq) collection which contains a comprehensive, non-redundant, and well-annotated set of protein sequences. Our system provides a foundation for protein-related studies, and protein sequences in our database have the potential to serve as useful references for sequences of interest to users. Second, we developed an innovative approach for clustering millions of protein sequences into homologous groups using a two-step approach. The first step involved iterative clustering. Batches of sequences were clustered, results from each batch were used to create smaller batches, and this process was repeated until sequences from a single batch were clustered. In the second step, results from the final iteration were merged with the previous iteration, and the procedure continued until merging of the initial results was completed. Our two-step approach is efficient, and it overcomes the constraints of limited computational power. Third, our system uses peer-reviewed publications with experimental validation of protein function. Because of the dearth of existing experimental verification, extension of this information from individual protein sequences to other protein sequences is valuable, and our system provides this capability. In addition, given that homology does not guarantee the same molecular function, the ability to create sequence similarity networks for sequences of interest to a user, which is provided by our system, assists in preventing assignment of annotation based only on homology. Altogether, use of our PASS system website assists users with the accurate annotation of protein sequences of interest to them. Finally, we developed a novel ensemble machine-learning (ML) program that uses natural language processing via word embeddings and voting based on the results of three different models. Our ML algorithm has been integrated into the PASS system and automatically provides updates from the UniProtKB database. Function-related publications in the curated UniProtKB/Swiss-Prot database are used for direct validation of protein function for sequences in our PASS database, while publications in the uncurated UniProtKB/TrEMBL database are used with our ML program, and if prediction is positive, the results are passed to a human curator for manual review to guarantee 100% validation accuracy.</p>
    <p>Several enhancements to the PASS system are possible. First, the incorporation of active learning to our ML program is likely to improve its current performance. When a publication that doesn’t provide experimental evidence of protein function is incorrectly predicted to provide this evidence, the error will be caught by our human expert. After a sufficient number of errors have been found, these data can be combined with the existing training data to retrain the model. Second, the number of complete representative genomes will continue its exponential growth. While it’s probable that the majority of protein sequences for bacteria already exist in the database, this is not true for archaea, eukarya, and viruses simply because the majority of genomes in the NCBI database are bacterial. Protein sequences deduced from the genomes of archaea, eukarya, and viruses can be clustered as they become available, and then BLAST can be used to determine whether the clusters or singletons match clusters already in the database. If so, they can be added to these clusters; if not, they can be added to the database as new clusters. Third, an interesting direction would be to implement the two-step approach of iterative clustering and sub-cluster merging in parallel. This would help to eliminate the constraints of computational resources and make homologous clustering at any scale possible.</p>
  </sec>
</body>
<back>
  <ack>
    <p>We would like to acknowledge the contributions of Erik Ostrom who provided much assistance to the authors in setting up the server for the PASS website.</p>
  </ack>
  <sec sec-type="data-availability" id="s5">
    <title>Data Availability Statement</title>
    <p>The Protein Annotation Surveillance Site (PASS) can be accessed at <ext-link xlink:href="https://pass.eecs.wsu.edu/" ext-link-type="uri">https://pass.eecs.wsu.edu/</ext-link>.</p>
  </sec>
  <sec id="s6">
    <title>Author Contributions</title>
    <p>JT collected the data, pre-processed them, determined the homologous cluster membership information, trained the models, designed and performed the experiments, analyzed the results, designed and built the PASS website, and prepared the initial draft of the manuscript. KB and SB analyzed the collected data, approved the method, guided the experiments, edited the manuscript, and further interpreted the experimental results. All authors have read and agreed to the published version of the manuscript.</p>
  </sec>
  <sec id="s7">
    <title>Funding</title>
    <p>JT was supported by the Carl M. Hansen Foundation.</p>
  </sec>
  <sec sec-type="COI-statement" id="s8">
    <title>Conflict of Interest</title>
    <p>The authors declare that the research was conducted in the absence of any commercial or financial relationships that could be construed as a potential conflict of interest.</p>
  </sec>
  <sec sec-type="disclaimer" id="s9">
    <title>Publisher’s Note</title>
    <p>All claims expressed in this article are solely those of the authors and do not necessarily represent those of their affiliated organizations, or those of the publisher, the editors and the reviewers. Any product that may be evaluated in this article, or claim that may be made by its manufacturer, is not guaranteed or endorsed by the publisher.</p>
  </sec>
  <ref-list>
    <title>References</title>
    <ref id="B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Abnousi</surname><given-names>A.</given-names></name><name><surname>Broschat</surname><given-names>S. L.</given-names></name><name><surname>Kalyanaraman</surname><given-names>A.</given-names></name></person-group> (<year>2018</year>). <article-title>Alignment-free Clustering of Large Data Sets of Unannotated Protein Conserved Regions Using Minhashing</article-title>. <source>BMC bioinformatics</source>
<volume>19</volume>, <fpage>83</fpage>–<lpage>18</lpage>. <pub-id pub-id-type="doi">10.1186/s12859-018-2080-y</pub-id>
<pub-id pub-id-type="pmid">29506470</pub-id></mixed-citation>
    </ref>
    <ref id="B2">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Bader</surname><given-names>D. A.</given-names></name><name><surname>Meyerhenke</surname><given-names>H.</given-names></name><name><surname>Sanders</surname><given-names>P.</given-names></name><name><surname>Wagner</surname><given-names>D.</given-names></name></person-group> (<year>2012</year>). “<article-title>Graph Partitioning and Graph Clustering</article-title>,” in <source>10th DIMACS Implementation Challenge Workshop</source>, <fpage>13</fpage>–<lpage>14</lpage>. </mixed-citation>
    </ref>
    <ref id="B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Benson</surname><given-names>D. A.</given-names></name><name><surname>Karsch-Mizrachi</surname><given-names>I.</given-names></name><name><surname>Lipman</surname><given-names>D. J.</given-names></name><name><surname>Ostell</surname><given-names>J.</given-names></name><name><surname>Wheeler</surname><given-names>D. L.</given-names></name></person-group> (<year>2005</year>). <article-title>Genbank</article-title>. <source>Nucleic Acids Res.</source>
<volume>33</volume>, <fpage>D34</fpage>–<lpage>D38</lpage>. <pub-id pub-id-type="doi">10.1093/nar/gki063</pub-id>
<pub-id pub-id-type="pmid">15608212</pub-id></mixed-citation>
    </ref>
    <ref id="B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Brandes</surname><given-names>U.</given-names></name><name><surname>Delling</surname><given-names>D.</given-names></name><name><surname>Gaertler</surname><given-names>M.</given-names></name><name><surname>Gorke</surname><given-names>R.</given-names></name><name><surname>Hoefer</surname><given-names>M.</given-names></name><name><surname>Nikoloski</surname><given-names>Z.</given-names></name><etal/></person-group> (<year>2007</year>). <article-title>On Modularity Clustering</article-title>. <source>IEEE Trans. Knowledge Data Eng.</source>
<volume>20</volume>, <fpage>172</fpage>–<lpage>188</lpage>. <pub-id pub-id-type="doi">10.1109/TKDE.2007.190689</pub-id>
</mixed-citation>
    </ref>
    <ref id="B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Cao</surname><given-names>R.</given-names></name><name><surname>Cheng</surname><given-names>J.</given-names></name></person-group> (<year>2016</year>). <article-title>Integrated Protein Function Prediction by Mining Function Associations, Sequences, and Protein-Protein and Gene-Gene Interaction Networks</article-title>. <source>Methods</source>
<volume>93</volume>, <fpage>84</fpage>–<lpage>91</lpage>. <pub-id pub-id-type="doi">10.1016/j.ymeth.2015.09.011</pub-id>
<pub-id pub-id-type="pmid">26370280</pub-id></mixed-citation>
    </ref>
    <ref id="B6">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Chen</surname><given-names>Q.</given-names></name><name><surname>Peng</surname><given-names>Y.</given-names></name><name><surname>Lu</surname><given-names>Z.</given-names></name></person-group> (<year>2019</year>). “<article-title>Biosentvec: Creating Sentence Embeddings for Biomedical Texts</article-title>,” in <source>2019 IEEE International Conference on Healthcare Informatics (ICHI)</source> (<publisher-name>IEEE</publisher-name>), <fpage>1</fpage>–<lpage>5</lpage>. <pub-id pub-id-type="doi">10.1109/ichi.2019.8904728</pub-id>
</mixed-citation>
    </ref>
    <ref id="B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Daily</surname><given-names>J.</given-names></name></person-group> (<year>2016</year>). <article-title>Parasail: Simd C Library for Global, Semi-global, and Local Pairwise Sequence Alignments</article-title>. <source>BMC Bioinformatics</source>
<volume>17</volume>, <fpage>81</fpage>. <pub-id pub-id-type="doi">10.1186/s12859-016-0930-z</pub-id>
<pub-id pub-id-type="pmid">26864881</pub-id></mixed-citation>
    </ref>
    <ref id="B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fa</surname><given-names>R.</given-names></name><name><surname>Cozzetto</surname><given-names>D.</given-names></name><name><surname>Wan</surname><given-names>C.</given-names></name><name><surname>Jones</surname><given-names>D. T.</given-names></name></person-group> (<year>2018</year>). <article-title>Predicting Human Protein Function with Multi-Task Deep Neural Networks</article-title>. <source>PloS one</source>
<volume>13</volume>, <fpage>e0198216</fpage>. <pub-id pub-id-type="doi">10.1371/journal.pone.0198216</pub-id>
<pub-id pub-id-type="pmid">29889900</pub-id></mixed-citation>
    </ref>
    <ref id="B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Finn</surname><given-names>R. D.</given-names></name><name><surname>Clements</surname><given-names>J.</given-names></name><name><surname>Eddy</surname><given-names>S. R.</given-names></name></person-group> (<year>2011</year>). <article-title>Hmmer Web Server: Interactive Sequence Similarity Searching</article-title>. <source>Nucleic Acids Res.</source>
<volume>39</volume>, <fpage>W29</fpage>–<lpage>W37</lpage>. <pub-id pub-id-type="doi">10.1093/nar/gkr367</pub-id>
<pub-id pub-id-type="pmid">21593126</pub-id></mixed-citation>
    </ref>
    <ref id="B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fleischmann</surname><given-names>W.</given-names></name><name><surname>Möller</surname><given-names>S.</given-names></name><name><surname>Gateau</surname><given-names>A.</given-names></name><name><surname>Apweiler</surname><given-names>R.</given-names></name></person-group> (<year>1999</year>). <article-title>A Novel Method for Automatic Functional Annotation of Proteins</article-title>. <source>Bioinformatics</source>
<volume>15</volume>, <fpage>228</fpage>–<lpage>233</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/15.3.228</pub-id>
<pub-id pub-id-type="pmid">10222410</pub-id></mixed-citation>
    </ref>
    <ref id="B11">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Frasca</surname><given-names>M.</given-names></name><name><surname>Cesa-Bianchi</surname><given-names>N.</given-names></name></person-group> (<year>2017</year>). “<article-title>Multitask Protein Function Prediction through Task Dissimilarity</article-title>,” in <source>IEEE/ACM Transactions on Computational Biology and Bioinformatics</source> (<publisher-name>IEEE</publisher-name>). </mixed-citation>
    </ref>
    <ref id="B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Galperin</surname><given-names>M. Y.</given-names></name><name><surname>Koonin</surname><given-names>E. V.</given-names></name></person-group> (<year>1998</year>). <article-title>Sources of Systematic Error in Functional Annotation of Genomes: Domain Rearrangement, Non-orthologous Gene Displacement and Operon Disruption</article-title>. <source>In Silico Biol.</source>
<volume>1</volume>, <fpage>55</fpage>–<lpage>67</lpage>. <pub-id pub-id-type="pmid">11471243</pub-id></mixed-citation>
    </ref>
    <ref id="B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gilks</surname><given-names>W. R.</given-names></name><name><surname>Audit</surname><given-names>B.</given-names></name><name><surname>de Angelis</surname><given-names>D.</given-names></name><name><surname>Tsoka</surname><given-names>S.</given-names></name><name><surname>Ouzounis</surname><given-names>C. A.</given-names></name></person-group> (<year>2005</year>). <article-title>Percolation of Annotation Errors through Hierarchically Structured Protein Sequence Databases</article-title>. <source>Math. Biosci.</source>
<volume>193</volume>, <fpage>223</fpage>–<lpage>234</lpage>. <pub-id pub-id-type="doi">10.1016/j.mbs.2004.08.001</pub-id>
<pub-id pub-id-type="pmid">15748731</pub-id></mixed-citation>
    </ref>
    <ref id="B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hong</surname><given-names>J.</given-names></name><name><surname>Luo</surname><given-names>Y.</given-names></name><name><surname>Zhang</surname><given-names>Y.</given-names></name><name><surname>Ying</surname><given-names>J.</given-names></name><name><surname>Xue</surname><given-names>W.</given-names></name><name><surname>Xie</surname><given-names>T.</given-names></name><etal/></person-group> (<year>2020</year>). <article-title>Protein Functional Annotation of Simultaneously Improved Stability, Accuracy and False Discovery Rate Achieved by a Sequence-Based Deep Learning</article-title>. <source>Brief Bioinform</source>
<volume>21</volume>, <fpage>1437</fpage>–<lpage>1447</lpage>. <pub-id pub-id-type="doi">10.1093/bib/bbz081</pub-id>
<pub-id pub-id-type="pmid">31504150</pub-id></mixed-citation>
    </ref>
    <ref id="B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Khaledian</surname><given-names>E.</given-names></name><name><surname>Broschat</surname><given-names>S. L.</given-names></name></person-group> (<year>2020</year>). <article-title>A Study of pClust Settings</article-title>. <source>ACM Sigbioinformatics Rec.</source>
<volume>11</volume>, <fpage>1</fpage>–<lpage>5</lpage>. <pub-id pub-id-type="doi">10.1145/3411750.3411751</pub-id>
</mixed-citation>
    </ref>
    <ref id="B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lambrou</surname><given-names>G. I.</given-names></name><name><surname>Sdraka</surname><given-names>M.</given-names></name><name><surname>Koutsouris</surname><given-names>D.</given-names></name></person-group> (<year>2019</year>). <article-title>The "Gene Cube": A Novel Approach to Three-Dimensional Clustering of Gene Expression Data</article-title>. <source>Cbio</source>
<volume>14</volume>, <fpage>721</fpage>–<lpage>727</lpage>. <pub-id pub-id-type="doi">10.2174/1574893614666190116170406</pub-id>
</mixed-citation>
    </ref>
    <ref id="B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lockwood</surname><given-names>S.</given-names></name><name><surname>Brayton</surname><given-names>K. A.</given-names></name><name><surname>Daily</surname><given-names>J. A.</given-names></name><name><surname>Broschat</surname><given-names>S. L.</given-names></name></person-group> (<year>2019</year>). <article-title>Whole Proteome Clustering of 2,307 Proteobacterial Genomes Reveals Conserved Proteins and Significant Annotation Issues</article-title>. <source>Front. Microbiol.</source>
<volume>10</volume>, <fpage>383</fpage>. <pub-id pub-id-type="doi">10.3389/fmicb.2019.00383</pub-id>
<pub-id pub-id-type="pmid">30873148</pub-id></mixed-citation>
    </ref>
    <ref id="B18">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Lockwood</surname><given-names>S.</given-names></name></person-group> (<year>2016</year>). <source>Applications and Extensions of Pclust to Big Microbial Proteomic Data</source>
<publisher-loc>Pullman, Washington, USA</publisher-loc>: <publisher-name>Washington State University</publisher-name>.</mixed-citation>
    </ref>
    <ref id="B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lu</surname><given-names>H.</given-names></name><name><surname>Halappanavar</surname><given-names>M.</given-names></name><name><surname>Kalyanaraman</surname><given-names>A.</given-names></name></person-group> (<year>2015</year>). <article-title>Parallel Heuristics for Scalable Community Detection</article-title>. <source>Parallel Comput.</source>
<volume>47</volume>, <fpage>19</fpage>–<lpage>37</lpage>. <pub-id pub-id-type="doi">10.1016/j.parco.2015.03.003</pub-id>
</mixed-citation>
    </ref>
    <ref id="B20">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Mohanta</surname><given-names>T. K.</given-names></name><name><surname>Hashem</surname><given-names>A.</given-names></name><name><surname>Abd Allah</surname><given-names>E. F.</given-names></name><name><surname>Harrasi</surname><given-names>A. A.</given-names></name></person-group> (<year>2020</year>). <source>Fungal Genomes: Suffering with Functional Annotation Errors</source>
<publisher-loc>Durham, NC</publisher-loc>: <publisher-name>Research Square</publisher-name>.</mixed-citation>
    </ref>
    <ref id="B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Nakano</surname><given-names>F. K.</given-names></name><name><surname>Lietaert</surname><given-names>M.</given-names></name><name><surname>Vens</surname><given-names>C.</given-names></name></person-group> (<year>2019</year>). <article-title>Machine Learning for Discovering Missing or Wrong Protein Function Annotations : A Comparison Using Updated Benchmark Datasets</article-title>. <source>BMC bioinformatics</source>
<volume>20</volume>, <fpage>485</fpage>. <pub-id pub-id-type="doi">10.1186/s12859-019-3060-6</pub-id>
<pub-id pub-id-type="pmid">31547800</pub-id></mixed-citation>
    </ref>
    <ref id="B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Newman</surname><given-names>M. E.</given-names></name><name><surname>Girvan</surname><given-names>M.</given-names></name></person-group> (<year>2004</year>). <article-title>Finding and Evaluating Community Structure in Networks</article-title>. <source>Phys. Rev. E Stat. Nonlin Soft Matter Phys.</source>
<volume>69</volume>, <fpage>026113</fpage>. <pub-id pub-id-type="doi">10.1103/PhysRevE.69.026113</pub-id>
<pub-id pub-id-type="pmid">14995526</pub-id></mixed-citation>
    </ref>
    <ref id="B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Radivojac</surname><given-names>P.</given-names></name><name><surname>Clark</surname><given-names>W. T.</given-names></name><name><surname>Oron</surname><given-names>T. R.</given-names></name><name><surname>Schnoes</surname><given-names>A. M.</given-names></name><name><surname>Wittkop</surname><given-names>T.</given-names></name><name><surname>Sokolov</surname><given-names>A.</given-names></name><etal/></person-group> (<year>2013</year>). <article-title>A Large-Scale Evaluation of Computational Protein Function Prediction</article-title>. <source>Nat. Methods</source>
<volume>10</volume>, <fpage>221</fpage>–<lpage>227</lpage>. <pub-id pub-id-type="doi">10.1038/nmeth.2340</pub-id>
<pub-id pub-id-type="pmid">23353650</pub-id></mixed-citation>
    </ref>
    <ref id="B24">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Salzberg</surname><given-names>S. L.</given-names></name></person-group> (<year>2019</year>). <source>Next-generation Genome Annotation: We Still Struggle to Get it Right</source>
<publisher-loc>London, United Kingdom</publisher-loc>: <publisher-name>BioMed Central</publisher-name>.</mixed-citation>
    </ref>
    <ref id="B25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Schnoes</surname><given-names>A. M.</given-names></name><name><surname>Brown</surname><given-names>S. D.</given-names></name><name><surname>Dodevski</surname><given-names>I.</given-names></name><name><surname>Babbitt</surname><given-names>P. C.</given-names></name></person-group> (<year>2009</year>). <article-title>Annotation Error in Public Databases: Misannotation of Molecular Function in Enzyme Superfamilies</article-title>. <source>Plos Comput. Biol.</source>
<volume>5</volume>, <fpage>e1000605</fpage>. <pub-id pub-id-type="doi">10.1371/journal.pcbi.1000605</pub-id>
<pub-id pub-id-type="pmid">20011109</pub-id></mixed-citation>
    </ref>
    <ref id="B26">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Schnoes</surname><given-names>A. M.</given-names></name><name><surname>Ream</surname><given-names>D. C.</given-names></name><name><surname>Thorman</surname><given-names>A. W.</given-names></name><name><surname>Babbitt</surname><given-names>P. C.</given-names></name><name><surname>Friedberg</surname><given-names>I.</given-names></name></person-group> (<year>2013</year>). <article-title>Biases in the Experimental Annotations of Protein Function and Their Effect on Our Understanding of Protein Function Space</article-title>. <source>Plos Comput. Biol.</source>
<volume>9</volume>, <fpage>e1003063</fpage>. <pub-id pub-id-type="doi">10.1371/journal.pcbi.1003063</pub-id>
<pub-id pub-id-type="pmid">23737737</pub-id></mixed-citation>
    </ref>
    <ref id="B27">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sievers</surname><given-names>F.</given-names></name><name><surname>Wilm</surname><given-names>A.</given-names></name><name><surname>Dineen</surname><given-names>D.</given-names></name><name><surname>Gibson</surname><given-names>T. J.</given-names></name><name><surname>Karplus</surname><given-names>K.</given-names></name><name><surname>Li</surname><given-names>W.</given-names></name><etal/></person-group> (<year>2011</year>). <article-title>Fast, Scalable Generation of High-Quality Protein Multiple Sequence Alignments Using Clustal omega</article-title>. <source>Mol. Syst. Biol.</source>
<volume>7</volume>, <fpage>539</fpage>. <pub-id pub-id-type="doi">10.1038/msb.2011.75</pub-id>
<pub-id pub-id-type="pmid">21988835</pub-id></mixed-citation>
    </ref>
    <ref id="B28">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Steinegger</surname><given-names>M.</given-names></name><name><surname>Meier</surname><given-names>M.</given-names></name><name><surname>Mirdita</surname><given-names>M.</given-names></name><name><surname>Vöhringer</surname><given-names>H.</given-names></name><name><surname>Haunsberger</surname><given-names>S. J.</given-names></name><name><surname>Söding</surname><given-names>J.</given-names></name></person-group> (<year>2019</year>). <article-title>Hh-suite3 for Fast Remote Homology Detection and Deep Protein Annotation</article-title>. <source>BMC bioinformatics</source>
<volume>20</volume>, <fpage>473</fpage>. <pub-id pub-id-type="doi">10.1186/s12859-019-3019-7</pub-id>
<pub-id pub-id-type="pmid">31521110</pub-id></mixed-citation>
    </ref>
    <ref id="B29">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Stonebraker</surname><given-names>M.</given-names></name><name><surname>Kemnitz</surname><given-names>G.</given-names></name></person-group> (<year>1991</year>). <article-title>The Postgres Next Generation Database Management System</article-title>. <source>Commun. ACM</source>
<volume>34</volume>, <fpage>78</fpage>–<lpage>92</lpage>. <pub-id pub-id-type="doi">10.1145/125223.125262</pub-id>
</mixed-citation>
    </ref>
    <ref id="B30">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sun</surname><given-names>S.</given-names></name><name><surname>Wang</surname><given-names>C.</given-names></name><name><surname>Ding</surname><given-names>H.</given-names></name><name><surname>Zou</surname><given-names>Q.</given-names></name></person-group> (<year>2020</year>). <article-title>Machine Learning and its Applications in Plant Molecular Studies</article-title>. <source>Brief. Funct. Genomics</source>
<volume>19</volume>, <fpage>40</fpage>–<lpage>48</lpage>. <pub-id pub-id-type="doi">10.1093/bfgp/elz036</pub-id>
<pub-id pub-id-type="pmid">31867668</pub-id></mixed-citation>
    </ref>
    <ref id="B31">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Tao</surname><given-names>J.</given-names></name><name><surname>Brayton</surname><given-names>K. A.</given-names></name><name><surname>Broschat</surname><given-names>S. L.</given-names></name></person-group> (<year>2021</year>). <article-title>Automated Confirmation of Protein Annotation Using Nlp and the Uniprotkb Database</article-title>. <source>Appl. Sci.</source>
<volume>11</volume>, <fpage>24</fpage>. <pub-id pub-id-type="doi">10.3390/app11010024</pub-id>
</mixed-citation>
    </ref>
    <ref id="B32">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wilbur</surname><given-names>W. J.</given-names></name><name><surname>Lipman</surname><given-names>D. J.</given-names></name></person-group> (<year>1983</year>). <article-title>Rapid Similarity Searches of Nucleic Acid and Protein Data banks</article-title>. <source>Proc. Natl. Acad. Sci. U S A.</source>
<volume>80</volume>, <fpage>726</fpage>–<lpage>730</lpage>. <pub-id pub-id-type="doi">10.1073/pnas.80.3.726</pub-id>
<pub-id pub-id-type="pmid">6572363</pub-id></mixed-citation>
    </ref>
    <ref id="B33">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Xie</surname><given-names>H.</given-names></name><name><surname>Wasserman</surname><given-names>A.</given-names></name><name><surname>Levine</surname><given-names>Z.</given-names></name><name><surname>Novik</surname><given-names>A.</given-names></name><name><surname>Grebinskiy</surname><given-names>V.</given-names></name><name><surname>Shoshan</surname><given-names>A.</given-names></name><etal/></person-group> (<year>2002</year>). <article-title>Large-scale Protein Annotation through Gene Ontology</article-title>. <source>Genome Res.</source>
<volume>12</volume>, <fpage>785</fpage>–<lpage>794</lpage>. <pub-id pub-id-type="doi">10.1101/gr.86902</pub-id>
<pub-id pub-id-type="pmid">11997345</pub-id></mixed-citation>
    </ref>
    <ref id="B34">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhang</surname><given-names>Y.</given-names></name><name><surname>Chen</surname><given-names>Q.</given-names></name><name><surname>Yang</surname><given-names>Z.</given-names></name><name><surname>Lin</surname><given-names>H.</given-names></name><name><surname>Lu</surname><given-names>Z.</given-names></name></person-group> (<year>2019</year>). <article-title>Biowordvec, Improving Biomedical Word Embeddings with Subword Information and Mesh</article-title>. <source>Sci. Data</source>
<volume>6</volume>, <fpage>52</fpage>–<lpage>59</lpage>. <pub-id pub-id-type="doi">10.1038/s41597-019-0055-0</pub-id>
<pub-id pub-id-type="pmid">31076572</pub-id></mixed-citation>
    </ref>
    <ref id="B35">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhang</surname><given-names>Y.</given-names></name><name><surname>Yan</surname><given-names>J.</given-names></name><name><surname>Chen</surname><given-names>S.</given-names></name><name><surname>Gong</surname><given-names>M.</given-names></name><name><surname>Gao</surname><given-names>D.</given-names></name><name><surname>Zhu</surname><given-names>M.</given-names></name><etal/></person-group> (<year>2020</year>). <article-title>Review of the Applications of Deep Learning in Bioinformatics</article-title>. <source>Curr. Bioinformatics</source>
<volume>15</volume>, <fpage>898</fpage>–<lpage>911</lpage>. <pub-id pub-id-type="doi">10.2174/1574893615999200711165743</pub-id>
</mixed-citation>
    </ref>
  </ref-list>
</back>

<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">J Appl Crystallogr</journal-id>
    <journal-id journal-id-type="iso-abbrev">J Appl Crystallogr</journal-id>
    <journal-id journal-id-type="publisher-id">J. Appl. Cryst.</journal-id>
    <journal-title-group>
      <journal-title>Journal of Applied Crystallography</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">0021-8898</issn>
    <issn pub-type="epub">1600-5767</issn>
    <publisher>
      <publisher-name>International Union of Crystallography</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">9533759</article-id>
    <article-id pub-id-type="publisher-id">yr5086</article-id>
    <article-id pub-id-type="doi">10.1107/S1600576722008068</article-id>
    <article-id pub-id-type="coden">JACGAR</article-id>
    <article-id pub-id-type="pii">S1600576722008068</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research Papers</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>The Scatman: an approximate method for fast wide-angle scattering simulations</article-title>
      <alt-title>The Scatman</alt-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0002-7950-293X</contrib-id>
        <name>
          <surname>Colombo</surname>
          <given-names>Alessandro</given-names>
        </name>
        <xref rid="a" ref-type="aff">a</xref>
        <xref rid="cor" ref-type="corresp">*</xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0002-4784-1013</contrib-id>
        <name>
          <surname>Zimmermann</surname>
          <given-names>Julian</given-names>
        </name>
        <xref rid="a" ref-type="aff">a</xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0002-3245-8169</contrib-id>
        <name>
          <surname>Langbehn</surname>
          <given-names>Bruno</given-names>
        </name>
        <xref rid="b" ref-type="aff">b</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Möller</surname>
          <given-names>Thomas</given-names>
        </name>
        <xref rid="b" ref-type="aff">b</xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0002-2667-7488</contrib-id>
        <name>
          <surname>Peltz</surname>
          <given-names>Christian</given-names>
        </name>
        <xref rid="c" ref-type="aff">c</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Sander</surname>
          <given-names>Katharina</given-names>
        </name>
        <xref rid="c" ref-type="aff">c</xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0002-9150-1972</contrib-id>
        <name>
          <surname>Kruse</surname>
          <given-names>Björn</given-names>
        </name>
        <xref rid="c" ref-type="aff">c</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Tümmler</surname>
          <given-names>Paul</given-names>
        </name>
        <xref rid="c" ref-type="aff">c</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Barke</surname>
          <given-names>Ingo</given-names>
        </name>
        <xref rid="c" ref-type="aff">c</xref>
        <xref rid="d" ref-type="aff">d</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Rupp</surname>
          <given-names>Daniela</given-names>
        </name>
        <xref rid="a" ref-type="aff">a</xref>
        <xref rid="cor" ref-type="corresp">*</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Fennel</surname>
          <given-names>Thomas</given-names>
        </name>
        <xref rid="c" ref-type="aff">c</xref>
        <xref rid="d" ref-type="aff">d</xref>
        <xref rid="cor" ref-type="corresp">*</xref>
      </contrib>
      <aff id="a"><label>a</label>Laboratory for Solid State Physics, <institution>ETH Zürich</institution>, 8093 Zürich, <country>Switzerland</country></aff>
      <aff id="b"><label>b</label>Institute for Optics and Atomic Physics, <institution>Technical University Berlin</institution>, 10623 Berlin, <country>Germany</country></aff>
      <aff id="c"><label>c</label>Institute for Physics, <institution>University of Rostock</institution>, 18059 Rostock, <country>Germany</country></aff>
      <aff id="d"><label>d</label>Department of Life, Light and Matter, <institution>University of Rostock</institution>, 18059 Rostock, <country>Germany</country></aff>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Barty</surname>
          <given-names>A.</given-names>
        </name>
        <role>Editor</role>
      </contrib>
      <aff>DESY, Hamburg, <country>Germany</country>
</aff>
    </contrib-group>
    <author-notes>
      <corresp id="cor">Correspondence e-mail: <email>alcolombo@phys.ethz.ch</email>, <email>daniela.rupp@phys.ethz.ch</email>, <email>thomas.fennel@uni-rostock.de</email>
</corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <day>01</day>
      <month>10</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>14</day>
      <month>9</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>14</day>
      <month>9</month>
      <year>2022</year>
    </pub-date>
    <!--PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>.-->
    <volume>55</volume>
    <issue>Pt 5</issue>
    <issue-id pub-id-type="publisher-id">j220500</issue-id>
    <fpage>1232</fpage>
    <lpage>1246</lpage>
    <history>
      <date date-type="received">
        <day>24</day>
        <month>1</month>
        <year>2022</year>
      </date>
      <date date-type="accepted">
        <day>11</day>
        <month>8</month>
        <year>2022</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© Alessandro Colombo et al. 2022</copyright-statement>
      <copyright-year>2022</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution (CC-BY) Licence, which permits
unrestricted use, distribution, and reproduction in any medium, provided the original authors and source are cited.</license-p>
      </license>
      <ali:free_to_read xmlns:ali="http://www.niso.org/schemas/ali/1.0/"/>
    </permissions>
    <self-uri xlink:href="https://doi.org/10.1107/S1600576722008068">A full version of this article is available from Crystallography Journals Online.</self-uri>
    <abstract abstract-type="toc">
      <p>A fast method for wide-angle coherent scattering simulations of weakly absorbing isolated samples, called the Scatman, is presented. Its quantitative agreement with exact solutions and the low simulation time of its software implementation <italic toggle="yes">PyScatman</italic> open new perspectives for single-shot 3D coherent diffraction imaging.</p>
    </abstract>
    <abstract>
      <p>Single-shot coherent diffraction imaging (CDI) is a powerful approach to characterize the structure and dynamics of isolated nanoscale objects such as single viruses, aerosols, nanocrystals and droplets. Using X-ray wavelengths, the diffraction images in CDI experiments usually cover only small scattering angles of a few degrees. These small-angle patterns represent the magnitude of the Fourier transform of the 2D projection of the sample’s electron density, which can be reconstructed efficiently but lacks any depth information. In cases where the diffracted signal can be measured up to scattering angles exceeding ∼10°, <italic toggle="yes">i.e.</italic> in the wide-angle regime, some 3D morphological information of the target is contained in a single-shot diffraction pattern. However, the extraction of the 3D structural information is no longer straightforward and defines the key challenge in wide-angle CDI. So far, the most convenient approach relies on iterative forward fitting of the scattering pattern using scattering simulations. Here the Scatman is presented, an approximate and fast numerical tool for the simulation and iterative fitting of wide-angle scattering images of isolated samples. Furthermore, the open-source software implementation of the Scatman algorithm, <italic toggle="yes">PyScatman</italic>, is published and described in detail. The Scatman approach, which has already been applied in previous work for forward-fitting-based shape retrieval, adopts the multi-slice Fourier transform method. The effects of optical properties are partially included, yielding quantitative results for small, isolated and weakly interacting samples. <italic toggle="yes">PyScatman</italic> is capable of computing wide-angle scattering patterns in a few milliseconds even on consumer-level computing hardware, potentially enabling new data analysis schemes for wide-angle coherent diffraction experiments.</p>
    </abstract>
    <kwd-group>
      <kwd>coherent diffraction imaging</kwd>
      <kwd>wide-angle scattering</kwd>
      <kwd>multi-slice Fourier transform</kwd>
      <kwd>approximate methods</kwd>
      <kwd>high-performance computing</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>Schweizerischer Nationalfonds zur Förderung der Wissenschaftlichen Forschung, NCCR MUST</funding-source>
      </award-group>
      <award-group>
        <funding-source>Deutsche Forschungsgemeinschaft</funding-source>
        <award-id>MO 719/13-1</award-id>
      </award-group>
      <award-group>
        <funding-source>Deutsche Forschungsgemeinschaft</funding-source>
        <award-id>MO 719/14-2</award-id>
      </award-group>
      <award-group>
        <funding-source>Schweizerischer Nationalfonds zur Förderung der Wissenschaftlichen Forschung</funding-source>
        <award-id>200021E_193642</award-id>
      </award-group>
      <award-group>
        <funding-source>Deutsche Forschungsgemeinschaft</funding-source>
        <award-id>SFB 652</award-id>
      </award-group>
      <award-group>
        <funding-source>Deutsche Forschungsgemeinschaft</funding-source>
        <award-id>SFB 1477</award-id>
      </award-group>
      <award-group>
        <funding-source>Heisemberg-Grant</funding-source>
        <award-id>SPP1840</award-id>
      </award-group>
      <award-group>
        <funding-source>Bundesministerium für Bildung und Forschung</funding-source>
        <award-id>05K16HRB</award-id>
      </award-group>
      <award-group>
        <funding-source>European Social Fund</funding-source>
        <award-id>ESF/14-BM-A55-0007/19</award-id>
      </award-group>
      <award-group>
        <funding-source>Ministerium für Bildung, Wissenschaft und Kultur Mecklenburg-Vorpommern</funding-source>
        <award-id>ESF/14-BM-A55-0007/19</award-id>
      </award-group>
      <funding-statement>This project was mainly funded by the Swiss National Science Foundation via the NCCR MUST. The following further funding is acknowledged: Swiss National Science Foundation grant 200021E_193642; Deutsche Forschungsgemeinschaft via SFB 652 and SFB 1477 (ID: 441234705), MO 719/13-1 and MO 719/14-2; Heisenberg-Grant (ID: 436382461) via SPP1840 (ID: 281272685); Bundesministerium für Bildung und Forschung (ID: 05K16HRB); the European Social Fund and the Ministry of Education, Science and Culture of Mecklenburg-Vorpommern via project NEISS (ID: ESF/14-BM-A55-0007/19).</funding-statement>
    </funding-group>
    <counts>
      <page-count count="15"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec sec-type="introduction" id="sec1">
    <label>1.</label>
    <title>Introduction</title>
    <p>Coherent diffraction imaging (CDI) aims to retrieve an isolated sample’s spatial information from the far-field amplitude of a highly coherent and monochromatic light beam that has scattered off the sample (Chapman &amp; Nugent, 2010<xref rid="bb13" ref-type="bibr"> ▸</xref>; Miao, Sandberg <italic toggle="yes">et al.</italic>, 2011<xref rid="bb38" ref-type="bibr"> ▸</xref>; Seibert <italic toggle="yes">et al.</italic>, 2011<xref rid="bb50" ref-type="bibr"> ▸</xref>). The great advantage of CDI is its lensless setup, making it suitable for those wavelength regions where lenses are hard or even impossible to manufacture. Thus, the spatial resolution in CDI is, in principle, only dependent on the radiation wavelength and on the maximum scattering angle at which the scattering signal can be recorded on a detector.</p>
    <p>For small-angle scattering (SAS) conditions (Guinier <italic toggle="yes">et al.</italic>, 1955<xref rid="bb21" ref-type="bibr"> ▸</xref>), and assuming the first Born approximation (Born, 1926<xref rid="bb9" ref-type="bibr"> ▸</xref>), the 2D scattering image can be efficiently computed by calculating the squared absolute value of a Fourier transform (FT) of the imaged sample’s 2D electron-density projection. This relationship between the sample and the diffraction within the SAS regime is the basis of the original CDI approach, experimentally demonstrated for the first time in 1999 (Miao <italic toggle="yes">et al.</italic>, 1999<xref rid="bb35" ref-type="bibr"> ▸</xref>), where iterative phase retrieval algorithms are employed to reconstruct the scattered field in the detector’s plane in amplitude and phase (Fienup, 1982<xref rid="bb19" ref-type="bibr"> ▸</xref>; Marchesini, 2007<xref rid="bb34" ref-type="bibr"> ▸</xref>). Upon successful phase recovery, the real-space 2D projection of the sample can be directly computed (Loh <italic toggle="yes">et al.</italic>, 2012<xref rid="bb31" ref-type="bibr"> ▸</xref>; Seibert <italic toggle="yes">et al.</italic>, 2011<xref rid="bb50" ref-type="bibr"> ▸</xref>; Pedersoli <italic toggle="yes">et al.</italic>, 2013<xref rid="bb42" ref-type="bibr"> ▸</xref>).</p>
    <p>It is still possible, under some specific circumstances, to perform 3D imaging in the SAS scheme, but the single-shot constraint has to be released. The most obvious way is based on the tomographic approach, where several diffraction patterns of the same sample are acquired at different orientations, giving a sufficient amount of 3D information in the reciprocal space to perform a 3D phase retrieval process via suitable algorithms (Miao <italic toggle="yes">et al.</italic>, 2006<xref rid="bb37" ref-type="bibr"> ▸</xref>; Jiang <italic toggle="yes">et al.</italic>, 2010<xref rid="bb27" ref-type="bibr"> ▸</xref>; Lundholm <italic toggle="yes">et al.</italic>, 2018<xref rid="bb33" ref-type="bibr"> ▸</xref>; Loh <italic toggle="yes">et al.</italic>, 2010<xref rid="bb30" ref-type="bibr"> ▸</xref>; Loh &amp; Elser, 2009<xref rid="bb32" ref-type="bibr"> ▸</xref>; Ekeberg <italic toggle="yes">et al.</italic>, 2015<xref rid="bb17" ref-type="bibr"> ▸</xref>). In this respect, the recent advent of X-ray free-electron laser (XFEL) sources (Feldhaus <italic toggle="yes">et al.</italic>, 2005<xref rid="bb18" ref-type="bibr"> ▸</xref>; Harmand <italic toggle="yes">et al.</italic>, 2013<xref rid="bb25" ref-type="bibr"> ▸</xref>; Barty <italic toggle="yes">et al.</italic>, 2013<xref rid="bb5" ref-type="bibr"> ▸</xref>; Chapman <italic toggle="yes">et al.</italic>, 2006<xref rid="bb11" ref-type="bibr"> ▸</xref>) has opened new routes for characterizing objects that have thus far remained elusive. XFELs offer ultra-short and ultra-high-intensity pulses, enabling a meaningful scattering signal to be recorded before the object is destroyed, a scheme that has therefore been termed ‘diffraction before destruction’ (Chapman <italic toggle="yes">et al.</italic>, 2014<xref rid="bb12" ref-type="bibr"> ▸</xref>). As a result, however, each sample can only provide a single diffraction pattern before being destroyed by the laser radiation. Thus, the 3D tomographic approach is viable only if many replicas of the same sample are available (Ekeberg <italic toggle="yes">et al.</italic>, 2015<xref rid="bb17" ref-type="bibr"> ▸</xref>). Although additional shape information or symmetry constraints on the sample can in principle allow for shape retrieval from a single SAS diffraction image (Xu <italic toggle="yes">et al.</italic>, 2014<xref rid="bb55" ref-type="bibr"> ▸</xref>), a full 3D reconstruction of non-replicable samples with unconstrained shapes is impossible to perform with SAS experiments. The requirement for additional constraints for reconstructing 3D information from a SAS experiment is a result of the fact that the magnitude of the maximum momentum transfer <inline-formula><inline-graphic xlink:href="j-55-01232-efi1.jpg"/></inline-formula> acquired by the scattering detector is much smaller than the radiation momentum <inline-formula><inline-graphic xlink:href="j-55-01232-efi2.jpg"/></inline-formula>. Thus, as intuitively presented by Barke <italic toggle="yes">et al.</italic> (2015<xref rid="bb3" ref-type="bibr"> ▸</xref>), the acquired momentum transfers lie essentially in the plane orthogonal to the beam propagation direction [see also Fig. 3(<italic toggle="yes">b</italic>) in Section 2<xref rid="sec2" ref-type="sec"/>], and the sample’s depth information is, in practice, completely lost.</p>
    <p>The limitation to 2D-only information can be overcome in the wide-angle scattering regime (WAS), where the 2D diffraction patterns contain 3D information. In fact, because of the comparable magnitudes of the momentum transfer <inline-formula><inline-graphic xlink:href="j-55-01232-efi3.jpg"/></inline-formula> and the wavevector <inline-formula><inline-graphic xlink:href="j-55-01232-efi4.jpg"/></inline-formula>, the component of the momentum transfer parallel to the beam propagation direction, <inline-formula><inline-graphic xlink:href="j-55-01232-efi5.jpg"/></inline-formula>, which carries depth information, is non-negligible [see Fig. 3(<italic toggle="yes">a</italic>) in Section 2<xref rid="sec2" ref-type="sec"/>]. As shown by Barke <italic toggle="yes">et al.</italic> (2015<xref rid="bb3" ref-type="bibr"> ▸</xref>), in this scenario different parts of the scattering pattern carry details about different 2D projections of the density – establishing the possibility of extracting partial tomographic information from a single image. The primary shortcoming of experiments in the WAS regime is that the scattering patterns cannot be converted into shape information in such a straightforward way as in the SAS regime, where the field represents the 2D FT of the density projection. Some attempts to numerically invert single WAS patterns have been made (Raines <italic toggle="yes">et al.</italic>, 2010<xref rid="bb44" ref-type="bibr"> ▸</xref>): however, the stability and reliability of such approaches are still debated within the community (Wang <italic toggle="yes">et al.</italic>, 2011<xref rid="bb54" ref-type="bibr"> ▸</xref>; Miao, Chen <italic toggle="yes">et al.</italic>, 2011<xref rid="bb36" ref-type="bibr"> ▸</xref>).</p>
    <p>Therefore, the forward-fitting approach, where a measured scattering pattern is compared with scattering simulations for appropriately parameterized sample shapes, is currently the most general and practicable approach to invert CDI data taken under WAS conditions. To perform such a forward-fitting analysis, a model that describes the sample’s morphology depending on a set of free parameters has to be selected. Then, those parameters’ values are varied using stochastic and/or deterministic optimization algorithms to minimize the discrepancy between the experimental diffraction data and the scattering simulation. In this procedure, the simulation of scattering patterns is the most challenging and computationally expensive task. In fact, optimization routines usually require thousands of optimization steps. For each step, the gradient of the optimization target has to be computed, and this involves a number of simulations that increases with the number of free parameters. Depending on the complexity of the sample’s model, this translates into a number of 10<sup>4</sup> to 10<sup>6</sup> simulations for the analysis of a single diffraction pattern, highlighting the urgent need for fast forward-simulation approaches.</p>
    <p>If the simulation runtime is uncritical, <italic toggle="yes">e.g.</italic> for benchmarking purposes, or for cases with high symmetry, several approaches are available that enable computation of the exact solution to the scattering problem. The first method is based on the analytical solution for sufficiently simple geometries, such as the Mie solution to the Maxwell equations (Hahn, 2009<xref rid="bb22" ref-type="bibr"> ▸</xref>), with which the scattered far-field can be calculated as a series expansion into vector wave harmonics up to arbitrary accuracy. However, such analytically motivated treatment is only applicable to simple sample shapes, like a sphere (Bohren &amp; Huffman, 2008<xref rid="bb8" ref-type="bibr"> ▸</xref>) or a coated sphere (Aden &amp; Kerker, 1951<xref rid="bb1" ref-type="bibr"> ▸</xref>). A second option is to compute the scattering by solving Maxwell’s equations numerically, <italic toggle="yes">e.g.</italic> via the finite-difference time-domain (FDTD) method (Taflove, 1980<xref rid="bb52" ref-type="bibr"> ▸</xref>; Varin <italic toggle="yes">et al.</italic>, 2012<xref rid="bb53" ref-type="bibr"> ▸</xref>) or using Green’s function based approaches such as the discrete dipole approximation (DDA) (Purcell &amp; Pennypacker, 1973<xref rid="bb43" ref-type="bibr"> ▸</xref>; Sander <italic toggle="yes">et al.</italic>, 2015<xref rid="bb49" ref-type="bibr"> ▸</xref>). These numerical methods allow simulations of light–matter interaction with no restrictions on the sample’s shape. However, FDTD or DDA calculations of the scattered electric field are computationally cost intensive. The whole computational domain has to be represented on a grid at a sufficiently fine scale, and the temporal evolution of the field (FDTD case) or the iterative solution for the field’s evolution (DDA case) have to be calculated. The demanding computational conditions render the methods aiming at the unrestricted full solution of Maxwell’s equations impractical for the use case of simulating more than a few diffraction images. In particular, their time to solution is, even in the best cases, of the order of tens of seconds, such that a full imaging routine based on forward fitting would require from days to months to be completed for a single diffraction pattern. Therefore, suitable approximate methods are highly attractive for data analysis of wide-angle CDI. In this paper we present the Scatman, a fast, flexible and intuitive approximate simulation suite capable of providing scattering simulations three to five orders of magnitude faster than exact methods.</p>
    <p>The Scatman’s core was originally conceived by Barke <italic toggle="yes">et al.</italic> (2015<xref rid="bb3" ref-type="bibr"> ▸</xref>) and computes wide-angle coherent scattering images of isolated samples. It has already proven successful for data analysis of WAS experiments (Barke <italic toggle="yes">et al.</italic>, 2015<xref rid="bb3" ref-type="bibr"> ▸</xref>; Rupp <italic toggle="yes">et al.</italic>, 2017<xref rid="bb48" ref-type="bibr"> ▸</xref>; Langbehn <italic toggle="yes">et al.</italic>, 2018<xref rid="bb29" ref-type="bibr"> ▸</xref>; Zimmermann <italic toggle="yes">et al.</italic>, 2019<xref rid="bb56" ref-type="bibr"> ▸</xref>): examples ranging from silver nanocrystals to spinning superfluid helium droplets are depicted in Fig. 1<xref rid="fig1" ref-type="fig"> ▸</xref>. However, a formal presentation of the approach and a comprehensive evaluation of its performance have never been disclosed. This paper aims to fill this gap, by presenting the Scatman approach in a refined, generalized and concise form, accompanied by the public release of its software implementation, <italic toggle="yes">PyScatman</italic>.</p>
    <p>The two following sections of this paper are dedicated to the analytical framework and motivation of the approach, based on the multi-slice Fourier transform (MSFT) technique (Cowley &amp; Moodie, 1957<xref rid="bb16" ref-type="bibr"> ▸</xref>; Self <italic toggle="yes">et al.</italic>, 1983<xref rid="bb51" ref-type="bibr"> ▸</xref>; Reinhard <italic toggle="yes">et al.</italic>, 1997<xref rid="bb45" ref-type="bibr"> ▸</xref>; Hare &amp; Morrison, 1994<xref rid="bb24" ref-type="bibr"> ▸</xref>; Barke <italic toggle="yes">et al.</italic>, 2015<xref rid="bb3" ref-type="bibr"> ▸</xref>), and its translation into a numerical form. Section 4<xref rid="sec4" ref-type="sec"/> focuses on the comparison between the simulation results of the Scatman and exact, analytical calculations based on Mie theory for a spherical sample. It provides insight into the region of applicability of the Scatman, whose results can be quantitatively close to the exact solution or just qualitatively usable, depending on the sample’s properties. The final sections, Sections 5<xref rid="sec5" ref-type="sec"/> and 6<xref rid="sec6" ref-type="sec"/>, present our Scatman reference implementation, called <italic toggle="yes">PyScatman</italic>, published along with this paper as open-source software. <italic toggle="yes">PyScatman</italic> is released as a Python module that provides an easy interface to the user and incorporates state-of-the-art programming techniques to yield a high computational efficiency.</p>
  </sec>
  <sec id="sec2">
    <label>2.</label>
    <title>The Scatman routine</title>
    <p>The Scatman is based on the MSFT approach, originally developed for electron scattering (Cowley &amp; Moodie, 1957<xref rid="bb16" ref-type="bibr"> ▸</xref>; Self <italic toggle="yes">et al.</italic>, 1983<xref rid="bb51" ref-type="bibr"> ▸</xref>; Reinhard <italic toggle="yes">et al.</italic>, 1997<xref rid="bb45" ref-type="bibr"> ▸</xref>). The MSFT routine has already been applied in X-ray diffraction experiments for fixed targets (Hare &amp; Morrison, 1994<xref rid="bb24" ref-type="bibr"> ▸</xref>), as well as for recovering the topology of individual silver and helium nanoparticles in free flight (Barke <italic toggle="yes">et al.</italic>, 2015<xref rid="bb3" ref-type="bibr"> ▸</xref>; Langbehn <italic toggle="yes">et al.</italic>, 2018<xref rid="bb29" ref-type="bibr"> ▸</xref>). A schematic overview of the MSFT method is shown in Fig. 2<xref rid="fig2" ref-type="fig"> ▸</xref>. Roughly speaking, the simulation is based on the partitioning of the spatial domain into slices [Figs. 2<xref rid="fig2" ref-type="fig"> ▸</xref>(<italic toggle="yes">a</italic>) and 2<xref rid="fig2" ref-type="fig"> ▸</xref>(<italic toggle="yes">b</italic>)]. The scattering contribution from each slice is computed independently via an FT operation [Fig. 2<xref rid="fig2" ref-type="fig"> ▸</xref>(<italic toggle="yes">c</italic>)] and then summed with an appropriate phase correction to compose the final scattering pattern [Fig. 2<xref rid="fig2" ref-type="fig"> ▸</xref>(<italic toggle="yes">d</italic>)]. This section briefly revisits the mathematical derivation of the approach, particularly focusing on how the effects of the sample’s refractive index are effectively incorporated into the Scatman’s simulation.</p>
    <p>For deriving the method, we start from the well known Born approximation (Born, 1926<xref rid="bb9" ref-type="bibr"> ▸</xref>), which defines the scattered field <inline-formula><inline-graphic xlink:href="j-55-01232-efi6.jpg"/></inline-formula> in the far-field condition as<disp-formula id="fd1"><graphic xlink:href="j-55-01232-efd1.jpg" position="float"/></disp-formula>where <inline-formula><inline-graphic xlink:href="j-55-01232-efi7.jpg"/></inline-formula> defines the scattering strength in space and <inline-formula><inline-graphic xlink:href="j-55-01232-efi3.jpg"/></inline-formula> is the momentum transfer, schematically shown in Fig. 3<xref rid="fig3" ref-type="fig"> ▸</xref>. The integral in equation (1<xref rid="fd1" ref-type="disp-formula"/>), which is in practice a 3D FT of the scattering strength <inline-formula><inline-graphic xlink:href="j-55-01232-efi7.jpg"/></inline-formula>, can be rewritten in the following form: <disp-formula id="fd2"><graphic xlink:href="j-55-01232-efd2.jpg" position="float"/></disp-formula>The first step in equation (2<xref rid="fd2" ref-type="disp-formula"/>) is the explicit formulation of equation (1<xref rid="fd1" ref-type="disp-formula"/>) in Cartesian coordinates, where the coordinate system is chosen such that the <italic toggle="yes">z</italic> axis is parallel to the beam propagation direction; from now on, this axis will also be referred to as the axial direction. The second step of the equation is the approximation of the integral along <bold>z</bold> with a discrete summation over the slices with integer index <italic toggle="yes">s</italic>; this approximation holds given the condition that <inline-formula><inline-graphic xlink:href="j-55-01232-efi10.jpg"/></inline-formula>. As depicted in Fig. 2<xref rid="fig2" ref-type="fig"> ▸</xref>(<italic toggle="yes">b</italic>), this operation represents a partitioning of the spatial domain into slices of size <inline-formula><inline-graphic xlink:href="j-55-01232-efi11.jpg"/></inline-formula> along the axial direction, this being the core of the MSFT approach. In the last step, the integral over the <italic toggle="yes">x</italic> and <italic toggle="yes">y</italic> directions is rewritten as a 2D FT. Moreover, the integral of the scattering strength ρ over the slice <italic toggle="yes">s</italic> in the axial direction is defined as <inline-formula><inline-graphic xlink:href="j-55-01232-efi12.jpg"/></inline-formula>.</p>
    <p>As long as only monochromatic radiation with momentum <inline-formula><inline-graphic xlink:href="j-55-01232-efi2.jpg"/></inline-formula> is considered and the scattering event is assumed to be completely elastic, it is convenient to rewrite the axial component of the momentum transfer <inline-formula><inline-graphic xlink:href="j-55-01232-efi14.jpg"/></inline-formula> as a function of <inline-formula><inline-graphic xlink:href="j-55-01232-efi15.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="j-55-01232-efi16.jpg"/></inline-formula>: <disp-formula id="fd3"><graphic xlink:href="j-55-01232-efd3.jpg" position="float"/></disp-formula>where θ is the scattering angle. Equation (3<xref rid="fd3" ref-type="disp-formula"/>), which can be intuitively derived from Fig. 3<xref rid="fig3" ref-type="fig"> ▸</xref>(<italic toggle="yes">a</italic>) through geometrical considerations, enables equation (2<xref rid="fd2" ref-type="disp-formula"/>) to be rewritten as <disp-formula id="fd4"><graphic xlink:href="j-55-01232-efd4.jpg" position="float"/></disp-formula>The scattered field <inline-formula><inline-graphic xlink:href="j-55-01232-efi17.jpg"/></inline-formula> in equation (4<xref rid="fd4" ref-type="disp-formula"/>) is the sum of the scattering contributions from all <italic toggle="yes">s</italic> slices, with a phase factor that depends on the scattering angle and on the slice’s position on the <italic toggle="yes">z</italic> axis.</p>
    <p>We continue the derivation of the method by defining the scattering strength <inline-formula><inline-graphic xlink:href="j-55-01232-efi7.jpg"/></inline-formula>. In particular, at high photon energies, the strength of the scattering is related to the number of electronic charges that contribute to the scattering. These are described by the dielectric polarization density <inline-formula><inline-graphic xlink:href="j-55-01232-efi19.jpg"/></inline-formula>, defined as<disp-formula id="fd5"><graphic xlink:href="j-55-01232-efd5.jpg" position="float"/></disp-formula>where <inline-formula><inline-graphic xlink:href="j-55-01232-efi20.jpg"/></inline-formula> is the electric field and <inline-formula><inline-graphic xlink:href="j-55-01232-efi21.jpg"/></inline-formula> is the electric susceptibility. The latter has been rewritten as a function of the complex refractive index <italic toggle="yes">n</italic>, exploiting its relationship with the relative permittivity <inline-formula><inline-graphic xlink:href="j-55-01232-efi22.jpg"/></inline-formula>, which is equivalent to the squared refractive index for non-magnetic materials, <italic toggle="yes">i.e.</italic>
<inline-formula><inline-graphic xlink:href="j-55-01232-efi23.jpg"/></inline-formula>. In this way, any magnetic effect is neglected, for example in the interaction of magnetic materials with polarized light. Still, light polarization plays a role also for dielectric materials. However, the effects of linearly polarized light become relevant only for scattering angles above 30° (Bohren &amp; Huffman, 2008<xref rid="bb8" ref-type="bibr"> ▸</xref>), and thus above the usual range of wide-angle CDI experiments (Barke <italic toggle="yes">et al.</italic>, 2015<xref rid="bb3" ref-type="bibr"> ▸</xref>; Langbehn <italic toggle="yes">et al.</italic>, 2018<xref rid="bb29" ref-type="bibr"> ▸</xref>). The current version of the Scatman assumes non-polarized radiation, but its inclusion in the routine is under study.</p>
    <p>The Born approximation in equation (1<xref rid="fd1" ref-type="disp-formula"/>) assumes that the incoming electric field is not affected by the presence of the sample, and considers a planar wave with constant amplitude, momentum and phase along the full path. In this view, the scattering strength defined in equation (1<xref rid="fd1" ref-type="disp-formula"/>) is proportional to the electric susceptibility, <italic toggle="yes">i.e.</italic>
<inline-formula><inline-graphic xlink:href="j-55-01232-efi24.jpg"/></inline-formula>, allowing the definition of the scattering strength for a slice in equation (4<xref rid="fd4" ref-type="disp-formula"/>) as <inline-formula><inline-graphic xlink:href="j-55-01232-efi25.jpg"/></inline-formula>, where <inline-formula><inline-graphic xlink:href="j-55-01232-efi26.jpg"/></inline-formula> are the optical properties averaged over the slice thickness. However, especially when considering WAS, the refractive index of the sample will modify the field. It is possible to partially take into account this effect by defining the scattering strength for a given slice <italic toggle="yes">s</italic> in the following form: <disp-formula id="fd6"><graphic xlink:href="j-55-01232-efd6.jpg" position="float"/></disp-formula>where <inline-formula><inline-graphic xlink:href="j-55-01232-efi27.jpg"/></inline-formula> is the field actually impinging on slice <italic toggle="yes">s</italic> of the sample, while <inline-formula><inline-graphic xlink:href="j-55-01232-efi28.jpg"/></inline-formula> is the field as it would travel unaffected by the presence of the sample [the field taken into account by the Born approximation in equation (1<xref rid="fd1" ref-type="disp-formula"/>)]. The ratio between the two fields can be interpreted as a correction applied to the unmodified field assumed in the first Born approximation, making <inline-formula><inline-graphic xlink:href="j-55-01232-efi29.jpg"/></inline-formula> in equation (6<xref rid="fd6" ref-type="disp-formula"/>) an effective scattering strength. This correction factor allows us to approximately include the effects of the sample’s optical properties on the electric field incoming to the slice, while the scattered field is still the unaffected one considered in the Born approximation.</p>
    <p>For a more intuitive presentation of how the incoming field <inline-formula><inline-graphic xlink:href="j-55-01232-efi27.jpg"/></inline-formula> impinging on the slice <italic toggle="yes">s</italic> is treated in the Scatman approach, it is now convenient to rewrite the sample’s refractive index <italic toggle="yes">n</italic> in the following form: <disp-formula id="fd7"><graphic xlink:href="j-55-01232-efd7.jpg" position="float"/></disp-formula>Here, δ defines the deviation of the real part of <italic toggle="yes">n</italic> from unity, and is responsible for the change of the light’s phase velocity in the sample, causing also the phenomena of refraction and reflection. On the other side, β, often called the extinction or absorption coefficient, defines how much the radiation is damped when traveling in the sample (Lambert, 1760<xref rid="bb28" ref-type="bibr"> ▸</xref>; Beer, 1852<xref rid="bb6" ref-type="bibr"> ▸</xref>). This notation for the refractive index is convenient in the X-ray regime, where <inline-formula><inline-graphic xlink:href="j-55-01232-efi31.jpg"/></inline-formula> is very close to unity, and will be extensively used in this paper.</p>
    <p>An exact description of how the field distribution in the sample is affected by δ and β, regarding the field’s amplitude, phase and propagation direction, is highly demanding and essentially requires again the full solution of the scattering problem. However, in the limit of sufficiently small δ and β, it is possible to assume the ‘projection approximation’ (Paganin, 2006<xref rid="bb41" ref-type="bibr"> ▸</xref>), reducing the expression for the propagation of the electric field <inline-formula><inline-graphic xlink:href="j-55-01232-efi32.jpg"/></inline-formula> at slice <italic toggle="yes">s</italic> to the following form: <disp-formula id="fd8"><graphic xlink:href="j-55-01232-efd8.jpg" position="float"/></disp-formula>where <inline-formula><inline-graphic xlink:href="j-55-01232-efi33.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="j-55-01232-efi34.jpg"/></inline-formula> are the values of δ and β averaged over the slice thickness <inline-formula><inline-graphic xlink:href="j-55-01232-efi11.jpg"/></inline-formula>, and <inline-formula><inline-graphic xlink:href="j-55-01232-efi36.jpg"/></inline-formula> is the radiation wavenumber. This approximation locally assumes an axial propagation through a homogeneous medium. Equation (8<xref rid="fd8" ref-type="disp-formula"/>) recursively describes how the field impinging on slice <italic toggle="yes">s</italic> is modified by taking into account the effects of all the preceding slices. A first strong assumption made by equation (8<xref rid="fd8" ref-type="disp-formula"/>) is that the optical properties must vary slowly. In particular, the variation of δ has to be sufficiently small that one can neglect changes in the field propagation direction due to refraction and reflection, <italic toggle="yes">i.e.</italic> the electric field always propagates in the axial direction, even within the sample. Moreover, δ and β are assumed to be sufficiently small that one can neglect their influence on the radiation scattered by the preceding slices, <italic toggle="yes">i.e.</italic> secondary scattering is completely neglected (for the discussion of the resulting limitations, see Section 4<xref rid="sec4" ref-type="sec"/>). In practice, at a given slice <italic toggle="yes">s</italic>, <inline-formula><inline-graphic xlink:href="j-55-01232-efi37.jpg"/></inline-formula> introduces a phase shift in the field, while <inline-formula><inline-graphic xlink:href="j-55-01232-efi38.jpg"/></inline-formula> exponentially damps the field magnitude.</p>
    <p>Finally, the scattering strength [equation (6<xref rid="fd6" ref-type="disp-formula"/>)] has to be inserted into equation (4<xref rid="fd4" ref-type="disp-formula"/>). The electric field in the denominator of equation (6<xref rid="fd6" ref-type="disp-formula"/>), which is independent of <inline-formula><inline-graphic xlink:href="j-55-01232-efi15.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="j-55-01232-efi16.jpg"/></inline-formula>, can be pulled out of the FT simplifying the global phase pre-factor of the slice. This operation, combined with the formula for the approximated field propagation in equation (8<xref rid="fd8" ref-type="disp-formula"/>), yields the main equation of the Scatman approach: <disp-formula id="fd9"><graphic xlink:href="j-55-01232-efd9.jpg" position="float"/></disp-formula>Here the definition of the scattered field is based on the spatial distribution of the sample’s optical properties. Although equation (9<xref rid="fd9" ref-type="disp-formula"/>) predicts the scattered electric field, only its squared amplitude <inline-formula><inline-graphic xlink:href="j-55-01232-efi41.jpg"/></inline-formula> = <inline-formula><inline-graphic xlink:href="j-55-01232-efi42.jpg"/></inline-formula> is physically measured in CDI experiments (Gaffney &amp; Chapman, 2007<xref rid="bb20" ref-type="bibr"> ▸</xref>; Chapman &amp; Nugent, 2010<xref rid="bb13" ref-type="bibr"> ▸</xref>; Seibert <italic toggle="yes">et al.</italic>, 2011<xref rid="bb50" ref-type="bibr"> ▸</xref>; Ekeberg <italic toggle="yes">et al.</italic>, 2015<xref rid="bb17" ref-type="bibr"> ▸</xref>) and should be taken into account for actual simulations.</p>
  </sec>
  <sec id="sec3">
    <label>3.</label>
    <title>Numerical implementation</title>
    <p>In this section the concrete numerical implementation of the Scatman is provided. A flowchart of the program is shown in Fig. 4<xref rid="fig4" ref-type="fig"> ▸</xref>, and its blocks are described in the following paragraphs.</p>
    <sec id="sec3.1">
      <label>3.1.</label>
      <title>Setting up the virtual experiment</title>
      <p><italic toggle="yes">Read-in the user-defined parameters (Blocks 1 + 2)</italic>. At the beginning of the program, the user-defined input parameters are read in. These include experimental details (Block 1) like the irradiation wavelength λ, the maximal scattering angle <inline-formula><inline-graphic xlink:href="j-55-01232-efi43.jpg"/></inline-formula> and the detector resolution <italic toggle="yes">N</italic> in pixels. <italic toggle="yes">N</italic> = 1000 will result in a virtual detector of size 1000 × 1000 pixels. The virtual detector is centered on-axis in the <bold>z</bold> direction, and every virtual pixel has the same angular cross section. Furthermore, the target is defined via a spatially dependent refractive index (δ and β) and the concrete dimensions of the target (<inline-formula><inline-graphic xlink:href="j-55-01232-efi44.jpg"/></inline-formula>, <inline-formula><inline-graphic xlink:href="j-55-01232-efi45.jpg"/></inline-formula>, <inline-formula><inline-graphic xlink:href="j-55-01232-efi46.jpg"/></inline-formula>), as listed in Block 2. With this set of parameters the experimental setup is uniquely defined.</p>
      <p><italic toggle="yes">Initialization (Blocks 3 + 4)</italic>. Before entering the program’s main loop, additional parameters are derived from the user-defined parameters, and the relevant arrays are initialized.</p>
      <p>Here, the maximal components of the scattering vector on the <italic toggle="yes">xy</italic> plane (also called the detector plane) and in the axial direction, <inline-formula><inline-graphic xlink:href="j-55-01232-efi47.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="j-55-01232-efi48.jpg"/></inline-formula>, are calculated. As the FT in equation (9<xref rid="fd9" ref-type="disp-formula"/>) is numerically computed in the discrete form, <inline-formula><inline-graphic xlink:href="j-55-01232-efi47.jpg"/></inline-formula> is necessary to assign a corresponding size d<italic toggle="yes">x</italic> and d<italic toggle="yes">y</italic> to the slices’ pixels in real space, and consequently its spatial extension in pixels, <inline-formula><inline-graphic xlink:href="j-55-01232-efi50.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="j-55-01232-efi51.jpg"/></inline-formula>. The same applies to the axial direction, where <inline-formula><inline-graphic xlink:href="j-55-01232-efi14.jpg"/></inline-formula> defines the slice thickness <inline-formula><inline-graphic xlink:href="j-55-01232-efi11.jpg"/></inline-formula>, and thus the total number of slices <italic toggle="yes">S</italic>.</p>
      <p>Two complex numerical arrays are then initialized to hold the 2D wavefronts of the outgoing and the incoming wavefields (Block 4). While the outgoing wavefield is initialized to zero, the incoming field is initialized to 1, which is equivalent to a plane wavefront. The assumption of a perfectly coherent incoming beam, in both space and time, is strictly enforced from the mathematical foundations of the Scatman approach. However, variations in amplitude and phase are, in principle, not forbidden, and their inclusion in future releases of <italic toggle="yes">PyScatman</italic> are currently under study. The desired diffraction image can now be iteratively computed within the program’s main loop.</p>
    </sec>
    <sec id="sec3.2">
      <label>3.2.</label>
      <title>The main loop</title>
      <p>The main loop is the core of the program. Every iteration within it calculates the scattering contribution of one slice of the sample. Each slice’s input field is the original plane wave shaped by the optical properties of the sample up to the slice of interest. The scattered radiation is then corrected with a proper phase factor.</p>
      <p><italic toggle="yes">Calculating the local scattered field (Blocks 5 + 6 + 7)</italic>. The first step required to compute the slice’s scattered field is to render the slice’s scattering potential (Block 5) through the computation of the sample’s optical properties at the proper spatial coordinates. Calculating the slice’s scattering contribution is, then, the subject of Blocks 6 and 7, where both multiplicative terms are treated in their own blocks. First, the FT of the product between the incoming field and the slice yields the far-field scattering contribution of the latter (Block 6). Then, the proper phase correction is applied (Block 7). Note that the scattering vector’s components are derived in pixel units from their off-axis distance relative to the <italic toggle="yes">z</italic> axis. The final wavefield is then stored in the complex array <monospace>SLICE<sub>f</sub>
<sub>ield</sub>
</monospace>.</p>
      <p><italic toggle="yes">Updating the total scattered field and computing the incident field for the next slice (Blocks 8 + 9)</italic>. The total scattered field is updated in Block 8 by adding the scattering contribution of slice <italic toggle="yes">s</italic> to those of all the previous slices.</p>
      <p>Then, in Block 9, the incoming field for the next slice is prepared by propagating the field through slice <italic toggle="yes">s</italic> along the <italic toggle="yes">z</italic> axis, following the definition in equation (8<xref rid="fd8" ref-type="disp-formula"/>). The decoupling of the total scattered field (Block 8) and the incoming field for any subsequent slice (Block 9) enforces a central assumption within the Scatman: multiple sequential scattering events are not allowed to occur.</p>
    </sec>
    <sec id="sec3.3">
      <label>3.3.</label>
      <title>Preparing the output of the Scatman</title>
      <p>After the main loop iterates over all slices in the virtual medium, <italic toggle="yes">i.e.</italic> when Block 10 reaches the loop break condition, the Scatman’s final piece of code prepares the output to match the experimental conditions. In the simplest case, this is just computing the absolute squared value of all slices’ total scattered field (Block 11). However, it can include the modeling of detector artifacts, stray light during the experiment or any other experimental effect that may affect a real scattering pattern.</p>
    </sec>
  </sec>
  <sec id="sec4">
    <label>4.</label>
    <title>Evaluation of the Scatman using exact simulations</title>
    <p>As highlighted in Section 1<xref rid="sec1" ref-type="sec"/>, the Scatman program is an alternative to the computationally intensive, but versatile, numerical simulations such as FDTD or DDA methods, and to Mie’s fast, but topologically restrictive, analytical solutions to Maxwell’s equations. However, as underlined in Section 2<xref rid="sec2" ref-type="sec"/>, there is a trade-off between the Scatman’s capability of being both fast and versatile and the accuracy of the simulation results, which depends heavily on the choice of the simulation parameters.</p>
    <p>During the mathematical formulation of the approach in Section 2<xref rid="sec2" ref-type="sec"/>, some approximations were involved. Most of them imply the assumption that the optical properties of the sample of interest only differ slightly from those of the surrounding medium (assumed here to be a vacuum). Therefore, the Scatman approach is unable to quantitatively reproduce features of the scattering images when relatively large variations of the refractive index are present, as usually happens, for example, close to electronic resonances or for materials with a high scattering cross section. Still, probing how small the variation of the refractive index has to be is of great interest to the user, to decide whether it is preferable to rely on alternative and more accurate methods for data analysis. This section provides an overview of the capabilities and limitations of the Scatman program, where we compare the simulation results with analytical diffraction patterns obtained via Mie theory. The comparison is made by considering a spherical sample to disentangle as much as possible the effects of the optical properties from those produced by morphological features. For an overview on how the method used for the Scatman compares with exact methods in the case of complex sample architectures, readers are referred to Barke <italic toggle="yes">et al.</italic> (2015<xref rid="bb3" ref-type="bibr"> ▸</xref>) and Langbehn <italic toggle="yes">et al.</italic> (2018<xref rid="bb29" ref-type="bibr"> ▸</xref>).</p>
    <p>Fig. 5<xref rid="fig5" ref-type="fig"> ▸</xref> shows the results for 28 scattering simulations for a spherical target, with a different pair of δ and β values each. The figure is split into two rows that show the radial profiles and the diffraction patterns. Both rows share a common legend, which is placed in between: solid lines represent the Scatman result, dotted lines the Mie solution, and the colors indicate different β values. The top row shows seven subplots (<italic toggle="yes">a</italic>) to (<italic toggle="yes">g</italic>), where each subplot shows the scattering angle dependence of the scattered light from a spherical particle for a fixed value of δ and four values of β. The choice to limit the scattering angle to a range between 10 and 30° corresponds to typical experimental scenarios for CDI experiments within the WAS regime (Rupp <italic toggle="yes">et al.</italic>, 2017<xref rid="bb48" ref-type="bibr"> ▸</xref>; Langbehn <italic toggle="yes">et al.</italic>, 2018<xref rid="bb29" ref-type="bibr"> ▸</xref>; Barke <italic toggle="yes">et al.</italic>, 2015<xref rid="bb3" ref-type="bibr"> ▸</xref>). In every subplot and for every δ and β pair, two calculations are shown: the solid line is the approximation of the Scatman program and the dotted line is the exact Mie solution. The radius of the spherical target used for the simulations is fixed at 7λ, which enables one to see the signature of different optical properties, and to distinguish the maxima and minima of the interference as well. For a fair comparison between the two simulation methods, a normalization factor has to be defined: in this case, both Mie and Scatman profiles were normalized on their integral value computed between 10 and 30°.</p>
    <p>In the particular case of a spherical target, assuming non-polarized light, the simulated diffraction image is identical in all scattering directions. This symmetry property is exploited in the bottom row of Fig. 5<xref rid="fig5" ref-type="fig"> ▸</xref>. The seven subplots from the top row are translated into seven diffraction images (<italic toggle="yes">h</italic>) to (<italic toggle="yes">n</italic>), where every diffraction image is partitioned into eight segments. These eight segments correspond to the eight line plots provided in the associated subplot from the top row. Every δ/β pair combination takes up a quarter of every diffraction image, where the solid and dotted lines surrounding the diffraction image correspond to the approximation of the Scatman program (solid line) and the exact Mie solution (dotted line).</p>
    <p>Therefore, the bottom row does not add new data to the figure but provides insight into the appearance of the scattering image. Furthermore, it enables a qualitative assertion on the diffraction images, which is often sufficient to deduce the sample’s underlying topological properties. (Rupp <italic toggle="yes">et al.</italic>, 2017<xref rid="bb48" ref-type="bibr"> ▸</xref>; Langbehn <italic toggle="yes">et al.</italic>, 2018<xref rid="bb29" ref-type="bibr"> ▸</xref>; Barke <italic toggle="yes">et al.</italic>, 2015<xref rid="bb3" ref-type="bibr"> ▸</xref>).</p>
    <p>The simplest case during this evaluation is for δ = 0 in combination with the smallest β value (0.001). There, the wavefield that propagates throughout the medium is identical in phase to a reference field propagating through the surrounding vacuum and only very weakly absorbed. The corresponding Scatman and Mie calculations are shown in blue in Figs. 5<xref rid="fig5" ref-type="fig"> ▸</xref>(<italic toggle="yes">d</italic>) and 5<xref rid="fig5" ref-type="fig"> ▸</xref>(<italic toggle="yes">k</italic>). The solid and dotted blue indicated slices in the diffraction image in (<italic toggle="yes">k</italic>) are indistinguishable by eye, just as the radial profiles in (<italic toggle="yes">d</italic>) are. However, when increasing the absorption from 0.001 to 0.01, slight deviations become visible at high scattering angles, where the Scatman program produces a radial profile in which the maxima are shifted towards higher scattering angles, and the amplitude is slightly too high compared with the analytical results.</p>
    <p>This behavior is core to all Scatman approximations where the absolute value of δ is comparably small (<inline-formula><inline-graphic xlink:href="j-55-01232-efi54.jpg"/></inline-formula>). With increasing absorption, the Scatman overestimates the signal’s total amplitude and shifts the extrema at larger scattering angles towards even larger scattering angles. Therefore, when δ is comparatively small, the quality of the Scatman’s simulation is anticorrelated with the absorption in the medium.</p>
    <p>The scenario strongly varies when larger values of δ are considered. There, the Scatman’s behavior is more complicated, mostly due to the appearance of intricate resonance effects that arise from the interplay between the target’s geometry and the wavefield. Such resonance effects are more pronounced for positive values of δ (refractive index smaller than unity), for example, observed in the atomic near-resonance regime, where the photon energy dependence of δ resembles a Fano profile. Thus, the assertion concerning the δ dependence must be split for positive and negative values. At negative values, broadly speaking in the off-resonance case, the deviations between the Scatman and the Mie simulation are mainly due to an overestimation of the amplitude with a relatively tiny shift of the extrema positions in the radial profiles. However, at positive values of δ, the deviations between the two simulations are significant. With δ values above 0.1, not shown here, the resulting radial profiles differ wildly from one another.</p>
    <p>Therefore, besides the anticorrelation with β for small δ, the second deduction that can be made here is that the Scatman produces worsening diffraction images with a more positive δ (refractive index smaller than unity). For the specific case presented here, the pivotal point for this to happen is roughly for <inline-formula><inline-graphic xlink:href="j-55-01232-efi55.jpg"/></inline-formula>.</p>
    <p>So far, the comparison between the Scatman’s results and Mie theory has been restricted to a fixed target size. However, the features of scattering images of isolated nanoparticles vary significantly, depending also on the targets’ size (Mie, 1908<xref rid="bb39" ref-type="bibr"> ▸</xref>; Bohren &amp; Huffman, 2008<xref rid="bb8" ref-type="bibr"> ▸</xref>; Rupp <italic toggle="yes">et al.</italic>, 2014<xref rid="bb46" ref-type="bibr"> ▸</xref>). Thus, a more exhaustive comparison, which also includes size effects, is presented in the supporting information.</p>
    <p>Concluding, the approximation employed by the Scatman program produces in most cases diffraction patterns of very high quality compared with the analytical Mie solution for spherical particles. In general, the quality of the routine is best when the phase term in the refractive index is small (<inline-formula><inline-graphic xlink:href="j-55-01232-efi56.jpg"/></inline-formula>). Then, only minor deviations are observed and the Scatman’s approximation could even be used as a replacement for the Mie theory based solution. With increasing absolute values of δ, the quality deteriorates as well, where larger positive values of δ yield worse results than larger negative values. At low δ values, the absorption (β) is anticorrelated with the quality of the approximation, yielding high-quality diffraction images when absorption is low. This relationship, however, is reversed for larger absolute values of δ, where a larger amount of absorption yields a better comparison with the Mie theory calculations.</p>
    <p>The exact range of optical properties for which the Scatman approach is usable is highly dependent on the scope of the simulation and its application. For this reason, we encourage users to take the values given in this section as purely indicative, and to directly check the applicability in their specific use cases.</p>
    <p>The next section introduces <italic toggle="yes">PyScatman</italic>, a high-level Python front-end for the Scatman method.</p>
  </sec>
  <sec id="sec5">
    <label>5.</label>
    <title><italic toggle="yes">PyScatman</italic>: a high-level Python front-end</title>
    <p>In this section we present and explain the reference implementation of the Scatman in the form of a Python module, called <italic toggle="yes">PyScatman</italic>. The source code is available under the MIT license (<ext-link xlink:href="https://spdx.org/licenses/MIT.html" ext-link-type="uri">https://spdx.org/licenses/MIT.html</ext-link>) at <ext-link xlink:href="https://gitlab.ethz.ch/nux/numerical-physics/pyscatman" ext-link-type="uri">https://gitlab.ethz.ch/nux/numerical-physics/pyscatman</ext-link>, while the documentation can be found at <ext-link xlink:href="https://nux-group.gitlab.io/pyscatman/" ext-link-type="uri">https://nux-group.gitlab.io/pyscatman/</ext-link>.</p>
    <p>The module is written in C++ (The C++ Standards Committee, 2017<xref rid="bb14" ref-type="bibr"> ▸</xref>) with bindings in Python using the <italic toggle="yes">PyBind11</italic> C++ library (Jakob <italic toggle="yes">et al.</italic>, 2019<xref rid="bb26" ref-type="bibr"> ▸</xref>). This hybrid approach enables us to maintain the highest possible simulation speed via compiled C++ code while keeping a Python-only user-friendly interface. The implementation is highly parallelized for multi-core CPUs, and takes advantage of Nvidia GPU accelerators via the CUDA library (Nickolls <italic toggle="yes">et al.</italic>, 2008<xref rid="bb40" ref-type="bibr"> ▸</xref>). In the current version, <italic toggle="yes">PyScatman</italic> performs all the computations in single floating point precision (32 bit).</p>
    <p>In Section 5.1<xref rid="sec5.1" ref-type="sec"/> a fundamental example is provided and explained. There, an experiment is set up, an ideal detector is defined and a simple shape is generated.</p>
    <p>Building on this, Section 5.2<xref rid="sec5.2" ref-type="sec"/> provides a more advanced example, where three shapes are generated using three different methods, and where a detector that simulates photon statistics is used. This second example is meant to highlight the great flexibility offered by the <italic toggle="yes">PyScatman</italic> module in terms of defining a target’s shape.</p>
    <p>Finally, in Section 6<xref rid="sec6" ref-type="sec"/>, the implementation is extensively benchmarked with respect to its execution time on either the CPU or the GPU using various shapes.</p>
    <sec id="sec5.1">
      <label>5.1.</label>
      <title>A fundamental example</title>
      <p>In this section, a fundamental example is provided and explained. We demonstrate the basic functionality and show the easiest way to define the target’s shape (see Fig. 6<xref rid="fig6" ref-type="fig"> ▸</xref>).</p>
      <p>For discussing the elements in the script we will refer to the line numbers.</p>
      <p><italic toggle="yes">Define an experiment (lines 1 to 10)</italic>. After the Scatman module is imported, the experimental conditions are set up by defining the irradiation wavelength in ångstöms, the maximal scattering angle in degrees and the desired detector resolution in pixels (px). Within <italic toggle="yes">PyScatman</italic>, there is no preferred length unit: the only requirement is to keep the same unit (Å in this example) throughout the whole script. An additional optional parameter that defines the radiation intensity is described later in the advanced example in Section 5.2<xref rid="sec5.2" ref-type="sec"/>.</p>
      <p><italic toggle="yes">Define a detector (line 17)</italic>. The Scatman module provides three detector types: MSFT, Ideal and MCP. MSFT is a virtual detector, which directly yields the plain MSFT calculation, while the Ideal one attempts to model realistic photon statistics and noise augmentation. The Ideal detector is described as part of the advanced example in Section 5.2<xref rid="sec5.2" ref-type="sec"/>. Finally, <italic toggle="yes">PyScatman</italic> provides the MCP class, which aims to simulate a scattering detector based on a microchannel plate (MCP) (Wiza, 1979<xref rid="bb23" ref-type="bibr"> ▸</xref>), often used in CDI experiments (Bostedt <italic toggle="yes">et al.</italic>, 2010<xref rid="bb10" ref-type="bibr"> ▸</xref>; Rupp <italic toggle="yes">et al.</italic>, 2017<xref rid="bb48" ref-type="bibr"> ▸</xref>, 2020<xref rid="bb47" ref-type="bibr"> ▸</xref>; Langbehn <italic toggle="yes">et al.</italic>, 2018<xref rid="bb29" ref-type="bibr"> ▸</xref>). The MCP class is not described here as it is beyond the scope of this paper. However, a full description can be found in the <italic toggle="yes">Detectors</italic> section in the official <italic toggle="yes">PyScatman</italic> documentation (<ext-link xlink:href="https://nux-group.gitlab.io/pyscatman/detectors.html" ext-link-type="uri">https://nux-group.gitlab.io/pyscatman/detectors.html</ext-link>).</p>
      <p>In this fundamental example, the MSFT detector is used, which returns the exact MSFT calculation.</p>
      <p><italic toggle="yes">Define a shape (lines 24 to 33)</italic>. <italic toggle="yes">PyScatman</italic> comes with several pre-defined sample shape models, each with specific parameters that define their appearance.<xref rid="fn1" ref-type="fn">1</xref> The sample described in listing 1 (Fig. 6<xref rid="fig6" ref-type="fig"> ▸</xref>) is of ellipsoid shape and is shown in Fig. 7<xref rid="fig7" ref-type="fig"> ▸</xref>(<italic toggle="yes">a</italic>). Note that the three axes of the ellipsoid are given in units of Å, as they must be consistent with the definition of the radiation wavelength set at line 7.</p>
      <p>All shapes have a <monospace>delta</monospace>, <monospace>beta</monospace>, <monospace>latitude</monospace>, <monospace>longitude</monospace> and <monospace>rotation</monospace> preference, which define their refractive index inside the sample and their orientation in space (see Fig. 8<xref rid="fig8" ref-type="fig"> ▸</xref> for a schematic on how the coordinates are defined). There, the <monospace>latitude</monospace> and <monospace>longitude</monospace> properties follow the standard convention also used for defining the coordinates on Earth, where the north–south axis is along the <italic toggle="yes">z</italic> direction (solid gray line).</p>
      <p><italic toggle="yes">Calculate the MSFT (lines 41 to 42)</italic>. After having defined a shape and a detector for an experiment, we can use the <monospace>acquire</monospace> method of the detector class to calculate the MSFT-based diffraction image. In this example, the variable <monospace>pattern_el</monospace> is a <italic toggle="yes">Numpy</italic> array with dimensions 1024 × 1024, as this was the resolution set at line 9. The final calculation of the diffraction image is shown in Fig. 7<xref rid="fig7" ref-type="fig"> ▸</xref>(<italic toggle="yes">e</italic>).</p>
    </sec>
    <sec id="sec5.2">
      <label>5.2.</label>
      <title>A more advanced example</title>
      <p>One of the main advantages of the <italic toggle="yes">PyScatman</italic> module is the flexibility with which any arbitrary shape can be defined. In addition to the pre-defined shapes introduced in Section 5.1<xref rid="sec5.1" ref-type="sec"/>, here we present three additional methods that <italic toggle="yes">PyScatman</italic> provides for defining an arbitrary shape: (i) Spherical­Harmonics, (ii) RadialMap and (iii) VolumeMap. All three methods are described in listing 2 (Fig. 9<xref rid="fig9" ref-type="fig"> ▸</xref>). <italic toggle="yes">PyScatman</italic> provides additional methods to define the sample’s shape [including the architectures presented by Barke <italic toggle="yes">et al.</italic> (2015<xref rid="bb3" ref-type="bibr"> ▸</xref>) and Langbehn <italic toggle="yes">et al.</italic> (2018<xref rid="bb29" ref-type="bibr"> ▸</xref>)] which are not discussed here, and more of them will be added in future releases.</p>
      <p><italic toggle="yes">Defining an Ideal detector (lines 1 to 17)</italic>. We import the <italic toggle="yes">PyScatman</italic> module and set up the same experiment as in listing 1 (Fig. 6<xref rid="fig6" ref-type="fig"> ▸</xref>), with the addition of the optional parameter <monospace>photon_density</monospace> which plays a role in the later-defined Ideal detector. The idea behind the implementation of the Ideal detector is that even a perfect real-life detector is subjected to Poisson statistics of photons, which augments the recorded diffraction images. In order to model this effect, an estimate of the number of scattered photons has to be calculated and then used to add the appropriate Poisson noise to the simulated diffraction pattern. A description of how this data augmentation is implemented in <italic toggle="yes">PyScatman</italic> is given in the supporting information.</p>
      <p><italic toggle="yes">Shape (1/3) via spherical harmonic coefficients (lines 26 to 36)</italic>. Any shape that is described by a radius as a function of the azimuthal and polar angles can also be defined using spherical harmonic coefficients. A notable example is the equipotential surface of the gravity potential of the Earth, which is termed the geoid and is defined using spherical harmonics (Barthelmes, 2009<xref rid="bb4" ref-type="bibr"> ▸</xref>).</p>
      <p>In general, the convention we use for the Laplace spherical harmonics (<inline-formula><inline-graphic xlink:href="j-55-01232-efi57.jpg"/></inline-formula>) is defined as<disp-formula id="fd10"><graphic xlink:href="j-55-01232-efd10.jpg" position="float"/></disp-formula>where <italic toggle="yes">m</italic> and ℓ are the order and degree of the harmonics, ϑ and φ are the azimuthal and polar angles within the spherical coordinate system, and <inline-formula><inline-graphic xlink:href="j-55-01232-efi58.jpg"/></inline-formula> are the associated Legendre polynomials, defined as<disp-formula id="fd11"><graphic xlink:href="j-55-01232-efd11.jpg" position="float"/></disp-formula>
<italic toggle="yes">PyScatman</italic>’s SphericalHarmonics class expects a list of triplets, where the first value corresponds to degree ℓ, the second value to the order <italic toggle="yes">m</italic> and the third value to a scaling parameter with which <inline-formula><inline-graphic xlink:href="j-55-01232-efi59.jpg"/></inline-formula> is multiplied. The final shape is then the sum of all triplets within the passed list.</p>
      <p>The shape defined at lines 26 to 36 in listing 2 can be seen in Fig. 7<xref rid="fig7" ref-type="fig"> ▸</xref>(<italic toggle="yes">b</italic>), along with the calculated MSFT diffraction image for this shape in Fig. 7<xref rid="fig7" ref-type="fig"> ▸</xref>(<italic toggle="yes">f</italic>).</p>
      <p><italic toggle="yes">Shape (2/3) via a radial map (lines 42 to 49)</italic>. A second method for defining an arbitrary shape within <italic toggle="yes">PyScatman</italic> is to provide a 2D array of any size that holds the length of the radii for all values of both angles θ and φ, which can be interpreted as the latitude and longitude coordinates. For example, when an array with size <inline-formula><inline-graphic xlink:href="j-55-01232-efi60.jpg"/></inline-formula> is passed, then these values define the radii of the shape at the θ values <inline-formula><inline-graphic xlink:href="j-55-01232-efi61.jpg"/></inline-formula>, <inline-formula><inline-graphic xlink:href="j-55-01232-efi62.jpg"/></inline-formula>, 0 and <inline-formula><inline-graphic xlink:href="j-55-01232-efi63.jpg"/></inline-formula>, and for φ at the values 0, <inline-formula><inline-graphic xlink:href="j-55-01232-efi64.jpg"/></inline-formula>, π, and <inline-formula><inline-graphic xlink:href="j-55-01232-efi65.jpg"/></inline-formula>. These values are then linearly interpolated when the sample shape is rendered at the proper resolution, depending on the sample size and the experimental conditions defined at lines 6–11.</p>
      <p>The shape of type RadialMap presented in the example, named <monospace>shape_rm</monospace>, is produced by the 2D radial map <monospace>radial_map_data</monospace> (of size 1920 × 960) given as an argument in line 43. The rendered shape can be found in Fig. 7<xref rid="fig7" ref-type="fig"> ▸</xref>(<italic toggle="yes">c</italic>), where an inset shows the used radial map. The MSFT calculation for this shape is shown in Fig. 7<xref rid="fig7" ref-type="fig"> ▸</xref>(<italic toggle="yes">g</italic>).</p>
      <p><italic toggle="yes">Shape (3/3) via a 3D volume map (lines 55 to 63)</italic>. The third method for defining an arbitrary shape is via a volume map. The VolumeMap class of <italic toggle="yes">PyScatman</italic> requires a 3D array of Boolean type (<monospace>volume_data</monospace> at line 59, here of size <inline-formula><inline-graphic xlink:href="j-55-01232-efi66.jpg"/></inline-formula>), which can have any size. The <monospace>dx</monospace> parameter, then, defines the linear size of a single volume unit of the 3D array <monospace>volume_data</monospace> and, as usual, must be expressed in the same length unit as the wavelength. For example, if a <inline-formula><inline-graphic xlink:href="j-55-01232-efi67.jpg"/></inline-formula> array with every value set as Boolean true is passed as data argument, and the <monospace>dx</monospace> argument is set to 2, we end up with a cubic shape of size 20 × 20 × 20 Å. If we want to scale up that cube by a factor of 2, we can set the <monospace>dx</monospace> property to 4, which results in a cube with doubled dimensions. The 3D rendering of the shape defined in this example is presented in Fig. 7<xref rid="fig7" ref-type="fig"> ▸</xref>(<italic toggle="yes">d</italic>), along with its MSFT simulation in Fig. 7<xref rid="fig7" ref-type="fig"> ▸</xref>(<italic toggle="yes">h</italic>). <italic toggle="yes">PyScatman</italic> also provides the possibility to perform simulations of non-uniform samples via a completely arbitrary voxel representation of the refractive index. This feature is not presented here for the sake of simplicity; readers may consult the software documentation for more information.</p>
      <p><italic toggle="yes">Obtaining the results (lines 68 to 70)</italic>. Finally, the simulation is performed for all three shapes. All shapes can be simulated through a single call to the Ideal detector’s <monospace>acquire</monospace> method, passing them as a list. This possibility is implemented for allowing the <italic toggle="yes">PyScatman</italic> module to better exploit parallel computing hardware (and especially multiple GPUs) when large data sets have to be simulated (see Section 6<xref rid="sec6" ref-type="sec"/> for further details). The patterns array yields the simulations, formatted as a list of 2D arrays that contain the simulation result for the shapes <monospace>shape_sh</monospace>, <monospace>shape_rm</monospace> and <monospace>shape_vm</monospace>. These patterns are depicted in Figs. 7<xref rid="fig7" ref-type="fig"> ▸</xref>(<italic toggle="yes">j</italic>), 7<xref rid="fig7" ref-type="fig"> ▸</xref>(<italic toggle="yes">k</italic>) and 7<xref rid="fig7" ref-type="fig"> ▸</xref>(<italic toggle="yes">l</italic>), respectively, where the effects of photon statistics simulated by the Ideal detector are clearly visible.</p>
    </sec>
  </sec>
  <sec id="sec6">
    <label>6.</label>
    <title>Performance considerations</title>
    <p>Our primary intention for the <italic toggle="yes">PyScatman</italic> module is to enable data analysis on diffraction patterns by forward-fitting the MSFT simulation with the experimental results, since classical Fourier reconstruction via phase retrieval methods is not possible for WAS. The model fitting approach consists of guessing a target’s shape, simulating its diffraction pattern, comparing it with the desired experimental data and then iteratively improving the guess until the MSFT simulation is sufficiently close to the experimental image. Such an optimization scheme is computationally expensive in its own right. Therefore, it is of the utmost importance to speed up the MSFT simulation as much as possible.</p>
    <p>To this end, we provide in this section an overview of some benchmark results on CPUs and GPUs, based on the examples shown in listings 1 and 2.</p>
    <p>A dissection of the total computational cost of the MSFT routine reveals that time consumption of the simulation is mostly determined by the number of discrete Fourier transforms (DFTs) (one for each slice) and the target’s rendering process. The time complexity of a single DFT is given by <inline-formula><inline-graphic xlink:href="j-55-01232-efi68.jpg"/></inline-formula> (Cooley &amp; Tukey, 1965<xref rid="bb15" ref-type="bibr"> ▸</xref>), where <inline-formula><inline-graphic xlink:href="j-55-01232-efi69.jpg"/></inline-formula> is the resolution of the output image along a single axis. The complexity for the MSFT algorithm scales linearly with the number of slices (<inline-formula><inline-graphic xlink:href="j-55-01232-efi70.jpg"/></inline-formula>), so that the total time complexity of the MSFT’s DFT part scales with <inline-formula><inline-graphic xlink:href="j-55-01232-efi71.jpg"/></inline-formula>. Moreover, the time complexity of the rendering process can be roughly estimated as <inline-formula><inline-graphic xlink:href="j-55-01232-efi72.jpg"/></inline-formula>.</p>
    <p>These considerations show that the resolution of the output image and the spatial extension of the sample, on which <inline-formula><inline-graphic xlink:href="j-55-01232-efi69.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="j-55-01232-efi70.jpg"/></inline-formula>, respectively, depend, are the determining factors for the running time of a <italic toggle="yes">PyScatman</italic> simulation.</p>
    <p>When a single shape object is given to the detector’s <monospace>acquire</monospace> method, the <italic toggle="yes">PyScatman</italic> module carries out the MSFT simulation differently depending on the available hardware:</p>
    <p>(i) CPU-only systems: slice rendering is sequential, where each slice is rendered using all CPU cores in parallel. After all <inline-formula><inline-graphic xlink:href="j-55-01232-efi70.jpg"/></inline-formula> slices are rendered, all CPUs perform the DFT calculations using the embarrassingly parallel scheme.</p>
    <p>(ii) Single NVIDIA GPU: each slice rendering and its respective DFT calculation are performed in parallel by the CUDA cores. Only one CPU is used for taking care of data preparation, inter-process communication and merging.</p>
    <p>Therefore, if only a single shape is passed to the detector’s <monospace>acquire</monospace> method, as happens in listing 1, then, even in the case of a multi-GPU system, only one GPU is used, as the overhead caused by data transfers between the different GPUs’ memories would prevent a performance scaling.</p>
    <p>However, when multiple shapes are to be simulated, as for the example presented in listing 2, multiple GPUs can speed up computation:</p>
    <p>(i) CPU-only systems: the multiple shapes are split evenly between all available CPU cores, where, subsequently, each core takes care of performing the shape rendering and the DFT calculations.</p>
    <p>(ii) Single NVIDIA GPU: similarly to the CPU-only case, the multiple shapes are split evenly between all available CPU cores. Each CPU then sets up the shape’s data and submits the work to the GPU, where the CUDA cores calculate the rendering and the DFTs for all slices.</p>
    <p>(iii) Multiple NVIDIA GPUs: this is similar to the single-GPU case with the exception that the available CPUs are placed in groups where each group has an assigned GPU. For example, in an eight CPU core/four GPU system, two CPUs would share a single GPU and coordinate as in the single-GPU case.</p>
    <p>Here, we present some benchmark results that we consider representative of real-life situations. First, note that the amount of computation, and thus the time to solution, depends on several factors (most of which can be deduced from Fig. 4<xref rid="fig4" ref-type="fig"> ▸</xref>):</p>
    <p>(i) Simulation resolution: the greater the number of pixels in the output image, the greater the computational cost.</p>
    <p>(ii) Shape extension: the greater the ratio between the sample size and the wavelength λ, the higher the number of shape voxels to be rendered. Moreover, a greater scattering angle corresponds to a greater spatial resolution, such that the number of pixels to be rendered increases accordingly with the maximum scattering angle <inline-formula><inline-graphic xlink:href="j-55-01232-efi43.jpg"/></inline-formula>.</p>
    <p>(iii) Shape complexity: the function that defines the shape optical properties, <inline-formula><inline-graphic xlink:href="j-55-01232-efi77.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="j-55-01232-efi78.jpg"/></inline-formula>, has a non-negligible computational cost, depending on both the shape type and the input data.</p>
    <p>Among these three aspects, the contribution of the shape complexity to the total computing time is the least straightforward to evaluate in a systematic and quantitative manner, as it is highly dependent on the shape type and the values of its parameters. For example, the SphericalHarmonics complexity is particularly low when only a few harmonic coefficients are provided as input: as the number of harmonic coefficients increases, the data preparation step, which consists of the computation of the SphericalHarmonics transform, starts to take a relevant part of the computation time. The same happens, for example, for the VolumeMap object, for which the time dedicated to data transfer has an effect on the time to solution, depending on the size of the 3D array given as input. Such a case-by-case study goes beyond the scope of this paper, and the authors encourage the reader to install the <italic toggle="yes">PyScatman</italic> module and test it for the cases of interest.</p>
    <p>However, to give a rough idea about performance for different sample shapes, a first test is performed on the same four shape objects defined in the examples of the previous section, <italic toggle="yes">i.e.</italic>
<monospace>shape_el</monospace> (Ellipsoid), <monospace>shape_sh</monospace> (Spherical­Harmonics), <monospace>shape_rm</monospace> (RadialMap) and <monospace>shape_vm</monospace> (Volume­Map), keeping the same experimental conditions and detector resolution. Here, the detector used is the MSFT one, yielding the diffraction patterns shown in Figs. 7<xref rid="fig7" ref-type="fig"> ▸</xref>(<italic toggle="yes">e</italic>)–7<xref rid="fig7" ref-type="fig"> ▸</xref>(<italic toggle="yes">h</italic>). The performance evaluation was accomplished on a workstation equipped with an Intel Core i9-9900K CPU accelerated by a GPU NVIDIA GeForce RTX 2080 Ti.</p>
    <p>The simulation time is shown in Fig. 10<xref rid="fig10" ref-type="fig"> ▸</xref>(<italic toggle="yes">a</italic>). On the <italic toggle="yes">x</italic> axis the four different shape models are labeled. The time to solution is on the <italic toggle="yes">y</italic> axis, expressed in milliseconds on a logarithmic scale. The time shown is the execution time of a single call to the detector’s <monospace>acquire</monospace> method, with a single shape object given as argument and averaged over 100 repetitions to rule out statistical fluctuations. Two features are evident in the figure: first, the performance difference between the CPU time and the respective GPU time is around two orders of magnitude. Second, the time to solution depends on the shape. The first observation underlines why the <italic toggle="yes">PyScatman</italic> implementation, when executed on a GPU, enables a new kind of data analysis with the Scatman approach. The second feature, instead, is due to different shape sizes and complexities.</p>
    <p>To quantitatively investigate the dependence of simulation time on the detector resolution and the sample’s spatial extension, a second test is presented in Fig. 10<xref rid="fig10" ref-type="fig"> ▸</xref>(<italic toggle="yes">b</italic>). All the timing values in this test are based upon the same sample shape rendered in Fig. 7<xref rid="fig7" ref-type="fig"> ▸</xref>(<italic toggle="yes">b</italic>), defined through the Spherical­Harmonics model. Here, that shape is scaled to match different average radii, <inline-formula><inline-graphic xlink:href="j-55-01232-efi79.jpg"/></inline-formula>, <inline-formula><inline-graphic xlink:href="j-55-01232-efi80.jpg"/></inline-formula>, <inline-formula><inline-graphic xlink:href="j-55-01232-efi81.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="j-55-01232-efi82.jpg"/></inline-formula>, in order to get different sample spatial extensions without varying their complexity. For each of them, two evaluations of the time to solution are performed, one running on the CPU and the other on the GPU. The whole operation is repeated for four different detector resolutions, <inline-formula><inline-graphic xlink:href="j-55-01232-efi83.jpg"/></inline-formula>, <inline-formula><inline-graphic xlink:href="j-55-01232-efi84.jpg"/></inline-formula>, <inline-formula><inline-graphic xlink:href="j-55-01232-efi85.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="j-55-01232-efi86.jpg"/></inline-formula> px. Here, again, the great advantage gained through the GPU computing is evident. In particular, the difference of around two orders of magnitude in the simulation time between GPU and CPU is consistently present for all the different sample sizes and the resolutions of the diffraction patterns, with the GPU still capable of performing more than ten simulations per second even in the worst, most complex case.</p>
    <p>The presented timing results show the performance of the <italic toggle="yes">PyScatman</italic> module in the current version. The software is, however, still under development, and better timing performances are expected in future software releases thanks to a better optimization of the GPU management.</p>
  </sec>
  <sec id="sec7">
    <label>7.</label>
    <title>Summary</title>
    <p>In this paper we introduced the Scatman, an approximate method to simulate wide-angle diffraction patterns from coherent and monochromatic light based on the multi-slice Fourier transform. The scientific impact of the method has already been demonstrated by previous publications that made use of the Scatman, while it was under development, to retrieve 3D morphological information on silver nanocrystals (Barke <italic toggle="yes">et al.</italic>, 2015<xref rid="bb3" ref-type="bibr"> ▸</xref>) and helium nanodroplets (Langbehn <italic toggle="yes">et al.</italic>, 2018<xref rid="bb29" ref-type="bibr"> ▸</xref>) from single wide-angle diffraction images.</p>
    <p>The need for an approximate simulation tool arises from the severe limitations of the available exact methods: Mie calculations, which are fast but can be used only for highly symmetrical samples, and finite-difference time-domain or discrete dipole approximation simulations, which are computationally heavy. The Scatman was conceived to be both generic, <italic toggle="yes">i.e.</italic> capable of simulating the scattering from any kind of sample, and sufficiently fast, enabling the retrieval of the sample morphology by fitting the experimental diffraction patterns via a model fitting approach.</p>
    <p>The mathematical foundations of the method were presented, highlighting the main approximations that make the Scatman results deviate from the exact ones. The effects of these approximations as a function of the input parameters were investigated, by comparing the Scatman simulations and the exact Mie calculations for a spherical sample. Within given bounds on the optical properties of the sample and its spatial extension, the Scatman results proved to be in quantitative agreement with exact calculations.</p>
    <p>We presented our reference implementation of the Scatman, called <italic toggle="yes">PyScatman</italic>, which is released as open-source software with this article and is freely available online. <italic toggle="yes">PyScatman</italic>, implemented as a Python module, provides an easy interface to the user and a set of additional functionalities useful for data analysis. <italic toggle="yes">PyScatman</italic> is entirely written in C++ and makes use of state-of-the-art programming techniques to take full advantage of the most recent computing hardware, including GPU accelerators. The computational performance of <italic toggle="yes">PyScatman</italic> was briefly presented, demonstrating the possibility to perform wide-angle scattering simulations in a few to a few tens of milliseconds on consumer-level computing hardware. These computing times are well suited to the extensive use of <italic toggle="yes">PyScatman</italic> in the analysis of experimental data via forward-fitting procedures, thus opening new perspectives for coherent diffraction imaging in wide-angle scattering conditions.</p>
    <p>The Scatman method described here is a stable and tested snapshot of its current development. Further enhancements are under study, focusing on both the physics aspect and the software implementation. In terms of software, the inclusion of additional, more sophisticated and ductile shape models is planned, along with a more efficient management of computing resources. On the physics side, the partial inclusion of secondary effects like multiple scattering, refraction and reflection is under study, extending the range of applicability of the approach to samples whose refractive index varies more strongly from unity.</p>
    <p>The aim of the Scatman method and its software implementation is to be a reference tool for the coherent diffraction imaging community. They could also be of great interest for other scientific fields where elastic scattering of coherent radiation plays a role, like the recently growing electron diffraction imaging techniques. Moreover, the high-performance software implementation, <italic toggle="yes">PyScatman</italic>, is compatible with the increasing interest in big-data analysis and artificial intelligence (AI), and its combination with AI techniques is already in a prototyping phase.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material position="float" content-type="local-data">
      <p>Supporting information. DOI: <ext-link xlink:href="https://doi.org/10.1107/S1600576722008068/yr5086sup1.pdf" ext-link-type="uri">10.1107/S1600576722008068/yr5086sup1.pdf</ext-link>
</p>
      <media xlink:href="j-55-01232-sup1.pdf" id="d64e192" position="anchor"/>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack>
    <p>Open access funding provided by Eidgenossische Technische Hochschule Zurich.</p>
  </ack>
  <fn-group>
    <fn id="fn1">
      <label>1</label>
      <p>A detailed explanation of every shape, along with images showing each of the axes, can be found in the official documentation under ‘Shapes’ at <ext-link xlink:href="https://nux-group.gitlab.io/pyscatman/shapes.html" ext-link-type="uri">https://nux-group.gitlab.io/pyscatman/shapes.html</ext-link>.</p>
    </fn>
  </fn-group>
  <ref-list>
    <title>References</title>
    <ref id="bb1">
      <mixed-citation publication-type="other">Aden, A. L. &amp; Kerker, M. (1951). <italic toggle="yes">J. Appl. Phys.</italic>
<bold>22</bold>, 1242–1246.</mixed-citation>
    </ref>
    <ref id="bb2">
      <mixed-citation publication-type="other">Amante, C. &amp; Eakins, B. W. (2009). <italic toggle="yes">ETOPO1 1 Arc-Minute Global Relief Model: Procedures, Data Sources and Analysis</italic>. NOAA Technical Memorandum NESDIS NGDC-24, US Department of Commerce. https://www.ngdc.noaa.gov/mgg/global/relief/ETOPO1/docs/ETOPO1.pdf.</mixed-citation>
    </ref>
    <ref id="bb3">
      <mixed-citation publication-type="other">Barke, I., Hartmann, H., Rupp, D., Flückiger, L., Sauppe, M., Adolph, M., Schorb, S., Bostedt, C., Treusch, R., Peltz, C., Bartling, S., Fennel, T., Meiwes-Broer, K. H. &amp; Möller, T. (2015). <italic toggle="yes">Nat. Commun.</italic>
<bold>6</bold>, 6187. </mixed-citation>
    </ref>
    <ref id="bb4">
      <mixed-citation publication-type="other">Barthelmes, F. (2009). <italic toggle="yes">Definition of Functionals of the Geopotential and Their Calculation from Spherical Harmonic Models: Theory and Rormulas Used by the Calculation Service of the International Centre for Global Earth Models (ICGEM).</italic> Technical Report, Deutsches GeoForschungsZentrum, Potsdam, Germany.</mixed-citation>
    </ref>
    <ref id="bb5">
      <mixed-citation publication-type="other">Barty, A., Küpper, J. &amp; Chapman, H. N. (2013). <italic toggle="yes">Annu. Rev. Phys. Chem.</italic>
<bold>64</bold>, 415–435. </mixed-citation>
    </ref>
    <ref id="bb6">
      <mixed-citation publication-type="other">Beer, A. (1852). <italic toggle="yes">Ann. Phys. Chem.</italic>
<bold>162</bold>, 78–88.</mixed-citation>
    </ref>
    <ref id="bb8">
      <mixed-citation publication-type="other">Bohren, C. F. &amp; Huffman, D. R. (2008). <italic toggle="yes">Absorption and Scattering of Light by Small Particles.</italic> Weinheim: John Wiley &amp; Sons.</mixed-citation>
    </ref>
    <ref id="bb9">
      <mixed-citation publication-type="other">Born, M. (1926). <italic toggle="yes">Z. Phys.</italic>
<bold>38</bold>, 803–827.</mixed-citation>
    </ref>
    <ref id="bb10">
      <mixed-citation publication-type="other">Bostedt, C., Adolph, M., Eremina, E., Hoener, M., Rupp, D., Schorb, S., Thomas, H., de Castro, A. R. B. &amp; Möller, T. (2010). <italic toggle="yes">J. Phys. B At. Mol. Opt. Phys.</italic>
<bold>43</bold>, 194011.</mixed-citation>
    </ref>
    <ref id="bb11">
      <mixed-citation publication-type="other">Chapman, H. N., Barty, A., Bogan, M. J., Boutet, S., Frank, M., Hau-Riege, S. P., Marchesini, S., Woods, B. W., Bajt, S., Benner, W. H., London, R. A., Plönjes, E., Kuhlmann, M., Treusch, R., Düsterer, S., Tschentscher, T., Schneider, J. R., Spiller, E., Möller, T., Bostedt, C., Hoener, M., Shapiro, D. A., Hodgson, K. O., van der Spoel, D., Burmeister, F., Bergh, M., Caleman, C., Huldt, G., Seibert, M. M., Maia, F. R. N. C., Lee, R. W., Szöke, A., Timneanu, N. &amp; Hajdu, J. (2006). <italic toggle="yes">Nat. Phys.</italic>
<bold>2</bold>, 839–843.</mixed-citation>
    </ref>
    <ref id="bb12">
      <mixed-citation publication-type="other">Chapman, H. N., Caleman, C. &amp; Timneanu, N. (2014). <italic toggle="yes">Phil. Trans. R. Soc. B</italic>, <bold>369</bold>, 20130313.</mixed-citation>
    </ref>
    <ref id="bb13">
      <mixed-citation publication-type="other">Chapman, H. N. &amp; Nugent, K. A. (2010). <italic toggle="yes">Nat. Photon.</italic>
<bold>4</bold>, 833–839. </mixed-citation>
    </ref>
    <ref id="bb15">
      <mixed-citation publication-type="other">Cooley, J. W. &amp; Tukey, J. W. (1965). <italic toggle="yes">Math. Comput.</italic>
<bold>19</bold>, 297–301.</mixed-citation>
    </ref>
    <ref id="bb16">
      <mixed-citation publication-type="other">Cowley, J. M. &amp; Moodie, A. F. (1957). <italic toggle="yes">Acta Cryst.</italic>
<bold>10</bold>, 609–619.</mixed-citation>
    </ref>
    <ref id="bb17">
      <mixed-citation publication-type="other">Ekeberg, T., Svenda, M., Abergel, C., Maia, F. R., Seltzer, V., Claverie, J.-M., Hantke, M., Jönsson, O., Nettelblad, C., van der Schot, G., Liang, M., DePonte, D. P., Barty, A., Seibert, M. M., Iwan, B., Andersson, I., Loh, N. D., Martin, A. V., Chapman, H., Bostedt, C., Bozek, J. D., Ferguson, K. R., Krzywinski, J., Epp, S. W., Rolles, D., Rudenko, A., Hartmann, R., Kimmel, N. &amp; Hajdu, J. (2015). <italic toggle="yes">Phys. Rev. Lett.</italic>
<bold>114</bold>, 098102.</mixed-citation>
    </ref>
    <ref id="bb18">
      <mixed-citation publication-type="other">Feldhaus, J., Arthur, J. &amp; Hastings, J. (2005). <italic toggle="yes">J. Phys. B At. Mol. Opt. Phys.</italic>
<bold>38</bold>, S799–S819.</mixed-citation>
    </ref>
    <ref id="bb19">
      <mixed-citation publication-type="other">Fienup, J. R. (1982). <italic toggle="yes">Appl. Opt.</italic>
<bold>21</bold>, 2758–2769.</mixed-citation>
    </ref>
    <ref id="bb20">
      <mixed-citation publication-type="other">Gaffney, K. &amp; Chapman, H. N. (2007). <italic toggle="yes">Science</italic>, <bold>316</bold>, 1444–1448.</mixed-citation>
    </ref>
    <ref id="bb21">
      <mixed-citation publication-type="other">Guinier, A., Fournet, G. &amp; Yudowitch, K. L. (1955). <italic toggle="yes">Small-Angle Scattering of X-rays</italic>. New York: John Wiley &amp; Sons.</mixed-citation>
    </ref>
    <ref id="bb22">
      <mixed-citation publication-type="other">Hahn, D. W. (2009). <italic toggle="yes">Light Scattering Theory</italic>. Department of Mechanical and Aerospace Engineering, University of Florida, USA.</mixed-citation>
    </ref>
    <ref id="bb24">
      <mixed-citation publication-type="other">Hare, A. &amp; Morrison, G. (1994). <italic toggle="yes">J. Mod. Opt.</italic>
<bold>41</bold>, 31–48.</mixed-citation>
    </ref>
    <ref id="bb25">
      <mixed-citation publication-type="other">Harmand, M., Coffee, R., Bionta, M. R., Chollet, M., French, D., Zhu, D., Fritz, D., Lemke, H., Medvedev, N., Ziaja, B., Toleikis, S. &amp; Cammarata, M. (2013). <italic toggle="yes">Nat. Photon.</italic>
<bold>7</bold>, 215–218. </mixed-citation>
    </ref>
    <ref id="bb26">
      <mixed-citation publication-type="other">Jakob, W., Rhinelander, J. &amp; Moldovan, D. (2019). <italic toggle="yes">pybind</italic>. https://github.com/pybind/pybind11.</mixed-citation>
    </ref>
    <ref id="bb27">
      <mixed-citation publication-type="other">Jiang, H., Song, C., Chen, C.-C., Xu, R., Raines, K. S., Fahimian, B. P., Lu, C.-H., Lee, T.-K., Nakashima, A., Urano, J., Ishikawa, T., Tamanoi, F. &amp; Miao, J. (2010). <italic toggle="yes">Proc. Natl Acad. Sci.</italic>
<bold>107</bold>, 11234–11239.</mixed-citation>
    </ref>
    <ref id="bb28">
      <mixed-citation publication-type="other">Lambert, J. H. (1760). <italic toggle="yes">Photometria Sive de Mensura et Gradibus Luminis, Colorum et Umbrae.</italic> Klett.</mixed-citation>
    </ref>
    <ref id="bb29">
      <mixed-citation publication-type="other">Langbehn, B., Sander, K., Ovcharenko, Y., Peltz, C., Clark, A., Coreno, M., Cucini, R., Drabbels, M., Finetti, P., Di Fraia, M., Giannessi, L., Grazioli, C., Iablonskyi, D., LaForge, A. C., Nishiyama, T., Oliver Álvarez de Lara, V., Piseri, P., Plekan, O., Ueda, K., Zimmermann, J., Prince, K. C., Stienkemeier, F., Callegari, C., Fennel, T., Rupp, D. &amp; Möller, T. (2018). <italic toggle="yes">Phys. Rev. Lett.</italic>
<bold>121</bold>, 255301.</mixed-citation>
    </ref>
    <ref id="bb30">
      <mixed-citation publication-type="other">Loh, N., Bogan, M. J., Elser, V., Barty, A., Boutet, S., Bajt, S., Hajdu, J., Ekeberg, T., Maia, F. R., Schulz, J., Seibert, M. M., Iwan, B., Timneanu, N., Marchesini, S., Schlichting, I., Shoeman, R. L., Lomb, L., Frank, M., Liang, M. &amp; Chapman, H. N. (2010). <italic toggle="yes">Phys. Rev. Lett.</italic>
<bold>104</bold>, 225501.</mixed-citation>
    </ref>
    <ref id="bb32">
      <mixed-citation publication-type="other">Loh, N. D. &amp; Elser, V. (2009). <italic toggle="yes">Phys. Rev. E</italic>, <bold>80</bold>, 026705.</mixed-citation>
    </ref>
    <ref id="bb31">
      <mixed-citation publication-type="other">Loh, N., Hampton, C. Y., Martin, A. V., Starodub, D., Sierra, R. G., Barty, A., Aquila, A., Schulz, J., Lomb, L., Steinbrener, J., Shoeman, R. L., Kassemeyer, S., Bostedt, C., Bozek, J., Epp, S. W., Erk, B., Hartmann, R., Rolles, D., Rudenko, A., Rudek, B., Foucar, L., Kimmel, N., Weidenspointner, G., Hauser, G., Holl, P., Pedersoli, E., Liang, M., Hunter, M. S., Hunter, M. M., Gumprecht, L., Coppola, N., Wunderer, C., Graafsma, H., Maia, F. R., Ekeberg, T., Hantke, M., Fleckenstein, H., Hirsemann, H., Nass, K., White, T. A., Tobias, H. J., Farquar, G. R., Benner, W. H., Hau-Riege, S. P., Reich, C., Hartmann, A., Soltau, H., Marchesini, S., Bajt, S., Barthelmess, M., Bucksbaum, P., Hodgson, K. O., Strüder, L., Ullrich, J., Frank, M., Schlichting, I., Chapman, H. N. &amp; Bogan, M. J. (2012). <italic toggle="yes">Nature</italic>, <bold>486</bold>, 513–517.</mixed-citation>
    </ref>
    <ref id="bb33">
      <mixed-citation publication-type="other">Lundholm, I. V., Sellberg, J. A., Ekeberg, T., Hantke, M. F., Okamoto, K., van der Schot, G., Andreasson, J., Barty, A., Bielecki, J., Bruza, P., Bucher, M., Carron, S., Daurer, B. J., Ferguson, K., Hasse, D., Krzywinski, J., Larsson, D. S. D., Morgan, A., Mühlig, K., Müller, M., Nettelblad, C., Pietrini, A., Reddy, H. K. N., Rupp, D., Sauppe, M., Seibert, M., Svenda, M., Swiggers, M., Timneanu, N., Ulmer, A., Westphal, D., Williams, G., Zani, A., Faigel, G., Chapman, H. N., Möller, T., Bostedt, C., Hajdu, J., Gorkhover, T. &amp; Maia, F. R. N. C. (2018). <italic toggle="yes">IUCrJ</italic>, <bold>5</bold>, 531–541.</mixed-citation>
    </ref>
    <ref id="bb34">
      <mixed-citation publication-type="other">Marchesini, S. (2007). <italic toggle="yes">Rev. Sci. Instrum.</italic>
<bold>78</bold>, 011301.</mixed-citation>
    </ref>
    <ref id="bb35">
      <mixed-citation publication-type="other">Miao, J., Charalambous, P., Kirz, J. &amp; Sayre, D. (1999). <italic toggle="yes">Nature</italic>, <bold>400</bold>, 342–344.</mixed-citation>
    </ref>
    <ref id="bb36">
      <mixed-citation publication-type="other">Miao, J., Chen, C.-C., Mao, Y., Martin, L. S. &amp; Kapteyn, H. C. (2011). <italic toggle="yes">arXiv</italic>:1112.4459.</mixed-citation>
    </ref>
    <ref id="bb37">
      <mixed-citation publication-type="other">Miao, J., Chen, C.-C., Song, C., Nishino, Y., Kohmura, Y., Ishikawa, T., Ramunno-Johnson, D., Lee, T.-K. &amp; Risbud, S. H. (2006). <italic toggle="yes">Phys. Rev. Lett.</italic>
<bold>97</bold>, 215503.</mixed-citation>
    </ref>
    <ref id="bb38">
      <mixed-citation publication-type="other">Miao, J., Sandberg, R. L. &amp; Song, C. (2011). <italic toggle="yes">IEEE J. Sel. Top. Quantum Electron.</italic>
<bold>18</bold>, 399–410.</mixed-citation>
    </ref>
    <ref id="bb39">
      <mixed-citation publication-type="other">Mie, G. (1908). <italic toggle="yes">Ann. Phys.</italic>
<bold>330</bold>, 377–445.</mixed-citation>
    </ref>
    <ref id="bb40">
      <mixed-citation publication-type="other">Nickolls, J., Buck, I., Garland, M. &amp; Skadron, K. (2008). <italic toggle="yes">Queue</italic>, <bold>6</bold>, 40–53.</mixed-citation>
    </ref>
    <ref id="bb41">
      <mixed-citation publication-type="other">Paganin, D. (2006). <italic toggle="yes">Coherent X-ray Optics</italic>, Oxford Series on Synchrotron Radiation, No. 6. Oxford University Press on Demand.</mixed-citation>
    </ref>
    <ref id="bb42">
      <mixed-citation publication-type="other">Pedersoli, E., Loh, N., Capotondi, F., Hampton, C., Sierra, R., Starodub, D., Bostedt, C., Bozek, J., Nelson, A., Aslam, M., Li, S., Dravid, V. P., Martin, A. V., Aquila, A., Barty, A., Fleckenstein, H., Gumprecht, L., Liang, M., Nass, K., Schulz, J., White, T. A., Coppola, N., Bajt, S., Barthelmess, M., Graafsma, H., Hirsemann, H., Wunderer, C., Epp, S. W., Erk, B., Rudek, B., Rudenko, A., Foucar, L., Kassemeyer, S., Lomb, L., Rolles, D., Shoeman, R. L., Steinbrener, J., Hartmann, R., Hartmann, A., Hauser, G., Holl, P., Kimmel, N., Reich, C., Soltau, H., Weidenspointner, G., Benner, W. H., Farquar, G. R., Hau-Riege, S. P., Hunter, M. S., Ekeberg, T., Hantke, M., Maia, F. R. N. C., Tobias, H. J., Marchesini, S., Frank, M., Strüder, L., Schlichting, I., Ullrich, J., Chapman, H. N., Bucksbaum, P. H., Kiskinova, M. &amp; Bogan, M. J. (2013). <italic toggle="yes">J. Phys. B At. Mol. Opt. Phys.</italic>
<bold>46</bold>, 164033.</mixed-citation>
    </ref>
    <ref id="bb43">
      <mixed-citation publication-type="other">Purcell, E. M. &amp; Pennypacker, C. R. (1973). <italic toggle="yes">ApJ</italic>, <bold>186</bold>, 705–714.</mixed-citation>
    </ref>
    <ref id="bb44">
      <mixed-citation publication-type="other">Raines, K. S., Salha, S., Sandberg, R. L., Jiang, H., Rodríguez, J. A., Fahimian, B. P., Kapteyn, H. C., Du, J. &amp; Miao, J. (2010). <italic toggle="yes">Nature</italic>, <bold>463</bold>, 214–217.</mixed-citation>
    </ref>
    <ref id="bb45">
      <mixed-citation publication-type="other">Reinhard, D., Hall, B., Ugarte, D. &amp; Monot, R. (1997). <italic toggle="yes">Phys. Rev. B</italic>, <bold>55</bold>, 7868–7881.</mixed-citation>
    </ref>
    <ref id="bb46">
      <mixed-citation publication-type="other">Rupp, D., Adolph, M., Flückiger, L., Gorkhover, T., Müller, J. P., Müller, M., Sauppe, M., Wolter, D., Schorb, S., Treusch, R., Bostedt, C. &amp; Möller, T. (2014). <italic toggle="yes">J. Chem. Phys.</italic>
<bold>141</bold>, 044306.</mixed-citation>
    </ref>
    <ref id="bb47">
      <mixed-citation publication-type="other">Rupp, D., Flückiger, L., Adolph, M., Colombo, A., Gorkhover, T., Harmand, M., Krikunova, M., Müller, J. P., Oelze, T., Ovcharenko, Y., Richter, M., Sauppe, M., Schorb, S., Treusch, R., Wolter, D., Bostedt, C. &amp; Möller, T. (2020). <italic toggle="yes">Struct. Dyn.</italic>
<bold>7</bold>, 034303.</mixed-citation>
    </ref>
    <ref id="bb48">
      <mixed-citation publication-type="other">Rupp, D., Monserud, N., Langbehn, B., Sauppe, M., Zimmermann, J., Ovcharenko, Y., Möller, T., Frassetto, F., Poletto, L., Trabattoni, A., Calegari, F., Nisoli, M., Sander, K., Peltz, C. J., Vrakking, M., Fennel, T. &amp; Rouzée, A. (2017). <italic toggle="yes">Nat. Commun.</italic>
<bold>8</bold>, 493. </mixed-citation>
    </ref>
    <ref id="bb49">
      <mixed-citation publication-type="other">Sander, K., Peltz, C., Varin, C., Scheel, S., Brabec, T. &amp; Fennel, T. (2015). <italic toggle="yes">J. Phys. B At. Mol. Opt. Phys.</italic>
<bold>48</bold>, 204004.</mixed-citation>
    </ref>
    <ref id="bb50">
      <mixed-citation publication-type="other">Seibert, M. M., Ekeberg, T., Maia, F. R., Svenda, M., Andreasson, J., Jönsson, O., Odić, D., Iwan, B., Rocker, A., Westphal, D., Hantke, M., DePonte, D. P., Barty, A., Schulz, J., Gumprecht, L., Coppola, N., Aquila, A., Liang, M., White, T. A., Martin, A., Caleman, C., Stern, S., Abergel, C., Seltzer, V., Claverie, J., Bostedt, C., Bozek, J. D., Boutet, S., Miahnahri, A. A., Messerschmidt, M., Krzywinski, J., Williams, G., Hodgson, K. O., Bogan, M. J., Hampton, C. Y., Sierra, R. G., Starodub, D., Andersson, I., Bajt, S., Barthelmess, M., Spence, J. C. H., Fromme, P., Weierstall, U., Kirian, R., Hunter, M., Doak, R. B., Marchesini, S., Hau-Riege, S. P., Frank, M., Shoeman, R. L., Lomb, L., Epp, S. W., Hartmann, R., Rolles, D., Rudenko, A., Schmidt, C., Foucar, L., Kimmel, N., Holl, P., Rudek, B., Erk, B., Hömke, A., Reich, C., Pietschner, D., Weidenspointner, G., Strüder, L., Hauser, G., Gorke, H., Ullrich, J., Schlichting, I., Herrmann, S., Schaller, G., Schopper, F., Soltau, H., Kühnel, K., Andritschke, R., Schröter, C., Krasniqi, F., Bott, M., Schorb, S., Rupp, D., Adolph, M., Gorkhover, T., Hirsemann, H., Potdevin, G., Graafsma, H., Nilsson, B., Chapman, H. N. &amp; Hajdu, J. (2011). <italic toggle="yes">Nature</italic>, <bold>470</bold>, 78–81.</mixed-citation>
    </ref>
    <ref id="bb51">
      <mixed-citation publication-type="other">Self, P. G., O’Keefe, M., Buseck, P. &amp; Spargo, A. (1983). <italic toggle="yes">Ultramicroscopy</italic>, <bold>11</bold>, 35–52.</mixed-citation>
    </ref>
    <ref id="bb52">
      <mixed-citation publication-type="other">Taflove, A. (1980). <italic toggle="yes">IEEE Trans. Electromagn. Compat.</italic>
<bold>EMC-22</bold>, 191–202.</mixed-citation>
    </ref>
    <ref id="bb14">
      <mixed-citation publication-type="other">The C++ Standards Committee (2017). <italic toggle="yes">ISO International Standard ISO/IEC 14882: 2017, Programming Language C++.</italic> Technical Report. Geneva, Switzerland. https://www.open-std.org/jtc1/sc22/wg21/.</mixed-citation>
    </ref>
    <ref id="bb53">
      <mixed-citation publication-type="other">Varin, C., Peltz, C., Brabec, T. &amp; Fennel, T. (2012). <italic toggle="yes">Phys. Rev. Lett.</italic>
<bold>108</bold>, 175007.</mixed-citation>
    </ref>
    <ref id="bb54">
      <mixed-citation publication-type="other">Wang, G., Yu, H., Cong, W. &amp; Katsevich, A. (2011). <italic toggle="yes">Nature</italic>, <bold>480</bold>, E2–E3.</mixed-citation>
    </ref>
    <ref id="bb23">
      <mixed-citation publication-type="other">Wiza, J. L. (1979). <italic toggle="yes">Nucl. Instrum. Methods</italic>, <bold>162</bold>, 587–601.</mixed-citation>
    </ref>
    <ref id="bb55">
      <mixed-citation publication-type="other">Xu, R., Jiang, H., Song, C., Rodriguez, J. A., Huang, Z., Chen, C.-C., Nam, D., Park, J., Gallagher-Jones, M., Kim, S., Kim, S., Suzuki, A., Takayama, Y., Oroguchi, T., Takahashi, Y., Fan, J., Zou, Y., Hatsui, T., Inubushi, Y., Kameshima, T., Yonekura, K., Tono, K., Togashi, T., Sato, T., Yamamoto, M., Nakasako, M., Yabashi, M., Ishikawa, T. &amp; Miao, J. (2014). <italic toggle="yes">Nat. Commun.</italic>
<bold>5</bold>, 4061. </mixed-citation>
    </ref>
    <ref id="bb56">
      <mixed-citation publication-type="other">Zimmermann, J., Langbehn, B., Cucini, R., Di Fraia, M., Finetti, P., LaForge, A. C., Nishiyama, T., Ovcharenko, Y., Piseri, P., Plekan, O., Prince, K. C., Stienkemeier, F., Ueda, K., Callegari, C., Möller, T. &amp; Rupp, D. (2019). <italic toggle="yes">Phys. Rev. E</italic>, <bold>99</bold>, 063309.</mixed-citation>
    </ref>
  </ref-list>
</back>
<floats-group>
  <fig position="float" id="fig1">
    <label>Figure 1</label>
    <caption>
      <p>Examples extracted from previous work that made use of the Scatman approach for wide-angle scattering data analysis. In (<italic toggle="yes">a</italic>), adapted from Barke <italic toggle="yes">et al.</italic> (2015<xref rid="bb3" ref-type="bibr"> ▸</xref>), soft X-rays are used to study the 3D structure of silver nanoparticles, by comparing the experimental data with the simulation. In (<italic toggle="yes">b</italic>), adapted from Rupp <italic toggle="yes">et al.</italic> (2017<xref rid="bb48" ref-type="bibr"> ▸</xref>), comparisons between experimental data and simulations demonstrated the feasibility of coherent diffraction imaging with high harmonic generation sources. In (<italic toggle="yes">c</italic>), adapted from Langbehn <italic toggle="yes">et al.</italic> (2018<xref rid="bb29" ref-type="bibr"> ▸</xref>), a fitting between the Scatman result and experimental diffraction patterns revealed the 3D shapes of superfluid helium nanodroplets.</p>
    </caption>
    <graphic xlink:href="j-55-01232-fig1" position="float"/>
  </fig>
  <fig position="float" id="fig2">
    <label>Figure 2</label>
    <caption>
      <p>Schematic representation of the Scatman’s MSFT approach. In (<italic toggle="yes">a</italic>), the sample as a whole is defined by its scattering strength ρ, which depends on the spatial distribution of the complex refractive index <italic toggle="yes">n</italic>. In (<italic toggle="yes">b</italic>), the sample is split into <italic toggle="yes">S</italic> slices, where, for each slice <italic toggle="yes">s</italic>, the scattering density <inline-formula><inline-graphic xlink:href="j-55-01232-efi12.jpg"/></inline-formula> is determined by the slice’s optical properties. In (<italic toggle="yes">c</italic>), the scattered far field is computed for each slice <italic toggle="yes">s</italic>. In the last step (<italic toggle="yes">d</italic>), the scattering of the slices is summed with a phase correction and subsequently squared to simulate the recorded diffraction pattern on the detector. For clarity of presentation, (<italic toggle="yes">c</italic>) only shows the scattering signal’s squared amplitude for every slice, while the actual scattered wavefield is still a complex function at this point.</p>
    </caption>
    <graphic xlink:href="j-55-01232-fig2" position="float"/>
  </fig>
  <fig position="float" id="fig3">
    <label>Figure 3</label>
    <caption>
      <p>Schematic view of wide-angle and small-angle regimes and of the notation used in this paper for the momentum vectors. The momentum transfer <inline-formula><inline-graphic xlink:href="j-55-01232-efi3.jpg"/></inline-formula> is defined as the difference between the incoming wavevector <inline-formula><inline-graphic xlink:href="j-55-01232-efi4.jpg"/></inline-formula> and the scattering vector <inline-formula><inline-graphic xlink:href="j-55-01232-efi90.jpg"/></inline-formula>. <inline-formula><inline-graphic xlink:href="j-55-01232-efi3.jpg"/></inline-formula> can be decomposed into its axial component <inline-formula><inline-graphic xlink:href="j-55-01232-efi92.jpg"/></inline-formula>, <italic toggle="yes">i.e.</italic> the component parallel to the incoming radiation assumed to travel along the <italic toggle="yes">z</italic> axis, and <inline-formula><inline-graphic xlink:href="j-55-01232-efi93.jpg"/></inline-formula>. The wide-angle regime is depicted in (<italic toggle="yes">a</italic>), where the axial component <inline-formula><inline-graphic xlink:href="j-55-01232-efi92.jpg"/></inline-formula> is non-negligible thanks to the large scattering angle θ. For comparison, (<italic toggle="yes">b</italic>) shows the same scheme in the small-angle regime, where the scattering angle θ is sufficiently small to neglect the axial component of <inline-formula><inline-graphic xlink:href="j-55-01232-efi3.jpg"/></inline-formula>. In both (<italic toggle="yes">a</italic>) and (<italic toggle="yes">b</italic>) the Ewald sphere is shown in gray.</p>
    </caption>
    <graphic xlink:href="j-55-01232-fig3" position="float"/>
  </fig>
  <fig position="float" id="fig4">
    <label>Figure 4</label>
    <caption>
      <p>A flowchart of the conceptual core of the Scatman in numerical form is shown. Yellow blocks indicate I/O operations. Green blocks contain data preparation. The main loop of the program, which carries out the majority of calculations, is highlighted in blue. Each block contains a pseudo-code schematically showing the numerical calculation. The abbreviation DFT stands for discrete Fourier transform, practically computed through the fast Fourier transform algorithm (Cooley &amp; Tukey, 1965<xref rid="bb15" ref-type="bibr"> ▸</xref>).</p>
    </caption>
    <graphic xlink:href="j-55-01232-fig4" position="float"/>
  </fig>
  <fig position="float" id="fig5">
    <label>Figure 5</label>
    <caption>
      <p>Comparison of radial profiles between the Scatman and Mie calculations. The figure is split into two rows that share a common legend, which is placed in between the rows. In the upper part, from (<italic toggle="yes">a</italic>) to (<italic toggle="yes">g</italic>), 28 radial profiles are shown that correspond to 28 combinations of δ and β for a fixed spherical target of radius 7λ. For each combination of δ and β the Scatman approximation along with the exact Mie results is plotted in solid and dotted lines, respectively. In the lower part, the seven subplots from the top part are translated into seven diffraction images in (<italic toggle="yes">h</italic>) to (<italic toggle="yes">n</italic>), where the intensity of the scattering signal is encoded in logarithmic color scale. Every diffraction image is partitioned into eight segments. These eight segments correspond to the eight line plots shown in the associated plot from the top row. Every δ/β pair combination takes up a quarter of every diffraction image, where the solid and dotted lines surrounding the diffraction image indicate that the quarter is showing either the approximation of the Scatman program (solid line) or the exact Mie solution (dotted line).</p>
    </caption>
    <graphic xlink:href="j-55-01232-fig5" position="float"/>
  </fig>
  <fig position="float" id="fig6">
    <label>Figure 6</label>
    <caption>
      <p>Listing 1: a fundamental <italic toggle="yes">PyScatman</italic> example. Here, we set up the experiment, define a detector function and calculate the MSFT simulation for an ellipsoidal sample.</p>
    </caption>
    <graphic xlink:href="j-55-01232-fig6" position="float"/>
  </fig>
  <fig position="float" id="fig8">
    <label>Figure 8</label>
    <caption>
      <p>Schematic of the orientation in space for the <monospace>latitude</monospace>, <monospace>longitude</monospace> and <monospace>rotation</monospace> properties of the shapes in the <italic toggle="yes">PyScatman</italic> module. A shape model is oriented by setting the direction in space of its main axis. This direction is defined through <monospace>latitude</monospace> and <monospace>longitude</monospace> parameters, expressed on a reference system where 90° latitude indicates a direction towards the incoming beam and, thus, −90° latitude is towards the detector. The equator of the reference system, at 0° latitude, lies on the plane orthogonal to the beam. Once the shape’s main axis is oriented, a rotation is applied to the sample along this axis. Here, the simulated sample reflects Earth’s elevation, to highlight the large flexibility that the <italic toggle="yes">PyScatman</italic> module offers in terms of how to define the target shape. The sample was modeled though an adaptation of <italic toggle="yes">ETOPO1</italic> data (Amante &amp; Eakins, 2009<xref rid="bb2" ref-type="bibr"> ▸</xref>), here in an exaggerated scale, which provides Earth’s elevation as a function of the Earth’s coordinates, and simulated by the use of the RadialMap shape model. See Fig. 9<xref rid="fig9" ref-type="fig"> ▸</xref> for further details on how to define such a shape.</p>
    </caption>
    <graphic xlink:href="j-55-01232-fig8" position="float"/>
  </fig>
  <fig position="float" id="fig7">
    <label>Figure 7</label>
    <caption>
      <p>Rendering of the shapes and their respective simulated diffraction patterns using two different detectors. From (<italic toggle="yes">a</italic>) to (<italic toggle="yes">d</italic>), the 3D rendering of the shape objects, defined using the Ellipsoid (<italic toggle="yes">a</italic>), SphericalHarmonics (<italic toggle="yes">b</italic>), RadialMap (<italic toggle="yes">c</italic>) and VolumeMap (<italic toggle="yes">d</italic>) models. The RadialMap example in (<italic toggle="yes">c</italic>) has an inset showing the array that was used for creating the shape, where the radius information is color coded. The corresponding diffraction patterns of samples (<italic toggle="yes">a</italic>)–(<italic toggle="yes">d</italic>), computed by <italic toggle="yes">PyScatman</italic> via the MSFT detector, are shown in (<italic toggle="yes">e</italic>)–(<italic toggle="yes">h</italic>). The third row, from (<italic toggle="yes">i</italic>) to (<italic toggle="yes">l</italic>), shows instead the equivalent simulation results provided by the Ideal detector. Here, the effects of photon statistics are clearly visible, along with the dependence on the value of the absorption coefficient. For example, the samples in (<italic toggle="yes">b</italic>) and (<italic toggle="yes">c</italic>) have an absorption coefficient <inline-formula><inline-graphic xlink:href="j-55-01232-efi96.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="j-55-01232-efi97.jpg"/></inline-formula>, respectively, which reflect a signal-to-noise ratio higher in (<italic toggle="yes">k</italic>) than in (<italic toggle="yes">j</italic>). Refer to the examples in the main text for further details.</p>
    </caption>
    <graphic xlink:href="j-55-01232-fig7" position="float"/>
  </fig>
  <fig position="float" id="fig9">
    <label>Figure 9</label>
    <caption>
      <p>Listing 2: a more advanced <italic toggle="yes">PyScatman</italic> example. Here, we calculate the MSFT diffraction images for various samples whose shapes are each defined in a different way.</p>
    </caption>
    <graphic xlink:href="j-55-01232-fig9" position="float"/>
  </fig>
  <fig position="float" id="fig10">
    <label>Figure 10</label>
    <caption>
      <p>In (<italic toggle="yes">a</italic>), timing results for the shapes presented as examples in listing 1 and listing 2. The time to solution is shown in logarithmic scale versus the different shape types. In (<italic toggle="yes">b</italic>), timing results for a shape defined through the SphericalHarmonics model are given. The harmonics coefficients are the same as in the example presented in the main text, but the shape is scaled to get different average radii, indicated on the lower <italic toggle="yes">x</italic> axis in units of the wavelength λ. Results are presented for four different simulation resolutions, from 256 × 256 px up to 2048 × 2048 px, labeled on the upper <italic toggle="yes">x</italic> axis.</p>
    </caption>
    <graphic xlink:href="j-55-01232-fig10" position="float"/>
  </fig>
</floats-group>

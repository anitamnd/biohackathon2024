<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v2.3 20070202//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName journalpublishing.dtd?>
<?SourceDTD.Version 2.3?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-id journal-id-type="hwp">bioinfo</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">4542783</article-id>
    <article-id pub-id-type="pmid">26072510</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btv261</article-id>
    <article-id pub-id-type="publisher-id">btv261</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Ismb/Eccb 2015 Proceedings Papers Committee July 10 to July 14, 2015, Dublin, Ireland</subject>
        <subj-group subj-group-type="heading">
          <subject>Genes</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Reconstruction of clonal trees and tumor composition from multi-sample sequencing data</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>El-Kebir</surname>
          <given-names>Mohammed</given-names>
        </name>
        <xref ref-type="author-notes" rid="btv261-FN1">
          <sup>†</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Oesper</surname>
          <given-names>Layla</given-names>
        </name>
        <xref ref-type="author-notes" rid="btv261-FN1">
          <sup>†</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Acheson-Field</surname>
          <given-names>Hannah</given-names>
        </name>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Raphael</surname>
          <given-names>Benjamin J.</given-names>
        </name>
        <xref ref-type="corresp" rid="btv261-COR1">*</xref>
      </contrib>
      <aff>Center for Computational Molecular Biology and Department of Computer Science, Brown University, Providence, RI 02912, USA</aff>
    </contrib-group>
    <author-notes>
      <corresp id="btv261-COR1">*To whom correspondence should be addressed.</corresp>
      <fn id="btv261-FN1">
        <p><sup>†</sup>The authors wish it to be known that, in their opinion, the first two authors should be regarded as Joint First Authors.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="ppub">
      <day>15</day>
      <month>6</month>
      <year>2015</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>10</day>
      <month>6</month>
      <year>2015</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>10</day>
      <month>6</month>
      <year>2015</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the
							<pub-date pub-type="epub"/>. -->
    <volume>31</volume>
    <issue>12</issue>
    <fpage>i62</fpage>
    <lpage>i70</lpage>
    <permissions>
      <copyright-statement>© The Author 2015. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2015</copyright-year>
      <license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by-nc/3.0/">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License(<uri xlink:type="simple" xlink:href="http://creativecommons.org/licenses/by-nc/3.0/">http://creativecommons.org/licenses/by-nc/3.0/</uri>),which permits non-commercial reuse, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.com</license-p>
      </license>
    </permissions>
    <abstract>
      <p><bold>Motivation:</bold> DNA sequencing of multiple samples from the same tumor provides data to analyze the process of clonal evolution in the population of cells that give rise to a tumor.</p>
      <p><bold>Results:</bold> We formalize the problem of reconstructing the clonal evolution of a tumor using single-nucleotide mutations as the variant allele frequency (VAF) factorization problem. We derive a combinatorial characterization of the solutions to this problem and show that the problem is NP-complete. We derive an integer linear programming solution to the VAF factorization problem in the case of error-free data and extend this solution to real data with a probabilistic model for errors. The resulting AncesTree algorithm is better able to identify ancestral relationships between individual mutations than existing approaches, particularly in ultra-deep sequencing data when high read counts for mutations yield high confidence VAFs.</p>
      <p><bold>Availability and implementation:</bold> An implementation of AncesTree is available at: <ext-link ext-link-type="uri" xlink:href="http://compbio.cs.brown.edu/software">http://compbio.cs.brown.edu/software</ext-link>.</p>
      <p>
        <bold>Contact:</bold>
        <email>braphael@brown.edu</email>
      </p>
      <p><bold>Supplementary information:</bold><ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv261/-/DC1">Supplementary data</ext-link> are available at <italic>Bioinformatics</italic> online.</p>
    </abstract>
    <counts>
      <page-count count="9"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Cancer is a disease resulting from <italic>somatic mutations</italic> that accumulate during an individual’s lifetime and lead to uncontrolled growth of a collection of cells into a tumor. The clonal theory of cancer (<xref rid="btv261-B15" ref-type="bibr">Nowell, 1976</xref>) predicts that all cells within a tumor have descended from a single founder cell and that subsequent <italic>clonal expansions</italic> occur from additional advantageous mutations. As a result, the cells within a tumor may differ in their complement of somatic mutations, with each cell being a descendant of a <italic>clone</italic> from a clonal expansion (<xref ref-type="fig" rid="btv261-F1">Fig. 1</xref>A). High-coverage sequencing of tumor genomes allows one to study this <italic>intra-tumor heterogeneity</italic> by measuring the frequencies of mutations within a tumor (<xref rid="btv261-B2" ref-type="bibr">Ding <italic>et al.</italic>, 2012</xref>; <xref rid="btv261-B14" ref-type="bibr">Nik-Zainal <italic>et al.</italic>, 2012</xref>; <xref rid="btv261-B21" ref-type="bibr">Shah <italic>et al.</italic>, 2012</xref>). Characterization of intra-tumor heterogeneity and inference of the clonal evolutionary history of somatic mutations within a tumor provide useful insight in the tumor’s development and may help inform treatment.
<fig id="btv261-F1" position="float"><label>Fig. 1.</label><caption><p><bold>Model for clonal evolution and inference.</bold> (<bold>A</bold>) An example of the evolution of a tumor containing seven distinct clones. Passenger mutations (white) occurring before the first clonal expansion will be indistinguishable from mutations driving the growth of the founding clone (light blue). Each subsequent mutation (green, purple, dark blue, orange, red and tan) creates a new clone. (<bold>B</bold>) Three sequenced tumor samples. Some clones may no longer exist at the time of sequencing (orange). Samples 1 and 2 each contain a single clone (purple and blue respectively), whereas Sample 3 is a mixture of three clones (light blue, red and tan). (<bold>C</bold>) The frequency matrix <italic>F</italic> observed for the three sequenced samples indicated in part B. (<bold>D</bold>) The usage matrix <italic>U</italic> and clonal matrix <italic>B</italic> that generate <italic>F</italic>. Even though some clones existing at the current time may not be contained within a sequenced sample (green), their existence in the evolutionary history of the tumor may be recovered. (<bold>E</bold>) Tree of the inferred tumor clones. Solid black edges are the clonal tree <italic>T</italic> corresponding to the clonal matrix <italic>B</italic>. Gray dashed edges indicate internal vertices used in the mixing of some sample. The number next to each clone in each sample indicates the fraction of cells in the sample from that clone. (<bold>F</bold>) The ancestry graph for the observed data. The bold arcs indicate the spanning arborescence corresponding to <italic>T</italic></p></caption><graphic xlink:href="btv261f1p"/></fig>
</p>
    <p>Somatic mutations are typically measured in human solid tumors only at a single time point, when the patient undergoes surgery. Therefore, clonal evolution is not directly observed and one is faced with the problem of inferring the ancestral relationships between cells in a tumor from measurements at one time point. This is the problem of phylogenetic tree reconstruction, a well-studied problem. The direct application of phylogenetic methods requires that we measure mutations in individual cancer cells that correspond to the leaves (species) of the phylogenetic tree. However, because of technical limitations and financial considerations, single-cell sequencing of tumors remains uncommon (<xref rid="btv261-B12" ref-type="bibr">Navin, 2014</xref>; <xref rid="btv261-B23" ref-type="bibr">Wang <italic>et al.</italic>, 2014</xref>) with nearly all cancer sequencing studies—including studies such as TCGA and ICGC—sequencing a small number of samples from a bulk tumor, each containing potentially millions of cells. Thus, the data one obtains represent the mutations in a mixture of cells with potentially distinct evolutionary histories.</p>
    <p>Given sequencing data from a <italic>single</italic> sample, a number of methods have been developed to determine the set of clones and their frequencies in a tumor. Some methods analyze changes in the variant allele frequencies (VAFs) of single-nucleotide mutations; i.e. the fraction of tumor cells that contain each mutation (<xref rid="btv261-B11" ref-type="bibr">Miller <italic>et al.</italic>, 2014</xref>; <xref rid="btv261-B19" ref-type="bibr">Roth <italic>et al.</italic>, 2014</xref>). Other approaches analyze differences in read depth due to copy number aberrations (<xref rid="btv261-B16" ref-type="bibr">Oesper <italic>et al.</italic>, 2013</xref>, <xref rid="btv261-B17" ref-type="bibr">2014</xref>). More detailed inference of clonal evolution from a single sample requires additional assumptions about the evolutionary process, such as parsimony (<xref rid="btv261-B8" ref-type="bibr">Hajirasouliha <italic>et al.</italic>, 2014</xref>; <xref rid="btv261-B22" ref-type="bibr">Strino <italic>et al.</italic>, 2013</xref>).</p>
    <p>Recently, several studies have sequenced <italic>multiple</italic> samples from the same tumor. These studies measure somatic mutations in multiple spatially distinct regions from the same tumor at a single time point (<xref rid="btv261-B3" ref-type="bibr">Gerlinger <italic>et al.</italic>, 2012</xref>, <xref rid="btv261-B4" ref-type="bibr">2014</xref>; <xref rid="btv261-B13" ref-type="bibr">Newburger <italic>et al.</italic>, 2013</xref>; <xref rid="btv261-B26" ref-type="bibr">Zhang <italic>et al.</italic>, 2014</xref>) or measure a tumor at multiple time points (<xref rid="btv261-B20" ref-type="bibr">Schuh <italic>et al.</italic>, 2012</xref>). Multi-sample data allow for the direct observation of branched evolution when mutations are present in only a subset of the sequenced samples. Although standard phylogenetic techniques have been used to construct trees that relate these samples, such trees do not directly show the relationships between mutations, as each sequenced sample may itself be a heterogeneous mixture of cells (<xref ref-type="fig" rid="btv261-F1">Fig. 1</xref>B).</p>
    <p>Several methods have recently been introduced to infer tumor composition and evolution from VAFs of somatic mutations in multi-sample sequencing data. Clomial (<xref rid="btv261-B25" ref-type="bibr">Zare <italic>et al.</italic>, 2014</xref>) infers the set of clones present in the tumor and their frequencies in each sample but does not describe the evolutionary relationships between the clones. Three recent approaches infer a tree describing the evolutionary history of a tumor. PhyloSub uses a Bayesian approach to sample trees using a tree-structured process (<xref rid="btv261-B9" ref-type="bibr">Jiao <italic>et al.</italic>, 2014</xref>). CITUP (<xref rid="btv261-B10" ref-type="bibr">Malikic <italic>et al.</italic>, 2015</xref>) enumerates all rooted trees and for each one solves a quadratic program. LICHeE, which recently appeared on the arXiv preprint server (<xref rid="btv261-B18" ref-type="bibr">Popic <italic>et al.</italic>, 2014</xref>), uses a graph construction similar to one we describe below but does not provide a rigorous mathematical justification for it. All these approaches are data driven and focus on the construction and optimization of models that minimize the error between the observed and inferred mutation frequencies. However, they do not address the combinatorial structure of the problem. Stated more directly: given error-free VAF data, under what conditions is it possible to reconstruct the clonal evolution of a tumor?</p>
    <p>We formalize the problem of reconstructing the clonal evolution of a tumor as the VAF factorization problem (VAFFP). The input to this problem are the VAFs for individual somatic mutations from one or more samples. The problem is to determine the composition of each sample, including the number and proportion of clones in each, and a tree that describes the ancestral relationships between all clones under the infinite sites (perfect phylogeny) assumption.</p>
    <p>We prove necessary and sufficient conditions for the VAFFP to have a solution in the case of error-free data. Using these conditions, we provide a combinatorial characterization of the space of all solutions. We show that the VAFFP is NP-complete and give an integer linear programming formulation. We extend the characterization and formulation to noisy data and use a graph clustering approach to cluster mutations by their putative ancestral relationships. We show that our resulting AncesTree algorithm is better able to identify ancestral relationships between individual mutations than existing approaches on simulated data. On real data, we highlight the advantages of our probabilistic model by comparing whole-exome and deep sequencing data from the same tumor, identifying successive clonal expansions and diverse mixing of clones within sequenced samples.</p>
  </sec>
  <sec>
    <title>2 Methods</title>
    <sec id="SEC2.1">
      <title>2.1 Model for clonal evolution and inference</title>
      <p>In this section, we describe a model for the accumulation of single-nucleotide somatic mutations in a tumor and the generation of sequencing data from the tumor. This leads us to the definition of the VAFFP at the conclusion of the section.</p>
      <p>Following the clonal theory of cancer, we assume that all cancer cells in a tumor are descendants of a single founding clone; i.e. the tumor is <italic>monoclonal</italic>. In this work, we model only somatic single-nucleotide mutations and assume that these are unaffected by copy number aberrations or rearrangements in the cancer genome. We will use <italic>mutation</italic> to refer specifically to these events. We assume, as in previous work (<xref rid="btv261-B8" ref-type="bibr">Hajirasouliha <italic>et al.</italic>, 2014</xref>; <xref rid="btv261-B9" ref-type="bibr">Jiao <italic>et al.</italic>, 2014</xref>; <xref rid="btv261-B10" ref-type="bibr">Malikic <italic>et al.</italic>, 2015</xref>), that mutations satisfy the <italic>infinite sites assumption</italic>, which states that a mutation occurs at a single genomic position, or locus, at most once during the clonal evolution of the tumor. We encode the state of a specific locus in a clone as a binary value—where 1 indicates a somatic mutation at that position and 0 indicates no mutation. Thus, each clone corresponds to a binary vector in <inline-formula><mml:math id="MM1"><mml:mrow><mml:msup><mml:mrow><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo></mml:mrow><mml:mi>n</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula>, where <italic>n</italic> is the total number of loci affected by mutations.</p>
      <p>Under these assumptions, the ancestral relationships between clones are described by a phylogenetic tree where (i) vertices represent different tumor clones that have existed during the tumor’s evolution and (ii) edges represent the direct ancestral relationships between clones and are labeled with the mutation(s) that distinguishes the child from its parent (<xref ref-type="fig" rid="btv261-F1">Fig. 1</xref>A). In practice, we will group individual mutations into sets that satisfy the second condition and consider these as individual mutations. Thus, we describe the mutational process that produced a tumor by an <italic>n-clonal tree T</italic>, which we define as follows.
<statement><title>D<sc>efinition</sc> 1</title><p><italic>A rooted tree T on n vertices is an n-clonal tree for a mutation set</italic><inline-formula><mml:math id="MM2"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula><italic>provided each edge is labeled with exactly one mutation from</italic><inline-formula><mml:math id="MM3"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula><italic>and no mutation appears more than once in T. Let</italic><inline-formula><mml:math id="MM4"><mml:mrow><mml:msub><mml:mi mathvariant="script">T</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula><italic>be the set of all n-clonal trees.</italic></p></statement>
</p>
      <p>We denote the root vertex of an <italic>n</italic>-clonal tree by <italic>v<sub>r</sub></italic> where <inline-formula><mml:math id="MM5"><mml:mrow><mml:mi>r</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> is the mutation that does not label any edge in <italic>T</italic>. We denote the remaining vertices by <italic>v<sub>j</sub></italic> where <inline-formula><mml:math id="MM6"><mml:mrow><mml:mi>j</mml:mi><mml:mo>≠</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:math></inline-formula> is the mutation on the last edge of the path from <italic>v<sub>r</sub></italic> to <italic>v<sub>j</sub></italic>. Note that the set of mutations present in a clone <italic>v<sub>j</sub></italic> is the set of mutations of all vertices on the path from <italic>v<sub>r</sub></italic> to <italic>v<sub>j</sub></italic>. The root vertex <italic>v<sub>r</sub></italic> contains only mutation <italic>r</italic> and thus represents the <italic>founding clone</italic>.</p>
      <p>Alternatively, we may describe the <italic>n</italic>-clonal tree <italic>T</italic> by an <italic>n</italic> × <italic>n</italic> binary matrix <italic>B</italic>. We label the vertices of <italic>T</italic> by binary row vectors indicating the mutations present in each vertex (clone). Each vertex <italic>v<sub>j</sub></italic> corresponds to a binary row vector <inline-formula><mml:math id="MM7"><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>b</mml:mi></mml:mstyle><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> with 1’s at the <inline-formula><mml:math id="MM8"><mml:mrow><mml:mi>r</mml:mi><mml:mtext>th</mml:mtext></mml:mrow></mml:math></inline-formula> position and positions indicated by the edge labels of the unique path from <italic>v<sub>r</sub></italic> to <italic>v<sub>j</sub></italic> and 0’s at the remaining positions. Let <italic>B</italic> be the <italic>n</italic> × <italic>n</italic> binary matrix whose <inline-formula><mml:math id="MM9"><mml:mrow><mml:mi>j</mml:mi><mml:mtext>th</mml:mtext></mml:mrow></mml:math></inline-formula> row is <inline-formula><mml:math id="MM10"><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>b</mml:mi></mml:mstyle><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>. As the mutations adhere to the infinite sites assumption, it follows that <italic>B</italic> is a <italic>perfect phylogeny matrix</italic> (<xref rid="btv261-B5" ref-type="bibr">Gusfield, 1991</xref>). That is, for a column <italic>j</italic> of <italic>B</italic>, let <italic>I</italic>(<italic>j</italic>) be the positions of the 1 entries. Then for any pair of columns <italic>j</italic> and <italic>k</italic> of <italic>B</italic> either <italic>I</italic>(<italic>j</italic>) and <italic>I</italic>(<italic>k</italic>) are disjoint, or one contains the other.</p>
      <p>Not every <italic>n</italic> × <italic>n</italic> perfect phylogeny matrix corresponds to a <italic>n</italic>-clonal tree <italic>T</italic>. For example, a perfect phylogeny matrix may have a row and/or column of all 0’s or have duplicated rows and/or columns. We define a subset of <italic>n</italic> × <italic>n</italic> perfect phylogeny matrices, which we call <italic>n</italic>-clonal matrices that are in 1-1 correspondence with <italic>n</italic>-clonal trees <italic>T</italic>.
<statement><title>D<sc>efinition</sc> 2</title><p><italic>A matrix</italic><inline-formula><mml:math id="MM11"><mml:mrow><mml:mi>B</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>×</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula><italic>is an n-clonal matrix provided:</italic><list list-type="order"><list-item><p><italic>There exists exactly one</italic><inline-formula><mml:math id="MM12"><mml:mrow><mml:mi>r</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula><italic>such that</italic><inline-formula><mml:math id="MM13"><mml:mrow><mml:mstyle displaystyle="false"><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:msubsup><mml:mrow><mml:msub><mml:mi>b</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula><italic>.</italic></p></list-item><list-item><p><italic>For each</italic><inline-formula><mml:math id="MM14"><mml:mrow><mml:mi>j</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mi mathvariant="normal">∖</mml:mi><mml:mo>{</mml:mo><mml:mi>r</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula><italic>there exists exactly one</italic><inline-formula><mml:math id="MM15"><mml:mrow><mml:mi>k</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula><italic>such that</italic><inline-formula><mml:math id="MM16"><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>b</mml:mi></mml:mstyle><mml:mi>k</mml:mi></mml:msub><mml:mo>⊆</mml:mo><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>b</mml:mi></mml:mstyle><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula><italic>and</italic><inline-formula><mml:math id="MM17"><mml:mrow><mml:mstyle displaystyle="false"><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>l</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:msubsup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>b</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>b</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula><italic>.</italic></p></list-item><list-item><p><italic>b<sub>jj</sub> = 1 for all</italic><inline-formula><mml:math id="MM18"><mml:mrow><mml:mi>j</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula><italic>.</italic></p></list-item></list></p><p><italic>Let</italic><inline-formula><mml:math id="MM19"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula><italic>be the set of all n-clonal matrices.</italic></p></statement>
</p>
      <p>The second condition above ensures that every <italic>n</italic>-clonal matrix is a perfect phylogeny matrix. We have the following lemmas, which we prove in the <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv261/-/DC1">Supplementary Appendix</ext-link>.
<statement><title>L<sc>emma</sc> 1</title><p><italic>There is a one-to-one correspondence between</italic><inline-formula><mml:math id="MM20"><mml:mrow><mml:msub><mml:mi mathvariant="script">T</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula><italic>and</italic><inline-formula><mml:math id="MM21"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula><italic>.</italic></p></statement>
<statement><title>L<sc>emma</sc> 2</title><p><italic>Any</italic><inline-formula><mml:math id="MM22"><mml:mrow><mml:mi>B</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula><italic>has rank n.</italic></p></statement>
</p>
      <p><xref ref-type="fig" rid="btv261-F1">Figure 1</xref>D and E show a clonal matrix together with its corresponding clonal tree.</p>
      <sec id="SEC2.1.1">
        <title>2.1.1 Measurement of clonal trees</title>
        <p>We do not directly observe the clonal tree <italic>T</italic> relating the clones in a tumor. Moreover, unless we perform single-cell sequencing, we do not directly measure the presence/absence of mutations in individual clones. Rather, each sequenced sample is a mixture of cancer cells (clones) and normal cells. We obtain VAFs or the fraction of reads covering a position that indicate the variant/mutation at each of the mutation sites in each of the samples. The VAF for a mutation is proportional to the <italic>cellular prevalence</italic> or fraction of cells in the sample that contain the mutation. Suppose we sequence <italic>m</italic> samples from a tumor with <italic>n</italic> mutations sites. Our observations are then described by an <italic>m</italic> × <italic>n frequency matrix</italic>
<inline-formula><mml:math id="MM23"><mml:mrow><mml:mi>F</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula>, where <italic>f<sub>pi</sub></italic> indicates the observed VAF in sample <italic>p</italic> for the <inline-formula><mml:math id="MM24"><mml:mrow><mml:mi>i</mml:mi><mml:mtext>th</mml:mtext></mml:mrow></mml:math></inline-formula> mutation (<xref ref-type="fig" rid="btv261-F1">Fig. 1</xref>C).</p>
        <p>The observed mutation frequencies (entries of <italic>F</italic>) are related to the tree <italic>T</italic> by the proportions of normal cells and tumor clones that define the mixture in each sample. We define an <italic>m</italic> × <italic>n</italic> usage matrix <inline-formula><mml:math id="MM25"><mml:mrow><mml:mi>U</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula>, where <italic>u<sub>pi</sub></italic> indicates the fraction of cells in sample <italic>p</italic> that come from clone <italic>v<sub>i</sub></italic>, as follows.
<statement><title>D<sc>efinition</sc> 3</title><p><italic>An m × n matrix</italic><inline-formula><mml:math id="MM26"><mml:mrow><mml:mi>U</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula><italic>is a usage matrix provided</italic><inline-formula><mml:math id="MM27"><mml:mrow><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>≥</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula><italic>and</italic><inline-formula><mml:math id="MM28"><mml:mrow><mml:mstyle displaystyle="false"><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:msubsup><mml:mrow><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mo>≤</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula><italic>. Let</italic><inline-formula><mml:math id="MM29"><mml:mrow><mml:msub><mml:mi mathvariant="script">U</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula><italic>be the set of all m × n usage matrices U.</italic></p></statement>
</p>
        <p>Since each sequenced sample is a mixture of clones from <italic>T</italic> with proportions defined in the usage matrix <italic>U</italic>, the observed frequency matrix <inline-formula><mml:math id="MM30"><mml:mrow><mml:mi>F</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> satisfies
<disp-formula id="btv261-M1"><label>(1)</label><mml:math id="MM31"><mml:mrow><mml:mi>F</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mi>U</mml:mi><mml:mi>B</mml:mi><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula>
The coefficient <inline-formula><mml:math id="MM32"><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:math></inline-formula> arises because, by the infinite sites assumption, all mutations are heterozygous, and thus each <inline-formula><mml:math id="MM33"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>0.5</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula>.</p>
        <p>Assuming no errors in <italic>F</italic>, our goal is to find <italic>U</italic> and <italic>B</italic> satisfying (1). We define this problem as follows (<xref ref-type="fig" rid="btv261-F1">Fig. 1</xref>D).
<statement><title>V<sc>ariant</sc> A<sc>llele</sc> F<sc>requency</sc> F<sc>actorization</sc> P<sc>roblem</sc></title><p><italic>Given an m × n frequency matrix F, find a usage matrix</italic><inline-formula><mml:math id="MM34"><mml:mrow><mml:mi>U</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">U</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula><italic>and a clonal matrix</italic><inline-formula><mml:math id="MM35"><mml:mrow><mml:mi>B</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula><italic>such that</italic><inline-formula><mml:math id="MM36"><mml:mrow><mml:mi>F</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mi>U</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:math></inline-formula><italic>.</italic></p></statement>
</p>
        <p>Without loss of generality, we assume that the rows and columns of any frequency matrix <italic>F</italic> are distinct, as duplicated rows or columns can be collapsed.</p>
        <p>The VAFFP formalizes and generalizes several problems that have previously been considered in the literature. In the case of <italic>m</italic> = 1 sample, <xref rid="btv261-B22" ref-type="bibr">Strino <italic>et al.</italic> (2013)</xref> and <xref rid="btv261-B8" ref-type="bibr">Hajirasouliha <italic>et al.</italic> (2014)</xref> address the problem of minimizing the number of non-zero entries in <italic>U</italic>, with <xref rid="btv261-B22" ref-type="bibr">Strino <italic>et al.</italic> (2013)</xref> breaking ties in favor of solutions whose clonal trees have minimum depth. <xref rid="btv261-B7" ref-type="bibr">Hajirasouliha and Raphael (2014)</xref> introduce the Perfect Phylogeny Mixture Problem, which can be described as a variant of the VAFFP where <italic>F</italic> is binary (a mutation is either observed or not) and additional constraints are placed on the usage matrix <italic>U</italic>. In the case of <italic>m</italic> &gt; 1 sample, PhyloSub (<xref rid="btv261-B9" ref-type="bibr">Jiao <italic>et al.</italic>, 2014</xref>) and CITUP (<xref rid="btv261-B10" ref-type="bibr">Malikic <italic>et al.</italic>, 2015</xref>) minimize the distance between the observed and inferred <italic>F</italic> while adhering to the VAFFP. Below we provide further details of the relationships between the various approaches.</p>
      </sec>
    </sec>
    <sec id="SEC2.2">
      <title>2.2 Solving the VAFFP</title>
      <p>In this section, we derive a characterization of the solutions of the VAFFP (Theorem 1 below) as constrained spanning arborescences of a directed acyclic graph (DAG) called the ancestry graph (Definition 4 below). From this characterization, we prove that the VAFFP is NP-complete (Theorem 2 below) and give an exact algorithm for solving the problem.</p>
      <sec id="SEC2.2.1">
        <title>2.2.1 A necessary condition and the ancestry graph</title>
        <p>We say that <italic>B</italic> (or <italic>T</italic>) <italic>generates F</italic> if and only if there exists a matrix <inline-formula><mml:math id="MM37"><mml:mrow><mml:mi>U</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">U</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> such that <inline-formula><mml:math id="MM38"><mml:mrow><mml:mi>F</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mi>U</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:math></inline-formula>. To obtain a characterization of all solutions of the VAFFP, we first define several properties that relate the observed values of <italic>F</italic> to any clonal tree <italic>T</italic> that generates <italic>F</italic>.</p>
        <p>We start by observing that any <italic>T</italic> induces a partial ordering on the vertices. That is, for <inline-formula><mml:math id="MM39"><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>,</mml:mo><mml:mtext> </mml:mtext><mml:mi>j</mml:mi><mml:msub><mml:mo>≺</mml:mo><mml:mi>T</mml:mi></mml:msub><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula> if and only if vertex <italic>v<sub>j</sub></italic> is an ancestor of vertex <italic>v<sub>k</sub></italic>. Conversely, we say that <italic>j</italic> and <italic>k</italic> are <italic>incomparable</italic> if and only if neither <italic>v<sub>j</sub></italic> nor <italic>v<sub>k</sub></italic> is an ancestor to the other. Because <italic>B</italic> is a perfect phylogeny matrix, there is a partial order on the columns of <italic>B</italic> (<xref rid="btv261-B6" ref-type="bibr">Gusfield, 1997</xref>). That is, for <inline-formula><mml:math id="MM40"><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula>, we have <inline-formula><mml:math id="MM41"><mml:mrow><mml:mi>j</mml:mi><mml:msub><mml:mo>≺</mml:mo><mml:mi>B</mml:mi></mml:msub><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula> if and only if <inline-formula><mml:math id="MM42"><mml:mrow><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>⊇</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. Similarly, <italic>j</italic> and <italic>k</italic> are incomparable if and only if <inline-formula><mml:math id="MM43"><mml:mrow><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:menclose notation="updiagonalstrike"><mml:mo>⊇</mml:mo></mml:menclose><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="MM44"><mml:mrow><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:menclose notation="updiagonalstrike"><mml:mo>⊇</mml:mo></mml:menclose><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. From Lemma 1, it follows that <inline-formula><mml:math id="MM45"><mml:mrow><mml:mi>j</mml:mi><mml:msub><mml:mo>≺</mml:mo><mml:mi>T</mml:mi></mml:msub><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula> if and only if <inline-formula><mml:math id="MM46"><mml:mrow><mml:mi>j</mml:mi><mml:msub><mml:mo>≺</mml:mo><mml:mi>B</mml:mi></mml:msub><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula> for all <inline-formula><mml:math id="MM47"><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula>. Therefore, we will use <inline-formula><mml:math id="MM48"><mml:mo>≺</mml:mo></mml:math></inline-formula> to denote either one. We now prove the following condition.
<statement><title>A<sc>ncestry</sc> C<sc>ondition</sc></title><p><italic>If T generates F and</italic><inline-formula><mml:math id="MM49"><mml:mrow><mml:mi>j</mml:mi><mml:msub><mml:mo>≺</mml:mo><mml:mi>T</mml:mi></mml:msub><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula><italic>then</italic><inline-formula><mml:math id="MM50"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>≥</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula><italic>for all samples</italic><inline-formula><mml:math id="MM51"><mml:mrow><mml:mi>p</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula><italic>.</italic></p></statement>
<statement><title>P<sc>roof</sc></title><p>Since <inline-formula><mml:math id="MM52"><mml:mrow><mml:mi>j</mml:mi><mml:msub><mml:mo>≺</mml:mo><mml:mi>T</mml:mi></mml:msub><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="MM53"><mml:mrow><mml:mi>j</mml:mi><mml:msub><mml:mo>≺</mml:mo><mml:mi>B</mml:mi></mml:msub><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula> are equivalent, then <inline-formula><mml:math id="MM54"><mml:mrow><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>⊇</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. Moreover, because every entry in <italic>U</italic> is non-negative, we have the following for all samples <inline-formula><mml:math id="MM55"><mml:mrow><mml:mi>p</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula>:
<disp-formula><mml:math id="MM56"><mml:mtable columnalign="left"><mml:mtr><mml:mtd><mml:maligngroup/><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:malignmark/><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover><mml:mrow><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mo>·</mml:mo><mml:msub><mml:mi>b</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mrow><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:maligngroup/><mml:malignmark/><mml:mtext> </mml:mtext><mml:mo>≥</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mrow><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover><mml:mrow><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mo>·</mml:mo><mml:msub><mml:mi>b</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>.</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula>
</p></statement>
</p>
        <p>The contrapositive of the Ancestry Condition for two distinct samples yields the following corollary which is equivalent to the ‘crossing rule’ stated in <xref rid="btv261-B9" ref-type="bibr">Jiao <italic>et al.</italic> (2014)</xref>.
<statement><title>C<sc>orollary</sc> 1</title><p><italic>If T generates F and there exist samples</italic><inline-formula><mml:math id="MM57"><mml:mrow><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula><italic>and mutations</italic><inline-formula><mml:math id="MM58"><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula><italic>such that f<sub>pj</sub> &gt; f<sub>pk</sub> and f<sub>qj</sub> &lt; f<sub>qk</sub> then j and k are incomparable.</italic></p></statement>
</p>
        <p>We summarize all possible ancestral relationships between mutations in <italic>F</italic> in a graph (<xref ref-type="fig" rid="btv261-F1">Fig. 1</xref>F).
<statement><title>D<sc>efinition</sc> 4</title><p><italic>Given an m × n frequency matrix F, the ancestry graph</italic><inline-formula><mml:math id="MM59"><mml:mrow><mml:mi>G</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula><italic>is the directed graph with vertices</italic><inline-formula><mml:math id="MM60"><mml:mrow><mml:mi>V</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula><italic>and arcs</italic><inline-formula><mml:math id="MM61"><mml:mrow><mml:mi>A</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>|</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>≥</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mtext>for all </mml:mtext><mml:mi>p</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula><italic>.</italic></p></statement>
</p>
        <p>The following observation which will be useful in the following section.
<statement><title>O<sc>bservation </sc>1</title><p>If all columns of a frequency matrix F are distinct then the ancestry graph G is a DAG.</p></statement>
</p>
        <p>A <italic>spanning arborescence</italic> of the ancestry graph G is a subgraph <inline-formula><mml:math id="MM62"><mml:mrow><mml:mi>G</mml:mi><mml:mo>′</mml:mo><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>A</mml:mi><mml:mo>′</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="MM63"><mml:mrow><mml:mi>A</mml:mi><mml:mo>′</mml:mo><mml:mo>⊆</mml:mo><mml:mi>A</mml:mi></mml:mrow></mml:math></inline-formula><italic>,</italic> such that there exists a unique path from the root vertex <italic>v<sub>r</sub></italic> to every vertex <inline-formula><mml:math id="MM64"><mml:mrow><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math></inline-formula>.
<statement><title>L<sc>emma </sc>3</title><p>If T generates F then T is a spanning arborescence of G.</p></statement>
<statement><title>P<sc>roof</sc></title><p>Let <italic>T</italic> be a tree that generates <italic>F</italic>. Suppose for the sake of contradiction that <italic>T</italic> is not a spanning arborescence of <italic>G</italic>. Thus, there exists an edge (<italic>v<sub>j</sub></italic>, <italic>v<sub>k</sub></italic>) in <italic>T</italic> with <inline-formula><mml:math id="MM65"><mml:mrow><mml:mi>j</mml:mi><mml:mo>≺</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula> such that <inline-formula><mml:math id="MM66"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>∉</mml:mo><mml:mi>A</mml:mi></mml:mrow></mml:math></inline-formula>. By definition of <italic>A</italic> there must exist <inline-formula><mml:math id="MM67"><mml:mrow><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> such that <italic>f<sub>pj</sub></italic> &lt; <italic>f<sub>pk</sub></italic> and <italic>f<sub>qj</sub></italic> &gt; <italic>f<sub>qk</sub></italic>. By Corollary 1, <italic>j</italic> and <italic>k</italic> are incomparable—a contradiction. Hence, <italic>T</italic> must be a spanning arborescence of <italic>G</italic>.</p></statement>
</p>
        <p>If an ancestry graph <inline-formula><mml:math id="MM68"><mml:mrow><mml:mi>G</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> does not have a spanning arborescence then there exists no tree <italic>T</italic> that generates <italic>F</italic>. Checking whether <italic>G</italic> has a spanning, arborescence can be done in <inline-formula><mml:math id="MM69"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo>|</mml:mo><mml:mi>A</mml:mi><mml:mo>|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> time since by definition <italic>A</italic> contains all transitive arcs. <xref ref-type="fig" rid="btv261-F2">Figure 2</xref>A shows an example of a frequency matrix whose ancestry graph has no spanning arborescence. Furthermore, not all spanning arborescences <italic>T</italic> of <italic>G</italic> generate <italic>F</italic>. <xref ref-type="fig" rid="btv261-F2">Figure 2</xref>B shows such an example, where the matrix <italic>U</italic> obtained from <italic>T</italic> and <italic>F</italic> has negative entries and thus is not a usage matrix. Hence, the existence of a spanning arborescence in <italic>G</italic> is a necessary but <italic>not</italic> a sufficient condition for a solution to the VAFFP.
<fig id="btv261-F2" position="float"><label>Fig. 2.</label><caption><p><bold>Spanning arborescences of the ancestry graph.</bold> (<bold>A</bold>) <italic>F</italic> cannot be factorized as its ancestry graph does not admit a spanning arborescence. (<bold>B</bold>) Red arcs indicate a spanning arborescence <italic>T</italic> of the ancestry graph of <italic>F</italic> with corresponding matrix <italic>B</italic>. <italic>B</italic> does not generate <italic>F</italic> as the matrix <inline-formula><mml:math id="MM70"><mml:mrow><mml:mi>U</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:mi>F</mml:mi><mml:msup><mml:mi>B</mml:mi><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:menclose notation="updiagonalstrike"><mml:mo>∈</mml:mo></mml:menclose><mml:msub><mml:mi mathvariant="script">U</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula></p></caption><graphic xlink:href="btv261f2p"/></fig>
</p>
      </sec>
      <sec id="SEC2.2.2">
        <title>2.2.2 The sum condition and sufficiency</title>
        <p>In the previous section, we saw that the ancestry condition is not sufficient to produce a solution to the VAFFP. Sufficiency will be obtained through a second condition, which we refer to as the <italic>sum condition</italic>. This condition was stated as the ‘sum rule’ in <xref rid="btv261-B9" ref-type="bibr">Jiao <italic>et al.</italic> (2014)</xref>, also appears in <xref rid="btv261-B22" ref-type="bibr">Strino <italic>et al.</italic> (2013)</xref> and <xref rid="btv261-B10" ref-type="bibr">Malikic <italic>et al.</italic> (2015)</xref>, and a special case was called the ‘children sum to parents’ condition in <xref rid="btv261-B8" ref-type="bibr">Hajirasouliha <italic>et al.</italic> (2014)</xref>. Given a clonal tree <italic>T</italic>, let <inline-formula><mml:math id="MM71"><mml:mrow><mml:mi>δ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> denote the children of a vertex <italic>v<sub>j</sub></italic> in <italic>T</italic>.
<statement><title>S<sc>um</sc> C<sc>ondition</sc></title><p><italic>If T generates F then for all samples</italic><inline-formula><mml:math id="MM72"><mml:mrow><mml:mi>p</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula><italic>and mutations</italic><inline-formula><mml:math id="MM73"><mml:mrow><mml:mi>j</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula><italic>,</italic><disp-formula id="btv261-M2"><label>(2)</label><mml:math id="MM74"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>≥</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mi>δ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p></statement>
</p>
        <p>See the <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv261/-/DC1">Supplementary Appendix</ext-link> for the proof of the sum condition.</p>
        <p>For a clonal tree <italic>T</italic>, sample <italic>p</italic> and mutation <italic>j</italic>, we define the <italic>deficit</italic>
<inline-formula><mml:math id="MM75"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mstyle displaystyle="false"><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mi>δ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:mrow></mml:math></inline-formula>. Thus, the Sum Condition states that if <italic>T</italic> generates <italic>F</italic>, then the deficit <italic>d<sub>pj</sub></italic> is non-negative for all samples <italic>p</italic> and mutations <italic>j</italic>. It turns out that the deficits for all samples and mutations determine the matrix <italic>U</italic>. In particular, we have the following lemma.
<statement><title>L<sc>emma</sc> 4</title><p><italic>Given an m × n frequency matrix F and an n-clonal matrix B, the m × n matrix</italic><inline-formula><mml:math id="MM76"><mml:mrow><mml:mi>U</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula><italic>defined as</italic><disp-formula id="btv261-M3"><label>(3)</label><mml:math id="MM77"><mml:mrow><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:mrow><mml:mo stretchy="true">(</mml:mo><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mi>δ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:mrow><mml:mo stretchy="true">)</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula><italic>is the unique matrix such that</italic><inline-formula><mml:math id="MM78"><mml:mrow><mml:mi>F</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mi>U</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:math></inline-formula><italic>.</italic></p></statement>
<statement><title>P<sc>roof</sc></title><p>Lemma 2 tells us that there is a unique <inline-formula><mml:math id="MM79"><mml:mrow><mml:mi>U</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mi mathvariant="double-struck">R</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>×</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> such that <inline-formula><mml:math id="MM80"><mml:mrow><mml:mi>F</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mi>U</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:math></inline-formula>. It suffices to show that <inline-formula><mml:math id="MM81"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mstyle displaystyle="false"><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:msubsup><mml:mrow><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mo>·</mml:mo><mml:msub><mml:mi>b</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> for any sample <italic>p</italic> and mutation <italic>j</italic>. Let <italic>T</italic> be the corresponding clonal tree of <italic>B</italic> and <inline-formula><mml:math id="MM82"><mml:mrow><mml:mi>j</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula>. Since <italic>b<sub>kj</sub></italic> = 1 for all <inline-formula><mml:math id="MM83"><mml:mrow><mml:mi>k</mml:mi><mml:mo>∈</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, we have
<disp-formula><mml:math id="MM84"><mml:mtable columnalign="left"><mml:mtr><mml:mtd><mml:maligngroup/><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover><mml:mrow><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mo>·</mml:mo><mml:msub><mml:mi>b</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:malignmark/><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>∈</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mrow><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:maligngroup/><mml:malignmark/><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>∈</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mn>2</mml:mn></mml:mstyle><mml:mrow><mml:mo stretchy="true">(</mml:mo><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mi>δ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:mrow><mml:mo stretchy="true">)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:maligngroup/><mml:malignmark/><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>∈</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mo>−</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>∈</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mrow><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mi>δ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:mrow></mml:mstyle><mml:mo>.</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula>
</p><p>Note that <italic>I</italic>(<italic>j</italic>) is the set of indices of all vertices in the subtree rooted at <italic>v<sub>j</sub></italic> in <italic>T</italic> including <italic>v<sub>j</sub></italic> itself. Since <italic>T</italic> is a tree, for any <inline-formula><mml:math id="MM85"><mml:mrow><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>l</mml:mi><mml:mo>∈</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="MM86"><mml:mrow><mml:mi>k</mml:mi><mml:mo>≠</mml:mo><mml:mi>l</mml:mi></mml:mrow></mml:math></inline-formula>, we have <inline-formula><mml:math id="MM87"><mml:mrow><mml:mi>δ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>∩</mml:mo><mml:mi>δ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mo>∅</mml:mo></mml:mrow></mml:math></inline-formula>. Thus, in the last line of the above derivation, we subtract <italic>f<sub>pl</sub></italic> exactly once for all vertices <inline-formula><mml:math id="MM88"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>≠</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> that are in the subtree rooted at <italic>v<sub>j</sub></italic>. The set of such vertices is <inline-formula><mml:math id="MM89"><mml:mrow><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi mathvariant="normal">∖</mml:mi><mml:mo>{</mml:mo><mml:mi>j</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>. Hence,
<disp-formula><mml:math id="MM90"><mml:mrow><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>∈</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mo>−</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>∈</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mrow><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mi>δ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:mrow></mml:mstyle><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>∈</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mo>−</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>∈</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi mathvariant="normal">∖</mml:mi><mml:mo>{</mml:mo><mml:mi>j</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:munder><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mo>=</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula>
</p></statement>
</p>
        <p>Note that by Lemma 2, any <inline-formula><mml:math id="MM91"><mml:mrow><mml:mi>B</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is full rank and therefore invertible. Therefore, for any frequency matrix <italic>F</italic><italic>,</italic> there is a unique <inline-formula><mml:math id="MM92"><mml:mrow><mml:mi>U</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mi mathvariant="double-struck">R</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>×</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> such that <inline-formula><mml:math id="MM93"><mml:mrow><mml:mi>F</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mi>U</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:math></inline-formula>, namely <inline-formula><mml:math id="MM94"><mml:mrow><mml:mi>U</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:mi>F</mml:mi><mml:msup><mml:mi>B</mml:mi><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>. Thus, the above lemma gives an explicit formula for the entries of <inline-formula><mml:math id="MM95"><mml:mrow><mml:mi>U</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:mi>F</mml:mi><mml:msup><mml:mi>B</mml:mi><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>. For the single sample case, a similar formula was derived by <xref rid="btv261-B22" ref-type="bibr">Strino <italic>et al.</italic> (2013)</xref>. However, instead of using this formula to infer the usage vector, the authors use back substitution. <xref rid="btv261-B9" ref-type="bibr">Jiao <italic>et al.</italic> (2014)</xref> and <xref rid="btv261-B10" ref-type="bibr">Malikic <italic>et al.</italic> (2015)</xref> also describe a recursive formula relating the frequencies and usages. Moreover, <italic>d<sub>pj</sub></italic> = 0 is equivalent to the ‘children sum to parents’ condition in <xref rid="btv261-B8" ref-type="bibr">Hajirasouliha <italic>et al.</italic> (2014)</xref> and the ‘non-populated clone’ condition in <xref rid="btv261-B22" ref-type="bibr">Strino <italic>et al.</italic> (2013)</xref>. In this case <italic>u<sub>pj</sub></italic> = 0, which implies that the clone <italic>v<sub>j</sub></italic> is not present (or mixed) in sample <italic>p</italic>.</p>
        <p>The matrix <italic>U</italic> defined by <xref ref-type="disp-formula" rid="btv261-M3">Equation (3)</xref> has non-negative entries whose rows sum to at most 1 and thus is a valid usage matrix precisely when the deficits are non-negative. This in turn happens when <italic>F</italic> satisfies the sum condition [<xref ref-type="disp-formula" rid="btv261-M2">Equation (2)</xref>]. Combining these results, we obtain the following lemma.
<statement><title>L<sc>emma</sc> 5</title><p><italic>If an m × n frequency matrix</italic><inline-formula><mml:math id="MM96"><mml:mrow><mml:mi>F</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula><italic>satisfies</italic><xref ref-type="disp-formula" rid="btv261-M2"><italic>Equation (2)</italic></xref><italic>for the tree T corresponding to</italic><inline-formula><mml:math id="MM97"><mml:mrow><mml:mi>B</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula><italic>, then B generates F.</italic></p></statement>
<statement><title>P<sc>roof</sc></title><p>We need only to show that <italic>U</italic> created according to <xref ref-type="disp-formula" rid="btv261-M3">Equation (3)</xref> is an element of <inline-formula><mml:math id="MM98"><mml:mrow><mml:msub><mml:mi mathvariant="script">U</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>. Thus, we need to show that <inline-formula><mml:math id="MM99"><mml:mrow><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>≥</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> for all <italic>p</italic>, <italic>j</italic> and <inline-formula><mml:math id="MM100"><mml:mrow><mml:mstyle displaystyle="false"><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:msubsup><mml:mrow><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mo>≤</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> for all <italic>p</italic>. The condition that <inline-formula><mml:math id="MM101"><mml:mrow><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>≥</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> follows directly from our assumption that <inline-formula><mml:math id="MM102"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>≥</mml:mo><mml:mstyle displaystyle="false"><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mi>δ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:mrow></mml:math></inline-formula> for all <italic>p</italic> and <italic>j</italic>, as defined in <xref ref-type="disp-formula" rid="btv261-M2">Equation (2)</xref>. By definition, column <italic>r</italic> of <italic>B</italic> consists of only 1-entries. Moreover, every entry <inline-formula><mml:math id="MM103"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>≤</mml:mo><mml:mn>0.5</mml:mn></mml:mrow></mml:math></inline-formula> and thus <inline-formula><mml:math id="MM104"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mstyle displaystyle="false"><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:msubsup><mml:mrow><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mo>·</mml:mo><mml:msub><mml:mi>b</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mstyle displaystyle="false"><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:msubsup><mml:mrow><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mo>≤</mml:mo><mml:mn>0.5</mml:mn></mml:mrow></mml:math></inline-formula>. Hence, <inline-formula><mml:math id="MM105"><mml:mrow><mml:mstyle displaystyle="false"><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:msubsup><mml:mrow><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mo>≤</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>.</p></statement>
</p>
        <p>Using this lemma, we obtain the following characterization of those spanning arborescences of the ancestry graph <italic>G</italic> that generate <italic>F</italic>.
<statement><title>T<sc>heorem</sc> 1</title><p><italic>T generates</italic><inline-formula><mml:math id="MM106"><mml:mrow><mml:mi>F</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula><italic>if and only if T is a spanning arborescence of G such that</italic><xref ref-type="disp-formula" rid="btv261-M2"><italic>Equation (2)</italic></xref><italic>holds for all f<sub>pj</sub>.</italic></p></statement>
<statement><title>P<sc>roof</sc></title><p>The forward direction follows from Lemma 3 and the sum condition [<xref ref-type="disp-formula" rid="btv261-M2">Equation (2)</xref>]. For the reverse direction, we know that <italic>T</italic> spans all vertices of <italic>G</italic> and therefore is a valid clonal tree with corresponding clonal matrix <italic>B</italic>. Lemma 5 tells us that <italic>B</italic>, and hence also <italic>T</italic>, generate <italic>F</italic>.</p></statement>
</p>
        <p>Thus, there is a 1-1 correspondence between spanning arborescences in <italic>G</italic> that satisfy the sum condition and solutions to the VAFFP. Note that this characterization allows us to focus on finding <italic>B</italic> (equivalently <italic>T</italic>) without considering <italic>U</italic> in solving the VAFFP. In contrast, <xref rid="btv261-B9" ref-type="bibr">Jiao <italic>et al.</italic> (2014)</xref> and <xref rid="btv261-B10" ref-type="bibr">Malikic <italic>et al.</italic> (2015)</xref> try to identify the usage matrix and clonal tree simultaneously. Moreover, <xref rid="btv261-B10" ref-type="bibr">Malikic <italic>et al.</italic> (2015)</xref> do not exploit the 1-1 correspondence between clonal trees and clonal matrices and instead optimize over both. Although a spanning arborescence can be found efficiently, deciding whether <italic>G</italic> admits a spanning arborescence satisfying the sum condition is NP-complete.
<statement><title>T<sc>heorem</sc> 2</title><p>VAFFP is NP-complete.</p></statement>
<statement><title>P<sc>roof</sc></title><p>By reduction from Not-All-Equal-3SAT (see <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv261/-/DC1">Supplementary Appendix</ext-link>).</p></statement>
</p>
        <p>In summary, the following procedure gives a solution to the VAFFP for a frequency matrix <italic>F</italic>: (i) Build the ancestry graph <italic>G</italic> for <italic>F</italic>. (ii) Find a spanning arborescence <italic>T</italic> of <italic>G</italic> that satisfies the sum condition. (iii) Compute <italic>U</italic> according to <xref ref-type="disp-formula" rid="btv261-M3">Equation (3)</xref>.</p>
      </sec>
      <sec id="SEC2.2.3">
        <title>2.2.3 An integer linear programming solution</title>
        <p>We formulate an integer linear program (ILP) to find the largest arborescence in an ancestry graph <italic>G</italic> that adheres to the sum condition. If this is a spanning arborescence, then we have found a solution to the VAFFP. First, we introduce an artificial root vertex <italic>v<sub>r</sub></italic> that has an outgoing arc to every other vertex in <italic>V</italic>. Let <inline-formula><mml:math id="MM107"><mml:mrow><mml:mi>A</mml:mi><mml:mo>′</mml:mo><mml:mo>=</mml:mo><mml:mi>A</mml:mi><mml:mo>∪</mml:mo><mml:mo>{</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>|</mml:mo><mml:mi>w</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> denote this extended arc set. For <inline-formula><mml:math id="MM108"><mml:mrow><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi><mml:mo>∪</mml:mo><mml:mo>{</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>, we define <inline-formula><mml:math id="MM109"><mml:mrow><mml:msup><mml:mi>δ</mml:mi><mml:mo>+</mml:mo></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mi>w</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi><mml:mo>|</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo>,</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>A</mml:mi><mml:mo>′</mml:mo><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> to be the set of vertices connected to <italic>v</italic> by an outgoing arc. Similarly, we define <inline-formula><mml:math id="MM110"><mml:mrow><mml:msup><mml:mi>δ</mml:mi><mml:mo>−</mml:mo></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mi>w</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi><mml:mo>|</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>w</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>A</mml:mi><mml:mo>′</mml:mo><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> to be the set of vertices connected to <italic>v</italic> by an incoming arc. Let variables <inline-formula><mml:math id="MM111"><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>x</mml:mi></mml:mstyle><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo></mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mi>A</mml:mi><mml:mo>′</mml:mo><mml:mo>|</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> be binary variables indicating the presence/absence of arcs in a solution.
<disp-formula id="btv261-M4"><label>(4)</label><mml:math id="MM112"><mml:mrow><mml:mi>max</mml:mi><mml:mtext> </mml:mtext><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>A</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:munder><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:mrow></mml:math></disp-formula>
<disp-formula id="btv261-M5"><label>(5)</label><mml:math id="MM113"><mml:mrow><mml:mtext> s</mml:mtext><mml:mo>.</mml:mo><mml:mtext>t</mml:mtext><mml:mo>.</mml:mo><mml:mtext>  </mml:mtext><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:msup><mml:mi>δ</mml:mi><mml:mo>+</mml:mo></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></disp-formula>
<disp-formula id="btv261-M6"><label>(6)</label><mml:math id="MM114"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>≤</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:msup><mml:mi>δ</mml:mi><mml:mo>−</mml:mo></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mtext>  </mml:mtext><mml:mo>∀</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>A</mml:mi></mml:mrow></mml:math></disp-formula>
<disp-formula id="btv261-M7"><label>(7)</label><mml:math id="MM115"><mml:mrow><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:msup><mml:mi>δ</mml:mi><mml:mo>−</mml:mo></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mo>≤</mml:mo><mml:mn>1</mml:mn><mml:mtext>  </mml:mtext><mml:mo>∀</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math></disp-formula>
<disp-formula id="btv261-M8"><label>(8)</label><mml:math id="MM116"><mml:mrow><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:msup><mml:mi>δ</mml:mi><mml:mo>−</mml:mo></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>≥</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:msup><mml:mi>δ</mml:mi><mml:mo>+</mml:mo></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mtext>  </mml:mtext><mml:mo>∀</mml:mo><mml:mi>p</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>,</mml:mo><mml:mtext> </mml:mtext><mml:msub><mml:mi>v</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math></disp-formula>
<disp-formula id="btv261-M9"><label>(9)</label><mml:math id="MM117"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo><mml:mtext>  </mml:mtext><mml:mo>∀</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>A</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></disp-formula>
</p>
        <p>Constraint (5) enforces that the arborescence <italic>T</italic> has only one root vertex. Constraint (6) states that for every outgoing arc (<italic>v<sub>k</sub></italic>, <italic>v<sub>l</sub></italic>) in <italic>T</italic><italic>,</italic> there is an incoming arc (<italic>v<sub>j</sub></italic>, <italic>v<sub>k</sub></italic>) in <italic>T</italic>. The arborescence constraint (7) enforces that every vertex <italic>v<sub>k</sub></italic> has at most one incoming arc (<italic>v<sub>j</sub></italic>, <italic>v<sub>k</sub></italic>) in <italic>T</italic>. Constraint (8) is the sum condition [<xref ref-type="disp-formula" rid="btv261-M2">Equation (2)</xref>]. Thus, these constraints encode that any arborescence satisfying the sum condition is a feasible solution and vice versa. The objective function (4) maximizes the number of edges in the arborescence. Note that because <italic>G</italic> is a DAG (Observation 1), our formulation of the ILP does not have to consider cycles. Lastly, note that this ILP only allows us to determine whether a solution to the VAFFP exists but provides no way to discriminate between multiple solutions—something we consider in the following section.</p>
      </sec>
    </sec>
    <sec id="SEC2.3">
      <title>2.3 VAFFP with errors</title>
      <p>Thus far, we have assumed that the observed frequency matrix <italic>F</italic> is error-free. That is, there exists some <inline-formula><mml:math id="MM118"><mml:mrow><mml:mi>B</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="MM119"><mml:mrow><mml:mi>U</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">U</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> such that <inline-formula><mml:math id="MM120"><mml:mrow><mml:mi>F</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mi>U</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:math></inline-formula>. However, this may not be the case for real sequencing data where the entries of <italic>F</italic> are obtained from integer read counts and thus are approximations of the true frequencies. We address this uncertainty in the frequencies by relaxing both the ancestry condition and the sum condition.</p>
      <sec id="SEC2.3.1">
        <title>2.3.1 Approximate ancestry graph</title>
        <p>We use a probabilistic model for the observed read counts. Let <italic>X<sub>pj</sub></italic> be a random variable describing the VAF for a sample <italic>p</italic> and mutation <italic>j</italic>. For any pair of mutations <italic>j</italic>, <italic>k</italic> and sample <italic>p</italic><italic>,</italic> let <inline-formula><mml:math id="MM121"><mml:mrow><mml:mi>Pr</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>≥</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> denote the posterior probability that <inline-formula><mml:math id="MM122"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>≥</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>. The sample <italic>p</italic> with the smallest such probability represents the weakest evidence that mutation <italic>j</italic> preceded mutation <italic>k</italic> in the evolutionary history of the tumor. Thus, we define the posterior probability <inline-formula><mml:math id="MM123"><mml:mrow><mml:mi>Pr</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>j</mml:mi><mml:mo>≺</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> as <inline-formula><mml:math id="MM124"><mml:mrow><mml:msub><mml:mrow><mml:mi>min</mml:mi></mml:mrow><mml:mi>p</mml:mi></mml:msub><mml:mi>Pr</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>≥</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula>. If this probability is close to 1 then mutation <italic>j</italic> is likely to be ancestral to mutation <italic>k</italic>.</p>
        <p>We build the <italic>approximate ancestry graph</italic>
<inline-formula><mml:math id="MM125"><mml:mrow><mml:mi>G</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> in two steps: (i) cluster mutations whose posterior probabilities indicate that they likely occurred together. The groups of mutations form the set of vertices <italic>V</italic>. (ii) Retain high-confidence ancestral relationships among the clusters of mutations. The retained relationships form the set of arcs <italic>A</italic>.</p>
        <p>Specifically, in the first step, we want to cluster mutations whose posterior probability distributions are similar across all samples. If mutations <italic>j</italic> and <italic>k</italic> have identical posterior probability distributions across all samples, then <inline-formula><mml:math id="MM126"><mml:mrow><mml:mi>Pr</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>j</mml:mi><mml:mo>≺</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:mi>Pr</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>k</mml:mi><mml:mo>≺</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:mn>0.5</mml:mn></mml:mrow></mml:math></inline-formula>. Thus, given a parameter <inline-formula><mml:math id="MM127"><mml:mrow><mml:mi>α</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>0.5</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula>, we define the directed graph <inline-formula><mml:math id="MM128"><mml:mrow><mml:mi>H</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>A</mml:mi><mml:mi>H</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> whose vertices are the mutations and whose arcs are given by <inline-formula><mml:math id="MM129"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mi>H</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>|</mml:mo><mml:mn>0.5</mml:mn><mml:mo>−</mml:mo><mml:mi>α</mml:mi><mml:mo>≤</mml:mo><mml:mi>Pr</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>j</mml:mi><mml:mo>≺</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>≤</mml:mo><mml:mn>0.5</mml:mn><mml:mo>+</mml:mo><mml:mi>α</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>. The arcs in <italic>A<sub>H</sub></italic> correspond to ancestry relationships where the posterior probability that <inline-formula><mml:math id="MM130"><mml:mrow><mml:mi>j</mml:mi><mml:mo>≺</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="MM131"><mml:mrow><mml:mi>k</mml:mi><mml:mo>≺</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:math></inline-formula> is within α of 0.5. We group such mutations into clusters by computing strongly connected components in <italic>H</italic>. Thus, the parameter α controls how much we cluster, with α = 0 having very little clustering and <inline-formula><mml:math id="MM132"><mml:mrow><mml:mi>α</mml:mi><mml:mo>=</mml:mo><mml:mn>0.5</mml:mn></mml:mrow></mml:math></inline-formula> clustering all mutations together. Then, in the second step, we determine ancestry between clusters/components by including an arc between two components only if there exist mutations <italic>k</italic> and <italic>l</italic> in the corresponding clusters such that <inline-formula><mml:math id="MM133"><mml:mrow><mml:mi>Pr</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>k</mml:mi><mml:mo>≺</mml:mo><mml:mi>l</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>≥</mml:mo><mml:mi>β</mml:mi></mml:mrow></mml:math></inline-formula> for some specified parameter <inline-formula><mml:math id="MM134"><mml:mrow><mml:mi>β</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mn>0.5</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula>. Formally, let <inline-formula><mml:math id="MM135"><mml:mrow><mml:mi mathvariant="script">S</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> be the set of strongly connected components in <italic>H</italic>. We define the approximate ancestry graph <inline-formula><mml:math id="MM136"><mml:mrow><mml:mi>G</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> whose vertices <inline-formula><mml:math id="MM137"><mml:mrow><mml:mi>V</mml:mi><mml:mo>=</mml:mo><mml:mi mathvariant="script">S</mml:mi></mml:mrow></mml:math></inline-formula> and whose arcs <inline-formula><mml:math id="MM138"><mml:mrow><mml:mi>A</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>|</mml:mo><mml:mo>∃</mml:mo><mml:mi>k</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>l</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mtext> s</mml:mtext><mml:mo>.</mml:mo><mml:mtext>t</mml:mtext><mml:mo>.</mml:mo><mml:mtext> </mml:mtext><mml:mi>Pr</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>k</mml:mi><mml:mo>≺</mml:mo><mml:mi>l</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>≥</mml:mo><mml:mi>β</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>. We note there is no theoretical guarantee that the resulting graph <italic>G</italic> is a DAG because cycles may exist containing one or more arcs with a posterior probability of at least <inline-formula><mml:math id="MM139"><mml:mrow><mml:mn>0.5</mml:mn><mml:mo>+</mml:mo><mml:mi>α</mml:mi></mml:mrow></mml:math></inline-formula>. However, as increasing β reduces the number of arcs in <italic>G</italic>, we find in practice that setting β sufficiently large generally produces a DAG.</p>
        <p>We compute the distribution of <italic>X<sub>pj</sub></italic> for a sample <italic>p</italic> and mutation <italic>j</italic> as the posterior probability of the VAF given the observed read counts. The observed VAF <inline-formula><mml:math id="MM140"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>c</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>c</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>d</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="MM141"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>c</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="MM142"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>d</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> are the number of reads from sample <italic>p</italic> that cover mutation <italic>j</italic> and that contain the variant and reference alleles, respectively. The distribution of <italic>X<sub>pj</sub></italic> is the posterior distribution of the binomial proportion when one observes <inline-formula><mml:math id="MM143"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>c</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> ‘successes’ on <inline-formula><mml:math id="MM144"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>c</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>d</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> trials. Assuming a flat prior on the proportion, we have <inline-formula><mml:math id="MM145"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>∼</mml:mo><mml:mtext>Beta</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>c</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>d</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. In other words, we use a generative model for VAFs with <inline-formula><mml:math id="MM146"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>c</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>∼</mml:mo><mml:mtext>Binomial</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>c</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>d</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="MM147"><mml:mrow><mml:mi>q</mml:mi><mml:mo>∼</mml:mo><mml:mtext>Beta</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. For <inline-formula><mml:math id="MM148"><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula>, we use the method described in <xref rid="btv261-B1" ref-type="bibr">Cook (2005)</xref> to compute <inline-formula><mml:math id="MM149"><mml:mrow><mml:mi>Pr</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>≥</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula>. Finally, as the vertices in the approximate ancestry graph <italic>G</italic> correspond to strongly connected components that typically include more than one mutation, we compute the frequency matrix <inline-formula><mml:math id="MM150"><mml:mrow><mml:mi>F</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> for the approximate ancestry graph <italic>G</italic> by combining read counts for all mutations in the same component. That is, for a vertex <inline-formula><mml:math id="MM151"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math></inline-formula> and sample <inline-formula><mml:math id="MM152"><mml:mrow><mml:mi>p</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula>, we define <inline-formula><mml:math id="MM153"><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mstyle displaystyle="false"><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:msub><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>c</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="MM154"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mstyle displaystyle="false"><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:msub><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>d</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:mrow></mml:math></inline-formula>. We set <inline-formula><mml:math id="MM155"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac></mml:mrow></mml:math></inline-formula>.</p>
        <p>We emphasize that our approach clusters mutations according to the uncertainty in their ancestry as determined by the uncertainty in the frequency of individual mutations. We compute the latter from the overlap between the posterior distributions of the binomial parameters. This is very different from existing approaches such as CITUP (<xref rid="btv261-B10" ref-type="bibr">Malikic <italic>et al.</italic>, 2015</xref>) and SciClone (<xref rid="btv261-B11" ref-type="bibr">Miller <italic>et al.</italic>, 2014</xref>) that cluster mutations according to VAFs alone. Moreover, in some methods, the uncertainty in the VAF of each mutation is considered to be fixed, rather than a function of the observed read counts. Our approach allows us to distinguish mutations whose observed VAFs may be similar, but which are likely contained within distinct clones, according to their relationships to other mutations in different samples.</p>
      </sec>
      <sec id="SEC2.3.2">
        <title>2.3.2 An MILP for arborescence with errors</title>
        <p>Our construction of the approximate ancestry graph relaxes the ancestral relationships in the case of errors in VAFs. However, errors in the observed VAFs may also result in violations of the sum condition. Thus, we formulate a mixed ILP (MILP) that finds the largest arborescence on the approximate ancestry graph while allowing for the inferred frequencies to differ slightly from the observed frequency values. We create a confidence interval <inline-formula><mml:math id="MM156"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msubsup><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow><mml:mo>−</mml:mo></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow><mml:mo>+</mml:mo></mml:msubsup><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> as the <inline-formula><mml:math id="MM157"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>γ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> equal-tailed posterior probability interval of the Beta distribution with parameters <inline-formula><mml:math id="MM158"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> where γ is a fixed parameter. This interval will provide lower and upper bounds on the inferred frequency values in the MILP.</p>
        <p>It is possible that <italic>G</italic> may not contain any <italic>spanning</italic> arborescence that satisfies the sum condition since <italic>G</italic> only consists of high confidence arcs. Therefore, we choose to return a partial solution to the VAFFP by returning the largest arborescence <italic>T</italic> in <italic>G</italic> that adheres to the sum condition. This arborescence represents a subset of mutations for which we can confidently infer the ancestral relationships. We note that this is a departure from other methods such as CITUP (<xref rid="btv261-B10" ref-type="bibr">Malikic <italic>et al.</italic>, 2015</xref>) and PhyloSub (<xref rid="btv261-B9" ref-type="bibr">Jiao <italic>et al.</italic>, 2014</xref>) that require that all mutations be placed on a single tree. There may be multiple such maximal trees <italic>T</italic> in <italic>G</italic>. Rather than considering all such trees, we return the clonal tree <italic>T</italic> (corresponding to a clonal matrix <italic>B</italic>) and associated usage matrix <italic>U</italic> that minimize the average deviation between entries in the inferred frequency matrix <inline-formula><mml:math id="MM159"><mml:mrow><mml:mi>F</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mi>U</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:math></inline-formula> and the observed frequency matrix <inline-formula><mml:math id="MM160"><mml:mover accent="true"><mml:mi>F</mml:mi><mml:mo>˜</mml:mo></mml:mover></mml:math></inline-formula>. As we have clustered mutations, we need to define a map σ which relates individual mutations to their respective cluster. That is, <inline-formula><mml:math id="MM161"><mml:mrow><mml:mi>σ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula> when mutation <italic>j</italic> occurs in cluster <italic>k</italic>.</p>
        <p>The MILP is as follows.
<disp-formula id="btv261-M10"><label>(10)</label><mml:math id="MM162"><mml:mrow><mml:mi>max</mml:mi><mml:mtext> </mml:mtext><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>A</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:munder><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mo>−</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mi>m</mml:mi><mml:mi>n</mml:mi></mml:mrow></mml:mfrac><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>p</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>m</mml:mi></mml:munderover><mml:mrow><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover><mml:mo>|</mml:mo></mml:mstyle></mml:mrow></mml:mstyle><mml:msub><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>σ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo>|</mml:mo></mml:mrow></mml:math></disp-formula>
<disp-formula id="btv261-M11"><label>(11)</label><mml:math id="MM163"><mml:mrow><mml:mtext>s</mml:mtext><mml:mo>.</mml:mo><mml:mtext>t</mml:mtext><mml:mo>.</mml:mo><mml:mtext>  </mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mn>5</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>6</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>7</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>8</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mtext> and </mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mn>9</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></disp-formula>
<disp-formula id="btv261-M12"><label>(12)</label><mml:math id="MM164"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:msubsup><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow><mml:mo>−</mml:mo></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:mrow><mml:mo>+</mml:mo></mml:msubsup><mml:mo stretchy="false">]</mml:mo><mml:mtext>   for all </mml:mtext><mml:mi>p</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>,</mml:mo><mml:mtext> </mml:mtext><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math></disp-formula>
</p>
        <p>We model the absolute value in <inline-formula><mml:math id="MM165"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>10</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> and the product <inline-formula><mml:math id="MM166"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> in (8) using standard linearization techniques (<xref rid="btv261-B24" ref-type="bibr">Wolsey, 1998</xref>). We call the resulting algorithm AncesTree.</p>
      </sec>
    </sec>
  </sec>
  <sec>
    <title>3 Results</title>
    <p>We implemented AncesTree in C++ using CPLEX v12.6. We analyze 90 simulated datasets and 22 real tumor datasets. The real data consist of chronic lymphocytic leukemia (CLL) (<xref rid="btv261-B20" ref-type="bibr">Schuh <italic>et al.</italic>, 2012</xref>), lung adenocarcinoma (<xref rid="btv261-B26" ref-type="bibr">Zhang <italic>et al.</italic>, 2014</xref>) and renal cell carcinoma tumors (<xref rid="btv261-B4" ref-type="bibr">Gerlinger <italic>et al.</italic>, 2014</xref>). The lung and renal tumors have undergone multi-section sequencing, whereas the CLL tumors were sequenced over multiple time points. For 14 of the 22 tumors, we have both whole-genome/whole-exome sequencing data and targeted deep resequencing data of either the same or a subset of mutations for all sections of the tumor (<ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv261/-/DC1">Supplementary Table A1</ext-link>). For all analyses, we set <inline-formula><mml:math id="MM167"><mml:mrow><mml:mi>α</mml:mi><mml:mo>=</mml:mo><mml:mn>0.3</mml:mn><mml:mo>,</mml:mo><mml:mtext> </mml:mtext><mml:mi>β</mml:mi><mml:mo>=</mml:mo><mml:mn>0.8</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="MM168"><mml:mrow><mml:mi>γ</mml:mi><mml:mo>=</mml:mo><mml:mn>0.01</mml:mn></mml:mrow></mml:math></inline-formula>. See the <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv261/-/DC1">Supplementary Appendix</ext-link> for results as α and β are varied.</p>
    <sec id="SEC3.1">
      <title>3.1 Comparison of AncesTree to PhyloSub and CITUP</title>
      <p>We compare AncesTree to two other recent algorithms that infer trees from multi-sample sequencing data: PhyloSub (<xref rid="btv261-B9" ref-type="bibr">Jiao <italic>et al.</italic>, 2014</xref>) and CITUP (<xref rid="btv261-B10" ref-type="bibr">Malikic <italic>et al.</italic>, 2015</xref>). We were unable to compare to LICHeE (<xref rid="btv261-B18" ref-type="bibr">Popic <italic>et al.</italic>, 2014</xref>) as the software only provides a graphical user interface with no way to easily export results.</p>
      <p>We created 90 synthetic tumor datasets. Each dataset contains 100 mutations grouped into 10 clones that accumulated following the infinite sites assumption. For each dataset, we simulated between four and six samples sequenced at a coverage of 50X, 100X or 1000X. Further details of the simulated data are contained in the <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv261/-/DC1">Supplementary Appendix</ext-link>. We ran AncesTree, PhyloSub and CITUP on each dataset and compared the results using five measures: (i) the fraction of <italic>ancestral</italic> relationships between pairs of mutations that were correctly identified (<xref ref-type="fig" rid="btv261-F3">Fig. 3</xref>A); (ii) the fraction of <italic>clustered</italic> relationships between pairs of mutations that were correctly identified (<xref ref-type="fig" rid="btv261-F3">Fig. 3</xref>B); (iii) the fraction of <italic>incomparable</italic> relationships (i.e. neither ancestral nor clustered) between pairs of mutations that were correctly identified (<ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv261/-/DC1">Supplementary Fig. A2</ext-link>); (iv) the average error <inline-formula><mml:math id="MM169"><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mi>m</mml:mi><mml:mi>n</mml:mi></mml:mrow></mml:mfrac><mml:mo>|</mml:mo><mml:mo>|</mml:mo><mml:mover accent="true"><mml:mi>F</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mo>−</mml:mo><mml:mi>F</mml:mi><mml:mo>|</mml:mo><mml:msub><mml:mo>|</mml:mo><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> between the simulated <inline-formula><mml:math id="MM170"><mml:mover accent="true"><mml:mi>F</mml:mi><mml:mo>˜</mml:mo></mml:mover></mml:math></inline-formula> and inferred frequency matrix <italic>F</italic> (<xref ref-type="fig" rid="btv261-F3">Fig. 3</xref>C) and (v) the error between the simulated usage matrix <inline-formula><mml:math id="MM171"><mml:mover accent="true"><mml:mi>U</mml:mi><mml:mo>˜</mml:mo></mml:mover></mml:math></inline-formula> and the inferred usage <italic>U</italic> using the same metric as <xref rid="btv261-B10" ref-type="bibr">Malikic <italic>et al.</italic> (2015)</xref> (<xref ref-type="fig" rid="btv261-F3">Fig. 3</xref>D). We note that we compute these measures only on the set of mutations that are included in the output of all methods, which equates to the set of mutations output by AncesTree (median of 69 of the 100 total mutations) since CITUP and PhyloSub include all mutations. We find that AncesTree has higher accuracy in determining ancestral, clustered and incomparable relationships with median accuracy more than 0.05, 0.03 and 0.08, respectively, higher than the median accuracy of the other methods. Further, we find that AncesTree achieves a median error on <italic>F</italic> and <italic>U</italic> that is 0.01 and 0.03 lower than the median error of the other methods. See <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv261/-/DC1">Supplementary Appendix</ext-link> for further details on all five metrics.
<fig id="btv261-F3" position="float"><label>Fig. 3.</label><caption><p><bold>Violin plots comparing AncesTree, PhyloSub and CITUP on simulated data.</bold> (<bold>A</bold>) Accuracy of each method in predicting when mutations are ancestral to each other or (<bold>B</bold>) clustered in the same population. (<bold>C</bold>) Error in the inferred VAF <italic>f<sub>pj</sub></italic> and (<bold>D</bold>) usage values <italic>u<sub>pj</sub></italic>. Median values are indicated below each algorithm</p></caption><graphic xlink:href="btv261f3p"/></fig>
</p>
      <p>We also compare the output of AncesTree, CITUP and PhyloSub on the sequencing data from 22 tumor samples and find that AncesTree produces results that are more consistent with the input data in terms of our probabilistic model (see <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv261/-/DC1">Supplementary Appendix</ext-link>).</p>
    </sec>
    <sec id="SEC3.2">
      <title>3.2 Whole-exome versus deep sequencing</title>
      <p>A key difference between AncesTree and other approaches is that we use a graph clustering approach to group mutations by their putative ancestral relationships across all samples, rather than clustering VAFs directly. We demonstrate the advantages of this approach on a lung tumor [patient 330 in <xref rid="btv261-B26" ref-type="bibr">Zhang <italic>et al.</italic> (2014)</xref>] that had multiple samples sequenced using both whole-exome and targeted deep sequencing (higher coverage) data. One would expect that deep sequencing data should provide a more accurate measurements of the VAF for each mutation due to the higher read counts. However, in aggregate, there is very little difference between the VAF histograms for whole-exome versus deep sequencing (<xref ref-type="fig" rid="btv261-F4">Fig. 4</xref>A). Thus, methods that first cluster mutations according to their VAF without considering the variance in the VAFs of individual mutations from the observed read counts, including CITUP (<xref rid="btv261-B10" ref-type="bibr">Malikic <italic>et al.</italic>, 2015</xref>) and LICHeE (<xref rid="btv261-B18" ref-type="bibr">Popic <italic>et al.</italic>, 2014</xref>), will not recognize differences in clustering between the low and high coverage data.
<fig id="btv261-F4" position="float"><label>Fig. 4.</label><caption><p><bold>Comparison of whole-exome (top) and deep sequencing data (bottom) for lung patient 330.</bold> (<bold>A</bold>) Histogram of observed VAFs for all mutations for both datatypes does not reveal a significant difference between lower (201X) coverage (top) and higher (674X) coverage (bottom) sequencing data. (<bold>B</bold>) A heat map showing the posterior probability <inline-formula><mml:math id="MM172"><mml:mrow><mml:mi>Pr</mml:mi><mml:mo>⁡</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>≺</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> for all pairs of mutations <italic>i</italic> and <italic>j</italic>. The asymmetry in the matrix reveals high confidence ancestral relationships, which become much clearer with higher coverage. (<bold>C</bold>) The posterior distribution of the VAF for three mutations given the observed read counts. In higher coverage data, the distributions become much tighter, revealing that the red mutation is ancestral to the blue and green mutations</p></caption><graphic xlink:href="btv261f4p"/></fig>
</p>
      <p>Examining the posterior probabilities of ancestral relationships between individual mutations (<xref ref-type="fig" rid="btv261-F4">Fig. 4</xref>B) reveals a striking difference between the low and high coverage datasets. The higher coverage targeted sequencing data have a much clearer distinction in ancestral relationships with many more pairs of mutations having posterior probability <inline-formula><mml:math id="MM173"><mml:mrow><mml:mi>Pr</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>≺</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula>, the probability that mutation <italic>i</italic> precedes mutation <italic>j</italic>, close to 1 or 0, indicating high confidence in the ancestral relationships. The approach used by AncesTree exploits this higher confidence in individual ancestral relationships, both in grouping mutations and in determining the tree. For example, <xref ref-type="fig" rid="btv261-F4">Figure 4</xref>C shows the posterior probabilities of the VAF for three mutations. With lower coverage whole-exome sequencing, the distributions overlap, and there is no clear ancestral or grouping relationship between the mutations. With deep sequencing data, the variance of VAF for each mutation is smaller and relationships between the mutations become apparent. The red mutation has a strong probability to be ancestral to both the blue and green mutations as <inline-formula><mml:math id="MM174"><mml:mrow><mml:mi>Pr</mml:mi><mml:mo stretchy="false">[</mml:mo></mml:mrow></mml:math></inline-formula>red <inline-formula><mml:math id="MM175"><mml:mo>≺</mml:mo></mml:math></inline-formula> green] <inline-formula><mml:math id="MM176"><mml:mrow><mml:mo>=</mml:mo><mml:mn>1.0</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="MM177"><mml:mrow><mml:mi>Pr</mml:mi><mml:mo stretchy="false">[</mml:mo></mml:mrow></mml:math></inline-formula>red <inline-formula><mml:math id="MM178"><mml:mo>≺</mml:mo></mml:math></inline-formula> blue] <inline-formula><mml:math id="MM179"><mml:mrow><mml:mo>=</mml:mo><mml:mn>1.0</mml:mn></mml:mrow></mml:math></inline-formula>. In contrast, the blue and green mutations overlap significantly suggesting that these mutations should be clustered together. We find <inline-formula><mml:math id="MM180"><mml:mrow><mml:mi>Pr</mml:mi><mml:mo stretchy="false">[</mml:mo></mml:mrow></mml:math></inline-formula>blue <inline-formula><mml:math id="MM181"><mml:mo>≺</mml:mo></mml:math></inline-formula> green] <inline-formula><mml:math id="MM182"><mml:mrow><mml:mo>=</mml:mo><mml:mn>0.45</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="MM183"><mml:mrow><mml:mi>Pr</mml:mi><mml:mo stretchy="false">[</mml:mo></mml:mrow></mml:math></inline-formula>green <inline-formula><mml:math id="MM184"><mml:mo>≺</mml:mo></mml:math></inline-formula> blue] <inline-formula><mml:math id="MM185"><mml:mrow><mml:mo>=</mml:mo><mml:mn>0.22</mml:mn></mml:mrow></mml:math></inline-formula>, both of which are within the interval <inline-formula><mml:math id="MM186"><mml:mrow><mml:mrow><mml:mo stretchy="true">[</mml:mo><mml:mrow><mml:mn>0.5</mml:mn><mml:mo>−</mml:mo><mml:mi>α</mml:mi><mml:mo>,</mml:mo><mml:mn>0.5</mml:mn><mml:mo>+</mml:mo><mml:mi>α</mml:mi></mml:mrow><mml:mo stretchy="true">]</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> that we use for clustering. Thus, these mutations will be found in the same strongly connected component when building the approximate ancestry graph.</p>
    </sec>
    <sec id="SEC3.3">
      <title>3.3 Uncovering high-confidence ancestral relationships</title>
      <p><xref ref-type="fig" rid="btv261-F5">Figure 5</xref>A shows the clonal tree inferred by AncesTree for CLL patient 077 previously analyzed with both PhyloSub and CITUP. The structure of our clonal tree closely resembles the trees reported by the other algorithms (<xref ref-type="fig" rid="btv261-F5">Fig. 5</xref>C); in particular, both trees have two branching lineages containing mutations in the same genes. Furthermore, AncesTree returns purity estimates within 0.04 and 0.05, respectively, of those reported by PhyloSub and CITUP across all five tumor samples. However, there are also important differences between the trees. PhyloSub and CITUP group together multiple pairs of mutations that AncesTree separates into successive clones. For instance, PhyloSub and CITUP cluster MAP2K1, HMCN1 and NOD1 into a single clone, whereas the tree produced by AncesTree shows these mutations as the result of three successive clonal expansions. The extremely high read counts (&gt;450 K) for these three mutations across all five samples give high confidence in the posterior probability of the ancestral relationships: the minimum posterior probabilities over all samples are 0.86 and 1 for the two edges. Similarly, <inline-formula><mml:math id="MM187"><mml:mrow><mml:mi>Pr</mml:mi><mml:mo stretchy="false">[</mml:mo></mml:mrow></mml:math></inline-formula>PLA2G16 <inline-formula><mml:math id="MM188"><mml:mo>≺</mml:mo></mml:math></inline-formula> EXOC6B<inline-formula><mml:math id="MM189"><mml:mrow><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> as is reported in AncesTree’s clonal tree (<xref ref-type="fig" rid="btv261-F5">Fig. 5</xref>B).
<fig id="btv261-F5" position="float"><label>Fig. 5.</label><caption><p><bold>Analysis of CLL patient 077 shows AncesTree’s ability to infer successive clonal expansions.</bold> (<bold>A</bold>) The clonal tree output by AncesTree is indicated by the black solid edges whose weights correspond to the posterior probability of the ancestral relationship. Dashed edges are used to indicate ancestral clones which exist at the time of sequencing. The blocks labeled ‘a’ through ‘e’ each represent a sequenced sample, with colored edges indicating the inferred composition of clones and their fraction in each sample (only edges with usage at least 0.05 are shown). (<bold>B</bold>) The <inline-formula><mml:math id="MM190"><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>6</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> confidence intervals of VAF for the sample with the weakest ancestral evidence for each of the edges connecting gene GPR158 to LRRC16A. (<bold>C</bold>) The tree reported by PhyloSub, which is identical to the tree reported by CITUP except for the addition of SAMHD1. Mutations indicated in blue are those present in part A. Mutations indicated in red likely occur in regions affected by copy number aberrations</p></caption><graphic xlink:href="btv261f5p"/></fig>
</p>
      <p>In addition to the differences in ancestry, the clonal tree output by AncesTree contains only a subset of the mutations, whereas the tree output by PhyloSub contains all mutations. We find that three of the missing mutations (in genes BCL2L13, NAMPTL and SAMHD1) have VAFs that are significantly higher than 0.5. Indeed the <inline-formula><mml:math id="MM191"><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>γ</mml:mi></mml:mrow></mml:math></inline-formula> confidence interval used by our ILP implementation is strictly larger than 0.5. It is likely that these mutations occur in regions affected by copy number aberrations, thus violating the assumptions of our model. We examined the approximate ancestry graph for this sample (<ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv261/-/DC1">Supplementary Fig. A7</ext-link>) to determine why other mutations were missing from the tree output by AncesTree. We find that mutations in SLC12A1 and GPR158 only have incoming arcs from the three genes listed above whose VAFs exceed 0.5. Thus, there is no subtree of the ancestry graph that contains both SLC12A1 and GPR158. The other missing mutations (KLHDC2, COL24A1, DAZAP1, GHDC and OCA2) are all descendants of SLC12A in the ancestry graph. Of these missing mutations, all except for GHDC are also descendants of GPR158, but each violates the sum condition if added to the tree output by AncesTree.</p>
    </sec>
    <sec id="SEC3.4">
      <title>3.4 Heterogeneity within samples</title>
      <p>As AncesTree directly computes the usage matrix <italic>U</italic>, we obtain estimates of the amount of mixing, or intra-tumor heterogeneity, of clones within each analyzed sample. Specifically, for a given sample, the number of clones that are inferred to be mixed in a sample is the number of non-zero entries in the corresponding row of <italic>U</italic>. For each tumor, we compute its <italic>mixing proportion</italic> to be the fraction of entries in <italic>U</italic> that are non-zero (see <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv261/-/DC1">Supplementary Table A1</ext-link>). Using the deep sequencing data, we find that the CLL tumors have on average a mixing proportion of 1.0. This is much higher than the renal and lung tumors which have on average mixing proportions of 0.22 and 0.5, respectively. The higher mixing proportions for CLL are consistent with it being a liquid tumor, where mixing between clones is likely to be more common than in solid tumors.</p>
      <p>We further analyzed one renal tumor, EV006, for which we obtained a relatively low mixing proportion of 0.21 (<xref ref-type="fig" rid="btv261-F6">Fig. 6</xref>). Samples R6 and R7 from this tumor were found to be the mixture of two and three distinct clones, respectively, that do not appear in other samples. This shows that AncesTree can infer the composition of individual samples containing clones distinct from all other samples. The remaining samples in this tumor all include a clone that appears in at least one other sample. Notably, the two lymph node samples, LN1a and LN1b, are inferred to be mixtures of the same two clones. The only difference between these two samples appears to be that LN1b contains a higher admixture with normal cells (0.45) than LN1a (&lt; 0.01), and indeed the two lymph node samples are grouped together in the original analysis of this tumor by <xref rid="btv261-B4" ref-type="bibr">Gerlinger <italic>et al.</italic> (2014)</xref>.
<fig id="btv261-F6" position="float"><label>Fig. 6.</label><caption><p><bold>Analysis of renal patient EV006 reveals distinctive sample composition.</bold> The clonal tree output by AncesTree. Some sequenced sections (R6, R7) are mixtures of clones appearing only in those sections. In contrast, other sequenced sections (LN1a, LN1b and R3) are mixtures of clones that each appear in more than one section. In particular, both lymph node samples (LN1a and LN1b) are mixtures of the same two clones but in different proportions</p></caption><graphic xlink:href="btv261f6p"/></fig>
</p>
    </sec>
  </sec>
  <sec>
    <title>4 Discussion</title>
    <p>Reconstructing the evolutionary history of a tumor given VAFs measured in multiple sequenced samples for a single tumor is a challenging task. In this work, we formalize this problem as the VAFFP. We derive a combinatorial characterization of the solutions to this problem and prove the problem is NP-complete. We present the AncesTree algorithm for solving an approximate version of the problem which allows errors and demonstrate the advantages of AncesTree relative to existing approaches.</p>
    <p>There are a number of avenues for further investigation. First, we have ignored the effect of copy number aberrations on VAFs, meaning that AncesTree may not currently be applicable to some datasets. Second, AncesTree only outputs the single largest rooted subtree of the approximate ancestry graph that satisfies the sum condition. The algorithm may be applied iteratively by removing the clonal tree found at each step from the ancestry graph and re-running, thus returning a forest. However, it is unclear how the trees in this forest relate to each other or if there is an approach for joining them. Third, the theoretical results may be strengthened. For example, as the number <italic>m</italic> of samples is much smaller than the number <italic>n</italic> of mutations, it would be interesting to see if the problem is fixed-parameter tractable. Finally, our use of the binomial distribution to model read counts may underestimate the variance; e.g. due to factors such as PCR artifacts. More realistic models of read counts may improve the performance of AncesTree.</p>
    <p>Finally, we note that the kidney and lung datasets analyzed here contain multiple sections of a solid tumor obtained at a single time point, whereas the CLL datasets contain samples obtained at different times. Future work will include handling multi-section samples and multi-time-point samples separately to account for time related dependencies.</p>
  </sec>
  <sec>
    <title>Funding</title>
    <p>This work was supported by a <funding-source>National Science Foundation (NSF) CAREER Award</funding-source>
<award-id>CCF-1053753</award-id> and <award-id>NIH RO1HG005690</award-id>. B.J.R. was also supported by a Career Award at the Scientific Interface from the <funding-source>Burroughs Wellcome Fund</funding-source>, an <funding-source>Alfred P Sloan Research Fellowship</funding-source>.</p>
    <p><italic>Conflict of Interest</italic>: none declared.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="PMC_1" content-type="local-data">
      <caption>
        <title>Supplementary Data</title>
      </caption>
      <media mimetype="text" mime-subtype="html" xlink:href="supp_31_12_i62__index.html"/>
      <media xlink:role="associated-file" mimetype="application" mime-subtype="pdf" xlink:href="supp_btv261_El-Kebir_223_sup_1.pdf"/>
    </supplementary-material>
  </sec>
</body>
<back>
  <ref-list>
    <title>References</title>
    <ref id="btv261-B1">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Cook</surname><given-names>J.</given-names></name></person-group> (<year>2005</year>) 
<article-title>Exact calculation of beta inequalities</article-title>. <source>Technical report</source><italic>.</italic>
<publisher-name>UT MD Anderson Cancer Center Department of Biostatistics</publisher-name>.</mixed-citation>
    </ref>
    <ref id="btv261-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ding</surname><given-names>L.</given-names></name><etal/></person-group><italic>.</italic> (<year>2012</year>) 
<article-title>Clonal evolution in relapsed acute myeloid leukaemia revealed by whole-genome sequencing</article-title>. <source>Nature</source><italic>,</italic>
<volume>481</volume>, <fpage>506</fpage>–<lpage>510</lpage>.<pub-id pub-id-type="pmid">22237025</pub-id></mixed-citation>
    </ref>
    <ref id="btv261-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gerlinger</surname><given-names>M.</given-names></name><etal/></person-group> (<year>2012</year>) 
<article-title>Intratumor heterogeneity and branched evolution revealed by multiregion sequencing</article-title>. <source>N. Engl. J. Med.</source><italic>,</italic>
<volume>366</volume>, <fpage>883</fpage>–<lpage>892</lpage>.<pub-id pub-id-type="pmid">22397650</pub-id></mixed-citation>
    </ref>
    <ref id="btv261-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gerlinger</surname><given-names>M.</given-names></name><etal/></person-group><italic>.</italic> (<year>2014</year>) 
<article-title>Genomic architecture and evolution of clear cell renal cell carcinomas defined by multiregion sequencing</article-title>. <source>Nat. Genet.</source><italic>,</italic>
<volume>46</volume>, <fpage>225</fpage>–<lpage>233</lpage>.<pub-id pub-id-type="pmid">24487277</pub-id></mixed-citation>
    </ref>
    <ref id="btv261-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gusfield</surname><given-names>D.</given-names></name></person-group> (<year>1991</year>) 
<article-title>Efficient algorithms for inferring evolutionary trees</article-title>. <source>Networks</source><italic>,</italic>
<volume>21</volume>, <fpage>19</fpage>–<lpage>28</lpage>.</mixed-citation>
    </ref>
    <ref id="btv261-B6">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Gusfield</surname><given-names>D.</given-names></name></person-group> (<year>1997</year>) <source>Algorithms on Strings, Trees, and Sequences—Computer Science and Computational Biology</source><italic>.</italic>
<publisher-name>Cambridge University Press</publisher-name>, 
<publisher-loc>Cambridge, UK</publisher-loc>.</mixed-citation>
    </ref>
    <ref id="btv261-B7">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Hajirasouliha</surname><given-names>I.</given-names></name><name><surname>Raphael</surname><given-names>B.J.</given-names></name></person-group> (<year>2014</year>) 
<article-title>Reconstructing mutational history in multiply sampled tumors using perfect phylogeny mixtures</article-title>. In: <person-group person-group-type="editor"><name><surname>Brown</surname><given-names>D.</given-names></name><name><surname>Morgenstern</surname><given-names>B.</given-names></name></person-group> (eds), <source>Algorithms in Bioinformatics—14th International Workshop, WABI 2014</source>, 
<publisher-name>Springer</publisher-name>, pp. <fpage>354</fpage>–<lpage>367</lpage>.</mixed-citation>
    </ref>
    <ref id="btv261-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hajirasouliha</surname><given-names>I.</given-names></name><etal/></person-group> (<year>2014</year>) 
<article-title>A combinatorial approach for analyzing intra-tumor heterogeneity from high-throughput sequencing data</article-title>. <source>Bioinformatics</source><italic>,</italic>
<volume>30</volume>, <fpage>i78</fpage>–<lpage>i86</lpage>.<pub-id pub-id-type="pmid">24932008</pub-id></mixed-citation>
    </ref>
    <ref id="btv261-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Jiao</surname><given-names>W.</given-names></name><etal/></person-group> (<year>2014</year>) 
<article-title>Inferring clonal evolution of tumors from single nucleotide somatic mutations</article-title>. <source>BMC Bioinformatics</source><italic>,</italic>
<volume>15</volume>, <fpage>35</fpage>.<pub-id pub-id-type="pmid">24484323</pub-id></mixed-citation>
    </ref>
    <ref id="btv261-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Malikic</surname><given-names>S.</given-names></name><etal/></person-group> (<year>2015</year>) 
<article-title>Clonality inference in multiple tumor samples using phylogeny</article-title>. <source>Bioinformatics</source><italic>,</italic>
<volume>31</volume>, <fpage>1349</fpage>–<lpage>1356</lpage>.<pub-id pub-id-type="pmid">25568283</pub-id></mixed-citation>
    </ref>
    <ref id="btv261-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Miller</surname><given-names>C.A.</given-names></name><etal/></person-group><italic>.</italic> (<year>2014</year>) 
<article-title>Sciclone: inferring clonal architecture and tracking the spatial and temporal patterns of tumor evolution</article-title>. <source>PLoS Comput. Biol.</source><italic>,</italic>
<volume>10</volume>, <fpage>e1003665</fpage>.<pub-id pub-id-type="pmid">25102416</pub-id></mixed-citation>
    </ref>
    <ref id="btv261-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Navin</surname><given-names>N.E.</given-names></name></person-group> (<year>2014</year>) 
<article-title>Cancer genomics: one cell at a time</article-title>. <source>Genome Biol.</source><italic>,</italic>
<volume>15</volume>, <fpage>452</fpage>.<pub-id pub-id-type="pmid">25222669</pub-id></mixed-citation>
    </ref>
    <ref id="btv261-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Newburger</surname><given-names>D.E.</given-names></name><etal/></person-group><italic>.</italic> (<year>2013</year>) 
<article-title>Genome evolution during progression to breast cancer</article-title>. <source>Genome Res.</source><italic>,</italic>
<volume>23</volume>, <fpage>1097</fpage>–<lpage>1108</lpage>.<pub-id pub-id-type="pmid">23568837</pub-id></mixed-citation>
    </ref>
    <ref id="btv261-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Nik-Zainal</surname><given-names>S.</given-names></name><etal/></person-group><italic>.</italic> (<year>2012</year>) 
<article-title>The life history of 21 breast cancers</article-title>. <source>Cell</source><italic>,</italic>
<volume>149</volume>,<fpage>994</fpage>–<lpage>1007</lpage>.<pub-id pub-id-type="pmid">22608083</pub-id></mixed-citation>
    </ref>
    <ref id="btv261-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Nowell</surname><given-names>P.C.</given-names></name></person-group> (<year>1976</year>) 
<article-title>The clonal evolution of tumor cell populations</article-title>. <source>Science</source><italic>,</italic>
<volume>194</volume>, <fpage>23</fpage>–<lpage>28</lpage>.<pub-id pub-id-type="pmid">959840</pub-id></mixed-citation>
    </ref>
    <ref id="btv261-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Oesper</surname><given-names>L.</given-names></name><etal/></person-group> (<year>2013</year>) 
<article-title>Theta: inferring intra-tumor heterogeneity from high-throughput DNA sequencing data</article-title>. <source>Genome Biol.</source><italic>,</italic>
<volume>14</volume>, <fpage>R80</fpage>.<pub-id pub-id-type="pmid">23895164</pub-id></mixed-citation>
    </ref>
    <ref id="btv261-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Oesper</surname><given-names>L.</given-names></name><etal/></person-group> (<year>2014</year>) 
<article-title>Quantifying tumor heterogeneity in whole-genome and whole-exome sequencing data</article-title>. <source>Bioinformatics</source><italic>,</italic>
<volume>30</volume>, <fpage>3532</fpage>–<lpage>3540</lpage>.<pub-id pub-id-type="pmid">25297070</pub-id></mixed-citation>
    </ref>
    <ref id="btv261-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Popic</surname><given-names>V.</given-names></name><etal/></person-group> (<year>2014</year>) 
<article-title>Fast and scalable inference of multi-sample cancer lineages</article-title>. <comment><italic>CoRR,</italic> abs/1412.8574</comment>.</mixed-citation>
    </ref>
    <ref id="btv261-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Roth</surname><given-names>A.</given-names></name><etal/></person-group> (<year>2014</year>) 
<article-title>Pyclone: statistical inference of clonal population structure in cancer</article-title>. <source>Nat. Methods</source><italic>,</italic>
<volume>11</volume>, <fpage>396</fpage>–<lpage>398</lpage>.<pub-id pub-id-type="pmid">24633410</pub-id></mixed-citation>
    </ref>
    <ref id="btv261-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Schuh</surname><given-names>A.</given-names></name><etal/></person-group><italic>.</italic> (<year>2012</year>) 
<article-title>Monitoring chronic lymphocytic leukemia progression by whole genome sequencing reveals heterogeneous clonal evolution patterns</article-title>. <source>Blood</source><italic>,</italic>
<volume>120</volume>, <fpage>4191</fpage>–<lpage>4196</lpage>.<pub-id pub-id-type="pmid">22915640</pub-id></mixed-citation>
    </ref>
    <ref id="btv261-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Shah</surname><given-names>S.P.</given-names></name><etal/></person-group><italic>.</italic> (<year>2012</year>) 
<article-title>The clonal and mutational evolution spectrum of primary triple-negative breast cancers</article-title>. <source>Nature</source><italic>,</italic>
<volume>486</volume>, <fpage>395</fpage>–<lpage>399</lpage>.<pub-id pub-id-type="pmid">22495314</pub-id></mixed-citation>
    </ref>
    <ref id="btv261-B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Strino</surname><given-names>F.</given-names></name><etal/></person-group> (<year>2013</year>) 
<article-title>Trap: a tree approach for fingerprinting subclonal tumor composition</article-title>. <source>Nucleic Acids Res.</source><italic>,</italic>
<volume>41</volume>, <fpage>e165</fpage>.<pub-id pub-id-type="pmid">23892400</pub-id></mixed-citation>
    </ref>
    <ref id="btv261-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wang</surname><given-names>Y.</given-names></name><etal/></person-group><italic>.</italic> (<year>2014</year>) 
<article-title>Clonal evolution in breast cancer revealed by single nucleus genome sequencing</article-title>. <source>Nature</source><italic>,</italic>
<volume>512</volume>, <fpage>155</fpage>–<lpage>160</lpage>.<pub-id pub-id-type="pmid">25079324</pub-id></mixed-citation>
    </ref>
    <ref id="btv261-B24">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Wolsey</surname><given-names>L.</given-names></name></person-group> (<year>1998</year>) <source>Integer Programming</source><italic>.</italic>
<comment>Wiley-Interscience series in discrete mathematics and optimization. Wiley, New York</comment>.</mixed-citation>
    </ref>
    <ref id="btv261-B25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zare</surname><given-names>H.</given-names></name><etal/></person-group> (<year>2014</year>) 
<article-title>Inferring clonal composition from multiple sections of a breast cancer</article-title>. <source>PLoS Comput. Biol.</source><italic>,</italic>
<volume>10</volume>, <fpage>e1003703</fpage>.<pub-id pub-id-type="pmid">25010360</pub-id></mixed-citation>
    </ref>
    <ref id="btv261-B26">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhang</surname><given-names>J.</given-names></name><etal/></person-group><italic>.</italic> (<year>2014</year>) 
<article-title>Intratumor heterogeneity in localized lung adenocarcinomas delineated by multiregion sequencing</article-title>. <source>Science</source><italic>,</italic>
<volume>346</volume>, <fpage>256</fpage>–<lpage>259</lpage>.<pub-id pub-id-type="pmid">25301631</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">5952580</article-id>
    <article-id pub-id-type="publisher-id">2169</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-018-2169-3</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>GPU-accelerated iterative reconstruction for limited-data tomography in CBCT systems</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>de Molina</surname>
          <given-names>Claudia</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Serrano</surname>
          <given-names>Estefania</given-names>
        </name>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Garcia-Blas</surname>
          <given-names>Javier</given-names>
        </name>
        <address>
          <email>fjblas@inf.uc3m.es</email>
        </address>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Carretero</surname>
          <given-names>Jesus</given-names>
        </name>
        <address>
          <email>jcarrete@inf.uc3m.es</email>
        </address>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Desco</surname>
          <given-names>Manuel</given-names>
        </name>
        <address>
          <email>desco@hggm.es</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
        <xref ref-type="aff" rid="Aff4">4</xref>
        <xref ref-type="aff" rid="Aff5">5</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Abella</surname>
          <given-names>Monica</given-names>
        </name>
        <address>
          <email>mabella@ing.uc3m.es</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
        <xref ref-type="aff" rid="Aff5">5</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 2168 9183</institution-id><institution-id institution-id-type="GRID">grid.7840.b</institution-id><institution>Departamento de Bioingeniería e Ingeniería Aeroespacial, </institution><institution>Universidad Carlos III de Madrid, </institution></institution-wrap>Madrid, Spain </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 0277 7938</institution-id><institution-id institution-id-type="GRID">grid.410526.4</institution-id><institution>Instituto de Investigación Sanitaria Gregorio Marañón (IiSGM), </institution></institution-wrap>Madrid, Spain </aff>
      <aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 2168 9183</institution-id><institution-id institution-id-type="GRID">grid.7840.b</institution-id><institution>Computer Architecture and Technology Area, Universidad Carlos III de Madrid, </institution></institution-wrap>Madrid, Spain </aff>
      <aff id="Aff4"><label>4</label><institution-wrap><institution-id institution-id-type="GRID">grid.469673.9</institution-id><institution>Centro de Investigación Biomédica en Red de Salud Mental (CIBERSAM), </institution></institution-wrap>Madrid, Spain </aff>
      <aff id="Aff5"><label>5</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 0125 7682</institution-id><institution-id institution-id-type="GRID">grid.467824.b</institution-id><institution>Centro Nacional Investigaciones Cardiovasculares Carlos III (CNIC), </institution></institution-wrap>Madrid, Spain </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>15</day>
      <month>5</month>
      <year>2018</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>15</day>
      <month>5</month>
      <year>2018</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2018</year>
    </pub-date>
    <volume>19</volume>
    <elocation-id>171</elocation-id>
    <history>
      <date date-type="received">
        <day>9</day>
        <month>8</month>
        <year>2017</year>
      </date>
      <date date-type="accepted">
        <day>26</day>
        <month>4</month>
        <year>2018</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2018</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold> This article is distributed under the terms of the Creative Commons Attribution 4.0 International License(<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The Creative Commons Public Domain Dedication waiver(<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p>Standard cone-beam computed tomography (CBCT) involves the acquisition of at least 360 projections rotating through 360 degrees. Nevertheless, there are cases in which only a few projections can be taken in a limited angular span, such as during surgery, where rotation of the source-detector pair is limited to less than 180 degrees. Reconstruction of limited data with the conventional method proposed by Feldkamp, Davis and Kress (FDK) results in severe artifacts. Iterative methods may compensate for the lack of data by including additional prior information, although they imply a high computational burden and memory consumption.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>We present an accelerated implementation of an iterative method for CBCT following the Split Bregman formulation, which reduces computational time through GPU-accelerated kernels. The implementation enables the reconstruction of large volumes (&gt;1024<sup>3</sup> pixels) using partitioning strategies in forward- and back-projection operations. We evaluated the algorithm on small-animal data for different scenarios with different numbers of projections, angular span, and projection size. Reconstruction time varied linearly with the number of projections and quadratically with projection size but remained almost unchanged with angular span. Forward- and back-projection operations represent 60% of the total computational burden.</p>
      </sec>
      <sec>
        <title>Conclusion</title>
        <p>Efficient implementation using parallel processing and large-memory management strategies together with GPU kernels enables the use of advanced reconstruction approaches which are needed in limited-data scenarios. Our GPU implementation showed a significant time reduction (up to 48 ×) compared to a CPU-only implementation, resulting in a total reconstruction time from several hours to few minutes.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>GPU</kwd>
      <kwd>Memory management</kwd>
      <kwd>Parallel processing</kwd>
      <kwd>Iterative reconstruction</kwd>
      <kwd>Split Bregman</kwd>
      <kwd>Limited-data tomography</kwd>
      <kwd>CBCT</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>Spanish Ministerio de Economia y Competitividad</institution>
        </funding-source>
        <award-id>TEC2013-47270-R</award-id>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>Spanish Ministerio de Economia y Competitividad</institution>
        </funding-source>
        <award-id>RTC-2014-3028-1</award-id>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>Spanish Ministerio de Economia, Industria y Competitividad</institution>
        </funding-source>
        <award-id>TIN2016-79637-P</award-id>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>Spanish Ministerio de Economia, Industria y Competitividad</institution>
        </funding-source>
        <award-id>DPI2016-79075-R</award-id>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>Spanish Ministerio de Educacion, Cultura y Deporte</institution>
        </funding-source>
        <award-id>FPU14/03875</award-id>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100000780</institution-id>
            <institution>European Commission</institution>
          </institution-wrap>
        </funding-source>
        <award-id>644235 RePhrase</award-id>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>Spanish Ministerio de Sanidad y Consumo</institution>
        </funding-source>
        <award-id>CIBER CB07/09/0031</award-id>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2018</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p>The source-detector pair in conventional cone beam computed tomography (CBCT) systems rotates around the patient through 360 degrees (full angular span) to acquire at least 360 projections. However, there are cases in which the number of projections acquired is smaller and/or covers a smaller angular span (down to 150 degrees) owing to movement limitations, as occurs during surgery, or in respiratory-gated CT, where only a few projections correspond to each gate. The reconstruction of these limited data with the conventional method proposed by Feldkamp, Davis and Kress (FDK) results in severe artifacts in the image (streaks and/or edge distortion), making it advisable to use advanced reconstruction methods that compensate for the lack of data by including prior information about the sample. The most common option for prior information is the assumption of local smoothness, which can be imposed by adding the minimization of the L<sub>1</sub> norm of the total variation (TV) term. Since the TV term is not differentiable, the use of traditional reconstruction methods may be subject to instability problems [<xref ref-type="bibr" rid="CR1">1</xref>]. In [<xref ref-type="bibr" rid="CR2">2</xref>], the authors showed that reconstructing limited data in CT can be efficiently solved by means of the Split Bregman formulation, which reduces the optimization problem to a sequence of unconstrained and simpler problems that are updated iteratively.</p>
    <p>In a previous work [<xref ref-type="bibr" rid="CR3">3</xref>], we presented a new reconstruction method based on the Split Bregman formulation. We reported significant image improvement in terms of artifact reduction using this approach for limited-data CBCT, as compared with FDK. We have presented two implementations of this algorithm, one combining <sc>MATLAB</sc> and CUDA [<xref ref-type="bibr" rid="CR3">3</xref>] and another one based on a CPU distributed version [<xref ref-type="bibr" rid="CR4">4</xref>]. The main limitation of both solutions is that only 2D images can be reconstructed owing to computational and memory requirements. Reconstruction of 3D images with these methods was not possible for two main reasons: (1) memory requirements of the algorithm, and (2) long execution times which hinder the reconstruction of standard size volumes in a reasonable amount of time.</p>
    <p>Another example of using <sc>MATLAB</sc> and CUDA is the work by Smith et al. [<xref ref-type="bibr" rid="CR5">5</xref>], an iterative reconstruction method based on Split Bregman for MRI. The main limitation of this work is that the communication between <sc>MATLAB</sc> and GPUs is done through an intermediate library, which increases the overhead with respect to programming in native languages. Furthermore, MRI reconstruction uses FFT (Fast Fourier Transform), which is computationally less expensive than the projection and backprojection kernels needed in CT reconstruction.</p>
    <p>Other works presented CPU-GPU implementations using native languages for FDK [<xref ref-type="bibr" rid="CR6">6</xref>–<xref ref-type="bibr" rid="CR8">8</xref>], a reconstruction method less challenging than iterative reconstruction. Regarding iterative reconstruction algorithms, which include several projection and backprojection operations, techniques employed for parallelization highly affect the reconstruction execution time as shown in [<xref ref-type="bibr" rid="CR9">9</xref>], obtaining a speedup factor between 50 × and 200 × using two GPUs with respect to the execution of the same algorithm in a single-thread CPU. Hu et al. [<xref ref-type="bibr" rid="CR10">10</xref>] proposed an advanced multi-resolution approach to reduce the total execution time. Nevertheless, this work was applied to full span data with a high number of projections. Focusing on the problem of limited data, Jia et al. [<xref ref-type="bibr" rid="CR11">11</xref>] proposed a new iterative method but they did not address the problem of handling large volumes. A more recent work by Matenine et al. [<xref ref-type="bibr" rid="CR12">12</xref>] presented a solution for reduced number of projections, but the authors commented the limitation by the memory capacity of the GPUs. Nevertheless, none of these works addressed the problem of limited angular span.</p>
    <p>In this work, we present an accelerated implementation for limited data both in angular span and number of projections, that uses the GPU for the most time-consuming operations. Our solution includes a partitioning strategy to be able to handle large volumes with a total footprint of several GB.</p>
  </sec>
  <sec id="Sec2">
    <title>Implementation</title>
    <sec id="Sec3">
      <title>Algorithm</title>
      <p>The reconstruction problem follows the TV minimization [<xref ref-type="bibr" rid="CR13">13</xref>]: 
<disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$  min\left \| \nabla (u)\right \|_{1} \quad\! s.t.\left \| Au - f \right \|_{2}^{2} \leq \sigma^{2},\quad\! u \geq 0,\quad\! u \in \Omega  $$ \end{document}</tex-math><mml:math id="M2"><mml:mspace width="-15.0pt"/><mml:mtext mathvariant="italic">min</mml:mtext><mml:msub><mml:mrow><mml:mfenced close="∥" open="∥" separators=""><mml:mrow><mml:mo>∇</mml:mo><mml:mo>(</mml:mo><mml:mi>u</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mfenced></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mspace width="1em"/><mml:mspace width="0.3em"/><mml:mi>s.t.</mml:mi><mml:msubsup><mml:mrow><mml:mfenced close="∥" open="∥" separators=""><mml:mrow><mml:mtext mathvariant="italic">Au</mml:mtext><mml:mo>−</mml:mo><mml:mi>f</mml:mi></mml:mrow></mml:mfenced></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo>≤</mml:mo><mml:msup><mml:mrow><mml:mi>σ</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:mspace width="1em"/><mml:mspace width="0.3em"/><mml:mi>u</mml:mi><mml:mo>≥</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mspace width="1em"/><mml:mspace width="0.3em"/><mml:mi>u</mml:mi><mml:mo>∈</mml:mo><mml:mi>Ω</mml:mi></mml:math><graphic xlink:href="12859_2018_2169_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>where ∥∇(<italic>u</italic>)∥<sub>1</sub> corresponds to the <italic>L</italic><sub>1</sub> norm of the gradient of the reconstructed image <italic>u</italic>, <italic>A</italic> is the system matrix, <italic>f</italic> is the acquisition data, <italic>σ</italic><sup>2</sup> is the image noise, and <italic>Ω</italic> is the subspace corresponding to the field of view (FOV).</p>
      <p>Using the Split Bregman formulation [<xref ref-type="bibr" rid="CR1">1</xref>], the <italic>L</italic><sub>1</sub>-constrained optimization problem shown in Eq. (<xref rid="Equ1" ref-type="">1</xref>) can be converted into the following unconstrained problems, which are solved at each iteration <italic>k</italic>: 
<disp-formula id="Equ2"><label>2</label><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$  {{\begin{aligned} \left(u^{k+1}, d_{x}^{k+1}, d_{y}^{k+1}\right) = min\left \| (d_{x}, d_{y}) \right \|_{1} + \frac{\mu}{2} \left \| Au -f^{k} \right \|_{2}^{2} + \\ +\frac{\lambda}{2} \left \| d_{x} - \nabla_{x} u - b_{x}^{k} \right \|_{2}^{2} + \frac{\lambda}{2} \left \| d_{y} - \nabla_{y} u - b_{y}^{k} \right \|_{2}^{2} \end{aligned}}}  $$ \end{document}</tex-math><mml:math id="M4"><mml:mspace width="-17.0pt"/><mml:mtable><mml:mtr><mml:mtd><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:msubsup><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mtext mathvariant="italic">min</mml:mtext><mml:msub><mml:mrow><mml:mfenced close="∥" open="∥" separators=""><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mi>y</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mfenced></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mi>μ</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:mfrac><mml:msubsup><mml:mrow><mml:mfenced close="∥" open="∥" separators=""><mml:mrow><mml:mtext mathvariant="italic">Au</mml:mtext><mml:mo>−</mml:mo><mml:msup><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo>+</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mi>λ</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:mfrac><mml:msubsup><mml:mrow><mml:mfenced close="∥" open="∥" separators=""><mml:mrow><mml:msub><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mo>∇</mml:mo></mml:mrow><mml:mrow><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mi>u</mml:mi><mml:mo>−</mml:mo><mml:msubsup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mfenced></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mi>λ</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:mfrac><mml:msubsup><mml:mrow><mml:mfenced close="∥" open="∥" separators=""><mml:mrow><mml:msub><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mi>y</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mo>∇</mml:mo></mml:mrow><mml:mrow><mml:mi>y</mml:mi></mml:mrow></mml:msub><mml:mi>u</mml:mi><mml:mo>−</mml:mo><mml:msubsup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mfenced></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup></mml:mtd></mml:mtr></mml:mtable></mml:math><graphic xlink:href="12859_2018_2169_Article_Equ2.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>
        <disp-formula id="Equ3">
          <label>3</label>
          <alternatives>
            <tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ f^{k+1} = f^{k} + f - Au^{k+1}  $$ \end{document}</tex-math>
            <mml:math id="M6">
              <mml:msup>
                <mml:mrow>
                  <mml:mi>f</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mi>k</mml:mi>
                  <mml:mo>+</mml:mo>
                  <mml:mn>1</mml:mn>
                </mml:mrow>
              </mml:msup>
              <mml:mo>=</mml:mo>
              <mml:msup>
                <mml:mrow>
                  <mml:mi>f</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mi>k</mml:mi>
                </mml:mrow>
              </mml:msup>
              <mml:mo>+</mml:mo>
              <mml:mi>f</mml:mi>
              <mml:mo>−</mml:mo>
              <mml:mi>A</mml:mi>
              <mml:msup>
                <mml:mrow>
                  <mml:mi>u</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mi>k</mml:mi>
                  <mml:mo>+</mml:mo>
                  <mml:mn>1</mml:mn>
                </mml:mrow>
              </mml:msup>
            </mml:math>
            <graphic xlink:href="12859_2018_2169_Article_Equ3.gif" position="anchor"/>
          </alternatives>
        </disp-formula>
      </p>
      <p>
        <disp-formula id="Equ4">
          <label>4</label>
          <alternatives>
            <tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ b_{x}^{k+1} = b_{x}^{k} + \nabla_{x}u^{k+1} - d_{x}^{k+1}  $$ \end{document}</tex-math>
            <mml:math id="M8">
              <mml:msubsup>
                <mml:mrow>
                  <mml:mi>b</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mi>x</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mi>k</mml:mi>
                  <mml:mo>+</mml:mo>
                  <mml:mn>1</mml:mn>
                </mml:mrow>
              </mml:msubsup>
              <mml:mo>=</mml:mo>
              <mml:msubsup>
                <mml:mrow>
                  <mml:mi>b</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mi>x</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mi>k</mml:mi>
                </mml:mrow>
              </mml:msubsup>
              <mml:mo>+</mml:mo>
              <mml:msub>
                <mml:mrow>
                  <mml:mo>∇</mml:mo>
                </mml:mrow>
                <mml:mrow>
                  <mml:mi>x</mml:mi>
                </mml:mrow>
              </mml:msub>
              <mml:msup>
                <mml:mrow>
                  <mml:mi>u</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mi>k</mml:mi>
                  <mml:mo>+</mml:mo>
                  <mml:mn>1</mml:mn>
                </mml:mrow>
              </mml:msup>
              <mml:mo>−</mml:mo>
              <mml:msubsup>
                <mml:mrow>
                  <mml:mi>d</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mi>x</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mi>k</mml:mi>
                  <mml:mo>+</mml:mo>
                  <mml:mn>1</mml:mn>
                </mml:mrow>
              </mml:msubsup>
            </mml:math>
            <graphic xlink:href="12859_2018_2169_Article_Equ4.gif" position="anchor"/>
          </alternatives>
        </disp-formula>
      </p>
      <p>
        <disp-formula id="Equ5">
          <label>5</label>
          <alternatives>
            <tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ b_{y}^{k+1} = b_{y}^{k} + \nabla_{y}u^{k+1} - d_{y}^{k+1}  $$ \end{document}</tex-math>
            <mml:math id="M10">
              <mml:msubsup>
                <mml:mrow>
                  <mml:mi>b</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mi>y</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mi>k</mml:mi>
                  <mml:mo>+</mml:mo>
                  <mml:mn>1</mml:mn>
                </mml:mrow>
              </mml:msubsup>
              <mml:mo>=</mml:mo>
              <mml:msubsup>
                <mml:mrow>
                  <mml:mi>b</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mi>y</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mi>k</mml:mi>
                </mml:mrow>
              </mml:msubsup>
              <mml:mo>+</mml:mo>
              <mml:msub>
                <mml:mrow>
                  <mml:mo>∇</mml:mo>
                </mml:mrow>
                <mml:mrow>
                  <mml:mi>y</mml:mi>
                </mml:mrow>
              </mml:msub>
              <mml:msup>
                <mml:mrow>
                  <mml:mi>u</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mi>k</mml:mi>
                  <mml:mo>+</mml:mo>
                  <mml:mn>1</mml:mn>
                </mml:mrow>
              </mml:msup>
              <mml:mo>−</mml:mo>
              <mml:msubsup>
                <mml:mrow>
                  <mml:mi>d</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mi>y</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mi>k</mml:mi>
                  <mml:mo>+</mml:mo>
                  <mml:mn>1</mml:mn>
                </mml:mrow>
              </mml:msubsup>
            </mml:math>
            <graphic xlink:href="12859_2018_2169_Article_Equ5.gif" position="anchor"/>
          </alternatives>
        </disp-formula>
      </p>
      <p>where <italic>μ</italic> and <italic>λ</italic> are regularization parameters. Equation (<xref rid="Equ2" ref-type="">2</xref>) can be split into two sub-problems. The first sub-problem contains only differentiable <italic>L</italic><sub>2</sub>-norm terms. By differentiating with respect to <italic>u</italic> and setting the result to 0, we obtain the following problem: 
<disp-formula id="Equ6"><label>6</label><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$  \left(\mu A^{T} A-\lambda \nabla^{T} \nabla \right) u^{k+1}=\mu A^{T} f^{k}+\lambda \nabla^{T} \left(d^{k}-b^{k}\right)  $$ \end{document}</tex-math><mml:math id="M12"><mml:mspace width="-15.0pt"/><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mi>μ</mml:mi><mml:msup><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:mi>A</mml:mi><mml:mo>−</mml:mo><mml:mi>λ</mml:mi><mml:msup><mml:mrow><mml:mo>∇</mml:mo></mml:mrow><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:mo>∇</mml:mo></mml:mrow></mml:mfenced><mml:msup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mi>μ</mml:mi><mml:msup><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:msup><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:mi>λ</mml:mi><mml:msup><mml:mrow><mml:mo>∇</mml:mo></mml:mrow><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msup><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msup><mml:mo>−</mml:mo><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math><graphic xlink:href="12859_2018_2169_Article_Equ6.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>which can be summarized in the following problem: 
<disp-formula id="Equ7"><label>7</label><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ Ku^{k+1} = rhs^{k}  $$ \end{document}</tex-math><mml:math id="M14"><mml:mi>K</mml:mi><mml:msup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mtext mathvariant="italic">rh</mml:mtext><mml:msup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msup></mml:math><graphic xlink:href="12859_2018_2169_Article_Equ7.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>which is solved iteratively using a Krylov space solver, namely, the biconjugate gradient stabilized method. In this step, an input parameter <italic>β</italic> controls the stability of the problem. The second sub-problem contains <italic>L</italic><sub>1</sub> terms that are not differentiable. Therefore, it is tackled using analytical formulas (shrinkage operation), which need two additional input parameters <italic>α</italic> and <italic>λ</italic>. Finally, Eqs. (<xref rid="Equ3" ref-type="">3</xref>, <xref rid="Equ4" ref-type="">4</xref>, <xref rid="Equ5" ref-type="">5</xref>) are the Bregman iterations that impose constraints for acquired data and total variation, respectively.</p>
    </sec>
    <sec id="Sec4">
      <title>Parallel implementation</title>
      <p>The accelerated implementation proposed (written in C and CUDA) is described in Algorithms 1 and 2 and its workflow representation shown in Figs. <xref rid="Fig1" ref-type="fig">1</xref> and <xref rid="Fig2" ref-type="fig">2</xref>, respectively. These algorithms are executed iteratively in two nested loops.
<fig id="Fig1"><label>Fig. 1</label><caption><p>TV3D iterative reconstruction workflow</p></caption><graphic xlink:href="12859_2018_2169_Fig1_HTML" id="MO1"/></fig>
<fig id="Fig2"><label>Fig. 2</label><caption><p>Workflow of the callback function for Krylov solver</p></caption><graphic xlink:href="12859_2018_2169_Fig2_HTML" id="MO2"/></fig></p>
      <p>The system matrix <italic>A</italic> and its transpose are substituted by a ray-driven projector and a voxel-driven backprojector, which are applied at each iteration a variable number of times, depending on the convergence of the Krylov space solver. Given that those algorithms represent the main computational burden of the method, we implemented them as accelerated kernels that run on GPUs. Other operations that run on GPU are the gradients (<italic>g</italic><italic>r</italic><italic>a</italic><italic>d</italic><italic>i</italic><italic>e</italic><italic>n</italic><italic>t</italic><sub><italic>x</italic></sub>, <italic>g</italic><italic>r</italic><italic>a</italic><italic>d</italic><italic>i</italic><italic>e</italic><italic>n</italic><italic>t</italic><sub><italic>y</italic></sub>), the shrinkage operation (<italic>shrinkage</italic>), and the <italic>L</italic><sub>2</sub>-norm calculation (using CUBLAS library). The remaining element-wise operations are vectorized by the compiler [<xref ref-type="bibr" rid="CR14">14</xref>] and multi-thread CPU parallelized with OpenMP 4.0.</p>
      <p>
        <graphic xlink:href="12859_2018_2169_Figa_HTML.gif" id="MO3"/>
      </p>
      <p>
        <graphic xlink:href="12859_2018_2169_Figb_HTML.gif" id="MO4"/>
      </p>
      <p>The division of the main problem into simpler sub-problems from the Split Bregman formulation results in the need for allocating up to eight times the memory corresponding to the desired output volume, resulting in a total memory footprint of several GB. Given GPU memory restrictions, we implemented a partitioning strategy in both backprojection and projection operations, which are the ones that require the highest amount of memory. With this strategy, input and output data are divided into chunks, and the memory is allocated dynamically.</p>
      <p>The Krylov space solver is implemented with the biconjugate gradient stabilized method, BiCGStab [<xref ref-type="bibr" rid="CR15">15</xref>], where the input matrix in Eqs. (<xref rid="Equ6" ref-type="">6</xref>, <xref rid="Equ7" ref-type="">7</xref>) is substituted by the Algorithm 2.</p>
    </sec>
  </sec>
  <sec id="Sec5" sec-type="results">
    <title>Results</title>
    <p>The method was evaluated in a computer with two Intel(R) Xeon(R) E5-2630 v3 processors at 2.40 GHz and one NVidia Tesla K40c GPU. Limited-data acquisitions (<italic>D</italic><italic>i</italic><italic>m</italic><italic>P</italic><italic>r</italic><italic>o</italic><italic>j</italic>×<italic>D</italic><italic>i</italic><italic>m</italic><italic>P</italic><italic>r</italic><italic>o</italic><italic>j</italic>×<italic>N</italic><italic>u</italic><italic>m</italic><italic>P</italic><italic>r</italic><italic>o</italic><italic>j</italic><italic>s</italic> pixels) were simulated from a previously acquired small-animal scan (512×512×512 pixels; 0.125 mm pixel size), as shown in Fig. <xref rid="Fig3" ref-type="fig">3</xref>, left. We studied the following parameters: dependency on the number of projections with <italic>NumProj</italic> = 45, 60, 90, and 120 covering an angular span of 360 degrees and <italic>D</italic><italic>i</italic><italic>m</italic><italic>P</italic><italic>r</italic><italic>o</italic><italic>j</italic>=512; dependency on angular span for <italic>N</italic><italic>u</italic><italic>m</italic><italic>P</italic><italic>r</italic><italic>o</italic><italic>j</italic>=45 uniformly distributed in an angular span of 45, 60, 90, 135, 150, 180, and 270 degrees (<italic>D</italic><italic>i</italic><italic>m</italic><italic>P</italic><italic>r</italic><italic>o</italic><italic>j</italic>=512); and the effects of the projection size, by considering <italic>DimProj</italic> = 256, 512, and 1024 when 90 projections are obtained uniformly distributed in an angular span of 360 degrees. All simulations were generated using FUX-SIM [<xref ref-type="bibr" rid="CR16">16</xref>], a simulation/reconstruction framework for X-ray systems.
<fig id="Fig3"><label>Fig. 3</label><caption><p>From left to right: reference image and reconstructed image with the FDK-method and the proposed iterative method. Top panel corresponds to the case of 60 projections covering an angular span of 360 degrees and bottom panel to the case of 45 projections covering an angular span of 150 degrees. Yellow circle in the bottom left panel shows the ROI for the SNR measurement</p></caption><graphic xlink:href="12859_2018_2169_Fig3_HTML" id="MO5"/></fig></p>
    <p>These data were reconstructed with an FDK-based method [<xref ref-type="bibr" rid="CR17">17</xref>] and the proposed iterative method resulting in a volume of <italic>D</italic><italic>i</italic><italic>m</italic><italic>P</italic><italic>r</italic><italic>o</italic><italic>j</italic>×<italic>D</italic><italic>i</italic><italic>m</italic><italic>P</italic><italic>r</italic><italic>o</italic><italic>j</italic>×<italic>D</italic><italic>i</italic><italic>m</italic><italic>P</italic><italic>r</italic><italic>o</italic><italic>j</italic> pixels. For the latter, we used <italic>α</italic>=0.003, <italic>μ</italic>=20, <italic>β</italic>=3, and <italic>λ</italic>=2 as reconstruction parameters (see [<xref ref-type="bibr" rid="CR2">2</xref>] for details on how to select these parameters). The number of iterations (<italic>iterations</italic> in Algorithm 1, line 4) was 35, selected high enough to ensure an error variation smaller than 1%.</p>
    <p>Figure <xref rid="Fig3" ref-type="fig">3</xref> shows the reference image (FDK reconstruction of the complete dataset) and the results of FDK and the proposed iterative method for two limited-data configurations. Image quality was assessed with two metrics. To evaluate the global image quality, we calculated the root mean square error (RMSE) between the reference image and the intermediate solution <italic>u</italic><sup><italic>k</italic></sup> from the limited dataset. To evaluate the influence of streaks and noise in the reconstructed image, we measured the improvement of signal to noise ratio (SNR) obtained with the iterative method with respect to the FDK-based method in the homogeneous area indicated in Fig. <xref rid="Fig3" ref-type="fig">3</xref>. Table <xref rid="Tab1" ref-type="table">1</xref> shows both metrics for different number of projections and angular span, with a noticeable improvement when increasing the angular span despite the low number of projections. Figure <xref rid="Fig4" ref-type="fig">4</xref> plots the dependence of the RMSE with the number of iterations, <italic>k</italic>, for six different limited-data cases varying the angular span and the number of projections. We can see that the proposed iterative method shows a similar behaviour for all limited-data configurations.
<fig id="Fig4"><label>Fig. 4</label><caption><p>RMSE vs. iterations for 60, 90 and 120 projections (full span) angular span of 135, 150 and 180 degrees (45 projections)</p></caption><graphic xlink:href="12859_2018_2169_Fig4_HTML" id="MO6"/></fig>
<table-wrap id="Tab1"><label>Table 1</label><caption><p>SNR difference in dB between the FDK and the iterative reconstruction; RMSE between the iterative reconstruction and the reference image for different limited-data configurations</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Angular span</th><th align="left">Projections</th><th align="left">SNR Difference (dB)</th><th align="left">RMSE</th></tr></thead><tbody><tr><td align="left">135</td><td align="left">45</td><td align="left">20.79</td><td align="left">0.268</td></tr><tr><td align="left">150</td><td align="left">45</td><td align="left">23.20</td><td align="left">0.220</td></tr><tr><td align="left">360</td><td align="left">45</td><td align="left">28.27</td><td align="left">0.154</td></tr><tr><td align="left">360</td><td align="left">90</td><td align="left">26.17</td><td align="left">0.153</td></tr><tr><td align="left">360</td><td align="left">120</td><td align="left">25.98</td><td align="left">0.151</td></tr></tbody></table></table-wrap></p>
    <p>Figures <xref rid="Fig5" ref-type="fig">5</xref>, <xref rid="Fig6" ref-type="fig">6</xref>, and <xref rid="Fig7" ref-type="fig">7</xref> show the breakdown of the reconstruction time of each configuration, obtained as the average of three consecutive executions in order to avoid time variability due to operating system operations. Reconstruction time is divided into backprojection, forward projection, and time spent in other operations including I/O operations and CPU computation.
<fig id="Fig5"><label>Fig. 5</label><caption><p>Execution time (in seconds) for different number of projections (<italic>NumProj</italic>)</p></caption><graphic xlink:href="12859_2018_2169_Fig5_HTML" id="MO7"/></fig>
<fig id="Fig6"><label>Fig. 6</label><caption><p>Execution time (in seconds) for different angular span (degrees)</p></caption><graphic xlink:href="12859_2018_2169_Fig6_HTML" id="MO8"/></fig>
<fig id="Fig7"><label>Fig. 7</label><caption><p>Execution time (in seconds) for different projection size (<italic>DimProj</italic>)</p></caption><graphic xlink:href="12859_2018_2169_Fig7_HTML" id="MO9"/></fig></p>
    <p>Finally, we compared our implementation in GPU of the iterative method with a CPU-only implementation of the same iterative method parallelized using OpenMP to fully exploit multi-core architectures. Figures <xref rid="Fig8" ref-type="fig">8</xref> and <xref rid="Fig9" ref-type="fig">9</xref> plot the time spent in the first iteration (average of three different executions) reaching a speedup factor of 48 × with the GPU implementation with respect with the CPU-only one.
<fig id="Fig8"><label>Fig. 8</label><caption><p>Execution time (in seconds) of the first iteration for both CPU and GPU implementations for different number of projections (<italic>NumProj</italic>)</p></caption><graphic xlink:href="12859_2018_2169_Fig8_HTML" id="MO10"/></fig>
<fig id="Fig9"><label>Fig. 9</label><caption><p>Execution time (in seconds) of the first iteration for both CPU and GPU implementations for different angular span (degrees)</p></caption><graphic xlink:href="12859_2018_2169_Fig9_HTML" id="MO11"/></fig></p>
  </sec>
  <sec id="Sec6">
    <title>Discussion and conclusions</title>
    <p>We present an accelerated implementation of a method for 3D limited-data tomography solved in an efficient way by using a GPU for the most time-consuming operations.</p>
    <p>Our evaluation of the method showed a high reduction of the severe artifacts present when using the conventional FDK-based method for cases with low number of projections, with an SNR improvement better than 20 dB for all cases. The image distortion due to the limited angular span was also reduced with the proposed method.</p>
    <p>To evaluate the performance of the implementation according to data size, we fixed a high number of iterations (<italic>i</italic><italic>t</italic><italic>e</italic><italic>r</italic><italic>a</italic><italic>t</italic><italic>i</italic><italic>o</italic><italic>n</italic><italic>s</italic>=35) for all experiments in order to ensure optimum image quality for the worst conditions. Nevertheless, in some cases, the number of iterations could be lowered, resulting in shorter reconstruction times: for example, with 60 projections and an angular span of 360 degrees, 20 iterations were enough for a high quality image. In all experiments, backprojection and forward projection operations represented at least 50% of total execution time, reaching a maximum of 80% of the time when the acquired data set is large. Neither the iterative Krylov space solver nor reading and writing operations significantly increase total time. The execution time of the proposed implementation varies linearly with the number of projections and does not depend significantly on the angular span. The size of the input projections results in a quadratic increase in total computing time.</p>
    <p>Reconstructions of large studies (volume of 1024×1024×1024 pixels) are feasible with this accelerated implementation of the iterative method thanks to the partitioning strategy followed for both backprojection and forward projection operations.</p>
    <p>Our GPU implementation showed significant time reduction (up to 48 ×) compared with a CPU-only implementation, resulting in a decrease of the total reconstruction time from several hours to few minutes. A fair comparison with other iterative reconstruction implementations proposed in the literature is not feasible owing to differences in the specific algorithms and the hardware used. Nevertheless, we note that the work by Matenine et al. [<xref ref-type="bibr" rid="CR12">12</xref>], which is the most similar to our solution, was limited by the memory capacity of the GPUs and did not address the problem of limited angular span. In contrast, our GPU accelerated algorithm obtains similar results in terms of execution time despite the fact that it works with large detector and reconstructed volume sizes with a low number of projections in a limited angular span, which increase significantly the number of iterations needed for convergence.</p>
    <p>Regarding our previous implementations of the same algorithm, the implementation we propose substantially reduces reconstruction time and hardware resources. As previously reported [<xref ref-type="bibr" rid="CR3">3</xref>], a solution combining <sc>MATLAB</sc> and CUDA kernels required a large amount of memory transfers between the CPU and the GPU, resulting in increased execution times, which is unfeasible for the large 3D volumes in real scenarios. This problem is partially solved here due to the use of native code and explicit memory transfers. On the other hand, the complete CPU-based implementation presented in [<xref ref-type="bibr" rid="CR4">4</xref>] required a high volume of distributed resources to obtain acceptable execution times. For example, using 12 compute nodes resulted in more than 1,000 seconds for a volume of 512×512×512 pixels for only 2 iterations of the algorithm, which is insufficient to obtain a high-quality image.</p>
    <p>Efficient implementation using parallel processing and large-memory management strategies together with GPU kernels enables the use of advanced reconstruction approaches which are needed in limited-data scenarios.</p>
  </sec>
  <sec id="Sec7">
    <title>Availability and requirements</title>
    <p><bold>Project name:</bold> RecoItTV<bold>Project home page:</bold><ext-link ext-link-type="uri" xlink:href="https://github.com/arcosuc3m/recoittv">https://github.com/arcosuc3m/recoittv</ext-link><bold>Operating Systems(s):</bold> Windows, Linux, MacOS<bold>Programming language:</bold> C<bold>Other requirements:</bold> NVidia CUDA must be installed.<bold>License:</bold> Creative commons Non Commercial</p>
  </sec>
</body>
<back>
  <ack>
    <sec id="d29e1704">
      <title>Funding</title>
      <p>This work has been supported by TEC2013-47270-R, RTC-2014-3028-1, TIN2016-79637-P (Spanish Ministerio de Economia y Competitividad), DPI2016-79075-R (Spanish Ministerio de Economia, Industria y Competitividad), CIBER CB07/09/0031 (Spanish Ministerio de Sanidad y Consumo), RePhrase 644235 (European Commission) and grant FPU14/03875 (Spanish Ministerio de Educacion, Cultura y Deporte).</p>
    </sec>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors’ contributions</title>
    <p>CM and ES were the principal developers and worked on the formal analysis, investigation, and validation. JG contributed with methodology, resources, software, validation, and writing. JC collaborated in the funding acquisition and writing. MD contributed with conceptualization, funding acquisition and writing. MA conceived the general project and supervised it, contributing with formal analysis, investigation, validation, writing and funding acquisition. All authors read and approved the final manuscript.</p>
  </notes>
  <notes notes-type="COI-statement">
    <sec id="d29e1715">
      <title>Competing interests</title>
      <p>The NVIDIA K40 graphic card is part of a non-commercial donation from NVIDIA Corporation. This hardware device was donated by NVIDIA freely as an unrestricted gift to support the research of Javier Garcia-Blas, one of the authors of this work. In this hardware, we have carried out the experimental evaluation of our prototype. We mention the hardware employed for reproducibility reasons, so there are no commercial intentions from our side. There are not comparisons with any other hardware providers. There are no patents, products in development, or marketed products to declare.</p>
    </sec>
    <sec id="d29e1720">
      <title>Publisher’s Note</title>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </sec>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1</label>
      <mixed-citation publication-type="other">Goldstein T, Osher S. The split bregman method for L1-regularized problems. SIAM J Img Sci. 2009; 2(2):323–43. 10.1137/080725891.</mixed-citation>
    </ref>
    <ref id="CR2">
      <label>2</label>
      <mixed-citation publication-type="other">Abascal JFPJ, Abella M, Sisniega A, Vaquero JJ, Desco M. Investigation of different sparsity transforms for the PICCS algorithm in small-animal respiratory gated CT. PLOS ONE. 2015; 10(4):1–18. 10.1371/journal.pone.0120140.</mixed-citation>
    </ref>
    <ref id="CR3">
      <label>3</label>
      <mixed-citation publication-type="other">de Molina C, Abascal JFPJ, Pascau J, Desco M, Abella M. Evaluation of the possibilities of limited angle reconstruction for the use of digital Radiography system as a tomograph. In: IEEE Nuclear Science Symposium and Medical Imaging Conference (NSS/MIC). US: IEEE: 2014. p. 1–4. 10.1109/NSSMIC.2014.7430937.</mixed-citation>
    </ref>
    <ref id="CR4">
      <label>4</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Serrano</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Aa</surname>
            <given-names>TV</given-names>
          </name>
          <name>
            <surname>Wuyts</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Garcia-Blas</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Carretero</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Abella</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Exploring a distributed iterative reconstructor based on split Bregman using PETSc</article-title>
        <source>16th International Conference on Algorithms and Architectures for Parallel Processing</source>
        <year>2016</year>
        <publisher-loc>Switzerland</publisher-loc>
        <publisher-name>Springer International Publishing</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5</label>
      <mixed-citation publication-type="other">Smith DS, Gore JC, Yankeelov TE, Welch EB. Real-time compressive sensing mri reconstruction using gpu computing and split bregman methods. Int J Biomed Imaging. 2012; 2012.</mixed-citation>
    </ref>
    <ref id="CR6">
      <label>6</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhao</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Hu</surname>
            <given-names>J-J</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>GPU-based 3D cone-beam CT image reconstruction for large data volume</article-title>
        <source>J Biomed Imaging</source>
        <year>2009</year>
        <volume>2009</volume>
        <fpage>8</fpage>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Leeser</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Mukherjee</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Brock</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Fast reconstruction of 3D volumes from 2D CT projection data with GPUs</article-title>
        <source>BMC Res Notes</source>
        <year>2014</year>
        <volume>7</volume>
        <issue>1</issue>
        <fpage>582</fpage>
        <pub-id pub-id-type="doi">10.1186/1756-0500-7-582</pub-id>
        <?supplied-pmid 25176282?>
        <pub-id pub-id-type="pmid">25176282</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Blas</surname>
            <given-names>JG</given-names>
          </name>
          <name>
            <surname>Abella</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Isaila</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Carretero</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Desco</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Surfing the optimization space of a multiple-GPU parallel implementation of a X-ray tomography reconstruction algorithm</article-title>
        <source>J Syst Softw</source>
        <year>2014</year>
        <volume>95</volume>
        <fpage>166</fpage>
        <lpage>75</lpage>
        <pub-id pub-id-type="doi">10.1016/j.jss.2014.03.083</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wan</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Chu</surname>
            <given-names>Q</given-names>
          </name>
          <name>
            <surname>Liu</surname>
            <given-names>Z</given-names>
          </name>
        </person-group>
        <article-title>High-performance blob-based iterative three-dimensional reconstruction in electron tomography using multi-GPUs</article-title>
        <source>BMC Bioinformatics</source>
        <year>2012</year>
        <volume>13</volume>
        <issue>10</issue>
        <fpage>4</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-13-S10-S4</pub-id>
        <pub-id pub-id-type="pmid">22226192</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10</label>
      <mixed-citation publication-type="other">Hu J, Zhao X, Zhang H. A GPU-based multi-resolution approach to iterative reconstruction algorithms in x-ray 3D dual spectral computed tomography. Neurocomputing. 2016; 215:71–81. 10.1016/j.neucom.2016.01.115. SI: Stereo Data.</mixed-citation>
    </ref>
    <ref id="CR11">
      <label>11</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jia</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Dong</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Lou</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Jiang</surname>
            <given-names>SB</given-names>
          </name>
        </person-group>
        <article-title>GPU-based iterative cone-beam CT reconstruction using tight frame regularization</article-title>
        <source>Phys Med Biol</source>
        <year>2011</year>
        <volume>56</volume>
        <issue>13</issue>
        <fpage>3787</fpage>
        <pub-id pub-id-type="doi">10.1088/0031-9155/56/13/004</pub-id>
        <?supplied-pmid 21628778?>
        <pub-id pub-id-type="pmid">21628778</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12</label>
      <mixed-citation publication-type="other">Matenine D, Goussard Y, Després P. GPU-accelerated regularized iterative reconstruction for few-view cone beam CT. Med Phys. 2015; 42(4):1505–17. 10.1118/1.4914143.</mixed-citation>
    </ref>
    <ref id="CR13">
      <label>13</label>
      <mixed-citation publication-type="other">Rudin LI, Osher S, Fatemi E. Nonlinear Total Variation Based Noise Removal Algorithms. Phys. D. 1992; 60(1-4):259–68. 10.1016/0167-2789(92)90242-F.</mixed-citation>
    </ref>
    <ref id="CR14">
      <label>14</label>
      <mixed-citation publication-type="other">Agulleiro JI, Fernandez JJ. Fast tomographic reconstruction on multicore computers. Bioinformatics. 2011; 27(4):582–3. 10.1093/bioinformatics/btq692.</mixed-citation>
    </ref>
    <ref id="CR15">
      <label>15</label>
      <mixed-citation publication-type="other">van der Vorst HA. BI-CGSTAB: a fast and smoothly converging variant of BI-CG for the solution of nonsymmetric linear systems. SIAM J Sci Stat Comput. 1992; 13(2):631–44. 10.1137/0913035.</mixed-citation>
    </ref>
    <ref id="CR16">
      <label>16</label>
      <mixed-citation publication-type="other">Abella M, Serrano E, Garcia- Blas J, García I, de Molina C, Carretero J, Desco M. FUX-Sim: Implementation of a fast universal simulation/reconstruction framework for X-ray systems. PLOS ONE. 2017; 12(7):1–22. 10.1371/journal.pone.0180363.</mixed-citation>
    </ref>
    <ref id="CR17">
      <label>17</label>
      <mixed-citation publication-type="other">Abella M, Vaquero JJ, Sisniega A, Pascau J, Udías A, García V, Vidal I, Desco M. Software architecture for multi-bed FDK-based reconstruction in X-ray CT scanners. Comput Methods Prog Biomed. 2012; 107(2):218–32. 10.1016/j.cmpb.2011.06.008.</mixed-citation>
    </ref>
  </ref-list>
</back>

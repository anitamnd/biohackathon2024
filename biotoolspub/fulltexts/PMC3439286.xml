<?DTDIdentifier.IdentifierValue article.dtd?>
<?DTDIdentifier.IdentifierType system?>
<?SourceDTD.DTDName article.dtd?>
<?SourceDTD.Version 1.0?>
<?ConverterInfo.XSLTName bmc2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Syst Biol</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Syst Biol</journal-id>
    <journal-title-group>
      <journal-title>BMC Systems Biology</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1752-0509</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">3439286</article-id>
    <article-id pub-id-type="publisher-id">1752-0509-6-76</article-id>
    <article-id pub-id-type="pmid">22727185</article-id>
    <article-id pub-id-type="doi">10.1186/1752-0509-6-76</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>URDME: a modular framework for stochastic simulation of reaction-transport processes in complex geometries</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" id="A1">
        <name>
          <surname>Drawert</surname>
          <given-names>Brian</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>bdrawert@cs.ucsb.edu</email>
      </contrib>
      <contrib contrib-type="author" id="A2">
        <name>
          <surname>Engblom</surname>
          <given-names>Stefan</given-names>
        </name>
        <xref ref-type="aff" rid="I2">2</xref>
        <xref ref-type="aff" rid="I3">3</xref>
        <email>stefane@it.uu.se</email>
      </contrib>
      <contrib contrib-type="author" corresp="yes" id="A3">
        <name>
          <surname>Hellander</surname>
          <given-names>Andreas</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>andreash@cs.ucsb.edu</email>
      </contrib>
    </contrib-group>
    <aff id="I1"><label>1</label>Department of Computer Science, University of California, Santa Barbara, California 93106, USA</aff>
    <aff id="I2"><label>2</label>Department of Information Technology, Uppsala University, Uppsala 75105, Box 337, Sweden</aff>
    <aff id="I3"><label>3</label>UPMARC, Uppsala Programming for Multicore Architectures Research Center, Uppsala, Sweden</aff>
    <pub-date pub-type="collection">
      <year>2012</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>22</day>
      <month>6</month>
      <year>2012</year>
    </pub-date>
    <volume>6</volume>
    <fpage>76</fpage>
    <lpage>76</lpage>
    <history>
      <date date-type="received">
        <day>10</day>
        <month>1</month>
        <year>2012</year>
      </date>
      <date date-type="accepted">
        <day>22</day>
        <month>6</month>
        <year>2012</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright Â©2012 Drawert et al.; licensee BioMed Central Ltd.</copyright-statement>
      <copyright-year>2012</copyright-year>
      <copyright-holder>Drawert et al.; licensee BioMed Central Ltd.</copyright-holder>
      <license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0">http://creativecommons.org/licenses/by/2.0</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="http://www.biomedcentral.com/1752-0509/6/76"/>
    <abstract>
      <sec>
        <title>Background</title>
        <p>Experiments <italic>in silico</italic> using stochastic reaction-diffusion models have emerged as an important tool in molecular systems biology. Designing computational software for such applications poses several challenges. Firstly, realistic lattice-based modeling for biological applications requires a consistent way of handling complex geometries, including curved inner- and outer boundaries. Secondly, spatiotemporal stochastic simulations are computationally expensive due to the fast time scales of individual reaction- and diffusion events when compared to the biological phenomena of actual interest. We therefore argue that simulation software needs to be both computationally efficient, employing sophisticated algorithms, yet in the same time flexible in order to meet present and future needs of increasingly complex biological modeling.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>We have developed URDME, a flexible software framework for general stochastic reaction-transport modeling and simulation. URDME uses <bold>U</bold>nstructured triangular and tetrahedral meshes to resolve general geometries, and relies on the <bold>R</bold>eaction-<bold>D</bold>iffusion <bold>M</bold>aster <bold>E</bold>quation formalism to model the processes under study. An interface to a mature geometry and mesh handling external software (Comsol Multiphysics) provides for a stable and interactive environment for model construction. The core simulation routines are logically separated from the model building interface and written in a low-level language for computational efficiency. The connection to the geometry handling software is realized via a Matlab interface which facilitates script computing, data management, and post-processing. For practitioners, the software therefore behaves much as an interactive Matlab toolbox. At the same time, it is possible to modify and extend URDME with newly developed simulation routines. Since the overall design effectively hides the complexity of managing the geometry and meshes, this means that newly developed methods may be tested in a realistic setting already at an early stage of development.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p>In this paper we demonstrate, in a series of examples with high relevance to the molecular systems biology community, that the proposed software framework is a useful tool for both practitioners and developers of spatial stochastic simulation algorithms. Through the combined efforts of algorithm development and improved modeling accuracy, increasingly complex biological models become feasible to study through computational methods. URDME is freely available at <ext-link ext-link-type="uri" xlink:href="http://www.urdme.org">http://www.urdme.org</ext-link>.</p>
      </sec>
    </abstract>
  </article-meta>
</front>
<body>
  <sec>
    <title>Background</title>
    <p>Stochastic simulation of reaction kinetics has emerged as an important computational tool in molecular systems biology. In cases for which mean-field analysis has been shown to be insufficient, stochastic models provide a more accurate, yet computationally tractable alternative [<xref ref-type="bibr" rid="B1">1</xref>-<xref ref-type="bibr" rid="B3">3</xref>]. For example, a frequently studied topic is the mechanisms for robustness of gene regulatory networks relative to intrinsic and extrinsic noise [<xref ref-type="bibr" rid="B4">4</xref>-<xref ref-type="bibr" rid="B6">6</xref>]. In a stochastic mesoscopic model the time evolution of the number of molecules of each species is described by a continuous-time discrete-state Markov process. Realizations of this process can be generated using techniques such as the Stochastic Simulation Algorithm (SSA) [<xref ref-type="bibr" rid="B7">7</xref>].</p>
    <p>If the system can be assumed to be spatially homogeneous, or well-stirred, simulations are simplified considerably compared to a spatially varying setting. However, there are many phenomena inside the living cell for which spatial effects play an important role [<xref ref-type="bibr" rid="B8">8</xref>,<xref ref-type="bibr" rid="B9">9</xref>]. In such cases, a mesoscopic spatial model can be formulated by first discretizing the computational domain into subvolumes, or voxels. Molecular transport processes are then modeled as combined decay- and creation events that take a molecule from one voxel to an adjacent one [<xref ref-type="bibr" rid="B10">10</xref>,<xref ref-type="bibr" rid="B11">11</xref>]. For appropriate discretizations [<xref ref-type="bibr" rid="B12">12</xref>,<xref ref-type="bibr" rid="B13">13</xref>], the assumption of spatial homogeneity holds approximately within each voxel, where reactions can be simulated as in the well-stirred case. The governing equation for the probability density function is called the Reaction Diffusion Master Equation (RDME) and methods to generate realizations in this framework have been used previously to study reaction-diffusion systems in the context of molecular cell biology [<xref ref-type="bibr" rid="B8">8</xref>,<xref ref-type="bibr" rid="B14">14</xref>-<xref ref-type="bibr" rid="B16">16</xref>].</p>
    <p>Modern experimental techniques can provide information not only on the total copy numbers but also on the spatial localization of individual molecules [<xref ref-type="bibr" rid="B17">17</xref>,<xref ref-type="bibr" rid="B18">18</xref>]. As such techniques are further developed and spatial models can be calibrated to biological data, methods and software for flexible and efficient simulation of spatial stochastic models will likely continue to grow in importance. As a coarse-grained alternative to detailed microscopic models based on Smoluchowski reaction dynamics [<xref ref-type="bibr" rid="B19">19</xref>,<xref ref-type="bibr" rid="B20">20</xref>], or other similar microscale simulators such as MCell [<xref ref-type="bibr" rid="B21">21</xref>], simulations in the RDME framework are orders of magnitude faster than microscopic alternatives [<xref ref-type="bibr" rid="B22">22</xref>].</p>
    <p>For most applications, a large number of sample realizations need to be generated to allow for a useful statistical analysis. Exploring parameter regimes or estimating responses to different stimuli adds to the complexity so that the generation of tens of thousands of independent realizations is not uncommon. Computational efficiency is therefore an important concern and has motivated research in many types of approximate or optimized methods (see for example [<xref ref-type="bibr" rid="B23">23</xref>-<xref ref-type="bibr" rid="B27">27</xref>]).</p>
    <p>Despite advances in the development of approximate methods, spatial stochastic simulation in realistic geometries is still challenging. One of the main reasons is the complexity involved in handling the 3D geometry and the associated mesh. The purpose with this paper is to introduce URDME, a modular software framework for spatial stochastic simulation. The goal of URDME is twofold: firstly, it provides applied users with a powerful and user-friendly modeling environment that supports realistic geometries. Secondly, URDME facilitates the development of new computational methods by taking care of the technical details concerning the geometry, the mesh generation, and the assembly of local rate constants. By providing a well-defined interface to the modeling environment, new algorithms can be incorporated into the URDME framework as plug-in solvers. We anticipate that this modular structure will facilitate the development and dissemination of advanced simulation methodologies to real-world molecular biology applications.</p>
    <p>URDME differs from other public domain software for mesoscopic simulations such as MesoRD [<xref ref-type="bibr" rid="B28">28</xref>] or SmartCell [<xref ref-type="bibr" rid="B29">29</xref>], in that it uses unstructured tetrahedral meshes to discretize the domain, offering a much greater geometrical flexibility and better resolution of curved surfaces compared to Cartesian meshes. URDME shares its utilization of tetrahedral meshes with another reaction-diffusion simulation software, STEPS [<xref ref-type="bibr" rid="B22">22</xref>], which we will discuss later in the paper. One of the defining features of URDME is that it is structured to be highly modular in order to be useful as a platform for developers of the associated computational tools. This design also allows for flexible work-flows for result generation. When used interactively, URDMEâs Matlab interface provides for convenient model construction and evaluation. Since the solvers are automatically compiled into optimized stand-alone executables, URDME can also be used to define batch jobs using the very same Matlab interface. In this way, URDME is a convenient platform both in the initial modeling phase as well as when performing high-performance and/or high-throughput computational analysis.</p>
  </sec>
  <sec>
    <title>Implementation</title>
    <p>In this section we describe how the URDME framework is structured, how it is used to simulate a model, and how to interface with it to add new simulation algorithms. For more details we refer to the software manual [<xref ref-type="bibr" rid="B30">30</xref>] included in the software distribution (Additional file <xref ref-type="supplementary-material" rid="S1">1</xref>).</p>
    <sec>
      <title>Overview</title>
      <p>The URDME framework consists of three logical layers connected by well-defined interfaces (see Figure <xref ref-type="fig" rid="F1">1</xref>). At the top level, a third-party software for mesh-generation is used to define the geometry and to generate the mesh. Currently, URDME interfaces with Comsol Multiphysics 3.5a for this functionality. The middle layer routines in Matlab serve as an interactive environment for model construction, and connects the geometry and mesh-handling facilities of Comsol with the core simulation algorithms (bottom layer).</p>
      <fig id="F1" position="float">
        <label>Figure 1</label>
        <caption>
          <p><bold>The URDME framework consists of three loosely coupled layers.</bold> Solvers reside at the bottom level and are most often written in a compiled language like ANSI-C. The middle layer provides for interfaces between the solvers and the top-level mesh-generation infrastructure. Both the top- and the bottom-layer may be replaced by other software as long as the middle level is extended appropriately.</p>
        </caption>
        <graphic xlink:href="1752-0509-6-76-1"/>
      </fig>
      <p>With this modular structure, the top level can be replaced by other mesh generation software such as for example Gmsh [<xref ref-type="bibr" rid="B31">31</xref>], provided that the appropriate interface routines are added to the middle level interface. Relying on Comsol Multiphysics for the geometry definition and mesh-generation provides for a convenient interactive environment for the model construction, allowing advanced models to be formulated quite easily.</p>
      <p>The default core solver at the bottom level is an optimized implementation of the Next Subvolume Method (NSM) [<xref ref-type="bibr" rid="B8">8</xref>]. Since the solver layer is kept separate from the model building interface, new solvers can easily be added to URDME while taking advantage of all of the infrastructure related to model management and post-processing. The data passed to the solvers is well-defined and documented (see [<xref ref-type="bibr" rid="B30">30</xref>] for more information). It is our goal for URDME to grow through the contribution of solvers from the community. One such solver has already been contributed and distributed in this way: the diffusive finite state projection (DFSP) algorithm [<xref ref-type="bibr" rid="B32">32</xref>]. Additionally, the URDME framework has been utilized in the development of new algorithms [<xref ref-type="bibr" rid="B27">27</xref>,<xref ref-type="bibr" rid="B33">33</xref>,<xref ref-type="bibr" rid="B34">34</xref>] and a master equation formulation of active transport on microtubules [<xref ref-type="bibr" rid="B35">35</xref>].</p>
    </sec>
    <sec>
      <title>Using URDME for model development and simulation</title>
      <p>The process of analyzing a reaction-diffusion model with URDME begins with the creation of a Comsol model file that defines the geometry of the domain, including (optionally) the subdomains where specific <italic>localized</italic> reactions are to be defined (e.g. membrane, cytosol, and nucleus). At this stage, the biochemical species and their associated diffusion rates are also defined. Once the model is set up, the mesh generation facilities of Comsol are used to create a tetrahedral discretization of the domain. Next, this information is exported to Matlab via an API connection as illustrated in Figure <xref ref-type="fig" rid="F2">2</xref>A (top). The interface routines of URDME are then used to assemble the data structures needed by the core simulation routines. This whole process is summarized in Figure <xref ref-type="fig" rid="F2">2</xref>A (bottom).</p>
      <fig id="F2" position="float">
        <label>Figure 2</label>
        <caption>
          <p><bold>Summary of the URDME software infrastructure.</bold> (<bold>A</bold>) URDME flow diagram for the complete simulation process. (<bold>B</bold>) Process flow diagram for the stochastic simulation step of (A) using the NSM solver. (<bold>C</bold>) DFSP solver flow diagram, an alternative to (B) for the stochastic simulation step.</p>
        </caption>
        <graphic xlink:href="1752-0509-6-76-2"/>
      </fig>
      <p>Apart from defining the geometry, the user also needs to create two additional program files to be used by URDME. The first is a Matlab function (referred to as the <italic>model file</italic>), that defines the data related to the actual simulation. This includes the initial distribution of molecules, the stoichiometric matrix defining the topology of the reaction network, a certain dependency graph for events in the model, and the simulation interval (for a detailed list, see [<xref ref-type="bibr" rid="B30">30</xref>]). This model file can also be used to define custom configurations for the model, including restricting a species to a specific subdomain, adding modified transport terms, and evaluating expressions over the geometry such that this information can be passed on to the core solver. In this way, URDME supports custom modeling that would be very hard to achieve with a less flexible software architecture. This, we argue, is one of the defining and unique features of the URDME framework.</p>
      <p>The second program file a user must create is a templated C-program file that defines the propensity functions for the chemical reactions of the model. This file defines one function for each chemical reaction in the system and are called by the core solver routines to calculate the propensity for each reaction in each voxel. The propensity function template requires the output to depend only on the system state at the current time, but is unique to a voxel and allows for additional data to be passed on to the function. The propensity function file is later automatically compiled and linked with the core solver, resulting in a highly efficient solution procedure.</p>
      <p>Once the model data structure has been exported to Matlab and the model and propensity functions have been defined, the next step is to let URDME execute a simulation of the model. From the usersâ perspective, simulation now only requires to invoke the urdme function in Matlab with the proper arguments,</p>
      <p>&gt;&gt; model = urdme(model,@model_file, {âPropensitiesâ,âpropensity_fileâ});</p>
      <p>The arguments passed are the Comsol data structure, the model function, the propensity functions, and various optional arguments. URDME now invokes GCC to compile the propensity function file with the specified solver (defaulting to NSM) to create a dedicated executable for the model. This executable is then invoked using the model and geometry data structure as inputs. Note that compilation and execution of the low-level components of the system is fully automatic, and requires no additional action from the user. Following a successful execution of the core solver the urdme function returns a modified model data structure with a single stochastic solution trajectory attached to it.</p>
      <p>Since the layers of URDME are decoupled, it is also possible to execute the solvers in non-interactive batch mode to allow for more flexible result generation and distribution of computations on a multicore platform. For example, to conduct the simulation in background mode and write the resulting trajectory to the file âoutput.matâ one simply invokes urdme with a few additional arguments,</p>
      <p>&gt;&gt; model = urdme(model,@model_file, {âPropensitiesâ,âpropensity_fileâ, ... âModeâ,âbgâ,âOutputâ,âoutput.matâ});</p>
      <p>Here, control returns to Matlab directly after execution of the solver executable, without waiting for it to complete.</p>
      <p>Visualization and post-processing are important components in most simulation software. Once a URDME simulation is complete, users can easily visualize the spatially varying concentration of biochemical species in their model by using Matlabâs interface to the Comsol graphics routines. Examples of this will be presented in the Results section. Similarly, most modeling and simulation projects require custom data analysis once the simulation data has been generated. To facilitate this, URDME supports the creation of post-processing scripts in Matlab using its native high-level scripting language and computational libraries. Examples of complex post-processing routines implemented as Matlab functions and scripts are available as part of the example directories in the URDME software distribution package, and in Additional file <xref ref-type="supplementary-material" rid="S2">2</xref>, Additional file <xref ref-type="supplementary-material" rid="S3">3</xref> and Additional file <xref ref-type="supplementary-material" rid="S4">4</xref>.</p>
    </sec>
    <sec>
      <title>Structure and implementation of core simulation algorithms</title>
      <p>Taken together, the components of URDME that was introduced in the previous section create a flexible and expandable platform. While an applied user need not know any details about how a core solver is implemented, a developer of a new simulation algorithm can use the infrastructure to develop a plug-in solver to URDME. Figure <xref ref-type="fig" rid="F2">2</xref>C illustrates the structure of the plug-in solver that implements the DFSP algorithm [<xref ref-type="bibr" rid="B32">32</xref>]. Note the similarities with the flow diagram of the core NSM solver in Figure <xref ref-type="fig" rid="F2">2</xref>B. URDME plug-in solvers have three main components: a Makefile, the solver source files, and (optionally) a pre-execution script intended to be invoked by the middle-level scripting interface. The solver Makefile is used for compiling and building the solver automatically from the Matlab interface. The name of this file tells URDME what solver it builds; when urdme is invoked with the option to run a simulation using a specific solver, it will look for a Makefile with the correct naming pattern. This Makefile then compiles the solver along with the propensity functions associated with the model being simulated into a stand-alone binary executable. Hence a different and unique executable is automatically produced for each new combination of model and solver.</p>
      <p>The source code of the solver itself can formally consist of any number of files in any language as long as the Makefile can create the final executable called by the middle-level interface. To enable a seamless integration with the URDME Matlab interface, the URDME C API contains library routines to read and parse the data structures generated by the URDME model files. These API routines will parse all data-structures required by the core NSM solver. A plug-in solver that needs additional input will have to make sure that these are parsed correctly as part of the solver main routines. To pass such additional data to the solver, it need only be appended to the âmodel.urdmeâ field, either by the Matlab model file, or by a pre-execution script (compare Figure <xref ref-type="fig" rid="F2">2</xref>C). URDME will then write this data to the solver input file. Such a pre-execution script is an optional component of the solver integration. Simply put, when executing a model, URDME always looks for a Matlab function defined in the file âurdme_init_&lt;<italic>solver</italic>&gt;.mâ.</p>
      <p>All current solvers are written in ANSI-C and use GNU-style Makefiles. The process of integrating a simulation algorithm in the URDME framework is described in more detail in [<xref ref-type="bibr" rid="B30">30</xref>] and is also exemplified by the source code for the DFSP plug-in that is included in the URDME distribution.</p>
      <p>In conclusion, when all the components of a solver is in place as described above, the only difference to an end-user of URDME is a single additional argument</p>
      <p>&gt;&gt; model = urdme(model,@model_file, {âPropensitiesâ,âpropensity_fileâ, ... âSolverâ,âdfspâ});</p>
      <p>The use of the URDME framework to implement and analyze the performance of a simulation algorithm will be further exemplified in the Results section.</p>
    </sec>
  </sec>
  <sec sec-type="results">
    <title>Results</title>
    <p>In this section we will use three different examples to illustrate how the design of URDME makes the software framework a useful tool to accomplish different simulation tasks.</p>
    <p>In the first example we show how an established model from the molecular systems biology literature is simulated in URDME. This example illustrates the powerful nature of the URDME scripting environment in setting up and conducting a parameter sweep.</p>
    <p>In the second example we demonstrate how URDME can aid in the development of efficient simulation algorithms by explaining how a novel method, the Diffusive Finite State Projection (DFSP) [<xref ref-type="bibr" rid="B32">32</xref>], was integrated into URDME as a plug-in solver.</p>
    <p>As a final example we simulate a model of molecular transport in a neuron. Here, the unstructured mesh is a critical feature in order to be able to resolve the complex geometry with a feasible number of voxels. We also show with this example how a model of active, molecular motor driven transport as proposed in [<xref ref-type="bibr" rid="B35">35</xref>] can be implemented in URDME to simulate molecular transport in the different parts of the neuron.</p>
    <sec>
      <title>Simulating Min oscillations in <italic>E. Coli</italic></title>
      <p>In <italic>E. Coli</italic>, the Min family of proteins are believed to play a key role in the regulation of symmetric cell division. In a mechanism thought to be self-organized and to function in a manner similar to the formation of Turing-patterns, the MinD protein oscillates from pole to pole with a period close to 40 seconds. Another Min protein, MinC, co-localizes with MinD and acts as a repressor for the formation of the cell division site by destabilizing Ftz polymerization [<xref ref-type="bibr" rid="B36">36</xref>]. On average, MinD (and hence MinC) will spend less time near the center of the cell, allowing the division ring to assemble there. Both deterministic and stochastic models of this system have been studied previously in the literature [<xref ref-type="bibr" rid="B8">8</xref>,<xref ref-type="bibr" rid="B36">36</xref>].</p>
      <p>To illustrate how to use URDME to conduct a parameter sweep we will simulate the Min-system for increasing lengths of the bacterium and observe the behavior of the oscillations. The example is representative for how experiments using different sets of parameters can be defined and organized with the current version of URDME. A detailed account for how to create all model files to run simulations of the model from [<xref ref-type="bibr" rid="B8">8</xref>] can be found in the software manual [<xref ref-type="bibr" rid="B30">30</xref>] in the form of a tutorial. There, the model is run interactively from the Matlab prompt as detailed in the previous sections. In order to conduct the experiment outlined here in the same fashion we would have to manually rebuild the geometry and execute the simulations for the different parameter cases. This would be time-consuming and error prone. Instead, here we exemplify how to automate such a task by using the Matlab scripting environment and the URDME Matlab interface. The code block below shows how the parameter sweep can be specified in a simple script in the Matlab language. The function âcoli_modelâ (Additional file <xref ref-type="supplementary-material" rid="S2">2</xref>) was automatically generated from the Comsol interface using the model of an <italic>E. coli</italic> bacterium shown in Figure <xref ref-type="fig" rid="F3">3</xref>A. It was then slightly modified by manipulating the original consecutive solid geometry (CSG) description. The geometry of the bacterium is parametrized by creating a copy of the original geometry and then translating it along the x-axis. The union of these two objects is the final geometry and the variable âxsepâ specifies the extent of the translation. Note that, as shown in Figure <xref ref-type="fig" rid="F3">3</xref>C, the bacterium will ultimately split into two separate geometric objects.</p>
      <fig id="F3" position="float">
        <label>Figure 3</label>
        <caption>
          <p><bold>Simulating Min oscillations in</bold><bold><italic>E. Coli</italic></bold><bold>for varying length of the cell.</bold> (<bold>A</bold>) Geometry and mesh modeling of an <italic>E. Coli</italic> cell. (<bold>B</bold>) Temporal average concentration of MinD protein as a function of position along the long axis of the <italic>E. Coli</italic> cell (top), and the time series plot of the oscillations. (<bold>C</bold>) Six <italic>E. Coli</italic> cells of increasing lengths, as specified in the parameter sweep described in the code block above. The color intensity shows the temporal average concentration of MinD protein along the membrane. (<bold>D</bold>) Parameter sweep shows how the relative concentration of MinD changes as the bacterium grows.</p>
        </caption>
        <graphic xlink:href="1752-0509-6-76-3"/>
      </fig>
      <p>Below we show a Matlab script that simulates the Min <italic>E. Coli</italic> model with varying cell length. % Define the parameter space Nval = 30; xsep = linspace(0,4.5e-6,Nval+1); xsep(end) = []; % (avoid creating two % distinct bacteria) save results/info.mat xsep for i = 1:Nval </p>
      <p> % Generate the E. coli cell by</p>
      <p> % merging two cells with separation</p>
      <p> % xsep(i) along the positive x-axis</p>
      <p> fem = coli_model(xsep(i));</p>
      <p> % run an instance of URDME in</p>
      <p> % background mode</p>
      <p> fem = urdme(fem,@huang,</p>
      <p> {âPropensitiesâ,âhuangâ, ...</p>
      <p> âModeâ,âbgâ, ...</p>
      <p> âOutfileâ,sprintf</p>
      <p> (âresults/out%d.matâ,i)});</p>
      <p> % save input separately for later use</p>
      <p> save(sprintf(âresults/in%d.matâ,i)</p>
      <p> ,âfemâ);</p>
      <p>end</p>
      <p>The results of the parameter sweep is summarized in Figure <xref ref-type="fig" rid="F3">3</xref>. Figure <xref ref-type="fig" rid="F3">3</xref>A shows the geometry of a model of an <italic>E. Coli</italic> bacterium with length 4.5 <italic>Î¼m</italic>and radius 0.5<italic>Î¼m</italic>discretized with a tetrahedral mesh. Figure <xref ref-type="fig" rid="F3">3</xref>B shows the temporal average of membrane bound MinD obtained in a simulation of the model from [<xref ref-type="bibr" rid="B36">36</xref>] with URDME, as well as a time series of pole-to-pole oscillations of the membrane bound fraction of MinD. As can be seen, the model predicts a minimum of MinD near the center of the cell. Figure <xref ref-type="fig" rid="F3">3</xref>C shows a visualization of the <italic>E. Coli</italic> bacterium at six different lengths, including the temporal average of the relative concentrations of the MinD protein. Figure <xref ref-type="fig" rid="F3">3</xref>D shows the stability of oscillations when increasing the âxsepâ parameter.</p>
      <p>For values of the parameter âxsepâ less than about 2<italic>Î¼</italic>m, coherent oscillations are observed and the MinD protein is concentrated at the poles of the bacterium. For larger values, the oscillations cease and MinD is distributed evenly in the cell. Hence, in order to maintain oscillations also for longer cells, the model needs to be modified in some way. For example, the total copy number of MinD is currently kept constant as the cell grows. Different initial conditions such as constant concentration can of course be tested with equal ease by making the appropriate changes to the model file.</p>
      <p>In this example, URDME is invoked in background mode allowing for several parameter cases to be run in parallel on a multicore workstation. Instead of returning the results directly in the workspace, we direct URDME to store the result files and the input files on disk for later post-processing.</p>
    </sec>
    <sec>
      <title>Developing and benchmarking a new algorithm for spatial stochastic simulation</title>
      <p>Generally, a large fraction of the effort in developing simulation tools goes into software infrastructure as opposed to code pertaining to the underlying solver algorithms. URDME is designed to provide that infrastructure. The first two layers of the framework provides handling of geometry and meshing, assembly of diffusion jump-rate constants, model integration, pre- and post-processing and data visualization. In this section we will illustrate how to use URDMEâs infrastructure to enhance the development and benchmarking of a new stochastic simulation algorithm, DFSP [<xref ref-type="bibr" rid="B32">32</xref>]. We will describe the components of this solver and how they are integrated with URDME. This example may therefore serve as a design pattern for algorithm integration into the URDME framework.</p>
      <p>Since the diffusion intensity scales differently than the reaction propensities with increasing mesh resolution, diffusion events often occur on a faster time scale than the reactions in the system. Effectively, as the mesh becomes finer a larger and larger percentage of the simulation events will be diffusion jumps. A similar phenomenon, stochastic stiffness, often occurs in simulations of well-stirred models and has led to extensive methods development [<xref ref-type="bibr" rid="B37">37</xref>-<xref ref-type="bibr" rid="B40">40</xref>]. The DFSP algorithm is an approximate spatial stochastic simulation algorithm which aggregates a large number of diffusive transfers over a time-step. It does this by calculating the probability distribution of a molecule starting in a given voxel after some fixed time-step <italic>Ï</italic><sub><italic>D</italic></sub>, and then samples from this distribution to redistribute the molecules. DFSP can in this way give great enhancements in simulation speed at the cost of approximation errors which can be controlled (see [<xref ref-type="bibr" rid="B32">32</xref>] for a more extensive analysis).</p>
      <p>Integration of a new solver into the URDME framework is designed to be a simple process, with the largest fraction of the required new code being specific to the underlying solver algorithm. URDME solvers have three main components: the solver source code, a Makefile, and an optional pre-execution script. The Makefile creates a standalone Unix executable from the source code. The DFSP solver uses a pre-execution script in Matlab to calculate data specific to the algorithm. This data is then added to the input file that URDME creates upon execution of the solver. Table <xref ref-type="table" rid="T1">1</xref> describes the files that are part of the DFSP solver.</p>
      <table-wrap position="float" id="T1">
        <label>Table 1</label>
        <caption>
          <p>Overview of the files that make up the DFSP plugin solver</p>
        </caption>
        <table frame="hsides" rules="groups" border="1">
          <colgroup>
            <col/>
            <col/>
            <col/>
          </colgroup>
          <thead valign="top">
            <tr>
              <th align="left" valign="bottom">
                <hr/>
              </th>
              <td>Â </td>
              <td>Â </td>
            </tr>
            <tr>
              <th align="left">
                <bold>Directory</bold>
              </th>
              <th align="left">
                <bold>File</bold>
              </th>
              <th align="left">
                <bold>Description</bold>
              </th>
            </tr>
          </thead>
          <tbody valign="top">
            <tr>
              <td align="left" valign="bottom">urdme/build<hr/></td>
              <td align="left" valign="bottom">Makefile.dfsp<hr/></td>
              <td align="left" valign="bottom">Solver Makefile.<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">urdme/src/dfsp<hr/></td>
              <td align="left" valign="bottom">dfsp.c<hr/></td>
              <td align="left" valign="bottom">Solver entry point and data initialization.<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">Â <hr/></td>
              <td align="left" valign="bottom">dfsp.h<hr/></td>
              <td align="left" valign="bottom">DFSP header file.<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">Â <hr/></td>
              <td align="left" valign="bottom">dfspcore.c<hr/></td>
              <td align="left" valign="bottom">Main entry point for the solver.<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">Â <hr/></td>
              <td align="left" valign="bottom">dfsp_reactions.c<hr/></td>
              <td align="left" valign="bottom">Simulates reaction events.<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">Â <hr/></td>
              <td align="left" valign="bottom">dfsp_diffusion.c<hr/></td>
              <td align="left" valign="bottom">Simulates diffusion events.<hr/></td>
            </tr>
            <tr>
              <td align="left">urdme/msrc</td>
              <td align="left">urdme_init_dfsp.m</td>
              <td align="left">Matlab pre-execution script.</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <p>This structure shows the design pattern for solver integration into the URDME framework (see [<xref ref-type="bibr" rid="B30">30</xref>]).</p>
        </table-wrap-foot>
      </table-wrap>
      <p>% DFSP Performance and Error benchmark</p>
      <p>% code</p>
      <p>tic;</p>
      <p>solution = urdme(fem,@fange,{âSolverâ, ânsmâ,âPropensitiesâ,âfangeâ}); nsm_simulation_time = toc</p>
      <p>nsm_period= find_mincde_period(solution) for tau_D = [ 0.001, 0.005, 0.01, 0.05, 0.1, 0.5 ]</p>
      <p>Â Â Â Â Â Â Â tic;</p>
      <p>Â Â Â Â Â Â Â solution = urdme(fem,@fange,</p>
      <p>Â Â Â Â Â Â Â {âPropensitiesâ,âfangeâ,âSolverâ,</p>
      <p>Â Â Â Â Â Â Â âdfspâ,...</p>
      <p>Â Â Â Â Â Â Â Â Â Â Â Â âtauâ,tau_D,âmax_jumpâ,10,</p>
      <p>Â Â Â Â Â Â Â Â Â Â Â Â âDFSP_cacheâ,</p>
      <p> Â Â Â Â Â Â Â Â Â Â Â Â dfsp_cache_filename});</p>
      <p>Â Â Â Â Â Â Â dfsp_simulation_time = toc</p>
      <p>Â Â Â Â Â Â Â dfsp_period = find_mincde_period</p>
      <p>Â Â Â Â Â Â Â (solution)</p>
      <p>Â Â Â Â Â Â Â error = abs(dfsp_period-nsm_period)/</p>
      <p>Â Â Â Â Â Â Â nsm_period</p>
      <p>end</p>
      <p>In addition to the lower integration overhead of implementing a new algorithm in the URDME framework, URDME allows developers to easily benchmark their solvers. The code block above shows a Matlab script that sets up a benchmarking experiment to assess the performance and error of the DFSP solver when simulating the model for Min-oscillations described in the first example in this paper. This code also illustrates the calling signature for the function when used with the NSM and DFSP solvers. The DFSP solver takes the additional arguments âtauâ as the time-step, âmax_jumpâ as the maximum spatial jump distance, and âDFSP_cacheâ as the cache file used to store the data specific to the DFSP algorithm. The utility function finds the peak period of the oscillations through straightforward spectral analysis using built-in routines in the Matlab scripting environment, again illustrating the advantage of using the scripting layerâs post-processing capabilities. Figure <xref ref-type="fig" rid="F4">4</xref> shows the results of the benchmarking experiment. We find that the DFSP method with 0.01&lt;<italic>Ï</italic><sub><italic>D</italic></sub>&lt;0.1 produces simulation results faster than NSM and with good accuracy in the oscillation period.</p>
      <fig id="F4" position="float">
        <label>Figure 4</label>
        <caption>
          <p><bold>DFSP benchmark results.</bold> (<bold>A</bold>) Performance of DFSP shows a comparison of simulation times for DFSP at varying <italic>Ï</italic><sub><italic>D</italic></sub>values (red) and NSM (blue), and the DFSP speedup factor (green). For this model, DFSP outperforms NSM for <italic>Ï</italic><sub><italic>D</italic></sub>&gt;0.01. (<bold>B</bold>) Error in DFSP shows the relative error in MinCDE oscillation period (red) and the oscillation patterns for three simulations. Simulations with <italic>Ï</italic><sub><italic>D</italic></sub>&lt;0.1 produces coherent oscillation patterns and result in a negligible error. The system was simulated to a final time 900s. Simulations were performed on a 1.8 Ghz Intel Core i7 processor.</p>
        </caption>
        <graphic xlink:href="1752-0509-6-76-4"/>
      </fig>
    </sec>
    <sec>
      <title>Active transport in a neuron</title>
      <p>Diffusion is the dominating mechanism of molecular transport in prokaryotes such as <italic>E. Coli</italic>, and it was in that context the NSM was first applied [<xref ref-type="bibr" rid="B8">8</xref>,<xref ref-type="bibr" rid="B15">15</xref>]. However, diffusion is not the only mechanism for molecular transport in eukaryotic cells. Intra-cellular cargo can be transported by motor proteins along cytoskeletal structures made up of microtubule and actin polymers [<xref ref-type="bibr" rid="B41">41</xref>-<xref ref-type="bibr" rid="B43">43</xref>]. Molecular motor proteins bind to the cargo and to the filaments and move the cargo along the fiber, always in a specific direction depending on the type of motor and fiber. This transport is usually much faster than diffusion but requires an energy input. Vesicles, organelles, mRNA and proteins involved in signaling are examples of cargo that are transported in this way inside living cells.</p>
      <p>Due to the ubiquity of active transport in biological systems, it is important that simulation software have the capability to handle mesoscopic models with general transport mechanisms. In [<xref ref-type="bibr" rid="B35">35</xref>], the RDME was extended to include an advection term that models cargo transport on the microtubule network. A simple model of signaling in a yeast cell was considered and URDME was used for model development and simulation. To illustrate both the geometrical flexibility of URDME as well as its capability to model more general transport mechanisms, we show here how to simulate active transport in a model of a neuron with a detailed geometry.</p>
      <p>Active transport of cellular cargo is of fundamental importance to maintain the highly polarized state of a healthy neuron. In the axon, microtubules are uniformly oriented with plus-end towards the soma and minus-end towards the synapse. Kinesin transports cargo in the anterograde direction, from the cell body to the synapse. For example, kinesin drive the transport of synaptic vesicles from the cell body through the axon where they are subsequently docked to the plasma membrane in the presynaptic terminus. Dynein drives transport in the opposite direction (retrograde transport) in the axon, and may aid in transporting for example RNA from the cell body to the dendrites [<xref ref-type="bibr" rid="B44">44</xref>]. In the dendrites, the situation is more complex than in the axon, since the microtubules form an array of mixed orientation. While the particular motor protein transports cargo in a specific direction on the fibers, a single cargo such as a vesicle can have many different motors bound to it simultaneously and therefore may move in a bidirectional manner [<xref ref-type="bibr" rid="B45">45</xref>-<xref ref-type="bibr" rid="B47">47</xref>]. The details of how kinesin and dynein-driven transport is coordinated and regulated to achieve differential targeting and localization of cargo is still a largely unresolved issue [<xref ref-type="bibr" rid="B48">48</xref>,<xref ref-type="bibr" rid="B49">49</xref>]. As an example of a possible mechanism of regulation, the microtubule binding protein Tau effects the binding affinity of kinesin to the microtubule, while dynein is less sensitive to elevated Tau concentrations [<xref ref-type="bibr" rid="B50">50</xref>].</p>
      <p>To illustrate how diffusion and active transport can simultaneously be modeled with URDME in the neuron geometry shown in Figure <xref ref-type="fig" rid="F5">5</xref> we consider a straightforward model where a cargo species is transported to different regions of the neuron. The motor proteins are modeled <italic>implicitly</italic>, that is, we assume that a population of motor proteins is associated to the cargo species at all times. Although an approximation, there are recent experimental evidence that the distributions of motors on vesicles are relatively stable [<xref ref-type="bibr" rid="B47">47</xref>]. Table <xref ref-type="table" rid="T2">2</xref> summarizes the model. Here, the cargo species <italic>V </italic> is created uniformly in the cell body (R1). <italic>V </italic> can diffuse and bind reversibly to microtubule filaments, either with a kinesin motor as <sup><italic>V</italic><italic>k</italic></sup> or with a dynein motor as <sup><italic>V</italic><italic>d</italic></sup>(R2âR5). When bound to a filament, <italic>V </italic> is actively transported in a direction dictated by the kind of motor that is currently active. The cargo can reverse its direction on the fiber in bidirectional transport by letting the currently active motor protein change with some probability (R6,R7). The quotient <italic>Ï</italic><sub><italic>kd</italic></sub>/<italic>Ï</italic><sub><italic>dk</italic></sub> then dictates the direction of net transport. Finally, <italic>V </italic> is uniformly degraded (R8) in the whole neuron so that the total number of cargo <italic>V </italic> reaches a steady-state level.</p>
      <fig id="F5" position="float">
        <label>Figure 5</label>
        <caption>
          <p><bold>Geometry and mesh for a model of a neuron.</bold> The neuron geometry (<bold>A</bold>) is based on a artistic CAD rendering generated with the public domain version of the software Blender (<ext-link ext-link-type="uri" xlink:href="http://www.blender.org">http://www.blender.org</ext-link>). In order to conduct simulations in this geometry, the model was exported in the STL surface mesh format, imported into the open-source meshing package Gmsh [<xref ref-type="bibr" rid="B31">31</xref>], where the boundary was re-parametrized and the domain subsequently meshed with a volume mesh in 3D. The resulting mesh was then converted into a Comsol Multiphysics 3.5a model to serve as a geometry description for the URDME model. Assembly of active transport jump rate constants are conducted by URDME on the unstructured mesh shown in (<bold>B</bold>). For a mathematical background on how to obtain these constants on the unstructured mesh, see [<xref ref-type="bibr" rid="B35">35</xref>]. URDMEâs capability to use an unstructured mesh made up of tetrahedral and triangular elements is of vital importance in order to be able to resolve the complex geometry of the neuron.</p>
        </caption>
        <graphic xlink:href="1752-0509-6-76-5"/>
      </fig>
      <table-wrap position="float" id="T2">
        <label>Table 2</label>
        <caption>
          <p>Reactions of the transport model</p>
        </caption>
        <table frame="hsides" rules="groups" border="1">
          <colgroup>
            <col/>
            <col/>
            <col/>
            <col/>
          </colgroup>
          <thead valign="top">
            <tr>
              <th align="left" valign="bottom">
                <hr/>
              </th>
              <td>Â </td>
              <td>Â </td>
              <td>Â </td>
            </tr>
            <tr>
              <th align="left">Â </th>
              <th align="left">
                <bold>Reaction</bold>
              </th>
              <th align="left">
                <bold>Description</bold>
              </th>
              <th align="left">
                <bold>Cellular location</bold>
              </th>
            </tr>
          </thead>
          <tbody valign="top">
            <tr>
              <td align="left" valign="bottom">(R1)<hr/></td>
              <td align="left" valign="bottom">
                <inline-formula>
                  <mml:math id="M1" name="1752-0509-6-76-i1" overflow="scroll">
                    <mml:mi>â</mml:mi>
                    <mml:munderover>
                      <mml:mo>â</mml:mo>
                      <mml:mrow/>
                      <mml:mrow>
                        <mml:msub>
                          <mml:mrow>
                            <mml:mi>Î¼</mml:mi>
                          </mml:mrow>
                          <mml:mrow>
                            <mml:mn>1</mml:mn>
                          </mml:mrow>
                        </mml:msub>
                      </mml:mrow>
                    </mml:munderover>
                    <mml:mi>V</mml:mi>
                  </mml:math>
                </inline-formula>
                <hr/>
              </td>
              <td align="left" valign="bottom">Creation of cargo<hr/></td>
              <td align="left" valign="bottom">Cell body<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">(R2âR5)<hr/></td>
              <td align="left" valign="bottom">
                <inline-formula>
                  <mml:math id="M2" name="1752-0509-6-76-i2" overflow="scroll">
                    <mml:mi>V</mml:mi>
                    <mml:mover class="overset">
                      <mml:mrow>
                        <mml:munder>
                          <mml:mrow>
                            <mml:mi>â</mml:mi>
                          </mml:mrow>
                          <mml:mrow>
                            <mml:msub>
                              <mml:mrow>
                                <mml:mi>Ï</mml:mi>
                              </mml:mrow>
                              <mml:mrow>
                                <mml:mi>d</mml:mi>
                              </mml:mrow>
                            </mml:msub>
                          </mml:mrow>
                        </mml:munder>
                      </mml:mrow>
                      <mml:mrow>
                        <mml:msub>
                          <mml:mrow>
                            <mml:mi>Ï</mml:mi>
                          </mml:mrow>
                          <mml:mrow>
                            <mml:mi>b</mml:mi>
                          </mml:mrow>
                        </mml:msub>
                      </mml:mrow>
                    </mml:mover>
                    <mml:msup>
                      <mml:mrow>
                        <mml:mi>V</mml:mi>
                      </mml:mrow>
                      <mml:mrow>
                        <mml:mi>k</mml:mi>
                        <mml:mo>,</mml:mo>
                        <mml:mi>d</mml:mi>
                      </mml:mrow>
                    </mml:msup>
                  </mml:math>
                </inline-formula>
                <hr/>
              </td>
              <td align="left" valign="bottom">Binding of <italic>V</italic> to microtubule<hr/></td>
              <td align="left" valign="bottom">All domains<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">(R6,R7)<hr/></td>
              <td align="left" valign="bottom">
                <inline-formula>
                  <mml:math id="M3" name="1752-0509-6-76-i3" overflow="scroll">
                    <mml:msup>
                      <mml:mrow>
                        <mml:mi>V</mml:mi>
                      </mml:mrow>
                      <mml:mrow>
                        <mml:mi>k</mml:mi>
                      </mml:mrow>
                    </mml:msup>
                    <mml:mover class="overset">
                      <mml:mrow>
                        <mml:munder>
                          <mml:mrow>
                            <mml:mi>â</mml:mi>
                          </mml:mrow>
                          <mml:mrow>
                            <mml:msub>
                              <mml:mrow>
                                <mml:mi>Ï</mml:mi>
                              </mml:mrow>
                              <mml:mrow>
                                <mml:mi>dk</mml:mi>
                              </mml:mrow>
                            </mml:msub>
                          </mml:mrow>
                        </mml:munder>
                      </mml:mrow>
                      <mml:mrow>
                        <mml:msub>
                          <mml:mrow>
                            <mml:mi>Ï</mml:mi>
                          </mml:mrow>
                          <mml:mrow>
                            <mml:mi>kd</mml:mi>
                          </mml:mrow>
                        </mml:msub>
                      </mml:mrow>
                    </mml:mover>
                    <mml:msup>
                      <mml:mrow>
                        <mml:mi>V</mml:mi>
                      </mml:mrow>
                      <mml:mrow>
                        <mml:mi>d</mml:mi>
                      </mml:mrow>
                    </mml:msup>
                  </mml:math>
                </inline-formula>
                <hr/>
              </td>
              <td align="left" valign="bottom">Reversal of direction<hr/></td>
              <td align="left" valign="bottom">Microtubule<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">(R8)<hr/></td>
              <td align="left" valign="bottom">
                <inline-formula>
                  <mml:math id="M4" name="1752-0509-6-76-i4" overflow="scroll">
                    <mml:mi>V</mml:mi>
                    <mml:munderover>
                      <mml:mo>â</mml:mo>
                      <mml:mrow/>
                      <mml:mrow>
                        <mml:msub>
                          <mml:mrow>
                            <mml:mi>Î¼</mml:mi>
                          </mml:mrow>
                          <mml:mrow>
                            <mml:mn>2</mml:mn>
                          </mml:mrow>
                        </mml:msub>
                      </mml:mrow>
                    </mml:munderover>
                    <mml:mi>â</mml:mi>
                  </mml:math>
                </inline-formula>
                <hr/>
              </td>
              <td align="left" valign="bottom">Degradation of <italic>V</italic><hr/></td>
              <td align="left" valign="bottom">All domains<hr/></td>
            </tr>
            <tr>
              <td align="left"/>
              <td>Â </td>
              <td>Â </td>
              <td>Â </td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <p>Model of active transport of a cargo species <italic>V</italic> that is transported on microtubule filaments in a direction determined by the orientation of the fibers (as modeled by a velocity field) and the current motor protein bound to the fiber (kinesin or dynein).</p>
        </table-wrap-foot>
      </table-wrap>
      <p>To illustrate the ability of cargo to localize to different compartments of the cell depending on the dominating motor protein we consider the following scenario. First, we let <italic>Ï</italic><sub><italic>dk</italic></sub>=10<italic>Ï</italic><sub><italic>kd</italic></sub>, so that on the average, kinesin will spend more time bound to the microtubule than dynein will do. In this case, the cargo will travel through the axon and eventually localize to the axon terminus. After half of the total simulation time has elapsed, the situation is reversed and <italic>Ï</italic><sub><italic>kd</italic></sub>=10<italic>Ï</italic><sub><italic>dk</italic></sub>such that the cargo will localize to the dendrites.</p>
      <p>Figure <xref ref-type="fig" rid="F6">6</xref> shows a typical output of a simulation with URDME. The fraction of the total number of cargo <italic>V </italic> is plotted in the different regions of the neuron geometry (axon, soma, and dendrites). Since the purpose of this example is to illustrate the capability of URDME to model both diffusion and active transport in a complex geometry, the values of the various parameters have not been chosen to fit any particular neuron geometry. Hence the velocity of dynein is conveniently set to be half of that of kinesin in the axon. Also, the net rate of transport in the dynein is set to be one hundredth of the rate of kinesin in the axon to reflect the effects of mixed polarity of fibers [<xref ref-type="bibr" rid="B51">51</xref>].</p>
      <fig id="F6" position="float">
        <label>Figure 6</label>
        <caption>
          <p><bold>Localization as a function of the binding rates to microtubules for the different motor proteins.</bold> Normalized concentration of <italic>V </italic> in the soma (green), axon (blue) and in the dendrites (red) as a function of time. Initially, the parameters satisfy <italic>Ï</italic><sub><italic>kd</italic></sub>=10<italic>Ï</italic><sub><italic>dk</italic></sub>and cargo localizes to the axon due to the larger fraction of time spent in the kinesin binding state. At time <italic>t</italic>=0.5 the situation is reversed, and the localization of <italic>V </italic> shifts from axon to dendrites. The red regions in the inlays depicting the neuron shows the areas where <italic>V </italic> is present.</p>
        </caption>
        <graphic xlink:href="1752-0509-6-76-6"/>
      </fig>
      <p>In order to setup this simulation in URDME, a Matlab function for the velocity field modeling the average orientation of the fibers at any point in the domain needs to be provided. Obviously, specification of this velocity field requires biological knowledge. The ability to work in the Matlab environment greatly simplifies parametrization of the velocity field. Since this geometry was given as a surface mesh, which is also often the case when the domain is obtained from cell imaging, we have no analytical expression for the parametrization of the geometry to rely on. In this example we want the velocity field to trace the axon and dendrite structures. To achieve this, we first compute surface normals to all triangles on the surface of the neuron. An interpolation table containing vectors with base in the centroids in the triangles of the surface mesh and pointing in the direction of suitably chosen reference points was thus constructed. For simplicity, we only used two different reference points, one near the center of the cell body and the other beyond the axon terminus along the long axis of the axon. The smoothness of the velocity field can easily be improved by adding more reference points. For any point inside the domain, we evaluate the velocity by nearest neighbor interpolation using the interpolation table. From this description of the microtubule network and the information about the mesh, utility routines available as add-ons to the basic URDME package can be used to assemble jump rate constants to be used in the definition of the stochastic transport process in much the same way as for diffusion [<xref ref-type="bibr" rid="B35">35</xref>]. This procedure may seem complicated at a first glance, but can be performed quite easily in Matlab using built-in utility routines. The model files required to run this example can be found in Additional file <xref ref-type="supplementary-material" rid="S4">4</xref>.</p>
    </sec>
  </sec>
  <sec sec-type="discussion">
    <title>Discussion</title>
    <p>The design of URDME is motivated by both modeling and algorithm development. Systems biology investigations are typically computational intensive, and often require large ensembles of trajectories spanning parameter space to match data, or to conduct a sensitivity and robustness analysis.</p>
    <p>Development of more efficient simulation methods is needed to make such large scale investigations feasible. However, due to the overhead of handling complex geometries, mesh generation and visualization of results, algorithm developers often tend to consider only simple test models in simple geometries, often restricted to one or two spatial dimensions. While this can be enough to illustrate the potential benefits of a new method, the resulting software is often not general enough for use on complex biological models. URDME aims to bridge this gap by facilitating for method developers by providing a large part of the infrastructure needed for simulation of realistic models. We exemplified this in the paper by the extension of the approximate algorithm DFSP to a full 3D simulation.</p>
    <p>The theory and methodology for spatial stochastic simulation is still undergoing extensive development, and no single mathematical modeling framework or method has emerged as a <italic>de facto</italic> standard. The utility of the URDME framework is not restricted to mesoscopic RDME simulations; we have used URDME to develop solvers based on the Smoluchowski model and a microscopicâmesoscopic hybrid methods [<xref ref-type="bibr" rid="B34">34</xref>].</p>
    <p>Another benefit of the modular architecture is that it simplifies the use of different execution models for the simulations. As part of work on methods for enactment of computation in grid environments, we are developing a URDME server module that enables remote execution in distributed computing environments [<xref ref-type="bibr" rid="B52">52</xref>]. This enables highly task-parallel investigations to utilize distributed computational resources such as clusters, grids, and clouds to greatly increase productivity for the end-user.</p>
    <sec>
      <title>Comparison of spatial stochastic software packages</title>
      <p>To further illustrate the design of our software, we have compared its features to two other publicly available packages for mesoscopic spatial stochastic simulation. Table <xref ref-type="table" rid="T3">3</xref> shows a comparison between URDME 1.1, MesoRD 1.0, and STEPS 1.3. MesoRD was one of the first software projects aimed at simulation of the RDME. STEPS was developed for simulation of detailed models of dendrites and synapses, but is generally applicable to a lager set of reaction-diffusion models.</p>
      <table-wrap position="float" id="T3">
        <label>Table 3</label>
        <caption>
          <p>A comparison of features of RDME simulation software</p>
        </caption>
        <table frame="hsides" rules="groups" border="1">
          <colgroup>
            <col/>
            <col/>
            <col/>
            <col/>
          </colgroup>
          <thead valign="top">
            <tr>
              <th align="left" valign="bottom">
                <hr/>
              </th>
              <td>Â </td>
              <td>Â </td>
              <td>Â </td>
            </tr>
            <tr>
              <th align="left">Â </th>
              <th align="left">
                <bold>URDME 1.1</bold>
              </th>
              <th align="left">
                <bold>MesoRD 1.0</bold>
              </th>
              <th align="left">
                <bold>STEPS 1.3</bold>
              </th>
            </tr>
          </thead>
          <tbody valign="top">
            <tr>
              <td align="center" valign="bottom">Interface<hr/></td>
              <td align="center" valign="bottom">Matlab &amp; Comsol<hr/></td>
              <td align="center" valign="bottom">Command line<hr/></td>
              <td align="center" valign="bottom">Python<hr/></td>
            </tr>
            <tr>
              <td align="center" valign="bottom">Â <hr/></td>
              <td align="center" valign="bottom">Â <hr/></td>
              <td align="center" valign="bottom">Simple GUI (Windows)<hr/></td>
              <td align="center" valign="bottom">Â <hr/></td>
            </tr>
            <tr>
              <td align="center" valign="bottom">Visualization<hr/></td>
              <td align="center" valign="bottom">Matlab &amp; Comsol<hr/></td>
              <td align="center" valign="bottom">OpenGL tool<hr/></td>
              <td align="center" valign="bottom">PyOpenGL tool<hr/></td>
            </tr>
            <tr>
              <td align="center" valign="bottom">Â <hr/></td>
              <td align="center" valign="bottom">Â <hr/></td>
              <td align="center" valign="bottom">Matlab toolbox<hr/></td>
              <td align="center" valign="bottom">Â <hr/></td>
            </tr>
            <tr>
              <td align="center" valign="bottom">Post-processing<hr/></td>
              <td align="center" valign="bottom">Matlab<hr/></td>
              <td align="center" valign="bottom">3rd party<hr/></td>
              <td align="center" valign="bottom">Python<hr/></td>
            </tr>
            <tr>
              <td align="center" valign="bottom">SBML support<hr/></td>
              <td align="center" valign="bottom">Conversion tool<hr/></td>
              <td align="center" valign="bottom">SBML L2v4<hr/></td>
              <td align="center" valign="bottom">Import module<hr/></td>
            </tr>
            <tr>
              <td align="center" valign="bottom">Â <hr/></td>
              <td align="center" valign="bottom">(no geometry)<hr/></td>
              <td align="center" valign="bottom">+ CSG geometry<hr/></td>
              <td align="center" valign="bottom">(no geometry)<hr/></td>
            </tr>
            <tr>
              <td align="center" valign="bottom">Edit Geometry<hr/></td>
              <td align="center" valign="bottom">Comsol<hr/></td>
              <td align="center" valign="bottom">SBML<hr/></td>
              <td align="center" valign="bottom">3rd party<hr/></td>
            </tr>
            <tr>
              <td align="center" valign="bottom">Mesh Type<hr/></td>
              <td align="center" valign="bottom">Vertex centered<hr/></td>
              <td align="center" valign="bottom">Uniform Cartesian<hr/></td>
              <td align="center" valign="bottom">Body centered<hr/></td>
            </tr>
            <tr>
              <td align="center" valign="bottom">Â <hr/></td>
              <td align="center" valign="bottom">Tetrahedrons<hr/></td>
              <td align="center" valign="bottom">Â <hr/></td>
              <td align="center" valign="bottom">Tetrahedrons<hr/></td>
            </tr>
            <tr>
              <td align="center" valign="bottom">Algorithms<hr/></td>
              <td align="center" valign="bottom">NSM, DFSP<hr/></td>
              <td align="center" valign="bottom">NSM<hr/></td>
              <td align="center" valign="bottom">Spatial-SSA<hr/></td>
            </tr>
            <tr>
              <td align="center" valign="bottom">Â <hr/></td>
              <td align="center" valign="bottom">+ extendable<hr/></td>
              <td align="center" valign="bottom">+non-local extension<hr/></td>
              <td align="center" valign="bottom">Â <hr/></td>
            </tr>
            <tr>
              <td align="center" valign="bottom">Propensity types<hr/></td>
              <td align="center" valign="bottom">All<hr/></td>
              <td align="center" valign="bottom">SBML (MathML)<hr/></td>
              <td align="center" valign="bottom">Mass-action<hr/></td>
            </tr>
            <tr>
              <td align="center" valign="bottom">Model Features<hr/></td>
              <td align="center" valign="bottom">compartments<hr/></td>
              <td align="center" valign="bottom">compartments<hr/></td>
              <td align="center" valign="bottom">compartments<hr/></td>
            </tr>
            <tr>
              <td align="center" valign="bottom">Â <hr/></td>
              <td align="center" valign="bottom">surfaces<hr/></td>
              <td align="center" valign="bottom">Â <hr/></td>
              <td align="center" valign="bottom">surfaces<hr/></td>
            </tr>
            <tr>
              <td align="center" valign="bottom">Â <hr/></td>
              <td align="center" valign="bottom">volume diffusion<hr/></td>
              <td align="center" valign="bottom">volume diffusion<hr/></td>
              <td align="center" valign="bottom">volume diffusion<hr/></td>
            </tr>
            <tr>
              <td align="center" valign="bottom">Â <hr/></td>
              <td align="center" valign="bottom">surface diffusion<hr/></td>
              <td align="center" valign="bottom">Â <hr/></td>
              <td align="center" valign="bottom">Â <hr/></td>
            </tr>
            <tr>
              <td align="center">Â </td>
              <td align="center">directed transport</td>
              <td align="center">Â </td>
              <td align="center">Â </td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <p>This table summarizes the main differences and similarities between the software packages URDME, MesoRD and STEPS.</p>
        </table-wrap-foot>
      </table-wrap>
      <p>There are three significant ways a user interacts with a spatial stochastic software package: the environment for model development, execution of a simulation, and post-processing and analysis of the data generated by the simulation.</p>
      <p>The interface and model development environment used by URDME and STEPS are similar in that both are closely tied to a programming language environment: Matlab in the case of URDME and Python for STEPS. URDME provides a single function entry point, and models are developed in external programming files. This design pattern follows that of the Matlab ODE suite. STEPS provides an object oriented Python interface for creation, simulation and post-processing of models. STEPS claims that a programmatic interface offers significant advantages over non-interactive software interface [<xref ref-type="bibr" rid="B22">22</xref>] (in contrast to the command line and input file interface), and we share this opinion.</p>
      <p>The major differences between URDME and STEPS are the feature set and the performance. The execution platform of URDME is the Matlab-Comsol environment, thus URDME has full access to the scientific libraries of Matlab as well as the advanced geometry and mesh handling interface of Comsol. Another major difference is one of aim. URDME is developed by a team of biological model developers as well as of algorithm developers, and it aims itself at both communities. This is reflected in its expandable solver interface and performance centric design.</p>
      <p>In contrast to the design pattern used in URDME and STEPS, MesoRD functions as a command line program that uses an input file in the Systems Biology Markup Language (SBML) [<xref ref-type="bibr" rid="B53">53</xref>] format to describe the model. SBML is a community effort with the aim to standardize descriptions of biochemical reaction network models. MesoRD extends the format with a custom Consecutive Solid Geometry (CSG) description of the domain geometry of the model. SBML has been widely adopted as a standard to exchange non-spatial models, but the limitations in its capability to describe spatial models has restricted its adoption for RDME simulations.</p>
      <p>The post-processing environment of URDME is closely integrated into Matlab. MesoRD provides a Matlab toolbox for analyzing the simulation data files. STEPS utilizes the Python programming environment and packages such as NumPy, SciPy, and Matplotlib for post-processing and analysis.</p>
      <p>Compared to static XML input files, the programmatic paradigm used by URDME and STEPS provides a more powerful but also more complex modeling environment. Constructing model files using a complete programming language reduces the restrictions imposed on the software by the model format. For example, the model of the neuron presented in the Results section could not have been described by an SBML document, nor the extended SBML format used by MesoRD. Since propensities in URDME are defined in a program file, any type of functional propensity can be used in URDME models, including Michaelis-Menten and Hill term style propensities, and even arbitrary logical expressions can be employed.</p>
      <p>This offers great flexibility in terms of the models that can be simulated, but also places more responsibility on the end-user. MesoRD uses MathML as part of the SBML definition, which allows the use of any mathematical expression in the propensities and facilitates handling of units and error checking. This is a powerful and robust, but also a computationally very expensive strategy. The STEPS reaction object only supports mass action kinetics, which results in an efficient but less flexible strategy.</p>
      <p>In addition to having the most efficient and expandable design of the model propensity, URDME also provides the largest set of geometry and mesh model features of the three software packages. URDME supports volume compartments with internal and external 2D surfaces embedded in the 3D geometry, as well as diffusion and reactions on surfaces and in the 3D volume. URDME also supports directed transport (convection) in 3D through an add-on module. STEPS 1.3 supports 3D compartments and volume diffusion. It is capable of localizing species to a curved surface embedded in 3D, but does not support surface diffusion. MesoRD 1.0 supports 3D compartments and volume diffusion only. To represent cellular membranes, their models typically use a small 3D volume on the exterior of the domain.</p>
      <p>In summary, as a consequence of the design of the model environment, MesoRD is simpler to learn and use than both URDME and STEPS and also offers a better support for e.g. handling units, but the latter two offer a much more flexible and efficient modeling and simulation environment. In addition to the programmatic environment, both URDME and STEPS provide limited support for SBML. URDME has an experimental conversion utility that will create templates for the model and propensity file from an SBML description of the chemical reactions, see Additional file <xref ref-type="supplementary-material" rid="S5">5</xref>. This utility will be fully included in the next version of URDME. STEPS provides a function to convert an SBML file into Python model objects. In addition to the SBML document defining the biochemical reaction network, both URDME and STEPS require a mesh describing the model domain geometry be provided.</p>
    </sec>
    <sec>
      <title>Simulation performance</title>
      <p>To compare the performance of the software packages, we implemented the model of Min oscillations in <italic>E. Coli</italic> as described in [<xref ref-type="bibr" rid="B8">8</xref>] in each of the three software environments. Figure <xref ref-type="fig" rid="F7">7</xref> shows simulation time as a function of the number of voxels in the mesh. The simulation was run for 900 seconds (simulation time), with the system state recorded every second. A detailed description of the model setup in the different packages can be found in Additional file <xref ref-type="supplementary-material" rid="S6">6</xref> and the scripts used for producing these benchmarks are provided in Additional file <xref ref-type="supplementary-material" rid="S7">7</xref>. The URDME framework has a strong emphasis on efficient simulation algorithms which is also visible in the figure. URDME clearly outperforms the other packages and we believe that this is in large parts due to URDMEâs modular design and the fact that the solver source files and the propensity functions file are <italic>compiled</italic> into a dedicated executable for each separate model (see the Implementation section for details).</p>
      <fig id="F7" position="float">
        <label>Figure 7</label>
        <caption>
          <p><bold>Performance comparison of the three software packages for an increasing number of voxels.</bold> Each point shows the mean and the error bars show the standard deviation of a ensemble of <italic>N</italic>=5 runs. For URDME the number of voxels represents the number of mesh vertices, for MesoRD it represents the number of cubic subvolumes, and for STEPS it represents the number of tetrahedrons. All simulations were performed on a 1.8 GHz Intel core i7 processor with 4GB of memory.</p>
        </caption>
        <graphic xlink:href="1752-0509-6-76-7"/>
      </fig>
    </sec>
    <sec>
      <title>The numerical treatment of mesoscopic diffusion</title>
      <p>URDME emphasizes the use of unstructured tetrahedral and triangular meshes to discretize the geometry. Unstructured meshes offer distinct advantages over Cartesian meshes for resolving complex geometries with non-trivial boundaries and they are more flexible than cut-cell approaches when it comes to describing processes occurring on a curved boundary embedded in 3D space, such as the cell membrane of a spherical cell or the nuclear membrane [<xref ref-type="bibr" rid="B54">54</xref>]. The first version of URDME was developed as a product of theoretical work on how to obtain mesoscopic diffusion jump constants on triangular and tetrahedral meshes [<xref ref-type="bibr" rid="B33">33</xref>]. In short, the methodology used by URDME is based on the fact that a numerical discretization scheme for the standard diffusion equation will give jump coefficients that result in mesoscopic simulations that are consistent with both the behavior of mean values of a large ensemble of particles and the probability density function for a single particle diffusing according to Brownian motion. The latter is true since the Fokker-Planck equation for the one-particle probability density function is mathematically equivalent to the macroscopic diffusion equation. URDME currently uses a discretization with the Finite Element method to obtain the diffusion jump coefficients.</p>
      <p>The quality of the tetrahedral mesh is an important aspect of a numerical discretization. An in-depth discussion of the requirements on the mesh for use in the mesoscopic model is given in [<xref ref-type="bibr" rid="B33">33</xref>]. Tetrahedra should not be too irregular, and between regions in the domain with much different resolution, the size of the elements should not grow too fast. This is also true for the solution of PDEs, and mesh generation software is aware of these issues and attempts to optimize the meshes accordingly. Surface meshes in 2D from state-of-the art mesh generation software such as Comsol tend to be of very high quality. In 3D, many meshes will violate the assumptions in [<xref ref-type="bibr" rid="B33">33</xref>] to some degree. Generation of high quality unstructured meshes is an active area of research due to their importance in industrial applications. The modular design of URDME ensures that we can accommodate new results in this area without major restructuring of the code.</p>
      <p>The influence of mesh quality on RDME simulations on unstructured meshes in 3D was studied for several different discretization schemes in [<xref ref-type="bibr" rid="B55">55</xref>] using particularly revealing and highly sensitive model problems. They show that unless the meshes are of high quality, discretization errors may lead to small but persisting errors for both the Finite Element and the Finite Volume methods, i.e. the convergence properties of the schemes are affected negatively. In some of these cases, simulations using a structured Cartesian mesh will have better numerical properties if the geometry permits resolution of the domain with a feasible number of subvolumes. On the other hand, it is not difficult to think of cases for which this is very difficult and for which sensitive processes occur on the parts of the domain which are hard to resolve.</p>
      <p>Using MesoRD, surfaces in a 3D model are modeled as volume geometry objects by ensuring that the thickness of the membrane is small compared to its size, approaching a true 2D model as the thickness of the membrane becomes small. Unless one desires to resolve some dynamics on such high level of detail as to consider vertical movement of molecules in the membrane, this will be unnecessarily expensive since the mesh elements has to be sufficiently small to resolve the narrow 3D volume. The mesh generation in MesoRD needs several grid points in the extent of a membrane to give a fully connected diffusion volume [<xref ref-type="bibr" rid="B56">56</xref>](Figure eleven). With a uniform grid, this will lead to expensive simulations since the size of the voxels necessary to accurately resolve the membrane must be used everywhere in the domain. In order to demonstrate this, we conducted a simple diffusion-only numerical experiment, described in detail in Additional file <xref ref-type="supplementary-material" rid="S6">6</xref>. We let molecules diffuse freely on the surface of a unit sphere, and be absorbed by a small circular patch at one of the poles. Simulations using URDME are in excellent agreement with the exact solution even for fairly coarse meshes (Additional file <xref ref-type="supplementary-material" rid="S6">6</xref>: Figure S1). For example, using an ensemble size of 1<sup>05</sup> molecules to compute the mean absorption time, the error was â0.2<italic>%</italic>for a mesh with 4343 voxels. The computing time to generate the solution was 21 seconds. By contrast, for a membrane thickness of 100 <italic>nm</italic> and a voxel size of 20 <italic>nm</italic>, MesoRD 1.0 produces a solution with about 14% error using 157128 voxels and a simulation time of 1 hour and 50 minutes on the same 2.66 Ghz Intel Core i7 with 8GB of RAM.</p>
      <p>For complex models with both volume diffusion, surface diffusion, and reactions, it is difficult to predict what impact different sources of error in the diffusion will have on the output metric of interest. For example, for the Min system used to benchmark the different software packages in Figure <xref ref-type="fig" rid="F7">7</xref>, URDME, STEPS, and MesoRD give quite similar period times of oscillations (Additional file <xref ref-type="supplementary-material" rid="S6">6</xref>).</p>
      <p>In addition to errors caused by the discretization, errors intrinsic to the RDME mathematical model arise for highly diffusion limited reactions when the voxels become very small [<xref ref-type="bibr" rid="B12">12</xref>]. To some extent, this can be alleviated using modified, mesh dependent bimolecular reaction rates [<xref ref-type="bibr" rid="B13">13</xref>,<xref ref-type="bibr" rid="B57">57</xref>], but there is a critical size of the voxels under which no correction to the traditional RDME can make it consistent with more fine scaled particle based methods [<xref ref-type="bibr" rid="B58">58</xref>]. Since unstructured meshes can more accurately resolve complex geometries, their spatial accuracy is often higher for equivalently sized voxels when compared to Cartesian meshes. This can help in avoiding geometrical features of the model to force us to approach the critical regime for the voxel sizes. The combined effects of diffusion discretization error and error caused by small subvolumes were investigated for several additional models in [<xref ref-type="bibr" rid="B55">55</xref>]. For the examples studied there, it was concluded that the error introduced by small subvolumes in 3D could be a bigger source of error than any numerical discretization errors of the diffusion operator.</p>
    </sec>
  </sec>
  <sec sec-type="conclusions">
    <title>Conclusions</title>
    <p>As demonstrated by the examples in this paper, the URDME infrastructure offers great flexibility at the stage of model construction and execution. Using a simple script in Matlab, URDME was used to set up and conduct a series of experiments in which the geometry of an <italic>E. Coli</italic> bacterium was automatically varied. In another example, the basic reaction-diffusion modeling framework was extended to include active transport in a highly complex geometry obtained from external CAD and meshing software.</p>
    <p>The URDME software framework offers unique features for both model and methods developers in computational systems biology. The support of unstructured meshes provides the capability to create models with a complex geometry that closely match the physical descriptions of the systems under study. URDME integrates easily with widely used scientific computing software to provide a versatile platform for mathematical and computational modeling, allowing for the implementation of complex and customized models and pre- and post-processing routines. The modular design ensures extensibility and interchangeability of the third-party tools used for model specification and mesh generation, as well as of the core simulation algorithms.</p>
  </sec>
  <sec>
    <title>Availability and requirements</title>
    <p>Â· Project name: URDME.</p>
    <p>Â· Project home page: <ext-link ext-link-type="uri" xlink:href="http://www.urdme.org.">http://www.urdme.org.</ext-link></p>
    <p>Â· Operating systems: Linux, MacOS X.</p>
    <p>Â· Programming language: C, Matlab, Bash shell script.</p>
    <p>Â· Other requirements: GNU GCC version â¥ 4.2, Matlab, Comsol Multiphysics 3.5a.</p>
    <p>Â· License: GNU General Public License, version 3.</p>
    <p>Â· Any restrictions to use by non-academics: none.</p>
  </sec>
  <sec>
    <title>Competing interests</title>
    <p>The authors declare that they have no competing interests.</p>
  </sec>
  <sec>
    <title>Authorsâ contributions</title>
    <p>BD, SE and AH contributed equally to the design and implementation of the software and to the preparation of this paper. All authors read and approved the final manuscript.</p>
  </sec>
  <sec>
    <title>Funding</title>
    <p>The Swedish Graduate School in Mathematics and Computing (AH, SE), the Swedish Research Council and the Linnaeus centre of excellence UPMARC (SE), the Royal Swedish Academy of Sciences FOA08H-109, FOA09H-63, FOA09H-64 (AH), SSF grant A3 02:124 (AH), U.S. NSF grant DMS-1001012, U.S DOE award DE-FG02-04ER25621, U.S. NSF IGERT DGE-02-21715, Institute for Collaborative Biotechnologies grant W911NF-09-0001 from the U.S. Army Research Office (BD) and the National Institute of Biomedial Imaging And Bioengineering of the National Institute of Health under Award Number R01 EB014877 (BD,AH). The content is solely the responsibility of the authors and does not necessarily represent the official views of the National Institute of Health.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="S1">
      <caption>
        <title>Additional file 1</title>
        <p><bold>urdme.tar.gz.</bold> The current release of URDME. Also available for download via <ext-link ext-link-type="uri" xlink:href="http://www.urdme.org.">http://www.urdme.org.</ext-link></p>
      </caption>
      <media xlink:href="1752-0509-6-76-S1.gz" mimetype="application" mime-subtype="x-zip-compressed">
        <caption>
          <p>Click here for file</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="S2">
      <caption>
        <title>Additional file 2</title>
        <p><bold>minsweep.tar.gz.</bold> Model files required to run the first example in the main paper.</p>
      </caption>
      <media xlink:href="1752-0509-6-76-S2.gz" mimetype="application" mime-subtype="x-zip-compressed">
        <caption>
          <p>Click here for file</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="S3">
      <caption>
        <title>Additional file 3</title>
        <p><bold>benchmark.tar.gz.</bold> Model files required to run the second example in the main paper.</p>
      </caption>
      <media xlink:href="1752-0509-6-76-S3.gz" mimetype="application" mime-subtype="x-zip-compressed">
        <caption>
          <p>Click here for file</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="S4">
      <caption>
        <title>Additional file 4</title>
        <p><bold>neuron.tar.gz.</bold> Model files required to run the third example in the main paper.</p>
      </caption>
      <media xlink:href="1752-0509-6-76-S4.gz" mimetype="application" mime-subtype="x-zip-compressed">
        <caption>
          <p>Click here for file</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="S5">
      <caption>
        <title>Additional file 5</title>
        <p><bold>urdme_sbml_converter.tar.gz.</bold> SBML conversion tool to create URDME model files from a SBML model file describing chemical reactions.</p>
      </caption>
      <media xlink:href="1752-0509-6-76-S5.gz" mimetype="application" mime-subtype="x-zip-compressed">
        <caption>
          <p>Click here for file</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="S6">
      <caption>
        <title>Additional file 6</title>
        <p><bold>validation.pdf.</bold> Simulation results for a simple diffusion problem on the surface of a sphere and for the Min system [<xref ref-type="bibr" rid="B8">8</xref>,<xref ref-type="bibr" rid="B34">34</xref>,<xref ref-type="bibr" rid="B55">55</xref>,<xref ref-type="bibr" rid="B56">56</xref>,<xref ref-type="bibr" rid="B59">59</xref>,<xref ref-type="bibr" rid="B60">60</xref>].</p>
      </caption>
      <media xlink:href="1752-0509-6-76-S6.pdf" mimetype="application" mime-subtype="pdf">
        <caption>
          <p>Click here for file</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="S7">
      <caption>
        <title>Additional file 7</title>
        <p><bold>urdme_software_comparision.tar.gz.</bold> Model files and scripts used to conduct the performance benchmark in the discussion section and the simulations described in Additional file <xref ref-type="supplementary-material" rid="S6">6</xref>.</p>
      </caption>
      <media xlink:href="1752-0509-6-76-S7.gz" mimetype="application" mime-subtype="x-zip-compressed">
        <caption>
          <p>Click here for file</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <sec>
    <title>Acknowledgements</title>
    <p>We would like to acknowledge the contribution by Josef Cullhed to the implementation of an early version of the software and Mark Sturrock for his thorough testing of the beta-release. The authors are grateful to Per LÃ¶tstedt, Linda Petzold, and Stefan Hellander for valuable inputs during the development of URDME and the writing of this manuscript.</p>
  </sec>
  <ref-list>
    <ref id="B1">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Thattai</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>van Oudenaarden</surname>
          <given-names>A</given-names>
        </name>
        <article-title>Intrinsic noise in gene regulatory networks</article-title>
        <source>Proc Natl Acad Sci USA</source>
        <year>2001</year>
        <volume>98</volume>
        <fpage>8614</fpage>
        <lpage>8619</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.151588598</pub-id>
        <pub-id pub-id-type="pmid">11438714</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B2">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Paulsson</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Berg</surname>
          <given-names>OG</given-names>
        </name>
        <name>
          <surname>Ehrenberg</surname>
          <given-names>M</given-names>
        </name>
        <article-title>Stochastic focusing: Fluctuation-enhanced sensitivity of intracellular regulation</article-title>
        <source>Proc Natl Acad Sci USA</source>
        <year>2000</year>
        <volume>97</volume>
        <issue>13</issue>
        <fpage>7148</fpage>
        <lpage>7153</lpage>
        <comment>[<ext-link ext-link-type="uri" xlink:href="http://www.pnas.org/cgi/content/abstract/97/13/7148">http://www.pnas.org/cgi/content/abstract/97/13/7148</ext-link>].</comment>
        <pub-id pub-id-type="doi">10.1073/pnas.110057697</pub-id>
        <pub-id pub-id-type="pmid">10852944</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B3">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Barkai</surname>
          <given-names>N</given-names>
        </name>
        <name>
          <surname>Leibler</surname>
          <given-names>S</given-names>
        </name>
        <article-title>Circadian clocks limited by noise</article-title>
        <source>Nature</source>
        <year>2000</year>
        <volume>403</volume>
        <fpage>267</fpage>
        <lpage>268</lpage>
        <pub-id pub-id-type="pmid">10659837</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B4">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Swain</surname>
          <given-names>PS</given-names>
        </name>
        <name>
          <surname>Elowitz</surname>
          <given-names>MB</given-names>
        </name>
        <name>
          <surname>Siggia</surname>
          <given-names>ED</given-names>
        </name>
        <article-title>Intrinsic and extrinsic contributions to stochasticity in gene expression</article-title>
        <source>Proc Natl Acad Sci USA</source>
        <year>2002</year>
        <volume>99</volume>
        <issue>20</issue>
        <fpage>12795</fpage>
        <lpage>12800</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.162041399</pub-id>
        <pub-id pub-id-type="pmid">12237400</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B5">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Elowitz</surname>
          <given-names>MB</given-names>
        </name>
        <name>
          <surname>Levine</surname>
          <given-names>AJ</given-names>
        </name>
        <name>
          <surname>Siggia</surname>
          <given-names>ED</given-names>
        </name>
        <name>
          <surname>Swain</surname>
          <given-names>PS</given-names>
        </name>
        <article-title>Stochastic gene expression in a single cell</article-title>
        <source>Science</source>
        <year>2002</year>
        <volume>297</volume>
        <issue>5584</issue>
        <fpage>1183</fpage>
        <lpage>1186</lpage>
        <comment>[<ext-link ext-link-type="uri" xlink:href="http://www.sciencemag.org/cgi/content/abstract/297/5584/1183">http://www.sciencemag.org/cgi/content/abstract/297/5584/1183</ext-link>].</comment>
        <pub-id pub-id-type="doi">10.1126/science.1070919</pub-id>
        <pub-id pub-id-type="pmid">12183631</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B6">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Raser</surname>
          <given-names>JM</given-names>
        </name>
        <name>
          <surname>OâShea</surname>
          <given-names>EK</given-names>
        </name>
        <article-title>Noise in gene expression: Origins, consequences and control</article-title>
        <source>Science</source>
        <year>2005</year>
        <volume>309</volume>
        <fpage>2010</fpage>
        <lpage>2013</lpage>
        <pub-id pub-id-type="doi">10.1126/science.1105891</pub-id>
        <pub-id pub-id-type="pmid">16179466</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B7">
      <mixed-citation publication-type="journal">
        <collab>Gillespie DT</collab>
        <article-title>A general method for numerically simulating the stochastic time evolution of coupled chemical reacting systems</article-title>
        <source>J Comput Phys</source>
        <year>1976</year>
        <volume>22</volume>
        <fpage>403</fpage>
        <lpage>434</lpage>
        <pub-id pub-id-type="doi">10.1016/0021-9991(76)90041-3</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B8">
      <mixed-citation publication-type="other">
        <name>
          <surname>Fange</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Elf</surname>
          <given-names>J</given-names>
        </name>
        <source>Noise induced Min phenotypes in E. coli. PLoS Comput Biol</source>
        <year>2006</year>
        <volume>2</volume>
        <issue>6</issue>
        <fpage>e80</fpage>
      </mixed-citation>
    </ref>
    <ref id="B9">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Takahashi</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>TÄnase-Nicola</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>ten Wolde</surname>
          <given-names>PR</given-names>
        </name>
        <article-title>Spatio-temporal correlations can drastically change the response of a MAPK pathway</article-title>
        <source>Proc Natl Acad Sci USA</source>
        <year>2010</year>
        <volume>107</volume>
        <issue>6</issue>
        <fpage>2473</fpage>
        <lpage>2478</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.0906885107</pub-id>
        <pub-id pub-id-type="pmid">20133748</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B10">
      <mixed-citation publication-type="book">
        <name>
          <surname>van Kampen</surname>
          <given-names>NG</given-names>
        </name>
        <source>Stochastic Processes in Physics and Chemistry. 3rd edition</source>
        <year>2007</year>
        <publisher-name>Amsterdam: Elsevier</publisher-name>
      </mixed-citation>
    </ref>
    <ref id="B11">
      <mixed-citation publication-type="book">
        <name>
          <surname>Gardiner</surname>
          <given-names>CW</given-names>
        </name>
        <source>Handbook of Stochastic Methods for Physics, Chemistry and the Natural Sciences 3rd edition</source>
        <year>2004</year>
        <publisher-name>Berlin: Springer-Verlag</publisher-name>
      </mixed-citation>
    </ref>
    <ref id="B12">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Isaacson</surname>
          <given-names>SA</given-names>
        </name>
        <article-title>The reaction-diffusion master equation as an asymptotic approximation of diffusion to a small target</article-title>
        <source>SIAM J Appl Math</source>
        <year>2009</year>
        <volume>70</volume>
        <fpage>77</fpage>
        <lpage>111</lpage>
        <pub-id pub-id-type="doi">10.1137/070705039</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B13">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Erban</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Chapman</surname>
          <given-names>J</given-names>
        </name>
        <article-title>Stochastic modelling of reaction-diffusion processes: Algorithms for bimolecular reactions</article-title>
        <source>Phys Biol</source>
        <year>2009</year>
        <volume>6</volume>
        <fpage>046001</fpage>
        <pub-id pub-id-type="doi">10.1088/1478-3975/6/4/046001</pub-id>
        <pub-id pub-id-type="pmid">19700812</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B14">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Bernstein</surname>
          <given-names>D</given-names>
        </name>
        <article-title>Simulating mesoscopic reaction-diffusion systems using the Gillespie algorithm</article-title>
        <source>Phys Rev E</source>
        <year>2005</year>
        <volume>71</volume>
        <fpage>041103</fpage>
      </mixed-citation>
    </ref>
    <ref id="B15">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Elf</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Ehrenberg</surname>
          <given-names>M</given-names>
        </name>
        <article-title>Spontaneous Separation of bi-stable biochemical systems into spatial domains of opposite phases</article-title>
        <source>Syst Biol</source>
        <year>2004</year>
        <volume>1</volume>
        <issue>2</issue>
        <fpage>230</fpage>
        <lpage>236</lpage>
        <pub-id pub-id-type="doi">10.1049/sb:20045021</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B16">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Stundzia</surname>
          <given-names>AB</given-names>
        </name>
        <name>
          <surname>Lumsden</surname>
          <given-names>CL</given-names>
        </name>
        <article-title>Stochastic simulation of coupled reaction-diffusion processes</article-title>
        <source>J Comput Phys</source>
        <year>1996</year>
        <volume>127</volume>
        <fpage>196</fpage>
        <lpage>207</lpage>
        <pub-id pub-id-type="doi">10.1006/jcph.1996.0168</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B17">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Raj</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>van den</surname>
          <given-names>Bogaard</given-names>
        </name>
        <name>
          <surname>Rifkin</surname>
          <given-names>SA</given-names>
        </name>
        <name>
          <surname>van Oudenaarden</surname>
          <given-names>A</given-names>
        </name>
        <article-title>Imaging individual mRNA molecules using multiple singly labeled probes</article-title>
        <source>Nat Meth</source>
        <year>2008</year>
        <volume>5</volume>
        <issue>10</issue>
        <fpage>877</fpage>
        <lpage>879</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.1253</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B18">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Elf</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Li</surname>
          <given-names>GW</given-names>
        </name>
        <name>
          <surname>Xie</surname>
          <given-names>XS</given-names>
        </name>
        <article-title>Probing Transcription factor dynamics at the single-molecule level in a living cell</article-title>
        <source>Science</source>
        <year>2007</year>
        <volume>316</volume>
        <issue>5828</issue>
        <fpage>1191</fpage>
        <lpage>1194</lpage>
        <pub-id pub-id-type="doi">10.1126/science.1141967</pub-id>
        <pub-id pub-id-type="pmid">17525339</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B19">
      <mixed-citation publication-type="journal">
        <name>
          <surname>van Zon</surname>
          <given-names>JS</given-names>
        </name>
        <name>
          <surname>ten Wolde</surname>
          <given-names>RP</given-names>
        </name>
        <article-title>Simulating biochemical networks at the particle level and in time and space: greenâs function reaction dynamics</article-title>
        <source>Phys Rev Lett</source>
        <year>2005</year>
        <volume>94</volume>
        <issue>12</issue>
        <fpage>128103</fpage>
        <pub-id pub-id-type="pmid">15903966</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B20">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Andrews</surname>
          <given-names>SS</given-names>
        </name>
        <name>
          <surname>Addy</surname>
          <given-names>NJ</given-names>
        </name>
        <name>
          <surname>Brent</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Arkin</surname>
          <given-names>AP</given-names>
        </name>
        <article-title>Detailed simulations of cell biology with Smoldyn 2.1</article-title>
        <source>PLoS Comput Biol</source>
        <year>2010</year>
        <volume>6</volume>
        <issue>3</issue>
        <fpage>e1000705</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1000705</pub-id>
        <pub-id pub-id-type="pmid">20300644</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B21">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Kerr</surname>
          <given-names>RA</given-names>
        </name>
        <name>
          <surname>Bartol</surname>
          <given-names>TM</given-names>
        </name>
        <name>
          <surname>Kaminsky</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Dittrich</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Chang</surname>
          <given-names>JCJ</given-names>
        </name>
        <name>
          <surname>Baden</surname>
          <given-names>SB</given-names>
        </name>
        <name>
          <surname>Sejnowski</surname>
          <given-names>TJ</given-names>
        </name>
        <name>
          <surname>Stiles</surname>
          <given-names>JR</given-names>
        </name>
        <article-title>Fast Monte Carlo simulation methods for biological reaction-diffusion systems in solution and on surfaces</article-title>
        <source>SIAM J Sci Comput</source>
        <year>2008</year>
        <volume>30</volume>
        <issue>6</issue>
        <fpage>3126</fpage>
        <lpage>3149</lpage>
        <pub-id pub-id-type="doi">10.1137/070692017</pub-id>
        <pub-id pub-id-type="pmid">20151023</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B22">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Hepburn</surname>
          <given-names>I</given-names>
        </name>
        <name>
          <surname>Chen</surname>
          <given-names>W</given-names>
        </name>
        <name>
          <surname>Wils</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Schutter</surname>
          <given-names>ED</given-names>
        </name>
        <article-title>STEPS: efficient simulation of stochastic reaction-diffusion models in realistic morphologies</article-title>
        <source>BMC Syst Biol</source>
        <year>2012</year>
        <volume>6</volume>
        <issue>35</issue>
        <comment>[<ext-link ext-link-type="uri" xlink:href="http://www.biomedcentral.com/1752-0509/6/36/abstract">http://www.biomedcentral.com/1752-0509/6/36/abstract</ext-link>].</comment>
      </mixed-citation>
    </ref>
    <ref id="B23">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Lampoudi</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Gillespie</surname>
          <given-names>DT</given-names>
        </name>
        <name>
          <surname>Petzold</surname>
          <given-names>LR</given-names>
        </name>
        <article-title>The multinomial simulation algorithm for discrete stochastic simulation of reaction-diffusion systems</article-title>
        <source>J Chem Phys</source>
        <year>2009</year>
        <volume>130</volume>
        <issue>9</issue>
        <fpage>094104</fpage>
        <comment>[<ext-link ext-link-type="uri" xlink:href="http://link.aip.org/link/?JCP/130/094104/1">http://link.aip.org/link/?JCP/130/094104/1</ext-link>].</comment>
        <pub-id pub-id-type="doi">10.1063/1.3074302</pub-id>
        <pub-id pub-id-type="pmid">19275393</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B24">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Rossinelli</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Bayati</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Koumoutsakos</surname>
          <given-names>P</given-names>
        </name>
        <article-title>Accelerated stochastic and hybrid method for spatial simulations of reaction-diffusion systems</article-title>
        <source>Chem Phys Lett</source>
        <year>2008</year>
        <volume>451</volume>
        <fpage>136</fpage>
        <lpage>140</lpage>
        <pub-id pub-id-type="doi">10.1016/j.cplett.2007.11.055</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B25">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Marquez-Lago</surname>
          <given-names>TT</given-names>
        </name>
        <name>
          <surname>Burrage</surname>
          <given-names>K</given-names>
        </name>
        <article-title>Binomial tau-leap spatial stochastic simulation algorithm for applications in chemical kinetics</article-title>
        <source>J Chem Phys</source>
        <year>2007</year>
        <volume>127</volume>
        <issue>10</issue>
        <fpage>104101</fpage>
        <comment>[<ext-link ext-link-type="uri" xlink:href="http://link.aip.org/link/?JCP/127/104101/1">http://link.aip.org/link/?JCP/127/104101/1</ext-link>].</comment>
        <pub-id pub-id-type="doi">10.1063/1.2771548</pub-id>
        <pub-id pub-id-type="pmid">17867731</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B26">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Bayati</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Chatelin</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Koumoutsakos</surname>
          <given-names>P</given-names>
        </name>
        <article-title>Adaptive mesh refinement for stochastic reaction-diffusion processes</article-title>
        <source>J Comput Phys</source>
        <year>2011</year>
        <volume>230</volume>
        <fpage>13</fpage>
        <lpage>26</lpage>
        <pub-id pub-id-type="doi">10.1016/j.jcp.2010.08.035</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B27">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Ferm</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Hellander</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>LÃ¶tstedt</surname>
          <given-names>P</given-names>
        </name>
        <article-title>An adaptive algorithm for simulation of stochastic reaction-diffusion processes</article-title>
        <source>J Comput Phys</source>
        <year>2010</year>
        <volume>229</volume>
        <issue>2</issue>
        <fpage>343</fpage>
        <lpage>360</lpage>
        <pub-id pub-id-type="doi">10.1016/j.jcp.2009.09.030</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B28">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Hattne</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Fange</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Elf</surname>
          <given-names>J</given-names>
        </name>
        <article-title>Stochastic reactionâdiffusion simulation with MesoRD</article-title>
        <source>Bioinformatics</source>
        <year>2005</year>
        <volume>21</volume>
        <issue>12</issue>
        <fpage>2923</fpage>
        <lpage>2924</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bti431</pub-id>
        <pub-id pub-id-type="pmid">15817692</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B29">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Ander</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Beltrao</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Ventura</surname>
          <given-names>BD</given-names>
        </name>
        <name>
          <surname>Ferkinghoff-Borg</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Foglierini</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Lemerle</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Tomas-Oliveira</surname>
          <given-names>I</given-names>
        </name>
        <name>
          <surname>Serrano</surname>
          <given-names>L</given-names>
        </name>
        <article-title>SmartCell, a framework to simulate cellular processes that combines stochastic approximation with diffusion and localisation: analysis of simple networks</article-title>
        <source>Syst Biol</source>
        <year>2004</year>
        <volume>1</volume>
        <fpage>129</fpage>
        <lpage>138</lpage>
        <pub-id pub-id-type="doi">10.1049/sb:20045017</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B30">
      <mixed-citation publication-type="book">
        <name>
          <surname>Drawert</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Engblom</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Hellander</surname>
          <given-names>A</given-names>
        </name>
        <article-title>URDME 1.1: Userâs manual</article-title>
        <source>Tech. Rep. 2011-003, Department of Information Technology</source>
        <year>2011</year>
        <publisher-name>Division of Scientific Computing</publisher-name>
      </mixed-citation>
    </ref>
    <ref id="B31">
      <mixed-citation publication-type="other">
        <name>
          <surname>Geuzaine</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Remacle</surname>
          <given-names>JF</given-names>
        </name>
        <article-title>Gmsh: a three-dimensional finite element mesh generator with built-in pre- and post-processing facilities</article-title>
        <comment>[<ext-link ext-link-type="uri" xlink:href="http://www.geuz.org/gmsh/">http://www.geuz.org/gmsh/</ext-link>].</comment>
      </mixed-citation>
    </ref>
    <ref id="B32">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Drawert</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Lawson</surname>
          <given-names>MJ</given-names>
        </name>
        <name>
          <surname>Petzold</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Khammash</surname>
          <given-names>M</given-names>
        </name>
        <article-title>The diffusive finite state projection algorithm for efficient simulation of the stochastic reaction-diffusion master equation</article-title>
        <source>J Chem Phys</source>
        <year>2010</year>
        <volume>132</volume>
        <issue>7</issue>
        <fpage>074101</fpage>
        <pub-id pub-id-type="doi">10.1063/1.3310809</pub-id>
        <pub-id pub-id-type="pmid">20170209</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B33">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Engblom</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Ferm</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Hellander</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>LÃ¶tstedt</surname>
          <given-names>P</given-names>
        </name>
        <article-title>Simulation of stochastic reactionâdiffusion processes on unstructured meshes</article-title>
        <source>SIAM J Sci Comput</source>
        <year>2009</year>
        <volume>31</volume>
        <issue>3</issue>
        <fpage>1774</fpage>
        <lpage>1797</lpage>
        <pub-id pub-id-type="doi">10.1137/080721388</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B34">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Hellander</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Hellander</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>LÃ¶tstedt</surname>
          <given-names>P</given-names>
        </name>
        <article-title>Coupled mesoscopic and microscopic simulation of reaction-diffusion processes in mixed dimensions</article-title>
        <source>Multiscale Model Simul</source>
        <year>2012</year>
        <volume>10</volume>
        <issue>2</issue>
        <fpage>585</fpage>
        <lpage>611</lpage>
        <pub-id pub-id-type="doi">10.1137/110832148</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B35">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Hellander</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>LÃ¶tstedt</surname>
          <given-names>P</given-names>
        </name>
        <article-title>Incorporating active transport in mesoscopic reaction-transport models inside living cells</article-title>
        <source>Multiscale Model Simul</source>
        <year>2010</year>
        <volume>8</volume>
        <issue>5</issue>
        <fpage>1691</fpage>
        <lpage>1714</lpage>
        <pub-id pub-id-type="doi">10.1137/100784709</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B36">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Huang</surname>
          <given-names>KC</given-names>
        </name>
        <name>
          <surname>Meir</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Wingreen</surname>
          <given-names>NS</given-names>
        </name>
        <article-title>Dynamic structures in Escherichia coli: Spontaneous formation of MinE and MinD polar zones</article-title>
        <source>Proc Natl Acad Sci USA</source>
        <year>2003</year>
        <volume>100</volume>
        <issue>22</issue>
        <fpage>12724</fpage>
        <lpage>12728</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.2135445100</pub-id>
        <pub-id pub-id-type="pmid">14569005</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B37">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Rathinam</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Petzold</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Cao</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Gillespie</surname>
          <given-names>D</given-names>
        </name>
        <article-title>Stiffness in stochastic chemically reacting systems: The implicit tau-leaping method</article-title>
        <source>J Chem Phys</source>
        <year>2003</year>
        <volume>119</volume>
        <issue>24</issue>
        <fpage>12784</fpage>
        <lpage>12794</lpage>
        <comment><ext-link ext-link-type="uri" xlink:href="http://link.aip.org/link/?JCP/119/12784/1">http://link.aip.org/link/?JCP/119/12784/1</ext-link>].</comment>
        <pub-id pub-id-type="doi">10.1063/1.1627296</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B38">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Cao</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Gillespie</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Petzold</surname>
          <given-names>L</given-names>
        </name>
        <article-title>The slow-scale stochastic simulation algorithm</article-title>
        <source>J Chem Phys</source>
        <year>2005</year>
        <volume>122</volume>
        <fpage>014116</fpage>
        <comment><ext-link ext-link-type="uri" xlink:href="http://link.aip.org/link/?JCP/122/014116/1">http://link.aip.org/link/?JCP/122/014116/1</ext-link>].</comment>
        <pub-id pub-id-type="doi">10.1063/1.1824902</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B39">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Cao</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Petzold</surname>
          <given-names>L</given-names>
        </name>
        <article-title>Slow scale Tau-Leaping method</article-title>
        <source>Comput Meth Appl Mech Eng</source>
        <year>2008</year>
        <volume>197</volume>
        <fpage>3472</fpage>
        <lpage>3479</lpage>
        <comment>[PCMID:PMC2753989]</comment>
        <pub-id pub-id-type="doi">10.1016/j.cma.2008.02.024</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B40">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Wu</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Fu</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Cao</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Petzold</surname>
          <given-names>L</given-names>
        </name>
        <article-title>MichaelisâMenten speeds up tau-leaping under a wide range of conditions</article-title>
        <source>J Chem Phys</source>
        <year>2011</year>
        <volume>134</volume>
        <issue>13</issue>
        <fpage>134112</fpage>
        <comment>[<ext-link ext-link-type="uri" xlink:href="http://link.aip.org/link/?JCP/134/134112/1">http://link.aip.org/link/?JCP/134/134112/1</ext-link>].</comment>
        <pub-id pub-id-type="doi">10.1063/1.3576123</pub-id>
        <pub-id pub-id-type="pmid">21476748</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B41">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Howard</surname>
          <given-names>J</given-names>
        </name>
        <article-title>The movement of kinesin along microtubules</article-title>
        <source>Annu Rev Physiol</source>
        <year>1996</year>
        <volume>58</volume>
        <fpage>703</fpage>
        <lpage>729</lpage>
        <pub-id pub-id-type="doi">10.1146/annurev.ph.58.030196.003415</pub-id>
        <pub-id pub-id-type="pmid">8815816</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B42">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Mallik</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Gross</surname>
          <given-names>SP</given-names>
        </name>
        <article-title>Molecular motors: strategies to get along</article-title>
        <source>Curr Biol</source>
        <year>2004</year>
        <volume>14</volume>
        <fpage>971</fpage>
        <lpage>982</lpage>
        <pub-id pub-id-type="doi">10.1016/j.cub.2004.10.046</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B43">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Vale</surname>
          <given-names>RD</given-names>
        </name>
        <article-title>The molecular motor toolbox for intracellular transport</article-title>
        <source>Cell</source>
        <year>2003</year>
        <volume>112</volume>
        <fpage>467</fpage>
        <lpage>480</lpage>
        <pub-id pub-id-type="doi">10.1016/S0092-8674(03)00111-9</pub-id>
        <pub-id pub-id-type="pmid">12600311</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B44">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Martin</surname>
          <given-names>KC</given-names>
        </name>
        <name>
          <surname>Zukin</surname>
          <given-names>RS</given-names>
        </name>
        <article-title>RNA trafficking and local protein synthesis in dendrites: an overview</article-title>
        <source>J Neurosci</source>
        <year>2006</year>
        <volume>26</volume>
        <issue>27</issue>
        <fpage>7131</fpage>
        <lpage>7134</lpage>
        <pub-id pub-id-type="doi">10.1523/JNEUROSCI.1801-06.2006</pub-id>
        <pub-id pub-id-type="pmid">16822966</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B45">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Welte</surname>
          <given-names>MA</given-names>
        </name>
        <article-title>Bidirectional transport along microtubules</article-title>
        <source>Curr Biol</source>
        <year>2004</year>
        <volume>14</volume>
        <fpage>525</fpage>
        <lpage>537</lpage>
        <pub-id pub-id-type="doi">10.1016/j.cub.2004.06.045</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B46">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Gross</surname>
          <given-names>SP</given-names>
        </name>
        <name>
          <surname>Vershinin</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Shubeita</surname>
          <given-names>GT</given-names>
        </name>
        <article-title>Cargo transport: two motors are sometimes better than one</article-title>
        <source>Curr Biol</source>
        <year>2007</year>
        <volume>17</volume>
        <fpage>R478âR486</fpage>
        <pub-id pub-id-type="pmid">17580082</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B47">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Encalada</surname>
          <given-names>SE</given-names>
        </name>
        <name>
          <surname>Szpankowski</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Xia</surname>
          <given-names>Ch</given-names>
        </name>
        <name>
          <surname>Goldstein</surname>
          <given-names>LSB</given-names>
        </name>
        <article-title>Stable kinesin and dynein assemblies drive the axonal transport of mammalian prion protein vesicles</article-title>
        <source>Cell</source>
        <year>2011</year>
        <volume>144</volume>
        <issue>4</issue>
        <fpage>551</fpage>
        <lpage>565</lpage>
        <comment><ext-link ext-link-type="uri" xlink:href="http://linkinghub.elsevier.com/retrieve/pii/S0092867411000602">http://linkinghub.elsevier.com/retrieve/pii/S0092867411000602</ext-link>].</comment>
        <pub-id pub-id-type="doi">10.1016/j.cell.2011.01.021</pub-id>
        <pub-id pub-id-type="pmid">21335237</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B48">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Goldstein</surname>
          <given-names>LSB</given-names>
        </name>
        <name>
          <surname>Yang</surname>
          <given-names>Z</given-names>
        </name>
        <article-title>Microtubule-based transport systems in neurons: the roles of kinesins and dyneins</article-title>
        <source>Ann Rev Neurosci</source>
        <year>2000</year>
        <volume>23</volume>
        <fpage>39</fpage>
        <lpage>71</lpage>
        <comment>[<ext-link ext-link-type="uri" xlink:href="http://www.annualreviews.org/doi/abs/10.1146/annurev.neuro.23.1.39">http://www.annualreviews.org/doi/abs/10.1146/annurev.neuro.2 3.1.39</ext-link>].</comment>
        <pub-id pub-id-type="doi">10.1146/annurev.neuro.23.1.39</pub-id>
        <pub-id pub-id-type="pmid">10845058</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B49">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Schlager</surname>
          <given-names>MA</given-names>
        </name>
        <name>
          <surname>Hoogenraad</surname>
          <given-names>CC</given-names>
        </name>
        <article-title>Basic mechanisms for recognition and transport of synaptic cargos</article-title>
        <source>Mol Brain</source>
        <year>2009</year>
        <volume>2</volume>
        <issue>25</issue>
        <comment>[<ext-link ext-link-type="uri" xlink:href="http://www.molecularbrain.com/content/2/1/25">http://www.molecularbrain.com/content/2/1/25</ext-link>].</comment>
      </mixed-citation>
    </ref>
    <ref id="B50">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Dixit</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Ross</surname>
          <given-names>JL</given-names>
        </name>
        <name>
          <surname>Goldman</surname>
          <given-names>YE</given-names>
        </name>
        <name>
          <surname>Holzbaur</surname>
          <given-names>EF</given-names>
        </name>
        <article-title>Differential regulation of dynein and kinesin motor proteins by Tau</article-title>
        <source>Science</source>
        <year>2008</year>
        <volume>319</volume>
        <issue>5866</issue>
        <fpage>1086</fpage>
        <lpage>1089</lpage>
        <pub-id pub-id-type="doi">10.1126/science.1152993</pub-id>
        <pub-id pub-id-type="pmid">18202255</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B51">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Hirokawa</surname>
          <given-names>N</given-names>
        </name>
        <name>
          <surname>Takemura</surname>
          <given-names>R</given-names>
        </name>
        <article-title>Molecular motors and mechanisms of directional transport in neurons</article-title>
        <source>Nat Rev Neurosci</source>
        <year>2005</year>
        <volume>6</volume>
        <issue>3</issue>
        <fpage>201</fpage>
        <lpage>214</lpage>
        <pub-id pub-id-type="doi">10.1038/nrn1624</pub-id>
        <pub-id pub-id-type="pmid">15711600</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B52">
      <mixed-citation publication-type="other">
        <name>
          <surname>Ãstberg</surname>
          <given-names>PO</given-names>
        </name>
        <name>
          <surname>Hellander</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Drawert</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Elmroth</surname>
          <given-names>E</given-names>
        </name>
        <name>
          <surname>Holmgren</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Petzold</surname>
          <given-names>L</given-names>
        </name>
        <article-title>Reducing complexity in management of scientific computations</article-title>
        <source>Proceedings of CCGrid 2012 - The 12th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing</source>
        <year>2012</year>
        <fpage>845</fpage>
        <lpage>852</lpage>
      </mixed-citation>
    </ref>
    <ref id="B53">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Hucka</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Finney</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Sauro</surname>
          <given-names>HM</given-names>
        </name>
        <name>
          <surname>Bolouri</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Doyle</surname>
          <given-names>JC</given-names>
        </name>
        <name>
          <surname>H</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>the rest of the SBML</surname>
          <given-names>Forum:</given-names>
        </name>
        <name>
          <surname>Arkin</surname>
          <given-names>AP</given-names>
        </name>
        <name>
          <surname>Bornstein</surname>
          <given-names>BJ</given-names>
        </name>
        <name>
          <surname>Bray</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Cornish-Bowden</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Cuellar</surname>
          <given-names>AA</given-names>
        </name>
        <name>
          <surname>Dronov</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Gilles</surname>
          <given-names>ED</given-names>
        </name>
        <name>
          <surname>Ginkel</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Gor</surname>
          <given-names>V</given-names>
        </name>
        <name>
          <surname>Goryanin</surname>
          <given-names>II</given-names>
        </name>
        <name>
          <surname>Hedley</surname>
          <given-names>WJ</given-names>
        </name>
        <name>
          <surname>Hodgman</surname>
          <given-names>TC</given-names>
        </name>
        <name>
          <surname>Hofmeyr</surname>
          <given-names>JH</given-names>
        </name>
        <name>
          <surname>Hunter</surname>
          <given-names>PJ</given-names>
        </name>
        <name>
          <surname>Juty</surname>
          <given-names>NS</given-names>
        </name>
        <name>
          <surname>Kasberger</surname>
          <given-names>JL</given-names>
        </name>
        <name>
          <surname>Kremling</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Kummer</surname>
          <given-names>U</given-names>
        </name>
        <name>
          <surname>Le Novere</surname>
          <given-names>N</given-names>
        </name>
        <name>
          <surname>Loew</surname>
          <given-names>LM</given-names>
        </name>
        <name>
          <surname>Lucio</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Mendes</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Minch</surname>
          <given-names>E</given-names>
        </name>
        <name>
          <surname>Mjolsness</surname>
          <given-names>ED</given-names>
        </name>
        <name>
          <surname>Nakayama</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Nelson</surname>
          <given-names>MR</given-names>
        </name>
        <name>
          <surname>Nielsen</surname>
          <given-names>PF</given-names>
        </name>
        <name>
          <surname>Sakurada</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Schaff</surname>
          <given-names>JC</given-names>
        </name>
        <name>
          <surname>Shapiro</surname>
          <given-names>BE</given-names>
        </name>
        <name>
          <surname>Shimizu</surname>
          <given-names>TS</given-names>
        </name>
        <name>
          <surname>Spence</surname>
          <given-names>HD</given-names>
        </name>
        <name>
          <surname>Stelling</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Takahashi</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>Tomita</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Wagner</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Wang</surname>
          <given-names>J</given-names>
        </name>
        <article-title>The systems biology markup language (SBML): a medium for representation and exchange of biochemical network models</article-title>
        <source>Bioinformatics</source>
        <year>2003</year>
        <volume>19</volume>
        <issue>4</issue>
        <fpage>524</fpage>
        <lpage>531</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btg015</pub-id>
        <pub-id pub-id-type="pmid">12611808</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B54">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Isaacson</surname>
          <given-names>SA</given-names>
        </name>
        <name>
          <surname>Peskin</surname>
          <given-names>CS</given-names>
        </name>
        <article-title>Incorporating diffusion in complex geometries into stochastic chemical kinetics simulations</article-title>
        <source>SIAM J Sci Comput</source>
        <year>2006</year>
        <volume>28</volume>
        <fpage>47</fpage>
        <lpage>74</lpage>
        <pub-id pub-id-type="doi">10.1137/040605060</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B55">
      <mixed-citation publication-type="book">
        <name>
          <surname>Kieri</surname>
          <given-names>E</given-names>
        </name>
        <article-title>Accuracy aspects of the reaction-diffusion master equation on unstructured meshes</article-title>
        <source>Masterâs thesis</source>
        <year>2010</year>
        <publisher-name>Department of Information Technology, Uppsala University</publisher-name>
      </mixed-citation>
    </ref>
    <ref id="B56">
      <mixed-citation publication-type="book">
        <name>
          <surname>Elversson</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Kieri</surname>
          <given-names>E</given-names>
        </name>
        <article-title>Spatial stochastic simulation of Spatial stochastic simulation of Spatial stochastic simulation of cellular reaction networks: A comparison of discretizations of the Laplace operator for mesoscopic diffusion</article-title>
        <source>Masterâs thesis</source>
        <year>2010</year>
        <publisher-name>Department of Information Technology, Uppsala University</publisher-name>
      </mixed-citation>
    </ref>
    <ref id="B57">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Fange</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Berg</surname>
          <given-names>OG</given-names>
        </name>
        <name>
          <surname>SjÃ¶berg</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Elf</surname>
          <given-names>J</given-names>
        </name>
        <article-title>Stochastic reaction-diffusion kinetics in the microscopic limit</article-title>
        <source>Proc Natl Acad Sci USA</source>
        <year>2010</year>
        <volume>107</volume>
        <issue>46</issue>
        <fpage>19820</fpage>
        <lpage>19825</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.1006565107</pub-id>
        <pub-id pub-id-type="pmid">21041672</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B58">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Hellander</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Hellander</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Petzold</surname>
          <given-names>L</given-names>
        </name>
        <article-title>On the reaction-diffusion master equation in the microscopic limit</article-title>
        <source>Phys Rev E</source>
        <year>2012</year>
        <volume>85</volume>
        <issue>4</issue>
        <fpage>042901</fpage>
      </mixed-citation>
    </ref>
    <ref id="B59">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Bloomfield</surname>
          <given-names>VA</given-names>
        </name>
        <name>
          <surname>Prager</surname>
          <given-names>S</given-names>
        </name>
        <article-title>Diffusion-controlled reactions on spherical surfaces</article-title>
        <source>Biophys J</source>
        <year>1979</year>
        <volume>27</volume>
        <fpage>447</fpage>
        <lpage>453</lpage>
        <pub-id pub-id-type="doi">10.1016/S0006-3495(79)85228-5</pub-id>
        <pub-id pub-id-type="pmid">262439</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B60">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Lindermann</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Lauffenburger</surname>
          <given-names>D</given-names>
        </name>
        <article-title>Analysis of intracellular receptor/ligand sorting-calculation of mean surface and bulk diffusion times within a sphere</article-title>
        <source>Biophys J</source>
        <year>1986</year>
        <volume>50</volume>
        <fpage>295</fpage>
        <lpage>305</lpage>
        <pub-id pub-id-type="doi">10.1016/S0006-3495(86)83463-4</pub-id>
        <pub-id pub-id-type="pmid">3741985</pub-id>
      </mixed-citation>
    </ref>
  </ref-list>
</back>

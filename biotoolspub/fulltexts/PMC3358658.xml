<?DTDIdentifier.IdentifierValue article.dtd?>
<?DTDIdentifier.IdentifierType system?>
<?SourceDTD.DTDName article.dtd?>
<?SourceDTD.Version 1.0?>
<?ConverterInfo.XSLTName bmc2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">3358658</article-id>
    <article-id pub-id-type="publisher-id">1471-2105-13-S6-S5</article-id>
    <article-id pub-id-type="pmid">22373396</article-id>
    <article-id pub-id-type="doi">10.1186/1471-2105-13-S6-S5</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Proceedings</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>K<sc>IS</sc>S<sc>PLICE</sc>: de-novo calling alternative splicing events from RNA-seq data</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" id="A1">
        <name>
          <surname>Sacomoto</surname>
          <given-names>Gustavo AT</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <xref ref-type="aff" rid="I2">2</xref>
        <email>Gustavo.Sacomoto@inria.fr</email>
      </contrib>
      <contrib contrib-type="author" id="A2">
        <name>
          <surname>Kielbassa</surname>
          <given-names>Janice</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <xref ref-type="aff" rid="I2">2</xref>
        <email>Janice.Kielbassa@inria.fr</email>
      </contrib>
      <contrib contrib-type="author" id="A3">
        <name>
          <surname>Chikhi</surname>
          <given-names>Rayan</given-names>
        </name>
        <xref ref-type="aff" rid="I3">3</xref>
        <email>Rayan.Chikhi@inria.fr</email>
      </contrib>
      <contrib contrib-type="author" id="A4">
        <name>
          <surname>Uricaru</surname>
          <given-names>Raluca</given-names>
        </name>
        <xref ref-type="aff" rid="I3">3</xref>
        <xref ref-type="aff" rid="I4">4</xref>
        <email>Raluca.Uricaru@inria.fr</email>
      </contrib>
      <contrib contrib-type="author" id="A5">
        <name>
          <surname>Antoniou</surname>
          <given-names>Pavlos</given-names>
        </name>
        <xref ref-type="aff" rid="I3">3</xref>
        <email>pavlosant@gmail.com</email>
      </contrib>
      <contrib contrib-type="author" id="A6">
        <name>
          <surname>Sagot</surname>
          <given-names>Marie-France</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <xref ref-type="aff" rid="I2">2</xref>
        <email>Marie-France.Sagot@inria.fr</email>
      </contrib>
      <contrib contrib-type="author" corresp="yes" id="A7">
        <name>
          <surname>Peterlongo</surname>
          <given-names>Pierre</given-names>
        </name>
        <xref ref-type="aff" rid="I3">3</xref>
        <email>Pierre.Peterlongo@inria.fr</email>
      </contrib>
      <contrib contrib-type="author" corresp="yes" id="A8">
        <name>
          <surname>Lacroix</surname>
          <given-names>Vincent</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <xref ref-type="aff" rid="I2">2</xref>
        <email>Vincent.Lacroix@univ-lyon1.fr</email>
      </contrib>
    </contrib-group>
    <aff id="I1"><label>1</label>INRIA Grenoble Rhône-Alpes, France</aff>
    <aff id="I2"><label>2</label>Université de Lyon, F-69000, Lyon; Université Lyon 1; CNRS, UMR5558, Laboratoire de Biométrie et Biologie Evolutive, F-69622, Villeurbanne, France</aff>
    <aff id="I3"><label>3</label>Centre de recherche INRIA Rennes - Bretagne Atlantique, IRISA, Campus universitaire de Beaulieu, Rennes, France</aff>
    <aff id="I4"><label>4</label>INRA UMR118, Amélioration des Plantes et Biotech. Végétales, Rennes, France</aff>
    <pub-date pub-type="collection">
      <year>2012</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>19</day>
      <month>4</month>
      <year>2012</year>
    </pub-date>
    <volume>13</volume>
    <issue>Suppl 6</issue>
    <supplement>
      <named-content content-type="supplement-title">Proceedings of the Second Annual RECOMB Satellite Workshop on Massively Parallel Sequencing (RECOMB-seq 2012)</named-content>
      <named-content content-type="supplement-editor">Paul Medvedev and Eleazar Eskin</named-content>
    </supplement>
    <fpage>S5</fpage>
    <lpage>S5</lpage>
    <permissions>
      <copyright-statement>Copyright ©2012 Sacomoto et al.; licensee BioMed Central Ltd.</copyright-statement>
      <copyright-year>2012</copyright-year>
      <copyright-holder>Sacomoto et al.; licensee BioMed Central Ltd.</copyright-holder>
      <license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0">
        <license-p>This is an open access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0">http://creativecommons.org/licenses/by/2.0</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="http://www.biomedcentral.com/1471-2105/13/S6/S5"/>
    <abstract>
      <sec>
        <title>Background</title>
        <p>In this paper, we address the problem of identifying and quantifying polymorphisms in RNA-seq data when no reference genome is available, without assembling the full transcripts. Based on the fundamental idea that each polymorphism corresponds to a recognisable pattern in a De Bruijn graph constructed from the RNA-seq reads, we propose a general model for all polymorphisms in such graphs. We then introduce an exact algorithm, called K<sc>IS</sc>S<sc>PLICE</sc>, to extract alternative splicing events.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>We show that K<sc>IS</sc>S<sc>PLICE</sc> enables to identify more correct events than general purpose transcriptome assemblers. Additionally, on a 71 M reads dataset from human brain and liver tissues, K<sc>IS</sc>S<sc>PLICE</sc> identified 3497 alternative splicing events, out of which 56% are not present in the annotations, which confirms recent estimates showing that the complexity of alternative splicing has been largely underestimated so far.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p>We propose new models and algorithms for the detection of polymorphism in RNA-seq data. This opens the way to a new kind of studies on large HTS RNA-seq datasets, where the focus is not the global reconstruction of full-length transcripts, but local assembly of polymorphic regions. K<sc>IS</sc>S<sc>PLICE</sc> is available for download at <ext-link ext-link-type="uri" xlink:href="http://alcovna.genouest.org/kissplice/">http://alcovna.genouest.org/kissplice/</ext-link>.</p>
      </sec>
    </abstract>
    <conference>
      <conf-date>19-20 April 2012</conf-date>
      <conf-name>Second Annual RECOMB Satellite Workshop on Massively Parallel Sequencing</conf-name>
      <conf-loc>Barcelona, Spain</conf-loc>
    </conference>
  </article-meta>
</front>
<body>
  <sec>
    <title>Background</title>
    <p>Thanks to recent technological advances, sequencing is no longer restricted to genomes and can now be applied to many new areas, including the study of gene expression and splicing. The so-called RNA-seq protocol consists in applying fragmentation and reverse transcription to a RNA sample followed by sequencing the ends of the resulting cDNA fragments. The short sequencing reads then need to be reassembled in order to get back to the initial RNA molecules. A lot of effort has been put on this assembly task [<xref ref-type="bibr" rid="B2">2</xref>], whether in the presence or in the absence of a reference genome but the general goal of identifying and quantifying all RNA molecules initially present in the sample remains hard to reach. The main challenge is certainly that reads are short, and can therefore be ambiguously assigned to multiple transcripts. In particular, in the case of alternative splicing (AS for short), reads stemming from constitutive exons can be assigned to any alternative transcript containing this exon. Finding the correct transcript is often not possible given the data we have, and any choice will be arguable. As pointed out in Martin and Wang's review [<xref ref-type="bibr" rid="B2">2</xref>], reference-based and de novo assemblers each have their own limitations. Reference-based assemblers depend on the quality of the reference while only a small number of species currently have a high-quality reference genome available. De novo assemblers implement reconstruction heuristics which may lead them to miss infrequent alternative transcripts while highly similar transcripts are likely to be assembled into a single transcript. We argue here that it is not always necessary to aim at the difficult goal of assembling full-length molecules. Instead, identifying the variable parts between molecules (polymorphic regions) is already very valuable and does not require to solve the problem of assigning a constitutive read to the correct transcript. We therefore focus in this paper on the simpler task of identifying polymorphisms in RNA-seq data. Three kinds of polymorphisms have to be considered: i) AS (alternative splicing) that produces several alternative transcripts for a same gene, ii) SNPs (single nucleotide polymorphism) that may also produce several transcripts for a same gene whenever they affect transcribed regions, and iii) approximate tandem repeats which affect the number of copies of tandem repeats. Our contribution in this paper is double: we first give a general model which captures these three types of polymorphism by linking them to characteristic structural patterns called "bubbles" in the De Bruijn graph (DBG for short) built from a set of RNA-seq reads, and second, we propose a method dedicated to the problem of identifying AS events in a DBG, including read-coverage quantification. We notice here that only splicing events but not transcriptional events, such as alternative start and polyadenylation sites, are covered by our method.</p>
    <p>The identification of bubbles or bulges in DBG has been studied before in the context of genome assembly [<xref ref-type="bibr" rid="B3">3</xref>-<xref ref-type="bibr" rid="B5">5</xref>]. However, the purpose in these works was not to enumerate these patterns, but "only" to remove them from the graph. Additionally, since in these applications, the patterns correspond to SNPs and sequencing errors, the authors only considered paths of length smaller than a constant.</p>
    <p>More recently, ad-hoc enumeration methods have been proposed but are restricted to non-branching bubbles [<xref ref-type="bibr" rid="B6">6</xref>], <italic>i</italic>.<italic>e</italic>., each vertex from the bubble has in-degree and out-degree 1, except for the extremities of the bubble.</p>
    <p>Extracting AS events from a splicing graph has been studied before [<xref ref-type="bibr" rid="B7">7</xref>] but a significant difference between splicing graphs and De Bruijn graphs is that in the former, nodes are genomically ordered (through the use of a reference annotated genome) therefore leading to a DAG, whereas DBGs are general graphs, that furthermore do not require any additional information to be built.</p>
    <p>When no reference genome is available, efforts have focused on assembling the full-length RNA molecules, not the variable parts which are our interest here. Most RNA-seq assemblers [<xref ref-type="bibr" rid="B8">8</xref>-<xref ref-type="bibr" rid="B10">10</xref>] do rely on the use of a DBG, but, since the primary goal of an assembler is to produce the longest contigs, heuristics are applied, such as tip or bubble removal, in order to linearise the graph. The application of such heuristics results in a loss of information which may in fact be crucial if the goal is to study polymorphism.</p>
    <p>To our knowledge, this work is the first attempt to characterise polymorphism in RNA-seq data without assembling full-length transcripts. We stress that it is not a general purpose transcriptome assembler and when we benchmark it against such methods, we only focus on the specific task of AS event calling. Finally, our method can be used with a single or multiple RNA-seq experiments and our quantification module outputs a coverage (reads per nt) for both the shorter and the longer isoform(s) of each AS event, in each experiment.</p>
    <p>The paper is organised as follows. We first present the model (Section "<italic>De-Bruijn graph models</italic>") linking structures of the DBG for a set of RNA-seq reads to polymorphism, and then introduce a method, that we call K<sc>IS</sc>S<sc>PLICE</sc>, for identifying DBG structures associated with AS events (Section "<italic>The </italic>K<sc>IS</sc>S<sc>PLICE</sc><italic>algorithm</italic>"). We show in Section "<italic>Results</italic>" the results of using K<sc>IS</sc>S<sc>PLICE</sc> compared with other methods on simulated and real data.</p>
  </sec>
  <sec sec-type="methods">
    <title>Methods</title>
    <sec>
      <title>De-Bruijn graph models</title>
      <sec>
        <title>De-Bruijn graph</title>
        <p>DBGs were first used in the context of genome assembly in 2001 by Pevzner <italic>et al</italic>. [<xref ref-type="bibr" rid="B11">11</xref>]. In 2007, Medvedev <italic>et al</italic>. [<xref ref-type="bibr" rid="B12">12</xref>] modified the definition to better model DNA as a double stranded molecule. In such a context, a DBG is a bidirected multigraph, each node <italic>N </italic>storing a sequence <italic>w </italic>and its reverse complement <inline-formula><mml:math id="M1" name="1471-2105-13-S6-S5-i1" overflow="scroll"><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mo class="MathClass-op"> ¯</mml:mo></mml:mover></mml:mrow></mml:math></inline-formula>. The sequence <italic>w</italic>, denoted by <italic>F</italic>(<italic>N</italic>), is the forward sequence of <italic>N</italic>, while <inline-formula><mml:math id="M2" name="1471-2105-13-S6-S5-i1" overflow="scroll"><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mo class="MathClass-op"> ¯</mml:mo></mml:mover></mml:mrow></mml:math></inline-formula>, denoted by <italic>R</italic>(<italic>N</italic>), is the reverse complement sequence of <italic>N</italic>. An arc exists from node <italic>N</italic><sub>1 </sub>to node <italic>N</italic><sub>2 </sub>if the suffix of length <italic>k </italic>- 1 of <italic>F</italic>(<italic>N</italic><sub>1</sub>) or <italic>R</italic>(<italic>N</italic><sub>1</sub>) overlaps perfectly with the prefix of <italic>F</italic>(<italic>N</italic><sub>2</sub>) or <italic>R</italic>(<italic>N</italic><sub>2</sub>). Each arc is labelled with a string in {<italic>FF, RR, FR, RF</italic>}. The first letter of the arc label indicates which of <italic>F</italic>(<italic>N</italic><sub>1</sub>) or <italic>R</italic>(<italic>N</italic><sub>1</sub>) overlaps <italic>F</italic>(<italic>N</italic><sub>2</sub>) or <italic>R</italic>(<italic>N</italic><sub>2</sub>), this latter choice being indicated by the second letter. Because of reverse complements, there is an even number of arcs in the DBG: if there is an arc from <italic>N</italic><sub>1 </sub>to <italic>N</italic><sub>2 </sub>then, necessarily, there is an arc from <italic>N</italic><sub>2 </sub>to <italic>N</italic><sub>1 </sub>(<italic>e</italic>.<italic>g</italic>. if the first arc has label <italic>FF </italic>then the second has label <italic>RR</italic>). Examples of DBGs are presented in Figure <xref ref-type="fig" rid="F1">1</xref>.</p>
        <fig id="F1" position="float">
          <label>Figure 1</label>
          <caption>
            <p><bold>De Bruin graphs</bold>. Part of non-compressed <bold>(a<sub>0</sub>) </bold>and compressed <bold>(a, b, c) </bold>de Bruijn graphs (<italic>k </italic>= 5). Each node contains a word (upper text of each node) and its reverse complement (lower text of each node). In the uncompressed graph, the word is a <italic>k</italic>-mer. Encircled nodes are switching with respect to red paths (pointed out by red arrows). <bold>(a<sub>0</sub>, a) </bold>Bubble due to a substitution (red letter). Starting from the forward strand in the leftmost (switching) node would generate the sequences CATCT A CGCAG (upper path) and CATCT C CGCAG (lower path). <bold>(b) </bold>Bubble due to the skipped exon GCTCG (blue sequence). This bubble is generated by the sequences CATCT ACGCA and CATCT GCTCG ACGCA. <bold>(c) </bold>Bubble due to an inexact tandem repeat. This bubble is generated by the sequences CATCT TAGGA and CATCT CATCA TAGGA, where CATC<bold>T </bold>CATC<bold>A </bold>is an inexact tandem repeat.</p>
          </caption>
          <graphic xlink:href="1471-2105-13-S6-S5-1"/>
        </fig>
        <sec>
          <title>Definition 1 (Valid path)</title>
          <p><italic>The traversal of a node is said to be valid if the rightmost label (F or R) of the arc entering the node is equal to the leftmost label of the arc leaving the node</italic>.</p>
          <p><italic>A path in the graph is valid if for each node involved in the path, its traversal is valid, that is, each pair of adjacent arcs in the path are labelled, respectively, XY and Y Z with X, Y, Z </italic>∈ {<italic>R, F</italic>}.</p>
          <p>For instance, for any graph shown in Figure <xref ref-type="fig" rid="F1">1</xref>, the path starting from the leftmost encircled node, going by the upper path to the rightmost encircled node is valid. A DBG can be compressed without loss of information by merging simple nodes. A <italic>simple </italic>node denotes a node linked to at most two other nodes. Two adjacent simple nodes are merged into one by removing the redundant information. A valid path composed by <italic>i </italic>&gt; 1 simple nodes is compressed into one node storing a sequence of length <italic>k </italic>+ (<italic>i - </italic>1) as each node adds one new character to the first node. Figure <xref ref-type="fig" rid="F1">1.a</xref> represents the compressed DBG shown in Figure <xref ref-type="fig" rid="F1">1.a0</xref>. In the remaining of the paper, we denote by cDBG a compressed DBG.</p>
        </sec>
      </sec>
      <sec>
        <title>Bubble patterns in the cDBG</title>
        <p>Polymorphisms (<italic>i</italic>.<italic>e</italic>. variable parts) in a transcriptome or a genome, correspond to recognisable patterns in the cDBG, which we call a <bold>bubble</bold>. Intuitively, the variable parts will correspond to alternative paths and the common parts will correspond to the beginning and end points of these paths. We now formally define the notion of bubble, taking carefully into account the bi-directed and arc labeled nature of the cDBG.</p>
        <sec>
          <title>Definition 2 (Node switching with respect to a path)</title>
          <p><italic>A node is switching with respect to a path if this path is invalid during the traversal of this node</italic>.</p>
        </sec>
        <sec>
          <title>Definition 3 (Bubble)</title>
          <p><italic>In the cDBG, a bubble is a simple cycle involving at least three distinct nodes such that exactly two nodes SN<sub>left </sub>and SN<sub>right </sub>are switching w.r.t. the path of the cycle. By definition, two valid paths exist between these two switching nodes. In the remaining of the paper, we refer to these two paths as the paths of the bubble. If they differ in length, we refer to, respectively, the longer and the shorter path of the bubble</italic>.</p>
          <p>Figure <xref ref-type="fig" rid="F1">1</xref> presents four bubbles. For each one, their switching nodes are encircled in blue.</p>
          <p>In general, any process generating patterns <italic>asb </italic>and <italic>as'b </italic>in the sequences, with <italic>a, b, s, s' </italic>∈ Σ*, |<italic>a</italic>| ≥ <italic>k</italic>, |<italic>b</italic>| ≥ <italic>k </italic>and <italic>s </italic>and <italic>s' </italic>not sharing any <italic>k</italic>-mer, creates a bubble in the cDBG. Indeed, all <italic>k</italic>-mers entirely contained in <italic>a </italic>(resp. <italic>b</italic>) compose the node <italic>SN<sub>left </sub></italic>(resp. <italic>SN<sub>right</sub></italic>). Since |<italic>a</italic>| ≥ <italic>k </italic>and <italic>s </italic>≠ <italic>s'</italic>, there is at least one pair of k-mers, one in as and the other in <italic>as'</italic>, sharing the <italic>k </italic>- 1 prefix and differing by the last letter, thus creating a branch in <italic>SN<sub>left </sub></italic>from which the two paths in the bubble diverge. The same applies for <italic>sb, s'b </italic>and <italic>SN<sub>right</sub></italic>, where the paths merge again. All <italic>k</italic>-mers contained in <italic>s </italic>(resp. <italic>s'</italic>) and in the junctions <italic>as </italic>and <italic>sb </italic>(resp. <italic>as' </italic>and <italic>s'b</italic>) compose the paths of the bubble. In the case of AS events and approximate tandem repeats, <italic>s </italic>is empty and the shorter path is composed of <italic>k</italic>-mers covering the junction <italic>ab</italic>.</p>
          <p>This model is general as it captures SNPs, approximate tandem repeats and AS events, as shown in Figure <xref ref-type="fig" rid="F1">1</xref>. The main focus of the algorithm we present in this paper is the detection of bubbles generated by AS events.</p>
        </sec>
      </sec>
      <sec>
        <title>Bubbles generated by AS events</title>
        <p>A single gene may give rise to multiple alternative spliceforms through the process of AS. Alternative spliceforms differ locally from each other by the inclusion or exclusion of subsequences. These subsequences may correspond to exons (exon skipping), exon fragments (alternative donor or acceptor sites) or introns (intron retention) as shown in Figure <xref ref-type="fig" rid="F2">2</xref>. Observe that alternative start and polyadenylation sites, which are not considered as AS events but as transcriptional events, are not taken into account in this work. A splicing event corresponds to a local variation between two alternative transcripts. It is characterised by two common sites (called <italic>a </italic>and <italic>b </italic>in the examples given in Figure <xref ref-type="fig" rid="F2">2</xref>) and a variable part (called <italic>s </italic>Figure <xref ref-type="fig" rid="F2">2</xref>). In the cDBG, the common sites correspond to the switching nodes and the variable part to the longer path. As there are <italic>k </italic>- 1 <italic>k</italic>-mers at the junction between the two common sites <italic>a</italic>.<italic>b</italic>, the shorter path is composed of at most <italic>k </italic>- 1 <italic>k</italic>-mers, <italic>i</italic>.<italic>e</italic>. represents a path of length at most 2<italic>k </italic>- 2 in the cDBG. An example is given in Figure <xref ref-type="fig" rid="F1">1.b</xref>.</p>
        <fig id="F2" position="float">
          <label>Figure 2</label>
          <caption>
            <p><bold>AS events generating a bubble in the DBG</bold>. All these events create a bubble in the DBG or cDBG, in which the shorter path is composed by <italic>k</italic>-mers covering the <italic>ab </italic>junction. This path, composed by <italic>k </italic>- 1 nodes in the DBG, is compressed into a sequence of length 2<italic>k </italic>- 2 in the cDBG (Figure 1.b).</p>
          </caption>
          <graphic xlink:href="1471-2105-13-S6-S5-2"/>
        </fig>
        <p>The shorter path of a bubble generated by an AS event has length exactly 2<italic>k </italic>- 2 iff (i) the last nucleotide (nt for short) of the variable part is distinct from the last nt of the left switching node, and (ii) the first nt of the variable part is distinct from the first nt of the right switching node. Otherwise, the two alternative paths join (case (i)) or diverge (case (ii)) earlier and the shorter path may be smaller. In human, 99% of the annotated exon skipping events yield a bubble with a shorter path length between 2<italic>k </italic>- 8 and 2<italic>k </italic>- 2.</p>
      </sec>
      <sec>
        <title>Bubbles generated by SNPs and approximate tandem repeats</title>
        <p>Polymorphism at the genomic level will necessarily also be present at the transcriptomic level whenever it affects transcribed regions. Two major kinds of polymorphism can be observed at the genomic level: SNPs and approximate tandem repeats. As shown in Figure <xref ref-type="fig" rid="F1">1</xref>, these two types of polymorphism also generate bubbles in the cDBG.</p>
        <p>However, these bubbles have characteristics which enable to differentiate them from bubbles generated by AS events. Indeed, bubbles generated by SNPs exhibit two paths of length exactly 2<italic>k </italic>- 1, which is larger than 2<italic>k </italic>- 2, the maximum size of the shorter path in a bubble generated by an AS event.</p>
        <p>Approximate tandem repeats may generate bubbles with a similar path length as bubbles generated by splicing events, but the sequences of the paths exhibit a clear pattern which can be easily identified: the longer path contains an inexact repeat. More precisely, as outlined in Figure <xref ref-type="fig" rid="F1">1.c</xref>, it is sufficient to compare the shorter path with one of the ends of the longer path.</p>
        <p>Finally, genomic insertions or deletions (indels for short) may also generate bubbles with similar path lengths as bubbles generated by splicing events. In this case, the difference of length between the two paths is usually smaller (less than 3 nt for 85% of indels in human transcribed regions [<xref ref-type="bibr" rid="B13">13</xref>] whereas it is more than 3 nt for 99% of AS events). In our method, when the difference of path lengths is strictly below 3, we classify the bubble as an indel. Otherwise, we do not decide, which means that a fraction of the bubbles we report as AS events will correspond to indels. Note that this classification is a simple suggestion. We encourage users to affine results by considering species specificity and by applying coverage criterion.</p>
        <p>In the following, we focus on bubbles generated by AS events. We do provide as a collateral result three additional collections of bubbles: one corresponding to putative SNPs, one to short indels, and one to putative approximate tandem repeats. The post-treatment of these collections to discard false positives caused by sequencing errors is beyond the scope of this paper.</p>
      </sec>
    </sec>
    <sec>
      <title>The K<sc>IS</sc>S<sc>PLICE</sc> algorithm</title>
      <p>The K<sc>IS</sc>S<sc>PLICE</sc> algorithm detects in the cDBG all the bubble patterns generated by AS events, <italic>i</italic>.<italic>e</italic>. the bubbles having a shorter path of length at most 2<italic>k </italic>- 2. Essentially, the algorithm enumerates all the cycles verifying the two following criteria: i) the path obtained by following all the nodes of the cycle contains exactly two nodes that are switching for this path, and ii) the length of the shorter path linking the two switching nodes must be no longer than 2<italic>k </italic>- 2. Further criteria are applied to make the algorithm more efficient without loss of information, and to eliminate polymorphism events that do not correspond to AS. Since the number of cycles in a graph may be exponential with the size of the graph, the naive approach of enumerating all cycles of the cDBG and verifying which of them satisfy our conditions is only viable for very small cases.</p>
      <p>Nonetheless, K<sc>IS</sc>S<sc>PLICE</sc> is able to enumerate a potentially exponential number of bubbles for real-sized data in very reasonable time and memory. This is in part due to the fact that, previous to cycle enumeration, the graph is pre-processed in a way that, along with the pruning criteria of Step 4 (see below), is responsible for a good performance in practice.</p>
      <p>K<sc>IS</sc>S<sc>PLICE</sc> is indeed composed of six main steps which are described next. The pre-processing just mentioned corresponds to Step 2. As far as we know, it is the first time it is used in conjunction with cycle enumeration.</p>
      <p><bold>Step 1</bold>. Construction of the cDBG of the reads of one or several RNA-seq experiments. Each node contains the coverage of the corresponding <italic>k</italic>-mer in each experiment. In order to get rid of most of the sequencing errors, nodes with a minimal coverage of 1 may be removed.</p>
      <p><bold>Step 2</bold>. Biconnected component (BCC for short) decomposition. A connected undirected graph is <italic>biconnected </italic>if it remains connected after the removal of any vertex. A BCC of an undirected graph is a maximal biconnected subgraph. Moreover, it is possible to show that the BCCs of an undirected graph form a partition of the edges with two important properties: every cycle is contained in exactly one BCC, and every edge not contained in a cycle forms a singleton BCC. Applying on the underlying undirected graph of the cDBG Tarjan's lowpoint method [<xref ref-type="bibr" rid="B14">14</xref>] which performs a modified depth-first search traversal of the graph, Step 2 detects all BCCs, and discards all singleton ones that could not contain any bubble. Without modifying the results, this considerably reduces the memory footprint and the computation time of the whole process. To give an idea of the effectiveness of this step, the cDBG of a 5 M dataset had 1.7 M nodes, but the largest BCC only 2961 nodes.</p>
      <p><bold>Step 3</bold>. Four-nodes compression. Single substitution events (SNPs, sequencing errors) generate a large number of cycles themselves included into bigger ones, creating a combinatorial explosion of the number of possible bubbles. This step of K<sc>IS</sc>S<sc>PLICE</sc> detects and compresses all bubbles composed by just four nodes: two switching nodes and two <italic>non-branching internal nodes </italic>each storing equal length sequences differing by just one position. Figure <xref ref-type="fig" rid="F1">1.a</xref> shows an example of a four-nodes bubble. Four-nodes bubbles are output as potential SNPs and then reduced to a three-nodes path. The two non-branching internal nodes are merged into one, storing a consensus sequence where the unique substitution is replaced by N.</p>
      <p><bold>Step 4</bold>. Bubbles enumeration. The cycles are detected in the cDBG using a backtracking procedure [<xref ref-type="bibr" rid="B15">15</xref>] augmented with two pruning criteria. The exploration of one cycle is stopped if the path contains more than two nodes that are switching relative to the path that is being followed, or the length of the shorter path is bigger than 2<italic>k </italic>- 2. This approach has the same theoretical time complexity of Tiernan's algorithm for cycle enumeration [<xref ref-type="bibr" rid="B15">15</xref>], which is worse than Tarjan's [<xref ref-type="bibr" rid="B16">16</xref>] polynomial delay algorithm but it appears to be not immediate how to use the pruning criteria with the latter while preserving its theoretical complexity. We however were able to show that in practice, the pruning criteria are very effective for the type of instances we are dealing with. Indeed, we compared the three following implementations on a 1 M reads dataset: i) Tiernan ii) Tarjan iii) Tiernan with prunings (our method). The results clearly showed that, while Tarjan (22 min) outperforms Tiernan (32 min), both are clearly outperformed when the prunings are used (4 s).</p>
      <p><bold>Step 5</bold>. Results filtration and classification. The two paths of each bubble are aligned. If the whole of the shorter path aligns with high similarity to the longer path, we decide that the bubble is due to an approximate tandem repeat (see Section "<italic>Bubbles generated by SNPs and approximate tandem repeats</italic>"). After this alignment, a bubble is classified either as an AS event, an approximate tandem repeat, or a small indel (less than 3 nt).</p>
      <p><bold>Step 6</bold>. Read coherence and coverage computation. Reads from each input dataset are mapped to each path of the bubble. If at least one nucleotide of a path is covered by no read, the bubble is said to be not read-coherent and is discarded. The coverage of each position of the bubble corresponds to the number of reads overlapping this position. Border effects are handled in the following way: reads mapping to the extremity of a path with less than <italic>k </italic>bases are discarded. This results in a systematic under-estimation of the coverage of the extremities of the path. Under a simple assumption of locally uniform coverage, this can be counter-balanced by multiplying the coverage of each of the <italic>k </italic>- 1 external positions by a correction factor of <inline-formula><mml:math id="M3" name="1471-2105-13-S6-S5-i2" overflow="scroll"><mml:mrow><mml:mfrac><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>L</mml:mi><mml:mo class="MathClass-bin">-</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:math></inline-formula>, with <italic>L </italic>the read size and <italic>i </italic>the distance to the first non biased position. This correction is possible because the paths considered correspond to internal transcript sequences, not to a transcription start or end.</p>
    </sec>
  </sec>
  <sec sec-type="results">
    <title>Results</title>
    <sec>
      <title>Simulated data</title>
      <p>In order to assess the sensitivity and specificity of our approach, we simulated the sequencing of genes for which we are able to control the number of alternative transcripts. We show that the method is indeed able to recover AS events whenever the alternative transcripts are sufficiently expressed. For our sensitivity tests, we used simulated RNA-seq single end reads (75 bp) with sequencing errors. We first tested a pair of transcripts with a 200 nt skipped exon. Simulated reads were obtained with MetaSim [<xref ref-type="bibr" rid="B17">17</xref>] which is a reference software for simulating sequencing experiments. As in real experiments, it produces heterogeneous coverage and authorises to use realistic error models.</p>
      <p>In order to find the minimum coverage for which we are able to work, we created datasets for several coverages (from 4× to 20×, which corresponds to 60 to 300 Reads Per Kilobase or RPK for short), with 3 repetitions for each coverage, and tested them with different values of <italic>k </italic>(<italic>k </italic>= 13, ...41). The purpose of using 3 repetitions for each coverage was to obtain results which did not depend on irreproducible coverage biases. For coverages below 8× (120 RPK), K<sc>IS</sc>S<sc>PLICE</sc> found the correct event in some but not all of the 3 tested samples. The failure to detect the event was due to the heterogenous and thus locally very low coverage around the skipped exon, <italic>e</italic>.<italic>g</italic>. some nt were not covered by any read or the overlap between the reads was smaller than <italic>k</italic>-1. Above 8× (120 RPK), K<sc>IS</sc>S<sc>PLICE</sc> detected the correct exon skipping event in all samples.</p>
      <p>For each successful test, there was a maximal value <italic>k<sub>max </sub></italic>for k above which the event was not found, and a minimal value <italic>k<sub>min </sub></italic>below which K<sc>IS</sc>S<sc>PLICE</sc> also reported false positive events. Indeed, if <italic>k </italic>is too small, then the pattern <italic>ab, as 'b</italic>, with |<italic>a</italic>| ≥ <italic>k</italic>, |<italic>b</italic>| ≥ <italic>k </italic>is more likely to occur by chance in the transcripts, therefore generating a bubble in the DBG. Between these two thresholds, K<sc>IS</sc>S<sc>PLICE</sc> found only one event: the correct one. The values of <italic>k<sub>min </sub></italic>and <italic>k<sub>max </sub></italic>are clearly dependent on the coverage of the gene. At 8× (120 RPK), the 200 nucleotides exon was found between <italic>k<sub>min </sub></italic>= 17 and <italic>k<sub>max </sub></italic>= 29. At 20× (300 RPK), it was found for <italic>k<sub>min </sub></italic>= 17 and <italic>k<sub>max </sub></italic>= 39. We performed similar tests on other datasets, varying the length of the skipped exon. As expected, if the skipped exon is shorter (longer), K<sc>IS</sc>S<sc>PLICE</sc> needed a lower (higher) coverage to recover it.</p>
      <p>Since K<sc>IS</sc>S<sc>PLICE</sc> is, to our knowledge, the first method able to call AS events without a reference genome, it cannot be easily benchmarked against other programs. Here, we compare it to a general purpose transcriptome assembler, Trinity [<xref ref-type="bibr" rid="B8">8</xref>]. Both methods are compared only on the specific task of AS event calling. The current version of Trinity being restricted to a fixed value of <italic>k </italic>= 25, we systematically verified that this value was included in [<italic>k<sub>min</sub>, k<sub>max</sub></italic>].</p>
      <p>We found out that Trinity was able to recover the AS event in all 3 samples only when the coverage was above 18× (270 RPK), which clearly shows that K<sc>IS</sc>S<sc>PLICE</sc> is more sensitive for this task. This can be explained by the fact that T<sc>RINITY</sc> uses heuristics which consist in discarding a <italic>k</italic>-mer in the DBG whenever it is 20 times less frequent than an alternative <italic>k</italic>-mer branching at the same location in the DBG.</p>
      <p>All these results were obtained using a minimal k-mer coverage (mkC for short) of 1. We also tested with mkC = 2 (<italic>i</italic>.<italic>e</italic>. <italic>k</italic>-mers present only once in the dataset are discarded), leading to the same main behaviour. We noticed however a loss in sensitivity for both methods, but a significant gain in the running time. K<sc>IS</sc>S<sc>PLICE</sc> found the event in all 3 samples for a coverage of 12× (180 RPK) which remains better than the sensitivity of Trinity for mkC = 1.</p>
    </sec>
    <sec>
      <title>Real data</title>
      <p>We further tested our method on RNA-seq data from human. Even though we do not use any reference genome in our method, we applied it to cases where an annotated reference genome is indeed available in order to be able to assess if our predictions are correct.</p>
      <p>We ran K<sc>IS</sc>S<sc>PLICE</sc> with <italic>k </italic>= 25 and mkC = 2 on a dataset which consists of 32 M reads from human brain and 39 M reads from liver from the Illumina Body Map 2.0 Project (downloaded from the Sequence Read Archive, accession number ERP000546). As in all DBG-based assemblers, the most memory consuming step was the DBG construction which we performed on a cluster. The memory requirement is directly dependent on the number of unique <italic>k</italic>-mers in the dataset. Despite the fact that we do not use any heuristic to discard <italic>k</italic>-mers from our index, our memory performances are very similar to the ones of Inchworm, the first step of Trinity, as indicated in Figure <xref ref-type="fig" rid="F3">3</xref>. In addition, for the specific task of calling AS events, K<sc>IS</sc>S<sc>PLICE</sc> is faster than T<sc>RINITY</sc> as shown in Figure <xref ref-type="fig" rid="F4">4</xref>.</p>
      <fig id="F3" position="float">
        <label>Figure 3</label>
        <caption>
          <p><bold>Memory usage</bold>. Memory usage of K<sc>IS</sc>S<sc>PLICE</sc> and Inchworm as a function of input size.</p>
        </caption>
        <graphic xlink:href="1471-2105-13-S6-S5-3"/>
      </fig>
      <fig id="F4" position="float">
        <label>Figure 4</label>
        <caption>
          <p><bold>Time performances</bold>. Time performances of K<sc>IS</sc>S<sc>PLICE</sc> and T<sc>RINITY</sc> as a function of input size.</p>
        </caption>
        <graphic xlink:href="1471-2105-13-S6-S5-4"/>
      </fig>
      <p>K<sc>IS</sc>S<sc>PLICE</sc> identified 5923 biconnected components which contained at least one bubble, 664 of which consisted of bubbles generated by approximate tandem repeats and 1160 which consisted of bubbles generated by short indels (less than 3 nt). Noticeably, the BCCs which generated most cycles and were most time consuming were associated to approximate tandem repeats. As these bubbles are not of interest for K<sc>IS</sc>S<sc>PLICE</sc>, this observation prompted us to introduce an additional parameter in K<sc>IS</sc>S<sc>PLICE</sc> to stop the computation in a BCC if the number of cycles being enumerated reaches a threshold. This enabled us to have a significant gain of time. We however advise not to use this threshold if the purpose is to identify AS events associated to approximate tandem repeats, which we did not address here.</p>
      <p>Out of the 4099 remaining BCCs, we found that 3657 were read-coherent (<italic>i</italic>.<italic>e</italic>. each nucleotide is covered by at least one read) and we next focused on this set. For each of the 3657 cases, we tried to align the two paths of each bubble to the reference genome using Blat [<xref ref-type="bibr" rid="B18">18</xref>]. If the two paths align with the same initial and final coordinates, then we consider that the bubble is a real AS event. If they align with different initial and final coordinates, then we consider that it is a false positive. Out of the 3657 BCCs, 3497 (95%) corresponded to real AS events, while the remaining corresponded to false positives. A first inspection of these false positives led to the conclusion that the majority of them correspond to chimeric transcripts. Indeed, the shorter path and the longer path both map in two blocks within the same gene, but the second block is either upstream of the first block, or on the reverse strand, in both cases contradicting the annotations and therefore suggesting that the transcripts are chimeric and could have been generated by a genomic rearrangement or a trans-splicing mechanism.</p>
      <p>For each of the 3497 real cases, we further tried to establish if they corresponded to annotated splicing events. We therefore first computed all annotated AS events using AStalavista [<xref ref-type="bibr" rid="B19">19</xref>] and the UCSC Known Genes annotation [<xref ref-type="bibr" rid="B20">20</xref>]. Then, for each aligned bubble, we checked if the coordinates of the aligned blocks matched the splice sites of the annotated AS events. If the answer was positive, then we considered that the AS event we found was known, otherwise we considered it was novel. Out of a total of 3497 cases, we find that only 1538 are known while 1959 are novel. This clearly shows that current annotations largely underestimate the number of alternative transcripts per multi-exon genes as was also reported recently [<xref ref-type="bibr" rid="B1">1</xref>].</p>
      <p>Additionally, we noticed that 719 BCCs contained more than one AS event, which all mapped to the same gene. This corresponds to complex splicing events which involve more than 2 transcripts. Such events have been described in Sammeth et al. [<xref ref-type="bibr" rid="B7">7</xref>]. Their existence suggests that more complex models could be established to characterise them as one single event, and not as a collection of simple pairwise events. An example of novel complex AS event is given in Figure <xref ref-type="fig" rid="F5">5</xref>.</p>
      <fig id="F5" position="float">
        <label>Figure 5</label>
        <caption>
          <p><bold>Complex AS event</bold>. BCC corresponding to a novel complex AS event. The intermediate annotated exon is either present, partially present, or skipped. (a) The annotations (blue track) report only the version where it is present while black tracks report all events found by K<sc>IS</sc>S<sc>PLICE</sc>. (b) The cDBG associated to this complex event where the junction nodes are composed by 2<italic>k </italic>- 2 nucleotides.</p>
        </caption>
        <graphic xlink:href="1471-2105-13-S6-S5-5"/>
      </fig>
      <p>We also found the case where the same AS event maps to multiple locations on the reference genome (423 cases). We think these correspond to families of paralogous genes, which are "collectively" alternatively spliced. We were able to verify this hypothesis on all tested instances. In this case, we are unable to decide which of the genes of the family are producing the alternative transcripts, but we do detect an AS event.</p>
    </sec>
    <sec>
      <title>Characterisation of novel AS events</title>
      <p>In order to further characterise the 1959 novel AS events we found, we compared them with annotated events considering their abundance, length of the variable region and use of splice sites. For each AS event, we have 4 abundances, one for each spliceform (i.e. path of the bubble), and one for each condition. We computed the abundance of an event as the abundance of the minor spliceform. As outlined in Figure <xref ref-type="fig" rid="F6">6</xref>, we show that novel events are less abundant than annotated events. This in itself could be one of the reasons why they had not been annotated so far. Interestingly, we also found that while annotated events are clearly more expressed in brain than liver (median coverage of 3.4 Vs 1.2), this trend was weaker for novel events (2.4 Vs 1.2). This may reflect the fact that, since tissue-specific splicing in brain has been intensely studied, annotations may be biased in their favour.</p>
      <fig id="F6" position="float">
        <label>Figure 6</label>
        <caption>
          <p><bold>Event abundances</bold>. Abundance of known and novel events.</p>
        </caption>
        <graphic xlink:href="1471-2105-13-S6-S5-6"/>
      </fig>
      <p>We then computed the length of each event as the difference of the length between the two paths of the bubble. We found that for annotated events, there is a clear preference (59%) for lengths that are a multiple of 3, which is expected if the event affects a coding region. However, although still very different from random, this preference is less strong for novel events (45%), which, in addition are particularly enriched in short lengths as shown in Figure <xref ref-type="fig" rid="F7">7</xref>.</p>
      <fig id="F7" position="float">
        <label>Figure 7</label>
        <caption>
          <p><bold>Event lengths</bold>. Distribution of lengths of the variable regions for known and novel events. Only the initial part of the distribution is given.</p>
        </caption>
        <graphic xlink:href="1471-2105-13-S6-S5-7"/>
      </fig>
      <p>Finally, we computed the splice sites of annotated and novel events, and we found that a vast majority (99.5%) of known events exhibit canonical splice sites, while this is again less strong for novel events (75.3%). Out of the non canonical cases, 13 correspond to U12 introns, but most correspond to short events.</p>
      <p>Altogether, while we cannot discard that short non canonical events do occur and have been under-annotated so far, we think that the observations we make on the length and splice site features can be explained by the presence of genomic indels in our results. We had indeed already stated in Section "<italic>De-Bruijn graph models</italic>" that while most annotated genomic indels are below 3 nt, some may still be above. In practice, if the purpose is to strictly study AS events and not indels, then we recommend to focus on events longer than 10 nt, which have canonical splice sites in 95.2% of the cases. More generally, we wish to stress that this confusion between genomic indels and AS events is currently being made by all transcriptome assemblers.</p>
    </sec>
    <sec>
      <title>Comparison with Trinity</title>
      <p>Finally, in order to further discuss the sensitivity of our method on real data, we compared our results with T<sc>RINITY</sc>. Although T<sc>RINITY</sc> is not tailored to find AS events, we managed to retrieve this information from the output. Whenever T<sc>RINITY</sc> found several alternative transcripts for one gene, we selected this gene. We further focused on cases which contained a cycle in the splicing graph reconstructed from this gene and we compared them with the events found by K<sc>IS</sc>S<sc>PLICE</sc>. Whenever we found that both the longer and the shorter path of a bubble were mapping to the transcripts of a T<sc>RINITY</sc> gene, we decided that both methods had found the same event. In total, K<sc>IS</sc>S<sc>PLICE</sc> found 4099 cases, T<sc>RINITY</sc> found 1123 out of which 553 were common. While the sensitivity is overall larger for K<sc>IS</sc>S<sc>PLICE</sc>, we see that 570 cases are found by Trinity and not by K<sc>IS</sc>S<sc>PLICE</sc>. We then mapped these transcripts to the human genome using blat. In many instances (348 cases), the transcripts did not align on their entire length, or to different chromosomes, indicating that they corresponded to chimeras. A first inspection of the remaining 222 cases revealed that they correspond to the complex BCCs we chose to neglect at an early stage of the computation, because they contain a very large number of approximate tandem repeats. A first simple way to deal with this issue is to increase the value of <italic>k</italic>. The effect of this is to break the large BCCs into computable cases, enabling to recover a good proportion of the missed events. For instance, for <italic>k </italic>= 35, we found back 84 cases. More generally, this shows that more work on the model and on the algorithms is still required to characterise better AS events which are intricated with approximate tandem repeats. We think that T<sc>RINITY</sc> manages to identify some of them because it uses heuristics, which enables it to simplify these complex graph structures.</p>
    </sec>
  </sec>
  <sec sec-type="conclusions">
    <title>Conclusions</title>
    <p>This paper presents two main contributions. First, we introduced a general model for detecting polymorphisms in De Bruijn graphs, and second, we developed an algorithm, K<sc>IS</sc>S<sc>PLICE</sc>, to detect AS events in such graphs. This approach enables to tackle the problem of finding AS events without assembling the full-length transcripts, which may be time consuming and uses heuristics that may lead to a loss of information. To our knowledge, this approach is new and should constitute a useful complement to general purpose transcriptome assemblers.</p>
    <p>Results on human data show that this approach enables de-novo calling of AS events with a higher sensitivity than obtained by the approaches based on a full assembly of the reads, while using similar memory requirements and less time. 5% of the extracted events correspond to false positives, while the 95% remaining can be separated into known (44%) and novel events (56%). Novel events exhibit similar sequence features as known events as long as we focus on events longer than 10 nt. Below this, novel events seem to be enriched in genomic indels.</p>
    <p>K<sc>IS</sc>S<sc>PLICE</sc> is available for download at <ext-link ext-link-type="uri" xlink:href="http://alcovna.genouest.org/kissplice/">http://alcovna.genouest.org/kissplice/</ext-link> and can already be used to establish a more complete catalog of AS events in many species, whether they have a reference genome or not. Despite the fact that more and more genomes are now being sequenced, the new genome assemblies obtained usually do not reach the level of quality of the ones we have for model organisms. Hence, we think that methods which do not rely on a reference genome are not going to be easily replaced in the near future. There is of course room for future work. The K<sc>IS</sc>S<sc>PLICE</sc> algorithm could be improved in several ways. The coverage could be used for distinguishing SNPs from sequencing errors. Moreover, the sequences surrounding the bubbles could be locally assembled using a third party tool [<xref ref-type="bibr" rid="B21">21</xref>]. This would allow to output their context or the full contig they belong to.</p>
    <p>Last, the complex structure of BCCs associated to approximate tandem repeats seems to indicate that more work on the model and on the algorithms is required to efficiently deal with the identification of real approximate tandem repeat events, which may be highly intertwined with other events.</p>
  </sec>
  <sec>
    <title>Competing interests</title>
    <p>The authors declare that they have no competing interests.</p>
  </sec>
  <sec>
    <title>Authors' contributions</title>
    <p>VL proposed the models, PP GS and MFS developed the algorithms, RC implemented the DBG construction, PA and GS implemented the main algorithms, PP supervised the implementations, JK ran the tests on simulated data, RU ran the tests on real data, VL supervised the tests. All authors contributed to the writing of the paper.</p>
  </sec>
</body>
<back>
  <sec>
    <title>Acknowledgements</title>
    <p>We would like to thank the reviewers for helpful comments on earlier versions of this manuscript. We also thank Nadia Pisanti for helpful discussions on the KisSplice model and Claire Lemaitre for insightful comments on the quantification step. This work was supported by the following grants: the Inria Alcovna ARC, the french ANR MIRI BLAN08-1335497 Project, the ERC Advanced Grant Sisyphe held by Marie-France Sagot, and by the french ANR-2010-COSI-004 MAPPI Project.</p>
    <p>This article has been published as part of <italic>BMC Bioinformatics </italic>Volume 13 Supplement 6, 2012: Proceedings of the Second Annual RECOMB Satellite Workshop on Massively Parallel Sequencing (RECOMB-seq 2012). The full contents of the supplement are available online at <ext-link ext-link-type="uri" xlink:href="http://www.biomedcentral.com/bmcbioinformatics/supplements/13/S6">http://www.biomedcentral.com/bmcbioinformatics/supplements/13/S6</ext-link>.</p>
  </sec>
  <ref-list>
    <ref id="B1">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Wang</surname>
          <given-names>ET</given-names>
        </name>
        <name>
          <surname>Sandberg</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Luo</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Khrebtukova</surname>
          <given-names>I</given-names>
        </name>
        <name>
          <surname>Zhang</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Mayr</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Kingsmore</surname>
          <given-names>SF</given-names>
        </name>
        <name>
          <surname>Schroth</surname>
          <given-names>GP</given-names>
        </name>
        <name>
          <surname>Burge</surname>
          <given-names>CB</given-names>
        </name>
        <article-title>Alternative isoform regulation in human tissue transcriptomes</article-title>
        <source>Nature</source>
        <year>2008</year>
        <volume>456</volume>
        <issue>7221</issue>
        <fpage>470</fpage>
        <lpage>476</lpage>
        <pub-id pub-id-type="doi">10.1038/nature07509</pub-id>
        <pub-id pub-id-type="pmid">18978772</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B2">
      <mixed-citation publication-type="other">
        <name>
          <surname>Martin</surname>
          <given-names>JA</given-names>
        </name>
        <name>
          <surname>Wang</surname>
          <given-names>Z</given-names>
        </name>
        <article-title>Next-generation transcriptome assembly</article-title>
        <source>Nature Reviews Genetics</source>
        <year>2011</year>
        <fpage>1</fpage>
        <lpage>12</lpage>
      </mixed-citation>
    </ref>
    <ref id="B3">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Zerbino</surname>
          <given-names>DR</given-names>
        </name>
        <name>
          <surname>Birney</surname>
          <given-names>E</given-names>
        </name>
        <article-title>Velvet: Algorithms for de novo short read assembly using de Bruijn Graphs</article-title>
        <source>genome research</source>
        <year>2008</year>
        <volume>18</volume>
        <issue>5</issue>
        <fpage>821</fpage>
        <lpage>9</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.074492.107</pub-id>
        <pub-id pub-id-type="pmid">18349386</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B4">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Simpson</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Wong</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>Jackman</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Schein</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Jones</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Birol</surname>
          <given-names>I</given-names>
        </name>
        <article-title>ABySS: A parallel assembler for short read sequence data</article-title>
        <source>Genome Research</source>
        <year>2009</year>
        <volume>19</volume>
        <issue>6</issue>
        <fpage>1117</fpage>
        <lpage>1123</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.089532.108</pub-id>
        <pub-id pub-id-type="pmid">19251739</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B5">
      <mixed-citation publication-type="other">
        <name>
          <surname>Pevzner</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Tang</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Tesler</surname>
          <given-names>G</given-names>
        </name>
        <article-title><italic>De novo </italic>repeat classification and fragment assembly</article-title>
        <source>RECOMB</source>
        <year>2004</year>
        <fpage>213</fpage>
        <lpage>222</lpage>
      </mixed-citation>
    </ref>
    <ref id="B6">
      <mixed-citation publication-type="other">
        <name>
          <surname>Iqbal</surname>
          <given-names>Z</given-names>
        </name>
        <name>
          <surname>Caccamo</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Turner</surname>
          <given-names>I</given-names>
        </name>
        <name>
          <surname>Flicek</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>McVean</surname>
          <given-names>G</given-names>
        </name>
        <article-title>De novo assembly and genotyping of variants using colored de Bruijn graphs</article-title>
        <source>Nature genetics</source>
        <year>2012</year>
      </mixed-citation>
    </ref>
    <ref id="B7">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Sammeth</surname>
          <given-names>M</given-names>
        </name>
        <article-title>Complete alternative splicing events are bubbles in splicing graphs</article-title>
        <source>Journal of Computational Biology</source>
        <year>2009</year>
        <volume>16</volume>
        <issue>8</issue>
        <fpage>1117</fpage>
        <lpage>1140</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2009.0108</pub-id>
        <pub-id pub-id-type="pmid">19689216</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B8">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Grabherr</surname>
          <given-names>MG</given-names>
        </name>
        <name>
          <surname>Haas</surname>
          <given-names>BJ</given-names>
        </name>
        <name>
          <surname>Yassour</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Levin</surname>
          <given-names>JZ</given-names>
        </name>
        <name>
          <surname>D</surname>
          <given-names>AT</given-names>
        </name>
        <etal/>
        <article-title>Full-length transcriptome assembly from RNA-Seq data without a reference genome</article-title>
        <source>Nat Biotechnol</source>
        <year>2011</year>
        <volume>29</volume>
        <issue>7</issue>
        <fpage>644</fpage>
        <lpage>652</lpage>
        <pub-id pub-id-type="doi">10.1038/nbt.1883</pub-id>
        <pub-id pub-id-type="pmid">21572440</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B9">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Robertson</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Schein</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Chiu</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Corbett</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Field</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Jackman</surname>
          <given-names>SD</given-names>
        </name>
        <name>
          <surname>Mungall</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>Lee</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Okada</surname>
          <given-names>HM</given-names>
        </name>
        <name>
          <surname>Qian</surname>
          <given-names>JQ</given-names>
        </name>
        <name>
          <surname>Griffith</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Raymond</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Thiessen</surname>
          <given-names>N</given-names>
        </name>
        <name>
          <surname>Cezard</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Butterfield</surname>
          <given-names>YS</given-names>
        </name>
        <name>
          <surname>Newsome</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Chan</surname>
          <given-names>SK</given-names>
        </name>
        <name>
          <surname>She</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Varhol</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Kamoh</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Prabhu</surname>
          <given-names>AL</given-names>
        </name>
        <name>
          <surname>Tam</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Zhao</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Moore</surname>
          <given-names>RA</given-names>
        </name>
        <name>
          <surname>Hirst</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Marra</surname>
          <given-names>MA</given-names>
        </name>
        <name>
          <surname>Jones</surname>
          <given-names>SJM</given-names>
        </name>
        <name>
          <surname>Hoodless</surname>
          <given-names>PA</given-names>
        </name>
        <name>
          <surname>Birol</surname>
          <given-names>I</given-names>
        </name>
        <article-title>De novo assembly and analysis of RNA-seq data</article-title>
        <source>Nature Methods</source>
        <year>2010</year>
        <volume>7</volume>
        <issue>11</issue>
        <fpage>909</fpage>
        <lpage>912</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.1517</pub-id>
        <pub-id pub-id-type="pmid">20935650</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B10">
      <mixed-citation publication-type="book">
        <name>
          <surname>Schulz</surname>
          <given-names>MH</given-names>
        </name>
        <article-title>Data Structures and Algorithms for Analysis of Alternative Splicing with RNA-Seq Data</article-title>
        <source>PhD thesis</source>
        <year>2010</year>
        <publisher-name>Free University of Berlin</publisher-name>
      </mixed-citation>
    </ref>
    <ref id="B11">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Pevzner</surname>
          <given-names>PA</given-names>
        </name>
        <name>
          <surname>Tang</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Waterman</surname>
          <given-names>MS</given-names>
        </name>
        <article-title>An Eulerian path approach to DNA fragment assembly</article-title>
        <source>Proceedings of the National Academy of Sciences of the USA</source>
        <year>2001</year>
        <volume>98</volume>
        <issue>17</issue>
        <fpage>9748</fpage>
        <lpage>53</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.171285098</pub-id>
        <pub-id pub-id-type="pmid">11504945</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B12">
      <mixed-citation publication-type="other">
        <name>
          <surname>Medvedev</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Georgiou</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>Myers</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Brudno</surname>
          <given-names>M</given-names>
        </name>
        <article-title>Computability of Models for Sequence Assembly</article-title>
        <source>WABI</source>
        <year>2007</year>
        <fpage>289</fpage>
        <lpage>301</lpage>
      </mixed-citation>
    </ref>
    <ref id="B13">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Sherry</surname>
          <given-names>ST</given-names>
        </name>
        <name>
          <surname>Ward</surname>
          <given-names>MH</given-names>
        </name>
        <name>
          <surname>Kholodov</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Baker</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Phan</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Smigielski</surname>
          <given-names>EM</given-names>
        </name>
        <name>
          <surname>Sirotkin</surname>
          <given-names>K</given-names>
        </name>
        <article-title>dbSNP: the NCBI database of genetic variation</article-title>
        <source>Nucleic Acids Research</source>
        <year>2001</year>
        <volume>29</volume>
        <fpage>308</fpage>
        <lpage>311</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/29.1.308</pub-id>
        <pub-id pub-id-type="pmid">11125122</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B14">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Tarjan</surname>
          <given-names>RE</given-names>
        </name>
        <article-title>Depth-First Search and Linear Graph Algorithms</article-title>
        <source>SIAM Journal on Computing</source>
        <year>1972</year>
        <volume>1</volume>
        <issue>2</issue>
        <fpage>146</fpage>
        <lpage>160</lpage>
        <pub-id pub-id-type="doi">10.1137/0201010</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B15">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Tiernan</surname>
          <given-names>JC</given-names>
        </name>
        <article-title>An efficient search algorithm to find the elementary circuits of a graph</article-title>
        <source>Communonications ACM</source>
        <year>1970</year>
        <volume>13</volume>
        <fpage>722</fpage>
        <lpage>726</lpage>
        <pub-id pub-id-type="doi">10.1145/362814.362819</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B16">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Tarjan</surname>
          <given-names>RE</given-names>
        </name>
        <article-title>Enumeration of the Elementary Circuits of a Directed Graph</article-title>
        <source>SIAM Journal on Computing</source>
        <year>1973</year>
        <volume>2</volume>
        <issue>3</issue>
        <fpage>211</fpage>
        <lpage>216</lpage>
        <pub-id pub-id-type="doi">10.1137/0202017</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B17">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Richter</surname>
          <given-names>DC</given-names>
        </name>
        <name>
          <surname>Ott</surname>
          <given-names>F</given-names>
        </name>
        <name>
          <surname>Auch</surname>
          <given-names>AF</given-names>
        </name>
        <name>
          <surname>Schmid</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Huson</surname>
          <given-names>DH</given-names>
        </name>
        <article-title>MetaSim: a sequencing simulator for genomics and metagenomics</article-title>
        <source>PLoS One</source>
        <year>2008</year>
        <volume>3</volume>
        <issue>10</issue>
        <fpage>e3373</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0003373</pub-id>
        <pub-id pub-id-type="pmid">18841204</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B18">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Kent</surname>
          <given-names>WJ</given-names>
        </name>
        <article-title>BLAT-the BLAST-like alignment tool</article-title>
        <source>Genome Research</source>
        <year>2002</year>
        <volume>12</volume>
        <issue>4</issue>
        <fpage>656</fpage>
        <lpage>664</lpage>
        <pub-id pub-id-type="pmid">11932250</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B19">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Sammeth</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Foissac</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Guigó</surname>
          <given-names>R</given-names>
        </name>
        <article-title>A general definition and nomenclature for alternative splicing events</article-title>
        <source>PLoS Computational Biology</source>
        <year>2008</year>
        <volume>4</volume>
        <issue>8</issue>
        <fpage>e1000147</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1000147</pub-id>
        <pub-id pub-id-type="pmid">18688268</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B20">
      <mixed-citation publication-type="other">
        <name>
          <surname>Kuhn</surname>
          <given-names>RM</given-names>
        </name>
        <name>
          <surname>Karolchik</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Zweig</surname>
          <given-names>AS</given-names>
        </name>
        <name>
          <surname>Wang</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>K</surname>
          <given-names>ES</given-names>
        </name>
        <etal/>
        <article-title>The UCSC Genome Browser Database: update 2009</article-title>
        <source>Nucleic Acids Research</source>
        <year>2009</year>
        <issue>37 Database</issue>
        <fpage>D755</fpage>
        <lpage>D761</lpage>
        <pub-id pub-id-type="pmid">18996895</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B21">
      <mixed-citation publication-type="other">
        <name>
          <surname>Peterlongo</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Chikhi</surname>
          <given-names>R</given-names>
        </name>
        <article-title>Mapsembler, targeted assembly of larges genomes on a desktop computer</article-title>
        <source>Research report RR-7565, INRIA</source>
        <year>2011</year>
      </mixed-citation>
    </ref>
  </ref-list>
</back>

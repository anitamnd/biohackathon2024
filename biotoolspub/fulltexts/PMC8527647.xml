<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">8527647</article-id>
    <article-id pub-id-type="publisher-id">4437</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-021-04437-5</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Methodology Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Fast activation maximization for molecular sequence design</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-2134-7292</contrib-id>
        <name>
          <surname>Linder</surname>
          <given-names>Johannes</given-names>
        </name>
        <address>
          <email>jlinder2@cs.washington.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Seelig</surname>
          <given-names>Georg</given-names>
        </name>
        <address>
          <email>gseelig@uw.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="GRID">grid.34477.33</institution-id><institution-id institution-id-type="ISNI">0000000122986657</institution-id><institution>Paul G. Allen School of Computer Science and Engineering, </institution><institution>University of Washington, </institution></institution-wrap>Seattle, USA </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="GRID">grid.34477.33</institution-id><institution-id institution-id-type="ISNI">0000000122986657</institution-id><institution>Department of Electrical and Computer Engineering, </institution><institution>University of Washington, </institution></institution-wrap>Seattle, USA </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>20</day>
      <month>10</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>20</day>
      <month>10</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2021</year>
    </pub-date>
    <volume>22</volume>
    <elocation-id>510</elocation-id>
    <history>
      <date date-type="received">
        <day>7</day>
        <month>1</month>
        <year>2021</year>
      </date>
      <date date-type="accepted">
        <day>11</day>
        <month>10</month>
        <year>2021</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2021</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold>This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">Optimization of DNA and protein sequences based on Machine Learning models is becoming a powerful tool for molecular design. Activation maximization offers a simple design strategy for differentiable models: one-hot coded sequences are first approximated by a continuous representation, which is then iteratively optimized with respect to the predictor oracle by gradient ascent. While elegant, the current version of the method suffers from vanishing gradients and may cause predictor pathologies leading to poor convergence.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">Here, we introduce Fast SeqProp, an improved activation maximization method that combines straight-through approximation with normalization across the parameters of the input sequence distribution. Fast SeqProp overcomes bottlenecks in earlier methods arising from input parameters becoming skewed during optimization. Compared to prior methods, Fast SeqProp results in up to 100-fold faster convergence while also finding improved fitness optima for many applications. We demonstrate Fast SeqProp’s capabilities by designing DNA and protein sequences for six deep learning predictors, including a protein structure predictor.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p id="Par3">Fast SeqProp offers a reliable and efficient method for general-purpose sequence optimization through a differentiable fitness predictor. As demonstrated on a variety of deep learning models, the method is widely applicable, and can incorporate various regularization techniques to maintain confidence in the sequence designs. As a design tool, Fast SeqProp may aid in the development of novel molecules, drug therapies and vaccines.</p>
      </sec>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s12859-021-04437-5.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Activation maximization</kwd>
      <kwd>Sequence design</kwd>
      <kwd>DNA</kwd>
      <kwd>RNA</kwd>
      <kwd>Protein</kwd>
      <kwd>Deep learning</kwd>
      <kwd>Design</kwd>
      <kwd>Gradient ascent</kwd>
      <kwd>Neural network</kwd>
      <kwd>Optimization</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000001</institution-id>
            <institution>National Science Foundation</institution>
          </institution-wrap>
        </funding-source>
        <award-id>2021552</award-id>
        <principal-award-recipient>
          <name>
            <surname>Seelig</surname>
            <given-names>Georg</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000002</institution-id>
            <institution>National Institutes of Health</institution>
          </institution-wrap>
        </funding-source>
        <award-id>R01HG009136</award-id>
        <award-id>R01HG009892</award-id>
        <award-id>R21HG010945</award-id>
        <principal-award-recipient>
          <name>
            <surname>Seelig</surname>
            <given-names>Georg</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2021</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par32">Rational design of DNA, RNA and protein sequences has enabled the rapid development of a wide range of biomolecules, including functional or stably folded proteins [<xref ref-type="bibr" rid="CR1">1</xref>–<xref ref-type="bibr" rid="CR3">3</xref>], optimized promoter sequences [<xref ref-type="bibr" rid="CR4">4</xref>], active enzymes [<xref ref-type="bibr" rid="CR5">5</xref>] and <italic>de novo</italic> antibody components [<xref ref-type="bibr" rid="CR6">6</xref>, <xref ref-type="bibr" rid="CR7">7</xref>]. These design principles are now starting to be applied to specific therapeutic domains, for example AAV gene therapy [<xref ref-type="bibr" rid="CR8">8</xref>], antimicrobial peptides [<xref ref-type="bibr" rid="CR9">9</xref>] and vaccines [<xref ref-type="bibr" rid="CR10">10</xref>, <xref ref-type="bibr" rid="CR11">11</xref>]. A number of Machine Learning methods have been explored for sequence design, such as Genetic Algorithms [<xref ref-type="bibr" rid="CR12">12</xref>], Simulated Annealing [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR13">13</xref>], Bayesian optimization [<xref ref-type="bibr" rid="CR14">14</xref>], Particle swarms [<xref ref-type="bibr" rid="CR15">15</xref>–<xref ref-type="bibr" rid="CR17">17</xref>] and population-based methods [<xref ref-type="bibr" rid="CR18">18</xref>]. Most design methods are guided by predictive models, often based on deep learning, that reliably relate sequence to fitness or function [<xref ref-type="bibr" rid="CR19">19</xref>–<xref ref-type="bibr" rid="CR36">36</xref>]. More recently, methods combining adaptive sampling or other conditioning techniques with deep generative networks have been used to model distributions of sequences with desired properties [<xref ref-type="bibr" rid="CR6">6</xref>, <xref ref-type="bibr" rid="CR9">9</xref>, <xref ref-type="bibr" rid="CR37">37</xref>–<xref ref-type="bibr" rid="CR42">42</xref>], including Deep Exploration Networks (DENs) which were developed by our group. While powerful, these methods first require selecting an appropriate generative network and tuning several hyper-parameters.</p>
    <p id="Par33">Perhaps the simplest and most direct approach to sequence design based on a differentiable fitness predictor is to optimize the input pattern by gradient ascent [<xref ref-type="bibr" rid="CR29">29</xref>, <xref ref-type="bibr" rid="CR37">37</xref>, <xref ref-type="bibr" rid="CR43">43</xref>–<xref ref-type="bibr" rid="CR46">46</xref>]. This approach is commonly known as activation maximization and uses the gradient of the neural network output to make incremental changes to the input. However, gradient ascent cannot be directly applied to discrete sequence data. Several extensions have been proposed to rectify this. Killoran et al. [<xref ref-type="bibr" rid="CR44">44</xref>] used a softmax layer to turn the sequences into continuous relaxations. In previous work, we developed <italic>SeqProp</italic> which uses straight-through (ST) gradients to optimize discrete samples [<xref ref-type="bibr" rid="CR29">29</xref>]. However, as our results indicate below, both methods converge slowly. Furthermore, continuous input relaxations may cause predictor pathologies leading to poor designs.</p>
    <p id="Par34">Here, we develop <italic>Fast SeqProp</italic>, a gradient-based design method that combines discrete nucleotide sampling and straight-through approximation with normalization across the parameters of the sampling distributions. We hypothesized that these modifications would overcome the issue of slow convergence encountered by previous methods. To test this idea, we systematically compared Fast SeqProp to prior methods on a range of DNA and protein design tasks, including the design of strong enhancers, 5’UTRs, alternative polyadenylation signals and protein structures. We also examined whether methods based on direct optimization (such as activation maximization) in general reach higher fitness scores than conditioning of generative models when there is a low degree of epistemic uncertainty. Finally, we explored techniques for regularizing activation maximization such that the designed sequences do not drift too far from the original training data distribution.</p>
    <p id="Par35">Fast SeqProp demonstrated up to a 100-fold optimization speedup, and improved optima, on the design tasks compared to prior methods based on activation maximization. We validated designs by scoring them with models that were not used during optimization. We also found that our method can outperform global search heuristics such as Simulated Annealing as well as more recent methods based on generative models. Unlike the latter approaches, Fast SeqProp does not require training of an independent generator. It is thus model–free, making it easy to use when designing smaller sequence sets. Moreover, Fast SeqProp can incorporate many different regularization techniques to maintain confidence in its designs, such as regularization based on a variational autoencoder (VAE) and optimization of probabilistic predictor models that are capable of estimating their uncertainty.</p>
    <sec id="Sec2">
      <title>Activation maximization for biological sequences</title>
      <p id="Par36">Given a sequence-predictive neural network <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {P}$$\end{document}</tex-math><mml:math id="M2"><mml:mi mathvariant="script">P</mml:mi></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq1.gif"/></alternatives></inline-formula> and an initial input pattern <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{x}^{(0)}$$\end{document}</tex-math><mml:math id="M4"><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq2.gif"/></alternatives></inline-formula>, the gradient ascent method seeks to maximize the predicted fitness <inline-formula id="IEq3"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {P}(\varvec{x}) \in \mathbb {R}$$\end{document}</tex-math><mml:math id="M6"><mml:mrow><mml:mi mathvariant="script">P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq3.gif"/></alternatives></inline-formula> by tuning the input pattern <inline-formula id="IEq4"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{x}$$\end{document}</tex-math><mml:math id="M8"><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq4.gif"/></alternatives></inline-formula>:<disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \max _{\varvec{x}} \mathcal {P}(\varvec{x}) \end{aligned}$$\end{document}</tex-math><mml:math id="M10" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:munder><mml:mo movablelimits="true">max</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow></mml:munder><mml:mi mathvariant="script">P</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="12859_2021_4437_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula>Assuming <inline-formula id="IEq5"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {P}$$\end{document}</tex-math><mml:math id="M12"><mml:mi mathvariant="script">P</mml:mi></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq5.gif"/></alternatives></inline-formula> is differentiable, we can compute the gradient <inline-formula id="IEq6"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\nabla _{\varvec{x}} \mathcal {P}(\varvec{x})$$\end{document}</tex-math><mml:math id="M14"><mml:mrow><mml:msub><mml:mi mathvariant="normal">∇</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow></mml:msub><mml:mi mathvariant="script">P</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq6.gif"/></alternatives></inline-formula> with respect to the input and optimize <inline-formula id="IEq7"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{x}$$\end{document}</tex-math><mml:math id="M16"><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq7.gif"/></alternatives></inline-formula> by updating the variable with a small step <inline-formula id="IEq8"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\eta \in \mathbb {R}$$\end{document}</tex-math><mml:math id="M18"><mml:mrow><mml:mi>η</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq8.gif"/></alternatives></inline-formula> in the direction of the fitness gradient [<xref ref-type="bibr" rid="CR47">47</xref>]:<disp-formula id="Equ2"><label>2</label><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \varvec{x}^{(t+1)} \leftarrow \varvec{x}^{(t)} + \eta \cdot \nabla _{\varvec{x}} \mathcal {P}(\varvec{x}) \end{aligned}$$\end{document}</tex-math><mml:math id="M20" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">←</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:mi>η</mml:mi><mml:mo>·</mml:mo><mml:msub><mml:mi mathvariant="normal">∇</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow></mml:msub><mml:mi mathvariant="script">P</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="12859_2021_4437_Article_Equ2.gif" position="anchor"/></alternatives></disp-formula>However, sequences are usually represented as one-hot coded patterns (<inline-formula id="IEq9"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{x} \in \{0, 1\}^{N \times M}$$\end{document}</tex-math><mml:math id="M22"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mrow><mml:mi>N</mml:mi><mml:mo>×</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq9.gif"/></alternatives></inline-formula>, where <italic>N</italic> is the sequence length and <italic>M</italic> the number of channels or monomer possibilities; <inline-formula id="IEq10"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$M=4$$\end{document}</tex-math><mml:math id="M24"><mml:mrow><mml:mi>M</mml:mi><mml:mo>=</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq10.gif"/></alternatives></inline-formula> for nucleic acids and <inline-formula id="IEq11"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$M=20$$\end{document}</tex-math><mml:math id="M26"><mml:mrow><mml:mi>M</mml:mi><mml:mo>=</mml:mo><mml:mn>20</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq11.gif"/></alternatives></inline-formula> for proteins), and discrete variables cannot be optimized by gradient ascent. Several different reparameterizations of <inline-formula id="IEq12"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{x}$$\end{document}</tex-math><mml:math id="M28"><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq12.gif"/></alternatives></inline-formula> have been proposed to bypass this issue. In one of the earliest implementations, Lanchantin et al. [<xref ref-type="bibr" rid="CR43">43</xref>] represented the sequence as an unstructured, real-valued pattern (<inline-formula id="IEq13"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{x} \in \mathbb {R}^{N \times M}$$\end{document}</tex-math><mml:math id="M30"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow><mml:mrow><mml:mi>N</mml:mi><mml:mo>×</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq13.gif"/></alternatives></inline-formula>) but imposed an L2-penalty on <inline-formula id="IEq14"><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{x}$$\end{document}</tex-math><mml:math id="M32"><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq14.gif"/></alternatives></inline-formula> in order to keep it from growing too large and causing predictor pathologies. After optimization, this real-valued pattern is interpreted as a sequence logo from which samples can be drawn. However, the method was introduced mainly as a visualization tool rather than a sequence design approach. Killoran et al. [<xref ref-type="bibr" rid="CR44">44</xref>] later introduced a softmax reparameterization, turning <inline-formula id="IEq15"><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{x}$$\end{document}</tex-math><mml:math id="M34"><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq15.gif"/></alternatives></inline-formula> into a continuous relaxation <inline-formula id="IEq16"><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma (\varvec{l})$$\end{document}</tex-math><mml:math id="M36"><mml:mrow><mml:mi>σ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq16.gif"/></alternatives></inline-formula>:<disp-formula id="Equ3"><label>3</label><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \sigma (\varvec{l})_{ij} = \frac{ e^{\varvec{l}_{ij}} }{ \sum _{k=1}^{4} e^{\varvec{l}_{ik}} } \end{aligned}$$\end{document}</tex-math><mml:math id="M38" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>σ</mml:mi><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:msup><mml:mi>e</mml:mi><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub></mml:msup><mml:mrow><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mn>4</mml:mn></mml:msubsup><mml:msup><mml:mi>e</mml:mi><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ik</mml:mi></mml:mrow></mml:msub></mml:msup></mml:mrow></mml:mfrac></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="12859_2021_4437_Article_Equ3.gif" position="anchor"/></alternatives></disp-formula>Here <inline-formula id="IEq17"><alternatives><tex-math id="M39">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{l}_{ij} \in \mathbb {R}$$\end{document}</tex-math><mml:math id="M40"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq17.gif"/></alternatives></inline-formula> are differentiable <italic>nucleotide logits</italic>. The gradient of <inline-formula id="IEq18"><alternatives><tex-math id="M41">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma (\varvec{l})$$\end{document}</tex-math><mml:math id="M42"><mml:mrow><mml:mi>σ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq18.gif"/></alternatives></inline-formula> with respect to <inline-formula id="IEq19"><alternatives><tex-math id="M43">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{l}$$\end{document}</tex-math><mml:math id="M44"><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq19.gif"/></alternatives></inline-formula> is defined as:<disp-formula id="Equ4"><label>4</label><alternatives><tex-math id="M45">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \frac{\partial \sigma (\varvec{l})_{ij}}{\partial {\varvec{l}}_{ik}} = \sigma ({\varvec{l}})_{ik} \cdot \left( {\mathbbm{1}}_{(j = k)} - \sigma ({\varvec{l}})_{ij}\right) \end{aligned}$$\end{document}</tex-math><mml:math id="M46" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mfrac><mml:mrow><mml:mi>∂</mml:mi><mml:mi>σ</mml:mi><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mi>∂</mml:mi><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ik</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mi>σ</mml:mi><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ik</mml:mi></mml:mrow></mml:msub><mml:mo>·</mml:mo><mml:mfenced close=")" open="("><mml:msub><mml:mn mathvariant="double-struck">1</mml:mn><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:mi>σ</mml:mi><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="12859_2021_4437_Article_Equ4.gif" position="anchor"/></alternatives></disp-formula>Given Eqs. <xref rid="Equ3" ref-type="">3</xref> and <xref rid="Equ4" ref-type="">4</xref>, we can maximize <inline-formula id="IEq20"><alternatives><tex-math id="M47">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {P}(\sigma (\varvec{l}))$$\end{document}</tex-math><mml:math id="M48"><mml:mrow><mml:mi mathvariant="script">P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>σ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq20.gif"/></alternatives></inline-formula> with respect to the logits <inline-formula id="IEq21"><alternatives><tex-math id="M49">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{l}$$\end{document}</tex-math><mml:math id="M50"><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq21.gif"/></alternatives></inline-formula> using the gradient <inline-formula id="IEq22"><alternatives><tex-math id="M51">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\nabla _{\varvec{l}} \mathcal {P}\left( \sigma (\varvec{l})\right)$$\end{document}</tex-math><mml:math id="M52"><mml:mrow><mml:msub><mml:mi mathvariant="normal">∇</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow></mml:msub><mml:mi mathvariant="script">P</mml:mi><mml:mfenced close=")" open="("><mml:mi>σ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq22.gif"/></alternatives></inline-formula>. While elegant, there are two issues with this architecture. First, the gradient in Eq. <xref rid="Equ4" ref-type="">4</xref> becomes vanishingly small for large values of <inline-formula id="IEq23"><alternatives><tex-math id="M53">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{l}_{ij}$$\end{document}</tex-math><mml:math id="M54"><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq23.gif"/></alternatives></inline-formula> (when <inline-formula id="IEq24"><alternatives><tex-math id="M55">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma (\varvec{l})_{ik} \approx 0$$\end{document}</tex-math><mml:math id="M56"><mml:mrow><mml:mi>σ</mml:mi><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ik</mml:mi></mml:mrow></mml:msub><mml:mo>≈</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq24.gif"/></alternatives></inline-formula> or <inline-formula id="IEq25"><alternatives><tex-math id="M57">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma (\varvec{l})_{ij} \approx 1$$\end{document}</tex-math><mml:math id="M58"><mml:mrow><mml:mi>σ</mml:mi><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub><mml:mo>≈</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq25.gif"/></alternatives></inline-formula>), halting convergence. Second, sequence-predictive neural networks have only been trained on discrete one-hot coded patterns and the predictive power of <inline-formula id="IEq26"><alternatives><tex-math id="M59">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {P}$$\end{document}</tex-math><mml:math id="M60"><mml:mi mathvariant="script">P</mml:mi></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq26.gif"/></alternatives></inline-formula> may be poor on a continuous relaxation such as <inline-formula id="IEq27"><alternatives><tex-math id="M61">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma (\varvec{l})$$\end{document}</tex-math><mml:math id="M62"><mml:mrow><mml:mi>σ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq27.gif"/></alternatives></inline-formula>.</p>
      <p id="Par37">Following advances in gradient estimators for discretized neurons [<xref ref-type="bibr" rid="CR48">48</xref>, <xref ref-type="bibr" rid="CR49">49</xref>], we developed <italic>SeqProp</italic>, a version of the gradient ascent method that replaces the softmax transform <inline-formula id="IEq28"><alternatives><tex-math id="M63">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma$$\end{document}</tex-math><mml:math id="M64"><mml:mi>σ</mml:mi></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq28.gif"/></alternatives></inline-formula> with a discrete, stochastic sampler <inline-formula id="IEq29"><alternatives><tex-math id="M65">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\delta$$\end{document}</tex-math><mml:math id="M66"><mml:mi>δ</mml:mi></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq29.gif"/></alternatives></inline-formula>:<disp-formula id="Equ5"><label>5</label><alternatives><tex-math id="M67">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \delta ({\varvec{l}})_{ij} = {\mathbbm {1}}_{(Z_{i} = j)} \end{aligned}$$\end{document}</tex-math><mml:math id="M68" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>δ</mml:mi><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mn mathvariant="double-struck">1</mml:mn><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>Z</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="12859_2021_4437_Article_Equ5.gif" position="anchor"/></alternatives></disp-formula>Here, <inline-formula id="IEq30"><alternatives><tex-math id="M69">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Z_{i} \sim \sigma (\varvec{l})_{i}$$\end{document}</tex-math><mml:math id="M70"><mml:mrow><mml:msub><mml:mi>Z</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∼</mml:mo><mml:mi>σ</mml:mi><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq30.gif"/></alternatives></inline-formula> is a randomly drawn categorical nucleotide at the <italic>i</italic>th position from the (softmax) probability distribution <inline-formula id="IEq31"><alternatives><tex-math id="M71">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma (\varvec{l})_{i}$$\end{document}</tex-math><mml:math id="M72"><mml:mrow><mml:mi>σ</mml:mi><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq31.gif"/></alternatives></inline-formula>. The nucleotide logits <inline-formula id="IEq32"><alternatives><tex-math id="M73">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{l}_{ij}$$\end{document}</tex-math><mml:math id="M74"><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq32.gif"/></alternatives></inline-formula> can be interpreted as parameters to <italic>N</italic> categorical distributions, from which we sample nucleotides <inline-formula id="IEq33"><alternatives><tex-math id="M75">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\{Z_{i}\}_{i=1}^{N}$$\end{document}</tex-math><mml:math id="M76"><mml:msubsup><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>Z</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq33.gif"/></alternatives></inline-formula> and construct a discrete, one-hot coded pattern <inline-formula id="IEq34"><alternatives><tex-math id="M77">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\delta (\varvec{l}) \in \{0, 1\}^{N \times M}$$\end{document}</tex-math><mml:math id="M78"><mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mrow><mml:mi>N</mml:mi><mml:mo>×</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq34.gif"/></alternatives></inline-formula>. While <inline-formula id="IEq35"><alternatives><tex-math id="M79">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\delta (\varvec{l})$$\end{document}</tex-math><mml:math id="M80"><mml:mrow><mml:mi>δ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq35.gif"/></alternatives></inline-formula> is not directly differentiable, <inline-formula id="IEq36"><alternatives><tex-math id="M81">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{l}$$\end{document}</tex-math><mml:math id="M82"><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq36.gif"/></alternatives></inline-formula> can be updated based on the estimate of <inline-formula id="IEq37"><alternatives><tex-math id="M83">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\nabla _{\varvec{l}} \mathcal {P}(\delta (\varvec{l}))$$\end{document}</tex-math><mml:math id="M84"><mml:mrow><mml:msub><mml:mi mathvariant="normal">∇</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow></mml:msub><mml:mi mathvariant="script">P</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>δ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq37.gif"/></alternatives></inline-formula> using straight-through approximation. Rather than using the original ST estimator of Bengio et al. [<xref ref-type="bibr" rid="CR48">48</xref>], we here adopt an estimator with theoretically better properties from Chung et al. [<xref ref-type="bibr" rid="CR50">50</xref>] where the gradient of <inline-formula id="IEq38"><alternatives><tex-math id="M85">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\delta (\varvec{l})_{ij}$$\end{document}</tex-math><mml:math id="M86"><mml:mrow><mml:mi>δ</mml:mi><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq38.gif"/></alternatives></inline-formula> is replaced by that of the softmax <inline-formula id="IEq39"><alternatives><tex-math id="M87">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma (\varvec{l})_{ij}$$\end{document}</tex-math><mml:math id="M88"><mml:mrow><mml:mi>σ</mml:mi><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq39.gif"/></alternatives></inline-formula>:<disp-formula id="Equ6"><label>6</label><alternatives><tex-math id="M89">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \frac{\partial \delta (\varvec{l})_{ij}}{\partial \varvec{l}_{ik}} \approx \frac{\partial \sigma (\varvec{l})_{ij}}{\partial \varvec{l}_{ik}} = \sigma (\varvec{l})_{ik} \cdot ({\mathbbm{1}}_{(j = k)} - \sigma (\varvec{l})_{ij}) \end{aligned}$$\end{document}</tex-math><mml:math id="M90" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mfrac><mml:mrow><mml:mi>∂</mml:mi><mml:mi>δ</mml:mi><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mi>∂</mml:mi><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ik</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo>≈</mml:mo><mml:mfrac><mml:mrow><mml:mi>∂</mml:mi><mml:mi>σ</mml:mi><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mi>∂</mml:mi><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ik</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mi>σ</mml:mi><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ik</mml:mi></mml:mrow></mml:msub><mml:mo>·</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mn mathvariant="double-struck">1</mml:mn><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:mi>σ</mml:mi><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="12859_2021_4437_Article_Equ6.gif" position="anchor"/></alternatives></disp-formula>By sending discrete samples as input to <inline-formula id="IEq40"><alternatives><tex-math id="M91">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {P}$$\end{document}</tex-math><mml:math id="M92"><mml:mi mathvariant="script">P</mml:mi></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq40.gif"/></alternatives></inline-formula> we remove any pathology that could arise from using a continuous input relaxation. But, as we show below, convergence remains almost as slow as the softmax method. Switching to the original ST estimator (<inline-formula id="IEq41"><alternatives><tex-math id="M93">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{\partial \delta (\varvec{l})_{ij}}{\partial \varvec{l}_{ij}} = 1$$\end{document}</tex-math><mml:math id="M94"><mml:mrow><mml:mfrac><mml:mrow><mml:mi>∂</mml:mi><mml:mi>δ</mml:mi><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mi>∂</mml:mi><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq41.gif"/></alternatives></inline-formula>) speeds up convergence but worsens fitness optima (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>, Figure S1G for a comparison).</p>
    </sec>
  </sec>
  <sec id="Sec3">
    <title>Results</title>
    <sec id="Sec4">
      <title>Fast stochastic sequence backpropagation</title>
      <p id="Par38">Inspired by instance normalization in image GANs [<xref ref-type="bibr" rid="CR51">51</xref>], we hypothesized that the main bottleneck in earlier design methods—both in terms of optimization speed and minima found—stem from overly large and disproportionally scaled nucleotide logits. Here, we mitigate this problem by normalizing the logits across positions. Specifically, we insert a normalization layer between the trainable logits <inline-formula id="IEq42"><alternatives><tex-math id="M95">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{l}_{ij}$$\end{document}</tex-math><mml:math id="M96"><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq42.gif"/></alternatives></inline-formula> and the sampling layer <inline-formula id="IEq43"><alternatives><tex-math id="M97">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\delta (\varvec{l})_{ij}$$\end{document}</tex-math><mml:math id="M98"><mml:mrow><mml:mi>δ</mml:mi><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq43.gif"/></alternatives></inline-formula> (Fig. <xref rid="Fig1" ref-type="fig">1</xref>a).</p>
      <p id="Par39">For DNA sequence design, where the number of one-hot channels <italic>M</italic> is small (<inline-formula id="IEq44"><alternatives><tex-math id="M99">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$M = 4$$\end{document}</tex-math><mml:math id="M100"><mml:mrow><mml:mi>M</mml:mi><mml:mo>=</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq44.gif"/></alternatives></inline-formula>), we use a normalization scheme commonly referred to as <italic>instance</italic>-normalization. In this scheme, the nucleotide logits of each channel are normalized independently across positions. Let <inline-formula id="IEq45"><alternatives><tex-math id="M101">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{\mu }_{j} = \frac{1}{N} \sum _{i=1}^{N} \varvec{l}_{ij}$$\end{document}</tex-math><mml:math id="M102"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mrow><mml:mi>μ</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mi>j</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mi>N</mml:mi></mml:mfrac><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:msubsup><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq45.gif"/></alternatives></inline-formula> and <inline-formula id="IEq46"><alternatives><tex-math id="M103">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{\varepsilon }_{j} = \sqrt{\frac{1}{N} \sum _{i=1}^{N} (\varvec{l}_{ij} - \bar{\mu }_{j})^2}$$\end{document}</tex-math><mml:math id="M104"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mrow><mml:mi>ε</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mi>j</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msqrt><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mi>N</mml:mi></mml:mfrac><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:msubsup><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mover accent="true"><mml:mrow><mml:mi>μ</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:msqrt></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq46.gif"/></alternatives></inline-formula> be the sample mean and deviation of logits for nucleotide <italic>j</italic> across all positions <italic>i</italic>. For each step of gradient ascent, we compute the normalized logits <inline-formula id="IEq47"><alternatives><tex-math id="M105">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{l}_{ij}^{(\text {norm})}$$\end{document}</tex-math><mml:math id="M106"><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>norm</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq47.gif"/></alternatives></inline-formula> as:<disp-formula id="Equ7"><label>7</label><alternatives><tex-math id="M107">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \varvec{l}_{ij}^{(\text {norm})} = \frac{ \varvec{l}_{ij} - \bar{\mu }_{j} }{ \bar{\varepsilon }_{j}^2 } \end{aligned}$$\end{document}</tex-math><mml:math id="M108" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>norm</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mover accent="true"><mml:mrow><mml:mi>μ</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mi>j</mml:mi></mml:msub></mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mrow><mml:mi>ε</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mrow><mml:mi>j</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:mfrac></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="12859_2021_4437_Article_Equ7.gif" position="anchor"/></alternatives></disp-formula>Since logits with zero mean and unit variance have limited expressiveness when used as parameters to a probability distribution, we associate each channel <italic>j</italic> with a global scaling parameter <inline-formula id="IEq48"><alternatives><tex-math id="M109">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\gamma _{j}$$\end{document}</tex-math><mml:math id="M110"><mml:msub><mml:mi>γ</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq48.gif"/></alternatives></inline-formula> and offset <inline-formula id="IEq49"><alternatives><tex-math id="M111">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta _{j}$$\end{document}</tex-math><mml:math id="M112"><mml:msub><mml:mi>β</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq49.gif"/></alternatives></inline-formula>. Having an independent offset <inline-formula id="IEq50"><alternatives><tex-math id="M113">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta _{j}$$\end{document}</tex-math><mml:math id="M114"><mml:msub><mml:mi>β</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq50.gif"/></alternatives></inline-formula> per channel is particularly well-suited for DNA, as nucleotides are often associated with a global preferential bias. The scaled, re-centered logits are calculated as:<disp-formula id="Equ8"><label>8</label><alternatives><tex-math id="M115">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \varvec{l}_{ij}^{(\text {scaled})} = \varvec{l}_{ij}^{(\text {norm})} * \gamma _{j} + \beta _{j} \end{aligned}$$\end{document}</tex-math><mml:math id="M116" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>norm</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mrow/><mml:mo>∗</mml:mo><mml:msub><mml:mi>γ</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="12859_2021_4437_Article_Equ8.gif" position="anchor"/></alternatives></disp-formula>For protein sequence design, the number of one-hot channels <italic>M</italic> is considerably larger (<inline-formula id="IEq51"><alternatives><tex-math id="M117">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$M = 20$$\end{document}</tex-math><mml:math id="M118"><mml:mrow><mml:mi>M</mml:mi><mml:mo>=</mml:mo><mml:mn>20</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq51.gif"/></alternatives></inline-formula>) while the sequences often are shorter, resulting in fewer samples per channel and noisier normalization statistics. Here we found that <italic>layer</italic>-normalization was more stable: We compute a global mean <inline-formula id="IEq52"><alternatives><tex-math id="M119">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{\mu } = \frac{1}{N \cdot M} \sum _{i=1}^{N} \sum _{j=1}^{M} \varvec{l}_{ij}$$\end{document}</tex-math><mml:math id="M120"><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>μ</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mi>N</mml:mi><mml:mo>·</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:mfrac><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:msubsup><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:msubsup><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq52.gif"/></alternatives></inline-formula> and deviation <inline-formula id="IEq53"><alternatives><tex-math id="M121">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{\varepsilon } = \sqrt{\frac{1}{NM} \sum _{i=1}^{N} \sum _{j=1}^{M} (\varvec{l}_{ij} - \bar{\mu }_{j})^2}$$\end{document}</tex-math><mml:math id="M122"><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>ε</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>=</mml:mo><mml:msqrt><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mi mathvariant="italic">NM</mml:mi></mml:mrow></mml:mfrac><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:msubsup><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:msubsup><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mover accent="true"><mml:mrow><mml:mi>μ</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:msqrt></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq53.gif"/></alternatives></inline-formula>, and use a shared scaling factor <inline-formula id="IEq54"><alternatives><tex-math id="M123">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\gamma$$\end{document}</tex-math><mml:math id="M124"><mml:mi>γ</mml:mi></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq54.gif"/></alternatives></inline-formula> and offset <inline-formula id="IEq55"><alternatives><tex-math id="M125">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta$$\end{document}</tex-math><mml:math id="M126"><mml:mi>β</mml:mi></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq55.gif"/></alternatives></inline-formula> for all <italic>M</italic> channels.</p>
      <p id="Par40">Given the normalized and scaled logits <inline-formula id="IEq56"><alternatives><tex-math id="M127">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{l}^{(\text {scaled})}$$\end{document}</tex-math><mml:math id="M128"><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq56.gif"/></alternatives></inline-formula> as parameters for the nucleotide sampler <inline-formula id="IEq57"><alternatives><tex-math id="M129">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\delta$$\end{document}</tex-math><mml:math id="M130"><mml:mi>δ</mml:mi></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq57.gif"/></alternatives></inline-formula> defined in Eq. <xref rid="Equ5" ref-type="">5</xref>, we maximize <inline-formula id="IEq58"><alternatives><tex-math id="M131">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {P}(\delta (\varvec{l}^{(\text {scaled})}))$$\end{document}</tex-math><mml:math id="M132"><mml:mrow><mml:mi mathvariant="script">P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>δ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq58.gif"/></alternatives></inline-formula> with respect to <inline-formula id="IEq59"><alternatives><tex-math id="M133">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{l}_{ij}$$\end{document}</tex-math><mml:math id="M134"><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq59.gif"/></alternatives></inline-formula>, <inline-formula id="IEq60"><alternatives><tex-math id="M135">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\gamma _{j}$$\end{document}</tex-math><mml:math id="M136"><mml:msub><mml:mi>γ</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq60.gif"/></alternatives></inline-formula> and <inline-formula id="IEq61"><alternatives><tex-math id="M137">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta _{j}$$\end{document}</tex-math><mml:math id="M138"><mml:msub><mml:mi>β</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq61.gif"/></alternatives></inline-formula> (or <inline-formula id="IEq62"><alternatives><tex-math id="M139">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\gamma$$\end{document}</tex-math><mml:math id="M140"><mml:mi>γ</mml:mi></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq62.gif"/></alternatives></inline-formula> and <inline-formula id="IEq63"><alternatives><tex-math id="M141">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta$$\end{document}</tex-math><mml:math id="M142"><mml:mi>β</mml:mi></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq63.gif"/></alternatives></inline-formula> in the context of proteins) using the softmax ST estimator from Eq. <xref rid="Equ6" ref-type="">6</xref>. The normalization removes logit drift by keeping the values proportionally scaled and centered at zero (<inline-formula id="IEq64"><alternatives><tex-math id="M143">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathrm {E}[l_{ij}^{(\text {norm})}] = 0$$\end{document}</tex-math><mml:math id="M144"><mml:mrow><mml:mi mathvariant="normal">E</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:msubsup><mml:mi>l</mml:mi><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>norm</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq64.gif"/></alternatives></inline-formula>, <inline-formula id="IEq65"><alternatives><tex-math id="M145">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathrm {Var}[l_{ij}^{(\text {norm})}] = 1$$\end{document}</tex-math><mml:math id="M146"><mml:mrow><mml:mi mathvariant="normal">Var</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:msubsup><mml:mi>l</mml:mi><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>norm</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq65.gif"/></alternatives></inline-formula>), enabling the gradients to swap nucleotides with few updates. Furthermore, the scaling parameter <inline-formula id="IEq66"><alternatives><tex-math id="M147">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\gamma _{j}$$\end{document}</tex-math><mml:math id="M148"><mml:msub><mml:mi>γ</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq66.gif"/></alternatives></inline-formula> (or <inline-formula id="IEq67"><alternatives><tex-math id="M149">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\gamma$$\end{document}</tex-math><mml:math id="M150"><mml:mi>γ</mml:mi></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq67.gif"/></alternatives></inline-formula>) adaptively adjusts the sampling entropy to control global versus local optimization: When our confidence in a particular nucleotide <italic>j</italic> at position <italic>i</italic> (<inline-formula id="IEq68"><alternatives><tex-math id="M151">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{l}_{ij}^{(\text {norm})}$$\end{document}</tex-math><mml:math id="M152"><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>norm</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq68.gif"/></alternatives></inline-formula>) is <italic>consistent</italic> with its impact on fitness (shares the sign of the fitness gradient <inline-formula id="IEq69"><alternatives><tex-math id="M153">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{\partial \mathcal {P}(\delta (\varvec{l}^{(\text {scaled})}))}{\partial \delta (\varvec{l}^{(\text {scaled})})_{ij}}$$\end{document}</tex-math><mml:math id="M154"><mml:mfrac><mml:mrow><mml:mi>∂</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>δ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>∂</mml:mi><mml:mi>δ</mml:mi><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq69.gif"/></alternatives></inline-formula>), the scaling parameter <inline-formula id="IEq70"><alternatives><tex-math id="M155">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\gamma _{j}$$\end{document}</tex-math><mml:math id="M156"><mml:msub><mml:mi>γ</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq70.gif"/></alternatives></inline-formula> increases, thus lowering sampling entropy. Whenever we sample inconsistent nucleotides, <inline-formula id="IEq71"><alternatives><tex-math id="M157">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\gamma _{j}$$\end{document}</tex-math><mml:math id="M158"><mml:msub><mml:mi>γ</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq71.gif"/></alternatives></inline-formula> decreases and the temperature again increases, promoting exploration. See Methods for further details.</p>
    </sec>
    <sec id="Sec5">
      <title>Maximizing nucleic acid sequence-predictive neural networks</title>
      <p id="Par41">We first evaluated our method on the task of maximizing the classification or regression scores of five DNA- or RNA-level neural networks: (1) <italic>DragoNN</italic>, a model trained on ChIP-seq data to predict Transcription Factor (TF) binding (in this case binding of SPI1), (2) <italic>DeepSEA</italic> [<xref ref-type="bibr" rid="CR22">22</xref>], which predicts multiple TF binding probabilities and chromatin modifications (we use it here to maximize the probability of CTCF binding in the cell type Dnd41), (3) <italic>APARENT</italic> [<xref ref-type="bibr" rid="CR29">29</xref>], which predicts alternative polyadenylation isoform abundance given an input polyadenylation signal, (4) MPRA-DragoNN [<xref ref-type="bibr" rid="CR24">24</xref>], a neural network trained to predict transcriptional activity of short enhancer sequences and, finally, (5) <italic>Optimus 5’</italic> [<xref ref-type="bibr" rid="CR25">25</xref>], which predicts ribosomal load (translational efficiency) of 5’ UTR sequences.</p>
      <p id="Par42">We compare our new logit-normalized, straight-through sampled sequence design method (<italic>Fast SeqProp</italic>) to the previous versions of the algorithm, namely the original method with continuous softmax-relaxed inputs [<xref ref-type="bibr" rid="CR44">44</xref>] (here referred to as <italic>PWM</italic>) and <italic>SeqProp</italic>, the categorical sampling method described in [<xref ref-type="bibr" rid="CR29">29</xref>] using a (non-normalized) gradient estimator. We also tested a logit-normalized version of the softmax-relaxed method, <italic>Fast PWM</italic>, in order to disentangle the individual performance contributions of the normalization scheme and the sampling scheme.</p>
      <p id="Par43">Figure <xref rid="Fig1" ref-type="fig">1</xref>b shows the result of using the design methods to generate maximally scored sequences for each of the five DNA-based predictors. Fast SeqProp converges to 95–99% of its minimum test loss within 2000 logit updates, and reaches 50% of the minimum loss after only 200 updates for all predictors except MPRA-DragoNN and Optimus 5’. In contrast, PWM and SeqProp do not converge within 20,000 updates. Fast SeqProp converges to up to threefold better optima than all other compared methods. In fact, Fast SeqProp reaches the same or better optima in 200 updates than the competing methods reach in 20,000 updates for DragoNN, MPRA-DragoNN and DeepSEA, marking a 100x speedup. For Optimus 5’ and APARENT, the speedup is 20x-50x. In addition to gradient-based methods, we demonstrate improved performance compared to discrete search algorithms such as Simulated Annealing (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>, Figure S1A-B).</p>
      <p id="Par44">In the Additional file <xref rid="MOESM1" ref-type="media">1</xref>, we provide additional technical comparisons of Fast SeqProp to previous activation maximization methods. For example, In Figure S1C, we demonstrate that certain sequence-predictive neural networks suffer from out-of-distribution (OOD) pathologies on continuous sequence relaxations as input, explaining the poor performance of the PWM design method. We further show that adding an entropy penalty to the PWM method still cannot close the performance gap to Fast SeqProp (Figure S1D) and that the Softmax ST estimator outperforms Gumbel Sampling on a number of tasks (Figure S1E). Finally, we show that Fast SeqProp appears robust to the choice of optimizer parameters (Figure S1F) and that the Softmax ST estimator outperforms the original ST estimator (Figure S1G).</p>
    </sec>
    <sec id="Sec6">
      <title>Recapitulating <italic>cis</italic>-regulatory biology with activation maximization</title>
      <p id="Par45">In Fig. <xref rid="Fig2" ref-type="fig">2</xref> we compare example sequence optimizations of the PWM and Fast SeqProp methods. As can be seen, even after 20, 000 updates, the PWM method has not converged for most of the tested predictors. In contrast, we find plenty of <italic>cis</italic>-regulatory motifs in the converged sequences generated by Fast SeqProp. Since our method was tasked with <italic>maximizing</italic> the predicted score of each model, we would expect to find enhancing motifs and regulatory logic embedded in the sequences which give rise to these extreme model responses.</p>
      <p id="Par46">For example, when maximizing DragoNN, Fast SeqProp generates multiple SPI1 binding motifs [<xref ref-type="bibr" rid="CR52">52</xref>]. For APARENT, Fast SeqProp generates CFIm binding motifs, dual CSE hexamers, and multiple cut sites with CstF binding sites. These are all regulatory motifs known to enhance cleavage and polyadenylation by stimulating recruitment of the polyadenylation machinery [<xref ref-type="bibr" rid="CR53">53</xref>–<xref ref-type="bibr" rid="CR56">56</xref>]. For DeepSEA, Fast SeqProp generates four CTCF binding sites. For MPRA-DragoNN, we identify both CRE- and CTCF binding sites embedded within a GC-rich context, which aligns well with what we might expect to find in a strong enhancer [<xref ref-type="bibr" rid="CR57">57</xref>, <xref ref-type="bibr" rid="CR58">58</xref>]. Finally, for Optimus 5’, Fast SeqProp generates a T-rich sequence with multiple in-frame (IF) uAUGs. These determinants were found to improve ribosome loading [<xref ref-type="bibr" rid="CR25">25</xref>]. See the Additional file <xref rid="MOESM1" ref-type="media">1</xref> (Figure S2) for additional visualizations comparing the PWM and Fast SeqProp methods at different stages of optimization.</p>
    </sec>
    <sec id="Sec7">
      <title>Regularized sequence design</title>
      <p id="Par47">While finding regulatory logic in the sequences produced by activation maximization is a good indication that we actually generate patterns with biological meaning, the method may still not be suitable in its most basic form for sequence design. There is the potential issue of overfitting to the predictor oracle during sequence optimization, as the oracle may lose its accuracy when drifting out of the training data distribution to maximize predicted fitness. By training a differentiable likelihood model, such as a variational autoencoder (VAE) [<xref ref-type="bibr" rid="CR59">59</xref>], on samples from the same data and using it as a regularizer in the cost function, we can prevent drift to low-confidence regions of design space (Fig. <xref rid="Fig3" ref-type="fig">3</xref>a; top). Using a VAE to avoid drift has previously been demonstrated by [<xref ref-type="bibr" rid="CR37">37</xref>, <xref ref-type="bibr" rid="CR39">39</xref>, <xref ref-type="bibr" rid="CR42">42</xref>]. In summary, we extend the original optimization objective (Eq. <xref rid="Equ1" ref-type="">1</xref>) by passing the sampled one-hot pattern <inline-formula id="IEq72"><alternatives><tex-math id="M159">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\delta (\varvec{l})$$\end{document}</tex-math><mml:math id="M160"><mml:mrow><mml:mi>δ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq72.gif"/></alternatives></inline-formula> to the VAE and penalize the pattern based on its VAE-estimated marginal likelihood, <inline-formula id="IEq73"><alternatives><tex-math id="M161">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p_{\text {VAE}}(\delta (\varvec{l}))$$\end{document}</tex-math><mml:math id="M162"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mtext>VAE</mml:mtext></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>δ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq73.gif"/></alternatives></inline-formula>, using importance-weighted inference and ST approximation for backpropagation (see Eq. <xref rid="Equ13" ref-type="">13</xref> in Methods).</p>
      <p id="Par48">The degree to which predictors exhibit pathological behavior when maximized varies on a case-by-case basis and likely depends heavily on the data distribution. When designing maximally strong gene enhancers using the MPRA-DragoNN predictor, for example, VAE-regularization has a clear effect on shifting the distribution of the designed sequences (Fig. <xref rid="Fig3" ref-type="fig">3</xref>a; bottom histograms). In contrast, when designing polyadenylation signals, VAE-regularization has no effect since non-regularized optimization already generates sequences that are at least as likely as training data according to the VAE (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>, Figure S3A).</p>
      <p id="Par49">Next, we tasked the VAE-regularized Fast SeqProp method with designing maximally strong polyadenylation signals (using APARENT as the oracle), maximally transcriptionally active enhancer sequences (using MPRA-DragoNN as the oracle) and maximally translationally efficient 5’ UTRs (using Optimus 5’). For each task, we trained a <inline-formula id="IEq74"><alternatives><tex-math id="M163">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta$$\end{document}</tex-math><mml:math id="M164"><mml:mi>β</mml:mi></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq74.gif"/></alternatives></inline-formula>-VAE [<xref ref-type="bibr" rid="CR59">59</xref>] and a W-GAN [<xref ref-type="bibr" rid="CR60">60</xref>] on a sample of 5000 high-fitness sequences (see Methods for details). We then used the methods CbAS [<xref ref-type="bibr" rid="CR39">39</xref>] FB-GAN [<xref ref-type="bibr" rid="CR38">38</xref>], AM-VAE [<xref ref-type="bibr" rid="CR44">44</xref>], RWR [<xref ref-type="bibr" rid="CR61">61</xref>] and FB-VAE (VAE-version of FB-GAN) to maximize each oracle, using the VAE or GAN we trained earlier with default method parameters. We used the same VAE as the regularizer for our design method (Fast SeqProp). During optimization, we measured the fitness scores of both the oracle and a number of independent validation models that we did not directly optimize for, allowing us to estimate sequence fitness in an unbiased way. Specifically, when designing polyadenylation signals based on APARENT, we validated the designs using DeeReCT-APA [<xref ref-type="bibr" rid="CR31">31</xref>], an LSTM trained on 3’-sequencing data of mouse cells, and DeepPASTA [<xref ref-type="bibr" rid="CR30">30</xref>], a CNN trained on human 3’-sequencing data. When designing enhancer sequences, we validated the designs using iEnhancer-ECNN [<xref ref-type="bibr" rid="CR62">62</xref>], an ensemble of CNNs trained on genomic enhancer sequences, and EnhancerP-2L [<xref ref-type="bibr" rid="CR63">63</xref>], a Random Forest-classifier based on statistical features extracted from enhancer regions in the genome. Finally, to validate Optimus 5’ designs, we had access to a newer version of the model that had been trained on additional MPRA data, making it more robust particularly on outlier sequences such as long homopolymer stretches [<xref ref-type="bibr" rid="CR25">25</xref>]. On a practical note, we found it difficult to train a VAE on the APARENT, Optimus 5’ and MPRA-DragoNN datasets, and the convergence of CbAS, RWR and FB-GAN appeared sensitive to quantile threshold settings, which we believe stem from the considerable data heterogeneity and variability.</p>
      <p id="Par50">The results (Fig. <xref rid="Fig3" ref-type="fig">3</xref>b) show that Fast SeqProp reaches significantly higher oracle fitness scores and validation model scores with orders of magnitudes fewer calls to the oracle for all tasks except the 5’ UTR design problem, where instead AM-VAE reaches high validation scores faster. The other methods either do not reach the same median validation score in the total allotted time, or do so at the expense of reduced diversity (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>, Figure S3B). For the polyadenylation signal design task, Fast SeqProp reaches identical validation scores with or without VAE-regularization (Fig. <xref rid="Fig3" ref-type="fig">3</xref>b, top right; Additional file <xref rid="MOESM1" ref-type="media">1</xref>, Figure S3C). The designed polyadenylation signal sequences include motifs such as CFIm-, CstF- and CPSF binding sites (Fig. <xref rid="Fig3" ref-type="fig">3</xref>c, top). For the enhancer design task, the VAE-regularization is clearly beneficial according to the validation model; while enhancers designed by Fast SeqProp without the VAE have a median MPRA-DragoNN score of 3.5, the median iEnhancer-ECNN score (Fig. <xref rid="Fig3" ref-type="fig">3</xref>b, middle right) is just 0.43. With VAE-regularization, we generate sequences with a lower median MPRA-DragoNN score (3.25), but higher iEnhancer-ECNN score (0.55). However, closer inspection reveals that Fast SeqProp does not consistently generate worse enhancers according to the validation model than its VAE-regularized counterpart. Rather, Fast SeqProp without VAE either generates highly scored enhancers by the validation model or sequences that are lowly scored, while Fast SeqProp with VAE consistently generates medium-scored enhancers (example shown in Fig. <xref rid="Fig3" ref-type="fig">3</xref>c, middle). This dynamic is also observed with another validation model (EnhancerP-2L; see Additional file <xref rid="MOESM1" ref-type="media">1</xref>, Figure S3D). Only <inline-formula id="IEq75"><alternatives><tex-math id="M165">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$80\%$$\end{document}</tex-math><mml:math id="M166"><mml:mrow><mml:mn>80</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq75.gif"/></alternatives></inline-formula> of Fast SeqProp (no VAE) sequences are identified by EnhancerP-2L as enhancers, while nearly <inline-formula id="IEq76"><alternatives><tex-math id="M167">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$100\%$$\end{document}</tex-math><mml:math id="M168"><mml:mrow><mml:mn>100</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq76.gif"/></alternatives></inline-formula> of Fast SeqProp-VAE sequences are identified. However, their weighted predicted enhancer strengths are identical. It is also worth noting that most other methods decrease their validation scores when increasing their MPRA-DragoNN scores; this is because they get stuck in a suboptimal, local minimum with pathological AT-repeats. Finally, VAE-regularization is beneficial for designing 5’ UTRs, as it restricts the sequences from becoming overly T-rich, a sequence pathology present in the original Optimus 5’ model which the retrained version understands actually decreases ribosome load (Fig. <xref rid="Fig3" ref-type="fig">3</xref>b, bottom; Fig. <xref rid="Fig3" ref-type="fig">3</xref>c, bottom).</p>
      <p id="Par51">In the Additional file <xref rid="MOESM1" ref-type="media">1</xref>, we provide extra benchmark experiments comparing Fast SeqProp to a subset of the above design methods. In particular, in Figure S3E, we train the same kind of oracles as was used by Brookes et al. [<xref ref-type="bibr" rid="CR39">39</xref>] to estimate uncertainty in the fitness predictions [<xref ref-type="bibr" rid="CR64">64</xref>], and use these models to replicate the polyadenylation signal and 5’ UTR design benchmarks. We also replicate the GFP design task used in Brookes et al. [<xref ref-type="bibr" rid="CR39">39</xref>]. Additionally, in Figure S3F, we include an example where we use MPRA-DragoNN to design maximally specific enhancers in the cell line HepG2 (and inactivated in K562), and show how internal network penalties can be used to regularize the sequence optimization when it is hard to train an uncertainty-estimator oracle that is sufficiently accurate.</p>
    </sec>
    <sec id="Sec8">
      <title>Protein structure optimization</title>
      <p id="Par52">Multiple deep learning models have recently been developed for predicting tertiary protein structure [<xref ref-type="bibr" rid="CR32">32</xref>–<xref ref-type="bibr" rid="CR34">34</xref>]. Here, we demonstrate our method by designing <italic>de novo</italic> protein sequences which conform to a target residue contact map as predicted by trRosetta [<xref ref-type="bibr" rid="CR34">34</xref>]. The predictor takes three inputs (Fig. <xref rid="Fig4" ref-type="fig">4</xref>a): A one-hot coded sequence, a PSSM constructed from a multiple-sequence alignment (MSA) and a direct-coupling analysis (DCA) map. For our design task, we pass the optimizable one-hot pattern to the first two inputs and an all-zeros tensor as the DCA feature map. Given the predicted distance distribution <inline-formula id="IEq77"><alternatives><tex-math id="M169">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{D}^{P} \in [0, 1]^{N \times N \times 37}$$\end{document}</tex-math><mml:math id="M170"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">D</mml:mi></mml:mrow><mml:mi>P</mml:mi></mml:msup><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mrow><mml:mi>N</mml:mi><mml:mo>×</mml:mo><mml:mi>N</mml:mi><mml:mo>×</mml:mo><mml:mn>37</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq77.gif"/></alternatives></inline-formula> and angle distributions <inline-formula id="IEq78"><alternatives><tex-math id="M171">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{\theta }^{P}, \varvec{\omega }^{P} \in [0, 1]^{N \times N \times 24}$$\end{document}</tex-math><mml:math id="M172"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">θ</mml:mi></mml:mrow><mml:mi>P</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">ω</mml:mi></mml:mrow><mml:mi>P</mml:mi></mml:msup><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mrow><mml:mi>N</mml:mi><mml:mo>×</mml:mo><mml:mi>N</mml:mi><mml:mo>×</mml:mo><mml:mn>24</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq78.gif"/></alternatives></inline-formula>, <inline-formula id="IEq79"><alternatives><tex-math id="M173">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{\phi }^{P} \in [0, 1]^{N \times N \times 12}$$\end{document}</tex-math><mml:math id="M174"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">ϕ</mml:mi></mml:mrow><mml:mi>P</mml:mi></mml:msup><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mrow><mml:mi>N</mml:mi><mml:mo>×</mml:mo><mml:mi>N</mml:mi><mml:mo>×</mml:mo><mml:mn>12</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq79.gif"/></alternatives></inline-formula>, we minimize the mean KL-divergence against target distributions <inline-formula id="IEq80"><alternatives><tex-math id="M175">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{D}^{T}$$\end{document}</tex-math><mml:math id="M176"><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">D</mml:mi></mml:mrow><mml:mi>T</mml:mi></mml:msup></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq80.gif"/></alternatives></inline-formula>, <inline-formula id="IEq81"><alternatives><tex-math id="M177">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{\theta }^{T}$$\end{document}</tex-math><mml:math id="M178"><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">θ</mml:mi></mml:mrow><mml:mi>T</mml:mi></mml:msup></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq81.gif"/></alternatives></inline-formula>, <inline-formula id="IEq82"><alternatives><tex-math id="M179">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{\omega }^{T}$$\end{document}</tex-math><mml:math id="M180"><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">ω</mml:mi></mml:mrow><mml:mi>T</mml:mi></mml:msup></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq82.gif"/></alternatives></inline-formula> and <inline-formula id="IEq83"><alternatives><tex-math id="M181">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{\phi }^{T}$$\end{document}</tex-math><mml:math id="M182"><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">ϕ</mml:mi></mml:mrow><mml:mi>T</mml:mi></mml:msup></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq83.gif"/></alternatives></inline-formula>:<disp-formula id="Equ9"><label>9</label><alternatives><tex-math id="M183">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \begin{aligned} \min _{\varvec{l}}&amp;\quad \text {KL}(\varvec{D}^{P} || \varvec{D}^{T}) + \text {KL}(\varvec{\theta }^{P} || \varvec{\theta }^{T}) + \text {KL}(\varvec{\omega }^{P} || \varvec{\omega }^{T}) + \text {KL}(\varvec{\phi }^{P} || \varvec{\phi }^{T})\\ \text {where}&amp;\quad \text {KL}(\varvec{X} || \varvec{Y}) = \frac{1}{N^{2}} \cdot \sum _{i=1}^{N} \sum _{j=1}^{N} \sum _{k=1}^{K} \varvec{Y}_{ijk} \cdot \log \bigg ( \frac{\varvec{Y}_{ijk}}{\varvec{X}_{ijk}} \bigg ) \end{aligned} \end{aligned}$$\end{document}</tex-math><mml:math id="M184" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:munder><mml:mo movablelimits="true">min</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow></mml:munder></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow><mml:mspace width="1em"/><mml:mtext>KL</mml:mtext><mml:mo stretchy="false">(</mml:mo></mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">D</mml:mi></mml:mrow><mml:mi>P</mml:mi></mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">D</mml:mi></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mtext>KL</mml:mtext><mml:mo stretchy="false">(</mml:mo></mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">θ</mml:mi></mml:mrow><mml:mi>P</mml:mi></mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">θ</mml:mi></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mtext>KL</mml:mtext><mml:mo stretchy="false">(</mml:mo></mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">ω</mml:mi></mml:mrow><mml:mi>P</mml:mi></mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">ω</mml:mi></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mtext>KL</mml:mtext><mml:mo stretchy="false">(</mml:mo></mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">ϕ</mml:mi></mml:mrow><mml:mi>P</mml:mi></mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">ϕ</mml:mi></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mtext>where</mml:mtext></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="1em"/><mml:mtext>KL</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">X</mml:mi></mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">Y</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:msup><mml:mi>N</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mfrac><mml:mo>·</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:munderover><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:munderover><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>K</mml:mi></mml:munderover><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">Y</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ijk</mml:mi></mml:mrow></mml:msub><mml:mo>·</mml:mo><mml:mo>log</mml:mo><mml:mrow><mml:mo maxsize="2.047em" minsize="2.047em" stretchy="true">(</mml:mo></mml:mrow><mml:mfrac><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">Y</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ijk</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">X</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ijk</mml:mi></mml:mrow></mml:msub></mml:mfrac><mml:mrow><mml:mo maxsize="2.047em" minsize="2.047em" stretchy="true">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="12859_2021_4437_Article_Equ9.gif" position="anchor"/></alternatives></disp-formula>We compared SeqProp and Simulated Annealing to a modified version of Fast SeqProp, where logits are normalized across all residue channels (<italic>layer</italic>-normalized rather than <italic>instance</italic>-normalized) to reduce the increased variance of shorter sequences with 20 one-hot coded channels. We used the methods to design protein sequences which conformed to the target structure of an example protein (Sensor Histidine Kinase). We optimized 5 independent sequences per design method and recorded the median KL-loss at each iteration. The results show that Fast SeqProp converges considerably faster than other methods (Fig. <xref rid="Fig4" ref-type="fig">4</xref>b and Additional file <xref rid="MOESM1" ref-type="media">1</xref> Figure S4A); after 200 iterations, Fast SeqProp reached 4x lower KL-divergence and much of the target structure is visible (Fig. <xref rid="Fig4" ref-type="fig">4</xref>c). While the choice of learning rate changes the rate of convergence, it does not alter the minima found by Fast SeqProp. Additionally, by sampling multiple sequences at once and walking down the average gradient (e.g. 10 samples per gradient update), we can improve the rate of convergence further by making the gradient less noisy (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>, Figure S4B). Importantly, this scales significantly better than linear in execution time, since multiple samples can be computed and differentiated in parallel on a GPU. Finally, we replicated our results by designing sequences for a different protein structure (an alpha-helical hairpin protein; see Additional file <xref rid="MOESM1" ref-type="media">1</xref>, Figure S4C-E).</p>
    </sec>
  </sec>
  <sec id="Sec9">
    <title>Discussion</title>
    <p id="Par53">Methods guided by Machine Learning are used for a growing number of molecular design problems. To support this ongoing effort, it is crucial that we have optimization methods at the sequence-level which are fast, flexible and generally applicable with minimal tuning. <italic>Fast SeqProp</italic> is a model-free method that exhibits many of these properties. We demonstrated the method on a diverse set of problems, including the design of strong polyadenylation signals, efficiently translated 5’ UTRs and enhancers that result in high transcriptional activity. Interestingly, Fast SeqProp found higher fitness optima when compared to estimation-of-distribution (EDA) approaches, in particular for design tasks with low epistemic uncertainty. These results suggest that conditioning of deep generative models might be overly restrictive for some problems.</p>
    <p id="Par54">By normalizing nucleotide logits across positions and using a global entropy parameter, Fast SeqProp keeps logits proportionally scaled and centered at zero. The gradient of the entropy parameter <inline-formula id="IEq84"><alternatives><tex-math id="M185">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\gamma$$\end{document}</tex-math><mml:math id="M186"><mml:mi>γ</mml:mi></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq84.gif"/></alternatives></inline-formula> in our design method adaptively adjusts the sampling temperature to trade off global and local optimization. In the beginning, <inline-formula id="IEq85"><alternatives><tex-math id="M187">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\gamma$$\end{document}</tex-math><mml:math id="M188"><mml:mi>γ</mml:mi></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq85.gif"/></alternatives></inline-formula> is small, corresponding to a high PWM entropy and consequently very diverse sequence samples. As optimization progresses, <inline-formula id="IEq86"><alternatives><tex-math id="M189">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\gamma$$\end{document}</tex-math><mml:math id="M190"><mml:mi>γ</mml:mi></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq86.gif"/></alternatives></inline-formula> grows, leading to more localized sequence changes. This adaptive mechanism, in combination with flexible nucleotide logits due to the normalization, results in a highly efficient design method. As demonstrated on five deep learning predictors, logit normalization enables extremely fast sequence optimization, with a 50-100-fold speedup compared to previous gradient-based methods for many predictors.</p>
    <p id="Par55">In addition to logit drift and vanishing gradients, the original gradient ascent (or activation maximization) method suffers from predictor pathologies due to passing continuous softmax sequence relaxations as input, a problem fully removed by using discrete sampling. We further observed that straight-through sampling leads to consistently better optima than softmax relaxation, suggesting that it traverses local minima. In fact, our method outperformed global optimization meta heuristics such as Simulated Annealing on more difficult design tasks, such as designing 1000 nt long enhancer regions or designing protein sequences which conform to a complex target structure. We further demonstrated robust sequence design even when there is a high degree of epistemic uncertainty, by incorporating a regularization penalty based on variational autoencoders. Our approach showed better and faster convergence than other regularized design methods.</p>
  </sec>
  <sec id="Sec10">
    <title>Conclusion</title>
    <p id="Par56">We presented an improved version of activation maximization for biological sequence design. <italic>Fast SeqProp</italic> combines logit normalization with stochastic nucleotide sampling and straight-through gradients. We demonstrated the efficacy of the method on several DNA, RNA and protein design tasks. We expect this algorithmic improvement to be broadly useful to the research community for biomolecular optimization at the level of primary sequence. The approach introduced here could accelerate the design of functional biomolecules, potentially resulting in novel drug therapies, vaccines, molecular sensors and other bioengineering products.</p>
  </sec>
  <sec id="Sec11">
    <title>Methods</title>
    <sec id="Sec12">
      <title>Activation maximization design methods</title>
      <p id="Par57">In Fig. <xref rid="Fig1" ref-type="fig">1</xref> and throughout the paper, we compare four different activation maximization methods for sequences: (1) <italic>Fast SeqProp</italic> (Our method)—The modified activation maximization method which combines the logit normalization scheme of Eqs. <xref rid="Equ7" ref-type="">7</xref>–<xref rid="Equ8" ref-type="">8</xref> with the softmax straight-through estimator of Eqs. <xref rid="Equ5" ref-type="">5</xref>–<xref rid="Equ6" ref-type="">6</xref>, (2) <italic>PWM</italic>—The original method with continuous softmax-relaxed inputs [<xref ref-type="bibr" rid="CR44">44</xref>], (3) <italic>SeqProp</italic>—The categorical sampling method described in [<xref ref-type="bibr" rid="CR29">29</xref>] using the (non-normalized) softmax straight-through gradient estimator, and (4) <italic>Fast PWM</italic>—A logit-normalized version of the softmax-relaxed method.</p>
      <p id="Par58">Starting with a randomly initialized logit matrix <inline-formula id="IEq87"><alternatives><tex-math id="M191">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{l}$$\end{document}</tex-math><mml:math id="M192"><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq87.gif"/></alternatives></inline-formula>, for the methods PWM and Fast PWM we optimize <inline-formula id="IEq88"><alternatives><tex-math id="M193">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{l}$$\end{document}</tex-math><mml:math id="M194"><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq88.gif"/></alternatives></inline-formula> using the softmax relaxation <inline-formula id="IEq89"><alternatives><tex-math id="M195">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma (\varvec{l})$$\end{document}</tex-math><mml:math id="M196"><mml:mrow><mml:mi>σ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq89.gif"/></alternatives></inline-formula> from Eq. <xref rid="Equ3" ref-type="">3</xref>. For SeqProp and Fast SeqProp, we optimize <inline-formula id="IEq90"><alternatives><tex-math id="M197">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{l}$$\end{document}</tex-math><mml:math id="M198"><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq90.gif"/></alternatives></inline-formula> using the discrete nucleotide sampler <inline-formula id="IEq91"><alternatives><tex-math id="M199">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\delta (\varvec{l})$$\end{document}</tex-math><mml:math id="M200"><mml:mrow><mml:mi>δ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq91.gif"/></alternatives></inline-formula> from Eq. <xref rid="Equ5" ref-type="">5</xref>. We define the optimization loss (or the ’train’ loss) as:<disp-formula id="Equ16"><alternatives><tex-math id="M201">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \mathcal {L}_{\text {train}}(\varvec{l}) = - \mathcal {P}(\varvec{x}(\varvec{l})) \end{aligned}$$\end{document}</tex-math><mml:math id="M202" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi mathvariant="script">L</mml:mi><mml:mtext>train</mml:mtext></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mo>-</mml:mo><mml:mi mathvariant="script">P</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="12859_2021_4437_Article_Equ16.gif" position="anchor"/></alternatives></disp-formula>For PWM and Fast PWM, <inline-formula id="IEq92"><alternatives><tex-math id="M203">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{x}(\varvec{l}) = \sigma (\varvec{l})$$\end{document}</tex-math><mml:math id="M204"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>σ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq92.gif"/></alternatives></inline-formula>. For SeqProp and Fast SeqProp, <inline-formula id="IEq93"><alternatives><tex-math id="M205">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{x}(\varvec{l}) = \delta (\varvec{l})$$\end{document}</tex-math><mml:math id="M206"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>δ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq93.gif"/></alternatives></inline-formula>.</p>
      <p id="Par59">For Fast SeqProp we use the scaled, normalized logits <inline-formula id="IEq94"><alternatives><tex-math id="M207">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{l}^{(\text {scaled})}$$\end{document}</tex-math><mml:math id="M208"><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq94.gif"/></alternatives></inline-formula> (Eqs. <xref rid="Equ7" ref-type="">7</xref>–<xref rid="Equ8" ref-type="">8</xref>) as parameters for the sampler <inline-formula id="IEq95"><alternatives><tex-math id="M209">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\delta$$\end{document}</tex-math><mml:math id="M210"><mml:mi>δ</mml:mi></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq95.gif"/></alternatives></inline-formula> defined in Eq. <xref rid="Equ5" ref-type="">5</xref>. As such, we minimize the above loss with respect to <inline-formula id="IEq96"><alternatives><tex-math id="M211">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{l}_{ij}$$\end{document}</tex-math><mml:math id="M212"><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq96.gif"/></alternatives></inline-formula>, <inline-formula id="IEq97"><alternatives><tex-math id="M213">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\gamma _{j}$$\end{document}</tex-math><mml:math id="M214"><mml:msub><mml:mi>γ</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq97.gif"/></alternatives></inline-formula> and <inline-formula id="IEq98"><alternatives><tex-math id="M215">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta _{j}$$\end{document}</tex-math><mml:math id="M216"><mml:msub><mml:mi>β</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq98.gif"/></alternatives></inline-formula> (or <inline-formula id="IEq99"><alternatives><tex-math id="M217">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\gamma$$\end{document}</tex-math><mml:math id="M218"><mml:mi>γ</mml:mi></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq99.gif"/></alternatives></inline-formula> and <inline-formula id="IEq100"><alternatives><tex-math id="M219">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta$$\end{document}</tex-math><mml:math id="M220"><mml:mi>β</mml:mi></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq100.gif"/></alternatives></inline-formula> for proteins). Using the softmax ST estimator from Eq. <xref rid="Equ6" ref-type="">6</xref>, we arrive at the following gradients for Fast SeqProp:<disp-formula id="Equ10"><label>10</label><alternatives><tex-math id="M221">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \frac{\partial \mathcal {P}(\delta (\varvec{l}^{(\text {scaled})}))}{\partial \varvec{l}_{ij}}&amp;= \sum _{k=1}^{M} \frac{\partial \mathcal {P}(\delta (\varvec{l}^{(\text {scaled})}))}{\partial \delta (\varvec{l}^{(\text {scaled})})_{ik}} \cdot \frac{\partial \sigma (\varvec{l}^{(\text {scaled})})_{ik}}{\partial \varvec{l}_{ij}^{(\text {scaled})}} \cdot \gamma _{j} \cdot \frac{\partial \varvec{l}_{ij}^{(\text {norm})}}{\partial \varvec{l}_{ij}} \end{aligned}$$\end{document}</tex-math><mml:math id="M222" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mfrac><mml:mrow><mml:mi>∂</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>δ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>∂</mml:mi><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:munderover><mml:mfrac><mml:mrow><mml:mi>∂</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>δ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>∂</mml:mi><mml:mi>δ</mml:mi><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ik</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo>·</mml:mo><mml:mfrac><mml:mrow><mml:mi>∂</mml:mi><mml:mi>σ</mml:mi><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ik</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mi>∂</mml:mi><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:mfrac><mml:mo>·</mml:mo><mml:msub><mml:mi>γ</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>·</mml:mo><mml:mfrac><mml:mrow><mml:mi>∂</mml:mi><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>norm</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow><mml:mrow><mml:mi>∂</mml:mi><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="12859_2021_4437_Article_Equ10.gif" position="anchor"/></alternatives></disp-formula><disp-formula id="Equ11"><label>11</label><alternatives><tex-math id="M223">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \frac{\partial \mathcal {P}(\delta (\varvec{l}^{(\text {scaled})}))}{\partial \gamma _{j}}&amp;= \sum _{i=1}^{N} \sum _{k=1}^{M} \frac{\partial \mathcal {P}(\delta (\varvec{l}^{(\text {scaled})}))}{\partial \delta (\varvec{l}^{(\text {scaled})})_{ik}} \cdot \frac{\partial \sigma (\varvec{l}^{(\text {scaled})})_{ik}}{\partial \varvec{l}_{ij}^{(\text {scaled})}} \cdot \varvec{l}_{ij}^{(\text {norm})} \end{aligned}$$\end{document}</tex-math><mml:math id="M224" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mfrac><mml:mrow><mml:mi>∂</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>δ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>∂</mml:mi><mml:msub><mml:mi>γ</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mfrac></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:munderover><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:munderover><mml:mfrac><mml:mrow><mml:mi>∂</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>δ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>∂</mml:mi><mml:mi>δ</mml:mi><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ik</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo>·</mml:mo><mml:mfrac><mml:mrow><mml:mi>∂</mml:mi><mml:mi>σ</mml:mi><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ik</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mi>∂</mml:mi><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:mfrac><mml:mo>·</mml:mo><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>norm</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="12859_2021_4437_Article_Equ11.gif" position="anchor"/></alternatives></disp-formula><disp-formula id="Equ12"><label>12</label><alternatives><tex-math id="M225">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \frac{\partial \mathcal {P}(\delta (\varvec{l}^{(\text {scaled})}))}{\partial \beta {j}}&amp;= \sum _{i=1}^{N} \sum _{k=1}^{M} \frac{\partial \mathcal {P}(\delta (\varvec{l}^{(\text {scaled})}))}{\partial \delta (\varvec{l}^{(\text {scaled})})_{ik}} \cdot \frac{\partial \sigma (\varvec{l}^{(\text {scaled})})_{ik}}{\partial \varvec{l}_{ij}^{(\text {scaled})}} \end{aligned}$$\end{document}</tex-math><mml:math id="M226" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mfrac><mml:mrow><mml:mi>∂</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>δ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>∂</mml:mi><mml:mi>β</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:mfrac></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:munderover><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:munderover><mml:mfrac><mml:mrow><mml:mi>∂</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>δ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>∂</mml:mi><mml:mi>δ</mml:mi><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ik</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo>·</mml:mo><mml:mfrac><mml:mrow><mml:mi>∂</mml:mi><mml:mi>σ</mml:mi><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ik</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mi>∂</mml:mi><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:mfrac></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="12859_2021_4437_Article_Equ12.gif" position="anchor"/></alternatives></disp-formula>The gradient equations are very similar for Fast PWM (the logit-normalized PWM method); the only difference is that the discrete sampler <inline-formula id="IEq101"><alternatives><tex-math id="M227">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\delta$$\end{document}</tex-math><mml:math id="M228"><mml:mi>δ</mml:mi></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq101.gif"/></alternatives></inline-formula> in the forward pass is replaced by the standard softmax <inline-formula id="IEq102"><alternatives><tex-math id="M229">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma$$\end{document}</tex-math><mml:math id="M230"><mml:mi>σ</mml:mi></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq102.gif"/></alternatives></inline-formula>. Similar design methods were published in parallel with (or shortly after) this work, including an editing method based on the Gumbel-Softmax distribution [<xref ref-type="bibr" rid="CR45">45</xref>] and other algorithms based on discretized activation maximization [<xref ref-type="bibr" rid="CR46">46</xref>, <xref ref-type="bibr" rid="CR65">65</xref>]. See Figure S1E in the Additional file <xref rid="MOESM1" ref-type="media">1</xref> for a comparison to optimization based on Gumbel-Softmax.</p>
      <p id="Par60">The actual loss (or the ’test’ loss) is evaluated on the basis of discrete sequence samples drawn from the optimized softmax representation <inline-formula id="IEq103"><alternatives><tex-math id="M231">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma (\varvec{l})$$\end{document}</tex-math><mml:math id="M232"><mml:mrow><mml:mi>σ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq103.gif"/></alternatives></inline-formula>, regardless of design method. In all four methods, we can use the categorical nucleotide sampler <inline-formula id="IEq104"><alternatives><tex-math id="M233">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\delta (\varvec{l})$$\end{document}</tex-math><mml:math id="M234"><mml:mrow><mml:mi>δ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq104.gif"/></alternatives></inline-formula> to draw sequence samples and compute the mean test loss as:<disp-formula id="Equ17"><alternatives><tex-math id="M235">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \mathcal {L}_{\text {test}}(\{\varvec{l}^{(k)}\}_{k=1}^{K}) = - \frac{1}{K} \frac{1}{S} \sum _{k=1}^{K} \sum _{s=1}^{S} \mathcal {P}(\delta (\varvec{l}^{(k)})^{(s)}) \end{aligned}$$\end{document}</tex-math><mml:math id="M236" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi mathvariant="script">L</mml:mi><mml:mtext>test</mml:mtext></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>K</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mo>-</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mi>K</mml:mi></mml:mfrac><mml:mfrac><mml:mn>1</mml:mn><mml:mi>S</mml:mi></mml:mfrac><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>K</mml:mi></mml:munderover><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>S</mml:mi></mml:munderover><mml:mi mathvariant="script">P</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>δ</mml:mi><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="12859_2021_4437_Article_Equ17.gif" position="anchor"/></alternatives></disp-formula>Here <italic>S</italic> refers to the number of samples drawn from each softmax sequence <inline-formula id="IEq105"><alternatives><tex-math id="M237">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma (\varvec{l}^{(k)})$$\end{document}</tex-math><mml:math id="M238"><mml:mrow><mml:mi>σ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq105.gif"/></alternatives></inline-formula> at every weight update <italic>t</italic>, and <italic>K</italic> is the number of independent optimization runs. In all experiments, we set <inline-formula id="IEq106"><alternatives><tex-math id="M239">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$K = 10$$\end{document}</tex-math><mml:math id="M240"><mml:mrow><mml:mi>K</mml:mi><mml:mo>=</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq106.gif"/></alternatives></inline-formula> and <inline-formula id="IEq107"><alternatives><tex-math id="M241">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S = 10$$\end{document}</tex-math><mml:math id="M242"><mml:mrow><mml:mi>S</mml:mi><mml:mo>=</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq107.gif"/></alternatives></inline-formula>.</p>
      <p id="Par61">In addition to gradient-based methods, we compare Fast SeqProp to discrete search algorithms. The first method is a pairwise nucleotide-swapping search (<italic>Evolution</italic>) [<xref ref-type="bibr" rid="CR25">25</xref>], where sequence <inline-formula id="IEq108"><alternatives><tex-math id="M243">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{x}$$\end{document}</tex-math><mml:math id="M244"><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq108.gif"/></alternatives></inline-formula> is mutated with either 1 or, with a 50% chance, 2 random substitutions at each iteration, resulting in a new candidate sequence <inline-formula id="IEq109"><alternatives><tex-math id="M245">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{x}'$$\end{document}</tex-math><mml:math id="M246"><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq109.gif"/></alternatives></inline-formula>. <inline-formula id="IEq110"><alternatives><tex-math id="M247">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{x}'$$\end{document}</tex-math><mml:math id="M248"><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq110.gif"/></alternatives></inline-formula> is only accepted if <inline-formula id="IEq111"><alternatives><tex-math id="M249">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {P}(\varvec{x}') &gt; \mathcal {P}(\varvec{x})$$\end{document}</tex-math><mml:math id="M250"><mml:mrow><mml:mi mathvariant="script">P</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>&gt;</mml:mo><mml:mi mathvariant="script">P</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq111.gif"/></alternatives></inline-formula>. We also tested a well-known meta heuristic—<italic>Simulated Annealing</italic> [<xref ref-type="bibr" rid="CR66">66</xref>]—which has recently been demonstrated for sequence-level protein design [<xref ref-type="bibr" rid="CR3">3</xref>]. In Simulated Annealing, mutations are accepted even if they result in lower fitness with probability <inline-formula id="IEq112"><alternatives><tex-math id="M251">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$P(\varvec{x}', \varvec{x}, T)$$\end{document}</tex-math><mml:math id="M252"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo>,</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mi>T</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq112.gif"/></alternatives></inline-formula>, where <italic>T</italic> is a temperature parameter. Here we use the Metropolis acceptance criterion [<xref ref-type="bibr" rid="CR67">67</xref>]:<disp-formula id="Equ18"><alternatives><tex-math id="M253">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} P(\varvec{x}', \varvec{x}, T) = e^{-(\mathcal {P}(\varvec{x}) - \mathcal {P}(\varvec{x}')) / T} \end{aligned}$$\end{document}</tex-math><mml:math id="M254" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>P</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo>,</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mi>T</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>-</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">P</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>-</mml:mo><mml:mi mathvariant="script">P</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">/</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="12859_2021_4437_Article_Equ18.gif" position="anchor"/></alternatives></disp-formula></p>
      <sec id="Sec13">
        <title>Adaptive sampling temperature with fast SeqProp</title>
        <p id="Par62">In Fast SeqProp, the scaling parameter <inline-formula id="IEq113"><alternatives><tex-math id="M255">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\gamma _{j}$$\end{document}</tex-math><mml:math id="M256"><mml:msub><mml:mi>γ</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq113.gif"/></alternatives></inline-formula> adaptively adjusts the sampling entropy to control global versus local optimization. This can be deduced from the gradient components of <inline-formula id="IEq114"><alternatives><tex-math id="M257">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\gamma _{j}$$\end{document}</tex-math><mml:math id="M258"><mml:msub><mml:mi>γ</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq114.gif"/></alternatives></inline-formula> in Eq. <xref rid="Equ11" ref-type="">11</xref>: <list list-type="order"><list-item><p id="Par63"><inline-formula id="IEq115"><alternatives><tex-math id="M259">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{\partial \mathcal {P}(\delta (\varvec{l}^{(\text {scaled})}))}{\partial \delta (\varvec{l}^{(\text {scaled})})_{ik}}$$\end{document}</tex-math><mml:math id="M260"><mml:mfrac><mml:mrow><mml:mi>∂</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>δ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>∂</mml:mi><mml:mi>δ</mml:mi><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ik</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq115.gif"/></alternatives></inline-formula> is positive for nucleotides which increase fitness and negative otherwise.</p></list-item><list-item><p id="Par64"><inline-formula id="IEq116"><alternatives><tex-math id="M261">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{\partial \sigma (\varvec{l}^{(\text {scaled})})_{ik}}{\partial \varvec{l}_{ij}^{(\text {scaled})}}$$\end{document}</tex-math><mml:math id="M262"><mml:mfrac><mml:mrow><mml:mi>∂</mml:mi><mml:mi>σ</mml:mi><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ik</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mi>∂</mml:mi><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:mfrac></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq116.gif"/></alternatives></inline-formula> is positive when <inline-formula id="IEq117"><alternatives><tex-math id="M263">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$j=k$$\end{document}</tex-math><mml:math id="M264"><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq117.gif"/></alternatives></inline-formula> and negative otherwise.</p></list-item><list-item><p id="Par65"><inline-formula id="IEq118"><alternatives><tex-math id="M265">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{l}_{ik}^{(\text {norm})}$$\end{document}</tex-math><mml:math id="M266"><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ik</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>norm</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq118.gif"/></alternatives></inline-formula> is positive only when we are likely to sample the corresponding nucleotide.</p></list-item></list>Here, the product of the first two terms, <inline-formula id="IEq119"><alternatives><tex-math id="M267">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{\partial \mathcal {P}(\delta (\varvec{l}^{(\text {scaled})}))}{\partial \delta (\varvec{l}^{(\text {scaled})})_{ik}} \cdot \frac{\partial \sigma (\varvec{l}^{(\text {scaled})})_{ik}}{\partial \varvec{l}_{ij}^{(\text {scaled})}}$$\end{document}</tex-math><mml:math id="M268"><mml:mrow><mml:mfrac><mml:mrow><mml:mi>∂</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>δ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>∂</mml:mi><mml:mi>δ</mml:mi><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ik</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo>·</mml:mo><mml:mfrac><mml:mrow><mml:mi>∂</mml:mi><mml:mi>σ</mml:mi><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ik</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mi>∂</mml:mi><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:mfrac></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq119.gif"/></alternatives></inline-formula>, is positive if <inline-formula id="IEq120"><alternatives><tex-math id="M269">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$j = k$$\end{document}</tex-math><mml:math id="M270"><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq120.gif"/></alternatives></inline-formula> and nucleotide <italic>j</italic> raises fitness or if <inline-formula id="IEq121"><alternatives><tex-math id="M271">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$j \ne k$$\end{document}</tex-math><mml:math id="M272"><mml:mrow><mml:mi>j</mml:mi><mml:mo>≠</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq121.gif"/></alternatives></inline-formula> and nucleotide <italic>k</italic> lowers fitness. Put together, the gradient for <inline-formula id="IEq122"><alternatives><tex-math id="M273">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\gamma _{j}$$\end{document}</tex-math><mml:math id="M274"><mml:msub><mml:mi>γ</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq122.gif"/></alternatives></inline-formula> increases when our confidence <inline-formula id="IEq123"><alternatives><tex-math id="M275">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{l}_{ij}^{(\text {norm})}$$\end{document}</tex-math><mml:math id="M276"><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>norm</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq123.gif"/></alternatives></inline-formula> in nucleotide <italic>j</italic> is <italic>consistent</italic> with its impact on fitness, such that <inline-formula id="IEq124"><alternatives><tex-math id="M277">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\text {sign}\left( \sum _{k=1}^{M} \frac{\partial \mathcal {P}(\delta (\varvec{l}^{(\text {scaled})}))}{\partial \delta (\varvec{l}^{(\text {scaled})})_{ik}} \cdot \frac{\partial \sigma (\varvec{l}^{(\text {scaled})})_{ik}}{\partial \varvec{l}_{ij}^{(\text {scaled})}}\right) = \text {sign}\left( \varvec{l}_{ij}^{(\text {norm})}\right)$$\end{document}</tex-math><mml:math id="M278"><mml:mrow><mml:mtext>sign</mml:mtext><mml:mfenced close=")" open="("><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:msubsup><mml:mfrac><mml:mrow><mml:mi>∂</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>δ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>∂</mml:mi><mml:mi>δ</mml:mi><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ik</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo>·</mml:mo><mml:mfrac><mml:mrow><mml:mi>∂</mml:mi><mml:mi>σ</mml:mi><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ik</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mi>∂</mml:mi><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:mfrac></mml:mfenced><mml:mo>=</mml:mo><mml:mtext>sign</mml:mtext><mml:mfenced close=")" open="("><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>norm</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq124.gif"/></alternatives></inline-formula>. Conversely, <italic>inconsistent</italic> nucleotides decrement the gradient. At the start of optimization, <inline-formula id="IEq125"><alternatives><tex-math id="M279">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\gamma _{j}$$\end{document}</tex-math><mml:math id="M280"><mml:msub><mml:mi>γ</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq125.gif"/></alternatives></inline-formula> is small, leading to high PWM entropy and large jumps in sequence design space. As we sample consistent nucleotides and the entropy gradient <inline-formula id="IEq126"><alternatives><tex-math id="M281">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{\partial \mathcal {P}(\delta (\varvec{l}^{(\text {scaled})}))}{\partial \gamma _{j}}$$\end{document}</tex-math><mml:math id="M282"><mml:mfrac><mml:mrow><mml:mi>∂</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>δ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>scaled</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>∂</mml:mi><mml:msub><mml:mi>γ</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mfrac></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq126.gif"/></alternatives></inline-formula> turns positive, <inline-formula id="IEq127"><alternatives><tex-math id="M283">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\gamma _{j}$$\end{document}</tex-math><mml:math id="M284"><mml:msub><mml:mi>γ</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq127.gif"/></alternatives></inline-formula> increases. Larger <inline-formula id="IEq128"><alternatives><tex-math id="M285">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\gamma _{j}$$\end{document}</tex-math><mml:math id="M286"><mml:msub><mml:mi>γ</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq128.gif"/></alternatives></inline-formula> lowers the entropy and leads to more localized optimization. However, if we sample sufficiently many inconsistent nucleotides, the gradient of <inline-formula id="IEq129"><alternatives><tex-math id="M287">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\gamma _{j}$$\end{document}</tex-math><mml:math id="M288"><mml:msub><mml:mi>γ</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq129.gif"/></alternatives></inline-formula> may turn negative, again raising entropy and promoting global exploration.</p>
        <p id="Par66">Note that, in the context of protein design where we have a single scale <inline-formula id="IEq130"><alternatives><tex-math id="M289">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\gamma$$\end{document}</tex-math><mml:math id="M290"><mml:mi>γ</mml:mi></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq130.gif"/></alternatives></inline-formula> and offset <inline-formula id="IEq131"><alternatives><tex-math id="M291">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta$$\end{document}</tex-math><mml:math id="M292"><mml:mi>β</mml:mi></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq131.gif"/></alternatives></inline-formula>, the gradient expressions from Eqs. <xref rid="Equ11" ref-type="">11</xref> and <xref rid="Equ12" ref-type="">12</xref> are additively pooled across all <italic>M</italic> channels. The argued benefits of instance-normalization above thus holds true for layer-normalization as well.</p>
      </sec>
      <sec id="Sec14">
        <title>VAE-regularized fast SeqProp</title>
        <p id="Par67">In the main paper (Fig. <xref rid="Fig3" ref-type="fig">3</xref>), we use a variational autoencoder (VAE) [<xref ref-type="bibr" rid="CR59">59</xref>] to regularize the sequence design when running Fast SeqProp. Similar regularization techniques based on VAEs have previously been employed by [<xref ref-type="bibr" rid="CR37">37</xref>, <xref ref-type="bibr" rid="CR39">39</xref>]. The original optimization objective (Eq. <xref rid="Equ1" ref-type="">1</xref>) is extended by passing the sampled one-hot pattern <inline-formula id="IEq132"><alternatives><tex-math id="M293">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\delta (\varvec{l})$$\end{document}</tex-math><mml:math id="M294"><mml:mrow><mml:mi>δ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq132.gif"/></alternatives></inline-formula> to the VAE and estimating its marginal likelihood, <inline-formula id="IEq133"><alternatives><tex-math id="M295">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p_{\text {VAE}}(\delta (\varvec{l}))$$\end{document}</tex-math><mml:math id="M296"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mtext>VAE</mml:mtext></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>δ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq133.gif"/></alternatives></inline-formula>, using importance-weighted inference. We then minimize a margin loss with respect to the mean likelihood <inline-formula id="IEq134"><alternatives><tex-math id="M297">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p_{\text {ref}}$$\end{document}</tex-math><mml:math id="M298"><mml:msub><mml:mi>p</mml:mi><mml:mtext>ref</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq134.gif"/></alternatives></inline-formula> of the original training data to keep sequence designs in-distribution, using the Softmax ST estimator to propagate gradients back to <inline-formula id="IEq135"><alternatives><tex-math id="M299">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{l}$$\end{document}</tex-math><mml:math id="M300"><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq135.gif"/></alternatives></inline-formula>:<disp-formula id="Equ13"><label>13</label><alternatives><tex-math id="M301">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \min _{\varvec{l}} - \mathcal {P}(\delta (\varvec{l})) + \lambda \cdot \text {max}\big [\log _{10} p_{\text {ref}} - \log _{10} p_{\text {VAE}}(\delta (\varvec{l})) - \rho , 0 \big ] \end{aligned}$$\end{document}</tex-math><mml:math id="M302" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:munder><mml:mo movablelimits="true">min</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow></mml:munder><mml:mo>-</mml:mo><mml:mi mathvariant="script">P</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>δ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mi>λ</mml:mi><mml:mo>·</mml:mo><mml:mtext>max</mml:mtext><mml:mrow><mml:mo maxsize="1.2em" minsize="1.2em" stretchy="true">[</mml:mo></mml:mrow><mml:msub><mml:mo>log</mml:mo><mml:mn>10</mml:mn></mml:msub><mml:msub><mml:mi>p</mml:mi><mml:mtext>ref</mml:mtext></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mo>log</mml:mo><mml:mn>10</mml:mn></mml:msub><mml:msub><mml:mi>p</mml:mi><mml:mtext>VAE</mml:mtext></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>δ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>-</mml:mo><mml:mi>ρ</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mrow><mml:mo maxsize="1.2em" minsize="1.2em" stretchy="true">]</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="12859_2021_4437_Article_Equ13.gif" position="anchor"/></alternatives></disp-formula></p>
      </sec>
      <sec id="Sec15">
        <title>VAE-regularized fast SeqProp with uncertainty-estimation</title>
        <p id="Par68">In the Additional file <xref rid="MOESM1" ref-type="media">1</xref> (Figure S3E), we replicate the benchmark comparison of the main paper (Fig. <xref rid="Fig3" ref-type="fig">3</xref>), but we use oracle predictors capable of estimating the uncertainty in their fitness predictions to further regularize the designs [<xref ref-type="bibr" rid="CR64">64</xref>]. Sequence design based on uncertainty estimators were originally proposed by [<xref ref-type="bibr" rid="CR39">39</xref>, <xref ref-type="bibr" rid="CR68">68</xref>]. Assume that the oracle model predicts the mean <inline-formula id="IEq136"><alternatives><tex-math id="M303">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mu \big [\delta (\varvec{l})\big ]$$\end{document}</tex-math><mml:math id="M304"><mml:mrow><mml:mi>μ</mml:mi><mml:mrow><mml:mo maxsize="1.2em" minsize="1.2em" stretchy="true">[</mml:mo></mml:mrow><mml:mi>δ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo maxsize="1.2em" minsize="1.2em" stretchy="true">]</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq136.gif"/></alternatives></inline-formula> and standard deviation <inline-formula id="IEq137"><alternatives><tex-math id="M305">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\epsilon \big [\delta (\varvec{l})\big ]$$\end{document}</tex-math><mml:math id="M306"><mml:mrow><mml:mi>ϵ</mml:mi><mml:mrow><mml:mo maxsize="1.2em" minsize="1.2em" stretchy="true">[</mml:mo></mml:mrow><mml:mi>δ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo maxsize="1.2em" minsize="1.2em" stretchy="true">]</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq137.gif"/></alternatives></inline-formula> of fitness scores for the designed (sampled) pattern <inline-formula id="IEq138"><alternatives><tex-math id="M307">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\delta (\varvec{l})$$\end{document}</tex-math><mml:math id="M308"><mml:mrow><mml:mi>δ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq138.gif"/></alternatives></inline-formula>. We then use the (differentiable) survival function of the normal distribution to maximize the probability <inline-formula id="IEq139"><alternatives><tex-math id="M309">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p_{\mu [\delta (\varvec{l})], \epsilon [\delta (\varvec{l})]}(\mathbbm {Y} &gt; q)$$\end{document}</tex-math><mml:math id="M310"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>μ</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>δ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">]</mml:mo><mml:mo>,</mml:mo><mml:mi>ϵ</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>δ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="double-struck">Y</mml:mi><mml:mo>&gt;</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq139.gif"/></alternatives></inline-formula> that the predicted fitness of sequence <inline-formula id="IEq140"><alternatives><tex-math id="M311">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\delta (\varvec{l})$$\end{document}</tex-math><mml:math id="M312"><mml:mrow><mml:mi>δ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq140.gif"/></alternatives></inline-formula> is larger than quantile <italic>q</italic> of the training data:<disp-formula id="Equ14"><label>14</label><alternatives><tex-math id="M313">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \min _{\varvec{l}} - \log _{10} p_{\mu [\delta (\varvec{l})], \epsilon [\delta (\varvec{l})]}(\mathbbm {Y} &gt; q) + \lambda \cdot \text {max}\big [\log p_{\text {ref}} - \log _{10} p_{\text {VAE}}(\delta (\varvec{l})) - \rho , 0 \big ] \end{aligned}$$\end{document}</tex-math><mml:math id="M314" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:munder><mml:mo movablelimits="true">min</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow></mml:munder><mml:mo>-</mml:mo><mml:msub><mml:mo>log</mml:mo><mml:mn>10</mml:mn></mml:msub><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>μ</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>δ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">]</mml:mo><mml:mo>,</mml:mo><mml:mi>ϵ</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>δ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="double-struck">Y</mml:mi><mml:mo>&gt;</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mi>λ</mml:mi><mml:mo>·</mml:mo><mml:mtext>max</mml:mtext><mml:mrow><mml:mo maxsize="1.2em" minsize="1.2em" stretchy="true">[</mml:mo></mml:mrow><mml:mo>log</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mtext>ref</mml:mtext></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mo>log</mml:mo><mml:mn>10</mml:mn></mml:msub><mml:msub><mml:mi>p</mml:mi><mml:mtext>VAE</mml:mtext></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>δ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>-</mml:mo><mml:mi>ρ</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mrow><mml:mo maxsize="1.2em" minsize="1.2em" stretchy="true">]</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="12859_2021_4437_Article_Equ14.gif" position="anchor"/></alternatives></disp-formula>This fitness objective is known as ’Probability of Improvement’ (PI) [<xref ref-type="bibr" rid="CR69">69</xref>–<xref ref-type="bibr" rid="CR71">71</xref>].</p>
      </sec>
      <sec id="Sec16">
        <title>VAE-regularized fast SeqProp with activity-regularization</title>
        <p id="Par69">In the Additional file <xref rid="MOESM1" ref-type="media">1</xref> (Figure S3F), we use the predictor MPRA-DragoNN to design maximally HepG2-specific enhancer sequences, and use activity-regularization on (some of) the internal layers of the predictor to regularize the optimization. We maximize the predicted fitness score <inline-formula id="IEq141"><alternatives><tex-math id="M315">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {P}(\delta (\varvec{l}))$$\end{document}</tex-math><mml:math id="M316"><mml:mrow><mml:mi mathvariant="script">P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>δ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq141.gif"/></alternatives></inline-formula> (and minimize the VAE-loss as before) while also minimizing a margin loss applied to the sum of a subset of convolutional activation maps <inline-formula id="IEq142"><alternatives><tex-math id="M317">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {C}_{k}(\delta (\varvec{l}))$$\end{document}</tex-math><mml:math id="M318"><mml:mrow><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>δ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq142.gif"/></alternatives></inline-formula>:<disp-formula id="Equ15"><label>15</label><alternatives><tex-math id="M319">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \begin{aligned} \min _{\varvec{l}}&amp;- \mathcal {P}(\delta (\varvec{l})) + \lambda \cdot \text {max}\big [\log _{10} p_{\text {ref}} - \log _{10} p_{\text {VAE}}(\delta (\varvec{l})) - \rho , 0 \big ]\\&amp;+ \eta _{1} \cdot \text {max}\big [\mathcal {C}_{1}(\delta (\varvec{l})) - C_{1}, 0 \big ] + ... + \eta _{K} \cdot \text {max}\big [\mathcal {C}_{K}(\delta (\varvec{l})) - C_{K}, 0 \big ] \end{aligned} \end{aligned}$$\end{document}</tex-math><mml:math id="M320" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:munder><mml:mo movablelimits="true">min</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow></mml:munder></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>-</mml:mo><mml:mi mathvariant="script">P</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>δ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mi>λ</mml:mi><mml:mo>·</mml:mo><mml:mtext>max</mml:mtext><mml:mrow><mml:mo maxsize="1.2em" minsize="1.2em" stretchy="true">[</mml:mo></mml:mrow><mml:msub><mml:mo>log</mml:mo><mml:mn>10</mml:mn></mml:msub><mml:msub><mml:mi>p</mml:mi><mml:mtext>ref</mml:mtext></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mo>log</mml:mo><mml:mn>10</mml:mn></mml:msub><mml:msub><mml:mi>p</mml:mi><mml:mtext>VAE</mml:mtext></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>δ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>-</mml:mo><mml:mi>ρ</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mrow><mml:mo maxsize="1.2em" minsize="1.2em" stretchy="true">]</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi>η</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>·</mml:mo><mml:mtext>max</mml:mtext><mml:mrow><mml:mo maxsize="1.2em" minsize="1.2em" stretchy="true">[</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>δ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>-</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mrow><mml:mo maxsize="1.2em" minsize="1.2em" stretchy="true">]</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mi>η</mml:mi><mml:mi>K</mml:mi></mml:msub><mml:mo>·</mml:mo><mml:mtext>max</mml:mtext><mml:mrow><mml:mo maxsize="1.2em" minsize="1.2em" stretchy="true">[</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mi>K</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>δ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>-</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>K</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mrow><mml:mo maxsize="1.2em" minsize="1.2em" stretchy="true">]</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="12859_2021_4437_Article_Equ15.gif" position="anchor"/></alternatives></disp-formula><fig id="Fig1"><label>Fig. 1</label><caption><p>Fast activation maximization for sequence design. <bold>a</bold> The Fast SeqProp pipeline. A normalization layer is prepended to a softmax layer, which is used as parameters to a sampling layer. <bold>b</bold> Maximizing the predictors DragoNN (SPI1), DeepSEA (CTCF Dnd41), MPRA-DragoNN (SV40), Optimus 5’ and APARENT</p></caption><graphic xlink:href="12859_2021_4437_Fig1_HTML" id="MO19"/></fig><fig id="Fig2"><label>Fig. 2</label><caption><p>Example designed sequences. Softmax sequences (PSSMs) generated by the PWM and Fast SeqProp methods after 20,000 updates of gradient ascent updates with default optimizer parameters (Adam). The logit matrices <inline-formula id="IEq143"><alternatives><tex-math id="M321">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{l}$$\end{document}</tex-math><mml:math id="M322"><mml:mrow><mml:mi mathvariant="bold-italic">l</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq143.gif"/></alternatives></inline-formula> were uniformly randomly initialized prior to optimization. Identified cis-regulatory motifs annotated above each sequence</p></caption><graphic xlink:href="12859_2021_4437_Fig2_HTML" id="MO20"/></fig><fig id="Fig3"><label>Fig. 3</label><caption><p>Regularized sequence design. <bold>a</bold> Top: VAE-regularized Fast SeqProp. A variational autoencoder (VAE) is used to control the estimated likelihood of designed sequences during gradient ascent optimization. Bottom: Estimated VAE log likelihood distribution of random sequences (green), test sequences from the MPRA-DragoNN dataset (orange) and designed sequences (red), using Fast SeqProp without and with VAE regularization (top and bottom histogram respectively). <bold>b</bold> Oracle fitness score trajectories (APARENT, MPRA-DragoNN and Optimus 5’) and validation model score trajectories (DeeReCT-APA, iEnhancer-2L and retrained Optimus 5’) as a function of the cumulative number of predictor calls made during the sequence design phase. Shown are the median scores across 10 samples per design method, for three repeats. <bold>c</bold> Example designed sequences for APARENT, MPRA-DragoNN and Optimus 5’, using Fast SeqProp with and without VAE-regularization. Oracle and validation model scores are annotated on the right</p></caption><graphic xlink:href="12859_2021_4437_Fig3_HTML" id="MO21"/></fig><fig id="Fig4"><label>Fig. 4</label><caption><p>Protein structure optimization. <bold>a</bold> Protein sequences are designed to minimize the KL-divergence between predicted and target distance and angle distributions. The one-hot pattern is used for two of the trRosetta inputs. <bold>b</bold> Generating sequences which conform to the target predicted structure of a Sensor Histidine Kinase. Simulated Annealing was tested at several initial temperatures, with 1 substitution per step. Similarly, SeqProp and Fast SeqProp was tested at several combinations of learning rate and momentum. <bold>c</bold> Predicted residue distance distributions after 200 iterations</p></caption><graphic xlink:href="12859_2021_4437_Fig4_HTML" id="MO22"/></fig></p>
      </sec>
    </sec>
    <sec id="Sec17">
      <title>Predictor models</title>
      <p id="Par70">We designed sequences for five distinct DNA- or RNA deep learning predictors. For each of these models, we defined one of their (potentially many) outputs as the classification or regression score <inline-formula id="IEq144"><alternatives><tex-math id="M323">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {P}(\varvec{x}) \in \mathbb {R}$$\end{document}</tex-math><mml:math id="M324"><mml:mrow><mml:mi mathvariant="script">P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq144.gif"/></alternatives></inline-formula> to maximize in Eq. <xref rid="Equ1" ref-type="">1</xref>. We also designed protein sequences according to a 3D protein structure predictor. Here is a brief description of each fitness predictor:</p>
      <p id="Par71"><italic>DragoNN</italic> Predicts the probability of SPI1 transcription factor (TF) binding within a 1000-nt sequence. We define <inline-formula id="IEq145"><alternatives><tex-math id="M325">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {P}(\varvec{x})$$\end{document}</tex-math><mml:math id="M326"><mml:mrow><mml:mi mathvariant="script">P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq145.gif"/></alternatives></inline-formula> as the logit score of the network output. The trained model was downloaded from:<xref ref-type="fn" rid="Fn1">1</xref>.</p>
      <p id="Par72"><italic>DeepSEA</italic> [<xref ref-type="bibr" rid="CR22">22</xref>] Predicts multiple TF binding probabilities and chromatin modifications in a 1000-nt sequence. We define <inline-formula id="IEq146"><alternatives><tex-math id="M327">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {P}(\varvec{x})$$\end{document}</tex-math><mml:math id="M328"><mml:mrow><mml:mi mathvariant="script">P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq146.gif"/></alternatives></inline-formula> as the logit score of the CTCF (Dnd41) output. The trained model was downloaded from:<xref ref-type="fn" rid="Fn2">2</xref>.</p>
      <p id="Par73"><italic>APARENT</italic> [<xref ref-type="bibr" rid="CR29">29</xref>] Predicts proximal alternative polyadenylation isoform abundance in a 206-nt sequence. We define <inline-formula id="IEq147"><alternatives><tex-math id="M329">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {P}(\varvec{x})$$\end{document}</tex-math><mml:math id="M330"><mml:mrow><mml:mi mathvariant="script">P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq147.gif"/></alternatives></inline-formula> as the logit score of the network output. The trained model was downloaded from:<xref ref-type="fn" rid="Fn3">3</xref>.</p>
      <p id="Par74"><italic>MPRA-DragoNN</italic> [<xref ref-type="bibr" rid="CR24">24</xref>] Predicts transcriptional activity of a 145-nt promoter sequence. We define <inline-formula id="IEq148"><alternatives><tex-math id="M331">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {P}(\varvec{x})$$\end{document}</tex-math><mml:math id="M332"><mml:mrow><mml:mi mathvariant="script">P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq148.gif"/></alternatives></inline-formula> as the sixth output (SV40) of the ’Deep Factorized’ model. The trained model was downloaded from:<xref ref-type="fn" rid="Fn4">4</xref>.</p>
      <p id="Par75"><italic>Optimus 5’</italic> [<xref ref-type="bibr" rid="CR25">25</xref>] Predicts mean ribosome load in a 50-nt sequence. <inline-formula id="IEq149"><alternatives><tex-math id="M333">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {P}(\varvec{x})$$\end{document}</tex-math><mml:math id="M334"><mml:mrow><mml:mi mathvariant="script">P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq149.gif"/></alternatives></inline-formula> is the (non-scaled) output of the ’evolution’ model. The trained model was downloaded from:<xref ref-type="fn" rid="Fn5">5</xref>.</p>
      <p id="Par76"><italic>trRosetta</italic> [<xref ref-type="bibr" rid="CR34">34</xref>] Predicts amino acid residue distance distributions and angle distributions of the input primary sequence. We defined the optimization objective as minimizing the mean KL-divergence between the predicted distance- and angle distributions of the designed sequence compared to a target structure (see the definition in Section ’Protein Structure Optimization’ of the main paper). The trained model was downloaded from:<xref ref-type="fn" rid="Fn6">6</xref>.</p>
      <p id="Par77">All optimization experiments were carried out in Keras (Chollet, 2015) using Adam with default parameters [<xref ref-type="bibr" rid="CR72">72</xref>]. Some predictor models were ported using <italic>pytorch2keras</italic>.</p>
    </sec>
    <sec id="Sec18">
      <title>Validation models</title>
      <p id="Par78">When designing sequences for the predictor models listed in the previous section, we computed validation scores based on the following held-out models (i.e. models we did not explicitly optimize for):</p>
      <p id="Par79"><italic>DeeReCT-APA</italic> [<xref ref-type="bibr" rid="CR31">31</xref>] Predicts relative isoform abundances for multiple competing polyadenylation signals. The model was trained on mouse 3’ sequencing data. We used the model to score a particular designed polyadenylation signal by predicting its relative use when competing with a strong, fixed distal polyadenylation signal. The model was trained using the code repository at:<xref ref-type="fn" rid="Fn7">7</xref>.</p>
      <p id="Par80"><italic>DeepPASTA</italic> [<xref ref-type="bibr" rid="CR30">30</xref>] Predicts relative isoform abundance of two competing polyadenylation signals. Several model versions exists, we used the one trained on human brain tissue 3’ sequencing data. To score a particular designed polyadenylation signal, we predicted its relative use when competing with a strong, fixed distal signal. The trained model was downloaded from:<xref ref-type="fn" rid="Fn8">8</xref>.</p>
      <p id="Par81"><italic>iEnhancer-ECNN</italic> [<xref ref-type="bibr" rid="CR62">62</xref>] Detects genomic enhancer regions and predicts whether it is a weak or strong enhancer. We used the product of these two probability outputs to score each designed enhancer sequence. The model was trained using the code repository at:<xref ref-type="fn" rid="Fn9">9</xref>.</p>
      <p id="Par82"><italic>EnhancerP-2L</italic> [<xref ref-type="bibr" rid="CR63">63</xref>] Detects genomic enhancer regions and predicts whether it is a weak or strong enhancer. For a sample of generated sequences per design method, we calculated the mean detect/not detect prediction rate, the mean weak/strong prediction rate and the mean p-score. The model was available via a web application at:<xref ref-type="fn" rid="Fn10">10</xref>.</p>
      <p id="Par83"><italic>Retrained Optimus 5’</italic> [<xref ref-type="bibr" rid="CR25">25</xref>] A retrained version of Optimus 5’, where the training data had been complemented with extreme sequences (such as long single-nucleotide repeats, etc.). The trained model was downloaded from:<xref ref-type="fn" rid="Fn11">11</xref>.</p>
    </sec>
    <sec id="Sec19">
      <title>Auxiliary models</title>
      <p id="Par84">In Fig. <xref rid="Fig3" ref-type="fig">3</xref>, we trained a variational autoencoder (VAE) [<xref ref-type="bibr" rid="CR59">59</xref>] and a generative adversarial network (GAN) [<xref ref-type="bibr" rid="CR60">60</xref>] on a subset of the data that was originally used to train each of the predictor oracles APARENT, MPRA-DragoNN and Optimus 5’. For each design task, we selected a sample of 5000 sequences with highest observed fitness and a sample of 5000 randomly selected sequences. The VAE, which was based on a residual network architecture [<xref ref-type="bibr" rid="CR73">73</xref>], was trained on the high-fitness subset of sequences. The W-GAN, which was based on the architecture of Gupta et al. [<xref ref-type="bibr" rid="CR38">38</xref>], was trained on the random subset of sequences.</p>
    </sec>
    <sec id="Sec20">
      <title>Other design methods</title>
      <p id="Par85">A selection of design methods were used for benchmark comparisons in Fig. <xref rid="Fig3" ref-type="fig">3</xref>. Here we describe how they were executed and what parameter settings were used:</p>
      <p id="Par86"><italic>CbAS</italic> [<xref ref-type="bibr" rid="CR39">39</xref>] The procedure was started from the VAE which had been pre-trained on the high-fitness dataset. It was executed for 150 rounds and, depending on design task, either 100 or 1000 sequences were sampled and used for weighted re-training at the end of each round (whichever resulted in higher fitness scores). The threshold was set to either the 60th or 80th pecentile of fitness scores predicted on the training data (whichever resulted in more stable fitness score trajectories). The VAE was trained for either 1 or 10 epochs at the end of each round (whichever resulted in more stable fitness scores—for some tasks, the fitness scores would drop abruptly after only a few sampling rounds when training the VAE for 10 epochs per round). For the benchmark comparison in the main paper, the standard deviation of the predictions were set to a small constant value ranging between 0.02 and 0.1, depending on application (since none of the pre-trained oracles APARENT, MPRA-DragoNN or Optimus 5’ predicts deviation, we used a small constant deviation that was <inline-formula id="IEq150"><alternatives><tex-math id="M335">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sim 50$$\end{document}</tex-math><mml:math id="M336"><mml:mrow><mml:mo>∼</mml:mo><mml:mn>50</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4437_Article_IEq150.gif"/></alternatives></inline-formula>x smaller than the maximum possible predicted value). In the Additional file <xref rid="MOESM1" ref-type="media">1</xref>, where we use oracles with uncertainty estimation, we also supplied the predicted standard deviation to the CbAS survival function. The code was adapted from:<xref ref-type="fn" rid="Fn12">12</xref>.</p>
      <p id="Par87"><italic>RWR</italic> [<xref ref-type="bibr" rid="CR61">61</xref>] The procedure was started from the VAE which had been pre-trained on the high-fitness dataset. It was executed for 150 rounds and 100 or 1000 sequence samples were used for weighted re-training at the end of each round (whichever resulted in higher fitness scores). The VAE was trained for 10 epochs each round. The code was adapted from:<xref ref-type="fn" rid="Fn13">13</xref>.</p>
      <p id="Par88"><italic>AM-VAE</italic> [<xref ref-type="bibr" rid="CR44">44</xref>] This method performs activation maximization by gradient ascent through a pre-trained VAE in order to design sequences. The procedure was started from the VAE which had been pre-trained on the high-fitness dataset. Each sequence was optimized for 2000–5000 updates depending on design task (using the Adam optimizer). A normally distributed noise term was added to the gradients to help overcome potential local minima. The code was adapted from:<xref ref-type="fn" rid="Fn14">14</xref>.</p>
      <p id="Par89"><italic>FB-GAN</italic> [<xref ref-type="bibr" rid="CR38">38</xref>] The FB-GAN procedure was started from the W-GAN which had been pre-trained on a random sample of sequences. The method was executed for 150 epochs and 960 sequences were sampled and used for feedback at the end of each epoch. We either set the feedback threshold to a fixed value (the 80th percentile of fitness scores predicted on the high-fitness dataset), or we adaptively re-set the threshold to a certain percentile as measured on the 960 sampled sequences at the end of each epoch. The code was adapted from:<xref ref-type="fn" rid="Fn15">15</xref>.</p>
      <p id="Par90"><italic>FB-VAE</italic> [<xref ref-type="bibr" rid="CR38">38</xref>] A VAE-based version of the FB-GAN. The procedure was started from the VAE which had been pre-trained on the high-fitness dataset. It was executed for 150 epochs and 100 or 1000 sequence samples were used for feedback at the end of each epoch (whichever resulted in higher fitness scores). A fixed threshold was used (either the 60th or 80th percentile as predicted on the high-fitness data). The code was adapted from:<xref ref-type="fn" rid="Fn16">16</xref>.</p>
    </sec>
    <sec id="Sec21">
      <title>Graph tools</title>
      <p id="Par91">All graphs were made with Matplotlib [<xref ref-type="bibr" rid="CR74">74</xref>].</p>
    </sec>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Information</title>
    <sec id="Sec22">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="12859_2021_4437_MOESM1_ESM.pdf">
            <caption>
              <p><bold>Additional file 1.</bold> Supplementary Information, containing additional benchmark comparisons, design results and other analyses.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>5’ UTR</term>
        <def>
          <p id="Par4">5’ untranslated region</p>
        </def>
      </def-item>
      <def-item>
        <term>3’ UTR</term>
        <def>
          <p id="Par5">3’ untranslated region</p>
        </def>
      </def-item>
      <def-item>
        <term>AAV</term>
        <def>
          <p id="Par6">adeno-associated virus</p>
        </def>
      </def-item>
      <def-item>
        <term>AM</term>
        <def>
          <p id="Par7">activation maximization</p>
        </def>
      </def-item>
      <def-item>
        <term>APA</term>
        <def>
          <p id="Par8">alternative polyadenylation</p>
        </def>
      </def-item>
      <def-item>
        <term>CbAS</term>
        <def>
          <p id="Par9">conditioning by adaptive sampling</p>
        </def>
      </def-item>
      <def-item>
        <term>CNN</term>
        <def>
          <p id="Par10">convolutional neural network</p>
        </def>
      </def-item>
      <def-item>
        <term>DEN</term>
        <def>
          <p id="Par11">deep exploration network</p>
        </def>
      </def-item>
      <def-item>
        <term>DCA</term>
        <def>
          <p id="Par12">direct coupling analysis</p>
        </def>
      </def-item>
      <def-item>
        <term>DNA</term>
        <def>
          <p id="Par13">deoxyribonucleic acid</p>
        </def>
      </def-item>
      <def-item>
        <term>FB-GAN</term>
        <def>
          <p id="Par14">feedback GAN</p>
        </def>
      </def-item>
      <def-item>
        <term>GAN</term>
        <def>
          <p id="Par15">generative adversarial network</p>
        </def>
      </def-item>
      <def-item>
        <term>KL</term>
        <def>
          <p id="Par16">Kullback–Leibler</p>
        </def>
      </def-item>
      <def-item>
        <term>LSTM</term>
        <def>
          <p id="Par17">long short-term memory</p>
        </def>
      </def-item>
      <def-item>
        <term>ML</term>
        <def>
          <p id="Par18">machine learning</p>
        </def>
      </def-item>
      <def-item>
        <term>MPRA</term>
        <def>
          <p id="Par19">massively parallel reporter assay</p>
        </def>
      </def-item>
      <def-item>
        <term>MSA</term>
        <def>
          <p id="Par20">multiple-sequence alignment</p>
        </def>
      </def-item>
      <def-item>
        <term>OOD</term>
        <def>
          <p id="Par21">out-of-distribution</p>
        </def>
      </def-item>
      <def-item>
        <term>PAS</term>
        <def>
          <p id="Par22">polyadenylation signal</p>
        </def>
      </def-item>
      <def-item>
        <term>PSSM</term>
        <def>
          <p id="Par23">position-specific scoring matrix</p>
        </def>
      </def-item>
      <def-item>
        <term>PWM</term>
        <def>
          <p id="Par24">position-weight matrix</p>
        </def>
      </def-item>
      <def-item>
        <term>RNA</term>
        <def>
          <p id="Par25">ribonucleic acid</p>
        </def>
      </def-item>
      <def-item>
        <term>RWR</term>
        <def>
          <p id="Par26">reward-weighted regression</p>
        </def>
      </def-item>
      <def-item>
        <term>SeqProp</term>
        <def>
          <p id="Par27">sequence backpropagation</p>
        </def>
      </def-item>
      <def-item>
        <term>ST</term>
        <def>
          <p id="Par28">straight-through</p>
        </def>
      </def-item>
      <def-item>
        <term>TF</term>
        <def>
          <p id="Par29">transcription factor</p>
        </def>
      </def-item>
      <def-item>
        <term>VAE</term>
        <def>
          <p id="Par30">variational autoencoder</p>
        </def>
      </def-item>
      <def-item>
        <term>W-GAN</term>
        <def>
          <p id="Par31">Wasserstein GAN</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn id="Fn1">
      <label>1</label>
      <p id="Par94"><ext-link ext-link-type="uri" xlink:href="http://mitra.stanford.edu/kundaje/projects/dragonn/SPI1.classification.model.hdf5">http://mitra.stanford.edu/kundaje/projects/dragonn/SPI1.classification.model.hdf5</ext-link>.</p>
    </fn>
    <fn id="Fn2">
      <label>2</label>
      <p id="Par95"><ext-link ext-link-type="uri" xlink:href="http://deepsea.princeton.edu/media/code/deepsea.v0.94c.tar.gz">http://deepsea.princeton.edu/media/code/deepsea.v0.94c.tar.gz</ext-link>.</p>
    </fn>
    <fn id="Fn3">
      <label>3</label>
      <p id="Par96"><ext-link ext-link-type="uri" xlink:href="https://github.com/johli/aparent/tree/master/saved_models">https://github.com/johli/aparent/tree/master/saved_models</ext-link>.</p>
    </fn>
    <fn id="Fn4">
      <label>4</label>
      <p id="Par97"><ext-link ext-link-type="uri" xlink:href="https://github.com/kundajelab/MPRA-DragoNN/tree/master/kipoi/DeepFactorizedModel">https://github.com/kundajelab/MPRA-DragoNN/tree/master/kipoi/DeepFactorizedModel</ext-link>.</p>
    </fn>
    <fn id="Fn5">
      <label>5</label>
      <p id="Par98"><ext-link ext-link-type="uri" xlink:href="https://github.com/pjsample/human_5utr_modeling/tree/master/modeling/saved_models">https://github.com/pjsample/human_5utr_modeling/tree/master/modeling/saved_models</ext-link>.</p>
    </fn>
    <fn id="Fn6">
      <label>6</label>
      <p id="Par99"><ext-link ext-link-type="uri" xlink:href="https://files.ipd.uw.edu/pub/trRosetta/model2019_07.tar.bz2">https://files.ipd.uw.edu/pub/trRosetta/model2019_07.tar.bz2</ext-link>.</p>
    </fn>
    <fn id="Fn7">
      <label>7</label>
      <p id="Par100"><ext-link ext-link-type="uri" xlink:href="https://github.com/lzx325/DeeReCT-APA-repo">https://github.com/lzx325/DeeReCT-APA-repo</ext-link>.</p>
    </fn>
    <fn id="Fn8">
      <label>8</label>
      <p id="Par101"><ext-link ext-link-type="uri" xlink:href="https://www.cs.ucr.edu/%7eaaref001/DeepPASTA_site.html">https://www.cs.ucr.edu/~aaref001/DeepPASTA_site.html</ext-link>.</p>
    </fn>
    <fn id="Fn9">
      <label>9</label>
      <p id="Par102"><ext-link ext-link-type="uri" xlink:href="https://github.com/ngphubinh/enhancers">https://github.com/ngphubinh/enhancers</ext-link>.</p>
    </fn>
    <fn id="Fn10">
      <label>10</label>
      <p id="Par103"><ext-link ext-link-type="uri" xlink:href="http://biopred.org/enpred/pred">http://biopred.org/enpred/pred</ext-link>.</p>
    </fn>
    <fn id="Fn11">
      <label>11</label>
      <p id="Par104"><ext-link ext-link-type="uri" xlink:href="https://github.com/pjsample/human_5utr_modeling/tree/master/modeling/saved_models">https://github.com/pjsample/human_5utr_modeling/tree/master/modeling/saved_models</ext-link>.</p>
    </fn>
    <fn id="Fn12">
      <label>12</label>
      <p id="Par105"><ext-link ext-link-type="uri" xlink:href="https://github.com/dhbrookes/CbAS/">https://github.com/dhbrookes/CbAS/</ext-link>.</p>
    </fn>
    <fn id="Fn13">
      <label>13</label>
      <p id="Par106"><ext-link ext-link-type="uri" xlink:href="https://github.com/dhbrookes/CbAS/">https://github.com/dhbrookes/CbAS/</ext-link>.</p>
    </fn>
    <fn id="Fn14">
      <label>14</label>
      <p id="Par107"><ext-link ext-link-type="uri" xlink:href="https://github.com/dhbrookes/CbAS/">https://github.com/dhbrookes/CbAS/</ext-link>.</p>
    </fn>
    <fn id="Fn15">
      <label>15</label>
      <p id="Par108"><ext-link ext-link-type="uri" xlink:href="https://github.com/av1659/fbgan">https://github.com/av1659/fbgan</ext-link>.</p>
    </fn>
    <fn id="Fn16">
      <label>16</label>
      <p id="Par109"><ext-link ext-link-type="uri" xlink:href="https://github.com/dhbrookes/CbAS/">https://github.com/dhbrookes/CbAS/</ext-link>.</p>
    </fn>
    <fn>
      <p>
        <bold>Publisher's Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <notes notes-type="author-contribution">
    <title>Authors' contributions</title>
    <p>J.L. developed the computational method. J.L. and G.S. designed the computational experiments. J.L. and G.S. wrote the manuscript. All authors read and approved the final manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>This work was supported by NIH Awards R01HG009136, R01HG009892 and R21HG010945 and by NSF Award 2021552. The funding body did not play any role in the design of the study and collection, analysis, and interpretation of data nor in writing the manuscript.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>All code is available at <ext-link ext-link-type="uri" xlink:href="http://www.github.com/johli/seqprop">http://www.github.com/johli/seqprop</ext-link>. External software and data used in this study are listed in the Methods section.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar2" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par92">The authors declare that they have no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <mixed-citation publication-type="other">Biswas S, Kuznetsov G, Ogden PJ, Conway NJ, Adams RP, Church GM. Toward machine-guided design of proteins. bioRxiv; 2018.</mixed-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Greener</surname>
            <given-names>JG</given-names>
          </name>
          <name>
            <surname>Moffat</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Jones</surname>
            <given-names>DT</given-names>
          </name>
        </person-group>
        <article-title>Design of metalloproteins and novel protein folds using variational autoencoders</article-title>
        <source>Sci Rep</source>
        <year>2018</year>
        <volume>8</volume>
        <fpage>1</fpage>
        <lpage>12</lpage>
        <pub-id pub-id-type="doi">10.1038/s41598-018-34533-1</pub-id>
        <pub-id pub-id-type="pmid">29311619</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <mixed-citation publication-type="other">Anishchenko I, Chidyausiku TM, Ovchinnikov S, Pellock SJ, Baker D. De novo protein design by deep network hallucination. bioRxiv; 2020.</mixed-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <mixed-citation publication-type="other">Wang Y, Wang H, Liu L, Wang X. Synthetic promoter design in <italic>Escherichia coli</italic> based on generative adversarial network. bioRxiv; 2019.</mixed-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Repecka</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Jauniskis</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Karpus</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Rembeza</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Rokaitis</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Zrimec</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Poviloniene</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Laurynenas</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Viknander</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Abuajwa</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Savolainen</surname>
            <given-names>O</given-names>
          </name>
        </person-group>
        <article-title>Expanding functional protein sequence spaces using generative adversarial networks</article-title>
        <source>Nat Mach Intell</source>
        <year>2021</year>
        <volume>3</volume>
        <fpage>324</fpage>
        <lpage>333</lpage>
        <pub-id pub-id-type="doi">10.1038/s42256-021-00310-5</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Shin</surname>
            <given-names>JE</given-names>
          </name>
          <name>
            <surname>Riesselman</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Kollasch</surname>
            <given-names>AW</given-names>
          </name>
          <name>
            <surname>McMahon</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Simon</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Sander</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Manglik</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Kruse</surname>
            <given-names>AC</given-names>
          </name>
          <name>
            <surname>Marks</surname>
            <given-names>DS</given-names>
          </name>
        </person-group>
        <article-title>Protein design and variant prediction using autoregressive generative models</article-title>
        <source>Nat Commun</source>
        <year>2021</year>
        <volume>12</volume>
        <fpage>1</fpage>
        <lpage>11</lpage>
        <pub-id pub-id-type="doi">10.1038/s41467-020-20314-w</pub-id>
        <pub-id pub-id-type="pmid">33397941</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <mixed-citation publication-type="other">Amimeur T, Shaver JM, Ketchem RR, Taylor JA, Clark RH, Smith J, Citters DV, Siska CC, Smidt P, Sprague M, Kerwin BA. Designing feature-controlled humanoid antibody discovery libraries using generative adversarial networks. bioRxiv; 2020.</mixed-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wang</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Tai</surname>
            <given-names>PW</given-names>
          </name>
          <name>
            <surname>Gao</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>Adeno-associated virus vector as a platform for gene therapy delivery</article-title>
        <source>Nat Rev Drug Discov</source>
        <year>2019</year>
        <volume>18</volume>
        <fpage>358</fpage>
        <lpage>378</lpage>
        <pub-id pub-id-type="doi">10.1038/s41573-019-0012-9</pub-id>
        <pub-id pub-id-type="pmid">30710128</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Das</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Sercu</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Wadhawan</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Padhi</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Gehrmann</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Cipcigan</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Chenthamarakshan</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Strobelt</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Santos</surname>
            <given-names>CD</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>PY</given-names>
          </name>
          <name>
            <surname>Yang</surname>
            <given-names>YY</given-names>
          </name>
        </person-group>
        <article-title>Accelerated antimicrobial discovery via deep generative models and molecular dynamics simulations</article-title>
        <source>Nat Biomed Eng</source>
        <year>2021</year>
        <volume>5</volume>
        <fpage>613</fpage>
        <lpage>623</lpage>
        <pub-id pub-id-type="doi">10.1038/s41551-021-00689-x</pub-id>
        <pub-id pub-id-type="pmid">33707779</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kalita</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Padhi</surname>
            <given-names>AK</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>KY</given-names>
          </name>
          <name>
            <surname>Tripathi</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>Design of a peptide-based subunit vaccine against novel coronavirus sars-cov-2</article-title>
        <source>Microb Pathog</source>
        <year>2020</year>
        <volume>145</volume>
        <fpage>104236</fpage>
        <pub-id pub-id-type="doi">10.1016/j.micpath.2020.104236</pub-id>
        <pub-id pub-id-type="pmid">32376359</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <mixed-citation publication-type="other">Liu G, Carter B, Bricken T, Jain S, Viard M, Carrington M, Gifford DK. Robust computational design and evaluation of peptide vaccines for cellular immunity with application to sars-cov-2. bioRxiv; 2020.</mixed-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <mixed-citation publication-type="other">Deaton RJ, Murphy RC, Garzon MH, Franceschetti DR, Jr SES. Good encodings for dna-based solutions to combinatorial problems. In: DNA based computers; 1996. p. 247–258.</mixed-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hao</surname>
            <given-names>GF</given-names>
          </name>
          <name>
            <surname>Xu</surname>
            <given-names>WF</given-names>
          </name>
          <name>
            <surname>Yang</surname>
            <given-names>SG</given-names>
          </name>
          <name>
            <surname>Yang</surname>
            <given-names>GF</given-names>
          </name>
        </person-group>
        <article-title>Multiple simulated annealing-molecular dynamics (msa-md) for conformational space search of peptide and miniprotein</article-title>
        <source>Sci Rep</source>
        <year>2015</year>
        <volume>5</volume>
        <fpage>15568</fpage>
        <pub-id pub-id-type="doi">10.1038/srep15568</pub-id>
        <pub-id pub-id-type="pmid">26492886</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <mixed-citation publication-type="other">Belanger D, Vora S, Mariet Z, Deshpande R, Dohan D, Angermueller C, Murphy K, Chapelle O, Colwell L. Biological sequences design using batched Bayesian optimization; 2019.</mixed-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Xiao</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Xu</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Pan</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>A hybrid quantum chaotic swarm evolutionary algorithm for dna encoding</article-title>
        <source>Comput Math Appl</source>
        <year>2009</year>
        <volume>57</volume>
        <fpage>1949</fpage>
        <lpage>1958</lpage>
        <pub-id pub-id-type="doi">10.1016/j.camwa.2008.10.021</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <mixed-citation publication-type="other">Ibrahim Z, Khalid NK, Lim KS, Buyamin S, Mukred JAA. A binary vector evaluated particle swarm optimization based method for dna sequence design problem. In: 2011 IEEE student conference on research and development; 2011. p. 160–164.</mixed-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <mixed-citation publication-type="other">Mustaza SM, Abidin AFZ, Ibrahim Z, Shamsudin MA, Husain AR, Mukred JAA. A modified computational model of ant colony system in dna sequence design. In: 2011 IEEE student conference on research and development; 2011. p. 169–173.</mixed-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <mixed-citation publication-type="other">Angermueller C, Belanger D, Gane A, Mariet Z, Dohan D, Murphy K, Colwell L, Sculley D. Population-based black-box optimization for biological sequence design. arXiv; 2020.</mixed-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Eraslan</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Avsec</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Gagneur</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Theis</surname>
            <given-names>FJ</given-names>
          </name>
        </person-group>
        <article-title>Deep learning: new computational modelling techniques for genomics</article-title>
        <source>Nat Rev Genet</source>
        <year>2019</year>
        <volume>20</volume>
        <fpage>389</fpage>
        <lpage>403</lpage>
        <pub-id pub-id-type="doi">10.1038/s41576-019-0122-6</pub-id>
        <pub-id pub-id-type="pmid">30971806</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zou</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Huss</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Abid</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Mohammadi</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Torkamani</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Telenti</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>A primer on deep learning in genomics</article-title>
        <source>Nat Genet</source>
        <year>2019</year>
        <volume>51</volume>
        <fpage>12</fpage>
        <lpage>18</lpage>
        <pub-id pub-id-type="doi">10.1038/s41588-018-0295-5</pub-id>
        <pub-id pub-id-type="pmid">30478442</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Alipanahi</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Delong</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Weirauch</surname>
            <given-names>MT</given-names>
          </name>
          <name>
            <surname>Frey</surname>
            <given-names>BJ</given-names>
          </name>
        </person-group>
        <article-title>Predicting the sequence specificities of dna- and rna-binding proteins by deep learning</article-title>
        <source>Nat Biotechnol</source>
        <year>2015</year>
        <volume>33</volume>
        <fpage>831</fpage>
        <lpage>838</lpage>
        <pub-id pub-id-type="doi">10.1038/nbt.3300</pub-id>
        <pub-id pub-id-type="pmid">26213851</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhou</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Troyanskaya</surname>
            <given-names>OG</given-names>
          </name>
        </person-group>
        <article-title>Predicting effects of noncoding variants with deep learning-based sequence model</article-title>
        <source>Nat Methods</source>
        <year>2015</year>
        <volume>12</volume>
        <fpage>931</fpage>
        <lpage>934</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.3547</pub-id>
        <pub-id pub-id-type="pmid">26301843</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <mixed-citation publication-type="other">Tareen A, Kinney JB. Biophysical models of cis-regulation as interpretable neural networks. arXiv; 2019.</mixed-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Movva</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Greenside</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Marinov</surname>
            <given-names>GK</given-names>
          </name>
          <name>
            <surname>Nair</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Shrikumar</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Kundaje</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Deciphering regulatory dna sequences and noncoding genetic variants using neural network models of massively parallel reporter assays</article-title>
        <source>PLoS ONE.</source>
        <year>2019</year>
        <volume>14</volume>
        <fpage>e0218073</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0218073</pub-id>
        <pub-id pub-id-type="pmid">31206543</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <mixed-citation publication-type="other">Sample PJ, Wang B, Reid DW, Presnyak V, McFadyen IJ, Morris DR, Seelig G. Human 5’ utr design and variant effect prediction from a massively parallel translation assay. Nat Biotechnol. 2019;37:803–9.</mixed-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <mixed-citation publication-type="other">Karollus A, Avsec Z, Gagneur J. Predicting mean ribosome load for 5’utr of any length using deep learning. PLoS Comput Biol. 2021;17:1008982.</mixed-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jaganathan</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Panagiotopoulou</surname>
            <given-names>SK</given-names>
          </name>
          <name>
            <surname>McRae</surname>
            <given-names>JF</given-names>
          </name>
          <name>
            <surname>Darbandi</surname>
            <given-names>SF</given-names>
          </name>
          <name>
            <surname>Knowles</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>YI</given-names>
          </name>
          <name>
            <surname>Kosmicki</surname>
            <given-names>JA</given-names>
          </name>
          <name>
            <surname>Arbelaez</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Cui</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Schwartz</surname>
            <given-names>GB</given-names>
          </name>
          <name>
            <surname>Chow</surname>
            <given-names>ED</given-names>
          </name>
        </person-group>
        <article-title>Predicting splicing from primary sequence with deep learning</article-title>
        <source>Cell</source>
        <year>2019</year>
        <volume>176</volume>
        <fpage>535</fpage>
        <lpage>548</lpage>
        <pub-id pub-id-type="doi">10.1016/j.cell.2018.12.015</pub-id>
        <pub-id pub-id-type="pmid">30661751</pub-id>
      </element-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cheng</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Nguyen</surname>
            <given-names>TYD</given-names>
          </name>
          <name>
            <surname>Cygan</surname>
            <given-names>KJ</given-names>
          </name>
          <name>
            <surname>Çelik</surname>
            <given-names>MH</given-names>
          </name>
          <name>
            <surname>Fairbrother</surname>
            <given-names>WG</given-names>
          </name>
          <name>
            <surname>Gagneur</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Mmsplice: modular modeling improves the predictions of genetic variant effects on splicing</article-title>
        <source>Genome Biol</source>
        <year>2019</year>
        <volume>20</volume>
        <fpage>48</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-019-1653-z</pub-id>
        <pub-id pub-id-type="pmid">30823901</pub-id>
      </element-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bogard</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Linder</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Rosenberg</surname>
            <given-names>AB</given-names>
          </name>
          <name>
            <surname>Seelig</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>A deep neural network for predicting and engineering alternative polyadenylation</article-title>
        <source>Cell</source>
        <year>2019</year>
        <volume>178</volume>
        <fpage>91</fpage>
        <lpage>106</lpage>
        <pub-id pub-id-type="doi">10.1016/j.cell.2019.04.046</pub-id>
        <pub-id pub-id-type="pmid">31178116</pub-id>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Arefeen</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Xiao</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Jiang</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>Deeppasta: deep neural network based polyadenylation site analysis</article-title>
        <source>Bioinformatics</source>
        <year>2019</year>
        <volume>35</volume>
        <fpage>4577</fpage>
        <lpage>4585</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btz283</pub-id>
        <pub-id pub-id-type="pmid">31081512</pub-id>
      </element-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <mixed-citation publication-type="other">Li Z, Li Y, Zhang B, Li Y, Long Y, Zhou J, Zou X, Zhang M, Hu Y, Chen W, Gao X. Deerect-apa: prediction of alternative polyadenylation site usage through deep learning. Genom Proteom Bioinform. 2021. 10.1016/j.gpb.2020.05.004</mixed-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>AlQuraishi</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>End-to-end differentiable learning of protein structure</article-title>
        <source>Cell Syst</source>
        <year>2019</year>
        <volume>8</volume>
        <fpage>292</fpage>
        <lpage>301</lpage>
        <pub-id pub-id-type="doi">10.1016/j.cels.2019.03.006</pub-id>
        <pub-id pub-id-type="pmid">31005579</pub-id>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Senior</surname>
            <given-names>AW</given-names>
          </name>
          <name>
            <surname>Evans</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Jumper</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Kirkpatrick</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Sifre</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Green</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Qin</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Žídek</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Nelson</surname>
            <given-names>AW</given-names>
          </name>
          <name>
            <surname>Bridgland</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Penedones</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Improved protein structure prediction using potentials from deep learning</article-title>
        <source>Nature</source>
        <year>2020</year>
        <volume>577</volume>
        <fpage>706</fpage>
        <lpage>710</lpage>
        <pub-id pub-id-type="doi">10.1038/s41586-019-1923-7</pub-id>
        <pub-id pub-id-type="pmid">31942072</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yang</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Anishchenko</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Park</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Peng</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Ovchinnikov</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Baker</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>Improved protein structure prediction using predicted interresidue orientations</article-title>
        <source>Proc Natl Acad Sci</source>
        <year>2020</year>
        <volume>117</volume>
        <fpage>1496</fpage>
        <lpage>1503</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.1914677117</pub-id>
        <pub-id pub-id-type="pmid">31896580</pub-id>
      </element-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jumper</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Evans</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Pritzel</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Green</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Figurnov</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Ronneberger</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Tunyasuvunakool</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Bates</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Zidek</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Potapenko</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Bridgland</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Highly accurate protein structure prediction with alphafold</article-title>
        <source>Nature</source>
        <year>2021</year>
        <volume>596</volume>
        <fpage>583</fpage>
        <lpage>589</lpage>
        <pub-id pub-id-type="doi">10.1038/s41586-021-03819-2</pub-id>
        <pub-id pub-id-type="pmid">34265844</pub-id>
      </element-citation>
    </ref>
    <ref id="CR36">
      <label>36.</label>
      <mixed-citation publication-type="other">Avsec Z, Agarwal V, Visentin D, Ledsam JR, Grabska-Barwinska A, Taylor KR, Assael Y, Jumber J, Kohli P, Kelley DR. Effective gene expression prediction from sequence by integrating long-range interactions. bioRxiv; 2021.</mixed-citation>
    </ref>
    <ref id="CR37">
      <label>37.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gómez-Bombarelli</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Wei</surname>
            <given-names>JN</given-names>
          </name>
          <name>
            <surname>Duvenaud</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Hernández-Lobato</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Sánchez-Lengeling</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Sheberla</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Aguilera-Iparraguirre</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Hirzel</surname>
            <given-names>TD</given-names>
          </name>
          <name>
            <surname>Adams</surname>
            <given-names>RP</given-names>
          </name>
          <name>
            <surname>Aspuru-Guzik</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Automatic chemical design using a data-driven continuous representation of molecules</article-title>
        <source>ACS Cent Sci</source>
        <year>2018</year>
        <volume>4</volume>
        <fpage>268</fpage>
        <lpage>276</lpage>
        <pub-id pub-id-type="doi">10.1021/acscentsci.7b00572</pub-id>
        <pub-id pub-id-type="pmid">29532027</pub-id>
      </element-citation>
    </ref>
    <ref id="CR38">
      <label>38.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gupta</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Zou</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Feedback gan for dna optimizes protein functions</article-title>
        <source>Nat Mach Intell</source>
        <year>2019</year>
        <volume>1</volume>
        <fpage>105</fpage>
        <lpage>111</lpage>
        <pub-id pub-id-type="doi">10.1038/s42256-019-0017-4</pub-id>
      </element-citation>
    </ref>
    <ref id="CR39">
      <label>39.</label>
      <mixed-citation publication-type="other">Brookes DH, Park H, Listgarten J. Conditioning by adaptive sampling for robust design. arXiv; 2019.</mixed-citation>
    </ref>
    <ref id="CR40">
      <label>40.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yang</surname>
            <given-names>KK</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Arnold</surname>
            <given-names>FH</given-names>
          </name>
        </person-group>
        <article-title>Machine-learning-guided directed evolution for protein engineering</article-title>
        <source>Nat Methods</source>
        <year>2019</year>
        <volume>16</volume>
        <fpage>687</fpage>
        <lpage>694</lpage>
        <pub-id pub-id-type="doi">10.1038/s41592-019-0496-6</pub-id>
        <pub-id pub-id-type="pmid">31308553</pub-id>
      </element-citation>
    </ref>
    <ref id="CR41">
      <label>41.</label>
      <mixed-citation publication-type="other">Costello Z, Martin HG. How to hallucinate functional proteins. arXiv; 2019.</mixed-citation>
    </ref>
    <ref id="CR42">
      <label>42.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Linder</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Bogard</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Rosenberg</surname>
            <given-names>AB</given-names>
          </name>
          <name>
            <surname>Seelig</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>A generative neural network for maximizing fitness and diversity of synthetic dna and protein sequences</article-title>
        <source>Cell Syst</source>
        <year>2020</year>
        <volume>11</volume>
        <fpage>49</fpage>
        <lpage>62</lpage>
        <pub-id pub-id-type="doi">10.1016/j.cels.2020.05.007</pub-id>
        <pub-id pub-id-type="pmid">32711843</pub-id>
      </element-citation>
    </ref>
    <ref id="CR43">
      <label>43.</label>
      <mixed-citation publication-type="other">Lanchantin J, Singh R, Lin Z, Qi Y. Deep motif: visualizing genomic sequence classifications. arXiv; 2016.</mixed-citation>
    </ref>
    <ref id="CR44">
      <label>44.</label>
      <mixed-citation publication-type="other">Killoran N, Lee LJ, Delong A, Duvenaud D, Frey BJ. Generating and designing dna with deep generative models. arXiv; 2017.</mixed-citation>
    </ref>
    <ref id="CR45">
      <label>45.</label>
      <mixed-citation publication-type="other">Schreiber J, Lu YY, Noble WS. Ledidi: designing genome edits that induce functional activity. bioRxiv; 2020.</mixed-citation>
    </ref>
    <ref id="CR46">
      <label>46.</label>
      <mixed-citation publication-type="other">Norn C, Wicky BI, Juergens D, Liu S, Kim D, Tischer D, Koepnick B, Anishchenko I, Baker D, Ovchinnikov S. Protein sequence design by conformational landscape optimization. Proc Natl Acad Sci. 2021;118.</mixed-citation>
    </ref>
    <ref id="CR47">
      <label>47.</label>
      <mixed-citation publication-type="other">Simonyan K, Vedaldi A, Zisserman A. Deep inside convolutional networks: visualising image classification models and saliency maps. arXiv; 2013.</mixed-citation>
    </ref>
    <ref id="CR48">
      <label>48.</label>
      <mixed-citation publication-type="other">Bengio Y, Léonard N, Courville A. Estimating or propagating gradients through stochastic neurons for conditional computation. arXiv; 2013.</mixed-citation>
    </ref>
    <ref id="CR49">
      <label>49.</label>
      <mixed-citation publication-type="other">Courbariaux M, Hubara I, Soudry D, El-Yaniv R, Bengio Y. Binarized neural networks: training deep neural networks with weights and activations constrained to +1 or -1. arXiv; 2016.</mixed-citation>
    </ref>
    <ref id="CR50">
      <label>50.</label>
      <mixed-citation publication-type="other">Chung J, Ahn S, Bengio Y. Hierarchical multiscale recurrent neural networks. arXiv; 2016.</mixed-citation>
    </ref>
    <ref id="CR51">
      <label>51.</label>
      <mixed-citation publication-type="other">Ulyanov D, Vedaldi A, Lempitsky V. Instance normalization: the missing ingredient for fast stylization. arXiv; 2016.</mixed-citation>
    </ref>
    <ref id="CR52">
      <label>52.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sandelin</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Alkema</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Engström</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Wasserman</surname>
            <given-names>WW</given-names>
          </name>
          <name>
            <surname>Lenhard</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Jaspar: an open-access database for eukaryotic transcription factor binding profiles</article-title>
        <source>Nucleic Acids Res</source>
        <year>2004</year>
        <volume>32</volume>
        <fpage>91</fpage>
        <lpage>94</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkh012</pub-id>
      </element-citation>
    </ref>
    <ref id="CR53">
      <label>53.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Giammartino</surname>
            <given-names>DCD</given-names>
          </name>
          <name>
            <surname>Nishida</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Manley</surname>
            <given-names>JL</given-names>
          </name>
        </person-group>
        <article-title>Mechanisms and consequences of alternative polyadenylation</article-title>
        <source>Mol Cell</source>
        <year>2011</year>
        <volume>43</volume>
        <fpage>853</fpage>
        <lpage>866</lpage>
        <pub-id pub-id-type="doi">10.1016/j.molcel.2011.08.017</pub-id>
        <pub-id pub-id-type="pmid">21925375</pub-id>
      </element-citation>
    </ref>
    <ref id="CR54">
      <label>54.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Shi</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>Alternative polyadenylation: new insights from global analyses</article-title>
        <source>Rna</source>
        <year>2012</year>
        <volume>18</volume>
        <fpage>2105</fpage>
        <lpage>2117</lpage>
        <pub-id pub-id-type="doi">10.1261/rna.035899.112</pub-id>
        <pub-id pub-id-type="pmid">23097429</pub-id>
      </element-citation>
    </ref>
    <ref id="CR55">
      <label>55.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Elkon</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Ugalde</surname>
            <given-names>AP</given-names>
          </name>
          <name>
            <surname>Agami</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Alternative cleavage and polyadenylation: extent, regulation and function</article-title>
        <source>Nat Rev Genet</source>
        <year>2013</year>
        <volume>14</volume>
        <fpage>496</fpage>
        <lpage>506</lpage>
        <pub-id pub-id-type="doi">10.1038/nrg3482</pub-id>
        <pub-id pub-id-type="pmid">23774734</pub-id>
      </element-citation>
    </ref>
    <ref id="CR56">
      <label>56.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tian</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Manley</surname>
            <given-names>JL</given-names>
          </name>
        </person-group>
        <article-title>Alternative polyadenylation of mrna precursors</article-title>
        <source>Nat Rev Mol Cell Biol</source>
        <year>2017</year>
        <volume>18</volume>
        <fpage>18</fpage>
        <lpage>30</lpage>
        <pub-id pub-id-type="doi">10.1038/nrm.2016.116</pub-id>
        <pub-id pub-id-type="pmid">27677860</pub-id>
      </element-citation>
    </ref>
    <ref id="CR57">
      <label>57.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kheradpour</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Kellis</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Systematic discovery and characterization of regulatory motifs in encode tf binding experiments</article-title>
        <source>Nucleic Acids Res</source>
        <year>2014</year>
        <volume>42</volume>
        <fpage>2976</fpage>
        <lpage>2987</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkt1249</pub-id>
        <pub-id pub-id-type="pmid">24335146</pub-id>
      </element-citation>
    </ref>
    <ref id="CR58">
      <label>58.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ernst</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Melnikov</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Rogov</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Mikkelsen</surname>
            <given-names>TS</given-names>
          </name>
          <name>
            <surname>Kellis</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Genome-scale high-resolution mapping of activating and repressive nucleotides in regulatory regions</article-title>
        <source>Nat Biotechnol</source>
        <year>2016</year>
        <volume>34</volume>
        <fpage>1180</fpage>
        <lpage>1190</lpage>
        <pub-id pub-id-type="doi">10.1038/nbt.3678</pub-id>
        <pub-id pub-id-type="pmid">27701403</pub-id>
      </element-citation>
    </ref>
    <ref id="CR59">
      <label>59.</label>
      <mixed-citation publication-type="other">Kingma DP, Welling M. Auto-encoding variational Bayes. arXiv; 2013.</mixed-citation>
    </ref>
    <ref id="CR60">
      <label>60.</label>
      <mixed-citation publication-type="other">Arjovsky, M, Chintala S, Bottou L. Wasserstein generative adversarial networks. In: International conference on machine learning. PMLR; 2017. p. 214–223.</mixed-citation>
    </ref>
    <ref id="CR61">
      <label>61.</label>
      <mixed-citation publication-type="other">Peters J, Schaal S. Reinforcement learning by reward-weighted regression for operational space control. In: Proceedings of the 24th international conference on Machine learning; 2007. p. 745–750.</mixed-citation>
    </ref>
    <ref id="CR62">
      <label>62.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nguyen</surname>
            <given-names>QH</given-names>
          </name>
          <name>
            <surname>Nguyen-Vo</surname>
            <given-names>TH</given-names>
          </name>
          <name>
            <surname>Le</surname>
            <given-names>NQK</given-names>
          </name>
          <name>
            <surname>Do</surname>
            <given-names>TT</given-names>
          </name>
          <name>
            <surname>Rahardja</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Nguyen</surname>
            <given-names>BP</given-names>
          </name>
        </person-group>
        <article-title>ienhancer-ecnn: identifying enhancers and their strength using ensembles of convolutional neural networks</article-title>
        <source>BMC Genom</source>
        <year>2019</year>
        <volume>20</volume>
        <fpage>951</fpage>
        <pub-id pub-id-type="doi">10.1186/s12864-019-6336-3</pub-id>
      </element-citation>
    </ref>
    <ref id="CR63">
      <label>63.</label>
      <mixed-citation publication-type="other">Butt AH, Alkhalaf S, Iqbal S, Khan YD. Enhancerp-2l: a gene regulatory site identification tool for dna enhancer region using cres motifs. bioRxiv; 2020.</mixed-citation>
    </ref>
    <ref id="CR64">
      <label>64.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lakshminarayanan</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Pritzel</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Blundell</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>Simple and scalable predictive uncertainty estimation using deep ensembles</article-title>
        <source>Adv Neural Inf Process Syst</source>
        <year>2017</year>
        <volume>30</volume>
        <fpage>6402</fpage>
        <lpage>6413</lpage>
      </element-citation>
    </ref>
    <ref id="CR65">
      <label>65.</label>
      <mixed-citation publication-type="other">Tischer D, Lisanza S, Wang J, Dong R, Anishchenko I, Milles LF, Ovchinnikov S, Baker D. Design of proteins presenting discontinuous functional sites using deep learning. bioRxiv; 2020.</mixed-citation>
    </ref>
    <ref id="CR66">
      <label>66.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kirkpatrick</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Gelatt</surname>
            <given-names>CD</given-names>
          </name>
          <name>
            <surname>Vecchi</surname>
            <given-names>MP</given-names>
          </name>
        </person-group>
        <article-title>Optimization by simulated annealing</article-title>
        <source>Science</source>
        <year>1983</year>
        <volume>220</volume>
        <fpage>671</fpage>
        <lpage>680</lpage>
        <pub-id pub-id-type="doi">10.1126/science.220.4598.671</pub-id>
        <pub-id pub-id-type="pmid">17813860</pub-id>
      </element-citation>
    </ref>
    <ref id="CR67">
      <label>67.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Metropolis</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Rosenbluth</surname>
            <given-names>AW</given-names>
          </name>
          <name>
            <surname>Rosenbluth</surname>
            <given-names>MN</given-names>
          </name>
          <name>
            <surname>Teller</surname>
            <given-names>AH</given-names>
          </name>
          <name>
            <surname>Teller</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <article-title>Equation of state calculations by fast computing machines</article-title>
        <source>J Chem Phys</source>
        <year>1953</year>
        <volume>21</volume>
        <fpage>1087</fpage>
        <lpage>1092</lpage>
        <pub-id pub-id-type="doi">10.1063/1.1699114</pub-id>
      </element-citation>
    </ref>
    <ref id="CR68">
      <label>68.</label>
      <mixed-citation publication-type="other">Brookes DH, Listgarten J. Design by adaptive sampling. arXiv; 2018.</mixed-citation>
    </ref>
    <ref id="CR69">
      <label>69.</label>
      <mixed-citation publication-type="other">Snoek J, Larochelle H, Adams RP. Practical Bayesian optimization of machine learning algorithms. arXiv; 2012.</mixed-citation>
    </ref>
    <ref id="CR70">
      <label>70.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Shahriari</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Swersky</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Adams</surname>
            <given-names>RP</given-names>
          </name>
          <name>
            <surname>Freitas</surname>
            <given-names>ND</given-names>
          </name>
        </person-group>
        <article-title>Taking the human out of the loop: a review of Bayesian optimization</article-title>
        <source>Proc IEEE</source>
        <year>2015</year>
        <volume>104</volume>
        <fpage>148</fpage>
        <lpage>175</lpage>
        <pub-id pub-id-type="doi">10.1109/JPROC.2015.2494218</pub-id>
      </element-citation>
    </ref>
    <ref id="CR71">
      <label>71.</label>
      <mixed-citation publication-type="other">Frazier PI. A tutorial on Bayesian optimization. arXiv; 2018.</mixed-citation>
    </ref>
    <ref id="CR72">
      <label>72.</label>
      <mixed-citation publication-type="other">Kingma DP, Ba J. Adam: a method for stochastic optimization. arXiv; 2014.</mixed-citation>
    </ref>
    <ref id="CR73">
      <label>73.</label>
      <mixed-citation publication-type="other">He K, Zhang X, Ren S, Sun J. Deep residual learning for image recognition. In: Proceedings of the IEEE conference on computer vision and pattern recognition. 2016. p. 770–778.</mixed-citation>
    </ref>
    <ref id="CR74">
      <label>74.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hunter</surname>
            <given-names>JD</given-names>
          </name>
        </person-group>
        <article-title>Matplotlib: a 2d graphics environment</article-title>
        <source>Comput Sci Eng</source>
        <year>2007</year>
        <volume>9</volume>
        <fpage>90</fpage>
        <lpage>95</lpage>
        <pub-id pub-id-type="doi">10.1109/MCSE.2007.55</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

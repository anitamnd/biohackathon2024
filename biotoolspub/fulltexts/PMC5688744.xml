<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">5688744</article-id>
    <article-id pub-id-type="publisher-id">1885</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-017-1885-4</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>TRAVeLer: a tool for template-based RNA secondary structure visualization</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Elias</surname>
          <given-names>Richard</given-names>
        </name>
        <address>
          <email>richard.elias@matfyz.cz</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-4679-0557</contrib-id>
        <name>
          <surname>Hoksza</surname>
          <given-names>David</given-names>
        </name>
        <address>
          <email>david.hoksza@mff.cuni.cz</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <aff id="Aff1"><institution-wrap><institution-id institution-id-type="ISNI">0000 0004 1937 116X</institution-id><institution-id institution-id-type="GRID">grid.4491.8</institution-id><institution>Faculty of Mathematics and Physics, Charles University, </institution></institution-wrap>Prague, 11800 Czech Republic </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>15</day>
      <month>11</month>
      <year>2017</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>15</day>
      <month>11</month>
      <year>2017</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2017</year>
    </pub-date>
    <volume>18</volume>
    <elocation-id>487</elocation-id>
    <history>
      <date date-type="received">
        <day>29</day>
        <month>5</month>
        <year>2017</year>
      </date>
      <date date-type="accepted">
        <day>31</day>
        <month>10</month>
        <year>2017</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2017</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold> This article is distributed under the terms of the Creative Commons Attribution 4.0 International License(<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The Creative Commons Public Domain Dedication waiver(<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p>Visualization of RNA secondary structures is a complex task, and, especially in the case of large RNA structures where the expected layout is largely habitual, the existing visualization tools often fail to produce suitable visualizations. This led us to the idea to use existing layouts as templates for the visualization of new RNAs similarly to how templates are used in homology-based structure prediction.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>This article introduces Traveler, a software tool enabling visualization of a target RNA secondary structure using an existing layout of a sufficiently similar RNA structure as a template. Traveler is based on an algorithm which converts the target and template structures into corresponding tree representations and utilizes tree edit distance coupled with layout modification operations to transform the template layout into the target one. Traveler thus accepts a pair of secondary structures and a template layout and outputs a layout for the target structure.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p>Traveler is a command-line open source tool able to quickly generate layouts for even the largest RNA structures in the presence of a sufficiently similar layout. It is available at <ext-link ext-link-type="uri" xlink:href="http://github.com/davidhoksza/traveler">http://github.com/davidhoksza/traveler</ext-link>.</p>
      </sec>
      <sec>
        <title>Electronic supplementary material</title>
        <p>The online version of this article (doi:10.1186/s12859-017-1885-4) contains supplementary material, which is available to authorized users.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Visualization</kwd>
      <kwd>RNA secondary structure</kwd>
      <kwd>Template-based modeling</kwd>
      <kwd>Software tool</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>Grantová Agentura České Republiky (CZ)</institution>
        </funding-source>
        <award-id>15-00885S</award-id>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2017</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p>The ability to visually inspect the secondary structure of an RNA molecule is an important aspect of RNA analysis, especially in case of large molecules,such as ribosomal RNAs (rRNAs). For such molecules, suitable visualization can help to determine conserved regions shared across species or, alternatively, expansion segments, the exposed parts of the RNA structure. The visualization also facilitates the comparison of secondary structures, identification of function of RNA molecules and modeling of functional mechanisms.</p>
    <p>There are three possible approaches with regard to laying out RNA: a linked graph, a circular graph, and a classical structure [<xref ref-type="bibr" rid="CR1">1</xref>]. In the linked graph, the nucleotides are drawn on a straight line in sequence order, and base-paired residues are linked by an arc. The circular graph is similar to the linked graph representation with the nucleotides laying, however, on a circumference of a circle and connected with straight lines. Both of these representations lack the ability to capture the secondary structure motifs and therefore the classical structure is used when detailed visual analysis of secondary structure motifs and their interaction are needed. In the classical structure the positions of nucleotides is chosen so that the secondary structure motifs, such as hairpins, bulges, or multibranch loops can be discerned.</p>
    <p>Since the secondary structure of RNA can be presented as a graph, the RNA visualization task can be translated to a graph drawing problem. However, there are specifics to the RNA secondary structure which do not enable the application of the general graph drawing solutions. The RNA specifics require the lengths of the edges that correspond to base pairs to be constrained, or the secondary structure motifs to be drawn in a compact and specific way. For example, hairpins should consist of a stem and a loop where stem-related nucleotides commonly lie on a line, while loop residues are located on a circle, and the resulting layout should be planar [<xref ref-type="bibr" rid="CR2">2</xref>]. These rules maybe applied as, relatively vague, optimality criteria if needed and could drive the visualization of small RNA structures. However, there are no such rules with respect to how various secondary structure motifs should be positioned with respect to each other or how complex motifs, such as multibranch loops, should be laid out. Therefore, there is basically an infinitely many possibilities how to lay out the secondary structure of more complex RNA molecules.</p>
    <p>The absence of rigid criteria when assessing the quality of a layout leads to the fact that secondary structure visualization is largely habitual and while the layout of small secondary structure motifs, such as hairpins, are similar in different tools, their mutual positions differ greatly among the existing visualization tools. A great and exhausting overview of secondary structure drawing approaches and software tools (both command line and interactive) can be found in a recent review by Ponty et al. [<xref ref-type="bibr" rid="CR3">3</xref>]. The most commonly used tools for the visualization of secondary structure of RNA molecules include VARNA [<xref ref-type="bibr" rid="CR4">4</xref>] and RNAplot [<xref ref-type="bibr" rid="CR5">5</xref>].</p>
    <p>Outputs of these tools can differ substantially which is especially true for large RNA structures. We show this on an example of the visualization of the small subunit of human rRNA which we contrast with the dramatically different layout used by the biologically community. See Fig. <xref rid="Fig1" ref-type="fig">1</xref>
<xref rid="Fig1" ref-type="fig">a</xref> for the visualization of small subunit of human ribosomal RNA (GenBank accession number K03432) in the layout which biological users are used to seeing (downloaded from the Comparative RNA Website - <ext-link ext-link-type="uri" xlink:href="http://www.rna.icmb.utexas.edu/">http://www.rna.icmb.utexas.edu/</ext-link>). As a contrast, we show the layouts generated by Traveler, the tool introduced in this paper, VARNA, RNAplot, jViz.Rna [<xref ref-type="bibr" rid="CR1">1</xref>] and RNAFdl [<xref ref-type="bibr" rid="CR6">6</xref>] tools<sup>1</sup>.
<fig id="Fig1"><label>Fig. 1</label><caption><p>Layout of small subunit of human ribosomal RNA (GenBank accession number K03432) by different tools. The input structure definition (sequence and structure in the dot-bracket notation) can be obtained from <ext-link ext-link-type="uri" xlink:href="https://github.com/davidhoksza/traveler">https://github.com/davidhoksza/traveler</ext-link> (the <italic>data</italic> directory). <bold>a</bold> Layout in the form biological community is used to (downloaded from the CRW website [<xref ref-type="bibr" rid="CR1">1</xref>]). <bold>b</bold> Layout generated by Traveler using fruit fly as a template. <bold>c</bold> Layout generated by VARNA (version 3-93). <bold>d</bold> Layout generated by RNAplot</p></caption><graphic xlink:href="12859_2017_1885_Fig1_HTML" id="MO1"/></fig>
</p>
    <p>The poorly defined optimality criteria for the secondary structure visualization motivated us to circumvent the problem by developing a template-based drawing algorithm [<xref ref-type="bibr" rid="CR7">7</xref>] which requires on its input the secondary structure of a template RNA together with its layout and the secondary structure of the target RNA molecule for which the layout is to be generated. Then, using tree edit distance, the template layout is turned into the target one.</p>
    <p>It should be noted that our approach is not the first one to use a template to draw an RNA secondary structure. The tool RnaViz [<xref ref-type="bibr" rid="CR8">8</xref>, <xref ref-type="bibr" rid="CR9">9</xref>] allows a user to pass a so-called skeleton, which is then used when drawing target RNA<sup>2</sup>. To obtain the skeleton, one needs to use de novo layouting capabilities or RnaViz, and correct the overlaps manually. The resulting layout then can be stored as a skeleton and used for the visualization of other similar structure. Our approach, on the other hand, uses the template structure directly and its visualization provided either as a VARNA or CRW file (see “<xref rid="Sec9" ref-type="sec">Traveler</xref>” section).</p>
    <p>In this paper, we introduce a software tool called TRAVeLer (Template-based RnA VisuaLization) by implementing an extended and optimized version of our template-based drawing algorithm. The extension includes the implementation of a more efficient two-step tree edit distance (“<xref rid="Sec3" ref-type="sec">Target-template structure matching</xref>” section), special treatment of multibranch loops (“<xref rid="Sec7" ref-type="sec">Multibranch modification</xref>” section) a range of additional polishing steps and special cases treatments (“<xref rid="Sec8" ref-type="sec">Postprocessing and special cases treatment</xref>” section), and the ability to use VARNA layouts as templates for visualization (“<xref rid="Sec9" ref-type="sec">Traveler</xref>” section). Traveler is capable of visualizing even the biggest structures with thousands of nucleotides in tens of seconds; it is provided as an extendible, open-source software framework and can be downloaded from <ext-link ext-link-type="uri" xlink:href="https://github.com/davidhoksza/traveler">https://github.com/davidhoksza/traveler</ext-link>.</p>
  </sec>
  <sec id="Sec2">
    <title>Implementation</title>
    <p>The algorithm implemented in Traveler is based on the ability to represent a pseudoknot-free RNA secondary structure as an ordered rooted tree<sup>3</sup>. In the tree, inner nodes represent base pairs and unpaired nucleotides form leaves of the tree as illustrated in Fig. <xref rid="Fig2" ref-type="fig">2</xref>. To build such a tree from an input structure, one simply traverses the secondary structure in sequence-order from both ends simultaneously and transforms the encountered paired and unpaired nucleotides into inner nodes or leaves of the nascent tree. The order of neighboring nodes is defined by the order in which the nodes are encountered in the traversal.
<fig id="Fig2"><label>Fig. 2</label><caption><p>Tree-based RNA representation. Example of a secondary structure (<bold>a</bold>) and its corresponding tree-based representation (<bold>b</bold>)</p></caption><graphic xlink:href="12859_2017_1885_Fig2_HTML" id="MO2"/></fig>
</p>
    <sec id="Sec3">
      <title>Target-template structure matching</title>
      <p>Firstly, Traveler converts the target and template structures into their corresponding tree representations. In the ideal case of Fig. <xref rid="Fig2" ref-type="fig">2</xref>, the structure can be directly converted into a rooted tree. However, if the first and last nucleotides are not paired, an artificial root needs to be installed, otherwise the structure would be translated into a forest as is the case with most larger structure (see Fig. <xref rid="Fig1" ref-type="fig">1</xref> for an example).</p>
      <p>Secondly, tree edit distance (TED) is used to obtain mapping between the trees. TED, next to the number representing dissimilarity of the input trees, generates a minimal sequence of tree edit operations (insert, update, delete) which turns the template tree into the target one. The original TED algorithm [<xref ref-type="bibr" rid="CR10">10</xref>] has time complexity <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {O}\left (m^{3}n^{3}\right)$\end{document}</tex-math><mml:math id="M2"><mml:mi mathvariant="script">O</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msup><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2017_1885_Article_IEq1.gif"/></alternatives></inline-formula>, for trees with <italic>m</italic> and <italic>n</italic> nodes respectively, and memory complexity <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {O}(mn)$\end{document}</tex-math><mml:math id="M4"><mml:mi mathvariant="script">O</mml:mi><mml:mo>(</mml:mo><mml:mtext mathvariant="italic">mn</mml:mtext><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12859_2017_1885_Article_IEq2.gif"/></alternatives></inline-formula> which can be problematic with large structures such as ribosomal RNAs which contain several thousand nucleotides. The time complexity of original TED was improved to <inline-formula id="IEq3"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {O}\left (m^{2}n^{2}\right)$\end{document}</tex-math><mml:math id="M6"><mml:mi mathvariant="script">O</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msup><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2017_1885_Article_IEq3.gif"/></alternatives></inline-formula> by Zhang and Shasha [<xref ref-type="bibr" rid="CR11">11</xref>] who introduced a special type of tree decomposition (operation needed in TED) which, when used, allows to skip some computation in the TED recursion. Another decomposition approach comes from Demain et al. [<xref ref-type="bibr" rid="CR12">12</xref>] resulting in time complexity <inline-formula id="IEq4"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {O}\left (m^{2} n \log n\right)$\end{document}</tex-math><mml:math id="M8"><mml:mi mathvariant="script">O</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msup><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mi>n</mml:mi><mml:mo>log</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2017_1885_Article_IEq4.gif"/></alternatives></inline-formula>. In Traveler, we have implemented a method called RTED (Robust algorithm for the TED) described in [<xref ref-type="bibr" rid="CR13">13</xref>]. RTED allows to determine optimal decomposition for given tree resulting in a generalized version of the TED algorithm with <inline-formula id="IEq5"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {O}\left (m^{3}\right)$\end{document}</tex-math><mml:math id="M10"><mml:mi mathvariant="script">O</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msup><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2017_1885_Article_IEq5.gif"/></alternatives></inline-formula> worst-case time and <inline-formula id="IEq6"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {O}(mn)$\end{document}</tex-math><mml:math id="M12"><mml:mi mathvariant="script">O</mml:mi><mml:mo>(</mml:mo><mml:mtext mathvariant="italic">mn</mml:mtext><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12859_2017_1885_Article_IEq6.gif"/></alternatives></inline-formula> memory complexity.</p>
    </sec>
    <sec id="Sec4">
      <title>Layout transformation</title>
      <p>TED procedure results in a mapping that is subsequently used to convert the input template layout into the target layout. Since the mapping consists of a sequence of tree edit operations, each tree edit operation (update, insert, delete) can be assigned its visual counterpart. We thus obtain a recipe how to transform the template layout into the target one. A deleting operation therefore leads to removal of a base(pair) from the template which, in turn, results into free space so the layout needs to be modified accordingly to remove the space. Analogously, insertion results in a new base(pair) and the layout needs to be shifted to accommodate the new element. Finally, an update operation does not lead to any structural layout modifications. Irrespective of the modification operation, we want to interfere with the template layout as little as possible and make only local changes of the template. This is achieved using two methods (used in both insert and remove operations) which handle the distribution of the bases over a circle (Algorithm 1) and shift a subtree in given direction (Algorithm 2).</p>
      <p>
        <graphic xlink:href="12859_2017_1885_Figa_HTML.gif" id="MO3"/>
      </p>
      <p>
        <graphic xlink:href="12859_2017_1885_Figb_HTML.gif" id="MO4"/>
      </p>
      <p>In the following section, we discuss how the layout modification operations are handled in more detail. For more examples illustrating individual cases see the Additional file <xref rid="MOESM1" ref-type="media">1</xref>.</p>
      <sec id="Sec5">
        <title>Inserting nodes</title>
        <p>First, let us consider insertions which do not involve multibranch loops. When inserting a node, we need to discriminate between inserting an inner node and inserting a leaf node. In the first case, the operation corresponds to inserting a base pair into a stem and is handled by Algorithm 2. We insert the base pair at a given position in the layout and then shift all the nodes corresponding to the descendants of the new parent node. The direction is determined by a direction vector given by the new parent and grandparent of the inserted node (see Fig. <xref rid="Fig3" ref-type="fig">3</xref>). In the latter case, when a new leaf node is inserted, we need to distinguish between an insertion into an existing loop and an insertion into a stem where it forms a new bulge. Inserting into an existing loop requires redrawing the loop using Algorithm 1. One thus needs to extend the circle on which all the sibling leaves reside, i.e. the repositioning of bases corresponding to nodes comprising of siblings of the node being inserted. When inserting a leaf into a stem, i.e. a linear path in the tree, and thus forming a new bulge, is slightly more complicated since it requires shifting the tree rooted in the sibling of the newly inserted node to create space for the newly formed bulge and then position the node in the bulge the same way as when inserting into a loop. This situation is illustrated in Fig. <xref rid="Fig3" ref-type="fig">3</xref>
<xref rid="Fig3" ref-type="fig">b</xref>).
<fig id="Fig3"><label>Fig. 3</label><caption><p>Simple modification operations. Illustration of layout modification enforced by inner (<bold>a</bold>) and leaf (<bold>b</bold>) nodes insertions</p></caption><graphic xlink:href="12859_2017_1885_Fig3_HTML" id="MO5"/></fig>
</p>
        <p>Several issues can arise when inserting nodes in the first level of the tree. Such situation is discussed in “<xref rid="Sec8" ref-type="sec">Postprocessing and special cases treatment</xref>” section.</p>
      </sec>
      <sec id="Sec6">
        <title>Removing nodes</title>
        <p>Removing nodes from the tree and respective layout modifications are done essentially the same way as insertions are done. The only difference is in the direction of a shift when removing a base pair from a stem and in decreasing the loop size instead of increasing it when removing a base from the loop.</p>
      </sec>
      <sec id="Sec7">
        <title>Multibranch modification</title>
        <p>In terms of the tree representation, multibranches correspond to nodes which have at least two non-leaf children. In cases of large RNA structures, the secondary structure visualizations are manually modified to be as compact as possible which results in not respecting all rules, such as the circular shape of a multibranch structure. For this reason, we try to interfere with multibranches as little as possible and treat them in a special way. Clearly, after any insertion into a multibranch loop, we could use Algorithm 1 to distribute all the base and basepairs comprising the loop. However, this would likely result in substantial modification of the layout, especially for a big loop in the center of the structure. Therefore, in situations when only few bases are added or removed, we try to squeeze or expand the bases between the respective neighboring branches to utilize the space between the branches without the need to reposition them. If this is not possible, we need to rebuild the whole loop, which requires finding positions on a circle as it is in case of simple loops. Then, we need to rotate each of the branches rooted in the modified loop. The rotation needs to be propagated into the descendants of each of the branches. Both situations are illustrated in Fig. <xref rid="Fig4" ref-type="fig">4</xref>.
<fig id="Fig4"><label>Fig. 4</label><caption><p>Multibranch modification (see Additional file <xref rid="MOESM1" ref-type="media">1</xref> for color coding definition). <bold>a</bold> Multibranch modification without loop rebuild. On the left is part of frog (X04025) 18S rRNA template and on the right is the target (human 18S rRNA) visualization with the residues in the upper right part being squeezed to avoid re-layouting of the loop. <bold>b</bold> Multibranch modification with loop rebuild. On the left is part of shrimp (X04025) 18S rRNA template and on the right is the target (human 18S rRNA) visualization where the loop had to be rebuilt due to substantial difference of the target and template. The numbers representing the corresponding hairpins in the respective structures</p></caption><graphic xlink:href="12859_2017_1885_Fig4_HTML" id="MO6"/></fig>
</p>
      </sec>
      <sec id="Sec8">
        <title>Postprocessing and special cases treatment</title>
        <p>Although we try to touch the template visualization as little as possible, after the target layout is generated we apply several modifications to the resulting layout to improve its quality.</p>
        <p>Firstly, we straighten stem residues so that they lie on a line. It is necessary, because, for example, when inserting a base pair, the direction vector is given by the positions of the parent and grandparent, but that can lead to a curved stem as shown in Fig. <xref rid="Fig5" ref-type="fig">5</xref>.
<fig id="Fig5"><label>Fig. 5</label><caption><p>Issues when inserting a base pair. Example of incorrect position of base pair</p></caption><graphic xlink:href="12859_2017_1885_Fig5_HTML" id="MO7"/></fig>
</p>
        <p>Our proposed approach always arrives to a target layout, (2D) steric clashes can, however, occur in the target. This is especially true when the target and template structures are too dissimilar. Since the human-generated layouts tend to be compact and able to utilize the available space well, insertions can cause two subtrees that are adjacent in the template visualization clash in the target. To minimize the number of clashes in the target layout, we evaluate every subtree whose nodes clash with other parts of the tree and try to rotate it. We try to do several rotations and pick the one with the lowest number of clashes.</p>
        <p>The second level of the tree requires special attention if the RNA structure is not rooted, i.e. it does not start with a base pair. This can occur quite frequently with real structures. For example, in Fig. <xref rid="Fig1" ref-type="fig">1</xref> every base or base pair which is not descendant of a base pair is in the second level and their parent is the artificial root. In Fig. <xref rid="Fig1" ref-type="fig">1</xref>, the second level starts (from the 5’ end) with U,A,C,CG,U,AU,…. All these residues do not have a parent with a well-defined position and thus their removal would not modify the final layout. For example, by removing the first A one will end up with a space as it is not part of any loop or bulge which would be affected by its removal. Therefore, in the postprocessing phase we try to normalize the positions of the nodes in the first level with respect to each other.</p>
        <p>Another issue is when inserting a base pair into the second level because in such a case, we cannot use parent and grandparent to correctly determine its position as there are no ancestors. In such a situation we discriminate between two cases. In the first case we insert a base pair into an existing stem, i.e. the target and template both have a branch at a given position. Then we can use the information about the position of the start of the stem from the template, use it as the position for the inserted base pair and shift the rest of the stem. In the second case, we insert a base pair which is the root of a new branch. In such a case we cannot use the position of an existing branch and we also do not have the position of a parent to guide the insertion. Therefore, we use direct siblings of the inserted branch and orient the branch perpendicular to them. Moreover, we then have to shift all the siblings to the right or left of the inserted branch.</p>
      </sec>
    </sec>
    <sec id="Sec9">
      <title>Traveler</title>
      <p>The above described approach has been implemented into a software tool called Traveler. The architecture of Traveler is divided into three parts: (i) parser, (ii) mapper and (iii) visualizer.</p>
      <p>The purpose of the parser is first, to take the target and template and generate their respective tree representations and second, to take the template layout and extract elements corresponding to bases and their interactions. The supported format of the secondary structures is the Vienna/DBN format, commonly used for RNA secondary structure representation. As for the template layout, we support two formats. Since the idea of template-based drawing is useful primarily for large structures and was developed with the intention of visualizing ribosomal RNA structures, Traveler implements image parser for postscripts visualization from the CRW database [<xref ref-type="bibr" rid="CR14">14</xref>]. The CRW database hosts visualizations of rRNA secondary structures in the form they are used by the biological community, enabling easy, comparative visual analysis of large structures. The second input template layout format which Traveler supports is the SVG format output by VARNA. Since VARNA is a complex tool supporting various RNA visualization styles, Traveler currently supports only the simple base pairs types. However, the architecture of the application allows one easily implement a parser for a new image format and use it in Traveler. All the visualizations in the supplementary which illustrate the layout modification operations have been generated from a VARNA template layout. All the target layouts have been thus generated by Traveler using the VARNA parser.</p>
      <p>Mapper is the core component of the application implementing the tree edit distance and corresponding layout modification operations. It is separated from the subsequent visualization and can be run independently for the user to be able to do the mapping and then visualize the mapping repeatedly with different options.</p>
      <p>The final component of Traveler is the visualizer. Visualizer stores the resulting layout in SVG and PS formats, i.e. formats which allow simple modification of the result in any vector graphics editor. If the input template is in the VARNA format then, since the output SVG complies with VARNA, the output can be reused as a template. Similarly, one can reuse the PS output as an input template if the input format is CRW. Furthermore, the templates can be modified manually provided that the modified files comply with the structure of the CRW files (in case of PS) or VARNA files (in case of SVG). The user can also choose to color code the resulting structure so that updated, inserted and shifted residues are easy to spot. The visualization can thus be used to see where the input molecules differ with respect to their secondary structures. If the target and template structures are too dissimilar, substantial changes in the layout are required which might cause steric clashes. Therefore a switch which instructs Traveler to output the number of such overlaps and highlight them in the resulting image can be turned on. An overlap is defined as an intersection of two lines joining two pairs of residues (hydrogen bond or sugar-phosphate backbone).</p>
    </sec>
  </sec>
  <sec id="Sec10">
    <title>Results and discussion</title>
    <p>To illustrate the ability of Traveler to achieve the required results we have carried out several experiments. In the first experiment, we prepared an artificial RNA secondary structure and a layout, and then formed a target structure where one of the template stems was shortened, and generated its layout Fig. <xref rid="Fig6" ref-type="fig">6</xref>
<xref rid="Fig6" ref-type="fig">b</xref>. Subsequently we switched the role of the template and the target which correctly resulted in a layout similar to the original template Fig. <xref rid="Fig6" ref-type="fig">6</xref>
<xref rid="Fig6" ref-type="fig">c</xref>. In Fig. <xref rid="Fig6" ref-type="fig">6</xref>
<xref rid="Fig6" ref-type="fig">d</xref>-<xref rid="Fig6" ref-type="fig">f</xref> we repeated the same process but with more substantial modifications. Here, the recreated template layout slightly differs from the original one which was expected since Traveler had to rebuild the multibranch loop and its rules for positioning branches on a loop are different from the ones used to generate the original layout.
<fig id="Fig6"><label>Fig. 6</label><caption><p>Traveler’s ability to recreate layouts. On the left hand side, we took a structure with two hairpins (<bold>a</bold>), removed part of a stem and used the original structure as the template (<bold>b</bold>). Then we reinserted the residues and used (<bold>b</bold>) as a template to obtain (<bold>c</bold>). Similarly, (<bold>d</bold>), (<bold>e</bold>) and (<bold>f</bold>) show re-creation of the starting structure with a more drastic middle step where the two hairpins loose residues so that the remaining residues form a loop. <bold>f</bold> demonstrates that Traveler is able to successfully recreate the original structure. For the purpose of clarity, the new residues were labeled I and shown in red, while the residues which needed to be repositioned are shown in blue</p></caption><graphic xlink:href="12859_2017_1885_Fig6_HTML" id="MO8"/></fig>
</p>
    <p>A legitimate question is how close the secondary structures of a target and template need to be for Traveler to give satisfying results. In order to quantify this, we downloaded all 16 available 18S rRNA structures from the metazoa kingdom (multicellular animals) from CRW, and generated a layout for each of the structures using every other structure from the set as the template. For each structure we thus obtained 15 tree edit distances and corresponding visualizations. For each structure the templates were sorted based on decreasing TED, and Table <xref rid="Tab1" ref-type="table">1</xref> shows the average tree edit distance and the average number of overlaps including standard deviation for each ranking. We can observe that for high tree edit distances the number of overlaps grows up to about 40 overlaps per image. For smaller distances, there is not a clear trend, but that can be ascribed to the large standard deviations in the number of overlaps (see Additional file <xref rid="MOESM2" ref-type="media">2</xref> for the individual results and projects repository for the files used to generate the results).
<table-wrap id="Tab1"><label>Table 1</label><caption><p>Tree edit distance and the number of overlaps when using k-th most similar structure as a template</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Ranking</th><th align="left">TED</th><th align="left">avg(stddev)</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">85.94</td><td align="left">6.31 (7.60)</td></tr><tr><td align="left">2</td><td align="left">113.94</td><td align="left">12.81 (19.08)</td></tr><tr><td align="left">3</td><td align="left">137.38</td><td align="left">11.62 (19.58)</td></tr><tr><td align="left">4</td><td align="left">158.38</td><td align="left">8.06 (12.92)</td></tr><tr><td align="left">5</td><td align="left">172.00</td><td align="left">4.12 (7.59)</td></tr><tr><td align="left">6</td><td align="left">189.12</td><td align="left">7.06 (12.68)</td></tr><tr><td align="left">7</td><td align="left">196.31</td><td align="left">4.50 (7.62)</td></tr><tr><td align="left">8</td><td align="left">199.44</td><td align="left">4.06 (6.73)</td></tr><tr><td align="left">9</td><td align="left">258.31</td><td align="left">26.75 (23.06)</td></tr><tr><td align="left">10</td><td align="left">262.88</td><td align="left">22.75 (23.27)</td></tr><tr><td align="left">11</td><td align="left">265.25</td><td align="left">8.62 (15.74)</td></tr><tr><td align="left">12</td><td align="left">271.12</td><td align="left">27.88 (27.07)</td></tr><tr><td align="left">13</td><td align="left">301.19</td><td align="left">12.62 (8.28)</td></tr><tr><td align="left">14</td><td align="left">345.25</td><td align="left">33.81 (17.30)</td></tr><tr><td align="left">15</td><td align="left">805.62</td><td align="left">44.06 (18.92)</td></tr></tbody></table><table-wrap-foot><p>Computed over all pairs of 18S rRNA structures from the metazoa kingdom available in CRW</p></table-wrap-foot></table-wrap>
</p>
    <p>Having few overlaps in such a large structure as rRNA is not an issue as illustrated in Fig. <xref rid="Fig7" ref-type="fig">7</xref> where we used Traveler to generate the layout for human 18S rRNA using fruit fly’s 18S rRNA as a template. The example demonstrates that even when such a relatively distant template is used the resulting layout (Fig. <xref rid="Fig7" ref-type="fig">7</xref>
<xref rid="Fig7" ref-type="fig">a</xref>) is reasonable when compared to the correct layout (Fig. <xref rid="Fig7" ref-type="fig">7</xref>
<xref rid="Fig7" ref-type="fig">c</xref>). The only problematic part seems to be the layout of a poorly characterized region (expansion segment) in the upper left corner of the visualization. We can see that in the template and correct target layout (Fig. <xref rid="Fig7" ref-type="fig">7</xref>
<xref rid="Fig7" ref-type="fig">b</xref> and <xref rid="Fig7" ref-type="fig">c</xref>), this region and the neighboring hairpins are laid out differently. Since the target layout is based on a template and not a target, which is not known in the time of prediction, the resulting layout resembles the template not the target. Moreover, since the long stretch of uncharacterized (unpaired) nucleotides in a template is laid out in an ad-hoc fashion, indels in this region result in mistakes in the target layout because Traveler is able to work with well-defined, hairpin-like structures only. The runtime needed to generate this layout was about 1 min on commodity hardware.
<fig id="Fig7"><label>Fig. 7</label><caption><p>Visualization of human 18S rRNA with Traveler. <bold>a</bold> shows the target layout, (<bold>b</bold>) is the template layout while (<bold>c</bold>) is the desired layout as stored in the CRW. The Traveler’s output is colored so that red represent inserted residues, green are relabeled residues and blue are residues that needed to be shifted due to indels happening within given hairpin (see Additional file <xref rid="MOESM1" ref-type="media">1</xref> for full color coding definition)</p></caption><graphic xlink:href="12859_2017_1885_Fig7_HTML" id="MO9"/></fig>
</p>
    <p>Traveler can find utilization not only as a tool for single molecule visualization, but also as a backend in any application where automatic layout of one or more RNA molecules is required. However, its low runtime makes it exceptionally suitable for large scale generation of RNA layouts for RNA types where a consensus for secondary structure layout exists. As far as we are aware, currently a strong consensus exists only for ribosomal RNAs. We have shown examples of its application to large rRNAs, but it can be equally well used for small rRNAs such as 5S rRNA, templates of which can be also found in CRW (see Fig. <xref rid="Fig8" ref-type="fig">8</xref>).
<fig id="Fig8"><label>Fig. 8</label><caption><p>Visualization of baker’s yeast 5S rRNA with Traveler. <bold>a</bold> shows the target layout, (<bold>b</bold>) is the template layout while (<bold>c</bold>) is the desired layout as stored in the CRW. The Traveler’s output is colored so that red represent inserted residues, green are relabeled residues and blue are residues that needed to be shifted due to indels happening within given hairpin (see Additional file <xref rid="MOESM1" ref-type="media">1</xref> for full color coding definition)</p></caption><graphic xlink:href="12859_2017_1885_Fig8_HTML" id="MO10"/></fig>
</p>
    <p>Although the main application we had in mind when developing Traveler was visualization or large rRNA molecules, any field of RNA research where consistent systematic layout of secondary structure is needed can benefit from utilization of a template-based layout tool such as Traveler. For example, tRNA molecules are commonly visualized with similar layout in the same orientation (5’ and 3’ ends up), so here Traveler could be used to generate standardized layout for all tRNA molecules with available secondary structure. Therefore, we also envision application of Traveler as an enabler of standardization of layouts for different RNA stubtypes. These subtypes need to share common secondary structure core so that they can benefit from application of a template-based layouting algorithm. The number of available (long) noncoding RNA secondary structures (either predicted or experimentally determined) in databases such as LNCipedia [<xref ref-type="bibr" rid="CR15">15</xref>] (almost 150.000 structures by October 2017) indicates the potential of such application.</p>
    <p>Finally, Traveler can be used in secondary structure prediction efforts when multiple predictions of the same sequence need to be visualized in a consistent manner to enable visual analysis of differentially predicted regions.</p>
  </sec>
  <sec id="Sec11" sec-type="conclusion">
    <title>Conclusions</title>
    <p>This paper has introduced Traveler a tool capable to generate RNA secondary structure layouts which conform to biologists intuition when a template layout exists. Although it can be used for structures of any size, its major application is in visualizing large RNA structures with the focus on ribosomal RNAs where de novo tools are not capable of arriving at the expected layout and manual visualization is highly impractical.</p>
    <p>Traveler is a command line application with no prerequisites and is freely available at <ext-link ext-link-type="uri" xlink:href="http://github.com/davidhoksza/traveler">http://github.com/davidhoksza/traveler</ext-link>.</p>
  </sec>
  <sec id="Sec12">
    <title>Availability and requirements</title>
    <p><bold>Project name:</bold> TRAVeLer</p>
    <p>
      <bold>Project home page:</bold>
      <ext-link ext-link-type="uri" xlink:href="https://github.com/davidhoksza/traveler">https://github.com/davidhoksza/traveler</ext-link>
    </p>
    <p><bold>Operating systems:</bold> Unix/Linux</p>
    <p><bold>Programming language:</bold> C++</p>
    <p><bold>License:</bold> GNU GPL</p>
  </sec>
  <sec id="Sec13">
    <title>Endnotes</title>
    <p><sup>1</sup> A commonly cited tool Pseudoviewer3 is not included here since we were not able to get any visualization with Pseudoviewer for the input structure.</p>
    <p><sup>2</sup> Details on how exactly this is done are missing in both RnaViz publications.</p>
    <p><sup>3</sup> Traveler also accepts pseudoknotted structures. Those are, however, first converted into pseudoknot-free structures and only then processed. However, the template layout can include lines corresponding to pseudoknots and these do get copied over to the target layout.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Additional files</title>
    <sec id="Sec14">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="12859_2017_1885_MOESM1_ESM.pdf">
            <label>Additional file 1</label>
            <caption>
              <p>Traveler operations. Illustration of simple insertion and deletion operations on both layout and tree level. (PDF 277 kb)</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
      <p>
        <supplementary-material content-type="local-data" id="MOESM2">
          <media xlink:href="12859_2017_1885_MOESM2_ESM.txt">
            <label>Additional file 2</label>
            <caption>
              <p>Results on Metazoa 23S rRNA. Tree edit distance, number of overlaps and runtimes for all Metazoa 23s rRNA structures available in CRW. (TXT 10 kb)</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>CRW</term>
        <def>
          <p>Comparative RNA web site</p>
        </def>
      </def-item>
      <def-item>
        <term>PS</term>
        <def>
          <p>Postscript</p>
        </def>
      </def-item>
      <def-item>
        <term>SVG</term>
        <def>
          <p>Scalable vector graphics</p>
        </def>
      </def-item>
      <def-item>
        <term>TED</term>
        <def>
          <p>Tree edit distance</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Electronic supplementary material</bold>
      </p>
      <p>The online version of this article (doi:10.1186/s12859-017-1885-4) contains supplementary material, which is available to authorized users.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>This work was supported by the Czech Science Foundation grant 15-00885S. Access to computing and storage facilities owned by parties and projects contributing to the National Grid Infrastructure MetaCentrum provided under the programme “Projects of Large Research, Development, and Innovations Infrastructures” (CESNET LM2015042), is greatly appreciated.</p>
    <sec id="d29e1100">
      <title>Funding</title>
      <p>This work has been supported by the Czech Science Foundation grant 15-00885S. The access to computing and storage facilities owned by parties and projects contributing to the National Grid Infrastructure MetaCentrum, provided under the programme “Projects of Large Infrastructure for Research, Development, and Innovations” (LM2010005) is highly appreciated.</p>
    </sec>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors’ contributions</title>
    <p>RE implemented most of the Traveler code. DH advised the approach, supervised the project and maintains the code base. The paper was written by both authors. Both authors read and approved the final manuscript.</p>
  </notes>
  <notes notes-type="COI-statement">
    <sec id="d29e1111">
      <title>Ethics approval and consent to participate</title>
      <p>Not applicable.</p>
    </sec>
    <sec id="d29e1116">
      <title>Consent for publication</title>
      <p>Not applicable.</p>
    </sec>
    <sec id="d29e1121">
      <title>Competing interests</title>
      <p>The authors declare that they have no competing interests.</p>
    </sec>
    <sec id="d29e1126">
      <title>Publisher’s Note</title>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </sec>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wiese</surname>
            <given-names>KC</given-names>
          </name>
          <name>
            <surname>Glen</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Vasudevan</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>jViz.Rna - A java tool for RNA secondary structure visualization</article-title>
        <source>IEEE Trans Nanobioscience</source>
        <year>2005</year>
        <volume>4</volume>
        <issue>3</issue>
        <fpage>212</fpage>
        <lpage>8</lpage>
        <pub-id pub-id-type="doi">10.1109/TNB.2005.853646</pub-id>
        <?supplied-pmid 16220684?>
        <pub-id pub-id-type="pmid">16220684</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Auber</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Delest</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Domenger</surname>
            <given-names>JP</given-names>
          </name>
          <name>
            <surname>Dulucq</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Efficient drawing of RNA secondary structure</article-title>
        <source>J Graph Algorithms Appl</source>
        <year>2006</year>
        <volume>10</volume>
        <issue>2</issue>
        <fpage>329</fpage>
        <lpage>51</lpage>
        <pub-id pub-id-type="doi">10.7155/jgaa.00131</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3</label>
      <mixed-citation publication-type="other">Ponty Y, Leclerc F. Drawing and editing the secondary structure(s) of RNA. In: RNA Bioinforma. Springer: 2015. p. 63–100.</mixed-citation>
    </ref>
    <ref id="CR4">
      <label>4</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Darty</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Denise</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Ponty</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>VARNA: Interactive drawing and editing of the RNA secondary structure</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <issue>15</issue>
        <fpage>1974</fpage>
        <lpage>1975</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp250</pub-id>
        <?supplied-pmid 19398448?>
        <pub-id pub-id-type="pmid">19398448</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lorenz</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Bernhart</surname>
            <given-names>SH</given-names>
          </name>
          <name>
            <surname>zu Siederdissen</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Tafer</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Flamm</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Stadler</surname>
            <given-names>PF</given-names>
          </name>
          <name>
            <surname>Hofacker</surname>
            <given-names>IL</given-names>
          </name>
        </person-group>
        <article-title>{ViennaRNA} Package 2.0</article-title>
        <source>Algorithms Mol Biol</source>
        <year>2011</year>
        <volume>6</volume>
        <issue>1</issue>
        <fpage>26</fpage>
        <pub-id pub-id-type="doi">10.1186/1748-7188-6-26</pub-id>
        <?supplied-pmid 22115189?>
        <pub-id pub-id-type="pmid">22115189</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hecker</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Wiegels</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Torda</surname>
            <given-names>AE</given-names>
          </name>
        </person-group>
        <article-title>RNA secondary structure diagrams for very large molecules: RNAfdl</article-title>
        <source>Bioinformatics</source>
        <year>2013</year>
        <volume>29</volume>
        <issue>22</issue>
        <fpage>2941</fpage>
        <lpage>942</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btt496</pub-id>
        <?supplied-pmid 23975766?>
        <pub-id pub-id-type="pmid">23975766</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Elias</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Hoksza</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>Rna secondary structure visualization using tree edit distance</article-title>
        <source>Int J Biosci Biochem Bioinforma</source>
        <year>2016</year>
        <volume>6</volume>
        <issue>1</issue>
        <fpage>9</fpage>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>De Rijk</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>De Wachter</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>RnaViz, a program for the visualisation of RNA secondary structure</article-title>
        <source>Nucleic Acids Res</source>
        <year>1997</year>
        <volume>25</volume>
        <issue>22</issue>
        <fpage>4679</fpage>
        <lpage>684</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/25.22.4679</pub-id>
        <?supplied-pmid 9358182?>
        <pub-id pub-id-type="pmid">9358182</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>De Rijk</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Wuyts</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>De Wachter</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Rna Viz 2: An improved representation of RNA secondary structure</article-title>
        <source>Bioinforma</source>
        <year>2003</year>
        <volume>19</volume>
        <issue>2</issue>
        <fpage>299</fpage>
        <lpage>300</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/19.2.299</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tai</surname>
            <given-names>KC</given-names>
          </name>
        </person-group>
        <article-title>The Tree-to-Tree Correction Problem</article-title>
        <source>J ACM</source>
        <year>1979</year>
        <volume>26</volume>
        <issue>3</issue>
        <fpage>422</fpage>
        <lpage>33</lpage>
        <pub-id pub-id-type="doi">10.1145/322139.322143</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhang</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Shasha</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>Simple Fast Algorithms for the Editing Distance between Trees and Related Problems</article-title>
        <source>SIAM J Comput</source>
        <year>1989</year>
        <volume>18</volume>
        <issue>6</issue>
        <fpage>1245</fpage>
        <lpage>1262</lpage>
        <pub-id pub-id-type="doi">10.1137/0218082</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Demaine</surname>
            <given-names>ED</given-names>
          </name>
          <name>
            <surname>Mozes</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Rossman</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Weimann</surname>
            <given-names>O</given-names>
          </name>
        </person-group>
        <article-title>An optimal decomposition algorithm for tree edit distance</article-title>
        <source>ACM Trans Algorithms</source>
        <year>2009</year>
        <volume>6</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>19</lpage>
        <pub-id pub-id-type="doi">10.1145/1644015.1644017</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13</label>
      <mixed-citation publication-type="other">Pawlik M, Augsten N. RTED : A Robust Algorithm for the Tree Edit Distance. In: The 38th Int Conf on Very Large Data Bases.2011. p. 334–345.</mixed-citation>
    </ref>
    <ref id="CR14">
      <label>14</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cannone</surname>
            <given-names>JJ</given-names>
          </name>
          <name>
            <surname>Subramanian</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Schnare</surname>
            <given-names>MN</given-names>
          </name>
          <name>
            <surname>Collett</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>D’Souza</surname>
            <given-names>LM</given-names>
          </name>
          <name>
            <surname>Du</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Feng</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Madabusi</surname>
            <given-names>LV</given-names>
          </name>
          <name>
            <surname>Müller</surname>
            <given-names>KM</given-names>
          </name>
          <name>
            <surname>Pande</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Shang</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Yu</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Gutell</surname>
            <given-names>RR</given-names>
          </name>
        </person-group>
        <article-title>The comparative RNA web (CRW) site: an online database of comparative sequence and structure information for ribosomal, intron, and other RNAs</article-title>
        <source>BMC Bioinformatics</source>
        <year>2002</year>
        <volume>3</volume>
        <fpage>2</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-3-2</pub-id>
        <?supplied-pmid 11869452?>
        <pub-id pub-id-type="pmid">11869452</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Volders</surname>
            <given-names>PJ</given-names>
          </name>
          <name>
            <surname>Verheggen</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Menschaert</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Vandepoele</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Martens</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Vandesompele</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Mestdagh</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>An update on lncipedia: a database for annotated human lncrna sequences</article-title>
        <source>Nucleic Acids Res</source>
        <year>2014</year>
        <volume>43</volume>
        <issue>D1</issue>
        <fpage>174</fpage>
        <lpage>80</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gku1060</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

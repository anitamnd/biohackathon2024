<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">5996513</article-id>
    <article-id pub-id-type="publisher-id">2225</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-018-2225-z</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Variant site strain typer (VaST): efficient strain typing using a minimal number of variant genomic sites</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Furstenau</surname>
          <given-names>Tara N.</given-names>
        </name>
        <address>
          <email>Tara.Furstenau@nau.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Cocking</surname>
          <given-names>Jill H.</given-names>
        </name>
        <address>
          <email>Jill.Cocking@nau.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Sahl</surname>
          <given-names>Jason W.</given-names>
        </name>
        <address>
          <email>Jason.Sahl@nau.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Fofanov</surname>
          <given-names>Viacheslav Y.</given-names>
        </name>
        <address>
          <email>Viacheslav.Fofanov@nau.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0004 1936 8040</institution-id><institution-id institution-id-type="GRID">grid.261120.6</institution-id><institution>The School of Informatics, Computing, and Cyber Systems, Northern Arizona University, </institution></institution-wrap>1295 S Knoles Dr., Flagstaff, Arizona, 86001 USA </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0004 1936 8040</institution-id><institution-id institution-id-type="GRID">grid.261120.6</institution-id><institution>Pathogen and Microbiome Institute, Northern Arizona University, </institution></institution-wrap>1395 S Knoles Dr., Flagstaff, Arizona, 86001 USA </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>11</day>
      <month>6</month>
      <year>2018</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>11</day>
      <month>6</month>
      <year>2018</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2018</year>
    </pub-date>
    <volume>19</volume>
    <elocation-id>222</elocation-id>
    <history>
      <date date-type="received">
        <day>6</day>
        <month>11</month>
        <year>2017</year>
      </date>
      <date date-type="accepted">
        <day>30</day>
        <month>5</month>
        <year>2018</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2018</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold> This article is distributed under the terms of the Creative Commons Attribution 4.0 International License(<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The Creative Commons Public Domain Dedication waiver(<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p>Targeted PCR amplicon sequencing (TAS) techniques provide a sensitive, scalable, and cost-effective way to query and identify closely related bacterial species and strains. Typically, this is accomplished by targeting housekeeping genes that provide resolution down to the family, genera, and sometimes species level. Unfortunately, this level of resolution is not sufficient in many applications where strain-level identification of bacteria is required (biodefense, forensics, clinical diagnostics, and outbreak investigations). Adding more genomic targets will increase the resolution, but the challenge is identifying the appropriate targets. VaST was developed to address this challenge by finding the minimum number of targets that, in combination, achieve maximum strain-level resolution for any strain complex. The final combination of target regions identified by the algorithm produce a unique haplotype for each strain which can be used as a fingerprint for identifying unknown samples in a TAS assay. VaST ensures that the targets have conserved primer regions so that the targets can be amplified in all of the known strains and it also favors the inclusion of targets with basal variants which makes the set more robust when identifying previously unseen strains.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>We analyzed VaST’s performance using a number of different pathogenic species that are relevant to human disease outbreaks and biodefense. The number of targets required to achieve full resolution ranged from 20 to 88% fewer sites than what would be required in the worst case and most of the resolution is achieved within the first 20 targets. We computationally and experimentally validated one of the VaST panels and found that the targets led to accurate phylogenetic placement of strains, even when the strains were not a part of the original panel design.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p>VaST is an open source software that, when provided a set of variant sites, can find the minimum number of sites that will provide maximum resolution of a strain complex, and it has many different run-time options that can accommodate a wide range of applications. VaST can be an effective tool in the design of strain identification panels that, when combined with TAS technologies, offer an efficient and inexpensive strain typing protocol.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Targeted PCR Amplicon sequencing</kwd>
      <kwd>Bacterial strain typing</kwd>
      <kwd>Single nucleotide polymorphisms</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>U.S. Department of Homeland Security</institution>
        </funding-source>
        <award-id>HSHQDC-16-C-B0031</award-id>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2018</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p>High-resolution strain identification is vital in applications ranging from tracking of disease outbreaks and surveillance of virulent or antimicrobial resistant pathogens [<xref ref-type="bibr" rid="CR1">1</xref>–<xref ref-type="bibr" rid="CR3">3</xref>] to the investigation of bioterrorism and other crimes [<xref ref-type="bibr" rid="CR4">4</xref>–<xref ref-type="bibr" rid="CR6">6</xref>]. One of the most promising methods for molecular-based strain identification is targeted multiplex PCR amplicon sequencing (TAS) using high throughput sequencing (HTS) platforms [<xref ref-type="bibr" rid="CR7">7</xref>]. From an unknown isolate, targets are amplified together in a multiplexed PCR reaction and sequenced, the sequences are then analyzed and compared to sequences of known isolates for identification. PCR enrichment of target sequences allows TAS to be more cost effective than whole genome sequencing and tolerant to low amounts of starting material [<xref ref-type="bibr" rid="CR8">8</xref>]. Combining this with HTS technology allows scaled processing of hundreds to thousands of samples on a single machine. The challenge is then deciding which targets to choose to achieve the desired outcome.</p>
    <p>The targeted sequences have often been either a single housekeeping gene (e.g. the 16S rRNA gene [<xref ref-type="bibr" rid="CR9">9</xref>]) or in the case of multi-locus sequence typing (MLST), a collection of a few housekeeping or well-conserved genes [<xref ref-type="bibr" rid="CR10">10</xref>]. The variation within these genes is used to define a well curated set of different sequence types (ST) that distinguish bacterial species or strains. Depending on the amount of diversity, MLST can provide decent resolution and, as HTS techniques are increasingly applied, it is becoming more scaleable and cost-effective [<xref ref-type="bibr" rid="CR11">11</xref>]. For some applications, however, the resolution from only a few genes can be insufficient, especially for differentiating between closely related or highly clonal variants [<xref ref-type="bibr" rid="CR12">12</xref>]. When identifying genetic variation that distinguishes specific strains there is not always enough variation found among the established targets.</p>
    <p>VaST was designed to find a minimal set of target loci that provide a desired level of resolution across a given strain complex. It can add resolution to an existing MLST assay or it can generate a complete set of targets from scratch when MLST loci have not been established. Either way, the goal of VaST is to provide flexibility and control to the design of specialized strain-typing assays for a number of different applications that can be customized for specific sequencing technologies. This begins with the user defining the level of strain resolution that they desire from the panel. If resolution among a specific group of strains is particularly important, this can be defined and VaST will focus on maximizing resolution for those strains. Next, established targets of variation (such as loci from a MLST assay [<xref ref-type="bibr" rid="CR10">10</xref>, <xref ref-type="bibr" rid="CR13">13</xref>–<xref ref-type="bibr" rid="CR19">19</xref>] or canonical SNPs [<xref ref-type="bibr" rid="CR20">20</xref>–<xref ref-type="bibr" rid="CR33">33</xref>]) can be added as a starting point which will override the VaST optimization function to guarantee their inclusion in the final set. Other targets, such as those associated with virulence or antimicrobial resistance can also be included. VaST will search for additional targets, considering many different types of genetic variation including: single nucleotide polymorphisms (SNPs), microsatellites, variable number tandem repeat (VNTRs), and small insertion/deletions (indels). These targets will be contained within a user-specified amplicon size that is appropriate for the desired sequencing technology. Because the selected targets must be amplifiable across all the strain variants, VaST will pre-filter any target that does not have sufficiently well conserved flanking primer sequences. VaST will identify and add new targets until either maximum resolution is reached, a predetermined resolution level is reached, or a specified number of targets have been identified.</p>
    <p>Finding the minimal number of targets to achieve the desired resolution is important because it keeps costs low and it limits the potential for adverse primer interactions during multiplex PCR. Given a set of variable genomic sites to choose from, this task is, in essence, a minimum spanning set problem — the minimum set of genomic features that is capable of uniquely identifying each strain. Naively, one would hope to find a single polymorphic site per strain that uniquely distinguishes it from all other strains. In practice, finding a signature polymorphism for each strain is unlikely and the significance of such a signature may erode when additional strains are considered. Instead, our approach seeks to identify a “haplotype” or a collection of polymorphisms which in concert, provide a composite signature that is unique for any given strain. The resulting set of targets needs to be robust enough to proactively handle the rapid expansion of sequences for new strains that come with the genomic age. For this reason, we believe that the best set of targets should include basal genomic features that are stable across entire clades of strains and allow accurate placement of strains that have not been seen before. Our minimum spanning set algorithm selects each new target site based on its ability to evenly split up groups of unresolved strains. An important aspect of evenly splitting the strain complex at each step is that the early additions to the minimum spanning set tend to be more phylogenetically basal. Due to an abundance of “deep” phylogenetic markers, our approach, as we demonstrate, is very robust to characterizing previously unseen strains.</p>
    <p>Several groups have developed approaches for identifying a minimum set of target markers for various purposes. Pan-PCR [<xref ref-type="bibr" rid="CR34">34</xref>] and the Loci Selector Module of PanSeq [<xref ref-type="bibr" rid="CR35">35</xref>] are the most <italic>thematically</italic> similar approaches as they both focus on strain typing; however, there are other methods which focus on different problems like finding a minimum set of haplotype tagging Single Nucleotide Polymorphisms (htSNPs) for identifying haplotype blocks [<xref ref-type="bibr" rid="CR36">36</xref>–<xref ref-type="bibr" rid="CR40">40</xref>]. The Pan-PCR algorithm uses whole genome sequence data from closely related strains to find a minimum number of gene targets whose presence or absence in a PCR product can be used to distinguish a set of input strains. Primers are designed specifically for each target to ensure that they produce different sized PCR products and the amplified targets are separated in a gel, producing a unique banding pattern that acts as a fingerprint for each of the strains of interest. In contrast, VaST’s minimum spanning set algorithm is able to take advantage of variation that exist in both coding and non-coding regions of the genome which provides a larger pool of options for strain differentiation. This is critical when expanding this approach to viral organisms. VaST is also intended to be used in a sequencing-based approach which will maximize the information content of polymorphic sites, making it possible to detect presence of previously unseen strains and to place them within existing phylogenies. The Loci Selector (LS) module of the PanSeq program is another algorithm which attempts to find loci that offer maximum discriminatory power between certain strains. Like, VaST, the LS module is agnostic with respect to the type of sequence variation that is provided as input. Unlike VaST however, the goal of the LS module is not to find a minimum set of sites that together provide maximum resolution, but rather to find a set (of a provided size) of the most discriminatory loci that have the least amount of overlap. In this case, loci that are “deeper” in the phylogeny are not prioritized because they resolve clades rather than individual strains. The resulting set of targets provides strain resolution but are less robust to correctly placing “new” strains – those not part of the original panel.</p>
    <p>In this paper we present the VaST algorithm which computes a minimum set of targets for the purpose of bacterial strain differentiation. We provide benchmarks, computational and experimental validation, and resolution comparisons to the LS module of PanSeq and MLST assays to demonstrate how VaST can help streamline the development of fast, efficient, and cost-effective strain identification assays.</p>
  </sec>
  <sec id="Sec2">
    <title>Implementation</title>
    <p>VaST is written in Python and is designed to convert a set of genomic features from different strains into a minimum spanning set of targets which will achieve a maximum (or user-defined) level of strain differentiation. The set of genomic features can be identified using a number of available software packages that detect variant sites across a collection of genomes (we utilized NASP, a single nucleotide polymorphism (SNP) detection pipeline [<xref ref-type="bibr" rid="CR41">41</xref>]). VaST accepts a variant site matrix where each row represents a genomic site that varies across the columns of strains; the values in the matrix characterize the state of each strain at the variable sites (See example in Table <xref rid="Tab1" ref-type="table">1</xref>). Many different types of genomic variation can be included in this matrix (SNPs, indels, VNTRs, etc.) provided that the variable region is short enough to be captured in a single amplicon.
<table-wrap id="Tab1"><label>Table 1</label><caption><p>SNP Matrix example</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">LocusID</th><th align="left">Strain A</th><th align="left">Strain B</th><th align="left">Strain C</th><th align="left">Strain D</th><th align="left">Strain E</th></tr></thead><tbody><tr><td align="left">genome123::115::115</td><td align="left">A</td><td align="left">T</td><td align="left">A</td><td align="left">A</td><td align="left">T</td></tr><tr><td align="left">genome123::120::120</td><td align="left">G</td><td align="left">C</td><td align="left">G</td><td align="left">G</td><td align="left">C</td></tr><tr><td align="left">genome123::121::121</td><td align="left">T</td><td align="left">C</td><td align="left">C</td><td align="left">C</td><td align="left">C</td></tr><tr><td align="left">genome123::130::130</td><td align="left">C</td><td align="left">G</td><td align="left">G</td><td align="left">G</td><td align="left">C</td></tr><tr><td align="left">genome123::209::209</td><td align="left">A</td><td align="left">C</td><td align="left">C</td><td align="left">N</td><td align="left">G</td></tr><tr><td align="left">genome123::405::405</td><td align="left">-</td><td align="left">-</td><td align="left">X</td><td align="left">C</td><td align="left">C</td></tr><tr><td align="left">genome123::511::541</td><td align="left">10</td><td align="left">8</td><td align="left">8</td><td align="left">10</td><td align="left">8</td></tr><tr><td align="left">⋮</td><td align="left">⋮</td><td align="left">⋮</td><td align="left">⋮</td><td align="left">⋮</td><td align="left">⋮</td></tr></tbody></table><table-wrap-foot><p>The first column of a variant site matrix contains a genome identifier, a start position, and an end position, each separated by two colons. The start and end position should be the same for SNPs. Each additional column represents a strain and the calls made at each variant site for that strain. The first five rows contain SNPs, the sixth row contains an indel with missing data for Strain C, and the last row contains the lengths of VNTRs (the stopping position is based on the longest repeat of 3 in this case)</p></table-wrap-foot></table-wrap></p>
    <p>VaST is able to correctly interpret variant site matrices that contain missing data and ambiguous base calls; although, such sites can slow down the processing of the matrix. To speed up the preprocessing, VaST can be run in a strict mode which will ignore any site with ambiguous or missing data. By default, missing data is represented by an “X”, and deletions are represented by a “-”, and VNTRs can be represented by the number of repeats. The only other permissible character states in the matrix are DNA bases and IUPAC ambiguous base codes [<xref ref-type="bibr" rid="CR42">42</xref>].</p>
    <p>To run the Amplicon Filter Module (Fig. <xref rid="Fig1" ref-type="fig">1</xref>a), VaST requires information about the regions upstream and downstream of each of the variant sites. Therefore, a full genome matrix must be provided which should include a call for each position in the genome for all of the strains. This matrix can be generated through the alignment of genome assemblies to a reference genome or from Variant Call Format (VCF) files [<xref ref-type="bibr" rid="CR43">43</xref>] that contain calls for each position in the genome.
<fig id="Fig1"><label>Fig. 1</label><caption><p>VaST Pipeline Schematic. <bold>a</bold> Overview of the VaST pipeline. <bold>b</bold> The window (gray box) starts at the first site (115) and captures two additional sites (120 and 121). The amplicon (black box) extends from the first to the last variant site in the window and the primer zones (arrows) extend in opposite directions. <bold>c</bold> The primer zone region is extracted from the full genome matrix and the number of strains that are missing data (X) or have a base call that differs from the reference are counted for each position. <bold>d</bold> A position in the primer zone is flagged (!) when the number of poorly conserved strains is greater than or equal to the strain cutoff value. <bold>e</bold> To pass the filter in this example, 20% of the primer zone positions must be a member of a conserved segment that is longer than three positions. <bold>f</bold> The table shows the variant sequence features of the amplicons <bold>g</bold> The resolution pattern of each amplicon is determined and the amplicons that contain redundant information are combined (e.g. Amplicon 3 &amp; 4 into Pattern 3). For ambiguous (N) or missing calls (X), all of the possibilities are enumerated and the strain simultaneously belongs to all of the feature categories that overlap with those of the other strains. The bottom row is the resolution score, <italic>r</italic>, for each pattern. The minimum spanning set algorithm favors patterns that evenly split up groups of strains. Using SNPs as an example, <bold>h</bold> is the best case scenario where <italic>N</italic> strains can be resolved with log4(<italic>N</italic>) SNPs; however, <bold>i</bold> log2(<italic>N</italic>) is more likely with bi-allelic SNPs. <bold>j</bold> In the worst case, highly unbalanced splitting can occur which can require at most <italic>N</italic>−1 SNPs to resolve <italic>N</italic> strains. <bold>k</bold> The associated haplotypes for each of the minimum spanning sets in (<bold>h</bold>-<bold>j</bold>)</p></caption><graphic xlink:href="12859_2018_2225_Fig1_HTML" id="MO1"/></fig></p>
    <sec id="Sec3">
      <title>Finding candidate amplicons from target sites</title>
      <p>It is assumed that the target sites identified by VaST will ultimately be amplified using PCR and sequenced. Therefore, we included an Amplicon Filter Module which treats each variant site as a potential amplicon, combining adjacent sites as necessary, and filters out any amplicons that may be difficult to amplify in all strains.</p>
      <p>When multiple variant sites are clustered together, it is more efficient to consider them together as a single amplicon which can be amplified with one pair of primers. The combination of sites in such an amplicon may sometimes provide more strain resolution than any one of the sites individually, and these more efficient amplicons will naturally be favored during the VaST Pattern Selection Module (Fig. <xref rid="Fig1" ref-type="fig">1</xref>a). The maximum distance between adjacent variant sites is defined by a window size parameter. The window starts at the position of the first variant site, and the algorithm checks to see if any of the next variant sites are captured within the window. If the window contains only the original site, this single target amplicon will be sent to the filtering step. If the window contains multiple variant sites, as shown in Fig. <xref rid="Fig1" ref-type="fig">1</xref>b, then the amplicon containing all of the sites will be sent to the filter. If this multi-target amplicon fails the filter, the last target site in the window will be removed and this modified amplicon will be sent to the filter. This will be repeated until either an amplicon passes the filter or there are no more target sites in the amplicon. Once the options at the first position are exhausted, the window shifts down to the next variant site. It is possible for the same region to be captured in multiple amplicons so VaST will avoid choosing overlapping amplicons in the final solution. Customizing window lengths allows VaST to be optimized for a wide range of sequencing platforms, which vary widely in the lengths of genomic sequences that can be produced.</p>
      <p>To amplify the target sites in a PCR, primers must be designed to anneal in the regions upstream and downstream of the target. If a single set of primers is to be designed that will amplify the target across all of the strains, the primer region must be well conserved. While VaST does not attempt to design the primers themselves, it does consider the conservation of the upstream and downstream primer regions and filters out targets that contain too much variation. During the filtering step, the proposed upstream and downstream PCR primer zones are analyzed and if they contain too much variation between the known strains (based on the number of strains with an alternative allele), or if there are too many strains with missing data, the amplicon is removed from consideration. This ensures that any remaining target sites will have highly conserved primer zones, and thus, have many options for primer design. The cutoffs for acceptable amounts of variation and number of missing strains are user-defined.</p>
      <p>More specifically, amplicon filtering is determined by a number of user-provided parameters: the size of the primer zone, a strain cutoff, a primer zone filter percent, and a primer zone filter length. For each amplicon, the base calls for the upstream and downstream primer zone are retrieved from the full genome matrix (Fig. <xref rid="Fig1" ref-type="fig">1</xref>c). For each position in the primer zone, the number of strains with a variation or with missing data are counted and, if the count is greater than or equal to the strain cutoff, the position is flagged (Fig. <xref rid="Fig1" ref-type="fig">1</xref>d). The segments of the primer zone that are not interrupted by flagged positions are highly conserved and are appropriate for primer design (Fig. <xref rid="Fig1" ref-type="fig">1</xref>e). However, in order to pass the filter, a certain percent (primer zone filter percent) of the primer zone positions must be present in segments that are longer than the primer zone filter length. This ensures that the conserved sections of the primer zone are long and contiguous. The primer zone filter is applied separately to the upstream and downstream primer zones, and both zones must pass the filter in order for the amplicon to remain. Table <xref rid="Tab2" ref-type="table">2</xref> provides a summary of the parameters required for the Amplicon Filter Module.
<table-wrap id="Tab2"><label>Table 2</label><caption><p>Amplicon Filter Module parameter descriptions and considerations</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Parameter</th><th align="left">Description</th><th align="left">Notes</th></tr></thead><tbody><tr><td align="justify">Strict mode</td><td align="justify">VaST ignores missing or ambiguous data in input matrix</td><td align="justify">Speeds up preprocessing but some sites are lost</td></tr><tr><td align="justify">Window size</td><td align="justify">Maximum distance between adjacent sites that can be combined into a single amplicon</td><td align="justify">The desired amplicon length should be considered when setting the window size. A larger window may increase the number of variant sites that are included in the amplicons making them more efficient</td></tr><tr><td align="justify">Primer zone size</td><td align="justify">Size of the region upstream and downstream of the target to evaluate in the amplicon filter</td><td align="justify">The primer zones begin immediately before the first and immediately after the last target site in the window, so the maximum amplicon size is 2 × primer zone size + window size. A smaller primer zone may limit the number of primer options.</td></tr><tr><td align="justify">Strain Cutoff</td><td align="justify">The number of strains at a primer zone site that can have a non-conserved call before the site is flagged.</td><td align="justify">A strain cutoff greater than one will not guarantee that the primer zone sequences are conserved across all of the strains but it may be appropriate in cases where one or a few strains have low sequence coverage</td></tr><tr><td align="justify">Primer zone filter percent</td><td align="justify">The percent of primer zone positions that must be present in un-flagged segments of the primer zone that are longer than the primer zone filter length.</td><td align="justify">A higher primer zone filter percent will increase the total number of primer options in amplicons that pass the filter</td></tr><tr><td align="justify">Primer zone filter length</td><td align="justify">The length of un-flagged primer zone segments that count toward the primer zone filter percent</td><td align="justify">The primer zone filter length should be at least as long as the minimum acceptable primer length to ensure that conserved primers can be found within the primer zone</td></tr></tbody></table></table-wrap></p>
    </sec>
    <sec id="Sec4">
      <title>Characterizing the discriminatory power of candidate amplicons</title>
      <p>A resolution pattern is calculated for each amplicon after it passes the amplicon filter. The resolution pattern describes which strains share the same features for a given amplicon (Fig. <xref rid="Fig1" ref-type="fig">1</xref>f). The Pattern Discovery Module maps the vector of strain features, <bold>q</bold>, for each amplicon to a pattern vector, <bold>p</bold>, which contains sets denoting the membership of each strain in a unique feature category (Eq. <xref rid="Equ1" ref-type="">1</xref> and Fig. <xref rid="Fig1" ref-type="fig">1</xref>g). Strains will typically belong to a single feature category but they may belong to multiple categories when they have ambiguous or missing base calls at the target sites within the amplicon (Fig. <xref rid="Fig1" ref-type="fig">1</xref>g, Pattern 4, Strain D). When operating under strict mode, the algorithm can assume that there are no missing or ambiguous calls and Eq. <xref rid="Equ1" ref-type="">1</xref> simplifies to Eq. <xref rid="Equ2" ref-type="">2</xref>. 
<disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ {\selectfont{\begin{aligned} \mathbf{q} &amp;= \left[s_{1}, s_{2}, \dotsc, s_{n}\right];\!\!\!\!\quad \text{where \textit{s} is the set of feature states}\\ &amp;\qquad\qquad\qquad\qquad\quad\!\!\! \text{for each of the \textit{n} strains}\\ \mathbf{p} &amp;= \left[f(s_{1}), f(s_{2}), \dotsc, f(s_{n})\right] \\ {}f\left(s; a = \{\mathbf{q}: \vert s_{i} \vert = 1\}\right) &amp;= \left\{\begin{array}{ll} g(s;a) &amp; \quad \text{if}\,g(s;a) \neq \emptyset\\ f(s;a \cup s) &amp; \quad \text{otherwise}  \\ \end{array}\right. \\ g\left(s; a\right) &amp;= \left\{i \colon a_{i} \cap s \neq \emptyset\right\} \\ \end{aligned}}}  $$ \end{document}</tex-math><mml:math id="M2"><mml:mtable><mml:mtr><mml:mtd><mml:mi mathvariant="bold">q</mml:mi></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mfenced close="]" open="[" separators=""><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfenced><mml:mo>;</mml:mo><mml:mspace width="0.3em"/><mml:mspace width="0.3em"/><mml:mspace width="0.3em"/><mml:mspace width="0.3em"/><mml:mspace width="1em"/><mml:mtext>where </mml:mtext><mml:mi>s</mml:mi><mml:mtext> is the set of feature states</mml:mtext></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mspace width="2em"/><mml:mspace width="2em"/><mml:mspace width="2em"/><mml:mspace width="2em"/><mml:mspace width="1em"/><mml:mspace width="0.3em"/><mml:mspace width="0.3em"/><mml:mspace width="0.3em"/><mml:mtext>for each of the</mml:mtext><mml:mi>n</mml:mi><mml:mtext>strains</mml:mtext></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi mathvariant="bold">p</mml:mi></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mfenced close="]" open="[" separators=""><mml:mrow><mml:mi>f</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>,</mml:mo><mml:mi>f</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>f</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mfenced></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>f</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mi>s</mml:mi><mml:mo>;</mml:mo><mml:mi>a</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mi mathvariant="bold">q</mml:mi><mml:mo>:</mml:mo><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:mfenced></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mfenced close="" open="{" separators=""><mml:mrow><mml:mtable class="array" columnalign="left"><mml:mtr><mml:mtd><mml:mi>g</mml:mi><mml:mo>(</mml:mo><mml:mi>s</mml:mi><mml:mo>;</mml:mo><mml:mi>a</mml:mi><mml:mo>)</mml:mo></mml:mtd><mml:mtd><mml:mspace width="1em"/><mml:mtext>if</mml:mtext><mml:mspace width="0.3em"/><mml:mi>g</mml:mi><mml:mo>(</mml:mo><mml:mi>s</mml:mi><mml:mo>;</mml:mo><mml:mi>a</mml:mi><mml:mo>)</mml:mo><mml:mo>≠</mml:mo><mml:mi>∅</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>f</mml:mi><mml:mo>(</mml:mo><mml:mi>s</mml:mi><mml:mo>;</mml:mo><mml:mi>a</mml:mi><mml:mo>∪</mml:mo><mml:mi>s</mml:mi><mml:mo>)</mml:mo></mml:mtd><mml:mtd><mml:mspace width="1em"/><mml:mtext>otherwise</mml:mtext></mml:mtd></mml:mtr><mml:mtr/></mml:mtable></mml:mrow></mml:mfenced></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>g</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mi>s</mml:mi><mml:mo>;</mml:mo><mml:mi>a</mml:mi></mml:mrow></mml:mfenced></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mfenced close="}" open="{" separators=""><mml:mrow><mml:mi>i</mml:mi><mml:mo>:</mml:mo><mml:msub><mml:mrow><mml:mi>a</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>∩</mml:mo><mml:mi>s</mml:mi><mml:mo>≠</mml:mo><mml:mi>∅</mml:mi></mml:mrow></mml:mfenced></mml:mtd></mml:mtr><mml:mtr/></mml:mtable></mml:math><graphic xlink:href="12859_2018_2225_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>Assuming there are no missing or ambiguous calls, Eq. <xref rid="Equ1" ref-type="">1</xref> simplifies to: 
<disp-formula id="Equ2"><label>2</label><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ f_{s}\left(s; a = \{\mathbf{q}\}\right) \mapsto \{i \colon a_{i} \in s \}   $$ \end{document}</tex-math><mml:math id="M4"><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mi>s</mml:mi><mml:mo>;</mml:mo><mml:mi>a</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mi mathvariant="bold">q</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:mfenced><mml:mo>↦</mml:mo><mml:mo>{</mml:mo><mml:mi>i</mml:mi><mml:mo>:</mml:mo><mml:msub><mml:mrow><mml:mi>a</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:mi>s</mml:mi><mml:mo>}</mml:mo></mml:math><graphic xlink:href="12859_2018_2225_Article_Equ2.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>Despite differences in the specific sequence information of each amplicon, many amplicons will contain redundant strain differentiating information (e.g. Fig. <xref rid="Fig1" ref-type="fig">1</xref>f, Amplicon 3 &amp; Amplicon 4). Therefore, instead of storing all of the amplicons individually, they are grouped together based on their strain resolution pattern (Fig. <xref rid="Fig1" ref-type="fig">1</xref>g, Pattern 3). Each of these patterns along with the start and stop positions of their associated amplicons are saved in a JSON file that can be passed repeatedly to the Pattern Selection Module without rerunning the preprocessing steps.</p>
      <sec id="Sec5">
        <title>Constructing the minimal set of targets</title>
        <p>The primary goal of the Pattern Selection Module is to find a minimum spanning set, which we define as the minimum number of patterns that are required to achieve maximum strain resolution. A naive brute-force approach to solving for the minimum spanning set requires an exhaustive search of all possible subsets of variant sites, starting from size 1 to <italic>N</italic> where <italic>N</italic> is the size of the minimum spanning set. In the worst case, this approach has exponential complexity (<inline-formula id="IEq1"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {O}(2^{n})$\end{document}</tex-math><mml:math id="M6"><mml:mi mathvariant="script">O</mml:mi><mml:mo>(</mml:mo><mml:msup><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msup><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12859_2018_2225_Article_IEq1.gif"/></alternatives></inline-formula>), which quickly becomes an intractable problem even for relatively small sets of variant sites. For example, given a set <italic>V</italic> of 1,000 variant sites, the size of the search space, |<italic>S</italic>|, that is required to find a minimum spanning set of size 50 is on the order of 10<sup>85</sup> combinations — more than the estimated number of atoms in the universe. For reference, a typical SNP matrix for a well-studied bacterial strain complex contains 10-30 thousand SNPs. 
<disp-formula id="Equ3"><label>3</label><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ {\selectfont{\begin{aligned} {}\vert S \vert \,=\, \sum\limits^{N}_{k=1} \frac{\vert V \vert !}{k!\left(\vert V \vert \,-\, k\right)!}; \quad \!\!\! &amp; \text{where}\ V\ \text{is the set of variant sites and}\ N\ \text{is the}\\ &amp;\text{size of the first minimum spanning set.} \end{aligned}}}  $$ \end{document}</tex-math><mml:math id="M8"><mml:mtable><mml:mtr><mml:mtd><mml:mo>|</mml:mo><mml:mi>S</mml:mi><mml:mo>|</mml:mo><mml:mspace width="0.3em"/><mml:mo>=</mml:mo><mml:mspace width="0.3em"/><mml:munderover accent="false" accentunder="false"><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>N</mml:mi></mml:mrow></mml:munderover><mml:mfrac><mml:mrow><mml:mo>|</mml:mo><mml:mi>V</mml:mi><mml:mo>|</mml:mo><mml:mo>!</mml:mo></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>!</mml:mo><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mo>|</mml:mo><mml:mi>V</mml:mi><mml:mo>|</mml:mo><mml:mspace width="0.3em"/><mml:mo>−</mml:mo><mml:mspace width="0.3em"/><mml:mi>k</mml:mi></mml:mrow></mml:mfenced><mml:mo>!</mml:mo></mml:mrow></mml:mfrac><mml:mo>;</mml:mo><mml:mspace width="1em"/><mml:mspace width="0.3em"/><mml:mspace width="0.3em"/><mml:mspace width="0.3em"/></mml:mtd><mml:mtd><mml:mtext>where</mml:mtext><mml:mspace width="1em"/><mml:mi>V</mml:mi><mml:mspace width="1em"/><mml:mtext>is the set of variant sites and</mml:mtext><mml:mspace width="1em"/><mml:mi>N</mml:mi><mml:mspace width="1em"/><mml:mtext>is the</mml:mtext></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mtext>size of the first minimum spanning set.</mml:mtext></mml:mtd></mml:mtr></mml:mtable></mml:math><graphic xlink:href="12859_2018_2225_Article_Equ3.gif" position="anchor"/></alternatives></disp-formula></p>
        <p>Because a brute-force approach is intractable, we take a greedy approach which does not guarantee that the absolute minimum spanning set will be found but it will find a locally-optimal, minimized spanning set in a reasonable amount of time. The minimum spanning set algorithm implemented in VaST takes advantage of the exponential increase in discriminatory power with each additional pattern that is added to the set. For example, a single SNP can differentiate at most three strains because there are 4 DNA bases and at least one of the variants must be repeated for any group of more than four strains. When two SNPs are combined into a haplotype the number of possible combinations increases to 16, and a maximum of 15 strains may be uniquely identified. The discriminatory power increases exponentially at 4<sup><italic>n</italic></sup>−1 where <italic>n</italic> is the number of SNPs in the haplotype. In contrast, binary variant (presence/absence or wild-type/mutant) approaches (c.p. [<xref ref-type="bibr" rid="CR34">34</xref>]) can achieve a maximum discriminatory power of only 2<sup><italic>n</italic></sup>−1.</p>
        <p>For SNPs, the theoretical minimum spanning set requires log4(<italic>N</italic>) SNPs to resolve <italic>N</italic> strains (Fig. <xref rid="Fig1" ref-type="fig">1</xref>h). To achieve this minimum, each SNP must contain all four allelic variants and the variants must evenly split up each group of unresolved strains. In practice, many SNPs are only bi- or tri-allelic so a more realistic minimum would be log2(<italic>N</italic>) which may still be difficult to achieve when working with a limited set of available patterns (Fig. <xref rid="Fig1" ref-type="fig">1</xref>i). In the worst case, each SNP is only able to differentiate a single strain which causes highly uneven splitting and can require up to <italic>N</italic>−1 SNPs (Fig. <xref rid="Fig1" ref-type="fig">1</xref>j).</p>
        <p>In order to get as close as possible to the minimum number of variant sites, VaST favors the addition of sites that do the best job of evenly splitting up the most remaining groups of unresolved strains. In practice, this predisposes VaST to prefer at least some phylogenetically basal variants in its solutions (stable variants that occurred sufficiently far in the organism’s past to be established in multiple clades’ lineages). This confers significant advantages when encountering previously unobserved strains. More specifically, the algorithm iteratively incorporates patterns into the set by choosing the pattern that provides the greatest reduction in the set resolution score, <italic>r</italic>, (Eq. <xref rid="Equ4" ref-type="">4</xref>, Fig. <xref rid="Fig1" ref-type="fig">1</xref>g, bottom row). Before any sites are added, each value in the minimum spanning set pattern vector is zero because all of the strains are members of the same null haplotype category. The resolution score is also set to the maximum value of <italic>N</italic>(<italic>N</italic>−1) where <italic>N</italic> is the number of strains. At the beginning, a resolution score is also calculated for each of the amplicon pattern vectors and they are sorted from lowest (best) to highest (worst). Due to the nature of greedy algorithms, it is likely that pattern choices that are locked in the early stages can lead to a sub-optimal solution. Therefore, a number of the top patterns from the sorted list can be selected to seed several distinct, independently-built sets and the best solution will be returned at the end.</p>
        <p>When the first pattern is added, the minimum spanning set pattern vector is updated (Eqs. <xref rid="Equ5" ref-type="">5</xref> or <xref rid="Equ6" ref-type="">6</xref> in strict mode), the resolution score is recalculated and the selected pattern is removed from further consideration. The remaining pattern vectors are then updated so they reflect their resolution combined with the resolution of the current minimum spanning set (Eqs. <xref rid="Equ5" ref-type="">5</xref> or <xref rid="Equ6" ref-type="">6</xref>) and their scores are recalculated (Eq. <xref rid="Equ4" ref-type="">4</xref>). The pattern with the best score is then added to the minimum spanning set. Patterns are continually added in this manner until (1) full resolution is reached at which point each strain will have a unique haplotype and the set resolution score is zero; (2) when none of the remaining patterns are able to improve the current resolution of the set; (3) when some predefined number of sites or resolution threshold is reached; (4) no more patterns remain. 
<disp-formula id="Equ4"><label>4</label><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ r = \sum\limits_{i=0}^{\max(\mathbf{p})} s_{i}^{2} - s_{i} ; \\  $$ \end{document}</tex-math><mml:math id="M10"><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:munderover accent="false" accentunder="false"><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mo>max</mml:mo><mml:mo>(</mml:mo><mml:mi mathvariant="bold">p</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:munderover><mml:msubsup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>;</mml:mo></mml:math><graphic xlink:href="12859_2018_2225_Article_Equ4.gif" position="anchor"/></alternatives></disp-formula></p>
        <p>where <bold>p</bold> is a pattern vector and <italic>s</italic><sub><italic>i</italic></sub> is the number of strains in the <italic>i</italic><sup>th</sup> feature category. 
<disp-formula id="Equa"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\mathbf{p}_{\text{update}} = \left[f(p_{t1} \times p_{s1}), f(p_{t2} \times p_{s2}), \dotsc, f(p_{tn} \times p_{sn})\right] ; $$ \end{document}</tex-math><mml:math id="M12"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">p</mml:mi></mml:mrow><mml:mrow><mml:mtext>update</mml:mtext></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfenced close="]" open="[" separators=""><mml:mrow><mml:mi>f</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>×</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>,</mml:mo><mml:mi>f</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>×</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>f</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">tn</mml:mtext></mml:mrow></mml:msub><mml:mo>×</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">sn</mml:mtext></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mfenced><mml:mo>;</mml:mo></mml:mrow></mml:math><graphic xlink:href="12859_2018_2225_Article_Equa.gif" position="anchor"/></alternatives></disp-formula> where <italic>p</italic><sub><italic>ti</italic></sub>×<italic>p</italic><sub><italic>si</italic></sub> is the cartesian product between sets in a pattern vector, <italic>p</italic><sub><italic>t</italic></sub>, and the current minimum spanning set pattern vector, <italic>p</italic><sub><italic>s</italic></sub>. 
<disp-formula id="Equ5"><label>5</label><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ {\selectfont{\begin{aligned} a &amp;= \left\{p_{ti} \times p_{si} \forall i \in \{1,2, \dotsc, n\} \colon \vert p_{ti} \times p_{si} \vert = 1\right\} \\[1em] {}f\left(p_{t} \times p_{s}; a\right) &amp;= \left\{\begin{array}{ll} g(p_{t} \times p_{s}; a) \quad &amp; \text{if}\ g(p_{t} \!\times\! p_{s}; a) \neq \emptyset \\[1.5em] f(p_{t} \times p_{s}; a\cup (p_{t}\times p_{s})) \quad &amp; \text{otherwise} \end{array}\right. \\ \end{aligned}}}  $$ \end{document}</tex-math><mml:math id="M14"><mml:mtable><mml:mtr><mml:mtd><mml:mi>a</mml:mi></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mfenced close="}" open="{" separators=""><mml:mrow><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">ti</mml:mtext></mml:mrow></mml:msub><mml:mo>×</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">si</mml:mtext></mml:mrow></mml:msub><mml:mo>∀</mml:mo><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>}</mml:mo><mml:mo>:</mml:mo><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">ti</mml:mtext></mml:mrow></mml:msub><mml:mo>×</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">si</mml:mtext></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfenced></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>f</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>×</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>;</mml:mo><mml:mi>a</mml:mi></mml:mrow></mml:mfenced></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mfenced close="" open="{" separators=""><mml:mrow><mml:mtable class="array" columnalign="left"><mml:mtr><mml:mtd><mml:mi>g</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>×</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>;</mml:mo><mml:mi>a</mml:mi><mml:mo>)</mml:mo><mml:mspace width="1em"/></mml:mtd><mml:mtd><mml:mtext>if</mml:mtext><mml:mspace width="1em"/><mml:mi>g</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mspace width="0.3em"/><mml:mo>×</mml:mo><mml:mspace width="0.3em"/><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>;</mml:mo><mml:mi>a</mml:mi><mml:mo>)</mml:mo><mml:mo>≠</mml:mo><mml:mi>∅</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>f</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>×</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>;</mml:mo><mml:mi>a</mml:mi><mml:mo>∪</mml:mo><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>×</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>)</mml:mo><mml:mspace width="1em"/></mml:mtd><mml:mtd><mml:mtext>otherwise</mml:mtext></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mtd></mml:mtr><mml:mtr/></mml:mtable></mml:math><graphic xlink:href="12859_2018_2225_Article_Equ5.gif" position="anchor"/></alternatives></disp-formula></p>
        <p>Assuming there are no missing or ambiguous calls, Eq. <xref rid="Equ5" ref-type="">5</xref> simplifies to: 
<disp-formula id="Equ6"><label>6</label><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ {}f_{s}(p_{t} \times p_{s}; a\! = \!\{p_{ti} \times p_{si} \forall i \in \{1, 2, \dotsc, n\}\}) \!\mapsto\! \{i \colon a_{i} \!\in \!(p_{t} \times p_{s}) \}   $$ \end{document}</tex-math><mml:math id="M16"><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>×</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>;</mml:mo><mml:mi>a</mml:mi><mml:mspace width="0.3em"/><mml:mo>=</mml:mo><mml:mspace width="0.3em"/><mml:mo>{</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">ti</mml:mtext></mml:mrow></mml:msub><mml:mo>×</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">si</mml:mtext></mml:mrow></mml:msub><mml:mo>∀</mml:mo><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>}</mml:mo><mml:mo>}</mml:mo><mml:mo>)</mml:mo><mml:mspace width="0.3em"/><mml:mo>↦</mml:mo><mml:mspace width="0.3em"/><mml:mo>{</mml:mo><mml:mi>i</mml:mi><mml:mo>:</mml:mo><mml:msub><mml:mrow><mml:mi>a</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mspace width="0.3em"/><mml:mo>∈</mml:mo><mml:mspace width="0.3em"/><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>×</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>}</mml:mo></mml:math><graphic xlink:href="12859_2018_2225_Article_Equ6.gif" position="anchor"/></alternatives></disp-formula></p>
        <p>If multiple patterns tie for the best score, the one that is further up in the original sorted list is chosen because it will provide the greatest redundancy in the final set of patterns. This is due to the fact that higher ranking patterns offer more diversity, and therefore are more likely to complement other patterns in the set and partially compensate for them if they are missing. This added tolerance is beneficial because some of the targets might not be successfully amplified and sequenced.</p>
        <p>As patterns are added, their associated amplicons are checked for overlap with the amplicons that are already included in the set. If a conflict cannot be resolved by removing one of the amplicons, then the new pattern is skipped and the pattern with the next best score is added and checked.</p>
      </sec>
    </sec>
    <sec id="Sec6">
      <title>Customizing the VaST workflow</title>
      <p>Several user-defined parameters change the way the Pattern Selection Module handles the input data. Certain strains that are included in the preprocessing step can be marked for removal and will therefore not be considered in determining the final resolution. Lists of variant sites can be flagged either for removal or for mandatory inclusion in the final set. By default, VaST attempts to achieve maximum strain resolution; however, there are settings which will force VaST to stop once a certain number of amplicons have been added or when a resolution threshold has been met. Finally, an additional input array may be supplied which defines an alternative resolution objective. By default, VaST will not prioritize the resolution of any particular strains. If an alternative resolution objective is provided, VaST will favor patterns that help attain the alternative resolution before attempting full resolution. Alternative resolution objectives are useful when it is more critical to resolve certain strains over others. To summarize, VaST can be run using any of the following workflow options: the full workflow which provides full strain resolution using any of the amplicon candidates, the abridged workflow which stops once a user-specified number of amplicons are added or a resolution threshold is met, the weighted workflow which prioritizes the resolution of certain groups of strains using an alternative resolution objective, and the set extension workflow which appends to an existing set of targets.</p>
    </sec>
  </sec>
  <sec id="Sec7" sec-type="results">
    <title>Results</title>
    <sec id="Sec8">
      <title>Benchmarking</title>
      <p>We benchmarked VaST’s performance using 6 bacterial strain complexes: 537 strains of <italic>Escherichia coli</italic> using 189,570 SNPs, 373 strains of <italic>Burkholderia pseudomallei</italic> using 94,647 SNPs, 269 strains of <italic>Yersinia pestis</italic> using 11,249 SNPs, 186 strains of <italic>Bacillus anthracis</italic> using 11,989 SNPs, 64 strains of <italic>Francisella tularensis</italic> using 16,720 SNPs, and 122 strains of <italic>Staphylococcus aureus</italic> using 169,382 SNPs. These pathogens were chosen based on their relevance to human disease outbreaks and their potential for use as biothreat agents. The strains we used were drawn from previously published and well-established strain complexes [<xref ref-type="bibr" rid="CR44">44</xref>–<xref ref-type="bibr" rid="CR47">47</xref>]. We generated minimum spanning sets for each strain complex to demonstrate how well VaST performs in a number of genomic contexts. The <italic>E. coli</italic> minimum spanning set was the most efficient by resolving all 537 strains with only 69 amplicons which is 88% fewer than the number required in the worst case (dotted gray line in Fig. <xref rid="Fig2" ref-type="fig">2</xref>). For the other species, the number of required sites was relatively higher, providing only a 66%, 52%, 32%, 22%, and 17% reduction in the number of required sites over the worst case for <italic>B. pseudomallei</italic>, <italic>Staphylococcus aureus</italic>, <italic>Y. pestis</italic>, <italic>B. anthracis</italic>, and <italic>F. tularensis</italic>, respectively. The resolution index — the difference between the number of strains and the average unresolved group size — increases dramatically within the first few sites which suggests that most of the resolution is achieved early on, generally within the first 20 sites for the species we tested. The remaining sites typically resolve only a couple of strains each.
<fig id="Fig2"><label>Fig. 2</label><caption><p>Most of the resolution is achieved within the first few targets. Minimum spanning sets were generated for strains of <italic>Bacillus anthracis</italic>, <italic>Burkholderia pseudomallei</italic>, <italic>Escherichia coli</italic>, <italic>Francisella tularensis</italic>, <italic>Staphylococcus aureus</italic>, and <italic>Yersinia pestis</italic>. The plot shows how the resolution index (<italic>N</italic><sub>strains</sub>− average group size±<italic>S</italic><italic>D</italic>) increases with each additional site.The number of differentiable strains included in the panel design and the size of the minimum spanning set is indicated next to each plot. The dashed vertical lines indicate the number of sites expected in the worst-case (<italic>N</italic>−1 sites)</p></caption><graphic xlink:href="12859_2018_2225_Fig2_HTML" id="MO2"/></fig></p>
      <p>The haplotype-based approach to building a minimum spanning set (as opposed to using a single unique marker to identify each strain) adds a large amount of redundancy. For example, no matter how early in the set a strain is resolved, its haplotype will still consist of all the target sites (e.g. Fig. <xref rid="Fig1" ref-type="fig">1</xref>j, strain 4). Similarly, if two strains are not resolved until the last site, all of the previous sites are redundant and do not provide any useful information for resolving the two strains (e.g. Fig. <xref rid="Fig1" ref-type="fig">1</xref>j, strains 1 &amp; 2). All of this redundancy is useful because it makes the set more robust to missing targets. This is evident in Fig. <xref rid="Fig3" ref-type="fig">3</xref> which shows how tolerant the <italic>Y. pestis</italic> minimum spanning set is to an increasing number of missing sites. Even when different combinations of 20 sites are missing, the median resolution index is 267.9 which is only slightly lower than the maximum resolution index of 269.
<fig id="Fig3"><label>Fig. 3</label><caption><p>The redundancy built into the minimum spanning set design makes it tolerant to missing sites. The plot shows how well the <italic>Yersinia pestis</italic> minimum spanning set tolerates missing sites. The x-axis is the number of missing sites and the y-axis is the expected resolution index. Each box-plot shows the distribution of resolution values for different panels (<italic>N</italic>=50) with 1 to 20 sites randomly removed. The resolution index of the full panel is 269 and the median resolution when 20 sites are missing is 267.9 — a difference of only 1.1</p></caption><graphic xlink:href="12859_2018_2225_Fig3_HTML" id="MO3"/></fig></p>
      <p>The entire VaST pipeline can be run on a laptop computer. The preprocessing modules (Amplicon Filter and Pattern Discovery) require the most computing resources, but the amount of time and memory required is highly dependent on the size of the initial variant site matrix and whether or not strict mode is activated. As an example, using a single core of a laptop with a 2.4 GHz Intel Core i5 processor and 8GB of RAM, the preprocessing for the <italic>Y. pestis</italic> data set took approximately 4 hours. If more computing resources are available, VaST can use multiprocessing to speed up the preprocessing steps. The Pattern Selection module runs relatively quickly, and took under an hour for the <italic>Y. pestis</italic> data.</p>
    </sec>
    <sec id="Sec9">
      <title>Computational validation</title>
      <p>We tested the performance of the full <italic>Y. pestis</italic> minimum spanning set using publicly available HTS data from NCBI’s Sequence Read Archive. We aligned reads generated from five different strains (Harbin35 (SRR1283952) [<xref ref-type="bibr" rid="CR48">48</xref>], Pestoides B (SRR2177700) [<xref ref-type="bibr" rid="CR49">49</xref>], Angola (SRR2153449) [<xref ref-type="bibr" rid="CR50">50</xref>], Antiqua (SRR2176134) [<xref ref-type="bibr" rid="CR51">51</xref>] from [<xref ref-type="bibr" rid="CR52">52</xref>], and KIM10 (SRR2084698) [<xref ref-type="bibr" rid="CR53">53</xref>] from [<xref ref-type="bibr" rid="CR54">54</xref>]) to a reference genome (NC_003143.1 [<xref ref-type="bibr" rid="CR55">55</xref>]) using bowtie2 [<xref ref-type="bibr" rid="CR56">56</xref>] and analyzed the calls at each of the target locations. In all five cases the haplotype collected from the sequencing data matched the expected strain.</p>
      <p>Sometimes samples will contain strains that were not a part of the original target panel design. To see how well the panel can perform when identifying such samples, we redesigned the <italic>Y. pestis</italic> panel after removing 5 of the original strains. The new panel required 176 sites to achieve full resolution and the removed strains were treated as if they were samples of new strains. Using the calls at the 176 target sites, we identified the strains that were most closely related to the sample strains based on how many of the calls matched. In each case, the strain that was the best match was also very closely related in the phylogentic tree (based on patristic distance) and the size of the clade that included both strains was small (Table <xref rid="Tab3" ref-type="table">3</xref>).
<table-wrap id="Tab3"><label>Table 3</label><caption><p>New strains that were not used to build the minimum spanning set are identified as closely related strains</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Assembly accession</th><th align="left">Strain name</th><th align="left">Patristic distance</th><th align="left">In same clade</th><th align="left">Clade size</th></tr></thead><tbody><tr><td align="left">GCA_000255875.1 [<xref ref-type="bibr" rid="CR61">61</xref>]</td><td align="left">Biovar Orientalis AS200901434</td><td align="left">2</td><td align="left">Yes</td><td align="left">3</td></tr><tr><td align="left">GCA_000186725.1 [<xref ref-type="bibr" rid="CR62">62</xref>]</td><td align="left">Biovar Medievalis Harbin 35</td><td align="left">7</td><td align="left">Yes</td><td align="left">2</td></tr><tr><td align="left">GCA_000182545.1 [<xref ref-type="bibr" rid="CR63">63</xref>]</td><td align="left">Pestoides A</td><td align="left">1</td><td align="left">Yes</td><td align="left">3</td></tr><tr><td align="left">GCA_000006645.1 [<xref ref-type="bibr" rid="CR64">64</xref>]</td><td align="left">KIM10</td><td align="left">9</td><td align="left">Yes</td><td align="left">2</td></tr><tr><td align="left">GCA_000013805.1 [<xref ref-type="bibr" rid="CR65">65</xref>]</td><td align="left">Nepal516</td><td align="left">10</td><td align="left">Yes</td><td align="left">3</td></tr></tbody></table><table-wrap-foot><p>The <italic>Y. pestis</italic> minimum spanning set was regenerated with 5 of the original strains removed. These strains were then treated as samples and identified using the new minimum spanning set. In each case, the strain that most closely matched the sample strain’s haplotype was closely related. The table shows the assembly accession and name of each of the strains that were removed. The patristic distance between the sample strain and the strain it was identified as was calculated using the full tree. The clade size is the size of the clade that included both strains</p></table-wrap-foot></table-wrap></p>
    </sec>
    <sec id="Sec10">
      <title>Comparison to other methods</title>
      <p>We compared the resolution achieved using VaST to the Loci Selector module of Panseq [<xref ref-type="bibr" rid="CR35">35</xref>] to demonstrate how our approach is different. Using a matrix of 96 SNPs identified from <italic>E. coli</italic> O157:H7 [<xref ref-type="bibr" rid="CR57">57</xref>], the LS module identified a collection of 20 SNPs that each individually offered the best discrimination for unique sets of strains. Combined, these 20 SNPs completely resolved 12 of the 19 strains, leaving a group of 7 unresolved strains. However, only 7 of the identified sites increased the resolution and the remaining 13 provided only redundant information. Because VaST prioritizes targets that evenly split up groups of strains rather than finding the most discriminatory targets at each step, it was able to completely resolve 13 strains (with a group of 6 remaining) using 6 sites. As the number of strains considered increases, we would expect an even larger improvement in performance.</p>
      <p>We also compared the strain resolution achieved with VaST to that of a traditional MLST assay using a total of 159 <italic>S. aureus</italic> whole genome sequences from the NCBI RefSeq database. Using these sequences, we generated a SNP matrix using NASP [<xref ref-type="bibr" rid="CR41">41</xref>] and identified the ST from 7 housekeeping genes (<italic>arcC, aroE, glpF, gmk, pta, tpi,</italic> and <italic>yqiL</italic>) using an open-source MLST program (https://github.com/tseemann/mlst). A total of 41 different groups were resolved using MLST genes, with group sizes ranging from a single strain (<italic>n</italic>=20) to 44 strains and a mean size of 4.0. Using a total of 59 amplicons, VaST resolved 138 groups, with group sizes ranging from a single strain (<italic>n</italic>=122) to 8 strains and a mean size of 1.2. Figure <xref rid="Fig4" ref-type="fig">4</xref> compares the resolution and it is clear that the VaST targets can resolve strains within very closely related groups.
<fig id="Fig4"><label>Fig. 4</label><caption><p>VaST identifies more targets than a traditional MLST and provides greater strain resolution. The neighbor joining tree was built using 5,000 SNPs from 159 strains of <italic>Staphylococcus aureus</italic>. The colors in the heatmap represent different strain groups ranging from 1-138. The MLST loci only resolved 41 groups as indicated by the smaller range of colors compared to VaST which resolved 138 groups</p></caption><graphic xlink:href="12859_2018_2225_Fig4_HTML" id="MO4"/></fig></p>
    </sec>
    <sec id="Sec11">
      <title>Experimental validation</title>
      <p>We experimentally validated the <italic>Y. pestis</italic> minimum spanning set that VaST produced by performing a TAS assay. Due to the challenges associated with optimizing a multiplex PCR reaction for a large number of targets, we opted to use a truncated version of the panel which included only the first 42 amplicons. This truncated panel had a slightly lower resolution index (266.1 compared to 269 for the full panel) but it was able to resolve most of the major clades. Table <xref rid="Tab4" ref-type="table">4</xref> shows the number of unresolved groups of different sizes which were used to calculate the resolution index for the truncated panel. Using only 42 of the 183 sites, 38 strains can be uniquely identified (group size 1). The largest unresolved group consisted of 20 very similar biovar Orientalis strains that were all isolated from rodents in Peru. The median group size is 5 so at least half of the strains are in groups of 5 or smaller.
<table-wrap id="Tab4"><label>Table 4</label><caption><p>Resolution of truncated Yersenia pestis minimum spanning set</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Group size</th><th align="left">Count</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">38</td></tr><tr><td align="left">2</td><td align="left">18</td></tr><tr><td align="left">3</td><td align="left">9</td></tr><tr><td align="left">4</td><td align="left">6</td></tr><tr><td align="left">5</td><td align="left">5</td></tr><tr><td align="left">6</td><td align="left">2</td></tr><tr><td align="left">7</td><td align="left">6</td></tr><tr><td align="left">8</td><td align="left">1</td></tr><tr><td align="left">11</td><td align="left">1</td></tr><tr><td align="left">12</td><td align="left">1</td></tr><tr><td align="left">15</td><td align="left">1</td></tr><tr><td align="left">20</td><td align="left">1</td></tr></tbody></table><table-wrap-foot><p>The table shows the expected resolution using only the first 42 of the 183-site <italic>Y. pestis</italic> minimum spanning set. The group size indicates a number of strains that could not be differentiated from one another and the count is how many groups of each size exist. A total of 28 strains were fully resolved and the largest group contained 20 unresolved strains</p></table-wrap-foot></table-wrap></p>
      <p>The targets of the truncated minimum spanning set were amplified in sample DNA from six different <italic>Y. pestis</italic> strains (Pestoides A, Pestoides F, KIM10, Harbin35, Nepal515, and Antiqua) and the amplicons were sequenced. The calls made at each of the target sites placed every sample strain within the correct clade (Fig. <xref rid="Fig5" ref-type="fig">5</xref>). In each case, the maximum resolution expected for the minimum spanning set was achieved.
<fig id="Fig5"><label>Fig. 5</label><caption><p>The <italic>Y. pestis</italic> samples were correctly identified using the target sites identified by VaST. The placement and resolution of the sample strains on a neighbor joining tree produced using the full SNP matrix (11,249 SNPs). The group of strains indicated for each sample represent the strains that were most similar to the sample strain at each of the targets analyzed in the truncated panel. The branch lengths indicate the number of SNP differences</p></caption><graphic xlink:href="12859_2018_2225_Fig5_HTML" id="MO5"/></fig></p>
    </sec>
  </sec>
  <sec id="Sec12" sec-type="discussion">
    <title>Discussion</title>
    <p>We have developed, benchmarked, and tested a desktop-compatible pipeline which identifies a minimum set of targets that are appropriate for bacterial strain identification. We anticipate that this software will aid in the design of customized, high-resolution typing assays that will be useful for forensic and epidemiological applications, or even for identifying and maintaining laboratory stocks of bacterial isolates. The minimum spanning algorithm implemented in VaST optimizes a combinatorially complex problem in a minimal amount of time even on a desktop computer. The haplotypes produced by VaST provide built-in redundancy which allows the panel to tolerate the likely failure of some amplicons without sacrificing much resolution. The many different run-time options available in VaST provide flexibility to accommodate many different situations. When some strains have particularly low coverage (lots of missing or ambiguous sites), turning off strict mode will open up many more target options for better results. On the other hand, when there is fairly even coverage across the strains, enabling strict mode will speed up the preprocessing steps. The set extension workflow can easily extend existing panels when additional strains or clades are identified or sequenced.</p>
    <p>Compared to other strain typing methods, VaST offers a several advantages. Unlike the Pan-PCR method [<xref ref-type="bibr" rid="CR34">34</xref>], VaST is able to take advantage of variation that exists in both coding and non-coding regions of the genome which provides a larger pool of options for strain differentiation. This is critical when expanding this approach to viral organisms. As a sequencing based approach, opposed to presence/absence detection, VaST is also able to maximize the information content of polymorphic sites, which makes it possible to detect the presence of previously unseen strains and place them within existing phylogenies. A failed target amplification in the Pan-PCR assay can easily corrupt the expected presence/absence signal and lead to a complete mis-characterization of a strain sample. In a VaST panel, the failure of certain targets will reduce resolution but will not result in a mis-identified strain.</p>
    <p>The LS Module of PanSeq focuses on finding the variant sites that offer the most discriminatory power and thus it does not prioritize the addition of variants that are deeper in the phylogeny, as they resolve clades rather than individual strains. The resulting set of targets will therefore be less robust when new strains are introduced that were not a part of the panel design process. In contrast, VaST prioritizes sites that evenly split strain complexes at each step so that the early additions to the minimum spanning set tend to be more phylogenetically basal — stable variation that occurred earlier in the evolution of the organism. In essence, this approach seeks to resolve the full phylogeny, rather than just the leafs of the species tree. As a result, an important feature of VaST is its ability to characterize previously unseen strains, due to abundance of “deep” phylogenetic variants. This was demonstrated in our computation simulations which consistently place strains that were not included in the design of the panel into the correct clade with their most closely related neighbors.</p>
    <p>Finally, over the last 20 years, a number of well validated variant markers and MLST profiles have been proposed for the purpose of identifying bacterial clades, particularly for identifying strains that are important in the biodefense sector and clinically relevant strains [<xref ref-type="bibr" rid="CR30">30</xref>, <xref ref-type="bibr" rid="CR45">45</xref>, <xref ref-type="bibr" rid="CR58">58</xref>–<xref ref-type="bibr" rid="CR60">60</xref>]. Using the information from previously established markers, VaST can add targets that are specifically designed to improve resolution, in a user-defined way, starting from the resolution provided by these markers. This allows for backwards compatibility and consistency with previous work thus avoiding the need to repeat the validation of well-established markers.</p>
  </sec>
  <sec id="Sec13" sec-type="conclusion">
    <title>Conclusions</title>
    <p>Fine-scale resolution of bacterial strains is vital when narrowing down potential sources of a pathogen in forensic investigations, providing an accurate prognosis when diagnosing an infection, and establishing the transmission pattern of an infectious strain outbreak. As more and more strains are being identified and sequenced, it is important to be able to rapidly design, implement, and update strain identification panels. Strain typing using TAS technology can provide high resolution (hundreds or thousands of targets can be run simultaneously), scalability (many samples can be processed in a single sequencing run), and sensitivity (PCR amplification allows samples to be identified using small amounts of DNA). Using the ever-growing collection of variant sites identified through whole genome sequencing, VaST provides a tool which will automate the task of finding efficient strain typing markers for use in TAS panels.</p>
  </sec>
  <sec id="Sec14">
    <title>Availability and requirements</title>
    <p><bold>Project Name:</bold> VaST</p>
    <p>
      <bold>Project Home Page:</bold>
      <ext-link ext-link-type="uri" xlink:href="https://github.com/FofanovLab/VaST.git">https://github.com/FofanovLab/VaST.git</ext-link>
    </p>
    <p><bold>Operating system(s):</bold> Platform independent</p>
    <p><bold>Programming language:</bold> Python</p>
    <p><bold>Other requirements:</bold> Anaconda (to use virtual environment)</p>
    <p><bold>License:</bold> MIT License</p>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>HTS</term>
        <def>
          <p>High-Throughput Sequencing</p>
        </def>
      </def-item>
      <def-item>
        <term>Indel</term>
        <def>
          <p>Insertion or deletion</p>
        </def>
      </def-item>
      <def-item>
        <term>PCR</term>
        <def>
          <p>Polymerase Chain Reaction</p>
        </def>
      </def-item>
      <def-item>
        <term>SNP</term>
        <def>
          <p>Single Nucleotide Polymorphism</p>
        </def>
      </def-item>
      <def-item>
        <term>TAS</term>
        <def>
          <p>Targeted PCR amplicon sequencing</p>
        </def>
      </def-item>
      <def-item>
        <term>VNTR</term>
        <def>
          <p>Variable Number Tandem Repeat</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Availability of data and materials</bold>
      </p>
      <p>The SNP matrices and identified targets are available in the FigShare repository at 10.6084/m9.figshare.5536744.v1(DOI: 10.6084/m9.figshare.5536744.v1). The sequencing reads used for the computational validation are publicly available in the National Center for Biotechnology Information (NCBI) Sequence Read Archive at <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/sra.">https://www.ncbi.nlm.nih.gov/sra.</ext-link>[<xref ref-type="bibr" rid="CR48">48</xref>–<xref ref-type="bibr" rid="CR51">51</xref>]. The <italic>S. aureus</italic> whole genome assembly sequences are publicly available in the NCBI RefSeq database and the GCF accession IDs are listed in the FigShare repository. The primers and sequencing reads used in the experimental validation of the <italic>Y. pestis</italic> panel are available from the corresponding author on reasonable request. The VaST source code is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/FofanovLab/VaST.git">https://github.com/FofanovLab/VaST.git</ext-link>and has been archived at 10.5281/zenodo.1036007(DOI: 10.5281/zenodo.1036007).</p>
    </fn>
  </fn-group>
  <ack>
    <sec id="d29e2542">
      <title>Funding</title>
      <p>This work was funded by the Department of Homeland Security, Homeland Security Advanced Research Projects Agency, Chemical Biological Division under contract number HSHQDC-16-C-B0031.</p>
    </sec>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors’ contributions</title>
    <p>TNF wrote the program, and performed the computational validations and analysis. JHC performed the amplicon sequencing assay. JWS provided the SNP matrices for the strain complexes and the <italic>Y. pestis</italic> DNA. TNF and VYF conceived and designed the algorithm and experiments and wrote the manuscript. JHC and JWS critically reviewed the manuscript. All authors read and approved the final version of the manuscript.</p>
  </notes>
  <notes notes-type="COI-statement">
    <sec id="d29e2556">
      <title>Ethics approval and consent to participate</title>
      <p>Not applicable.</p>
    </sec>
    <sec id="d29e2561">
      <title>Competing interests</title>
      <p>TNF, JWS, and VYF declare that they have applied for a patent for the truncated <italic>Y. pestis</italic> primer panel.</p>
    </sec>
    <sec id="d29e2569">
      <title>Publisher’s Note</title>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </sec>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1</label>
      <mixed-citation publication-type="other">Brzuszkiewicz E, Thürmer A, Schuldes J, Leimbach A, Liesegang H, Meyer F, et al. Genome sequence analyses of two isolates from the recent <italic>Escherichia coli</italic> outbreak in Germany reveal the emergence of a new pathotype: Entero-Aggregative-Haemorrhagic <italic>Escherichia coli</italic> (EAHEC). Arch Microbiol. 2011; 193(12):883–91. Available from: <ext-link ext-link-type="uri" xlink:href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC3219860/">http://www.ncbi.nlm.nih.gov/pmc/articles/PMC3219860/</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR2">
      <label>2</label>
      <mixed-citation publication-type="other">Deng X, den Bakker HC, Hendriksen RS. Genomic Epidemiology: Whole-Genome-Sequencing Powered Surveillance and Outbreak Investigation of Foodborne Bacterial Pathogens. Annu Rev Food Sci Technol. 2016; 7(1):353–74. PMID: 26772415 Available from: 10.1146/annurev-food-041715-033259.</mixed-citation>
    </ref>
    <ref id="CR3">
      <label>3</label>
      <mixed-citation publication-type="other">Pires dos Santos T, Damborg P, Moodley A, Guardabassi L. Systematic Review on Global Epidemiology of Methicillin-Resistant <italic>Staphylococcus pseudintermedius</italic>: Inference of Population Structure from Multilocus Sequence Typing Data. Front Microbiol. 2016; 7:1599. Available from: <ext-link ext-link-type="uri" xlink:href="https://www.frontiersin.org/article/10.3389/fmicb.2016.01599">https://www.frontiersin.org/article/10.3389/fmicb.2016.01599</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR4">
      <label>4</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rasko</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Worsham</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Abshire</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Stanley</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Bannan</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Wilson</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title><italic>Bacillus anthracis</italic> comparative genome analysis in support of the Amerithrax investigation</article-title>
        <source>Proc Natl Acad Sci U S A</source>
        <year>2011</year>
        <volume>108</volume>
        <fpage>5027</fpage>
        <lpage>32</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.1016657108</pub-id>
        <?supplied-pmid 21383169?>
        <pub-id pub-id-type="pmid">21383169</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5</label>
      <mixed-citation publication-type="other">Schmedes SE, Sajantila A, Budowle B. Expansion of Microbial Forensics. J Clin Microbiol. 2016; 54(8):1964–74. Available from: <ext-link ext-link-type="uri" xlink:href="http://jcm.asm.org/content/54/8/1964.abstract">http://jcm.asm.org/content/54/8/1964.abstract</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR6">
      <label>6</label>
      <mixed-citation publication-type="other">Yang R, Keim P. Microbial forensics: A powerful tool for pursuing bioterrorism perpetrators and the need for an international database. J Bioterr Biodef. 2012; S3:007. 10.4172/2157-2526.S3-007.</mixed-citation>
    </ref>
    <ref id="CR7">
      <label>7</label>
      <mixed-citation publication-type="other">Bybee SM, Bracken-Grissom H, Haynes BD, Hermansen RA, Byers RL, Clement MJ, et al. Targeted Amplicon Sequencing (TAS): A Scalable Next-Gen Approach to Multilocus, Multitaxa Phylogenetics. Genome Biol Evol. 2011; 01(3):1312–23. Available from: 10.1093/gbe/evr106.</mixed-citation>
    </ref>
    <ref id="CR8">
      <label>8</label>
      <mixed-citation publication-type="other">Mamanova L, Coffey AJ, Scott CE, Kozarewa I, Turner EH, Kumar A, et al. Target-enrichment strategies for next-generation sequencing. Nat Methods. 2010; 01(7):111–8. Available from: 10.1038/nmeth.1419.</mixed-citation>
    </ref>
    <ref id="CR9">
      <label>9</label>
      <mixed-citation publication-type="other">Weisburg WG, Barns SM, Pelletier DA, Lane DJ. 16S ribosomal DNA amplification for phylogenetic study. J Bacteriol. 1991; 173:697–703. Available from: <ext-link ext-link-type="uri" xlink:href="http://jb.asm.org/content/173/2/697.abstract">http://jb.asm.org/content/173/2/697.abstract</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR10">
      <label>10</label>
      <mixed-citation publication-type="other">Maiden MCJ, Bygraves JA, Feil E, Morelli G, Russell JE, Urwin R, et al. Multilocus sequence typing: A portable approach to the identification of clones within populations of pathogenic microorganisms. Proc Natl Acad Sci. 1998; 95(6):3140–5. Available from: <ext-link ext-link-type="uri" xlink:href="http://www.pnas.org/content/95/6/3140">http://www.pnas.org/content/95/6/3140</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR11">
      <label>11</label>
      <mixed-citation publication-type="other">Boers SA, van der Reijden WA, Jansen R. High-Throughput Multilocus Sequence Typing: Bringing Molecular Typing to the Next Level. PLoS ONE. 2012; 7(7):1–8. Available from: 10.1371/journal.pone.0039630.</mixed-citation>
    </ref>
    <ref id="CR12">
      <label>12</label>
      <mixed-citation publication-type="other">Fournier P, Dubourg G, Raoult D. Clinical detection and characterization of bacterial pathogens in the genomics era. Genome Med. 2014; 6(11):114. Available from: 10.1186/s13073-014-0114-2.</mixed-citation>
    </ref>
    <ref id="CR13">
      <label>13</label>
      <mixed-citation publication-type="other">Bartual SG, Seifert H, Hippler C, Luzon MAD, Wisplinghoff H, Rodríguez-Valera F. Development of a Multilocus Sequence Typing Scheme for Characterization of Clinical Isolates of <italic>Acinetobacter baumannii</italic>. J Clin Microbiol. 2005; 43(9):4382–90. Available from: <ext-link ext-link-type="uri" xlink:href="http://jcm.asm.org/content/43/9/4382.abstract">http://jcm.asm.org/content/43/9/4382.abstract</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR14">
      <label>14</label>
      <mixed-citation publication-type="other">Blanchard AM, Jolley KA, Maiden MCJ, Coffey TJ, Maboni G, Staley CE, et al. The Applied Development of a Tiered Multilocus Sequence Typing (MLST) Scheme for <italic>Dichelobacter nodosus</italic>. Front Microbiol. 2018; 9:551. Available from: <ext-link ext-link-type="uri" xlink:href="https://www.frontiersin.org/article/10.3389/fmicb.2018.00551">https://www.frontiersin.org/article/10.3389/fmicb.2018.00551</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR15">
      <label>15</label>
      <mixed-citation publication-type="other">Boonsilp S, Thaipadungpanit J, Amornchai P, Wuthiekanun V, Bailey MS, Holden MTG, et al. A Single Multilocus Sequence Typing (MLST) Scheme for Seven Pathogenic <italic>Leptospira</italic> Species. PLoS Negl Trop Dis. 2013; 7(1):1–10. Available from: 10.1371/journal.pntd.0001954.</mixed-citation>
    </ref>
    <ref id="CR16">
      <label>16</label>
      <mixed-citation publication-type="other">Curran B, Jonas D, Grundmann H, Pitt T, Dowson CG. Development of a Multilocus Sequence Typing Scheme for the Opportunistic Pathogen <italic>Pseudomonas aeruginosa</italic>. J Clin Microbiol. 2004; 42(12):5644–9. Available from: <ext-link ext-link-type="uri" xlink:href="http://jcm.asm.org/content/42/12/5644.abstract">http://jcm.asm.org/content/42/12/5644.abstract</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR17">
      <label>17</label>
      <mixed-citation publication-type="other">King SJ, Leigh JA, Heath PJ, Luque I, Tarradas C, Dowson CG, et al. Development of a Multilocus Sequence Typing Scheme for the Pig Pathogen <italic>Streptococcus suis</italic>: Identification of Virulent Clones and Potential Capsular Serotype Exchange. J Clin Microbiol. 2002; 40(10):3671–80. Available from: <ext-link ext-link-type="uri" xlink:href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC130843/">http://www.ncbi.nlm.nih.gov/pmc/articles/PMC130843/</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR18">
      <label>18</label>
      <mixed-citation publication-type="other">Shibata Y, Tien LHT, Nomoto R, Osawa R. Development of a multilocus sequence typing scheme for <italic>Streptococcus gallolyticus</italic>. Microbiology. 2014; 160(1):113–22. Available from: <ext-link ext-link-type="uri" xlink:href="http://mic.microbiologyresearch.org/content/journal/micro/10.1099/mic.0%25.071605-0">http://mic.microbiologyresearch.org/content/journal/micro/10.1099/mic.0%25.071605-0</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR19">
      <label>19</label>
      <mixed-citation publication-type="other">Woo PC, Teng JL, Tsang AK, Tse H, Tsang VY, Chan KM, et al. Development of a multi-locus sequence typing scheme for <italic>Laribacter hongkongensis</italic>, a novel bacterium associated with freshwater fish-borne gastroenteritis and traveler’s diarrhea. BMC Microbiol. 2009; 9(1):21. Available from: 10.1186/1471-2180-9-21.</mixed-citation>
    </ref>
    <ref id="CR20">
      <label>20</label>
      <mixed-citation publication-type="other">Chanturia G, Birdsell DN, Kekelidze M, Zhgenti E, Babuadze G, Tsertsvadze N, et al. Phylogeography of <italic>Francisella tularensis</italic> subspecies <italic>holarctica</italic> from the country of Georgia. BMC Microbiol. 2011; 11(1):139. Available from: 10.1186/1471-2180-11-139.</mixed-citation>
    </ref>
    <ref id="CR21">
      <label>21</label>
      <mixed-citation publication-type="other">Griffing SM, MacCannell DR, Schmidtke AJ, Freeman MM, Hyytiä-Trees E, Gerner-Smidt P, et al. Canonical Single Nucleotide Polymorphisms (SNPs) for High-Resolution Subtyping of Shiga-Toxin Producing <italic>Escherichia coli</italic> (STEC) O157:H7. PLoS ONE. 2015; 10(7):1–13. Available from: 10.1371/journal.pone.0131967.</mixed-citation>
    </ref>
    <ref id="CR22">
      <label>22</label>
      <mixed-citation publication-type="other">Gyuranecz M, Birdsell DN, Splettstoesser W, Seibold E, Beckstrom-Sternberg SM, László M, et al. Phylogeography of <italic>Francisella tularensis</italic> subsp. <italic>holarctica</italic>, Europe. Emerg Infect Dis. 2012; 18(2):290. Available from <ext-link ext-link-type="uri" xlink:href="http://wwwnc.cdc.gov/eid/article/18/2/11-1305">http://wwwnc.cdc.gov/eid/article/18/2/11-1305</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR23">
      <label>23</label>
      <mixed-citation publication-type="other">Hornstra HM, Priestley RA, Georgia SM, Kachur S, Birdsell DN, Hilsabeck R, et al. Rapid Typing of <italic>Coxiella burnetii</italic>. PLoS ONE. 2011; 6(11):1–8. Available from: 10.1371/journal.pone.0026201.</mixed-citation>
    </ref>
    <ref id="CR24">
      <label>24</label>
      <mixed-citation publication-type="other">Karlsson E, Svensson K, Lindgren P, Byström M, Sjödin A, Forsman M, et al. The phylogeographic pattern of <italic>Francisella tularensis</italic> in Sweden indicates a Scandinavian origin of Eurosiberian tularaemia. Environ Microbiol. 2013; 15(2):634–45. Available from: <ext-link ext-link-type="uri" xlink:href="https://onlinelibrary.wiley.com/doi/abs/10.1111/1462-2920.12052">https://onlinelibrary.wiley.com/doi/abs/10.1111/1462-2920.12052</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR25">
      <label>25</label>
      <mixed-citation publication-type="other">Karlsson E, Macellaro A, Byström M, Forsman M, Frangoulidis D, Janse I, et al. Eight New Genomes and Synthetic Controls Increase the Accessibility of Rapid Melt-MAMA SNP Typing of <italic>Coxiella burnetii</italic>. PLoS ONE. 2014; 9(1):1–12. Available from 10.1371/journal.pone.0085417.</mixed-citation>
    </ref>
    <ref id="CR26">
      <label>26</label>
      <mixed-citation publication-type="other">Morelli G, Song Y, Mazzoni CJ, Eppinger M, Roumagnac P, Wagner DM, et al. <italic>Yersinia pestis</italic> genome sequencing identifies patterns of global phylogenetic diversity. Nat Genet. 2010; 42(10):1140–3. Available from: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1038/ng.705">http://dx.doi.org/10.1038/ng.705</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR27">
      <label>27</label>
      <mixed-citation publication-type="other">Okinaka RT, Henrie M, Hill KK, Lowery K, Van Ert M, Pearson T, et al. Single Nucleotide Polymorphism Typing of <italic>Bacillus anthracis</italic> from Sverdlovsk Tissue. Emerg Infect Dis. 2008; 14(4):653–6. Available from: <ext-link ext-link-type="uri" xlink:href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC2570946/">http://www.ncbi.nlm.nih.gov/pmc/articles/PMC2570946/</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR28">
      <label>28</label>
      <mixed-citation publication-type="other">Simonson TS, Okinaka RT, Wang B, Easterday WR, Huynh L, U’Ren JM, et al. Bacillus anthracis in China and its relationship to worldwide lineages. BMC Microbiol. 2009; 9(1):71. Available from: 10.1186/1471-2180-9-71.</mixed-citation>
    </ref>
    <ref id="CR29">
      <label>29</label>
      <mixed-citation publication-type="other">Svensson K, Granberg M, Karlsson L, Neubauerova V, Forsman M, Johansson A. A Real-Time PCR Array for Hierarchical Identification of rancisella Isolates. PLoS ONE. 2009; 4(12):1–14. Available from: 10.1371/journal.pone.0008360.</mixed-citation>
    </ref>
    <ref id="CR30">
      <label>30</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Van Ert</surname>
            <given-names>MN</given-names>
          </name>
          <name>
            <surname>Easterday</surname>
            <given-names>WR</given-names>
          </name>
          <name>
            <surname>Simonson</surname>
            <given-names>TS</given-names>
          </name>
          <name>
            <surname>U’Ren</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Pearson</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Kenefic</surname>
            <given-names>LJ</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Strain-Specific Single-Nucleotide Polymorphism Assays for the Bacillus anthracis Ames Strain</article-title>
        <source>J Clin Microbiol</source>
        <year>2007</year>
        <volume>45</volume>
        <fpage>47</fpage>
        <lpage>53</lpage>
        <pub-id pub-id-type="doi">10.1128/JCM.01233-06</pub-id>
        <?supplied-pmid 17093023?>
        <pub-id pub-id-type="pmid">17093023</pub-id>
      </element-citation>
    </ref>
    <ref id="CR31">
      <label>31</label>
      <mixed-citation publication-type="other">Van Ert MN, Easterday WR, Huynh LY, Okinaka RT, Hugh-Jones ME, Ravel J, et al. Global Genetic Population Structure of <italic>Bacillus anthracis</italic>. PLoS ONE. 2007; 2(5):1–10. Available from: 10.1371/journal.pone.0000461.</mixed-citation>
    </ref>
    <ref id="CR32">
      <label>32</label>
      <mixed-citation publication-type="other">Vogler AJ, Birdsell D, Price LB, Bowers JR, Beckstrom-Sternberg SM, Auerbach RK, et al. Phylogeography of <italic>Francisella tularensis</italic>: Global Expansion of a Highly Fit Clone. J Bacteriol. 2009; 191(8):2474–84. Available from: <ext-link ext-link-type="uri" xlink:href="http://jb.asm.org/content/191/8/2474.abstract">http://jb.asm.org/content/191/8/2474.abstract</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR33">
      <label>33</label>
      <mixed-citation publication-type="other">Vogler AJ, Chan F, Wagner DM, Roumagnac P, Lee J, Nera R, et al. Phylogeography and Molecular Epidemiology of <italic>Yersinia pestis</italic> in Madagascar. PLoS Negl Trop Dis. 2011; 5(9):1–11. Available from: 10.1371/journal.pntd.0001319.</mixed-citation>
    </ref>
    <ref id="CR34">
      <label>34</label>
      <mixed-citation publication-type="other">Yang JY, Brooks S, Meyer JA, Blakesley RR, Zelazny AM, Segre JA, et al. Pan-PCR, a Computational Method for Designing Bacterium-Typing Assays Based on Whole-Genome Sequence Data. J Clin Microbiol. 2013; 51:752–8. Available from <ext-link ext-link-type="uri" xlink:href="http://jcm.asm.org/content/51/3/752.abstract">http://jcm.asm.org/content/51/3/752.abstract</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR35">
      <label>35</label>
      <mixed-citation publication-type="other">Laing C, Buchanan C, Taboada EN, Zhang Y, Kropinski A, Villegas A, et al. Pan-genome sequence analysis using Panseq: an online tool for the rapid analysis of core and accessory genomic regions. BMC Bioinformatics. 2010; 11:461. Available from <ext-link ext-link-type="uri" xlink:href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC2949892/">http://www.ncbi.nlm.nih.gov/pmc/articles/PMC2949892/</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR36">
      <label>36</label>
      <mixed-citation publication-type="other">Ding K, Zhang J, Zhou K, Shen Y, Zhang X. htSNPer1.0: software for haplotype block partition and htSNPs selection. BMC Bioinformatics. 2005; 6:38. Available from: 10.1186/1471-2105-6-38.</mixed-citation>
    </ref>
    <ref id="CR37">
      <label>37</label>
      <mixed-citation publication-type="other">Frei UK, Wollenweber B, Lübberstedt T. “PolyMin”: software for identification of the minimum number of polymorphisms required for haplotype and genotype differentiation. BMC Bioinformatics. 2009; 10(1):176. Available from: 10.1186/1471-2105-10-176.</mixed-citation>
    </ref>
    <ref id="CR38">
      <label>38</label>
      <mixed-citation publication-type="other">Hao K, Liu S, Niu T. A Sparse Marker Extension Tree Algorithm for Selecting the Best Set of Haplotype Tagging Single Nucleotide Polymorphisms. Genet Epidemiol. 2005; 29:336–52. Available from: <ext-link ext-link-type="uri" xlink:href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC2712933/">http://www.ncbi.nlm.nih.gov/pmc/articles/PMC2712933/</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR39">
      <label>39</label>
      <mixed-citation publication-type="other">Ke X, Cardon LR. Efficient selective screening of haplotype tag SNPs. Bioinformatics. 2003; 19:287–8. Available from: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1093/bioinformatics/19.2.287">http://dx.doi.org/10.1093/bioinformatics/19.2.287</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR40">
      <label>40</label>
      <mixed-citation publication-type="other">Sebastiani P, Lazarus R, Weiss ST, Kunkel LM, Kohane IS, Ramoni MF. Minimal haplotype tagging. Proc Natl Acad Sci. 2003; 100:9900–5. Available from: <ext-link ext-link-type="uri" xlink:href="http://www.pnas.org/content/100/17/9900.abstract">http://www.pnas.org/content/100/17/9900.abstract</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR41">
      <label>41</label>
      <mixed-citation publication-type="other">Sahl JW, Lemmer D, Travis J, Schupp JM, Gillece JD, Aziz M, et al. NASP: an accurate, rapid method for the identification of SNPs in WGS datasets that supports flexible input and output formats. Microb Genom. 2016; 2:e000074. Available from: <ext-link ext-link-type="uri" xlink:href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC5320593/">http://www.ncbi.nlm.nih.gov/pmc/articles/PMC5320593/</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR42">
      <label>42</label>
      <mixed-citation publication-type="other">Cornish-Bowden A. Nomenclature for incompletely specified bases in nucleic acid sequences: Recommendations 1984. Nucleic Acids Res. 1985; 13(9):3021–30. Available from: <ext-link ext-link-type="uri" xlink:href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC341218/">http://www.ncbi.nlm.nih.gov/pmc/articles/PMC341218/</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR43">
      <label>43</label>
      <mixed-citation publication-type="other">Danecek P, Auton A, Abecasis G, Al bers CA, Banks E, DePristo MA, et al. The variant call format and VCFtools. Bioinformatics. 2011; 27:2156–8. Available from: <ext-link ext-link-type="uri" xlink:href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC3137218/">http://www.ncbi.nlm.nih.gov/pmc/articles/PMC3137218/</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR44">
      <label>44</label>
      <mixed-citation publication-type="other">Achtman M, Morelli G, Zhu P, Wirth T, Diehl I, Kusecek B, et al. Microevolution and history of the plague bacillus, <italic>Yersinia pestis</italic>. Proc Natl Acad Sci U S A. 2004; 101:17837–42. Available from <ext-link ext-link-type="uri" xlink:href="http://www.pnas.org/content/101/51/17837.abstract">http://www.pnas.org/content/101/51/17837.abstract</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR45">
      <label>45</label>
      <mixed-citation publication-type="other">Johansson A, Farlow J, Larsson P, Dukerich M, Chambers E, Byström M, et al. Worldwide Genetic Relationships among <italic>Francisella tularensis</italic> Isolates Determined by Multiple-Locus Variable-Number Tandem Repeat Analysis. J Bacteriol. 2004; 186:5808–18. Available from: <ext-link ext-link-type="uri" xlink:href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC516809/">http://www.ncbi.nlm.nih.gov/pmc/articles/PMC516809/</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR46">
      <label>46</label>
      <mixed-citation publication-type="other">Sahl JW, Schupp JM, Rasko DA, Colman RE, Foster JT, Keim P. Phylogenetically typing bacterial strains from partial SNP genotypes observed from direct sequencing of clinical specimen metagenomic data. Genome Med. 2015; 7:52. Available from 10.1186/s13073-015-0176-9.</mixed-citation>
    </ref>
    <ref id="CR47">
      <label>47</label>
      <mixed-citation publication-type="other">Sahl JW, Pearson T, Okinaka R, Schupp JM, Gillece JD, Heaton H, et al. A <italic>Bacillus anthracis</italic> Genome Sequence from the Sverdlovsk 1979 Autopsy Specimens. mBio. 2016:7. Available from: <ext-link ext-link-type="uri" xlink:href="http://mbio.asm.org/content/7/5/e01501-16.abstract">http://mbio.asm.org/content/7/5/e01501-16.abstract</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR48">
      <label>48</label>
      <mixed-citation publication-type="other">Johnson SL, Daligault HE, Davenport KW, Jaissle J, Frey KG, Ladner JT, et al. <italic>Yersinia pestis</italic> strain:Harbin35 Genome sequencing. SRR1283952 [Sequence Read Archive]. 2015. Available from <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/sra">https://www.ncbi.nlm.nih.gov/sra</ext-link>. Accessed 27 Sept 2017.</mixed-citation>
    </ref>
    <ref id="CR49">
      <label>49</label>
      <mixed-citation publication-type="other">Johnson SL, Daligault HE, Davenport KW, Jaissle J, Frey KG, Ladner JT, et al. Whole Genome Sequencing of <italic>Yersinia pestis</italic> str. Pestoides B. SRR2177700 [Sequence Read Archive]. 2015. Available from: <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/sra">https://www.ncbi.nlm.nih.gov/sra</ext-link>. Accessed 27 Sept 2017.</mixed-citation>
    </ref>
    <ref id="CR50">
      <label>50</label>
      <mixed-citation publication-type="other">Johnson SL, Daligault HE, Davenport KW, Jaissle J, Frey KG, Ladner JT, et al. <italic>Yersinia pestis</italic> Angola Genome sequencing. SRR2153449 [Sequence Read Archive]. 2015. Available from: <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/sra">https://www.ncbi.nlm.nih.gov/sra</ext-link>. Accessed 27 Sept 2017.</mixed-citation>
    </ref>
    <ref id="CR51">
      <label>51</label>
      <mixed-citation publication-type="other">Johnson SL, Daligault HE, Davenport KW, Jaissle J, Frey KG, Ladner JT, et al. Yersinia pestis Antiqua Genome sequencing. SRR2176134 [Sequence Read Archive]. 2015. Available from: <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/sra">https://www.ncbi.nlm.nih.gov/sra</ext-link>. Accessed 27 Sept 2017.</mixed-citation>
    </ref>
    <ref id="CR52">
      <label>52</label>
      <mixed-citation publication-type="other">Johnson SL, Daligault HE, Davenport KW, Jaissle J, Frey KG, Ladner JT, et al. Thirty-Two Complete Genome Assemblies of Nine <italic>Yersinia</italic> Species, Including <italic>Y. pestis</italic>, <italic>Y. pseudotuberculosis</italic>, and <italic>Y. enterocolitica</italic>. Genome Announc. 2015; 3:e00148–15. Available from: <ext-link ext-link-type="uri" xlink:href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC4417686/">http://www.ncbi.nlm.nih.gov/pmc/articles/PMC4417686/</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR53">
      <label>53</label>
      <mixed-citation publication-type="other">Johnson SL, Minogue TD, Daligault HE, Wolcott MJ, Teshima H, Coyne SR, et al. <italic>Yersinia pestis</italic> Antiqua Genome sequencing. SRR2084698 [Sequence Read Archive]. 2015. Available from: <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/sra">https://www.ncbi.nlm.nih.gov/sra</ext-link>. Accessed 27 Sept 2017.</mixed-citation>
    </ref>
    <ref id="CR54">
      <label>54</label>
      <mixed-citation publication-type="other">Johnson SL, Minogue TD, Daligault HE, Wolcott MJ, Teshima H, Coyne SR, et al. Finished Genome Assembly of <italic>Yersinia pestis</italic> EV76D and KIM 10v. Genome Announc. 2015; 3:e01024–15. Available from: <ext-link ext-link-type="uri" xlink:href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC4574367/">http://www.ncbi.nlm.nih.gov/pmc/articles/PMC4574367/</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR55">
      <label>55</label>
      <mixed-citation publication-type="other">Parkhill J, Wren BW, Thomson NR, Titball RW, Holden MT, Prentice MB, et al. Yersinia pestis CO92 chromosome, complete genome. NC_003143.1 [NCBI Reference Sequence]. 2015. Available from: <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/refseq/">https://www.ncbi.nlm.nih.gov/refseq/</ext-link>. Accessed 27 Sept 2017.</mixed-citation>
    </ref>
    <ref id="CR56">
      <label>56</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Langmead</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Fast gapped-read alignment with Bowtie 2</article-title>
        <source>Nat Methods</source>
        <year>2012</year>
        <volume>9</volume>
        <fpage>357</fpage>
        <lpage>9</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.1923</pub-id>
        <?supplied-pmid 22388286?>
        <pub-id pub-id-type="pmid">22388286</pub-id>
      </element-citation>
    </ref>
    <ref id="CR57">
      <label>57</label>
      <mixed-citation publication-type="other">Manning SD, Motiwala AS, Springman AC, Qi W, Lacher DW, Ouellette LM, et al. Variation in virulence among clades of Escherichia coli O157:H7 associated with disease outbreaks. Proc Natl Acad Sci. 2008; 105(12):4868–73. Available from: <ext-link ext-link-type="uri" xlink:href="http://www.pnas.org/content/105/12/4868">http://www.pnas.org/content/105/12/4868</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR58">
      <label>58</label>
      <mixed-citation publication-type="other">Birdsell DN, Johansson A, Öhrman C, Kaufman E, Molins C, Pearson T, et al. <italic>Francisella tularensis</italic> subsp. <italic>tularensis</italic> Group A.I, United States. Emerg Infect Dis. 2014; 20:861–5. Available from <ext-link ext-link-type="uri" xlink:href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC4012810/">http://www.ncbi.nlm.nih.gov/pmc/articles/PMC4012810/</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR59">
      <label>59</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Cui</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Cui</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Yan</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Yang</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>H</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Features of Variable Number of Tandem Repeats in Yersinia pestis and the Development of a Hierarchical Genotyping Scheme</article-title>
        <source>PLoS ONE</source>
        <year>2013</year>
        <volume>8</volume>
        <fpage>e66567</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0066567</pub-id>
        <?supplied-pmid 23805236?>
        <pub-id pub-id-type="pmid">23805236</pub-id>
      </element-citation>
    </ref>
    <ref id="CR60">
      <label>60</label>
      <mixed-citation publication-type="other">Vogler AJ, Driebe EM, Lee J, Auerbach RK, Allender CJ, Stanley M, et al. Assays for the rapid and specific identification of North American <italic>Yersinia pestis</italic> and the common laboratory strain CO92. Biotechniques. 2008; 44:201–7. Available from <ext-link ext-link-type="uri" xlink:href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC3836605/">http://www.ncbi.nlm.nih.gov/pmc/articles/PMC3836605/</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR61">
      <label>61</label>
      <mixed-citation publication-type="other">Gibbons HS, Krepps MD, Ouellette G, Karavis M, Onischuk L, Leonard P, et al. Comparative Genomics of 2009 Seasonal Plague (<italic>Yersinia pestis</italic>) in New Mexico. PLoS ONE. 2012; 7:1–11. Available from: 10.1371/journal.pone.0031604.</mixed-citation>
    </ref>
    <ref id="CR62">
      <label>62</label>
      <mixed-citation publication-type="other">Plunkett GI, Anderson BD, Baumler DJ, Burland V, Cabot EL, Glasner JD, et al. <italic>Yersenia pestis</italic> biovar Medievalis str. Harbin 35 (enterobacteria). GCA_000186725.1 [GenBank Assembly]. 2011. Available from: <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/genbank/">https://www.ncbi.nlm.nih.gov/genbank/</ext-link>. Accessed 27 Sept 2017.</mixed-citation>
    </ref>
    <ref id="CR63">
      <label>63</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Anisimov</surname>
            <given-names>AP</given-names>
          </name>
          <name>
            <surname>Dentovskaya</surname>
            <given-names>SV</given-names>
          </name>
          <name>
            <surname>Svetoch</surname>
            <given-names>TE</given-names>
          </name>
          <name>
            <surname>Panfertsev</surname>
            <given-names>EA</given-names>
          </name>
        </person-group>
        <article-title>Variability of the Protein Sequences of LcrV Between Epidemic and Atypical Rhamnose-Positive Strains of <italic>Yersinia pestis</italic></article-title>
        <source>The Genus <italic>Yersinia</italic>: From Genomics to Function</source>
        <year>2007</year>
        <publisher-loc>New York</publisher-loc>
        <publisher-name>Springer New York</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR64">
      <label>64</label>
      <mixed-citation publication-type="other">Deng W, Burland V, Plunkett III G, Boutin A, Mayhew GF, Liss P, et al. Genome Sequence of <italic>Yersinia pestis</italic> KIM. J Bacteriol. 2002; 184:4601–11. Available from: <ext-link ext-link-type="uri" xlink:href="http://jb.asm.org/content/184/16/4601.abstract">http://jb.asm.org/content/184/16/4601.abstract</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR65">
      <label>65</label>
      <mixed-citation publication-type="other">Chain PSG, Hu P, Malfatti SA, Radnedge L, Larimer F, Vergez LM, et al. Complete Genome Sequence of <italic>Yersinia pestis</italic> Strains Antiqua and Nepal516: Evidence of Gene Reduction in an Emerging Pathogen. J Bacteriol. 2006; 188:4453–63. Available from: <ext-link ext-link-type="uri" xlink:href="http://jb.asm.org/content/188/12/4453.abstract">http://jb.asm.org/content/188/12/4453.abstract</ext-link>.</mixed-citation>
    </ref>
  </ref-list>
</back>

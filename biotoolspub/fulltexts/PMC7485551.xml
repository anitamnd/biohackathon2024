<?DTDIdentifier.IdentifierValue http://null/schema/dtds/document/fulltext/xcr/xocs-article.xsd?>
<?DTDIdentifier.IdentifierType schema?>
<?SourceDTD.DTDName xocs-article.xsd?>
<?SourceDTD.Version 1.0?>
<?ConverterInfo.XSLTName ftrr2jats.xsl?>
<?ConverterInfo.Version 1?>
<?origin publisher?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">J Behav Exp Finance</journal-id>
    <journal-id journal-id-type="iso-abbrev">J Behav Exp Finance</journal-id>
    <journal-title-group>
      <journal-title>Journal of Behavioral and Experimental Finance</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">2214-6350</issn>
    <issn pub-type="epub">2214-6369</issn>
    <publisher>
      <publisher-name>Elsevier B.V.</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">7485551</article-id>
    <article-id pub-id-type="pii">S2214-6350(20)30327-0</article-id>
    <article-id pub-id-type="doi">10.1016/j.jbef.2020.100400</article-id>
    <article-id pub-id-type="publisher-id">100400</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Full Length Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title><italic>z-Tree unleashed</italic>: A novel client-integrating architecture for conducting z-Tree experiments over the Internet</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" id="au000001">
        <name>
          <surname>Duch</surname>
          <given-names>Matthias L.</given-names>
        </name>
      </contrib>
      <contrib contrib-type="author" id="au000002">
        <name>
          <surname>Grossmann</surname>
          <given-names>Max R.P.</given-names>
        </name>
        <xref rid="cor1" ref-type="corresp">⁎</xref>
      </contrib>
      <contrib contrib-type="author" id="au000003">
        <name>
          <surname>Lauer</surname>
          <given-names>Thomas</given-names>
        </name>
      </contrib>
      <aff id="aff1">University of Cologne, Germany</aff>
    </contrib-group>
    <author-notes>
      <corresp id="cor1"><label>⁎</label>Correspondence to: University of Cologne, Cologne Laboratory for Economic Research, Albertus-Magnus-Platz, 50923 Cologne, Germany.</corresp>
    </author-notes>
    <pub-date pub-type="pmc-release">
      <day>11</day>
      <month>9</month>
      <year>2020</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on <pub-date
						pub-type="epub">.-->
    <pub-date pub-type="ppub">
      <month>12</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>11</day>
      <month>9</month>
      <year>2020</year>
    </pub-date>
    <volume>28</volume>
    <fpage>100400</fpage>
    <lpage>100400</lpage>
    <history>
      <date date-type="received">
        <day>4</day>
        <month>5</month>
        <year>2020</year>
      </date>
      <date date-type="rev-recd">
        <day>7</day>
        <month>9</month>
        <year>2020</year>
      </date>
      <date date-type="accepted">
        <day>8</day>
        <month>9</month>
        <year>2020</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© 2020 Elsevier B.V. All rights reserved.</copyright-statement>
      <copyright-year>2020</copyright-year>
      <copyright-holder>Elsevier B.V.</copyright-holder>
      <license>
        <license-p>Since January 2020 Elsevier has created a COVID-19 resource centre with free information in English and Mandarin on the novel coronavirus COVID-19. The COVID-19 resource centre is hosted on Elsevier Connect, the company's public news and information website. Elsevier hereby grants permission to make all its COVID-19-related research that is available on the COVID-19 resource centre - including this research content - immediately available in PubMed Central and other publicly funded repositories, such as the WHO COVID database with rights for unrestricted research re-use and analyses in any form or by any means with acknowledgement of the original source. These permissions are granted for free by Elsevier for as long as the COVID-19 resource centre remains active.</license-p>
      </license>
    </permissions>
    <abstract id="d1e173">
      <p>We present <inline-formula><mml:math id="d1e180" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula><italic>unleashed</italic>, a novel approach and set of scripts to aid the implementation of computerized behavioral experiments outside the laboratory. <inline-formula><mml:math id="d1e188" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula><italic>unleashed</italic> enables subjects to join the experiment using a web portal that requires no software apart from a web browser. Experimenters are likewise enabled to administer their experiments from anywhere in the world. Except for <inline-formula><mml:math id="d1e197" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> itself, <inline-formula><mml:math id="d1e202" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula><italic>unleashed</italic> is entirely based on free and open-source software. In this paper we give a high-level overview of <inline-formula><mml:math id="d1e210" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula><italic>unleashed</italic>’s features and benefits and its design. We also show how to set up the server and demonstrate the steps required for conducting an entire experiment. We subsequently explain how to leverage the security and routing features of a virtual private network with <inline-formula><mml:math id="d1e219" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula><italic>unleashed</italic>, enabling servers to securely run behind routers.</p>
    </abstract>
  </article-meta>
</front>
<body>
  <sec id="sec1">
    <label>1</label>
    <title>Introduction</title>
    <p id="d1e233">Since its inception in 1998, many researchers have come to rely on the Zurich Toolbox for Readymade Economic Experiments (<inline-formula><mml:math id="d1e237" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>), cf. <xref rid="b6" ref-type="bibr">Fischbacher (2007)</xref>. Despite the fact that several new tools have become available in recent years, a majority of economic experiments are still conducted using <inline-formula><mml:math id="d1e246" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> (see <xref rid="fig1" ref-type="fig">Fig. 1</xref> for an example). There are compelling reasons for this persistence: <inline-formula><mml:math id="d1e256" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> is easy to set up and can be learned in short order. One of the most developed and widespread alternatives is oTree by <xref rid="b4" ref-type="bibr">Chen et al. (2016)</xref>. This Python-based platform provides a flexible and powerful programming environment for interactive experiments. This flexibility, however, comes at a cost. oTree also increases the complexity of the programming environment that researchers have to handle in order to prepare their experiments.<xref rid="fn1" ref-type="fn">1</xref>
The productive use of oTree or similar platforms requires considerable programming skills, and involves substantial installation time.<xref rid="fn2" ref-type="fn">2</xref>
</p>
    <p id="d1e300"><inline-formula><mml:math id="d1e305" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> is based on a classic client–server architecture. The clients, i.e. the computers which are used by subjects during the experiment, are typically personal computers running Microsoft Windows. These PCs run <inline-formula><mml:math id="d1e310" display="inline" altimg="si12.svg"><mml:mtext>z-Leaf</mml:mtext></mml:math></inline-formula>, the client software. <inline-formula><mml:math id="d1e315" display="inline" altimg="si12.svg"><mml:mtext>z-Leaf</mml:mtext></mml:math></inline-formula> connects to <inline-formula><mml:math id="d1e321" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> via ethernet and <inline-formula><mml:math id="d1e326" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> streams the experiment over the network, while <inline-formula><mml:math id="d1e331" display="inline" altimg="si12.svg"><mml:mtext>z-Leaf</mml:mtext></mml:math></inline-formula> returns the subjects’ input using a proprietary network protocol based on TCP/IP (see <xref rid="fig2" ref-type="fig">Fig. 2</xref>, panel a). Given that <inline-formula><mml:math id="d1e341" display="inline" altimg="si12.svg"><mml:mtext>z-Leaf</mml:mtext></mml:math></inline-formula> is connected to <inline-formula><mml:math id="d1e346" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> over the LAN, a question that has frequently arisen is whether <inline-formula><mml:math id="d1e351" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> experiments could also be played over the Internet, allowing subjects to dial in from anywhere in the world. However, it is generally understood that one cannot expect participants to use a PC, use Microsoft Windows, install foreign software on their computer, not to use Wi-Fi or mobile Internet to connect to <inline-formula><mml:math id="d1e356" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> to ensure network stability and to uninstall that software after the experiment has concluded. Hence, the answer to this question used to be a resounding “no”.<fig id="fig1"><label>Fig. 1</label><caption><p><inline-formula><mml:math id="d1e26" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> usage at the Cologne Laboratory for Economic Research (CLER).</p></caption><graphic xlink:href="gr1_lrg"/></fig></p>
    <p id="d1e360">
The global pandemic known as COVID-19 has renewed interest in the question. As scientists struggle to continue their research activities while many behavioral laboratories are closed, many researchers are looking for a method to allow subjects to participate in <inline-formula><mml:math id="d1e365" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> experiments remotely. This desire has prompted us to develop <inline-formula><mml:math id="d1e370" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic>, which is a set of techniques and scripts to address several of the issues that arise in the discussion of conducting z-Tree experiments online.<fig id="fig2"><label>Fig. 2</label><caption><p>(a) The client–server architecture of <inline-formula><mml:math id="d1e39" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>; (b) the boxed and simplified architecture of <inline-formula><mml:math id="d1e44" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula><italic>unleashed</italic>.</p></caption><graphic xlink:href="gr2_lrg"/></fig></p>
    <p id="d1e377">One of the most important features of <inline-formula><mml:math id="d1e380" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> is that subjects are able to participate in the experiment using just a web browser. No installation of additional software is required and there is no difficulty when using Wi-Fi or mobile Internet instead of a wired network. Indeed, no difficulty arises even if subjects switch between networks during the experiment.<xref rid="fn3" ref-type="fn">3</xref>
Subjects may use all operating systems and system architectures as long as they can access a graphical web browser with JavaScript enabled. Subjects can participate from anywhere in the world.</p>
    <p id="d1e397">Web-based experiments have several advantages, but they also impose certain requirements. Among them are<xref rid="fn4" ref-type="fn">4</xref>
</p>
    <p id="d1e408">
      <list list-type="simple" id="d1e410">
        <list-item id="lst1">
          <label>1.</label>
          <p id="d1e414">sufficient performance of the platform;</p>
        </list-item>
        <list-item id="lst2">
          <label>2.</label>
          <p id="d1e419">monitoring which subjects are “online” and ready to participate;</p>
        </list-item>
        <list-item id="lst3">
          <label>3.</label>
          <p id="d1e424">the possibility to send out sessionwide instead of individualized links;</p>
        </list-item>
        <list-item id="lst4">
          <label>4.</label>
          <p id="d1e429">that links are reachable even from behind firewalls.</p>
        </list-item>
      </list>
    </p>
    <p id="d1e431">Regarding all of these requirements, <inline-formula><mml:math id="d1e434" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> performs very well. Firstly, while the platform’s performance depends on many variables, it is possible to achieve a setup with almost no latency. Since VNC is the underlying protocol to stream <inline-formula><mml:math id="d1e442" display="inline" altimg="si12.svg"><mml:mtext>z-Leaf</mml:mtext></mml:math></inline-formula> to subjects, we build on a methodology that has for decades been used to provide minimum-latency remote streaming for desktop applications. <inline-formula><mml:math id="d1e447" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> can also be served from a standard laptop (see Section <xref rid="sec7" ref-type="sec">7</xref> for details). Secondly, the presence of subjects can be verified using the built in “Control Center” as well as our <italic>ztu-preleaf</italic> addon (see Section <xref rid="sec5" ref-type="sec">5</xref>, p. 11). Thirdly, sessionwide links can be generated by our open-sourced <italic>ztu-singlelink</italic> addon (see Section <xref rid="sec5" ref-type="sec">5</xref>, p. 12). Finally, the links generated by recent versions of <inline-formula><mml:math id="d1e478" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> use only standard ports that are not blocked by corporate firewalls (see Section <xref rid="sec5" ref-type="sec">5</xref>, p. 11). The participation links generated by <inline-formula><mml:math id="d1e492" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> appear just as regular web links.</p>
    <p id="d1e499">Our entire package is permissively licensed, based on free software and can be freely redistributed (except for <inline-formula><mml:math id="d1e502" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> and <inline-formula><mml:math id="d1e507" display="inline" altimg="si12.svg"><mml:mtext>z-Leaf</mml:mtext></mml:math></inline-formula> itself). We provide a set of scripts as well as a user-friendly virtual machine image.<xref rid="fn5" ref-type="fn">5</xref>
</p>
    <p id="d1e526"><inline-formula><mml:math id="d1e530" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula><italic>unleashed</italic> can be run as a virtual machine, that is as a completely isolated system. It does not interfere with any existing installation of <inline-formula><mml:math id="d1e538" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>. Subjects are likewise completely isolated from each other; they cannot interfere with other subjects or the overall administration of the experiment. <inline-formula><mml:math id="d1e544" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> upholds the privacy of its users and encrypts all traffic using HTTPS or a VPN or sends the traffic over trusted internal interfaces (such as the loopback device). For small-scale experiments with up to 32 subjects, we found that a standard-issue laptop with 8 GB of RAM as well as 4 cores with 8 threads provides sufficient performance. We recommend that the experimenter has an uplink of at least 10 megabit per second. The current maximum number of subjects is 95, for which we recommend 16 GB of RAM and a superior uplink.<xref rid="fn6" ref-type="fn">6</xref>
<fig id="fig3"><label>Fig. 3</label><caption><p>A screenshot of a live session in <inline-formula><mml:math id="d1e60" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula><italic>unleashed</italic>.</p></caption><graphic xlink:href="gr3_lrg"/></fig></p>
  </sec>
  <sec id="sec2">
    <label>2</label>
    <title>Features of <inline-formula><mml:math id="d1e566" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula><italic>unleashed</italic></title>
    <p id="d1e572">In this section we briefly describe the most important features of <inline-formula><mml:math id="d1e575" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> and resulting benefits for experimenters and lab administrators. While the installation of <inline-formula><mml:math id="d1e583" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> itself has always been as simple as possible, the setup of a productive laboratory environment requires some additional steps like providing a local network and a shared file storage.</p>
    <p id="d1e587">With <inline-formula><mml:math id="d1e590" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> we simplify this setup to the absolute minimum (see <xref rid="fig2" ref-type="fig">Fig. 2</xref>, panel b). Every modern desktop computer or laptop can be used to set up an entire laboratory. All <inline-formula><mml:math id="d1e602" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>-related network communication and file transfers can be handled in a single machine and all necessary software is provided in a single virtual machine image file that can easily be mounted in a hypervisor.</p>
    <p id="d1e606">Generations of experimental economists have been trained to use <inline-formula><mml:math id="d1e609" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> and over time their experience and knowledge has become a valuable resource in many behavioral disciplines. Until now this expertise is only slowly spreading to other software tools and there is no easy way to implement existing <inline-formula><mml:math id="d1e614" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> code in alternative software tools.</p>
    <p id="d1e618">With <inline-formula><mml:math id="d1e621" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> it is possible to use existing <inline-formula><mml:math id="d1e629" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> programs without any adjustments. Not only can experimenters use their already designed experiments in a remote environment, but new experiments can still be developed on the foundation of established code and procedures. Another advantage is that all media files, predefined tables or external programs that are embedded into a <inline-formula><mml:math id="d1e634" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> file can be stored on one device. The integrated file server obviates the need for a shared network storage that is usually used to grant file access to the <inline-formula><mml:math id="d1e640" display="inline" altimg="si12.svg"><mml:mtext>z-Leaf</mml:mtext></mml:math></inline-formula> clients.</p>
    <p id="d1e644">The second group that eminently benefits from the simplified architecture of <inline-formula><mml:math id="d1e647" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> are the administrators and managers of behavioral laboratories around the world. Not only does the compact architecture of our tool allow for low-performance, and therefore also low-cost, client computer hardware, it also minimizes maintenance and update efforts for lab administrators. Since participant devices only need to handle the <inline-formula><mml:math id="d1e655" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> video stream in a web browser, more expensive office-type computers can be replaced by inexpensive and even single board computers. The same is true for the software that is needed for the client computers. With <inline-formula><mml:math id="d1e660" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> it is possible to set up the clients without any licensing costs for operating systems or other software. These ultra compact devices only need a minimal setup to receive and display the video stream, and can easily be replaced if necessary. Moreover, these lean single board computers have about twice the service life of standard desktop computers and are therefore the more environmentally friendly choice (cf. <xref rid="b9" ref-type="bibr">Pattinson et al. (2015)</xref>).</p>
    <p id="d1e672">An additional benefit for laboratory administrators comes from the fact that all upgrades, backups and other maintenance measures can be done on a single device. Different versions of <inline-formula><mml:math id="d1e675" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> and <inline-formula><mml:math id="d1e680" display="inline" altimg="si12.svg"><mml:mtext>z-Leaf</mml:mtext></mml:math></inline-formula> can easily be managed in a single folder without the need to distribute the <inline-formula><mml:math id="d1e685" display="inline" altimg="si12.svg"><mml:mtext>z-Leaf</mml:mtext></mml:math></inline-formula>s to dozens of client computers. Without the additional (external) file server used in classic <inline-formula><mml:math id="d1e691" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> setups all components of an experiment (e.g. instructions, media files, data files and program files) can also be stored in a single folder. Hence, organizing a laboratory with a large number of independent experimenters becomes much easier.</p>
    <p id="d1e695">
      <fig id="fig4">
        <label>Fig. 4</label>
        <caption>
          <p>The <inline-formula><mml:math id="d1e76" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula><italic>unleashed</italic> architecture. The reverse proxy is not shown.</p>
        </caption>
        <graphic xlink:href="gr4_lrg"/>
      </fig>
    </p>
  </sec>
  <sec id="sec3">
    <label>3</label>
    <title>Use cases</title>
    <p id="d1e703">Our tool not only helps reduce the efforts and costs for setting up and maintaining a traditional computerized laboratory, but at the same time allows for a tremendous extension of <inline-formula><mml:math id="d1e706" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>’s field of application. In this section we outline four important use cases with different levels of mobility for organizing, conducting and participating in experimental sessions. We start with the most common case of a (i) local laboratory setup, followed by a (ii) mobile laboratory setup, a (iii) remote setup and a (iv) tremendously mobile setup.</p>
    <sec id="sec3.1">
      <label>3.1</label>
      <title>Local laboratory setup</title>
      <p id="d1e715">Up until now most economic laboratories rely on a closed network with a dedicated file server to simplify the implementation of <inline-formula><mml:math id="d1e718" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>’s classic client–server architecture. The virtualized architecture of <inline-formula><mml:math id="d1e723" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> (see <xref rid="fig2" ref-type="fig">Fig. 2</xref>, <xref rid="fig3" ref-type="fig">Fig. 3</xref>) renders this closed setup redundant. That does not mean that existing hardware can no longer be used. The opposite is true; all pre-existing hardware components can still be used without major changes.</p>
      <p id="d1e734">The only step that is necessary to switch from the existing setup to our tool is the installation of the <inline-formula><mml:math id="d1e737" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> server on a computer that can be used as an experimenter’s device (e.g. an existing <inline-formula><mml:math id="d1e745" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> server). On account of the virtualization it is not even necessary to choose between the existing setup and <inline-formula><mml:math id="d1e750" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic>. By using a virtual machine that hosts the <inline-formula><mml:math id="d1e759" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> server on the existing computer, both setups can be used in parallel.</p>
      <p id="d1e766">Since probably all client computers use an operating system that comes with a web browser, changes to the clients are not necessary. At the same time the pre-existing file server can still be used as a backup device for documentation, <inline-formula><mml:math id="d1e769" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> files and raw data.</p>
    </sec>
    <sec id="sec3.2">
      <label>3.2</label>
      <title>Mobile laboratory setup</title>
      <p id="d1e778">The benefits of virtualization become even clearer in a mobile laboratory setup. The use of a wired local network in a portable laboratory with 20 or more clients is logistically challenging to say the least. It also puts anachronistically high requirements on the used client hardware, e.g. RJ-45 jacks for ethernet cables.</p>
      <p id="d1e780">One alternative could be the use of a private Wi-Fi network; but even then additional hardware would be required. Moreover, many users report issues using a wireless connection to connect the <inline-formula><mml:math id="d1e783" display="inline" altimg="si12.svg"><mml:mtext>z-Leaf</mml:mtext></mml:math></inline-formula> clients to the server.</p>
      <p id="d1e787">In contrast to that <inline-formula><mml:math id="d1e790" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> does not need a dedicated network, neither in a wired setup nor in a wireless one. It can be used in any public, private or university Wi-Fi. The only requirement is that the <inline-formula><mml:math id="d1e798" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> server is reachable via its IP address. Just as for the local laboratory setup our architecture allows for minimal requirements on the part of the client devices. It is even possible that participants use their own devices, as long as these devices can connect to the Internet.</p>
    </sec>
    <sec id="sec3.3">
      <label>3.3</label>
      <title>Remote setup</title>
      <p id="d1e810">Given that participants can use their own devices, <inline-formula><mml:math id="d1e813" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> is also ready to be used remotely. That means the server can be set up in a local laboratory while participants are invited to join the experiment from wherever they are.</p>
      <p id="d1e820">This of course brings up different challenges for the timing of interactive experiments, that is all participants have to be connected to the experiment server at a particular time. That, of course, is not only true for our setup, but for all online experiments.</p>
      <p id="d1e822">In contrast to other online experiment platforms our setup does not require an explicit routine to handle temporary dropouts. Lost connections are reestablished by refreshing the page in the browser. Even if participants accidentally close the browser window, they just have to click the link from the invitation mail again in order to continue the experiment at the exact screen they stopped at.</p>
    </sec>
    <sec id="sec3.4">
      <label>3.4</label>
      <title>Tremendously mobile setup</title>
      <p id="d1e831">The idea of a maximally mobile laboratory can be pushed even further, by also virtualizing the used network. This way the whole laboratory setup can be boxed and used on the go. Even a cellular network would be sufficient to conduct an experiment, and a computerized data collection with <inline-formula><mml:math id="d1e834" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> can take place almost anywhere in the field.</p>
      <p id="d1e838">The tremendously mobile setup is especially useful for cross-cultural experiments, where the same <inline-formula><mml:math id="d1e841" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> program is used in many different regions of the world. Instead of setting up an identical laboratory in every country, the researcher can simply bring her own lab with her in a briefcase. The detailed requirements and architecture of such a setup with a virtual private network (VPN) are described in Section <xref rid="sec6" ref-type="sec">6</xref>.</p>
    </sec>
  </sec>
  <sec id="sec4">
    <label>4</label>
    <title>Architecture</title>
    <p id="d1e855"><inline-formula><mml:math id="d1e857" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula><italic>unleashed</italic> integrates several <inline-formula><mml:math id="d1e865" display="inline" altimg="si12.svg"><mml:mtext>z-Leaf</mml:mtext></mml:math></inline-formula> clients into a single computer (the “server”). These <inline-formula><mml:math id="d1e870" display="inline" altimg="si12.svg"><mml:mtext>z-Leaf</mml:mtext></mml:math></inline-formula> clients can then be securely streamed over the network to subjects who participate in the experiment. The basic architecture is depicted in <xref rid="fig4" ref-type="fig">Fig. 4</xref>.</p>
    <p id="d1e879">The <inline-formula><mml:math id="d1e882" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> server runs on GNU/Linux. For each individual <inline-formula><mml:math id="d1e890" display="inline" altimg="si12.svg"><mml:mtext>z-Leaf</mml:mtext></mml:math></inline-formula> client, a separate Unix user account on that server is created.<xref rid="fn7" ref-type="fn">7</xref>
This setup segregates different users from each other and makes any unintended interference impossible. Even if a subject were able to break out of the confines of the experiment, she would not be able to disturb the overall administration of the experiment. These individual Unix users are the analogue to separate computers in a stationary experimental economics laboratory.</p>
    <p id="d1e944">Upon commencement of an experiment, each Unix user executes a chain of commands. This is done automatically by the scripts that we provide. It is essential that <inline-formula><mml:math id="d1e947" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> and each <inline-formula><mml:math id="d1e952" display="inline" altimg="si12.svg"><mml:mtext>z-Leaf</mml:mtext></mml:math></inline-formula> are emulated on GNU/Linux through Wine (cf. <xref rid="b1" ref-type="bibr">Amstadt and Johnson (1994)</xref>), an open-source compatibility layer that allows running Microsoft Windows executables on Unix-like operating systems. Each <inline-formula><mml:math id="d1e962" display="inline" altimg="si12.svg"><mml:mtext>z-Leaf</mml:mtext></mml:math></inline-formula> automatically connects to <inline-formula><mml:math id="d1e967" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> over the loopback interface.<xref rid="fn8" ref-type="fn">8</xref>
For each user, we initialize a headless X Window System session (<xref rid="b11" ref-type="bibr">Scheifler et al., 1997</xref>) and emulate a physical screen. A VNC server is then used to continually photograph the emulated screen and allow the streaming thereof over the network. However, the VNC server accepts connections only on the loopback device to preclude unwanted access from outside.</p>
    <p id="d1e987">noVNC<xref rid="fn9" ref-type="fn">9</xref>
is an open-sourced programming library and application that allows web browsers to connect to a VNC server. For each user, a separate instance of noVNC is run; the noVNC server listens for HTTP connections on a user-defined network address and port and serves a simple portal that allows dialing in to the VNC session. Ordinarily, interacting with a VNC session requires the installation of separate software, but noVNC obviates that requirement. Hence, <inline-formula><mml:math id="d1e1003" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> enables subjects to participate by using only a web browser.</p>
    <p id="d1e1010">To ensure privacy and security, an additional layer of networking software is used that is not shown in <xref rid="fig4" ref-type="fig">Fig. 4</xref>. Firstly, noVNC’s HTTP server only listens on the loopback interface. Secondly, we reverse proxy requests by subjects to noVNC’s HTTP server. This is achieved through the use of a web server such as nginx that acts as the reverse proxy combined with a properly issued X.509 certificate for HTTPS (see <xref rid="b12" ref-type="bibr">Tanenbaum and Wetherall (2010)</xref>, section 8.9.3).<xref rid="fn10" ref-type="fn">10</xref>
Simply put, subjects access a HTTPS protected website using a web browser. On that website, they are logged in to the experiment and interact with <inline-formula><mml:math id="d1e1032" display="inline" altimg="si12.svg"><mml:mtext>z-Leaf</mml:mtext></mml:math></inline-formula>. Upon receipt, their inputs are internally forwarded from the reverse proxy (nginx) to noVNC’s built-in HTTP server, which is listening on the loopback device.<xref rid="fn11" ref-type="fn">11</xref>
noVNC in turn converts and transmits the inputs to the VNC server, which performs the desired action over the X Window System. New frames that appear on the emulated screen (such as a dialog that appears in <inline-formula><mml:math id="d1e1093" display="inline" altimg="si12.svg"><mml:mtext>z-Leaf</mml:mtext></mml:math></inline-formula>) are likewise transmitted from the X Window System to the VNC server. noVNC reads these inputs and converts and transmits them to the reverse proxy. The reverse proxy performs cryptographic primitives and sends out TCP/IP packets that are sent over the Internet stack to the subject’s digital computer. The subject’s digital computer ultimately displays the new frame, allowing the participant to react.</p>
    <p id="d1e1097">This setup requires that the server on which <inline-formula><mml:math id="d1e1100" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> is running is globally reachable via its IP address. In most cases, this will require a full-fledged setup in a datacenter, such as a Virtual Private Server (VPS) with sufficient bandwidth and computing power. However, many Internet providers offer residential customers an (ephemeral) public IPv4 address and port forwarding to devices within the LAN. In these cases, <inline-formula><mml:math id="d1e1108" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> can be installed and used from home networks. Additionally, it is possible to direct subjects to a user-friendly hostname by using Dynamic DNS. In instances where this is not feasible, we provide a method using a VPN and a globally reachable “Thin” server in Section <xref rid="sec6" ref-type="sec">6</xref>.</p>
    <p id="d1e1121">
      <fig id="fig5">
        <label>Fig. 5</label>
        <caption>
          <p>The <inline-formula><mml:math id="d1e92" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula><italic>unleashed</italic> architecture with tunneling. The reverse proxy is not shown.</p>
        </caption>
        <graphic xlink:href="gr5_lrg"/>
      </fig>
    </p>
  </sec>
  <sec id="sec5">
    <label>5</label>
    <title>Conducting an experiment</title>
    <p id="d1e1129">In both the model of Section <xref rid="sec4" ref-type="sec">4</xref> as well as that of Section <xref rid="sec6" ref-type="sec">6</xref>, the basic steps are identical. A <inline-formula><mml:math id="d1e1142" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> server provides facilities to start, run, control and terminate an experiment. One instance of an experiment is known as a session. As soon as a session is initiated, URLs are generated that allow both the experimenter as well as participants to access the experiment. Internally, all the software described in Sections <xref rid="sec4" ref-type="sec">4</xref> and/or <xref rid="sec6" ref-type="sec">6</xref> is initialized. That is, the experimenter receives a set of <inline-formula><mml:math id="d1e1159" display="inline" altimg="si99.svg"><mml:mrow><mml:mi>K</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> URLs, the first of which streams the graphical user interface of <inline-formula><mml:math id="d1e1170" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>. All remaining <inline-formula><mml:math id="d1e1175" display="inline" altimg="si75.svg"><mml:mi>K</mml:mi></mml:math></inline-formula> URLs may be sent out to participants, who can subsequently access the <inline-formula><mml:math id="d1e1180" display="inline" altimg="si12.svg"><mml:mtext>z-Leaf</mml:mtext></mml:math></inline-formula> interface and hence, the experiment. No password entry is required because passwords are included as part of the URL. In previous versions of <inline-formula><mml:math id="d1e1185" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic>, each subject obtained one port which had to be globally reachable. This presented challenges in some corporate networks in which websites under non-standard ports cannot be opened. In the most recent version of <inline-formula><mml:math id="d1e1194" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic>, a single port, such as the HTTPS standard port 443, can be used for all subjects. <xref rid="fn12" ref-type="fn">12</xref>
The necessary <inline-formula><mml:math id="d1e1227" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> program files can be transferred into a shared directory (/share) using SFTP and the graphical interface of the virtual machine.</p>
    <p id="d1e1234">Our scripts start a predefined number of virtual clients and sets the names with which they identify themselves to <inline-formula><mml:math id="d1e1237" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> (e.g. in the clients table) accordingly. At this stage, all passwords to VNC are changed in order to ensure that only intended subjects participate in this specific study. The resolution of the virtual client screens can be set during the initial setup or at a later point by editing the settings. As <inline-formula><mml:math id="d1e1242" display="inline" altimg="si12.svg"><mml:mtext>z-Leaf</mml:mtext></mml:math></inline-formula>s are sensitive to changes in screen resolution (e.g. overlapping boxes) the experimenter might define it to fit her needs. Furthermore it is possible to set the font size of the <inline-formula><mml:math id="d1e1247" display="inline" altimg="si12.svg"><mml:mtext>z-Leaf</mml:mtext></mml:math></inline-formula>s globally (i.e. for all radio button labels and OK buttons). This feature significantly improves the predictability of the screen output as it will not depend on the resolution of the client computer. After a short period all clients appear in the clients table of <inline-formula><mml:math id="d1e1253" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>. Alternatively, an add-on, <italic>ztu-preleaf</italic>, allows to display a dialog with a button on the emulated screen instead of directly starting <inline-formula><mml:math id="d1e1261" display="inline" altimg="si12.svg"><mml:mtext>z-Leaf</mml:mtext></mml:math></inline-formula>. <xref rid="fn13" ref-type="fn">13</xref>
The invocation of that button executes that client’s <inline-formula><mml:math id="d1e1280" display="inline" altimg="si12.svg"><mml:mtext>z-Leaf</mml:mtext></mml:math></inline-formula>, making clients appear in the clients’ table only as soon as subjects signal their readiness to participate. The “Control Center”, an application to monitor more precisely which participants are online, has also been recently included in our software package. It allows the monitoring of subjects in real time.</p>
    <p id="d1e1284">The next steps depend on the intended use case. It is crucial that the server can be accessed by participants and the server is reachable through one of the methods outlined in Sections <xref rid="sec4" ref-type="sec">4</xref> or <xref rid="sec6" ref-type="sec">6</xref>. The first use case is the local setup in an existing lab. In this case the experimenter sends each stationary client computer an individual link which will be opened in a full screen browser window by using the lab’s administration software like Labcontrol.<xref rid="fn14" ref-type="fn">14</xref>
It is trivial to achieve that the shown usernames of <inline-formula><mml:math id="d1e1309" display="inline" altimg="si12.svg"><mml:mtext>z-Leaf</mml:mtext></mml:math></inline-formula>s match the number of each seat or cabin booth. In this sense the experimenter might give special attendance to a certain subject should they encounter an issue and the subjects’ experience does not deviate from running <inline-formula><mml:math id="d1e1314" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> directly and without our scripts in the lab.</p>
    <p id="d1e1318">In times where personal attendance to lab experiments is impossible the second use case is vital for conducting experiments with <inline-formula><mml:math id="d1e1321" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>. In this case subjects use their own computers to partake in the experiment. The unique and individual URL to access the <inline-formula><mml:math id="d1e1326" display="inline" altimg="si12.svg"><mml:mtext>z-Leaf</mml:mtext></mml:math></inline-formula> is sent to the participants via e-mail. Participants only have to click the link provided in the e-mail. They will be automatically connected and logged in, and are ready to start the experiment. Sending these personalized links gives an opportunity to accurately track and support specific subjects in the case of questions or problems.</p>
    <p id="d1e1330">For situations in which personalized links cannot be sent out, we have developed <italic>ztu-singlelink</italic>, an add-on which allows the creation of <italic>sessionwide</italic> links.<xref rid="fn15" ref-type="fn">15</xref>
Among other things, this makes <inline-formula><mml:math id="d1e1352" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> fully “classroom ready”.</p>
    <p id="d1e1360">Starting the experiment itself is straightforward as the experimenter just needs to click ”Start Treatment” inside <inline-formula><mml:math id="d1e1363" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> in her administrator browser window. During the experiment she might use <inline-formula><mml:math id="d1e1368" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> in the same way as in the lab and view all available tables and submitted input. At this point <inline-formula><mml:math id="d1e1373" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> produces its output in a specified folder.<xref rid="fn16" ref-type="fn">16</xref>
After the experiment is finished the experimenter might retrieve her resulting Excel file and other generated files via SFTP from inside the virtual machine.</p>
    <p id="d1e1401"><inline-formula><mml:math id="d1e1403" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula><italic>unleashed</italic> is especially resilient when errors occur. Not only is it possible to restart individual <inline-formula><mml:math id="d1e1411" display="inline" altimg="si12.svg"><mml:mtext>z-Leaf</mml:mtext></mml:math></inline-formula>s, but it is also possible to reuse individual links from an earlier session, making emergency restarts almost painless. Finally, its resilience extends to subjects. Should subjects experience any kind of interruption, perhaps from an unreliable Internet connection or because their computer is disconnected from its power supply, it is sufficient that they reopen their individual link. Even if <italic>ztu-singlelink</italic> is used, this holds: Cookies are stored on each subject’s device, ensuring that they will be redirected to their particular <inline-formula><mml:math id="d1e1420" display="inline" altimg="si12.svg"><mml:mtext>z-Leaf</mml:mtext></mml:math></inline-formula> screen. Nevertheless, adjustments should be made to experiments to ensure that they can carry on even if a subject drops out completely.</p>
    <p id="d1e1424">It is currently not possible to embed sounds or videos into experiments conducted using <inline-formula><mml:math id="d1e1427" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic>. These issues are unlikely to be solved because the protocol that underpins the streaming of <inline-formula><mml:math id="d1e1435" display="inline" altimg="si12.svg"><mml:mtext>z-Leaf</mml:mtext></mml:math></inline-formula> over the Internet, RFB, does not support audio and is ill-equipped for moving pictures.</p>
  </sec>
  <sec id="sec6">
    <label>6</label>
    <title>The tremendously mobile laboratory</title>
    <p id="d1e1444">As stated earlier, the <inline-formula><mml:math id="d1e1447" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> server requires a globally reachable IP address to act as an endpoint for the interconnection with subjects. However, with little additional overhead, <inline-formula><mml:math id="d1e1455" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> permits the use of ordinary hardware to achieve its ends. While the proliferation of IPv4 network address translation (NAT, cf. <xref rid="b12" ref-type="bibr">Tanenbaum and Wetherall (2010)</xref>, pp. 452–455) in consumer-grade internetworking links has alleviated some of the challenges associated with the lack of sufficient IPv4 address space (which made giving each Internet-capable device its own IPv4 address impossible), it has also made it generally impossible to reach a <inline-formula><mml:math id="d1e1468" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> server that is within a residential network. Hence, in a normal setup as in <xref rid="fig4" ref-type="fig">Fig. 4</xref>, a server that is run from “at home” could not be accessed by subjects as it is usually behind a router that provides NAT. On the other hand, IPv6, where available, was designed such that each device receives a globally unique and globally reachable IPv6 address. But router firewalls frequently restrict IPv6 traffic and shield devices from ostensibly unwanted traffic. Even where “port forwardings” are possible, setting them up may expose the server to unwanted and dangerous traffic. Finally, setting up Dynamic DNS or relying on port forwardings at all may be infeasible in scenarios where the <inline-formula><mml:math id="d1e1481" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> server is used in a mobile configuration.</p>
    <p id="d1e1488">If consumer-grade hardware and network links are to be used with <inline-formula><mml:math id="d1e1491" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic>, we must make the machine which subjects connect to and participate on globally reachable, although within parameters and perhaps only indirectly. We also must provide a secure and authenticated method to allow subjects to connect with the server. All of these ends are accomplished through the use of a virtual private network (VPN), see <xref rid="fig5" ref-type="fig">Fig. 5</xref>.</p>
    <p id="d1e1502">In this model, subjects do not establish a direct connection with the <inline-formula><mml:math id="d1e1505" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> server. Instead, they establish a connection with a dedicated “Thin” server, which in turn routes the traffic to the <inline-formula><mml:math id="d1e1513" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> server over the VPN. Conceptually, the “Thin” server has only three requirements: to be globally reachable by subjects; to provide an entry and exit point for the VPN; to route traffic between the subjects and the <inline-formula><mml:math id="d1e1522" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> server.<xref rid="fn17" ref-type="fn">17</xref>
Essentially, we offer a private port forwarding that is independent of the <inline-formula><mml:math id="d1e1540" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> server’s reachability and never exposes the server to insecure or unwanted traffic.</p>
    <p id="d1e1548">WireGuard (see <xref rid="b5" ref-type="bibr">Donenfeld (2017)</xref>) is a recent protocol and software tool for the establishment of virtual private networks. WireGuard enables users to establish secure connections between at least two peers even over insecure networks. The connection between two peers is always authenticated and end-to-end-encrypted using the well-known Elliptic Curve Diffie-Hellman key exchange and related cryptographic protocols (cf. <xref rid="b3" ref-type="bibr">Barker et al. (2017)</xref>). We recommend the use of WireGuard because of its simplicity. In our set of scripts, we provide a facility to automatically generate WireGuard configuration files for both the “Thin” server as well as the <inline-formula><mml:math id="d1e1559" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> server. WireGuard assigns to each peer a private static IP address. Indeed, this setup allows experimenters to run a virtual machine that handles all details of <inline-formula><mml:math id="d1e1568" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> on their own digital computers at home. Since this virtual machine and the “Thin” server are interconnected through WireGuard, subjects only interact with the “Thin” server, which can have a user-friendly domain name that points to the “Thin” server’s public static IP. WireGuard is seamlessly integrated into an existing networking infrastructure and it straightforwardly makes <inline-formula><mml:math id="d1e1576" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> available through NAT and similar complications. This setup does not require dynamic DNS. We offer example scripts to interact with the “Thin” server. The “Thin” server must be set up to minimally act as a router, a WireGuard peer and an nginx server. A tutorial sketch for setting up a FreeBSD “Thin” server is also available in our repository. The target audience for these scripts are experienced Unix system administrators. However, once a “Thin” server is set up, it can be easily shared between many researchers or access rented out on a commercial basis.</p>
    <p id="d1e1583">As mentioned previously, the <inline-formula><mml:math id="d1e1586" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> server’s noVNC instances create a HTTP server. We now configure each instance of noVNC such that the HTTP server binds to the <inline-formula><mml:math id="d1e1594" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> server’s static private IP address instead of the loopback device. As soon as the “Thin” server and the <inline-formula><mml:math id="d1e1603" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> server are connected through WireGuard, internal traffic can flow between the two servers using these internally assigned IP addresses. Binding to the static private IP address ensures that only other devices in the VPN can access the service, such as the “Thin” server.<xref rid="fn18" ref-type="fn">18</xref>
By reverse proxying requests to the “Thin” proxy over the WireGuard interface to the <inline-formula><mml:math id="d1e1621" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> server, we enable subjects to securely access the interface over HTTPS even as the actual traffic is redirected from the “Thin” server to the <inline-formula><mml:math id="d1e1630" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> server and vice versa. Subjects do not notice that the actual server is not the “Thin” server, and hence the forwardings is transparent. The strong encryption used by WireGuard makes reverse proxying HTTP over the VPN completely secure and even enables experimenters to roam between networks without interruptions, cf. <xref rid="b5" ref-type="bibr">Donenfeld (2017)</xref>. In other words, this mode of operation views the reverse proxy and the <inline-formula><mml:math id="d1e1643" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> server as distinct physical devices and conceptually moves the <inline-formula><mml:math id="d1e1651" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> server away from the subject.</p>
    <p id="d1e1658">The WireGuard VPN enables any computer with sufficient hardware and uplink to act as a <inline-formula><mml:math id="d1e1661" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> server, not just globally reachable servers. This special derivative architecture makes the lab tremendously mobile. It only has one stationary component: The “Thin” server, which can simultaneously be used for many other purposes. However, in contrast to other use cases, neither the subjects’ computers nor the experimenter’s computer must meet demanding requirements such as global reachability. This laboratory can be put in a briefcase.</p>
  </sec>
  <sec id="sec7">
    <label>7</label>
    <title>Performance, requirements and network usage</title>
    <p id="d1e1673">Running many clients on a single machine imposes significant strain on the hardware. We reduce each processor’s load by allocating subsets of <inline-formula><mml:math id="d1e1676" display="inline" altimg="si12.svg"><mml:mtext>z-Leaf</mml:mtext></mml:math></inline-formula> instances to different processor cores, but withhold one solely for the central <inline-formula><mml:math id="d1e1681" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> instance.<xref rid="fn19" ref-type="fn">19</xref>
The resulting performance improvements facilitate the productive use of <inline-formula><mml:math id="d1e1700" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic>. Using a minimal graphical interface to start the clients’ graphical user interfaces we were able to reduce the memory load to a very low level. As can be seen in <xref rid="fig6" ref-type="fig">Fig. 6</xref>, a full setup of <inline-formula><mml:math id="d1e1712" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> using 32 connected clients running a resource demanding experiment did not use more than four gigabytes of RAM. Moreover, using our environment for conducting a regular experiment we found a steady memory consumption which is even available in most personal computers. But in order to provide participants a reasonably smooth user experience, we recommend, given these observations, the use of highly parallelizable hardware and at least 4 processor cores for running complex experiments. While this appears to make the use of dedicated hardware for the single purpose of running <inline-formula><mml:math id="d1e1721" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> more attractive, the cost of such hardware in datacenters may be substantial. In most cases, it will also not be strictly necessary to run the <inline-formula><mml:math id="d1e1729" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> server for 24 h a day.</p>
    <p id="d1e1736">
Another surprise was that the uplink bandwidth available in our tests was low and at the same time we experienced a latency when transmitting inputs of almost zero. We expected to need a very fast Internet connection, but we were surprised to find that <inline-formula><mml:math id="d1e1741" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> was highly responsive. During testing we used a consumer-grade Internet link and did not notice any latency or interruptions. As depicted in <xref rid="fig6" ref-type="fig">Fig. 6</xref> our test session created only a total traffic of a few dozen megabytes. Therefore it is well possible to use <inline-formula><mml:math id="d1e1754" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> over a cellular data link.<fig id="fig6"><label>Fig. 6</label><caption><p>On the left: system utilization while running GIMS, a heavy load market simulation (see <xref rid="b8" ref-type="bibr">Palan (2015)</xref>). On the right: a regular public goods game. Usage was recorded every half second.</p></caption><graphic xlink:href="gr6_lrg"/></fig></p>
    <p id="d1e1761">So far, <inline-formula><mml:math id="d1e1764" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> has been used in a number of online experiments in several countries, including Germany, Greece, Japan and the United States. These sessions varied widely in the number of participants, but all performance-related feedback we received was related to insufficient bandwidth or inefficient programming in <inline-formula><mml:math id="d1e1772" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>. Naturally, since <inline-formula><mml:math id="d1e1777" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> executes all programs on a single machine compared to a PC laboratory which acts as a pool of decentralized computing power, paying obeisance to efficient programming techniques is especially important. As an illustration, consider an hour-long experiment which Grossmann conducted using <inline-formula><mml:math id="d1e1786" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic>: 72 subjects participated, and <inline-formula><mml:math id="d1e1794" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> was run on a cluster of two separate machines (so, 36 subjects per machine). Despite complicated matching rules and intricate interactions and a large number of stages, the experiment was entirely fluid and was lauded by subjects afterwards. Generally, performance-related issues do not relate to <inline-formula><mml:math id="d1e1803" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> directly, but instead to a lack of bandwidth or, more importantly, RAM and CPU availability. Additionally, we expect that recently introduced changes that enable the use of a X Window Manager will make the overall experience even smoother. We have also received feedback that this change improved support for non-Latin locales.</p>
  </sec>
  <sec id="sec8">
    <label>8</label>
    <title>Conclusion</title>
    <p id="d1e1815">In this paper, we presented <inline-formula><mml:math id="d1e1818" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic>, a novel tool with a set of scripts to enable the administration of economic laboratory experiments created with <inline-formula><mml:math id="d1e1826" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> over the Internet. <inline-formula><mml:math id="d1e1831" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> enables experimenters and lab administrators to “put the lab in a briefcase”, and it grants participants the opportunity to rely on secure and resilient communication channels while participating from anywhere in the world.</p>
    <p id="d1e1839">The two main challenges involved with <inline-formula><mml:math id="d1e1842" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> are the hardware and the network bottleneck. But as outlined in the previous sections, <inline-formula><mml:math id="d1e1850" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> has moderate processing power and bandwidth requirements. Other challenges that were traditionally salient with the implementation of online experiments, such as the global reachability of the server itself, have been overcome through the use of a VPN. We have also addressed data privacy concerns by only using authenticated and end-to-end-encrypted networking channels.</p>
    <p id="d1e1857">Our tool cannot only be used to simplify existing laboratory setups and take them to the Internet, but also to build low-budget laboratories that can be used in every place with any network connection, cellular, Wi-Fi or LAN. <inline-formula><mml:math id="d1e1860" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> can also help to reduce downtime by allowing for a simple replacement of server and client hardware, and by being able to switch to another network easily. Finally our tool can also help to reduce the carbon footprint of experimental labs by encouraging the use of “thin” hardware with low power usage and longer service times.</p>
    <p id="d1e1867"><inline-formula><mml:math id="d1e1869" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula><italic>unleashed</italic> has been released under a permissive free software license, allowing anyone to use, adapt and redistribute the software package. Our license is a derivative of the Mozilla Public License 2.0 with an additional clause requiring the citation of this paper in all academic publications that make use of the <inline-formula><mml:math id="d1e1877" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> scripts or derivatives thereof.</p>
    <p id="d1e1884">In principle, the methodology outlined here applies to any stationary lab software. With little effort, our scripts could be adopted such that other software can be “streamed” over the Internet. We invite discussion and contributions to our scripts on the GitLab repository and the Google Group of <inline-formula><mml:math id="d1e1887" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic>.<xref rid="fn20" ref-type="fn">20</xref>
</p>
    <p id="d1e1909">On our project website, we provide a royalty-free virtual machine image that can be used on dedicated hardware as well as for the occasional experiment. This virtual image contains all <inline-formula><mml:math id="d1e1912" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>
<italic>unleashed</italic> scripts and allows lab managers and researchers the flexibility of risklessly experimenting with different setups. An additional advantage is that firstly, the virtual machine image is an isolated container that can be trivially transferred between digital computers; and that secondly, many adjustments can be made such as an increase of the number of processor cores that are available to the virtual machine. Our virtual machine has been created in and can be imported into Oracle VM VirtualBox, a free software hosted hypervisor. It is essentially “plug and play”.</p>
  </sec>
</body>
<back>
  <ref-list id="bib1">
    <title>References</title>
    <ref id="b1">
      <element-citation publication-type="journal" id="sb1">
        <person-group person-group-type="author">
          <name>
            <surname>Amstadt</surname>
            <given-names>B.</given-names>
          </name>
          <name>
            <surname>Johnson</surname>
            <given-names>M.K.</given-names>
          </name>
        </person-group>
        <article-title>Wine</article-title>
        <source>Linux J.</source>
        <volume>1994</volume>
        <issue>4es</issue>
        <year>1994</year>
        <fpage>3</fpage>
        <comment>(cited on p. 8)</comment>
      </element-citation>
    </ref>
    <ref id="b2">
      <element-citation publication-type="journal" id="sb2">
        <person-group person-group-type="author">
          <name>
            <surname>Balietti</surname>
            <given-names>S.</given-names>
          </name>
        </person-group>
        <article-title>NodeGame: Real-time, synchronous, online experiments in the browser</article-title>
        <source>Behav. Res. Methods</source>
        <volume>49</volume>
        <issue>5</issue>
        <year>2017</year>
        <fpage>1696</fpage>
        <lpage>1715</lpage>
        <comment>(cited on p. 2)</comment>
        <pub-id pub-id-type="pmid">27864814</pub-id>
      </element-citation>
    </ref>
    <ref id="b3">
      <element-citation publication-type="book" id="sb3">
        <person-group person-group-type="author">
          <name>
            <surname>Barker</surname>
            <given-names>E.</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>L.</given-names>
          </name>
          <name>
            <surname>Keller</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Roginsky</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Vassilev</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Davis</surname>
            <given-names>R.</given-names>
          </name>
        </person-group>
        <chapter-title>Recommendation for Pair-Wise Key-Establishment Schemes Using Discrete Logarithm Cryptography: Tech. rep.</chapter-title>
        <year>2017</year>
        <publisher-name>National Institute of Standards and Technology</publisher-name>
        <comment>(cited on p. 13)</comment>
      </element-citation>
    </ref>
    <ref id="b4">
      <element-citation publication-type="journal" id="sb4">
        <person-group person-group-type="author">
          <name>
            <surname>Chen</surname>
            <given-names>D.L.</given-names>
          </name>
          <name>
            <surname>Schonger</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Wickens</surname>
            <given-names>C.</given-names>
          </name>
        </person-group>
        <article-title>OTree—An open-source platform for laboratory, online, and field experiments</article-title>
        <source>J. Behav. Exp. Finance</source>
        <volume>9</volume>
        <year>2016</year>
        <fpage>88</fpage>
        <lpage>97</lpage>
        <comment>(cited on p. 2)</comment>
      </element-citation>
    </ref>
    <ref id="b5">
      <element-citation publication-type="book" id="sb5">
        <person-group person-group-type="author">
          <name>
            <surname>Donenfeld</surname>
            <given-names>J.A.</given-names>
          </name>
        </person-group>
        <chapter-title>WireGuard: Next generation kernel network tunnel</chapter-title>
        <source>NDSS</source>
        <year>2017</year>
        <comment>(cited on pp. 13, 15)</comment>
      </element-citation>
    </ref>
    <ref id="b6">
      <element-citation publication-type="journal" id="sb6">
        <person-group person-group-type="author">
          <name>
            <surname>Fischbacher</surname>
            <given-names>U.</given-names>
          </name>
        </person-group>
        <article-title>Z-Tree: Zurich toolbox for ready-made economic experiments</article-title>
        <source>Exp. Econ.</source>
        <volume>10</volume>
        <issue>2</issue>
        <year>2007</year>
        <fpage>171</fpage>
        <lpage>178</lpage>
        <comment>(cited on p. 1)</comment>
      </element-citation>
    </ref>
    <ref id="b7">
      <element-citation publication-type="journal" id="sb7">
        <person-group person-group-type="author">
          <name>
            <surname>Henninger</surname>
            <given-names>F.</given-names>
          </name>
          <name>
            <surname>Kieslich</surname>
            <given-names>P.J.</given-names>
          </name>
          <name>
            <surname>Hilbig</surname>
            <given-names>B.E.</given-names>
          </name>
        </person-group>
        <article-title>Psynteract: A flexible, cross-platform, open framework for interactive experiments</article-title>
        <source>Behav. Res. Methods</source>
        <volume>49</volume>
        <issue>5</issue>
        <year>2017</year>
        <fpage>1605</fpage>
        <lpage>1614</lpage>
        <comment>(cited on p. 2)</comment>
        <pub-id pub-id-type="pmid">27837568</pub-id>
      </element-citation>
    </ref>
    <ref id="b8">
      <element-citation publication-type="journal" id="sb8">
        <person-group person-group-type="author">
          <name>
            <surname>Palan</surname>
            <given-names>S.</given-names>
          </name>
        </person-group>
        <article-title>GIMS—Software for asset market experiments</article-title>
        <source>J. Behav. Exp. Finance</source>
        <volume>5</volume>
        <year>2015</year>
        <fpage>1</fpage>
        <lpage>14</lpage>
        <comment>(cited on p. 17)</comment>
        <pub-id pub-id-type="pmid">26525085</pub-id>
      </element-citation>
    </ref>
    <ref id="b9">
      <element-citation publication-type="book" id="sb9">
        <person-group person-group-type="author">
          <name>
            <surname>Pattinson</surname>
            <given-names>C.</given-names>
          </name>
          <name>
            <surname>Cross</surname>
            <given-names>R.</given-names>
          </name>
          <name>
            <surname>Kor</surname>
            <given-names>A.-L.</given-names>
          </name>
        </person-group>
        <chapter-title>Chapter 14 - Thin-Client and energy efficiency</chapter-title>
        <person-group person-group-type="editor">
          <name>
            <surname>Dastbaz</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Pattinson</surname>
            <given-names>C.</given-names>
          </name>
          <name>
            <surname>Akhgar</surname>
            <given-names>B.</given-names>
          </name>
        </person-group>
        <source>Green Information Technology</source>
        <year>2015</year>
        <publisher-name>Morgan Kaufmann</publisher-name>
        <publisher-loc>Boston</publisher-loc>
        <fpage>279</fpage>
        <lpage>294</lpage>
        <comment>(cited on p. 5).</comment>
      </element-citation>
    </ref>
    <ref id="b10">
      <element-citation publication-type="journal" id="sb10">
        <person-group person-group-type="author">
          <name>
            <surname>Pettit</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Friedman</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Kephart</surname>
            <given-names>C.</given-names>
          </name>
          <name>
            <surname>Oprea</surname>
            <given-names>R.</given-names>
          </name>
        </person-group>
        <article-title>Software for continuous game experiments</article-title>
        <source>Exp. Econ.</source>
        <volume>17</volume>
        <issue>4</issue>
        <year>2014</year>
        <fpage>631</fpage>
        <lpage>648</lpage>
        <comment>(cited on p. 2)</comment>
      </element-citation>
    </ref>
    <ref id="b11">
      <element-citation publication-type="book" id="sb11">
        <person-group person-group-type="author">
          <name>
            <surname>Scheifler</surname>
            <given-names>R.W.</given-names>
          </name>
          <name>
            <surname>Gettys</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Mento</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Converse</surname>
            <given-names>D.</given-names>
          </name>
        </person-group>
        <chapter-title>X Window System: Core and Extension Protocols</chapter-title>
        <year>1997</year>
        <publisher-name>Digital Press</publisher-name>
        <comment>(cited on p. 8)</comment>
      </element-citation>
    </ref>
    <ref id="b12">
      <element-citation publication-type="book" id="sb12">
        <person-group person-group-type="author">
          <name>
            <surname>Tanenbaum</surname>
            <given-names>A.S.</given-names>
          </name>
          <name>
            <surname>Wetherall</surname>
            <given-names>D.J.</given-names>
          </name>
        </person-group>
        <chapter-title>Computer Networks</chapter-title>
        <edition>fifth ed.</edition>
        <year>2010</year>
        <publisher-name>Prentice Hall</publisher-name>
        <comment>(cited on pp. 9, 13)</comment>
      </element-citation>
    </ref>
  </ref-list>
  <ack id="d1e1919">
    <title>Acknowledgments</title>
    <p id="d1e1922">We acknowledge funding by the <funding-source id="GS1"><institution-wrap><institution-id institution-id-type="doi">10.13039/501100000781</institution-id><institution>European Research Council (ERC) under the European Union’s Horizon 2020 research and innovation program</institution></institution-wrap></funding-source> under grant agreement No. 741409, as well as by the <funding-source id="GS2"><institution-wrap><institution-id institution-id-type="doi">10.13039/501100001659</institution-id><institution>German Research Foundation (DFG) under Germany’s Excellence Strategy</institution></institution-wrap></funding-source>
(EXC 2126/1-390838866).</p>
    <p id="d1e1938">We thank Urs Fischbacher for supporting our idea and allowing us to use the name <inline-formula><mml:math id="d1e1941" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>.</p>
    <p id="d1e1945">We thank two anonymous referees for helpful comments and suggestions.</p>
  </ack>
  <fn-group>
    <fn id="fn1">
      <label>1</label>
      <p id="d1e271">The code for any oTree experiment is spread across several files, while zTree allows researchers to use a single file for programming and conducting the experiment.</p>
    </fn>
    <fn id="fn2">
      <label>2</label>
      <p id="d1e282">There are several other software platforms in different stages of development, e.g. BreadBoard, ConG (<xref rid="b10" ref-type="bibr">Pettit et al., 2014</xref>), MobLab, NodeGame (<xref rid="b2" ref-type="bibr">Balietti, 2017</xref>), Psynteract (<xref rid="b7" ref-type="bibr">Henninger et al., 2017</xref>) and UbiquityLab.</p>
    </fn>
    <fn id="fn3">
      <label>3</label>
      <p id="d1e394">Even if our web portal does not reconnect immediately, subjects can reload the portal without any loss of data.</p>
    </fn>
    <fn id="fn4">
      <label>4</label>
      <p id="d1e406">We thank an anonymous referee for suggesting the inclusion of this portion.</p>
    </fn>
    <fn id="fn5">
      <label>5</label>
      <p id="d1e518">Our GitLab repository can be found at <ext-link ext-link-type="uri" xlink:href="https://gitlab.com/cler1/ztree-unleashed" id="interref1">https://gitlab.com/cler1/ztree-unleashed</ext-link>. Our documentation as well as links to our virtual machine image are available on <ext-link ext-link-type="uri" xlink:href="https://cler1.gitlab.io/ztree-unleashed-doc/" id="interref2">https://cler1.gitlab.io/ztree-unleashed-doc/</ext-link>.</p>
    </fn>
    <fn id="fn6">
      <label>6</label>
      <p id="d1e558">The uplink’s bandwidth is mostly relevant for the subjects’s initial loading of our web portal, which has approximately 470 kb of data. Once the portal is initialized, the required uplink is tiny.</p>
    </fn>
    <fn id="fn7">
      <label>7</label>
      <p id="d1e902">In <xref rid="fig4" ref-type="fig">Fig. 4</xref>, <inline-formula><mml:math id="d1e909" display="inline" altimg="si75.svg"><mml:mi>K</mml:mi></mml:math></inline-formula> users were created, and up to <inline-formula><mml:math id="d1e914" display="inline" altimg="si75.svg"><mml:mi>K</mml:mi></mml:math></inline-formula><inline-formula><mml:math id="d1e920" display="inline" altimg="si12.svg"><mml:mtext>z-Leaf</mml:mtext></mml:math></inline-formula> clients can hence be run simultaneously. Currently, <inline-formula><mml:math id="d1e925" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula><italic>unleashed</italic> requires that all such users share a common prefix which is appended with 1 to <inline-formula><mml:math id="d1e933" display="inline" altimg="si75.svg"><mml:mi>K</mml:mi></mml:math></inline-formula>. A zeroth user is used to administer the experiment and run the <inline-formula><mml:math id="d1e939" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> graphical user interface.</p>
    </fn>
    <fn id="fn8">
      <label>8</label>
      <p id="d1e978">This eliminates all networking issues that could possibly arise and enables the experiment to run fluidly with the highest performance possible given the hardware layer.</p>
    </fn>
    <fn id="fn9">
      <label>9</label>
      <p id="d1e996"><ext-link ext-link-type="uri" xlink:href="https://novnc.com/info.html" id="interref3">https://novnc.com/info.html</ext-link>.</p>
    </fn>
    <fn id="fn10">
      <label>10</label>
      <p id="d1e1027">X.509 certificates can be procured commercially, but research institutes and services like Let’s Encrypt frequently permit the issuance of universally recognized certificates free of charge. X.509 certificates can also be self-signed, but these certificates create a warning in modern web browsers as the identity of the site using the certificate cannot be verified. Our virtual machine image comes with a self-signed X.509 certificate for testing purposes.</p>
    </fn>
    <fn id="fn11">
      <label>11</label>
      <p id="d1e1043">Since sensitive data is only ever transferred over the (internal) loopback device or encrypted and transferred over authenticated channels, <inline-formula><mml:math id="d1e1046" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula><italic>unleashed</italic> reaches the highest standards of data safety. Indeed, <inline-formula><mml:math id="d1e1054" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula><italic>unleashed</italic> is more secure than <inline-formula><mml:math id="d1e1063" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> over switched Ethernet (the standard lab configuration) since the TCP/IP packets sent and received by <inline-formula><mml:math id="d1e1068" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> can be eavesdropped at any point between the <inline-formula><mml:math id="d1e1073" display="inline" altimg="si12.svg"><mml:mtext>z-Leaf</mml:mtext></mml:math></inline-formula>s and the <inline-formula><mml:math id="d1e1078" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> server. This is impossible in <inline-formula><mml:math id="d1e1084" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula><italic>unleashed</italic>, which does not require a secure network.</p>
    </fn>
    <fn id="fn12">
      <label>12</label>
      <p id="d1e1208">Previously, the URLs generated by <inline-formula><mml:math id="d1e1211" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula><italic>unleashed</italic> followed the format <ext-link ext-link-type="uri" xlink:href="https://example.com:XXXXX/%3Fpassword%3DYYYYYYYY" id="interref4">https://example.com:XXXXX/?password=YYYYYYYY</ext-link>. Now, they have the format <ext-link ext-link-type="uri" xlink:href="https://example.com/YYYYYYYY/%3Fp%3DZZZ" id="interref5">https://example.com/YYYYYYYY/?p=ZZZ</ext-link>.</p>
    </fn>
    <fn id="fn13">
      <label>13</label>
      <p id="d1e1272">This royalty-free add-on is available at <ext-link ext-link-type="uri" xlink:href="https://gitlab.com/cler1/ztu-preleaf" id="interref6">https://gitlab.com/cler1/ztu-preleaf</ext-link>.</p>
    </fn>
    <fn id="fn14">
      <label>14</label>
      <p id="d1e1301">For more information, see <ext-link ext-link-type="uri" xlink:href="https://www.kirchkamp.de//lab/zTree.html" id="interref7">https://www.kirchkamp.de//lab/zTree.html</ext-link>, accessed March 30, 2020.</p>
    </fn>
    <fn id="fn15">
      <label>15</label>
      <p id="d1e1345">The add-on is available at <ext-link ext-link-type="uri" xlink:href="https://gitlab.com/cler1/ztu-singlelink" id="interref8">https://gitlab.com/cler1/ztu-singlelink</ext-link>. This requires a PHP-aware webserver.</p>
    </fn>
    <fn id="fn16">
      <label>16</label>
      <p id="d1e1385">For each session, a unique folder in /share/scratch is created. This alleviates the well-known limitation that made opening <inline-formula><mml:math id="d1e1391" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula> more than once per minute impossible; since <inline-formula><mml:math id="d1e1396" display="inline" altimg="si10.svg"><mml:mtext>z-Tree</mml:mtext></mml:math></inline-formula>’s output is redirected to the unique folder, the limitation does not apply.</p>
    </fn>
    <fn id="fn17">
      <label>17</label>
      <p id="d1e1536">In our investigation, we found that “Thin” servers with sufficient functionality and bandwidth are available for less than €3/month. This includes one static IPv4 address, making the “Thin” server globally reachable. A “Thin” server is not just “Thin”, it is also “Cheap”.</p>
    </fn>
    <fn id="fn18">
      <label>18</label>
      <p id="d1e1617">This implies that the actual raw HTTP or VNC services are never directly made publicly available.</p>
    </fn>
    <fn id="fn19">
      <label>19</label>
      <p id="d1e1692">Basically we customized a command described by Oliver Kirchkamp, see <ext-link ext-link-type="uri" xlink:href="https://www.kirchkamp.de//lab/zTree.html" id="interref9">https://www.kirchkamp.de//lab/zTree.html</ext-link>, retrieved March 30, 2020.</p>
    </fn>
    <fn id="fn20">
      <label>20</label>
      <p id="d1e1901">See <ext-link ext-link-type="uri" xlink:href="https://gitlab.com/cler1/zTree-unleashed" id="interref10">https://gitlab.com/cler1/zTree-unleashed</ext-link> as well as <ext-link ext-link-type="uri" xlink:href="https://groups.google.com/d/forum/ztree-unleashed" id="interref11">https://groups.google.com/d/forum/ztree-unleashed</ext-link>.</p>
    </fn>
  </fn-group>
</back>

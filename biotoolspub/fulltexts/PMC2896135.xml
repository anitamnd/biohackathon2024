<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v2.3 20070202//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName journalpublishing.dtd?>
<?SourceDTD.Version 2.3?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <?epub June-6-2010?>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Nucleic Acids Res</journal-id>
    <journal-id journal-id-type="iso-abbrev">Nucleic Acids Res</journal-id>
    <journal-id journal-id-type="publisher-id">nar</journal-id>
    <journal-id journal-id-type="hwp">nar</journal-id>
    <journal-title-group>
      <journal-title>Nucleic Acids Research</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">0305-1048</issn>
    <issn pub-type="epub">1362-4962</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">2896135</article-id>
    <article-id pub-id-type="pmid">20529877</article-id>
    <article-id pub-id-type="doi">10.1093/nar/gkq503</article-id>
    <article-id pub-id-type="publisher-id">gkq503</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Web Services</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Opal web services for biomedical applications</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Ren</surname>
          <given-names>Jingyuan</given-names>
        </name>
        <xref ref-type="corresp" rid="COR1">*</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Williams</surname>
          <given-names>Nadya</given-names>
        </name>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Clementi</surname>
          <given-names>Luca</given-names>
        </name>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Krishnan</surname>
          <given-names>Sriram</given-names>
        </name>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Li</surname>
          <given-names>Wilfred W.</given-names>
        </name>
        <xref ref-type="corresp" rid="COR2">*</xref>
      </contrib>
    </contrib-group>
    <aff>National Biomedical Computation Resource, University of California, San Diego, 9500 Gilman Drive, La Jolla, CA 92093, USA</aff>
    <author-notes>
      <corresp id="COR1">*To whom correspondence should be addressed. Tel: <phone>+1 858 246 0336</phone>; Fax: <fax>+1 858 822 1619</fax>; Email: <email>j2ren@ucsd.edu</email></corresp>
      <corresp id="COR2">Correspondence may also be addressed to Wilfred W. Li. Tel: <phone>+1 858 534 0591</phone>; Fax: <fax>+1 858 822 1619</fax>; Email: <email>Wilfred@sdsc.edu</email></corresp>
    </author-notes>
    <pub-date pub-type="ppub">
      <day>1</day>
      <month>7</month>
      <year>2010</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>6</day>
      <month>6</month>
      <year>2010</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>5</day>
      <month>6</month>
      <year>2010</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the
							<pub-date pub-type="epub"/>. -->
    <volume>38</volume>
    <issue>Web Server issue</issue>
    <fpage>W724</fpage>
    <lpage>W731</lpage>
    <history>
      <date date-type="received">
        <day>25</day>
        <month>3</month>
        <year>2010</year>
      </date>
      <date date-type="rev-recd">
        <day>12</day>
        <month>5</month>
        <year>2010</year>
      </date>
      <date date-type="accepted">
        <day>18</day>
        <month>5</month>
        <year>2010</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2010. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2010</copyright-year>
      <license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by-nc/2.5">
        <license-p><!--CREATIVE COMMONS-->This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by-nc/2.5">http://creativecommons.org/licenses/by-nc/2.5</ext-link>), which permits unrestricted non-commercial use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <abstract>
      <p>Biomedical applications have become increasingly complex, and they often require large-scale high-performance computing resources with a large number of processors and memory. The complexity of application deployment and the advances in cluster, grid and cloud computing require new modes of support for biomedical research. Scientific Software as a Service (sSaaS) enables scalable and transparent access to biomedical applications through simple standards-based Web interfaces. Towards this end, we built a production web server (<ext-link ext-link-type="uri" xlink:href="http://ws.nbcr.net">http://ws.nbcr.net</ext-link>) in August 2007 to support the bioinformatics application called MEME. The server has grown since to include docking analysis with AutoDock and AutoDock Vina, electrostatic calculations using PDB2PQR and APBS, and off-target analysis using SMAP. All the applications on the servers are powered by Opal, a toolkit that allows users to wrap scientific applications easily as web services without any modification to the scientific codes, by writing simple XML configuration files. Opal allows both web forms-based access and programmatic access of all our applications. The Opal toolkit currently supports SOAP-based Web service access to a number of popular applications from the National Biomedical Computation Resource (NBCR) and affiliated collaborative and service projects. In addition, Opal’s programmatic access capability allows our applications to be accessed through many workflow tools, including Vision, Kepler, Nimrod/K and VisTrails. From mid-August 2007 to the end of 2009, we have successfully executed 239 814 jobs. The number of successfully executed jobs more than doubled from 205 to 411 per day between 2008 and 2009. The Opal-enabled service model is useful for a wide range of applications. It provides for interoperation with other applications with Web Service interfaces, and allows application developers to focus on the scientific tool and workflow development. <bold>Web server availability</bold>: <ext-link ext-link-type="uri" xlink:href="http://ws.nbcr.net">http://ws.nbcr.net</ext-link>.</p>
    </abstract>
  </article-meta>
</front>
<body>
  <sec>
    <title>INTRODUCTION</title>
    <p>Biomedical data have become increasingly complex, and the applications that analyze them often require large-scale high-performance computing resources with a large number of processors and memory. The recently launched 1000 Genomes Project (<ext-link ext-link-type="uri" xlink:href="http://www.1000genomes.org">http://www.1000genomes.org</ext-link>) promises to increase greatly the effectiveness of genome-wide association studies (GWAS), and the potential for pharmacogenomic discoveries and personalized medicine (<xref ref-type="bibr" rid="B1">1</xref>). Efforts to define ‘human druggable genome’ to identify novel drugs or repurpose existing drugs have resulted in new computational tools and databases that enable access to real time or precomputed analysis results using distributed computing resources (<xref ref-type="bibr" rid="B2">2</xref>). The National Biomedical Computation Resource (NBCR, <ext-link ext-link-type="uri" xlink:href="http://www.nbcr.net">http://www.nbcr.net</ext-link>) provides biomedical computing resources with a focus on multi-scale biomedical research, dealing with scales at the molecular level for Computer Aided Drug Discovery (CADD), subcellular level for calcium signaling and organ level for patient specific modeling. The complexity of application deployment and the advances in distributed computing require new modes of support for biomedical research. The sSaaS enables scalable and transparent access to biomedical applications running remotely on a desktop, cluster, grid or cloud computing resources through open standards-based Web services. The availability of these application-specific services enables the adoption of workflow tools to handle complex analytical procedures. The NBCR web server <ext-link ext-link-type="uri" xlink:href="http://ws.nbcr.net">http://ws.nbcr.net</ext-link> contains a registry of several classes of biomedical application services, including docking and virtual screening using Autodock 4 (<xref ref-type="bibr" rid="B3">3</xref>) and Autodock Vina (<xref ref-type="bibr" rid="B4">4</xref>); electrostatics analysis using PDB2PQR (<xref ref-type="bibr" rid="B5">5</xref>,<xref ref-type="bibr" rid="B6">6</xref>) and APBS (<xref ref-type="bibr" rid="B7">7</xref>); off-target analysis using SMAP (<xref ref-type="bibr" rid="B8">8</xref>,<xref ref-type="bibr" rid="B9 B10 B11">9–11</xref>); and motif discovery using the MEME suite (<xref ref-type="bibr" rid="B12">12</xref>). While each application may be used in many different scenarios, they are provided by NBCR within the context of CADD, and more applications services dealing with other aspects of multiscale modeling will become available over time. These applications are exposed as Web services using the open source Opal toolkit (<xref ref-type="bibr" rid="B13">13</xref>,<xref ref-type="bibr" rid="B14">14</xref>), which enables users to access applications using web interfaces automatically generated in the Opal Dashboard or programmatically using the SOAP protocol with clients in Perl, Python, or Java programming languages. The availability, stability and scalability provided by Opal or similar Web services enable the availability of the same or alternative applications to be provided by different providers, resulting in better cyberinfrastructure for biomedical research.</p>
    <p>The rest of the paper is organized as follows: the next section deals with the usage scenario and description of the available applications; the subsequent section discusses the programmatic access of the Web services using Python as an example; the following section deals with advanced use cases including workflow composition; thereafter, the Opal toolkit and key new features are dealt with; in the next section, a, there is a discussion of this paper and related works; and the last section discusses the conclusions and future work.</p>
    <sec>
      <title>SCIENTIFIC SOFTWARE EXPOSED AS WEB SERVICES</title>
      <p>Some of the hurdles in making scientific software accessible have been the installation, maintenance and upgrades, let alone the hardware and environmental cost of maintaining a machine room. Through our experience providing MEME as a biomedical community service, we have developed the Opal toolkit (<xref ref-type="bibr" rid="B14">14</xref>), which enables scientific application developers to set up web services with both web form access and programmatic access easily without needing to change any of their own codes. We have since expanded the number of applications provided through the Opal toolkit, and built advanced workflows that leverage these distributed and scalable Web services within the context of CADD, to help increase the translational impact of the computational tools from NBCR and other related activities.</p>
    </sec>
    <sec>
      <title>Opal Dashboard with basic or advanced web interfaces</title>
      <p>The Opal Dashboard (<xref ref-type="fig" rid="F1">Figure 1</xref>A) (<xref ref-type="bibr" rid="B15">15</xref>) at <ext-link ext-link-type="uri" xlink:href="http://ws.nbcr.net">http://ws.nbcr.net</ext-link> provides a listing of all the Web services, including applications for docking analysis, electrostatics calculations, off-target analysis and motif search/discovery. The ‘List of Applications’ tab shows the list of applications. The ‘Search’ textbox allows a user to use keywords to search for applications. Each service has a service name, a basic description of the application, a tutorial link and a programmatic access (Web service) URL. The service name links to an automatically generated simple or a customized web page. The former accepts command line arguments for an application, whereas the latter provides the command line arguments in a web form (<xref ref-type="fig" rid="F1">Figure 1</xref>B). The tutorial link contains instructions for learning and sample input and output for testing. The Web service URL is used only for programmatic access of the application.
<fig id="F1" position="float"><label>Figure 1.</label><caption><p>(<bold>A</bold>) The Opal Dashboard lists all the available applications, with different versions where applicable, and provides a search interface using keywords. (<bold>B</bold>) A customized interface is automatically generated based upon required AutoDock 4 command line arguments.</p></caption><graphic xlink:href="gkq503f1"/></fig></p>
    </sec>
    <sec>
      <title>Web services for CADD</title>
      <p>The application services are provided to facilitate various aspects of CADD. A summary is provided in <xref ref-type="table" rid="T1">Table 1</xref>, along with the references for the application. While there may be alternative applications for each purpose, due to space constraint, we will only discuss similar applications from the literature or online services in the ‘Discussion’ section. Some usage scenarios of these services are as follows: a user has a particular drug target receptor in mind, e.g. the influenza neuraminidase (NA), and would like to search the NCI diversity set (NCIDS <ext-link ext-link-type="uri" xlink:href="http://dtp.nci.nih.gov/branches/dscb/div2_explanation.html">http://dtp.nci.nih.gov/branches/dscb/div2_explanation.html</ext-link>) library for possible hits (<xref ref-type="bibr" rid="B16">16</xref>). The partial charges for the receptor may be added using PDB2PQR, or added with the Prepare Receptor service (part of MGLTools, currently at v1.5.4) using default parameters. A user may then use AutoDockTools (part of MGLTools, currently at v1.5.4), to specify the grid box center, spacing and number of grid points to generate a custom grid parameter file (GPF), or provide a reference GPF template file with the desired grid box information. As the atom types created in the GPF is dependent upon the ligand or a library of ligands, the user would use the Prepare GPF for Library service available at <ext-link ext-link-type="uri" xlink:href="http://kryptonite.nbcr.net/opal2/dashboard">http://kryptonite.nbcr.net/opal2/dashboard</ext-link>, where a user may upload his own library already prepared for use with AutoDock4, or have it prepared with the Prepare Ligand service, or just choose a library already available on the server. The NCIDS and ZINC (<xref ref-type="bibr" rid="B17">17</xref>) libraries are some of the example libraries available. Once AutoGrid is complete, the AutoDock Virtual Screening service may be used for the virtual screening. If the user is interested in finding PDB structures that have a similar binding site to the NA protein, then he or she may use the SMAP analysis to perform an off-target analysis. If the user is interested in identifying conserved motifs in the NA protein for all pandemic N1 proteins, the MEME suite of programs may be used for such purposes, followed by mutational analysis, including electrostatic analysis to examine the effect of these mutations.
<table-wrap id="T1" position="float"><label>Table 1.</label><caption><p>Opal web services, basic usage, and the programmatic access URLs</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th rowspan="1" colspan="1">Name</th><th rowspan="1" colspan="1">Purpose</th><th rowspan="1" colspan="1">Versions</th><th rowspan="1" colspan="1">Programmatic access URLs</th></tr></thead><tbody align="left"><tr><td rowspan="2" colspan="1">Autodock (<xref ref-type="bibr" rid="B3">3</xref>)</td><td rowspan="2" colspan="1">Docking experiment with a single protein and a ligand</td><td rowspan="1" colspan="1">4.0.1</td><td rowspan="1" colspan="1"><ext-link ext-link-type="uri" xlink:href="http://ws.nbcr.net/opal2/services/AutodockOpalService">http://ws.nbcr.net/opal2/services/AutodockOpalService</ext-link></td></tr><tr><td rowspan="1" colspan="1">4.2.1</td><td rowspan="1" colspan="1"><ext-link ext-link-type="uri" xlink:href="http://ws.nbcr.net/opal2/services/Autodock_4.2.1">http://ws.nbcr.net/opal2/services/Autodock_4.2.1</ext-link></td></tr><tr><td rowspan="1" colspan="1">Autodock Vina (<xref ref-type="bibr" rid="B18">18</xref>)</td><td rowspan="1" colspan="1">Docking experiment with a single protein and a ligand</td><td rowspan="1" colspan="1">1.0.2</td><td rowspan="1" colspan="1"><ext-link ext-link-type="uri" xlink:href="http://kryptonite.nbcr.net/opal2/services/AutodockVina">http://kryptonite.nbcr.net/opal2/services/AutodockVina</ext-link></td></tr><tr><td rowspan="1" colspan="1">Autodock Vina VS</td><td rowspan="1" colspan="1">VS of a ligand library using a single receptor</td><td rowspan="1" colspan="1">1.0.2</td><td rowspan="1" colspan="1"><ext-link ext-link-type="uri" xlink:href="http://kryptonite.nbcr.net/opal2/services/AutodockVina_Screening">http://kryptonite.nbcr.net/opal2/services/AutodockVina_Screening</ext-link></td></tr><tr><td rowspan="1" colspan="1">Autodock VS</td><td rowspan="1" colspan="1">VS of a ligand library using a single receptor</td><td rowspan="1" colspan="1">AD4.2.3/MGL1.5.4</td><td rowspan="1" colspan="1"><ext-link ext-link-type="uri" xlink:href="http://kryptonite.nbcr.net/opal2/services/autodock">http://kryptonite.nbcr.net/opal2/services/autodock</ext-link></td></tr><tr><td rowspan="3" colspan="1">Autogrid (<xref ref-type="bibr" rid="B3">3</xref>)</td><td rowspan="3" colspan="1">Generates required MAP files prior to AutoDock docking experiment</td><td rowspan="1" colspan="1">4.0.1</td><td rowspan="1" colspan="1"><ext-link ext-link-type="uri" xlink:href="http://ws.nbcr.net/opal2/services/AutogridOpalService">http://ws.nbcr.net/opal2/services/AutogridOpalService</ext-link></td></tr><tr><td rowspan="1" colspan="1">4.2.1</td><td rowspan="1" colspan="1"><ext-link ext-link-type="uri" xlink:href="http://ws.nbcr.net/opal2/services/Autogrid_4.2.1">http://ws.nbcr.net/opal2/services/Autogrid_4.2.1</ext-link></td></tr><tr><td rowspan="1" colspan="1">4.2.3 special</td><td rowspan="1" colspan="1"><ext-link ext-link-type="uri" xlink:href="http://kryptonite.nbcr.net/opal2/services/autogrid">http://kryptonite.nbcr.net/opal2/services/autogrid</ext-link></td></tr><tr><td rowspan="2" colspan="1">APBS (<xref ref-type="bibr" rid="B7">7</xref>)</td><td rowspan="2" colspan="1">Electrostatics calculations of biomolecules</td><td rowspan="1" colspan="1">1.2.1b serial</td><td rowspan="1" colspan="1"><ext-link ext-link-type="uri" xlink:href="http://ws.nbcr.net/opal2/services/ApbsOpalService">http://ws.nbcr.net/opal2/services/ApbsOpalService</ext-link></td></tr><tr><td rowspan="1" colspan="1">1.2.1b parallel</td><td rowspan="1" colspan="1"><ext-link ext-link-type="uri" xlink:href="http://ws.nbcr.net/opal2/services/ApbsParallelOpalService">http://ws.nbcr.net/opal2/services/ApbsParallelOpalService</ext-link></td></tr><tr><td rowspan="1" colspan="1">FIMO (<xref ref-type="bibr" rid="B12">12</xref>)</td><td rowspan="1" colspan="1">Find individual motif occurrences in a sequence database</td><td rowspan="1" colspan="1">4.3.0</td><td rowspan="1" colspan="1"><ext-link ext-link-type="uri" xlink:href="http://ws.nbcr.net/opal2/services/FIMO_4.3.0">http://ws.nbcr.net/opal2/services/FIMO_4.3.0</ext-link></td></tr><tr><td rowspan="1" colspan="1">GLAM2 (<xref ref-type="bibr" rid="B12">12</xref>)</td><td rowspan="1" colspan="1">Identification of gapped motifs in DNA or protein sequences</td><td rowspan="1" colspan="1">4.3.0</td><td rowspan="1" colspan="1"><ext-link ext-link-type="uri" xlink:href="http://ws.nbcr.net/opal2/services/GLAM2_4.3.0">http://ws.nbcr.net/opal2/services/GLAM2_4.3.0</ext-link></td></tr><tr><td rowspan="1" colspan="1">GLAM2SCAN (<xref ref-type="bibr" rid="B12">12</xref>)</td><td rowspan="1" colspan="1">Identify GLAM2 motifs in a sequence database</td><td rowspan="1" colspan="1">4.3.0</td><td rowspan="1" colspan="1"><ext-link ext-link-type="uri" xlink:href="http://ws.nbcr.net/opal2/services/GLAM2SCAN_4.3.0">http://ws.nbcr.net/opal2/services/GLAM2SCAN_4.3.0</ext-link></td></tr><tr><td rowspan="1" colspan="1">GOMO (<xref ref-type="bibr" rid="B12">12</xref>)</td><td rowspan="1" colspan="1">Identify GO terms linked to target genes with a given DNA binding motif</td><td rowspan="1" colspan="1">4.3.0</td><td rowspan="1" colspan="1"><ext-link ext-link-type="uri" xlink:href="http://ws.nbcr.net/opal2/services/GOMO_4.3.0">http://ws.nbcr.net/opal2/services/GOMO_4.3.0</ext-link></td></tr><tr><td rowspan="1" colspan="1">MAST (<xref ref-type="bibr" rid="B12">12</xref>)</td><td rowspan="1" colspan="1">Identify given motifs in sequence databases</td><td rowspan="1" colspan="1">4.3.0</td><td rowspan="1" colspan="1"><ext-link ext-link-type="uri" xlink:href="http://ws.nbcr.net/opal2/services/MAST_4.3.0">http://ws.nbcr.net/opal2/services/MAST_4.3.0</ext-link></td></tr><tr><td rowspan="1" colspan="1">MEME (<xref ref-type="bibr" rid="B12">12</xref>)</td><td rowspan="1" colspan="1">Identify conserved motifs given input DNA or protein sequences</td><td rowspan="1" colspan="1">4.3.0</td><td rowspan="1" colspan="1"><ext-link ext-link-type="uri" xlink:href="http://ws.nbcr.net/opal2/services/MEME_4.3.0">http://ws.nbcr.net/opal2/services/MEME_4.3.0</ext-link></td></tr><tr><td rowspan="1" colspan="1">PDB2PQR (<xref ref-type="bibr" rid="B5">5</xref>,<xref ref-type="bibr" rid="B6">6</xref>)</td><td rowspan="1" colspan="1">Utility to convert PDB to PQR format used in continuum electrostatics calculations</td><td rowspan="1" colspan="1">1.6.0</td><td rowspan="1" colspan="1"><ext-link ext-link-type="uri" xlink:href="http://ws.nbcr.net/opal2/services/Pdb2pqrOpalService">http://ws.nbcr.net/opal2/services/Pdb2pqrOpalService</ext-link></td></tr><tr><td rowspan="1" colspan="1">Prepare GPF (<xref ref-type="bibr" rid="B19">19</xref>)</td><td rowspan="1" colspan="1">Generates Grid Parameter File used for AutoGrid with a single protein and a single ligand</td><td rowspan="1" colspan="1">MGLTools 1.5.4</td><td rowspan="1" colspan="1"><ext-link ext-link-type="uri" xlink:href="http://ws.nbcr.net/opal2/services/PrepareGPFOpalService">http://ws.nbcr.net/opal2/services/PrepareGPFOpalService</ext-link></td></tr><tr><td rowspan="1" colspan="1">Prepare GPF for Lib</td><td rowspan="1" colspan="1">Generates Grid Parameter Files for a single protein and a ligand library</td><td rowspan="1" colspan="1">MGLTools 1.5.4</td><td rowspan="1" colspan="1"><ext-link ext-link-type="uri" xlink:href="http://kryptonite.nbcr.net/opal2/services/prepareGPF">http://kryptonite.nbcr.net/opal2/services/prepareGPF</ext-link></td></tr><tr><td rowspan="1" colspan="1">Prepare Receptor (<xref ref-type="bibr" rid="B19">19</xref>)</td><td rowspan="1" colspan="1">Prepares a protein (receptor) for use in a AutoDock experiment</td><td rowspan="1" colspan="1">MGLTools 1.5.4</td><td rowspan="1" colspan="1"><ext-link ext-link-type="uri" xlink:href="http://ws.nbcr.net/opal2/services/PrepareReceptorOpalService">http://ws.nbcr.net/opal2/services/PrepareReceptorOpalService</ext-link></td></tr><tr><td rowspan="1" colspan="1">SMAP DB Search (<xref ref-type="bibr" rid="B8 B9 B10 B11">8–11</xref>)</td><td rowspan="1" colspan="1">Search SMAP database for 3D ligand binding site similarity</td><td rowspan="1" colspan="1">2.2alpha</td><td rowspan="1" colspan="1"><ext-link ext-link-type="uri" xlink:href="http://kryptonite.nbcr.net/opal2/services/SMAPPairComp">http://kryptonite.nbcr.net/opal2/services/SMAPPairComp</ext-link></td></tr><tr><td rowspan="1" colspan="1">SMAP Pair Comp. (<xref ref-type="bibr" rid="B8 B9 B10 B11">8–11</xref>)</td><td rowspan="1" colspan="1">Pairwise comparison of 3D ligand binding site similarity</td><td rowspan="1" colspan="1">2.2alpha</td><td rowspan="1" colspan="1"><ext-link ext-link-type="uri" xlink:href="http://kryptonite.nbcr.net/opal2/services/SMAPDBSearch">http://kryptonite.nbcr.net/opal2/services/SMAPDBSearch</ext-link></td></tr></tbody></table><table-wrap-foot><fn><p>All these services have individual publications and online tutorials that describe their detailed usage. As with any online predictive programs, the experiments should be prepared carefully, and the results should be interpreted with caution, and within appropriate biological context.</p></fn></table-wrap-foot></table-wrap></p>
    </sec>
    <sec>
      <title>Opal Web service usage statistics</title>
      <p>There has been a growth in the number of jobs for various applications on our web server. <xref ref-type="fig" rid="F2">Figure 2</xref> shows a comparison of the numbers of jobs successfully executed in 2008 and 2009. We can see from the graph that the usage for our applications increased and the total number of jobs executed in 2009 was approximately double of that in 2008. There were 75 059 jobs successfully executed in 2008, and 150 041 in 2009.
<fig id="F2" position="float"><label>Figure 2.</label><caption><p>(<bold>A</bold>) Comparison of numbers of jobs successfully executed in 2008 and 2009 in a semi-log graph. (<bold>B</bold>) Number of total jobs successfully executed per month.</p></caption><graphic xlink:href="gkq503f2"/></fig></p>
    </sec>
  </sec>
  <sec>
    <title>PROGRAMMATIC ACCESS OF OPAL SERVICES</title>
    <p>The Opal toolkit consists of the Opal server and the Opal client (<xref ref-type="fig" rid="F3">Figure 3</xref>). The Opal server is responsible to managing and providing the web services, while the Opal client accesses web services on the Opal server. The set up of the Opal server is discussed in the ‘Opal server management and configuration’ section, and is only of interest to users who want to provide Opal services for their own applications. The Opal client enables easy programmatic access of any Opal service. A generic Opal client, currently available in Python and Java, supports user actions such as launching a job, querying job status, getting job outputs and works with any Opal Web service. An Opal client in Perl is provided as an example for MEME, and a generic Perl client will be made available soon.
<fig id="F3" position="float"><label>Figure 3.</label><caption><p>Opal client/server architecture – running a PDB2PQR job as a Web service call.</p></caption><graphic xlink:href="gkq503f3"/></fig></p>
    <p><xref ref-type="fig" rid="F3">Figure 3</xref> illustrates how the Python client may be used to access the PDB2PQR service (<xref ref-type="table" rid="T2">Table 2</xref>). More Opal client documentation is available at <ext-link ext-link-type="uri" xlink:href="http://www.nbcr.net/pub/wiki/index.php?title=Opal_Client">http://www.nbcr.net/pub/wiki/index.php?title=Opal_Client</ext-link>.
<table-wrap id="T2" position="float"><label>Table 2.</label><caption><p>Common Opal Python client commands</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th rowspan="1" colspan="1">Launch job</th><th rowspan="1" colspan="1">Query job status</th><th rowspan="1" colspan="1">Get job outputs</th></tr></thead><tbody align="left"><tr><td rowspan="1" colspan="1"><monospace>python GenericServiceClient.py\</monospace></td><td rowspan="1" colspan="1"><monospace>python GenericServiceClient.py\</monospace></td><td rowspan="1" colspan="1"><monospace>python GenericServiceClient.py\</monospace></td></tr><tr><td rowspan="1" colspan="1"><monospace>-l $opal_service_url\</monospace></td><td rowspan="1" colspan="1"><monospace>-l $opal_service_url\</monospace></td><td rowspan="1" colspan="1"><monospace>-l $opal_service_url\</monospace></td></tr><tr><td rowspan="1" colspan="1"><monospace>-r launchJob\</monospace></td><td rowspan="1" colspan="1"><monospace>-r queryStatus\</monospace></td><td rowspan="1" colspan="1"><monospace>-r getOutputs\</monospace></td></tr><tr><td rowspan="1" colspan="1"><monospace>-a “$cmd_line_args”\</monospace></td><td rowspan="1" colspan="1"><monospace>-j $job_id</monospace></td><td rowspan="1" colspan="1"><monospace>-j $job_id</monospace></td></tr><tr><td rowspan="1" colspan="1"><monospace>-f “$inputfiles_list”</monospace></td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/></tr></tbody></table></table-wrap></p>
    <p>For example, a user can launch a PDB2PQR job with the following command to convert ‘1a1p.pdb’ to ‘output.pqr’, assuming ‘1a1p.pdb’ is already in the user’s local directory:</p>
    <p>
      <monospace>python GenericServiceClient.py \</monospace>
    </p>
    <p>
      <monospace>-l</monospace>
      <ext-link ext-link-type="uri" xlink:href="http://ws.nbcr.net/opal2/services/Pdb2pqrOpalService">
        <monospace>http://ws.nbcr.net/opal2/services/Pdb2pqrOpalService</monospace>
      </ext-link>
      <monospace>\</monospace>
    </p>
    <p>
      <monospace>-r launchJob \</monospace>
    </p>
    <p>
      <monospace>-a “–ff=amber 1a1p.pdb output.pqr” \</monospace>
    </p>
    <p>
      <monospace>-f 1a1p.pdb</monospace>
    </p>
    <p>The output for this command will include a job ID, e.g. app1234567890, along with a job base output URL. With the job ID the user can query the job status as in the command below:</p>
    <p>
      <monospace>python GenericServiceClient.py \</monospace>
    </p>
    <p>
      <monospace>-l</monospace>
      <ext-link ext-link-type="uri" xlink:href="http://ws.nbcr.net/opal2/services/Pdb2pqrOpalService">
        <monospace>http://ws.nbcr.net/opal2/services/Pdb2pqrOpalService</monospace>
      </ext-link>
      <monospace>\</monospace>
    </p>
    <p>
      <monospace>-r queryStatus \</monospace>
    </p>
    <p>
      <monospace>-j <italic>app1234567890</italic></monospace>
    </p>
    <p>A notable feature of Opal Web services is that the job output URL may be used as the input URL for compatible Web services. This is discussed in the next section for workflow composition.</p>
  </sec>
  <sec>
    <title>USING OPAL SERVICES WITH WORKFLOW TOOLS</title>
    <p>As indicated in the section on usage scenario, CADD processes are very complex, and involve many steps, some automatically, others requiring manual intervention. A number of workflow tools, both commercial and open source, have been developed to support the construction and execution of complex workflows. Some well known examples include Pipeline Pilot (<ext-link ext-link-type="uri" xlink:href="http://accelrys.com/products/pipeline-pilot/">http://accelrys.com/products/pipeline-pilot/</ext-link>), Taverna (<xref ref-type="bibr" rid="B20">20</xref>,<xref ref-type="bibr" rid="B21">21</xref>), Kepler (<xref ref-type="bibr" rid="B22">22</xref>), Vistrails (<xref ref-type="bibr" rid="B23">23</xref>) and Vision (<xref ref-type="bibr" rid="B4">4</xref>). In all these tools, a user is allowed to run complex experiments automatically, after careful parameter tuning for the individual steps. Often, an experiment step is represented in these workflow tools as a node, which has input and output ports. Two nodes can be connected together so that the outputs of the first node may be inputs of the second node and may trigger the execution of the second node. For example, a user often thinks of an AutoDock VS experiment as three major steps, prepare the receptor, compute the grids, and run the virtual screening. The completion of a ‘prepare receptor’ node triggers the execution of the ‘compute grids’ node, which in turn triggers the execution of the ‘AutoDock virtual screening’ node.</p>
    <sec>
      <title>Vision and NBCR CADD pipeline</title>
      <p>Many of these Opal web services are easily accessible in Vision (<xref ref-type="bibr" rid="B4">4</xref>) using the Vision Web service module. Vision provides a visual programming environment, and is easily integrated with the Python Molecular Viewer (PMV) and AutoDockTools (ADT) to automate many of the setup, visualization and analysis of AutoDock experiments. The Vision Web service module leverages the automatic interface generation feature to provide users with the same user interface in the web form, as configured on the server side.</p>
      <p>The workflow illustrated in <xref ref-type="fig" rid="F4">Figure 4</xref> accesses the Prepare Receptor Web services from <ext-link ext-link-type="uri" xlink:href="http://ws.nbcr.net">http://ws.nbcr.net</ext-link>, and Prepare GPF, Autogrid, and Autodock Virtual Screening Web services from <ext-link ext-link-type="uri" xlink:href="http://kryptonite.nbcr.net">http://kryptonite.nbcr.net</ext-link>. The Opal output URL is often used as the input URL for the next step of the workflow. These workflow units are now packaged into the MGLTools and allow advanced users to build customized workflows.
<fig id="F4" position="float"><label>Figure 4.</label><caption><p>Autodock virtual screening workflow in Vision. A user may specify an input directory, e.g. VS, which contains one or more PDB files, corresponding template GPFs and DPFs. A user may select a ligand library from the list of libraries. After the virtual screening job finishes, the top 500 docking results along with summarized results are automatically downloaded to the user’s local machine.</p></caption><graphic xlink:href="gkq503f4"/></fig></p>
      <p>For users who wish to use preexisting workflows, the AutoDock VS experiment may be accessed using Vision networks developed as part of a prototype of the NBCR CADD pipeline (<ext-link ext-link-type="uri" xlink:href="http://nbcr.net/pub/wiki/index.php?title=CADD_Pipeline">http://nbcr.net/pub/wiki/index.php?title=CADD_Pipeline</ext-link>). In addition, users may also take advantage pre-built workflows for post-analysis and visualization of docking results. For example, a user may use a Vision network to iterate through a virtual screening result directory with the different docking log files, and play through the different ligand conformations using built-in functionalities of ADT. Thus, more customized analysis routines may be published and shared with many users.</p>
    </sec>
    <sec>
      <title>Support of other workflow tools</title>
      <p>A full description of workflow tools such as Kepler, Nimrod/K (<xref ref-type="bibr" rid="B24">24</xref>) or VisTrails is beyond the scope of this paper. We simply point out that a generic Opal client is available as an actor in Kepler, which can be used to call any Opal service. To get the Opal actor in Kepler, then user can type ‘web services’ in ‘Search Components’ textbox and then drag ‘OpalClient’ to the workflow composition canvas in Kepler. Then the user can then click on ‘OpalClient’ to enter a web service URL. After the user clicks on ‘commit’ and then clicks on the ‘OpalClient’ actor again, the updated actor will show the automatically generated Opal web form. Similarly, the Kepler based Nimrod/K allows dynamic concurrent execution of Kepler’s actors. A tutorial on using Kepler with Nimrod/K and Opal services can be found on <ext-link ext-link-type="uri" xlink:href="http://nbcr.net/pub/wiki/index.php?title=Kepler">http://nbcr.net/pub/wiki/index.php?title=Kepler</ext-link>. Similar to Vision and Kepler, all Opal services are callable from VisTrails, for which an automatic interface generation of the Opal web form will become available in the near future. Documentation on installing the required components for using VisTrails with Opal services and tutorials can be found on <ext-link ext-link-type="uri" xlink:href="http://nbcr.sdsc.edu/pub/wiki/index.php?title=VisTrails">http://nbcr.sdsc.edu/pub/wiki/index.php?title=VisTrails</ext-link>. In VisTrails, the user can use the ‘ExecuteOpalJob’ node to launch an Opal job. This node has four inputs, command line arguments, number of processors (for parallel jobs only), list of input files and the web service URL.</p>
    </sec>
  </sec>
  <sec>
    <title>OPAL SERVER CONFIGURATION AND MANAGEMENT</title>
    <p>The Web services described earlier have been deployed using the Opal toolkit, which enables advanced users to automatically wrap scientific applications running on cluster and Grid resources as Web services, and to provide Web-based and programmatic access to them, without any modification to the scientific codes. Thus, together with the generic clients or workflow tools described above, a user may access or develop workflows that leverage not only those Opal services provided by NBCR, but also the ones provided by anyone using the Opal toolkit. As the advantages of using the Opal toolkit has been published extensively elsewhere (<xref ref-type="bibr" rid="B15">15</xref>,<xref ref-type="bibr" rid="B13">13</xref>,<xref ref-type="bibr" rid="B14">14</xref>), we will only highlight a few key points relevant to the management and usage of the Opal services. Additional documentation on installation may be found online at <ext-link ext-link-type="uri" xlink:href="http://opal.nbcr.net">http://opal.nbcr.net</ext-link>.</p>
    <sec>
      <title>Automatic Web interface generation</title>
      <p>The Opal Dashboard (<xref ref-type="bibr" rid="B15">15</xref>), available with any Opal installation, provides a consolidated point of entry for accessing information about Opal services, and invoking remote scientific applications (<xref ref-type="fig" rid="F1">Figure 1</xref>A). Opal also provides a mechanism to automatically create Web interfaces for job submission using provided application specific metadata. A detailed description of automatic interface generation is presented in ref. 15. Briefly, advanced users can make sophisticated configuration files to generate advanced web forms, which contain an input field for each input parameter, as specified by the command-line arguments of the scientific application. Parameters may be grouped together and check boxes and radio buttons may be added (<xref ref-type="fig" rid="F1">Figure 1</xref>B). This feature is great for making an application quickly available to the intended users through the web, in addition to the programmatic access through SOAP Web service calls. Users may also design their own web pages and make Web service calls to Opal services if desired, as is the case for MEME and PDB2PQR.</p>
    </sec>
    <sec>
      <title>Resource management and statistics report</title>
      <p>The Opal server logs some information for job, including job ID, job URL, start time, activation time, end time, client IP, service name and job result status. Using this information, the Opal Dashboard provides a variety of charts showing usage information, as shown in <xref ref-type="fig" rid="F5">Figure 5</xref>. Note that these charts are completely anonymous—no user information is displayed on the charts. Each Opal job is associated with a unique random ID given only to the user who submitted the job. Immediately after the user submits a job on the web form, the user gets a unique URL that automatically updates the status of the job. More details about Opal state management is available in ref. 13. A new Opal version to be released in May 2010 includes email notification of the job URL and status updates. Another feature already available is necessitated by the popularity of our service. Opal 2.2 and higher supports a new IP address filtering feature that helps prevent Denial of Service attacks. An administrator may choose to enable this feature to deny all job requests from certain IPs, once the number of jobs per IP for the past hour is greater than the limit has been specified. IPs may also be exempted from any restrictions.
<fig id="F5" position="float"><label>Figure 5.</label><caption><p>The ‘Jobs Executed per Day’ graph from the Opal server ‘Statistics’ page.</p></caption><graphic xlink:href="gkq503f5"/></fig></p>
    </sec>
  </sec>
  <sec sec-type="discussion">
    <title>DISCUSSION</title>
    <p>The Web services described in this paper provides a set of popular computational tools that may be used within the context of CADD, though not limited to it. The use of Opal toolkit may help provide a common platform for rapid deployment of scientific Web services. For example, many existing applications that perform similar functions, such as AlignAce (<xref ref-type="bibr" rid="B25">25</xref>) as opposed to MEME in motif discovery; use of semi-empirical quantum-chemical techniques (<xref ref-type="bibr" rid="B26">26</xref>) as opposed to PDB2PQR or AutoDockTools in partical charge calculation; Dock (<xref ref-type="bibr" rid="B27">27</xref>) as opposed to AutoDock in docking; webPIPSA (<xref ref-type="bibr" rid="B28">28</xref>) as opposed to APBS in electrostatics analysis, may be coupled in workflows or compared for consensus. Users are encouraged to study the original references for these application services, acquire the appropriate training and validate any predictions with experiments.</p>
    <p>As the Web services we provide increase in popularity, there may be several ways to overcome the problem with scalability. While we have implemented a filter based upon the number of requests per hour, we are preparing an increased allocation of compute resources in response to any increased usage. In addition, we explore the use of Amazon EC2 commercial providers to become on-demand purveyor of the services through virtual machines that contain preconfigured Opal services in multicore machines or virtual clusters. On the other hand, as more identical or alternative applications become available as Web services, with the help of the Opal toolkit, it may relieve the pressure on any one provider. In other words, the Opal Web service interface remains unchanged, yet the resources behind the services will be dynamically allocated from different providers.</p>
    <p>While Opal provides a simple toolkit to deploy Web services, other methods are also available (<xref ref-type="bibr" rid="B14">14</xref>). For example, EBI has a number of services deployed using the SoapLab toolkit (<ext-link ext-link-type="uri" xlink:href="http://www.ebi.ac.uk/soaplab/">http://www.ebi.ac.uk/soaplab/</ext-link>), with good support by the Taverna workflow engine. The Protein Data Bank (PDB) provides a plethora of Web services related to structure based drug design. We anticipate the proliferation of Web services, and emerging standards to allow researchers to focus more on the biological problems, rather than deploying applications, and advance the cyberinfrastructure for biomedical research.</p>
  </sec>
  <sec>
    <title>CONCLUSION AND FUTURE WORK</title>
    <p>Since August 2007, the NBCR web server <ext-link ext-link-type="uri" xlink:href="http://ws.nbcr.net">http://ws.nbcr.net</ext-link> has been continuously providing biomedical scientists easy access to a large collection of biomedical applications, with about a quarter of a million of jobs completed by the end of 2009. The key features of Opal Web services include the availability of sample clients for accessing Opal services, ease of access from workflow tools, and scalability through distributed computing using desktop, cluster, grid and cloud resources.</p>
    <p>We plan to add several new features to Opal. Most notably, we plan to provide a REpresentational State Transfer (REST)-based API to invoke Opal services. REST is much more lightweight than SOAP-based implementations, currently used by Opal. Opal users will then be able to invoke Opal services with the help of basic HTTP tools such as curl. Second, we will develop a registry that can aggregate access to Opal services hosted at various locations. Third, we are in the process of improving the automatic interface generation to have better support for Ajax (<xref ref-type="bibr" rid="B29">29</xref>), making the user interface more contemporary and easier to use. Additional effort may also be required to ensure fair use of the resources, and to ensure the best possible security and privacy of user data through the development of personalized data services. These improvements will make the Opal toolkit easier to use, and increase the number of Web services available for biomedical research.</p>
    <p>More scientific applications will be provided in support of the Relaxed Complex Scheme in CADD (<xref ref-type="bibr" rid="B16">16</xref>), and the NBCR Summer Institute (<ext-link ext-link-type="uri" xlink:href="http://si.nbcr.net">http://si.nbcr.net</ext-link>) provides annual training on tools and services described in the paper, and expose users to emerging technologies that may benefit biomedical computing in the near future.</p>
  </sec>
  <sec>
    <title>FUNDING</title>
    <p>Funding for open access charge: National Center for Research Resources (NCRR); <funding-source>National Institutes of Health</funding-source> (<funding-source>NIH</funding-source>); (<award-id>P41 RR08605</award-id> award to NBCR).</p>
    <p><italic>Conflict of interest statement</italic>. None declared.</p>
  </sec>
</body>
<back>
  <ack>
    <title>ACKNOWLEDGEMENTS</title>
    <p>We appreciate the constructive suggestions of the editor in improving the manuscript. In addition, we thank Stefano Forli and Alex Perryman for AutoDock4 ligand libraries; John Irwin from UCSF for the ZINC library. We also wish to thank the reviewers of this manuscript for critical comments and suggestions.</p>
  </ack>
  <ref-list>
    <title>REFERENCES</title>
    <ref id="B1">
      <label>1</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhang</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Dolan</surname>
            <given-names>ME</given-names>
          </name>
        </person-group>
        <article-title>Impact of the 1000 genomes project on the next wave of pharmacogenomic discovery</article-title>
        <source>Pharmacogenomics</source>
        <year>2010</year>
        <volume>11</volume>
        <fpage>249</fpage>
        <lpage>256</lpage>
        <pub-id pub-id-type="pmid">20136363</pub-id>
      </element-citation>
    </ref>
    <ref id="B2">
      <label>2</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Bum-Erdene</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Baenziger</surname>
            <given-names>PH</given-names>
          </name>
          <name>
            <surname>Rosen</surname>
            <given-names>JJ</given-names>
          </name>
          <name>
            <surname>Hemmert</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Nellis</surname>
            <given-names>JA</given-names>
          </name>
          <name>
            <surname>Pierce</surname>
            <given-names>ME</given-names>
          </name>
          <name>
            <surname>Meroueh</surname>
            <given-names>SO</given-names>
          </name>
        </person-group>
        <article-title>BioDrugScreen: a computational drug design resource for ranking molecules docked to the human proteome</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2009</year>
        <volume>38</volume>
        <fpage>D765</fpage>
        <lpage>D773</lpage>
        <pub-id pub-id-type="pmid">19923229</pub-id>
      </element-citation>
    </ref>
    <ref id="B3">
      <label>3</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Morris</surname>
            <given-names>GM</given-names>
          </name>
          <name>
            <surname>Huey</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Lindstrom</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Sanner</surname>
            <given-names>MF</given-names>
          </name>
          <name>
            <surname>Belew</surname>
            <given-names>RK</given-names>
          </name>
          <name>
            <surname>Goodsell</surname>
            <given-names>DS</given-names>
          </name>
          <name>
            <surname>Olson</surname>
            <given-names>AJ</given-names>
          </name>
        </person-group>
        <article-title>AutoDock4 and AutoDockTools4: automated docking with selective receptor flexibility</article-title>
        <source>J. Computat. Chem.</source>
        <year>2009</year>
        <volume>30</volume>
        <fpage>2785</fpage>
        <lpage>2791</lpage>
      </element-citation>
    </ref>
    <ref id="B4">
      <label>4</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sanner</surname>
            <given-names>MF</given-names>
          </name>
          <name>
            <surname>Stoffler</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Olson</surname>
            <given-names>AJ</given-names>
          </name>
        </person-group>
        <article-title><italic>ViPEr</italic>, a visual Programming Environment for Python. In Proceedings of thre 10th International Python conference</article-title>
        <year>2002</year>
        <comment>103-115. February 4-7, 2002. ISBN 1-930792-05-0</comment>
      </element-citation>
    </ref>
    <ref id="B5">
      <label>5</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dolinsky</surname>
            <given-names>TJ</given-names>
          </name>
          <name>
            <surname>Czodrowski</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Nielsen</surname>
            <given-names>JE</given-names>
          </name>
          <name>
            <surname>Jensen</surname>
            <given-names>JH</given-names>
          </name>
          <name>
            <surname>Klebe</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Baker</surname>
            <given-names>NA</given-names>
          </name>
        </person-group>
        <article-title>PDB2PQR: expanding and upgrading automated preparation of biomolecular structures for molecular simulations</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2007</year>
        <volume>35</volume>
        <fpage>W522</fpage>
        <lpage>W525</lpage>
        <pub-id pub-id-type="pmid">17488841</pub-id>
      </element-citation>
    </ref>
    <ref id="B6">
      <label>6</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dolinsky</surname>
            <given-names>TJ</given-names>
          </name>
          <name>
            <surname>Nielsen</surname>
            <given-names>JE</given-names>
          </name>
          <name>
            <surname>McCammon</surname>
            <given-names>JA</given-names>
          </name>
          <name>
            <surname>Baker</surname>
            <given-names>NA</given-names>
          </name>
        </person-group>
        <article-title>PDB2PQR: an automated pipeline for the setup of Poisson-Boltzmann electrostatics calculations</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2004</year>
        <volume>32</volume>
        <fpage>W665</fpage>
        <lpage>W667</lpage>
        <pub-id pub-id-type="pmid">15215472</pub-id>
      </element-citation>
    </ref>
    <ref id="B7">
      <label>7</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Baker</surname>
            <given-names>NA</given-names>
          </name>
          <name>
            <surname>Sept</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Joseph</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Holst</surname>
            <given-names>MJ</given-names>
          </name>
          <name>
            <surname>McCammon</surname>
            <given-names>JA</given-names>
          </name>
        </person-group>
        <article-title>Electrostatics of nanosystems: application to microtubules and the ribosome</article-title>
        <source>Proc. Natl Acad. Sci. USA</source>
        <year>2001</year>
        <volume>98</volume>
        <fpage>10037</fpage>
        <lpage>10041</lpage>
        <pub-id pub-id-type="pmid">11517324</pub-id>
      </element-citation>
    </ref>
    <ref id="B8">
      <label>8</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ren</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Xie</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>WW</given-names>
          </name>
          <name>
            <surname>Bourne</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>SMAP-WS: a parallel web service for structural proteonme-wide ligand binding site comparison</article-title>
        <source>Nucleic Acids Res</source>
        <year>2010</year>
        <volume>38</volume>
        <fpage>W441</fpage>
        <lpage>W444</lpage>
        <pub-id pub-id-type="pmid">20484373</pub-id>
      </element-citation>
    </ref>
    <ref id="B9">
      <label>9</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Xie</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Bourne</surname>
            <given-names>PE</given-names>
          </name>
        </person-group>
        <article-title>A robust and efficient algorithm for the shape description of protein structures and its application in predicting ligand binding sites</article-title>
        <source>BMC Bioinform.</source>
        <year>2007</year>
        <volume>8</volume>
        <issue>Suppl. 4</issue>
        <fpage>S9</fpage>
      </element-citation>
    </ref>
    <ref id="B10">
      <label>10</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Xie</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Bourne</surname>
            <given-names>PE</given-names>
          </name>
        </person-group>
        <article-title>Detecting evolutionary relationships across existing fold space, using sequence order-independent profile-profile alignments</article-title>
        <source>Proc. Natl Acad. Sci. USA</source>
        <year>2008</year>
        <volume>105</volume>
        <fpage>5441</fpage>
        <lpage>5446</lpage>
        <pub-id pub-id-type="pmid">18385384</pub-id>
      </element-citation>
    </ref>
    <ref id="B11">
      <label>11</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Xie</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Bourne</surname>
            <given-names>PE</given-names>
          </name>
        </person-group>
        <article-title>A unified statistical model to support local sequence order independent similarity searching for ligand-binding sites and its application to genome-based drug discovery</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <fpage>i305</fpage>
        <lpage>i312</lpage>
        <pub-id pub-id-type="pmid">19478004</pub-id>
      </element-citation>
    </ref>
    <ref id="B12">
      <label>12</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bailey</surname>
            <given-names>TL</given-names>
          </name>
          <name>
            <surname>Boden</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Buske</surname>
            <given-names>FA</given-names>
          </name>
          <name>
            <surname>Frith</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Grant</surname>
            <given-names>CE</given-names>
          </name>
          <name>
            <surname>Clementi</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Ren</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>WW</given-names>
          </name>
          <name>
            <surname>Noble</surname>
            <given-names>WS</given-names>
          </name>
        </person-group>
        <article-title>MEME SUITE: tools for motif discovery and searching</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2009</year>
        <volume>37</volume>
        <fpage>W202</fpage>
        <lpage>W208</lpage>
        <pub-id pub-id-type="pmid">19458158</pub-id>
      </element-citation>
    </ref>
    <ref id="B13">
      <label>13</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Krishnan</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Clementi</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Ren</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Papadopoulos</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <article-title>Design and Evaluation of Opal2: A Toolkit for Scientific Software as a Service</article-title>
        <source>The 2009 IEEE Congress on Services (SERVICES-1 2009)</source>
        <year>2009</year>
        <comment>July, 2009</comment>
      </element-citation>
    </ref>
    <ref id="B14">
      <label>14</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Krishnan</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Stearn</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Bhatia</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Baldridge</surname>
            <given-names>KK</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Arzberger</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Opal: Simple Web Services Wrappers for Scientific Applications</article-title>
        <source>In Proceedings of ICWS 2006, IEEE International Conference on Web Services</source>
        <year>2006</year>
        <comment>2006</comment>
      </element-citation>
    </ref>
    <ref id="B15">
      <label>15</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Clementi</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Ding</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Krishnan</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Wei</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Arzberger</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <article-title>Providing Dynamic Virtualized Access to Grid Resources via the Web 2.0 Paradigm</article-title>
        <source>GCE07, Grid Computing Environments Workshop (Supercomputing 2007)</source>
        <comment>Nov 2007</comment>
      </element-citation>
    </ref>
    <ref id="B16">
      <label>16</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cheng</surname>
            <given-names>LS</given-names>
          </name>
          <name>
            <surname>Amaro</surname>
            <given-names>RE</given-names>
          </name>
          <name>
            <surname>Xu</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>WW</given-names>
          </name>
          <name>
            <surname>Arzberger</surname>
            <given-names>PW</given-names>
          </name>
          <name>
            <surname>McCammon</surname>
            <given-names>JA</given-names>
          </name>
        </person-group>
        <article-title>Ensemble-based virtual screening reveals potential novel antiviral compounds for avian influenza neuraminidase</article-title>
        <source>J. Med. Chem.</source>
        <year>2008</year>
        <volume>51</volume>
        <fpage>3878</fpage>
        <lpage>3894</lpage>
        <pub-id pub-id-type="pmid">18558668</pub-id>
      </element-citation>
    </ref>
    <ref id="B17">
      <label>17</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Irwin</surname>
            <given-names>JJ</given-names>
          </name>
          <name>
            <surname>Shoichet</surname>
            <given-names>BK</given-names>
          </name>
        </person-group>
        <article-title>ZINC–a free database of commercially available compounds for virtual screening</article-title>
        <source>J. Chem. Inform. Model.</source>
        <year>2005</year>
        <volume>45</volume>
        <fpage>177</fpage>
        <lpage>182</lpage>
      </element-citation>
    </ref>
    <ref id="B18">
      <label>18</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Trott</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Olson</surname>
            <given-names>AJ</given-names>
          </name>
        </person-group>
        <article-title>AutoDock Vina: improving the speed and accuracy of docking with a new scoring function, efficient optimization, and multithreading</article-title>
        <source>J. Computat. Chem.</source>
        <year>2010</year>
        <volume>31</volume>
        <fpage>455</fpage>
        <lpage>461</lpage>
      </element-citation>
    </ref>
    <ref id="B19">
      <label>19</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sanner</surname>
            <given-names>MF</given-names>
          </name>
        </person-group>
        <article-title>Python: a programming language for software integration and development</article-title>
        <source>J. Mol. Graphics Mod.</source>
        <year>1999</year>
        <volume>17</volume>
        <fpage>57</fpage>
        <lpage>61</lpage>
      </element-citation>
    </ref>
    <ref id="B20">
      <label>20</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hull</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Wolstencroft</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Stevens</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Goble</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Pocock</surname>
            <given-names>MR</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Oinn</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>Taverna: a tool for building and running workflows of services</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2006</year>
        <volume>34</volume>
        <fpage>W729</fpage>
        <lpage>W732</lpage>
        <pub-id pub-id-type="pmid">16845108</pub-id>
      </element-citation>
    </ref>
    <ref id="B21">
      <label>21</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Qinn</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Greenwood</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Addis</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Alpdemir</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>FerrisJ</surname>
          </name>
          <name>
            <surname>Glover</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Goble</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Goderis</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Hull</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Marvin</surname>
            <given-names>D</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Lessons in creating a workflow environment for the life sciences</article-title>
        <source>Concurrency and Computation: Practice and Experience</source>
        <year>2006</year>
        <volume>18</volume>
        <fpage>1067</fpage>
        <lpage>1100</lpage>
      </element-citation>
    </ref>
    <ref id="B22">
      <label>22</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ludascher</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Altintas</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Berkley</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Higgins</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Jaeger</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Jones</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Lee</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Tao</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Zhao</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>Scientific workflow management and the Kepler system</article-title>
        <source>Concurrency and Computation: Practice &amp; Experience</source>
        <year>2005</year>
        <fpage>1039</fpage>
        <lpage>1065</lpage>
      </element-citation>
    </ref>
    <ref id="B23">
      <label>23</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bavoil</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Callahan</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Crossno</surname>
            <given-names>PJ</given-names>
          </name>
          <name>
            <surname>Freire</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Scheidegger</surname>
            <given-names>CE</given-names>
          </name>
          <name>
            <surname>Silva</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Vo</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>VisTrails: Enabling Interactive Multiple-View Visualizations</article-title>
        <source>In Proceedings of IEEE Visualization</source>
        <year>2005</year>
        <fpage>135</fpage>
        <lpage>142</lpage>
      </element-citation>
    </ref>
    <ref id="B24">
      <label>24</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Abramson</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Enticott</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Altinas</surname>
            <given-names>I</given-names>
          </name>
        </person-group>
        <article-title>Nimrod/K: Towards Massively Parallel Dynamic Grid Workflows</article-title>
        <source>Conference on High Performance Networking and Computation, Proceedings of the 2008 ACM/IEEE Conference on Supercomputing</source>
        <year>2008</year>
        <fpage>1</fpage>
        <lpage>11</lpage>
      </element-citation>
    </ref>
    <ref id="B25">
      <label>25</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hughes</surname>
            <given-names>JD</given-names>
          </name>
          <name>
            <surname>Estep</surname>
            <given-names>PW</given-names>
          </name>
          <name>
            <surname>Tavazoie</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Church</surname>
            <given-names>GM</given-names>
          </name>
        </person-group>
        <article-title>Computational identification of cis-regulatory elements associated with groups of functionally related genes in Saccharomyces cerevisiae</article-title>
        <source>J. Mol. Biol.</source>
        <year>2000</year>
        <volume>296</volume>
        <fpage>1205</fpage>
        <lpage>1214</lpage>
        <pub-id pub-id-type="pmid">10698627</pub-id>
      </element-citation>
    </ref>
    <ref id="B26">
      <label>26</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bikadi</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Hazai</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <article-title>Application of the PM6 semi-empirical method to modeling proteins enhances docking accuracy of AutoDock</article-title>
        <source>J. Cheminform.s</source>
        <year>2009</year>
        <volume>1</volume>
        <fpage>15</fpage>
      </element-citation>
    </ref>
    <ref id="B27">
      <label>27</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Irwin</surname>
            <given-names>JJ</given-names>
          </name>
          <name>
            <surname>Shoichet</surname>
            <given-names>BK</given-names>
          </name>
          <name>
            <surname>Mysinger</surname>
            <given-names>MM</given-names>
          </name>
          <name>
            <surname>Huang</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Colizzi</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Wassam</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Cao</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>Automated docking screens: a feasibility study</article-title>
        <source>J. Med. Chem.</source>
        <year>2009</year>
        <volume>52</volume>
        <fpage>5712</fpage>
        <lpage>5720</lpage>
        <pub-id pub-id-type="pmid">19719084</pub-id>
      </element-citation>
    </ref>
    <ref id="B28">
      <label>28</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Richter</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Wenzel</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Stein</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Gabdoulline</surname>
            <given-names>RR</given-names>
          </name>
          <name>
            <surname>Wade</surname>
            <given-names>RC</given-names>
          </name>
        </person-group>
        <article-title>webPIPSA: a web server for the comparison of protein interaction properties</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2008</year>
        <volume>36</volume>
        <fpage>W276</fpage>
        <lpage>W280</lpage>
        <pub-id pub-id-type="pmid">18420653</pub-id>
      </element-citation>
    </ref>
    <ref id="B29">
      <label>29</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Holdener</surname>
            <given-names>AT</given-names>
            <suffix>III</suffix>
          </name>
        </person-group>
        <source>Ajax: The Definitive Guild</source>
        <year>2008</year>
        <comment>O'Reilly Media, 1st edn</comment>
      </element-citation>
    </ref>
  </ref-list>
</back>

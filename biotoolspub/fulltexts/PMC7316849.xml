<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Int J Comput Assist Radiol Surg</journal-id>
    <journal-id journal-id-type="iso-abbrev">Int J Comput Assist Radiol Surg</journal-id>
    <journal-title-group>
      <journal-title>International Journal of Computer Assisted Radiology and Surgery</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1861-6410</issn>
    <issn pub-type="epub">1861-6429</issn>
    <publisher>
      <publisher-name>Springer International Publishing</publisher-name>
      <publisher-loc>Cham</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">7316849</article-id>
    <article-id pub-id-type="publisher-id">2180</article-id>
    <article-id pub-id-type="doi">10.1007/s11548-020-02180-5</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Original Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>SciKit-Surgery: compact libraries for surgical navigation</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0001-7286-1326</contrib-id>
        <name>
          <surname>Thompson</surname>
          <given-names>Stephen</given-names>
        </name>
        <address>
          <email>s.thompson@ucl.ac.uk</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Dowrick</surname>
          <given-names>Thomas</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Ahmad</surname>
          <given-names>Mian</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Xiao</surname>
          <given-names>Goufang</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Koo</surname>
          <given-names>Bongjin</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Bonmati</surname>
          <given-names>Ester</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Kahl</surname>
          <given-names>Kim</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Clarkson</surname>
          <given-names>Matthew J.</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <aff id="Aff1"><institution-wrap><institution-id institution-id-type="GRID">grid.83440.3b</institution-id><institution-id institution-id-type="ISNI">0000000121901201</institution-id><institution>Wellcome/EPSRC Centre for Interventional and Surgical Sciences, </institution><institution>UCL, </institution></institution-wrap>London, UK </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>20</day>
      <month>5</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>20</day>
      <month>5</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="ppub">
      <year>2020</year>
    </pub-date>
    <volume>15</volume>
    <issue>7</issue>
    <fpage>1075</fpage>
    <lpage>1084</lpage>
    <history>
      <date date-type="received">
        <day>19</day>
        <month>11</month>
        <year>2019</year>
      </date>
      <date date-type="accepted">
        <day>22</day>
        <month>4</month>
        <year>2020</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2020</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold>This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article’s Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article’s Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Purpose</title>
        <p id="Par1">This paper introduces the SciKit-Surgery libraries, designed to enable rapid development of clinical applications for image-guided interventions. SciKit-Surgery implements a family of compact, orthogonal, libraries accompanied by robust testing, documentation, and quality control. SciKit-Surgery libraries can be rapidly assembled into testable clinical applications and subsequently translated to production software without the need for software reimplementation. The aim is to support translation from single surgeon trials to multicentre trials in under 2 years.</p>
      </sec>
      <sec>
        <title>Methods</title>
        <p id="Par2">At the time of publication, there were 13 SciKit-Surgery libraries provide functionality for visualisation and augmented reality in surgery, together with hardware interfaces for video, tracking, and ultrasound sources. The libraries are stand-alone, open source, and provide Python interfaces. This design approach enables fast development of robust applications and subsequent translation. The paper compares the libraries with existing platforms and uses two example applications to show how SciKit-Surgery libraries can be used in practice.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par3">Using the number of lines of code and the occurrence of cross-dependencies as proxy measurements of code complexity, two example applications using SciKit-Surgery libraries are analysed. The SciKit-Surgery libraries demonstrate ability to support rapid development of testable clinical applications. By maintaining stricter orthogonality between libraries, the number, and complexity of dependencies can be reduced. The SciKit-Surgery libraries also demonstrate the potential to support wider dissemination of novel research.</p>
      </sec>
      <sec>
        <title>Conclusion</title>
        <p id="Par4">The SciKit-Surgery libraries utilise the modularity of the Python language and the standard data types of the NumPy package to provide an easy-to-use, well-tested, and extensible set of tools for the development of applications for image-guided interventions. The example application built on SciKit-Surgery has a simpler dependency structure than the same application built using a monolithic platform, making ongoing clinical translation more feasible.
</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Image-guided surgery</kwd>
      <kwd>Platform</kwd>
      <kwd>Software</kwd>
      <kwd>Python</kwd>
      <kwd>Surgical navigation</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>Wellcome Trust (GB)</institution>
        </funding-source>
        <award-id>203145/16/Z</award-id>
        <principal-award-recipient>
          <name>
            <surname>Thompson</surname>
            <given-names>Stephen</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>EPSRC</institution>
        </funding-source>
        <award-id>203145Z/16/Z</award-id>
        <principal-award-recipient>
          <name>
            <surname>Thompson</surname>
            <given-names>Stephen</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© CARS 2020</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Introduction</title>
    <p id="Par5">The development of novel algorithms for image-guided interventions (IGI) brings together research in six areas: medical imaging, medical image computing, registration, tracking, visualisation, and user interface design. Researchers aiming to build and test clinical applications incorporating novel algorithms can benefit significantly by using software platforms or toolkits that provide ready-made functionality in each of these six areas and the connections between them [<xref ref-type="bibr" rid="CR23">23</xref>]. There are open-source and commercial platforms that meet these needs for the purpose of rapid prototyping and development of clinical applications. However, we have found that the use of such platforms can hinder translation to approved clinical software, due to the software engineering resources required to turn a prototype application into clinically useable software.</p>
    <p id="Par6">Applications built on general platforms will only use a tiny fraction of the platform’s functionality. In addition to the code implementing the unused functionality, this comes at the cost of additional dependencies. Therefore, using a platform for developing a clinical application introduces a lot of code and dependencies that are not necessary for the application. The amount of resources required to certify and maintain a clinical application scales with both the complexity of the application and the number and size of dependencies. SciKit-Surgery aims to avoid unnecessary code and dependencies by providing tools for surgical innovation that are more independent.</p>
    <p id="Par7">The SciKit-Surgery libraries have been developed to support the accelerated translation of clinical innovations to deployable clinical applications. We phrase this as going from “bench to bedside” in under 2 years [<xref ref-type="bibr" rid="CR19">19</xref>]. SciKit-Surgery libraries help enable this by reducing code complexity and the number of dependencies, whilst providing enough features to support rapid development of testable clinical applications. In contrast to other work in this area, SciKit-Surgery<list list-type="bullet"><list-item><p id="Par8">is a set of stand-alone libraries not a platform,</p></list-item><list-item><p id="Par9">allows researchers to combine individual libraries to create clinical applications without compilation or dependency problems and</p></list-item><list-item><p id="Par10">uses Python for most functions.</p></list-item></list>During early development, the libraries used the working title SNAPPY; however, this was changed to make them easier to find using typical search techniques. The SciKit prefix indicates that they are part of the Python scientific ecosystem, whilst Surgery indicates their intended purpose.</p>
    <p id="Par11">The rest of this paper is structured as follows. Section <xref rid="Sec2" ref-type="sec">2</xref> describes existing platforms and toolkits used for IGI applications and compares them with SciKit-Surgery. Section <xref rid="Sec3" ref-type="sec">3</xref> discusses the design choices made when developing SciKit-Surgery. Section <xref rid="Sec7" ref-type="sec">4</xref> introduces SciKit-Surgery’s current component libraries. Section <xref rid="Sec8" ref-type="sec">5</xref> illustrates some of the benefits of SciKit-Surgery using two example applications.</p>
  </sec>
  <sec id="Sec2">
    <title>Background</title>
    <p id="Par12">Wolf [<xref ref-type="bibr" rid="CR25">25</xref>] and Cleary [<xref ref-type="bibr" rid="CR6">6</xref>] provide overviews of the existing software for image-guided interventions. The Medical Imaging Interaction Toolkit (MITK) [<xref ref-type="bibr" rid="CR9">9</xref>] and 3DSlicer [<xref ref-type="bibr" rid="CR20">20</xref>] are the two most widely used open-source platforms for development of IGI systems. The Image-Guided Surgery Toolkik (IGSTK) [<xref ref-type="bibr" rid="CR5">5</xref>] implemented many tools for image-guided interventions and could be integrated with MITK [<xref ref-type="bibr" rid="CR16">16</xref>] and 3DSlicer; however, IGSTK is no longer under development. The Public Software Library for UltraSound imaging research (PLUS) [<xref ref-type="bibr" rid="CR15">15</xref>] implements numerous hardware interfaces and messaging. PLUS can be integrated with SlicerIGT[<xref ref-type="bibr" rid="CR23">23</xref>] to provide IGI applications. Other platforms include CamiTK [<xref ref-type="bibr" rid="CR8">8</xref>], NifTK [<xref ref-type="bibr" rid="CR3">3</xref>], IBIS [<xref ref-type="bibr" rid="CR7">7</xref>], CISST [<xref ref-type="bibr" rid="CR4">4</xref>], and CustusX [<xref ref-type="bibr" rid="CR1">1</xref>].</p>
    <p id="Par13">Table <xref rid="Tab1" ref-type="table">1</xref> lists these IGI platforms and compares them based on the size of the source code. To measure the size of the platforms, we used cloc,<xref ref-type="fn" rid="Fn1">1</xref> to count the lines of source code in each project. We counted lines of code on the master branch of each platform, as of October 2019. Lines of source code does not give a particularly robust comparison between projects; however, it is sufficient to give an indication of the overall complexity of the platforms.</p>
    <p id="Par15">An alternative approach to the development of IGI applications is to use a more general-purpose scientific package like MATLAB[<xref ref-type="bibr" rid="CR17">17</xref>], which provides an easy-to-use set of user interface tools together with inbuilt and third-party libraries for interfacing with various devices. For example, Hu et al. [<xref ref-type="bibr" rid="CR13">13</xref>] demonstrated an application for targeted prostate biopsy using Matlab for the user interface, whilst Medviso [<xref ref-type="bibr" rid="CR12">12</xref>] provided commercial medical imaging analysis software built on MATLAB. However, we have excluded MATLAB from Table <xref rid="Tab1" ref-type="table">1</xref> as it is not open source.<table-wrap id="Tab1"><label>Table 1</label><caption><p>Comparable sizes of other platforms, in kilo lines of code(kLoC), measured using cloc version 1.76</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Library</th><th align="left">Size (kLoC)</th></tr></thead><tbody><tr><td align="left">3DSlicer</td><td align="left">C<inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$++$$\end{document}</tex-math><mml:math id="M2"><mml:mrow><mml:mo>+</mml:mo><mml:mo>+</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="11548_2020_2180_Article_IEq1.gif"/></alternatives></inline-formula>: 298.77 Python : 33.34</td></tr><tr><td align="left">SlicerIGT</td><td align="left">C<inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$++$$\end{document}</tex-math><mml:math id="M4"><mml:mrow><mml:mo>+</mml:mo><mml:mo>+</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="11548_2020_2180_Article_IEq2.gif"/></alternatives></inline-formula>: 13.73 Python : 2.78</td></tr><tr><td align="left">PlusLib</td><td align="left">C<inline-formula id="IEq3"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$++$$\end{document}</tex-math><mml:math id="M6"><mml:mrow><mml:mo>+</mml:mo><mml:mo>+</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="11548_2020_2180_Article_IEq3.gif"/></alternatives></inline-formula>: 92.89 C : 11.05</td></tr><tr><td align="left">NifTK</td><td align="left">C<inline-formula id="IEq4"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$++$$\end{document}</tex-math><mml:math id="M8"><mml:mrow><mml:mo>+</mml:mo><mml:mo>+</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="11548_2020_2180_Article_IEq4.gif"/></alternatives></inline-formula>: 206.57</td></tr><tr><td align="left">MITK</td><td align="left">C<inline-formula id="IEq5"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$++$$\end{document}</tex-math><mml:math id="M10"><mml:mrow><mml:mo>+</mml:mo><mml:mo>+</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="11548_2020_2180_Article_IEq5.gif"/></alternatives></inline-formula>: 419.17</td></tr><tr><td align="left">CustusX</td><td align="left">C<inline-formula id="IEq6"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$++$$\end{document}</tex-math><mml:math id="M12"><mml:mrow><mml:mo>+</mml:mo><mml:mo>+</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="11548_2020_2180_Article_IEq6.gif"/></alternatives></inline-formula>: 113.61</td></tr><tr><td align="left">IBIS</td><td align="left">C<inline-formula id="IEq7"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$++$$\end{document}</tex-math><mml:math id="M14"><mml:mrow><mml:mo>+</mml:mo><mml:mo>+</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="11548_2020_2180_Article_IEq7.gif"/></alternatives></inline-formula>: 48.50</td></tr><tr><td align="left">CISST</td><td align="left">C<inline-formula id="IEq8"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$++$$\end{document}</tex-math><mml:math id="M16"><mml:mrow><mml:mo>+</mml:mo><mml:mo>+</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="11548_2020_2180_Article_IEq8.gif"/></alternatives></inline-formula>: 135.68 Python : 3538</td></tr><tr><td align="left">CamiTK</td><td align="left">C<inline-formula id="IEq9"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$++$$\end{document}</tex-math><mml:math id="M18"><mml:mrow><mml:mo>+</mml:mo><mml:mo>+</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="11548_2020_2180_Article_IEq9.gif"/></alternatives></inline-formula>: 63.69</td></tr></tbody></table></table-wrap></p>
    <p id="Par16">Platforms like 3DSlicer, MITK, and MATLAB have been successfully used to develop prototype clinical applications. Most platforms provide the capacity to rapidly prototype clinical applications, using either scripting interfaces or modular plugin-based extension. We have previously used MITK’s modular architecture to develop the NifTK [<xref ref-type="bibr" rid="CR3">3</xref>] platform. NifTK was then used to create an augmented reality application for laparoscopic liver surgery [<xref ref-type="bibr" rid="CR22">22</xref>]. However, it remains uncommon for prototype clinical applications to progress beyond research papers and into clinical products. The use of the above platforms can create difficulty during translation to approved medical software, due in part to the difficulty in identifying essential components and dependencies.<table-wrap id="Tab2"><label>Table 2</label><caption><p>The SciKit-Surgery libraries were developed with three aims in mind</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" colspan="2">SciKit-Surgery Design Aims</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">Enable novel algorithms to be built into applications that can be rapidly deployed to theatre</td></tr><tr><td align="left">2</td><td align="left">Minimise reimplementation during translation from proof of concept to multicentre trials</td></tr><tr><td align="left">3</td><td align="left">Enable dissemination of high-quality implementations of research algorithms</td></tr></tbody></table></table-wrap><table-wrap id="Tab3"><label>Table 3</label><caption><p>The aims were translated into a set of design guidelines that can be followed when developing an individual SciKit-Surgery library</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" colspan="2">SciKit-Surgery Design Guide</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">Development driven by users’ needs</td></tr><tr><td align="left">2</td><td align="left">Do one thing and do it well</td></tr><tr><td align="left">3</td><td align="left">Functions and classes with Python interfaces using NumPy data structures</td></tr><tr><td align="left">4</td><td align="left">Installable directly from PyPI, using pip</td></tr><tr><td align="left">5</td><td align="left">Libraries fully documented and examples provided</td></tr><tr><td align="left">6</td><td align="left">Packages are small with clear instructions on how to contribute to development</td></tr><tr><td align="left">7</td><td align="left">Packages are independent, with minimal dependencies, and maximum orthogonality</td></tr><tr><td align="left">8</td><td align="left">Use version control, issue tracking, and continuous integration testing</td></tr><tr><td align="left">9</td><td align="left">Template for library development and encourage wider adoption</td></tr></tbody></table></table-wrap></p>
    <p id="Par17">Although it is not entirely reasonable to compare the size of the SciKit-Surgery libraries with some of the other platforms used for IGI, it is helpful for putting them into context. The libraries listed in Table <xref rid="Tab1" ref-type="table">1</xref> implement a much larger tool set, which comes at the cost of much greater complexity. In Sect. <xref rid="Sec7" ref-type="sec">4</xref>, we demonstrate that the SciKit-Surgery libraries are much smaller and have fewer direct dependencies than the platforms listed in Table <xref rid="Tab1" ref-type="table">1</xref>.</p>
    <p id="Par18">It is also notable that all the platforms listed in Table <xref rid="Tab1" ref-type="table">1</xref> are written primarily in C<inline-formula id="IEq10"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$++$$\end{document}</tex-math><mml:math id="M20"><mml:mrow><mml:mo>+</mml:mo><mml:mo>+</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="11548_2020_2180_Article_IEq10.gif"/></alternatives></inline-formula>. We have found it increasingly hard to recruit researchers with the skills or willingness to develop in C<inline-formula id="IEq11"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$++$$\end{document}</tex-math><mml:math id="M22"><mml:mrow><mml:mo>+</mml:mo><mml:mo>+</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="11548_2020_2180_Article_IEq11.gif"/></alternatives></inline-formula>, making development and translation based on these platforms more difficult.</p>
    <p id="Par19">Although the platforms listed in Table <xref rid="Tab1" ref-type="table">1</xref> require a degree of effort in getting familiar with (and in most cases compiling) the platform, once this is done they offer convenience and completeness for the rapid prototyping of medical applications. However, we argue that their size, internal complexity, and choice of language makes translation to an approved clinical product difficult.</p>
  </sec>
  <sec id="Sec3">
    <title>SciKit-Surgery design aims and guidelines</title>
    <p id="Par20">SciKit-Surgery originated within the Wellcome EPSRC Centre for Interventional and Surgical Sciences (WEISS), to support clinical translation and innovation. We set three aims for the SciKit-Surgery libraries and used these aims to inform the SciKit-Surgery design guide. Tables <xref rid="Tab2" ref-type="table">2</xref> and <xref rid="Tab3" ref-type="table">3</xref> enumerates the aims and design guide. In this section, we discuss how the aims were turned into design guidelines.</p>
    <sec id="Sec4">
      <title>Goal 1: rapid deployment to theatre</title>
      <p id="Par21">SciKit-Surgery is aimed at researchers developing novel algorithms to perform a specific task within a clinical environment. Typically, the algorithm can be implemented in a few hundred lines of code; however, there is a need for supporting infrastructure to supply data input and output, visualisation, and hardware and user interfaces. As discussed in Sect. <xref rid="Sec2" ref-type="sec">2</xref>, researchers already have a wide choice of platforms that can fulfil this requirement. In our experience, the main drivers for the adoption of a particular platform are: <list list-type="order"><list-item><p id="Par22">Implementation of the required functionality.</p></list-item><list-item><p id="Par23">Familiarity with the programming language used.</p></list-item><list-item><p id="Par24">Ease of installation on the researcher’s system.</p></list-item><list-item><p id="Par25">Number of users amongst the researcher’s peers.</p></list-item></list>Most existing platforms meet the first driver, usually providing more functionality than will be necessary for a given application. Additional functionality introduces additional code complexity and dependencies. Therefore, we set the first SciKit-Surgery design guideline to be “Needs driven development”. Rather than setting out to deliver a platform that meets all users’ as yet unknown needs, new functions and classes are only implemented when they are needed for a particular project.</p>
      <p id="Par26">To avoid the individual libraries and their dependencies steadily growing as new needs are identified, the SciKit-Surgery libraries follow the Unix philosophy of doing one thing and doing it well [<xref ref-type="bibr" rid="CR18">18</xref>]. When a new feature is requested, careful though is given to whether it should fit within an existing library or a new SciKit-Surgery library should be implemented.</p>
      <p id="Par27">There are a variety of approaches towards meeting the second driver. Past attempts to get researchers to develop in C<inline-formula id="IEq12"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$++$$\end{document}</tex-math><mml:math id="M24"><mml:mrow><mml:mo>+</mml:mo><mml:mo>+</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="11548_2020_2180_Article_IEq12.gif"/></alternatives></inline-formula> have failed as most have not had exposure to C<inline-formula id="IEq13"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$++$$\end{document}</tex-math><mml:math id="M26"><mml:mrow><mml:mo>+</mml:mo><mml:mo>+</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="11548_2020_2180_Article_IEq13.gif"/></alternatives></inline-formula> at undergraduate level. MATLAB has a historic advantage as many researchers in the field have had exposure to it at undergraduate level. However, we have found that Python is now widely used in research and education, so we made the decision to adopt a Python interface, design guideline 3. This does not preclude libraries written in other languages; however, they should provide a Python interface, so that they can be easily integrated into applications.</p>
      <p id="Par28">We have found that the third driver is the one that many platforms struggle with. Whilst in some cases pre-built binary applications are available, once the user seeks to develop their own applications it is often necessary to compile the platform from source. We have found that this can be off putting for potential users. A method to compile robustly across multiple operating systems and compilers remains elusive. Most user’s first experience of compilation results in failure. Whether or not they persist depends on the strength of the other use drivers. For this reason, we decided to avoid libraries requiring user compilation. The Python packaging index<xref ref-type="fn" rid="Fn2">2</xref> provides a well-integrated platform to handle dependencies and install both pure Python and binary executable software libraries, leading to design guideline 4. To make using the libraries intuitive to use, we also ensure they are fully documented and conform to PEP8 standards using static code analysis.<xref ref-type="fn" rid="Fn3">3</xref> In addition to examples contained with each library (guideline 5), there are two tutorials to date (see Sect. <xref rid="Sec12" ref-type="sec">7</xref>) to help dissemination.</p>
      <p id="Par31">We have actively tried to keep each library as compact and atomic as possible. When confronted with a large platform [<xref ref-type="bibr" rid="CR3">3</xref>], many users are deterred from contributing due to the difficulty of working out where their algorithm belongs and a fear of breaking something elsewhere in the platform. By keeping the constituent libraries small, with a clear purpose and consistent structure (design guideline 6), we have seen a greater willingness of users to contribute. A good example of a researcher-led contribution is the scikit-surgeryspeech library, developed as a stand-alone project during a summer internship.</p>
    </sec>
    <sec id="Sec5">
      <title>Goal 2: reduce the need for reimplementation</title>
      <p id="Par32">Applications such as LumpNav [<xref ref-type="bibr" rid="CR23">23</xref>] and SmartLiver [<xref ref-type="bibr" rid="CR22">22</xref>] are representative of typical clinical research prototypes. These applications consist of between 500 and 4000 lines of code, written by a single researcher or small (<inline-formula id="IEq14"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$&lt;4$$\end{document}</tex-math><mml:math id="M28"><mml:mrow><mml:mo>&lt;</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="11548_2020_2180_Article_IEq14.gif"/></alternatives></inline-formula>) team, utilising pre-existing platforms. The resulting applications are sufficient to support single user clinical trials and publication in technical and clinical journals. However, to prove safety and efficacy it is necessary to progress to multicentre clinical trials, ultimately aiming for certification for medical use. This next stage of development requires a level of quality control and testing that is often fatal to the application, leading to the “Valley of Death” [<xref ref-type="bibr" rid="CR2">2</xref>].</p>
      <p id="Par33">Turning a prototype built on top of a platform into a stable, testable, application is a difficult problem. To make the task manageable, it is useful to be able to strip away unused functionality from the platform. Disassembling a monolithic platform is substantially harder than building an application from many components [<xref ref-type="bibr" rid="CR14">14</xref>]. The alternative approach is to reimplement the application from the ground up, which is also very resource intensive.</p>
      <p id="Par34">SciKit-Surgery has been designed to reduce the need for re-engineering at this stage of translation. By keeping the libraries compact and maintaining orthogonality between them (design guideline 7), it becomes possible to assemble them into a minimal functional application that forms the skeleton for ongoing development. This fits the “Tracer Bullet” approach to development described by Thomas and Hunt [<xref ref-type="bibr" rid="CR14">14</xref>].</p>
      <p id="Par35">SciKit-Surgery libraries are developed in line with the U.S. Food and Drug Administration’s guidelines on software development for medical applications [<xref ref-type="bibr" rid="CR24">24</xref>]. SciKit-Surgery design guideline 8 specifies version control, issue tracking, and continuous integration testing via GitLab, to make integration into a clinical product as efficient as possible.</p>
    </sec>
    <sec id="Sec6">
      <title>Goal 3: dissemination of research</title>
      <p id="Par36">The third aim has three motivations:<list list-type="bullet"><list-item><p id="Par37">maximise the impact of research, regardless of any clinical translation,</p></list-item><list-item><p id="Par38">improve the software development skills of researchers and students,</p></list-item><list-item><p id="Par39">and to encourage researchers to contribute to SciKit-Surgery.</p></list-item></list>Alongside SciKit-Surgery, we have developed the Python and C<inline-formula id="IEq15"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$++$$\end{document}</tex-math><mml:math id="M30"><mml:mrow><mml:mo>+</mml:mo><mml:mo>+</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="11548_2020_2180_Article_IEq15.gif"/></alternatives></inline-formula> templates, design guideline 9. These are the starting point for most SciKit-Surgery libraries, saving time and maintaining a familial resemblance across libraries. The templates are also designed to be used by researchers as a base to implement their algorithms. The templates support code quality via static code analysis and unit testing and simplify publishing to pypi.org. By using the templates, researchers ensure that their algorithms can be incorporated into clinical applications using the SciKit-Surgery libraries. Furthermore, the researchers’ code becomes a stand-alone library that can be readily shared and used by other researchers.</p>
      <p id="Par40">A good example of the use of the Python template to aid dissemination is provided by Fu et al. [<xref ref-type="bibr" rid="CR10">10</xref>]. The software used in their paper is now published on PyPI<xref ref-type="fn" rid="Fn4">4</xref> allowing other researchers to replicate the results.</p>
      <p id="Par42">By encouraging researchers to become contributors, we hope to make SciKit-Surgery sustainable. A key challenge with any software platform is maintenance. Keeping a monolithic platform with multiple dependencies up to date will consume an increasing amount of resources, resulting in the eventual death of the platform. By separating the libraries and encouraging contribution from diverse researchers, we hope to make ongoing maintenance achievable.</p>
    </sec>
  </sec>
  <sec id="Sec7">
    <title>The SciKit-Surgery libraries and architecture</title>
    <p id="Par43">In this section, we introduce the libraries that currently constitute SciKit-Surgery. As discussed in Sect. <xref rid="Sec4" ref-type="sec">3.1</xref>, we are operating a needs-based development policy, so the constituent libraries are sufficient to meet our current needs, but will be expanded for future applications.</p>
    <p id="Par44">The most notable absence from a toolkit aimed at medical applications is a DICOM reader or a viewer for voxel images. These functions are not usually necessary for augmented reality applications, where simplifying the display using volumetric segmentations from the original images is useful. Segmentation can be performed with a separate application or even outsourced to external suppliers (e.g. VisiblePatient<xref ref-type="fn" rid="Fn5">5</xref>). In any case, the modular nature of SciKit-Surgery allows existing Python packages for reading and writing DICOM data to be easily used (e.g. <ext-link ext-link-type="uri" xlink:href="https://pypi.org/project/pydicom">https://pypi.org/project/pydicom</ext-link>).</p>
    <p id="Par46">The lack of medical image computing tools marks an important difference to most of the platforms discussed in Sect. <xref rid="Sec2" ref-type="sec">2</xref>. Most platforms are medical-imaging toolkits with extensions to support computer-aided interventions, whereas SciKit-Surgery is composed of tools aimed at computer-aided interventions. SciKit-Surgery libraries for medical image computing may be implemented in the future.</p>
    <p id="Par47">Table <xref rid="Tab4" ref-type="table">4</xref> lists 13 libraries that currently constitute SciKit-Surgery. Within the core libraries, there are at most six primary dependencies, in line with design guideline 7. This can be contrasted with NifTK for example which currently has approximately 35 primary dependencies. We have adopted the naming convention of using the prefix “SciKit-Surgery” followed by a short descriptive title, which fits in well with the existing Python package ecosystem.<table-wrap id="Tab4"><label>Table 4</label><caption><p>The libraries that currently make up SciKit-Surgery. The two templates are not prefixed with SciKit-Surgery, as they have no surgical functionality. All libraries can be found on pypi.org</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Library</th><th align="left">Components</th><th align="left">Dependencies</th><th align="left">Size (kLoC)</th></tr></thead><tbody><tr><td align="left" colspan="4"><italic>SciKit-Surgery Core Libraries (scikit-prefix omitted for brevity)</italic></td></tr><tr><td align="center">surgerycore</td><td align="left">Common data types, abstract base classes, configuration manager, transform manager, common algorithms</td><td align="left">NumPy</td><td align="left">0.78</td></tr><tr><td align="center">Surgeryimage</td><td align="left">Video input, distortion correction, rectification, common image algorithms</td><td align="left">NumPy, OpenCV, surgerycore</td><td align="left">3.36</td></tr><tr><td align="center">Surgeryvtk</td><td align="left">Visualisation, surface model loaders, camera models, polydata utilities, widgets</td><td align="left">NumPy, VTK, OpenCV, QT(PySide2), surgerycore, surgeryimage</td><td align="left">3.98</td></tr><tr><td align="left" colspan="4"><italic>SciKit-Surgery Hardware Interface Libraries (scikit-prefix omitted for brevity)</italic></td></tr><tr><td align="center">Surgery-nditracker</td><td align="left">NDI trackers (Polaris, Vega, Aurora)</td><td align="left">NumPy, ndicapi, surgerycore</td><td align="left">1.62</td></tr><tr><td align="center">Surgery-arucotracker</td><td align="left">Tracking using ArUco Tags</td><td align="left">NumPy, OpenCV, surgerycore</td><td align="left">1.55</td></tr><tr><td align="center">Surgerybk</td><td align="left">BK Medical Ultrasound</td><td align="left">NumPy, OpenCV, surgerycore</td><td align="left">1.55</td></tr><tr><td align="left" colspan="4"><italic>SciKit-Surgery Application Libraries (scikit-prefix omitted for brevity)</italic></td></tr><tr><td align="center">Surgeryutils</td><td align="left">Utility applications, basic overlay window, reslice window, video lag measurement</td><td align="left">NumPy, OpenCV, QT(PySide2), surgeryimage, surgeryvtk</td><td align="left">1.88</td></tr><tr><td align="center">Surgery-tracker-visualisation</td><td align="left">Visualisation for surgerytrackers</td><td align="left">NumPy, VTK, PySide2, surgeryvtk, surgeryimage, surgerycore, surgeryutils, surgerynditracker, surgeryarucotracker</td><td align="left">1.74</td></tr><tr><td align="center">Surgery-davinci</td><td align="left">Augmented Reality for the DaVinci Robot</td><td align="left">NumPy, surgeryvtk, surgeryimage, surgerycore, surgeryutils</td><td align="left">1.54</td></tr><tr><td align="left" colspan="4"><italic>SciKit-Surgery User Interface Libraries (scikit-prefix omitted for brevity)</italic></td></tr><tr><td align="center">Surgeryspeech</td><td align="left">Speech recognition user interface</td><td align="left">pyaudio SpeechRecognition, google-api-python-client, oauth2client, PySide2</td><td align="left">1.37</td></tr><tr><td align="left" colspan="4"> SciKit-Surgery C<inline-formula id="IEq16"><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$++$$\end{document}</tex-math><mml:math id="M32"><mml:mrow><mml:mo>+</mml:mo><mml:mo>+</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="11548_2020_2180_Article_IEq16.gif"/></alternatives></inline-formula> Libraries (scikit-prefix omitted for brevity)</td></tr><tr><td align="center">Surgerygpucpp</td><td align="left">GPU accelerated image processing</td><td align="left">ArrayFire, Boost, Eigen, FLANN, glog, OpenCV, PCL, VTK</td><td align="left">2.33</td></tr><tr><td align="left" colspan="4"><italic>SciKit-Surgery Library Templates</italic></td></tr><tr><td align="center">PythonTemplate</td><td align="left">Template for native Python SciKit-Surgery Libraries</td><td align="left">cookiecutter</td><td align="left">1.27</td></tr><tr><td align="center">C<inline-formula id="IEq17"><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$++$$\end{document}</tex-math><mml:math id="M34"><mml:mrow><mml:mo>+</mml:mo><mml:mo>+</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="11548_2020_2180_Article_IEq17.gif"/></alternatives></inline-formula> Template</td><td align="left">Template for C<inline-formula id="IEq18"><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$++$$\end{document}</tex-math><mml:math id="M36"><mml:mrow><mml:mo>+</mml:mo><mml:mo>+</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="11548_2020_2180_Article_IEq18.gif"/></alternatives></inline-formula> SciKit-Surgery Libraries</td><td align="left">cookiecutter</td><td align="left">1.27</td></tr></tbody></table></table-wrap></p>
    <p id="Par48">All 13 libraries are open source and developed in line with design guideline 8. Continuous integration test status, coverage statistics, and documentation are all linked from the individual library’s PyPI page. Users can submit issues via the libraries’ GitLab or GitHub pages and contribute changes via the usual processes of forking and merge requests. Testing on multiple platforms and build environments is currently handled via tox and GitLab.</p>
    <p id="Par49">Three libraries lie at the core of SciKit-Surgery. scikit-surgerycore is intended to help bind the various libraries together by defining common data types and interfaces. For example, scikit-surgerycore defines an abstract base class for surgery trackers, so in theory applications using scikit-surgerytrackers can easily switch between tracking hardware. scikit-surgeryimage handles the acquisition, calibration, and basic processing of the video images which create the back drop for augmented reality. Due to the necessary processing power required for some algorithms (e.g. surface reconstruction, depth estimation), these will be delegated to specific libraries utilising hardware acceleration, i.e. scikit-surgerygpucpp. scikit-surgeryvtk handles the second part of augmented reality, the positioning and rendering of surface models. scikit-surgeryvtk provides surface models loaders, camera models, and overlay widgets.</p>
    <p id="Par50">As the libraries are under continuous development, we refer the reader to the individual libraries’ documentation (accessible from PyPI) for up to date descriptions of each library’s contents. From PyPI The user is able to quickly see the status of the library, which should show green for testing, coverage, and documentation buttons. Indexes of the functions and classes that a module implements are also available. Static code analysis (pylint) is used to ensure that documentation is kept up to date.</p>
  </sec>
  <sec id="Sec8">
    <title>From SciKit-Surgery libraries to application; two case studies</title>
    <p id="Par51">This section shows, using two examples, how SciKit-Surgery has been used to produce applications used in surgery, enabled the rapid prototyping of novel algorithms, and enabled dissemination. The first of these applications, the SmartLiver surgical guidance application [<xref ref-type="bibr" rid="CR22">22</xref>], compares the implementation using SciKit-Surgery, with a previous implementation as a plugin within the NifTK [<xref ref-type="bibr" rid="CR3">3</xref>] platform. The point of the comparison is to illustrate that although the size of the actual applications is largely independent of the underlying libraries used, the use of the SciKit-Surgery libraries reduces the size and complexity of dependencies. The second application, SnappySonic [<xref ref-type="bibr" rid="CR21">21</xref>], was developed to support public engagement and education and is included to illustrate how SciKit-Surgery supports rapid development and dissemination.</p>
    <sec id="Sec9">
      <title>SmartLiver augmented reality liver surgery</title>
      <p id="Par52">Previous work in our laboratory [<xref ref-type="bibr" rid="CR22">22</xref>] on an augmented reality guidance system for liver surgery has yielded promising clinical results and continued funding to develop the system into a commercially viable guidance system. Here, we discuss the reimplementation of the SmartLiver application using the SciKit-Surgery libraries, to demonstrate by example how the SciKit-Surgery libraries help meet the second development goal from Tables <xref rid="Tab2" ref-type="table">2</xref> and <xref rid="Tab3" ref-type="table">3</xref>.</p>
      <p id="Par53">Our previous implementation of the software took the form of a plugin to the NifTK software platform [<xref ref-type="bibr" rid="CR3">3</xref>]. This approach enabled a clinical application to be developed and tested in vivo within the time frame of a research grant (3 years). The plugin itself consists of approximately 3.7 k lines of codes, while NifTK has around 230 k lines of code with dependencies on 10.36 M lines of code, see Fig. <xref rid="Fig1" ref-type="fig">1</xref>. These numbers are remarkably similar to those for other applications in the literature [<xref ref-type="bibr" rid="CR23">23</xref>].<fig id="Fig1"><label>Fig. 1</label><caption><p>Use of a platform such as NifTK allowed the SmartLiver augmented reality guidance system to be written in approximately 3.7 k lines of code, with a single dependency on the NifTK platform, 230 k lines of code. In common with other platforms (and the SciKit-Surgery libraries), NifTK is built on top of further dependencies, shown scaled by size along the bottom of the figure. The direct dependencies of NifTK total 10.36M lines of code</p></caption><graphic xlink:href="11548_2020_2180_Fig1_HTML" id="MO6"/></fig><fig id="Fig2"><label>Fig. 2</label><caption><p>First- and second-order modular dependencies for SmartLiver implemented using NifTK <bold>a</bold> and SciKit-Surgery <bold>b</bold>. Dependencies that form part of NifTK or SciKit-Surgery are shown in light blue and are scaled by size. Third-party dependencies are shown in grey and are not scaled by size, as they (principally VTK and QT) would dwarf the other dependencies. Cross-dependencies (dependencies between first-order dependencies) are highlighted using dashed lines. Where space permits the library size in thousands of lines of code is shown in brackets</p></caption><graphic xlink:href="11548_2020_2180_Fig2_HTML" id="MO7"/></fig></p>
      <p id="Par54">If the SmartLiver system were ready to be deployed, it could be turned into a clinical product by freezing all dependencies and supplying the application on a clinical grade computer for use in theatre. However, our research in this area is ongoing, requiring a live platform. NifTK, in common with other IGI platforms, has a small developer and user base, relative to its size, and is dependent on external grant funding. Development of NifTK has stalled due to the difficulty recruiting researchers willing to develop C<inline-formula id="IEq19"><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$++$$\end{document}</tex-math><mml:math id="M38"><mml:mrow><mml:mo>+</mml:mo><mml:mo>+</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="11548_2020_2180_Article_IEq19.gif"/></alternatives></inline-formula> software. The decision was made to reimplement SmartLiver using the SciKit-Surgery libraries.</p>
      <p id="Par55">One of the design considerations of NifTK [<xref ref-type="bibr" rid="CR3">3</xref>] was to keep things modular, so in theory code can be separated out when trying to develop a clinical application. Rather than considering NifTK as a single dependency (Fig. <xref rid="Fig1" ref-type="fig">1</xref>), we can look at the second-order dependencies of the SmartLiver plugin in terms of the individual modules of NifTK. Figure <xref rid="Fig2" ref-type="fig">2</xref> shows a comparison between the first- and second-order dependencies of SmartLiver implemented using SciKit-Surgery and the modular dependencies when using NifTK. In terms of the number and type of dependencies, they are similar. Most of size of both applications comes from QT, VTK, and OpenCV. However, the application built using NifTK has significantly more cross-dependence amongst its direct dependencies.</p>
      <p id="Par56">Figure <xref rid="Fig2" ref-type="fig">2</xref> highlights cross-dependencies (dependencies between first-order dependencies) using dashed lines. Cross-dependencies are problematic as they reduce the orthogonality of the code [<xref ref-type="bibr" rid="CR14">14</xref>]. Making a change to one of these libraries is likely to lead to unintended consequences in a dependent library. The SciKit-Surgery-based application actually has more(9) cross-dependencies than the NifTK implementation(6). With one exception (surgeryvtk to surgeryimage) however, the SciKit-Surgery cross-dependencies are to third-party libraries that are unlikely to require changes during development. Whilst it is not impossible that a significant change to one of these libraries could break the application, such a change could at least be managed by locking the library version. In contrast, it is very likely that changes will be required within the direct dependencies that form part of either NifTK or SciKit-Surgery. The NifTK implementation has four cross-dependencies between these libraries compared to one for the SciKit-Surgery implementation. Looking at the NifTK dependency diagram, we can see that changes within either IGIDataSources or IGIGui could have unintended effects on either their direct or second-order dependents. This makes development and maintenance significantly more difficult.<fig id="Fig3"><label>Fig. 3</label><caption><p>The SmartLiver system being tested in theatre with a voice-controlled user interface. The SciKit-Surgery architecture allows the SmartLiver system to be easily connected to the scikit-surgeryspeech library, to test the effectiveness of voice control for calibration and manual alignment</p></caption><graphic xlink:href="11548_2020_2180_Fig3_HTML" id="MO8"/></fig></p>
      <p id="Par57">Figure <xref rid="Fig3" ref-type="fig">3</xref> shows the current SmartLiver system being tested in theatre with a novel voice-based user interface. The modular architecture of the SciKit-Surgery libraries made it straightforward to connect the scikit-surgeryspeech library to the SmartLiver application.</p>
      <p id="Par58">The SmartLiver application has now entered WEISS’s ISO-13485 Quality Management System, to be developed into an approved clinical application. The SciKit-Surgery libraries used by SmartLiver will remain outside the quality management system, treated as software of unknown provenance (SOUP). SciKit-Surgery’s smaller size and more linear dependency tree make it significantly easier to maintain it and the SmartLiver application, supporting goal 2 of the SciKit-Surgery libraries.</p>
    </sec>
    <sec id="Sec10">
      <title>SnappySonic</title>
      <p id="Par59">The SnappySonic ultrasound simulator[<xref ref-type="bibr" rid="CR21">21</xref>] is used here to demonstrate the ability of the SciKit-Surgery libraries to support goals 1 and 3 from Tables <xref rid="Tab2" ref-type="table">2</xref> and <xref rid="Tab3" ref-type="table">3</xref>. The SnappySonic software was developed to support a “serious game” [<xref ref-type="bibr" rid="CR11">11</xref>] style ultrasound demonstration at public engagement events. Development of the SnappySonic application highlights some of the benefits of SciKit-Surgery. The application itself went from idea to basic demo within two working days, between the 27th of March 2019 and the 2nd of April 2019, utilising the Python Template, scikit-surgeryutils, and scikit-surgeryarucotracker. The complete demonstration (including hardware) was tested internally on the 7th of April and deployed at the “Science of Surgery” event on the 12th of April 2019. This gave a good demonstration of the SciKit-Surgery libraries’ ability to support goal 1 from Tables <xref rid="Tab2" ref-type="table">2</xref> and <xref rid="Tab3" ref-type="table">3</xref>. The application consists of 1675 lines of code. Figure <xref rid="Fig4" ref-type="fig">4</xref> shows the application in use.<fig id="Fig4"><label>Fig. 4</label><caption><p>SnappySonic in use at the Science of Surgery public engagement event. An obsolete ultrasound probe is tracked using OpenCV’s ArUco marker libraries. The position of the probe is used to show an image from a pre-recorded ultrasound buffer, giving the appearance of live acquisition. Image by James Tye</p></caption><graphic xlink:href="11548_2020_2180_Fig4_HTML" id="MO9"/></fig></p>
      <p id="Par60">After deployment at the Science of Surgery event, it was decided that the software was of potentially broader use and should be maintained and published on PyPI. The focus now changed to ensuring adequate documentation and test coverage. This process took around a week of work, fitted around other projects, and on the 28th of May the project was made available on PyPI. In its entirety, the application went from idea to a sustainable open source application in around 2 months, illustrating the SciKit-Surgery libraries’ ability to support goal 3 from Tables <xref rid="Tab2" ref-type="table">2</xref> and <xref rid="Tab3" ref-type="table">3</xref>.</p>
    </sec>
  </sec>
  <sec id="Sec11">
    <title>Discussion</title>
    <p id="Par61">The SciKit-Surgery libraries form a collection of tools for surgical navigation that can be bound together with Python, making use of standard graphical user interface components to rapidly develop novel applications.</p>
    <p id="Par62">In Sect. <xref rid="Sec8" ref-type="sec">5</xref>, we compared the occurrence of cross-dependencies in two implementations of the same application (SmartLiver). The implementation using a single modular platform (NifTK) exhibited substantially more cross-dependencies. These make development more difficult and discourage new developers from contributing as it is harder to predict the likely effects of any changes. It could be argued that such cross-dependencies should be avoided by more robust software engineering process within the development team; however, this goes against a large part of what we are trying to achieve with SciKit-Surgery.</p>
    <p id="Par63">We do not wish to provide a set of libraries developed by a small team where contributions are closely monitored and checked for quality, but rather a set of libraries with a large base of contributors that avoid cross-dependencies by design. Whilst NifTK is modular, integration testing is only performed on the full platform; thus, cross-dependencies are not immediately obvious, and it is tempting for developers to add dependencies between modules to avoid reimplementing similar functions. By testing and deploying every SciKit-Surgery library individually, the introduction of cross-dependencies should be reduced</p>
    <p id="Par64">It will be interesting ongoing work to investigate the occurrence of cross-dependencies and duplication within the SciKit-Surgery libraries and compare this to similar features in more monolithic platforms. It is our hope to decentralise the development and maintenance of much of SciKit-Surgery. Decentralisation will enable ongoing growth, but will come at the cost of control and possible divergence within the libraries. Defining key data types and interfaces within scikit-surgerycore may minimise this.</p>
    <p id="Par65">Development is ongoing with a growing base of contributors and users. Current work is developing graphics processing unit accelerated libraries that use the same NumPy interfaces, so that surgical video can be processed in real time. However, by keeping libraries independent as far as practicable, we are able to rapidly change our development plans in response to the needs of our user base.</p>
    <p id="Par66">Investigation into the best way to deploy clinical applications built using Python is ongoing. Whilst Python packages provide a flexible tool for researchers, distribution to clinical users needs to be simpler. For most interventional applications, this is not an issue, as the software would be delivered pre-installed on a dedicated clinical-grade computer. Stand-alone installers for specific applications could also be created using tools like pyinstaller.<xref ref-type="fn" rid="Fn6">6</xref></p>
    <p id="Par68">As part of our analysis, we found that typical surgical applications and their modular dependencies run from 1000 to 3000 lines of code. We speculate that this is the amount of code a typical researcher can write and maintain to support their research objectives.</p>
  </sec>
  <sec id="Sec12">
    <title>Conclusions</title>
    <p id="Par69">We have presented the SciKit-Surgery libraries, a set of largely stand-alone libraries to support research innovation and translation in surgical navigation. The SciKit-Surgery libraries have been under active development for approximately 1 year. In that time, we have demonstrated their suitability for use in surgical navigation and related applications. We have had significantly more success with engaging staff and students in library development than with other platforms (NifTK), which we attribute to the simplified structure and use of Python rather than C<inline-formula id="IEq20"><alternatives><tex-math id="M39">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$++$$\end{document}</tex-math><mml:math id="M40"><mml:mrow><mml:mo>+</mml:mo><mml:mo>+</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="11548_2020_2180_Article_IEq20.gif"/></alternatives></inline-formula>. At present, the SciKit-Surgery libraries do not support the same amount of functionality as existing medical imaging and IGI platforms; however, we have shown how SciKit-Surgery can be rapidly developed to support new functionality.</p>
    <p id="Par70">Interested readers are directed to the first two SciKit-Surgery tutorials;<list list-type="bullet"><list-item><p id="Par71">The SciKit-Surgery augmented reality tutorial <ext-link ext-link-type="uri" xlink:href="https://snappytutorial01.readthedocs.io">https://snappytutorial01.readthedocs.io</ext-link>,</p></list-item><list-item><p id="Par72">The SciKit-Surgery library development tutorial <ext-link ext-link-type="uri" xlink:href="https://snappytutorial02.readthedocs.io">https://snappytutorial02.readthedocs.io</ext-link>,</p></list-item><list-item><p id="Par73">And the SciKit-Surgery wiki <ext-link ext-link-type="uri" xlink:href="https://github.com/UCL/scikitsurgery/wiki">https://github.com/UCL/scikitsurgery/wiki</ext-link>.</p></list-item></list></p>
  </sec>
</body>
<back>
  <fn-group>
    <fn id="Fn1">
      <label>1</label>
      <p id="Par14"><ext-link ext-link-type="uri" xlink:href="https://github.com/AlDanial/cloc">https://github.com/AlDanial/cloc</ext-link>.</p>
    </fn>
    <fn id="Fn2">
      <label>2</label>
      <p id="Par29"><ext-link ext-link-type="uri" xlink:href="http://www.pypi.org">www.pypi.org</ext-link>.</p>
    </fn>
    <fn id="Fn3">
      <label>3</label>
      <p id="Par30"><ext-link ext-link-type="uri" xlink:href="http://www.pylint.org">www.pylint.org</ext-link>.</p>
    </fn>
    <fn id="Fn4">
      <label>4</label>
      <p id="Par41"><ext-link ext-link-type="uri" xlink:href="https://pypi.org/project/yunguanfu-mil3id2019/">https://pypi.org/project/yunguanfu-mil3id2019/</ext-link>.</p>
    </fn>
    <fn id="Fn5">
      <label>5</label>
      <p id="Par45"><ext-link ext-link-type="uri" xlink:href="https://www.visiblepatient.com">https://www.visiblepatient.com</ext-link>.</p>
    </fn>
    <fn id="Fn6">
      <label>6</label>
      <p id="Par67"><ext-link ext-link-type="uri" xlink:href="https://www.pyinstaller.org/">https://www.pyinstaller.org/</ext-link>.</p>
    </fn>
    <fn>
      <p>
        <bold>Publisher's Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>University College London (UCL). This work is supported by the Wellcome/EPSRC Centre for Interventional and Surgical Sciences (WEISS) (203145Z/16/Z)</p>
  </ack>
  <notes notes-type="ethics">
    <title>Compliance with ethical standards</title>
    <notes id="FPar1" notes-type="COI-statement">
      <title>Conflict of Interest</title>
      <p id="Par75">The authors declare that they have no conflict of interest.</p>
    </notes>
    <notes id="FPar2">
      <title>Ethical approval</title>
      <p id="Par76">All procedures performed in studies involving human participants were in accordance with the ethical standards of the institutional and/or national research committee and with the 1964 Helsinki declaration and its later amendments or comparable ethical standards.</p>
    </notes>
    <notes id="FPar3">
      <title>Informed consent</title>
      <p id="Par77">Informed consent was obtained from all individual participants included in the study.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Askeland</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Solberg</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Bakeng</surname>
            <given-names>JB</given-names>
          </name>
          <name>
            <surname>Reinertsen</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Tangen</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Hofstad</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Iversen</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Våpenstad</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Selbekk</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Langø</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Hernes</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Leira</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Unsgård</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Lindseth</surname>
            <given-names>F</given-names>
          </name>
        </person-group>
        <article-title>Custusx: an open-source research platform for image-guided therapy</article-title>
        <source>Int J CARS</source>
        <year>2015</year>
        <volume>11</volume>
        <fpage>1</fpage>
        <lpage>15</lpage>
        <pub-id pub-id-type="doi">10.1007/s11548-015-1292-0</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Butler</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>Crossing over the valley of death-translational research</article-title>
        <source>Nature</source>
        <year>2008</year>
        <volume>453</volume>
        <fpage>840</fpage>
        <lpage>2</lpage>
        <pub-id pub-id-type="doi">10.1038/453840a</pub-id>
        <?supplied-pmid 18548043?>
        <pub-id pub-id-type="pmid">18548043</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Clarkson</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Zombori</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Thompson</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Totz</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Song</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Espak</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Johnsen</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Hawkes</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Ourselin</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>The niftk software platform for image-guided interventions: platform overview and niftylink messaging</article-title>
        <source>Int J Comput Assist Radiol Surg</source>
        <year>2015</year>
        <volume>10</volume>
        <issue>3</issue>
        <fpage>301</fpage>
        <lpage>316</lpage>
        <pub-id pub-id-type="doi">10.1007/s11548-014-1124-7</pub-id>
        <pub-id pub-id-type="pmid">25408304</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <mixed-citation publication-type="other">Computer-integrated surgical systems and technology. <ext-link ext-link-type="uri" xlink:href="https://github.com/jhu-cisst">https://github.com/jhu-cisst</ext-link>. Accessed: 17 Oct 2019</mixed-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <mixed-citation publication-type="other">Cleary K, Cheng P, Enquobahrie A, Yaniv Z (2009) IGSTK Image-Guided Surgery Toolkit. Insight Software Consortium. <ext-link ext-link-type="uri" xlink:href="http://www.igstk.org">http://www.igstk.org</ext-link></mixed-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cleary</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Peters</surname>
            <given-names>TM</given-names>
          </name>
        </person-group>
        <article-title>Image-guided interventions: technology review and clinical applications</article-title>
        <source>Ann Rev Biomed Eng</source>
        <year>2010</year>
        <volume>12</volume>
        <issue>1</issue>
        <fpage>119</fpage>
        <lpage>142</lpage>
        <pub-id pub-id-type="doi">10.1146/annurev-bioeng-070909-105249</pub-id>
        <pub-id pub-id-type="pmid">20415592</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Drouin</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Kochanowska</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Kersten-Oertel</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Gerard</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Zelmann</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>De Nigris</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Beriault</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Arbel</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Sirhan</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Sadikot</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Hall</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Sinclair</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Petrecca</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>DelMaestro</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Collins</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>Ibis: an or ready open-source platform for image-guided neurosurgery</article-title>
        <source>Int J Comput Assist Radiol Surg</source>
        <year>2016</year>
        <pub-id pub-id-type="doi">10.1007/s11548-016-1478-0</pub-id>
        <?supplied-pmid 27581336?>
        <pub-id pub-id-type="pmid">27581336</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <mixed-citation publication-type="other">Fouard C, Deram A, Keraval Y, Promayon E (2012) CamiTK: a modular framework integrating visualization, image processing and biomechanical modeling. In: Payan Y (ed) Soft tissue biomechanical modeling for computer assisted surgery, pp 323–354. <ext-link ext-link-type="uri" xlink:href="http://camitk.imag.fr">http://camitk.imag.fr</ext-link></mixed-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <mixed-citation publication-type="other">Franz AM, Seitel A, Servatius M, ZÖllner C, Gergel I, Wegner I, Neuhaus J, Zelzer S, Nolden M, Gaa J, Mercea P, Yung K, Sommer CM, Radeleff BA, Schlemmer HP, Kauczor HU, Meinzer HP, Maier-Hein L (2012) Simplified development of image-guided therapy software with MITK-IGT. pp. 83,162J–83,162J–8. 10.1117/12.911421</mixed-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <mixed-citation publication-type="other">Fu Y, Robu MR, Koo B, Schneider C, van Laarhoven S, Stoyanov D, Davidson B, Clarkson MJ, Hu Y (2019) More unlabelled data or label more data? a study on semi-supervised laparoscopic image segmentation. In: Wang Q et al. (eds) Domain adaptation and representation transfer and medical image learning with less labels and imperfect data. DART 2019, MIL3ID 2019. Lecture Notes in Computer Science, vol 11795. Springer, Cham</mixed-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Graafland</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Schraagen</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Schijven</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Systematic review of serious games for medical education and surgical skills training</article-title>
        <source>British j Surg</source>
        <year>2012</year>
        <volume>99</volume>
        <fpage>1322</fpage>
        <lpage>30</lpage>
        <pub-id pub-id-type="doi">10.1002/bjs.8819</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Heiberg</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>SjÖgren</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Ugander</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Carlsson</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Engblom</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Arheden</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Design and validation of segment—a freely available software for cardiovascular image analysis</article-title>
        <source>BMC Med Imag</source>
        <year>2010</year>
        <volume>10</volume>
        <fpage>1</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2342-10-1</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hu</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Kasivisvanathan</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Simmons</surname>
            <given-names>LA</given-names>
          </name>
          <name>
            <surname>Clarkson</surname>
            <given-names>MJ</given-names>
          </name>
          <name>
            <surname>Thompson</surname>
            <given-names>SA</given-names>
          </name>
          <name>
            <surname>Shah</surname>
            <given-names>TT</given-names>
          </name>
          <name>
            <surname>Ahmed</surname>
            <given-names>HU</given-names>
          </name>
          <name>
            <surname>Punwani</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Hawkes</surname>
            <given-names>DJ</given-names>
          </name>
          <name>
            <surname>Emberton</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Moore</surname>
            <given-names>CM</given-names>
          </name>
          <name>
            <surname>Barratt</surname>
            <given-names>DC</given-names>
          </name>
        </person-group>
        <article-title>Development and phantom validation of a 3-D-ultrasound-guided system for targeting MRI-visible lesions during transrectal prostate biopsy</article-title>
        <source>IEEE Trans Biomed Eng</source>
        <year>2017</year>
        <volume>64</volume>
        <issue>4</issue>
        <fpage>946</fpage>
        <lpage>958</lpage>
        <pub-id pub-id-type="doi">10.1109/TBME.2016.2582734</pub-id>
        <pub-id pub-id-type="pmid">27337710</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Hunt</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Thomas</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <source>The pragmatic programmer: from journeyman to master</source>
        <year>2000</year>
        <publisher-loc>Boston</publisher-loc>
        <publisher-name>Addison-Wesley Longman Publishing Co., Inc.</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lasso</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Heffter</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Rankin</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Pinter</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Ungi</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Fichtinger</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>PLUS: open-source toolkit for ultrasound-guided intervention systems</article-title>
        <source>IEEE Trans Biomed Eng</source>
        <year>2014</year>
        <pub-id pub-id-type="doi">10.1109/TBME.2014.2322864</pub-id>
        <?supplied-pmid 24833412?>
        <pub-id pub-id-type="pmid">24833412</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lu</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Liang</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>WB</given-names>
          </name>
          <name>
            <surname>Xue</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Lei</surname>
            <given-names>CL</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>YY</given-names>
          </name>
          <name>
            <surname>Sun</surname>
            <given-names>YN</given-names>
          </name>
          <name>
            <surname>Liu</surname>
            <given-names>FY</given-names>
          </name>
        </person-group>
        <article-title>Integration of the image-guided surgery toolkit (IGSTK) into the medical imaging interaction toolkit (MITK)</article-title>
        <source>J Digit Imag</source>
        <year>2012</year>
        <volume>25</volume>
        <fpage>729</fpage>
        <lpage>737</lpage>
        <pub-id pub-id-type="doi">10.1007/s10278-012-9477-3</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <mixed-citation publication-type="other">MATLAB: (R2019b). The MathWorks Inc., Natick, Massachusetts (2019)</mixed-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>McIlroy</surname>
            <given-names>MD</given-names>
          </name>
          <name>
            <surname>Pinson</surname>
            <given-names>EN</given-names>
          </name>
          <name>
            <surname>Tague</surname>
            <given-names>BA</given-names>
          </name>
        </person-group>
        <article-title>Unix time-sharing system: foreword</article-title>
        <source>Bell Syst Tech J</source>
        <year>1978</year>
        <volume>57</volume>
        <issue>6</issue>
        <fpage>1899</fpage>
        <lpage>1904</lpage>
        <pub-id pub-id-type="doi">10.1002/j.1538-7305.1978.tb02135.x</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <mixed-citation publication-type="other">Ourselin S, Emberton M, Vercauteren T (2016) From computer-assisted intervention research to clinical impact: The need for a holistic approach. Med Image Anal 33:72–78. 10.1016/j.media.2016.06.018. <ext-link ext-link-type="uri" xlink:href="http://www.sciencedirect.com/science/article/pii/S1361841516300937">http://www.sciencedirect.com/science/article/pii/S1361841516300937</ext-link>. 20th anniversary of the Medical Image Analysis journal (MedIA)</mixed-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <mixed-citation publication-type="other">Pieper S, Halle M, Kikinis R (2004) 3D Slicer. In: Biomedical imaging: nano to macro, 2004. IEEE International symposium on, pp 632–635. IEEE. <ext-link ext-link-type="uri" xlink:href="http://www.slicer.org">http://www.slicer.org</ext-link></mixed-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Thompson</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Dowrick</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Xiao</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Ramalhinho</surname>
            <given-names>JA</given-names>
          </name>
          <name>
            <surname>Robu</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Ahmad</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Taylor</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Clarkson</surname>
            <given-names>MJ</given-names>
          </name>
        </person-group>
        <article-title>Snappysonic: an ultrasound acquistion replay simulator</article-title>
        <source>J Open Res Softw</source>
        <year>2020</year>
        <volume>8</volume>
        <issue>1</issue>
        <fpage>8</fpage>
        <pub-id pub-id-type="doi">10.5334/jors.289</pub-id>
        <?supplied-pmid 32395246?>
        <pub-id pub-id-type="pmid">32395246</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Thompson</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Schneider</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Bosi</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Gurusamy</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Ourselin</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Davidson</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Hawkes</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Clarkson</surname>
            <given-names>MJ</given-names>
          </name>
        </person-group>
        <article-title>In vivo estimation of target registration errors during augmented reality laparoscopic surgery</article-title>
        <source>Int J Comput Assist Radiol Surg</source>
        <year>2018</year>
        <volume>13</volume>
        <issue>6</issue>
        <fpage>865</fpage>
        <lpage>874</lpage>
        <pub-id pub-id-type="doi">10.1007/s11548-018-1761-3</pub-id>
        <?supplied-pmid 29663273?>
        <pub-id pub-id-type="pmid">29663273</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ungi</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Lasso</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Fichtinger</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>Open-source platforms for navigated image-guided interventions</article-title>
        <source>Med Image Anal</source>
        <year>2016</year>
        <pub-id pub-id-type="doi">10.1016/j.media.2016.06.011</pub-id>
        <?supplied-pmid 27498015?>
        <pub-id pub-id-type="pmid">27498015</pub-id>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <mixed-citation publication-type="other">U.S. Department Of Health and Human Services, Food and Drug Administration, Center for Devices and Radiological Health, Center for Biologics Evaluation and Research: General principles of software validation; final guidance for industry and FDA staff (2002). <ext-link ext-link-type="uri" xlink:href="http://purl.access.gpo.gov/GPO/LPS113110">http://purl.access.gpo.gov/GPO/LPS113110</ext-link></mixed-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <mixed-citation publication-type="other">Wolf I (2010) Toolkits and software for developing biomedical image processing and analysis applications. In: Deserno T (ed) Biomedical image processing. Biological and Medical Physics, Biomedical Engineering. Springer, Berlin, Heidelberg</mixed-citation>
    </ref>
  </ref-list>
</back>

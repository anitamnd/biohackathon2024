<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">J Cheminform</journal-id>
    <journal-id journal-id-type="iso-abbrev">J Cheminform</journal-id>
    <journal-title-group>
      <journal-title>Journal of Cheminformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1758-2946</issn>
    <publisher>
      <publisher-name>Springer International Publishing</publisher-name>
      <publisher-loc>Cham</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">8626955</article-id>
    <article-id pub-id-type="publisher-id">572</article-id>
    <article-id pub-id-type="doi">10.1186/s13321-021-00572-6</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>MERMAID: an open source automated hit-to-lead method based on deep reinforcement learning</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Erikawa</surname>
          <given-names>Daiki</given-names>
        </name>
        <address>
          <email>erikawa.d.aa@m.titech.ac.jp</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-3114-7895</contrib-id>
        <name>
          <surname>Yasuo</surname>
          <given-names>Nobuaki</given-names>
        </name>
        <address>
          <email>yasuo.n.aa@m.titech.ac.jp</email>
        </address>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-3806-9535</contrib-id>
        <name>
          <surname>Sekijima</surname>
          <given-names>Masakazu</given-names>
        </name>
        <address>
          <email>sekijima@c.titech.ac.jp</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="GRID">grid.32197.3e</institution-id><institution-id institution-id-type="ISNI">0000 0001 2179 2105</institution-id><institution>Department of Computer Science, </institution><institution>Tokyo Institute of Technology, </institution></institution-wrap>4259–J3–23, Nagatsuta-cho, Midori-ku, Yokohama, Japan </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="GRID">grid.32197.3e</institution-id><institution-id institution-id-type="ISNI">0000 0001 2179 2105</institution-id><institution>Academy for Convergence of Materials and Informatics (TAC-MI), Tokyo Institute of Technology, </institution></institution-wrap>S6–23, 2–12–1, Ookayama, Meguro-ku, Tokyo, Japan </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>27</day>
      <month>11</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>27</day>
      <month>11</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2021</year>
    </pub-date>
    <volume>13</volume>
    <elocation-id>94</elocation-id>
    <history>
      <date date-type="received">
        <day>8</day>
        <month>7</month>
        <year>2021</year>
      </date>
      <date date-type="accepted">
        <day>15</day>
        <month>11</month>
        <year>2021</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2021</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold>This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <p id="Par1">The hit-to-lead process makes the physicochemical properties of the hit molecules that show the desired type of activity obtained in the screening assay more drug-like. Deep learning-based molecular generative models are expected to contribute to the hit-to-lead process. The simplified molecular input line entry system (SMILES), which is a string of alphanumeric characters representing the chemical structure of a molecule, is one of the most commonly used representations of molecules, and molecular generative models based on SMILES have achieved significant success. However, in contrast to molecular graphs, during the process of generation, SMILES are not considered as valid SMILES. Further, it is quite difficult to generate molecules starting from a certain molecule, thus making it difficult to apply SMILES to the hit-to-lead process. In this study, we have developed a SMILES-based generative model that can be generated starting from a certain molecule. This method generates partial SMILES and inserts it into the original SMILES using Monte Carlo Tree Search and a Recurrent Neural Network. We validated our method using a molecule dataset obtained from the ZINC database and successfully generated molecules that were both well optimized for the objectives of the quantitative estimate of drug-likeness (QED) and penalized octanol-water partition coefficient (PLogP) optimization. The source code is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/sekijima-lab/mermaid">https://github.com/sekijima-lab/mermaid</ext-link>.</p>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Molecular generation</kwd>
      <kwd>Lead Optimization</kwd>
      <kwd>Hit-to-Lead</kwd>
      <kwd>Monte Carlo Tree Search</kwd>
      <kwd>Drug Discovery</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100009619</institution-id>
            <institution>japan agency for medical research and development</institution>
          </institution-wrap>
        </funding-source>
        <award-id>Platform Project for Supporting Drug Discovery and Life Science Research (Basis for Supporting Innovative Drug Discovery and Life Science Research (BINDS)) from AMED under Grant Number JP20am0101112</award-id>
        <principal-award-recipient>
          <name>
            <surname>Sekijima</surname>
            <given-names>Masakazu</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100001691</institution-id>
            <institution>japan society for the promotion of science</institution>
          </institution-wrap>
        </funding-source>
        <award-id>KAKENHI Grant Numbers 20H00620</award-id>
        <principal-award-recipient>
          <name>
            <surname>Sekijima</surname>
            <given-names>Masakazu</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2021</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Introduction</title>
    <p id="Par2">Approximately 8000 drugs are currently being developed worldwide [<xref ref-type="bibr" rid="CR1">1</xref>]. From drug discovery to launch, a new drug takes an average of 10 to 15 years to be developed and costs $2.6 billion [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR2">2</xref>]. Among the drug candidates that enter Phase I clinical trials, less than 12 % are approved by the Food and Drug Administration (FDA) [<xref ref-type="bibr" rid="CR1">1</xref>]. After the target protein of a therapeutic drug for a disease has been determined, high-throughput screening (HTS) is used to exhaustively test the binding affinity of thousands to hundreds of thousands of compounds to the target protein in the search for hit compounds. Although the number of possible structures of a compound is <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$10^{60}$$\end{document}</tex-math><mml:math id="M2"><mml:msup><mml:mn>10</mml:mn><mml:mn>60</mml:mn></mml:msup></mml:math><inline-graphic xlink:href="13321_2021_572_Article_IEq1.gif"/></alternatives></inline-formula> and depends on the quality of the compound library to be tested, the hit rate of HTS is approximately 0.1 % [<xref ref-type="bibr" rid="CR3">3</xref>], which provides an opportunity to discover unexpected hit compounds but also highlights the problem of high experimental cost. To reduce the number of compounds to be tested, virtual screening, a computer-aided drug design (CADD) method for selecting new drug candidates, was proposed in the late 1990s [<xref ref-type="bibr" rid="CR4">4</xref>]. In virtual screening, compounds that have a high potential to bind to a target protein are ranked in order from a database of thousands to millions of compounds using an evaluation function that expresses the binding affinity calculated by a computer. The compounds narrowed down by the virtual screening are verified by biochemical experiments [<xref ref-type="bibr" rid="CR5">5</xref>–<xref ref-type="bibr" rid="CR7">7</xref>], and those that are actually determined to be active proceed to the hit-to-lead. Hit-to-Lead is a stage in early drug discovery where small molecule compounds hit by high-throughput screening (HTS) are processed through certain optimizations to identify promising lead compounds [<xref ref-type="bibr" rid="CR8">8</xref>]. In addition to simulation, machine learning (ML) methods such as random forests and deep learning have been used in virtual screening [<xref ref-type="bibr" rid="CR9">9</xref>–<xref ref-type="bibr" rid="CR12">12</xref>]; however, molecular design methods using generative models are expected to be used in hit-to-lead [<xref ref-type="bibr" rid="CR13">13</xref>].</p>
    <p id="Par3">The significant progress made in ML in recent years, especially in terms of deep learning, has led to a breakthrough in image processing and natural language processing [<xref ref-type="bibr" rid="CR14">14</xref>]. Subsequently, various ML models have been applied in the field of molecular design and have shown impressive results [<xref ref-type="bibr" rid="CR15">15</xref>]. Gomez-Bombarelli et al. [<xref ref-type="bibr" rid="CR16">16</xref>] used a variational autoencoder (VAE) for molecular design. Representing the molecule as a continuous variable enables us to perform gradient-based optimization in latent space. Considering that simplified molecular input line entry system (SMILES) is a string, which is one representation of molecules, it is natural to adopt recurrent neural networks (RNNs), which are suitable for time-series data such as strings, for molecular design. Segler et al. [<xref ref-type="bibr" rid="CR17">17</xref>] used long short-term memory (LSTM), which is an RNN, for molecule generation. Although this method showed high validity, it is not suitable for the purpose of generating molecules with desirable properties. This is because LSTM training is only optimized to satisfy SMILES grammar, and the generation process does not consider the properties of molecules. Therefore, we have to repeat the generation process incessantly until we generate the desired molecules. So far, a variety of SMILES-based methods for optimizing specific chemical properties have been proposed [<xref ref-type="bibr" rid="CR18">18</xref>, <xref ref-type="bibr" rid="CR19">19</xref>]. Xiufeng Yang et al. [<xref ref-type="bibr" rid="CR20">20</xref>] used Monte Carlo tree search (MCTS) to generate desirable molecules with better efficiency than random sampling in RNN-based molecule generation. The aforementioned methods are SMILES-based molecular generative models, and they cannot take a specific molecule as a starting point during optimization tasks. This is because, unlike the case of molecular graphs, sub-SMILES cannot be considered as valid molecules owing to the nature of SMILES grammar.</p>
    <p id="Par4">Graph representation, which is called a molecular graph, is also a useful representation of molecules. Graph representation is easier to understand visually, and checking the valence allows all generated molecules to be valid. Various ML models such as generative adversarial network (GAN) [<xref ref-type="bibr" rid="CR21">21</xref>] and VAE [<xref ref-type="bibr" rid="CR22">22</xref>] have been applied to the generation of molecular graphs [<xref ref-type="bibr" rid="CR23">23</xref>–<xref ref-type="bibr" rid="CR25">25</xref>]. These methods often outperformed SMILES-based methods in terms of optimization for certain chemical properties, as well as for metrics, such as validity and novelty, for generated molecules. However, handling molecular graphs on a computer is more difficult than SMILES. Because VAE deals with likelihoods explicitly, graph matching is necessary to calculate the loss function, which has a high computational cost [<xref ref-type="bibr" rid="CR26">26</xref>]. Although GANs do not deal with likelihoods explicitly, the GNN used in the discriminator and generator require a significant computational cost [<xref ref-type="bibr" rid="CR27">27</xref>]. For these reasons, the molecular graph-based approach can only deal with small molecules [<xref ref-type="bibr" rid="CR28">28</xref>]. In addition, for both SMILES-based and molecular graph-based approaches, reinforcement learning is used to optimize specific chemical properties; however, the reward model, which is represented by neural networks and is not always accurate(especially in the case of extrapolation) [<xref ref-type="bibr" rid="CR29">29</xref>], must be retrained for each evaluation function.</p>
    <p id="Par5">To address these issues, we have introduced <italic>MERMAID</italic>, a generative model based on SMILES using MCTS and RNN. Our model can take a specific molecule as a starting point (Fig. <xref rid="Fig1" ref-type="fig">1</xref>), and because we adopt SMILES representation, the restrictions on the size of molecules is not as stringent as the molecular graph-based approach, and our model does not require retraining of the model for each chemical properties.<fig id="Fig1"><label>Fig. 1</label><caption><p>Comparison with existing MCTS-based methods (<bold>a</bold>) Existing MCTS-based molecular generative model such as ChemTS [<xref ref-type="bibr" rid="CR20">20</xref>]. This model generates full SMILES strings through MCTS. <bold>b</bold> Our model starting from a specific molecule. It generates partial SMILES and replaces a part of the seed SMILES with the generated one</p></caption><graphic xlink:href="13321_2021_572_Fig1_HTML" id="MO1"/></fig></p>
  </sec>
  <sec id="Sec2">
    <title>Methods</title>
    <sec id="Sec3">
      <title>Optimization of specific molecules</title>
      <p id="Par6">The purpose of this study is to generate the derivatives of specific molecules. The aforementioned MCTS-based generative model cannot start from specific molecules simply, because MCTS only adds nodes to the tail of a search tree. Our proposed method is as follows. <list list-type="order"><list-item><p id="Par7">Extract partial SMILES strings from the initial point of SMILES.</p></list-item><list-item><p id="Par8">Use MCTS to generate a series of characters representing the partial SMILES strings</p></list-item><list-item><p id="Par9">Replace the extracted partial SMILES strings with the generated partial SMILES</p></list-item></list>This method is capable of generating molecules that are obtained by removing or adding a series of zeros or more SMILES characters from SMILES regarded as the starting point (Seed molecule). An overview of our entire methods is given in the Fig. <xref rid="Fig2" ref-type="fig">2</xref>. First, the method of (partial) SMILES generation by MCTS will be explained. After that, the RNN and its training procedure will be explained, and details of the substitution procedure used with MCTS will be given.<fig id="Fig2"><label>Fig. 2</label><caption><p>Overview of MERMAID In MERMAID, an RNN model is trained using the SMILES dataset, and MCTS and the RNN model generate SMILES corresponding to the substructure, which are inserted into the SMILES of the seed molecule to generate a new molecule</p></caption><graphic xlink:href="13321_2021_572_Fig2_HTML" id="MO2"/></fig></p>
    </sec>
    <sec id="Sec4">
      <title>MCTS for molecular generation</title>
      <p id="Par10">MCTS [<xref ref-type="bibr" rid="CR30">30</xref>, <xref ref-type="bibr" rid="CR31">31</xref>] is a model-based reinforcement learning approach used to solve large space planning problems by sampling episodes and constructing search trees. The generation of (partial) SMILES by MCTS is illustrated in Fig. <xref rid="Fig3" ref-type="fig">3</xref>(a). A node corresponds to a state <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$s_i$$\end{document}</tex-math><mml:math id="M4"><mml:msub><mml:mi>s</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13321_2021_572_Article_IEq2.gif"/></alternatives></inline-formula> and has the value <italic>Q</italic>(<italic>s</italic>), which represents the evaluation of itself and the number of visits <italic>N</italic>(<italic>s</italic>). While sampling episodes, MCTS selects a node from a search tree using tree policies and evaluates a new node by rollout. Rollout is the default policy for simulations without adding new nodes to search tree. The details of Rollout are described later.<fig id="Fig3"><label>Fig. 3</label><caption><p>Details of SMILES generation by MCTS (<bold>a</bold>) With the path to the non-terminal node as input, the RNN model generates a complete partial SMILES. Then, by inserting the generated partial SMILES into the seed SMILES, a new SMILES is generated. <bold>b</bold> Selecting seed SMILES that is replaced with the generated one.Nodes under the root node have the information of the part deleted from seed SMILES.The generation of partial SMILES begins from the grandchild nodes of the root node. <bold>c</bold> The optimization cycle is repeated multiple times, replacing one of the generated SMILES with a seed SMILES</p></caption><graphic xlink:href="13321_2021_572_Fig3_HTML" id="MO3"/></fig></p>
      <p id="Par11">In molecular generation, a node corresponds to a character of SMILES; therefore, hence, a path from the root node to leaf node corresponds to a SMILES. The MCTS algorithm includes the following four steps and iterates until some convergence condition is satisfied. 
</p>
      <sec id="Sec71">
        <title>Selection</title>
        <p id="Par12">The purpose of this step is to select a node from a search tree for the expansion of nodes. Starting from the root node, the child node of current node is selected based on a tree policy. The tree policy is discussed later. Node selection is repeated recursively until the leaf node is selected.</p>
      </sec>
      <sec id="Sec72">
        <title>Expansion</title>
        <p id="Par13">The purpose of this step is to expand the current node(the node is selected in Selection step). Some SMILES characters following the current node’s SMILES character are selected from predefined vocabulary.</p>
      </sec>
      <sec id="Sec73">
        <title>Simulation</title>
        <p id="Par14">The purpose of this step is to evaluate added nodes. The evaluation of non-terminal nodes is a difficult task in reinforcement learning. Therefore, MCTS evaluates non-terminal nodes using the <italic>Rollout</italic> procedure. The <italic>Rollout</italic> procedure expands recursively from evaluating the nodes until the terminal node appears. When the terminal node appears, the path from the root node to the terminal node corresponds to a complete SMILES. Therefore, We can evaluate the path easily using some metrics such as QED, LogP. We used the score as the non-terminal node.</p>
      </sec>
      <sec id="Sec74">
        <title>Backpropagation</title>
        <p id="Par15">The purpose of this step is to update the value <italic>Q</italic>(<italic>s</italic>) and the number of visit <italic>N</italic>(<italic>s</italic>) of traversed nodes in this episode. Starting from the evaluated node in the Simulation step, the parent node of the current node is updated using the calculated score <italic>r</italic> recursively until the root node appears. The update formulas are defined as follows. <disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} Q(s)\leftarrow &amp; {} \frac{Q(s)N(s) + r}{N(s) + 1} \end{aligned}$$\end{document}</tex-math><mml:math id="M6" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>Q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">←</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mfrac><mml:mrow><mml:mi>Q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>N</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mi>N</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13321_2021_572_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula><disp-formula id="Equ2"><label>2</label><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} N(s)\leftarrow &amp; {} N(s) + 1 \end{aligned}$$\end{document}</tex-math><mml:math id="M8" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>N</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">←</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mi>N</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13321_2021_572_Article_Equ2.gif" position="anchor"/></alternatives></disp-formula></p>
        <p id="Par16">Tree policies are important for the performance of MCTS. The upper confidence bound (UCB) score, which is proposed for the multi-armed bandit problem, is often used as the tree policy. Node selection based on the UCB score is as follows.<disp-formula id="Equ3"><label>3</label><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \pi (s) = \mathop {\hbox {arg max}}\limits _i \left\{ Q(s_i) + 2C_p \sqrt{\frac{\ln {N(s_{p})}}{N(s_i)}}\right\} \end{aligned}$$\end{document}</tex-math><mml:math id="M10" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>π</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mtext>arg max</mml:mtext></mml:mrow><mml:mi>i</mml:mi></mml:munder><mml:mfenced close="}" open="{"><mml:mi>Q</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:msub><mml:mi>C</mml:mi><mml:mi>p</mml:mi></mml:msub><mml:msqrt><mml:mfrac><mml:mrow><mml:mo>ln</mml:mo><mml:mrow><mml:mi>N</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>p</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mi>N</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac></mml:msqrt></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13321_2021_572_Article_Equ3.gif" position="anchor"/></alternatives></disp-formula> where, <italic>Q</italic>(<italic>s</italic>) is the mean estimated value of state <italic>s</italic> for its child nodes, and <italic>N</italic>(<italic>s</italic>) is the number of visits to the state <italic>s</italic>. <inline-formula id="IEq3"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$s_i$$\end{document}</tex-math><mml:math id="M12"><mml:msub><mml:mi>s</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13321_2021_572_Article_IEq3.gif"/></alternatives></inline-formula> and <inline-formula id="IEq4"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$s_p$$\end{document}</tex-math><mml:math id="M14"><mml:msub><mml:mi>s</mml:mi><mml:mi>p</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13321_2021_572_Article_IEq4.gif"/></alternatives></inline-formula> are the states of each node <italic>i</italic> and the parent node, respectively. <inline-formula id="IEq5"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C_p$$\end{document}</tex-math><mml:math id="M16"><mml:msub><mml:mi>C</mml:mi><mml:mi>p</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13321_2021_572_Article_IEq5.gif"/></alternatives></inline-formula> is the hyperparameter of the bias term. The first term corresponds to exploitation, and the second term corresponds to exploration.</p>
        <p id="Par17">The advantage of using UCB score as the tree policy is that the probability of selecting sub-optimal actions converges to zero as the number of iteration tends to infinity under specific conditions (appropriate <inline-formula id="IEq6"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C_p$$\end{document}</tex-math><mml:math id="M18"><mml:msub><mml:mi>C</mml:mi><mml:mi>p</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13321_2021_572_Article_IEq6.gif"/></alternatives></inline-formula> and the value of reward ranges between 0 and 1). However, it is not possible for the number of iterations to tend toward infinity. Furthermore, the performance of rollout-based algorithms degrades similar to that of other algorithms [<xref ref-type="bibr" rid="CR32">32</xref>]. Since a character following the SMILES string needs to satisfy SMILES grammar, the number of suitable characters that follow the SMILES string is smaller than the number of vocabularies, which is action space. Therefore, a few characters selected by RNN are considered as actions in our approach. <inline-formula id="IEq7"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C_p$$\end{document}</tex-math><mml:math id="M20"><mml:msub><mml:mi>C</mml:mi><mml:mi>p</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13321_2021_572_Article_IEq7.gif"/></alternatives></inline-formula> is chosen to be an upper bound of the accumulated reward in practice. However, in this case, <inline-formula id="IEq8"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C_p$$\end{document}</tex-math><mml:math id="M22"><mml:msub><mml:mi>C</mml:mi><mml:mi>p</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13321_2021_572_Article_IEq8.gif"/></alternatives></inline-formula> is large to an extent that the state space is restricted, i.e., exploration is considered more valuable than exploitation. Therefore, we set <inline-formula id="IEq9"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C_p = \frac{1}{\sqrt{2}}$$\end{document}</tex-math><mml:math id="M24"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>p</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:msqrt><mml:mn>2</mml:mn></mml:msqrt></mml:mfrac></mml:mrow></mml:math><inline-graphic xlink:href="13321_2021_572_Article_IEq9.gif"/></alternatives></inline-formula> like other studies [<xref ref-type="bibr" rid="CR20">20</xref>] that using MCTS.</p>
      </sec>
    </sec>
    <sec id="Sec5">
      <title>Inference of SMILES using RNN</title>
      <p id="Par18">RNN is a type of neural network that propagates information not only in the direction of layers but also that of time series. In this study, LSTM [<xref ref-type="bibr" rid="CR33">33</xref>], is a type of RNN superior to normal RNN in terms of longer dependency, is used to capture the features of SMILES grammar.</p>
      <p id="Par19">The role of RNN in MCTS is to select SMILES characters following an incomplete SMILES string in the expansion step and the default policy in the simulation step, as shown in Fig. <xref rid="Fig4" ref-type="fig">4</xref>(b). In the expansion step, the incomplete SMILES string <inline-formula id="IEq10"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$s_{1}s_{2}...s_{t}$$\end{document}</tex-math><mml:math id="M26"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msub><mml:mi>s</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13321_2021_572_Article_IEq10.gif"/></alternatives></inline-formula> (encoded to <inline-formula id="IEq11"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{x_0}\varvec{x_1}...\varvec{x_t}$$\end{document}</tex-math><mml:math id="M28"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mn mathvariant="bold">0</mml:mn></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mn mathvariant="bold">1</mml:mn></mml:msub></mml:mrow><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">x</mml:mi><mml:mi mathvariant="bold-italic">t</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13321_2021_572_Article_IEq11.gif"/></alternatives></inline-formula> , e.g., one-hot vector) corresponding to path from root to the selected node is the input for RNN. RNN receives the encoded sequence as input and outputs the probability of selecting characters following the input sequence, which is incomplete SMILES. The probability of selecting a character <inline-formula id="IEq12"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$s^i$$\end{document}</tex-math><mml:math id="M30"><mml:msup><mml:mi>s</mml:mi><mml:mi>i</mml:mi></mml:msup></mml:math><inline-graphic xlink:href="13321_2021_572_Article_IEq12.gif"/></alternatives></inline-formula> based on output of RNN <inline-formula id="IEq13"><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\varvec{y_t}$$\end{document}</tex-math><mml:math id="M32"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">y</mml:mi><mml:mi mathvariant="bold-italic">t</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13321_2021_572_Article_IEq13.gif"/></alternatives></inline-formula> is as follows.<disp-formula id="Equ4"><label>4</label><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} P(s^{i}_{t+1}|s_{1}s_{2}...s_{t}) = \frac{\exp (y^i_{t})}{\sum _j \exp (y^j_{t})} \end{aligned}$$\end{document}</tex-math><mml:math id="M34" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>P</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>s</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>i</mml:mi></mml:msubsup><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msub><mml:mi>s</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mo>exp</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>y</mml:mi><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mo>∑</mml:mo><mml:mi>j</mml:mi></mml:msub><mml:mo>exp</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>y</mml:mi><mml:mi>t</mml:mi><mml:mi>j</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13321_2021_572_Article_Equ4.gif" position="anchor"/></alternatives></disp-formula>Several characters are selected through a fixed number of samplings from the probability and are added as child nodes to the selected node in the selection step. In the simulation step, a SMILES character that follows the current node is selected recursively until the terminal character is selected in the same way as the expansion step. <fig id="Fig4"><label>Fig. 4</label><caption><p>Details of RNN Model Training (<bold>a</bold>) Partial SMILES are extracted from complete SMILES. These partial SMILES datasets are used to train the RNN Model. <bold>b</bold> The RNN model predicts the next character from the previous string at each position</p></caption><graphic xlink:href="13321_2021_572_Fig4_HTML" id="MO4"/></fig></p>
    </sec>
    <sec id="Sec6">
      <title>RNN training</title>
      <p id="Par20">The role of MCTS is to generate partial SMILES string as described in above section. Therefore, RNN combined with MCTS should be trained with partial SMILES string rather than full SMILES. In this study, a dataset of partial SMILES strings was generated from a dataset of full SMILES, as shown in Fig. <xref rid="Fig4" ref-type="fig">4</xref>(a). Preprocessing was done as follows. <list list-type="order"><list-item><p id="Par21">Partial SMILES strings were extracted exhaustively from full SMILES of the original dataset.</p></list-item><list-item><p id="Par22">“Invalid” partial SMILES strings were filtered. Partial SMILES strings are regarded as valid if the SMILES generated by inserting partial SMILES strings into C*C or C(*)C is valid.</p></list-item></list>Approximately 250,000 molecules were obtained from the ZINC database to train the RNN model and evaluate the proposed generative model. 90 % of the molecules were used for training, and the remaining were used to evaluate molecule generation.</p>
      <p id="Par23">The RNN model consists of two layers of LSTM and receives encoded SMILES strings as input and outputs sequences of probability that represents the suitability of a SMILES character following the current input sequence for each position and each SMILES character in vocabulary. This model was trained on the preprocessed training set for 20 epochs using the Adam optimizer [<xref ref-type="bibr" rid="CR34">34</xref>] to minimize cross entropy loss.</p>
    </sec>
    <sec id="Sec7">
      <title>Replacement of partial SMILES string</title>
      <p id="Par24">In the proposed method, the selection of partial SMILES strings removed from the initial point of SMILES is done in MCTS using the “Replacement” node. Fig. <xref rid="Fig3" ref-type="fig">3</xref>(b) shows how to select removed partial SMILES strings. Specifically, the “Replacement” node, which is a child node of the root node, has the values of the starting position of a removed SMILES string and its length of that. A partial SMILES string is generated from the grandchild nodes of the root node, and the generated string is replaced with the part of the initial point of SMILES corresponding to the “Replacement” node.
</p>
    </sec>
    <sec id="Sec8">
      <title>Initial point of molecule</title>
      <p id="Par25">This approach is capable of generating new molecules from the original molecule. However, this approach has problem with generated molecules. Because this approach replaces the substructure generated by MCTS with a portion of the original molecule, the generated molecule is a molecule in which only one part of the original molecule has been changed on SMILES. In other words, the generated molecule is not modified in more than one place. Therefore, we propose a method that applies this approach multiple times (Fig. <xref rid="Fig3" ref-type="fig">3</xref>(c)). Specifically, for every fixed number of steps, the initial point of SMILES is replaced with the SMILES generated up to that point, and MCTS is performed from the beginning.</p>
      <p id="Par26">For efficient performance, it is important to know how the next initial point of SMILES is selected. In this study, we preferred to optimize SMILES with the maximum reward score, for example QED, LogP, etc. is selected as next initial point. The effect of the difference between fixed or changed initial points is investigated in the Experiment section.</p>
      <p id="Par27">This policy is simple and easy to understand and implement; however, it is possible that the generated molecules flow into a local solution. In addition, it is not necessary that future molecules that have desirable and better properties need to be generated from the best molecule among the generated molecules. Using this policy, good results are obtained in this study; however, the selection policy for next initial SMILES must be further considered to generate better molecules.</p>
    </sec>
  </sec>
  <sec id="Sec9">
    <title>Experiment</title>
    <p id="Par28">We conducted two experiments to demonstrate the performance of our method. The first experiment involves normal optimization, which modifies a molecule to maximize a single evaluation function. The optimization targets in this experiment were the QED [<xref ref-type="bibr" rid="CR35">35</xref>] score and penalized LogP. QED is a measure of drug-likeness, and the more drug-like it is, the closer this value is to 1 ranging between 0 and 1. Penalized LogP is defined as follows.<disp-formula id="Equ5"><label>5</label><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} PLogP(mol) =\, LogP(mol) + SAscore(mol) + RingPenalty(mol) \end{aligned}$$\end{document}</tex-math><mml:math id="M36" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>P</mml:mi><mml:mi>L</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mi>o</mml:mi><mml:mi>l</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mspace width="0.166667em"/><mml:mi>L</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mi>o</mml:mi><mml:mi>l</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mi>S</mml:mi><mml:mi>A</mml:mi><mml:mi>s</mml:mi><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mi>o</mml:mi><mml:mi>l</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mi>R</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>g</mml:mi><mml:mi>P</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi><mml:mi>t</mml:mi><mml:mi>y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mi>o</mml:mi><mml:mi>l</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13321_2021_572_Article_Equ5.gif" position="anchor"/></alternatives></disp-formula>The Penalized LogP consists of three terms: the normal LogP (octanol-water partition coefficient), the SA score that penalizes complex structures, and the penalties for large rings. Note that any other target property metrics that can be calculated from SMILES can also be used in this model. The 200 lowest PLogP/QED molecules in the validation data set ware selected as the seed in this experiment.</p>
    <p id="Par29">Molecule generation was done in 10,000 steps for each of the test molecules. We analyzed two cases for the proposed approach, depending on whether the seed molecule is fixed. The model in which the seed molecule is fixed is called “Single”, and the other model is called “Multi”. The seed molecule of the “Multi” model is replaced every 2000 steps with the highest scoring(PLogP/QED) molecule generated up to that point.</p>
    <p id="Par30">The second experiment is constrained optimization for comparison with conventional methods, which modifies a molecule to maximize a single evaluation function while satisfying some conditions. In this case, PLogP was optimized with the condition of using the Tanimoto coefficient based on ECFP4 fingerprint. Models perform 4 cycles <inline-formula id="IEq14"><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\times$$\end{document}</tex-math><mml:math id="M38"><mml:mo>×</mml:mo></mml:math><inline-graphic xlink:href="13321_2021_572_Article_IEq14.gif"/></alternatives></inline-formula>50 steps =200 steps of optimization for each of the 800 molecules with the lowest PLogP in the ZINC dataset. Mol-CycleGAN [<xref ref-type="bibr" rid="CR36">36</xref>] and GCPN [<xref ref-type="bibr" rid="CR29">29</xref>] were used for comparison.</p>
  </sec>
  <sec id="Sec10">
    <title>Results</title>
    <sec id="Sec11">
      <title>Normal optimization</title>
      <p id="Par31">We evaluate the performance of the optimization task using the best molecular property score and the distribution of generated molecules using validity, uniqueness and novelty. Validity rate is defined as the ratio of SMILES that can be parsed by RDKit to all generated molecules. Uniqueness is the ratio of duplicate molecules to valid molecules, and Novelty is the ratio of molecules that are not included in the training dataset to those included.
</p>
      <p id="Par32">Optimization results are shown in Table <xref rid="Tab1" ref-type="table">1</xref>. Our model shows sufficient results in both the QED and PLogP optimization tasks. In particular, the “Multi” model produces molecules with better scores than the “Single” model. This result is also shown in Fig. <xref rid="Fig5" ref-type="fig">5</xref>. The distribution of the QED/PLogP score of seed molecules shifted towards a higher score. This can be confirmed from Fig. <xref rid="Fig6" ref-type="fig">6</xref>, which shows that the “Multi” model generates molecules with higher scores as the number of steps increases. The distribution of similarity between the generated molecules and the seed molecules in Fig. <xref rid="Fig6" ref-type="fig">6</xref> shows that the “Multi” model also generates molecules in regions where the “Single” model does not generate. Both the “Single” and “Multi” models generate molecules with relatively high similarity Additionally, the “Multi” model seeks higher-scoring molecules and expands the chemical space of generated molecules to a lower similarity region. The reason for this is that the “Multi” model can generate a molecule with changes occurring at multiple positions in SMILES as shown in Fig. <xref rid="Fig7" ref-type="fig">7</xref> because the seed is updated, however, the “Single” model cannot generate such a molecule because it inserts partial SMILES at only one position. <table-wrap id="Tab1"><label>Table 1</label><caption><p>The results of the optimization tasks</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" rowspan="2">Method</th><th align="left" colspan="4">Penalized LogP</th><th align="left" colspan="4">QED</th></tr><tr><th align="left">1st</th><th align="left">2nd</th><th align="left">3rd</th><th align="left">Validity</th><th align="left">1st</th><th align="left">2nd</th><th align="left">3rd</th><th align="left">Validity</th></tr></thead><tbody><tr><td align="left">ZINC</td><td char="." align="char">−9.41</td><td align="left">−</td><td align="left">−</td><td align="left">−</td><td char="." align="char">0.285</td><td align="left">−</td><td align="left">−</td><td align="left">−</td></tr><tr><td align="left">Single</td><td char="." align="char">−2.20</td><td align="left">−2.39</td><td align="left">−2.53</td><td align="left">29.8%</td><td char="." align="char">0.681</td><td align="left">0.671</td><td align="left">0.666</td><td align="left">62.6%</td></tr><tr><td align="left">Multi</td><td char="." align="char">11.33</td><td align="left">11.20</td><td align="left">11.10</td><td align="left">31.8%</td><td char="." align="char">0.920</td><td align="left">0.915</td><td align="left">0.912</td><td align="left">77.0 %</td></tr></tbody></table><table-wrap-foot><p>The mean of the top 3 highest scored Penalized LogP and QED scores of the validation set and the validity rate are described</p></table-wrap-foot></table-wrap><fig id="Fig5"><label>Fig. 5</label><caption><p>Distributions of generated molecules The distribution of the seed and generated molecules for each model and metrics. Blue: seed molecules, red: generated molecules</p></caption><graphic xlink:href="13321_2021_572_Fig5_HTML" id="MO9"/></fig><fig id="Fig6"><label>Fig. 6</label><caption><p>Example of optimization results for a molecule The optimization result from one randomly chosen compound. <bold>a</bold> The distribution of similarity to the seed molecule of generated molecules by our models. Blue: Multi model, red: Single model. <bold>b</bold> Moving average of QED with 20 steps. Blue: Multi model, red: Single model</p></caption><graphic xlink:href="13321_2021_572_Fig6_HTML" id="MO10"/></fig><fig id="Fig7"><label>Fig. 7</label><caption><p>Differences in SMILES generated by each model Molecules generated by two models, showing the difference in terms of structure and SMILES. <bold>a</bold> Seed molecule. <bold>b</bold> Molecules generated by the “Multi” model and <bold>c</bold> molecules generated by the “Single” model. The red outlines in the molecular structures and the red character string in SMILES are changes from molecule (<bold>a</bold>). Note that deleted parts from the seed molecule during molecule generation are not highlighted in this figure</p></caption><graphic xlink:href="13321_2021_572_Fig7_HTML" id="MO12"/></fig></p>
      <p id="Par33">The results for the group of all generated molecules are shown in Table <xref rid="Tab2" ref-type="table">2</xref>. Although validity is low, both uniqueness and novelty are high. The specific structures of the generated molecules are shown in Fig. <xref rid="Fig8" ref-type="fig">8</xref>. For each stating point molecule, molecules with high scores and different structures are generated. The values of the validity ratios differed considerably depending on the evaluation function. This is because the molecules generated by the PLogP optimization are larger; therefore, the search space is wider, and many invalid molecules are generated. In this manner, the evaluation function itself also affects the performance. <fig id="Fig8"><label>Fig. 8</label><caption><p>Structures of seed molecules and generated molecules In each row, molecule in the first column is the seed molecule, and generated molecules are shown in row. These molecules are generated by the “Multi” model that replaces seed molecules with generated molecules, with changing replace point at a certain number of steps. The QED score for each molecule is shown under the molecule</p></caption><graphic xlink:href="13321_2021_572_Fig8_HTML" id="MO13"/></fig><table-wrap id="Tab2"><label>Table 2</label><caption><p>Mean property of all generated molecules for 200 validation compounds</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"/><th align="left">Validity</th><th align="left">Uniqueness</th><th align="left">Novelty</th></tr></thead><tbody><tr><td align="left">PLogP-Single</td><td char="." align="char">0.298</td><td char="." align="char">0.981</td><td char="." align="char">1.0</td></tr><tr><td align="left">PLogP-Multi</td><td char="." align="char">0.318</td><td char="." align="char">0.991</td><td char="." align="char">1.0</td></tr><tr><td align="left">QED-Single</td><td char="." align="char">0.626</td><td char="." align="char">0.945</td><td char="." align="char">0.999</td></tr><tr><td align="left">QED-Multi</td><td char="." align="char">0.770</td><td char="." align="char">0.958</td><td char="." align="char">0.999</td></tr></tbody></table><table-wrap-foot><p>Validity, uniqueness and novelty of all generated molecules are shown for four models. Validity is the ratio of valid SMILES to all generated SMILES. Uniqueness is the ratio of non-duplicate molecules to all valid molecules. Novelty is the ratio of molecules that are not included in the training dataset to all valid molecules</p></table-wrap-foot></table-wrap></p>
      <p id="Par34">It is observed that the properties of molecules generated by the “Multi” model improve with each step. The number of steps for each iteration is 10,000, and the number of iterations is 5. We obtained good results from this experiment; however, these parameters are not optimum. Therefore, we need to investigate the relation between molecules and the hyperparameters of the “Multi” model, such as the number of steps and selection policy of the next seed molecule, in order to generate better molecules.</p>
    </sec>
    <sec id="Sec12">
      <title>Comparison with conventional methods of constrained optimization</title>
      <p id="Par35">The results of constrained optimization are shown in Table <xref rid="Tab3" ref-type="table">3</xref>. The left column shows the difference in PLogP between the original molecule and the generated molecule with the highest PLogP as Improvement. Our method outperforms others in terms of the properties of molecules. However, success rate, which is the percentage of molecules with similarity above a threshold and improved PLogP, is worse than GCPN. Note that in GCPN, the policy is updated sequentially, while our method has a fixed policy. Thus, our method shows consistent results even when the number of evaluation steps is less (i.e., when optimizing properties that require considerable time to evaluate, such as DFT-based physicochemical values requiring several hours to calculate [<xref ref-type="bibr" rid="CR37">37</xref>]).<table-wrap id="Tab3"><label>Table 3</label><caption><p>Results of constrained optimization for 800 validation molecules</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" rowspan="2"><inline-formula id="IEq15"><alternatives><tex-math id="M39">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\delta$$\end{document}</tex-math><mml:math id="M40"><mml:mi>δ</mml:mi></mml:math><inline-graphic xlink:href="13321_2021_572_Article_IEq15.gif"/></alternatives></inline-formula></th><th align="left" colspan="3">GCPN</th><th align="left" colspan="3">Mol-CycleGAN</th><th align="left" colspan="3">MERMAID</th></tr><tr><th align="left">Improvement</th><th align="left">Similarity</th><th align="left">Success (%)</th><th align="left">Improvement</th><th align="left">Similarity</th><th align="left">Success (%)</th><th align="left">Improvement</th><th align="left">Similarity</th><th align="left">Success (%)</th></tr></thead><tbody><tr><td align="left">0.2</td><td char="±" align="char">4.12 ± 1.19</td><td char="±" align="char">0.34 ± 0.11</td><td char="." align="char">100</td><td char="±" align="char">5.79 ± 2.35</td><td char="±" align="char">0.30 ± 0.11</td><td char="." align="char">93.8</td><td char="±" align="char">9.94 ± 2.74</td><td char="±" align="char">0.23 ± 0.04</td><td char="." align="char">100.0</td></tr><tr><td align="left">0.4</td><td char="±" align="char">2.49 ± 1.30</td><td char="±" align="char">0.47 ± 0.08</td><td char="." align="char">100</td><td char="±" align="char">2.89 ± 2.08</td><td char="±" align="char">0.52 ± 0.10</td><td char="." align="char">58.8</td><td char="±" align="char">6.04 ± 2.29</td><td char="±" align="char">0.42 ± 0.02</td><td char="." align="char">100.0</td></tr><tr><td align="left">0.6</td><td char="±" align="char">0.79 ± 0.63</td><td char="±" align="char">0.68 ± 0.08</td><td char="." align="char">100</td><td char="±" align="char">1.22 ± 1.48</td><td char="±" align="char">0.69 ± 0.07</td><td char="." align="char">19.3</td><td char="±" align="char">1.99 ± 1.74</td><td char="±" align="char">0.62 ± 0.02</td><td char="." align="char">85.3</td></tr></tbody></table><table-wrap-foot><p>The results of GCPN and Mol-CycleGAN are cited from Maziarka et al. [<xref ref-type="bibr" rid="CR36">36</xref>]. The mean and standard deviation of improvement, similarity, and success rate of generated molecules are shown</p></table-wrap-foot></table-wrap></p>
    </sec>
  </sec>
  <sec id="Sec13">
    <title>Discussion</title>
    <p id="Par36">In this experiment, we demonstrated that our method performs well in common tasks (QED and PLogP optimization with ZINC dataset and constrained similarity optimization); however, it can be used for various other tasks as well. To use this method, two areas require modification by the user: the evaluation function and the training data. For the evaluation function, all possible evaluation values that can be calculated from SMILES are available, and the user must design an appropriate evaluation function by combining these based on knowledge of the target task. The training data does not necessarily require modification by the user, as the purpose of training is to capture the features of partial SMILES and because the evaluation values are not directly related to training. Nevertheless, some types of tasks may bias the structure of relevant molecules; in such cases, optimization will improve efficiency if the user prepares the training data in advance.</p>
    <p id="Par37">As shown in the experimental results, our method produces molecules that improve the evaluation function value. Therefore, it is important to design the evaluation function carefully to avoid generating molecules that deviate from the seed molecule or have chemically unnatural structures.</p>
    <p id="Par38">Future work will focus on several approaches for fundamentally addressing these challenges, such as adding restrictions based on SMILES grammar to the substitution method. Molecular generation, starting from a specific molecule, has an important role in real-world applications; however, it has not been sufficiently studied compared with other types of molecular generation (generation from nothing). Hence, this study aimed to contribute toward filling this gap.</p>
  </sec>
  <sec id="Sec14">
    <title>Conclusions</title>
    <p id="Par39">In this paper, we developed a generative model based on MCTS and RNN to generate derivative molecules starting from a specific molecule. This model generates molecules by generating partial SMILES using MCTS and RNN and replacing it with part of SMILES of the seed molecule. In addition, we propose “Single” and “Multi” models. Unlike the “Single” model, the “Multi” model replaces the seed molecule with one of the generated molecules at a certain number of steps. As a result, it was demonstrated that the “Multi” model is superior to the “Single” model in terms of optimizing the QED score. Additionally, molecules generated by our model have high uniqueness and novelty, and the chemical space consisting of generated molecules is large in terms of similarity and molecular weight.</p>
  </sec>
</body>
<back>
  <ack>
    <title>Acknowledgements</title>
    <p>This work was partially supported by the Platform Project for Supporting Drug Discovery and Life Science Research (Basis for Supporting Innovative Drug Discovery and Life Science Research (BINDS)) from AMED under Grant Number JP20am0101112 and the Japan Society for the Promotion of Science (JSPS) KAKENHI Grant Numbers 20H00620 (To M.S.).</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors' contributions</title>
    <p>MS conceived the project, DE developed software, and NY supported experiment. DE wrote the manuscript. All authors read and approved the final manuscript.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>MERMAID is freely available at <ext-link ext-link-type="uri" xlink:href="https://github.com/sekijima-lab/mermaid">https://github.com/sekijima-lab/mermaid</ext-link>.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar2" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par44">The authors declare no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <mixed-citation publication-type="other">PhRMA: Biopharmaceuticals in perspective summer 2019 (2019). <ext-link ext-link-type="uri" xlink:href="https://www.phrma.org/-/media/Project/PhRMA/PhRMA-Org/PhRMA-Org/PDF/P-R/PhRMA_2019_ChartPack_Final.pdf">https://www.phrma.org/-/media/Project/PhRMA/PhRMA-Org/PhRMA-Org/PDF/P-R/PhRMA_2019_ChartPack_Final.pdf</ext-link> (visited: 2021-3-22)</mixed-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mullard</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>New drugs cost US $2.6 billion to develop</article-title>
        <source>Nat Rev Drug Discov</source>
        <year>2014</year>
        <volume>13</volume>
        <issue>12</issue>
        <fpage>877</fpage>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <mixed-citation publication-type="other">Varma H, Lo D, Stockwell B (2010) High-throughput and high-content screening for huntington’s disease therapeutics. In: Neurobiology of Huntington’s Disease. CRC Press, Amsterdam; pp. 121–14. 10.1201/ebk0849390005-c5</mixed-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Schneider</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>Virtual screening: an endless staircase?</article-title>
        <source>Nat Rev Drug Discov</source>
        <year>2010</year>
        <volume>9</volume>
        <issue>4</issue>
        <fpage>273</fpage>
        <lpage>276</lpage>
        <pub-id pub-id-type="doi">10.1038/nrd3139</pub-id>
        <?supplied-pmid 20357802?>
        <pub-id pub-id-type="pmid">20357802</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chiba</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Ikeda</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Ishida</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Gromiha</surname>
            <given-names>MM</given-names>
          </name>
          <name>
            <surname>Taguchi</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Iwadate</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Umeyama</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Hsin</surname>
            <given-names>K-Y</given-names>
          </name>
          <name>
            <surname>Kitano</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Yamamoto</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Sugaya</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Kato</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Okuno</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Chikenji</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Mochizuki</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Yasuo</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Yoshino</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Yanagisawa</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Ban</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Teramoto</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Ramakrishnan</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Thangakani</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Velmurugan</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Prathipati</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Ito</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Tsuchiya</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Mizuguchi</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Honma</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Sekijima</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Identification of potential inhibitors based on compound proposal contest: tyrosine-protein kinase Yes as a target</article-title>
        <source>Sci Rep</source>
        <year>2015</year>
        <volume>5</volume>
        <fpage>17209</fpage>
        <pub-id pub-id-type="doi">10.1038/srep17209</pub-id>
        <pub-id pub-id-type="pmid">26607293</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chiba</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Ishida</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Ikeda</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Mochizuki</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Teramoto</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Taguchi</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Iwadate</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Umeyama</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Ramakrishnan</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Thangakani</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Velmurugan</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Gromiha</surname>
            <given-names>MM</given-names>
          </name>
          <name>
            <surname>Okuno</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Kato</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Minami</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Chikenji</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Suzuki</surname>
            <given-names>SD</given-names>
          </name>
          <name>
            <surname>Yanagisawa</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Shin</surname>
            <given-names>W-H</given-names>
          </name>
          <name>
            <surname>Kihara</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Yamamoto</surname>
            <given-names>KZ</given-names>
          </name>
          <name>
            <surname>Moriwaki</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Yasuo</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Yoshino</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Zozulya</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Borysko</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Stavniichuk</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Honma</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Hirokawa</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Akiyama</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Sekijima</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>An iterative compound screening contest method for identifying target protein inhibitors using the tyrosine-protein kinase yes</article-title>
        <source>Sci Rep</source>
        <year>2017</year>
        <volume>7</volume>
        <issue>1</issue>
        <fpage>12038</fpage>
        <pub-id pub-id-type="doi">10.1038/s41598-017-10275-4</pub-id>
        <pub-id pub-id-type="pmid">28931921</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chiba</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Ohue</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Gryniukova</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Borysko</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Zozulya</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Yasuo</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Yoshino</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Ikeda</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Shin</surname>
            <given-names>W-H</given-names>
          </name>
          <name>
            <surname>Kihara</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Iwadate</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Umeyama</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Ichikawa</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Teramoto</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Hsin</surname>
            <given-names>K-Y</given-names>
          </name>
          <name>
            <surname>Gupta</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Kitano</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Sakamoto</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Higuchi</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Miura</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Yura</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Mochizuki</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Ramakrishnan</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Thangakani</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Velmurugan</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Gromiha</surname>
            <given-names>MM</given-names>
          </name>
          <name>
            <surname>Nakane</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Uchida</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Hakariya</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Tan</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Nakamura</surname>
            <given-names>HK</given-names>
          </name>
          <name>
            <surname>Suzuki</surname>
            <given-names>SD</given-names>
          </name>
          <name>
            <surname>Ito</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Kawatani</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Kudoh</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Takashina</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Yamamoto</surname>
            <given-names>KZ</given-names>
          </name>
          <name>
            <surname>Moriwaki</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Oda</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Kobayashi</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Okuno</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Minami</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Chikenji</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Prathipati</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Nagao</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Mohsen</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Ito</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Mizuguchi</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Honma</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Ishida</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Hirokawa</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Akiyama</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Sekijima</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>A prospective compound screening contest identified broader inhibitors for sirtuin 1</article-title>
        <source>Sci Rep</source>
        <year>2019</year>
        <pub-id pub-id-type="doi">10.1038/s41598-019-55069-y</pub-id>
        <?supplied-pmid 31882726?>
        <pub-id pub-id-type="pmid">31882726</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rao</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Srinivas</surname>
            <given-names>K</given-names>
          </name>
        </person-group>
        <article-title>Modern drug discovery process: an in silico approach</article-title>
        <source>J Bioinform Sequence Anal</source>
        <year>2011</year>
        <volume>3</volume>
        <issue>5</issue>
        <fpage>89</fpage>
        <lpage>94</lpage>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Leung</surname>
            <given-names>K-S</given-names>
          </name>
          <name>
            <surname>Wong</surname>
            <given-names>M-H</given-names>
          </name>
          <name>
            <surname>Ballester</surname>
            <given-names>PJ</given-names>
          </name>
        </person-group>
        <article-title>Improving AutoDock vina using random forest: The growing accuracy of binding affinity prediction by the effective exploitation of larger data sets</article-title>
        <source>Mol Inform</source>
        <year>2015</year>
        <volume>34</volume>
        <issue>2–3</issue>
        <fpage>115</fpage>
        <lpage>126</lpage>
        <pub-id pub-id-type="doi">10.1002/minf.201400132</pub-id>
        <?supplied-pmid 27490034?>
        <pub-id pub-id-type="pmid">27490034</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ragoza</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Hochuli</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Idrobo</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Sunseri</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Koes</surname>
            <given-names>DR</given-names>
          </name>
        </person-group>
        <article-title>Protein–ligand scoring with convolutional neural networks</article-title>
        <source>J Chem Inform Modeling</source>
        <year>2017</year>
        <volume>57</volume>
        <issue>4</issue>
        <fpage>942</fpage>
        <lpage>957</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jcim.6b00740</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yasuo</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Sekijima</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Improved method of structure-based virtual screening via interaction-energy-based learning</article-title>
        <source>J Chem Inform Modeling</source>
        <year>2019</year>
        <volume>59</volume>
        <issue>3</issue>
        <fpage>1050</fpage>
        <lpage>1061</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jcim.8b00673</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <mixed-citation publication-type="other">Yasuo N, Nakashima Y, Sekijima M (2018) CoDe-DTI: collaborative deep learning-based drug-target interaction predictior. In: 2018 IEEE International Conference on Bioinformatics and Biomedicine (BIBM). IEEE, NewYork, pp. 792–797</mixed-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Elton</surname>
            <given-names>DC</given-names>
          </name>
          <name>
            <surname>Boukouvalas</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Fuge</surname>
            <given-names>MD</given-names>
          </name>
          <name>
            <surname>Chung</surname>
            <given-names>PW</given-names>
          </name>
        </person-group>
        <article-title>Deep learning for molecular design-a review of the state of the art</article-title>
        <source>Mol Syst Design Eng</source>
        <year>2019</year>
        <volume>4</volume>
        <issue>4</issue>
        <fpage>828</fpage>
        <lpage>849</lpage>
        <pub-id pub-id-type="doi">10.1039/C9ME00039A</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Elton</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Boukouvalas</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Fuge</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Chung</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Deep learning for molecular design—a review of the state of the art</article-title>
        <source>Mol Syst Design Eng</source>
        <year>2019</year>
        <pub-id pub-id-type="doi">10.1039/C9ME00039A</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sanchez-Lengeling</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Aspuru-Guzik</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Inverse molecular design using machine learning: generative models for matter engineering</article-title>
        <source>Science</source>
        <year>2018</year>
        <volume>361</volume>
        <issue>6400</issue>
        <fpage>360</fpage>
        <pub-id pub-id-type="doi">10.1126/science.aat2663</pub-id>
        <?supplied-pmid 30049875?>
        <pub-id pub-id-type="pmid">30049875</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gómez-Bombarelli</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Wei</surname>
            <given-names>JN</given-names>
          </name>
          <name>
            <surname>Duvenaud</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Hernández-Lobato</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Sánchez-Lengeling</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Sheberla</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Aguilera-Iparraguirre</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Hirzel</surname>
            <given-names>TD</given-names>
          </name>
          <name>
            <surname>Adams</surname>
            <given-names>RP</given-names>
          </name>
          <name>
            <surname>Aspuru-Guzik</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Automatic chemical design using a data-driven continuous representation of molecules</article-title>
        <source>ACS Central Sci</source>
        <year>2018</year>
        <volume>4</volume>
        <issue>2</issue>
        <fpage>268</fpage>
        <lpage>276</lpage>
        <pub-id pub-id-type="doi">10.1021/acscentsci.7b00572</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Segler</surname>
            <given-names>MHS</given-names>
          </name>
          <name>
            <surname>Kogej</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Tyrchan</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Waller</surname>
            <given-names>MP</given-names>
          </name>
        </person-group>
        <article-title>Generating focused molecule libraries for drug discovery with recurrent neural networks</article-title>
        <source>ACS Central Sci</source>
        <year>2018</year>
        <volume>4</volume>
        <issue>1</issue>
        <fpage>120</fpage>
        <lpage>131</lpage>
        <pub-id pub-id-type="doi">10.1021/acscentsci.7b00512</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Winter</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Montanari</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Steffen</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Briem</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Noé</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Clevert</surname>
            <given-names>D-A</given-names>
          </name>
        </person-group>
        <article-title>Efficient multi-objective molecular optimization in a continuous latent space</article-title>
        <source>Chem Sci.</source>
        <year>2019</year>
        <volume>10</volume>
        <fpage>8016</fpage>
        <lpage>8024</lpage>
        <pub-id pub-id-type="doi">10.1039/C9SC01928F</pub-id>
        <?supplied-pmid 31853357?>
        <pub-id pub-id-type="pmid">31853357</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gao</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Nguyen</surname>
            <given-names>DD</given-names>
          </name>
          <name>
            <surname>Tu</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Wei</surname>
            <given-names>G-W</given-names>
          </name>
        </person-group>
        <article-title>Generative network complex for the automated generation of drug-like molecules</article-title>
        <source>J Chem Inform Model</source>
        <year>2020</year>
        <volume>60</volume>
        <issue>12</issue>
        <fpage>5682</fpage>
        <lpage>5698</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jcim.0c00599</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yang</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Yoshizoe</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Terayama</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Tsuda</surname>
            <given-names>K</given-names>
          </name>
        </person-group>
        <article-title>Chemts: an efficient python library for de novo molecular generation</article-title>
        <source>Sci Technol Adv Mater</source>
        <year>2017</year>
        <volume>18</volume>
        <issue>1</issue>
        <fpage>972</fpage>
        <lpage>976</lpage>
        <pub-id pub-id-type="doi">10.1080/14686996.2017.1401424</pub-id>
        <?supplied-pmid 29435094?>
        <pub-id pub-id-type="pmid">29435094</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <mixed-citation publication-type="other">Goodfellow IJ, Pouget-Abadie J, Mirza M, Xu B, Warde-Farley D, Ozair S, Courville A, Bengio Y (2014) Generative adversarial nets. In: Proceedings of the 27th International Conference on Neural Information Processing Systems - Volume 2. NIPS’14. MIT Press, Cambridge, pp. 2672–2680</mixed-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <mixed-citation publication-type="other">Kingma DP, Welling M (2013) Auto-encoding variational Bayes. cite <ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/1312.6114">arxiv:1312.6114</ext-link>. <ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/1312.6114">http://arxiv.org/abs/1312.6114</ext-link></mixed-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jin</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Barzilay</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Jaakkola</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <source>Junction tree variational autoencoder for molecular graph generation</source>
        <year>2018</year>
        <volume>80</volume>
        <fpage>2323</fpage>
        <lpage>2332</lpage>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhou</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Kearnes</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Zare</surname>
            <given-names>RN</given-names>
          </name>
          <name>
            <surname>Riley</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Optimization of molecules via deep reinforcement learning</article-title>
        <source>Sci Rep</source>
        <year>2019</year>
        <volume>9</volume>
        <issue>1</issue>
        <fpage>10752</fpage>
        <pub-id pub-id-type="doi">10.1038/s41598-019-47148-x</pub-id>
        <?supplied-pmid 31341196?>
        <pub-id pub-id-type="pmid">31341196</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <mixed-citation publication-type="other">Shi C, Xu M, Zhu Z, Zhang W, Zhang M, Tang J (2020) GraphAF: a flow-based autoregressive model for molecular graph generation</mixed-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <mixed-citation publication-type="other">Simonovsky M, Komodakis N (2018) Graphvae: towards generation of small graphs using variational autoencoders. In: 27th International Conference on Artificial Neural Networks, Rhodes, Greece, October 4–7, 2018, Proceedings, Part I. pp. 412–422</mixed-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <mixed-citation publication-type="other">De Cao N, Kipf T (2018) MolGAN: an implicit generative model for small molecular graphs. ICML 2018 workshop on Theoretical Foundations and Applications of Deep Generative Models</mixed-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <mixed-citation publication-type="other">Jin W, Barzilay R, Jaakkola T (2020) Hierarchical generation of molecular graphs using structural motifs</mixed-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <mixed-citation publication-type="other">You J, Liu B, Ying R, Pande V, Leskovec J (2018) Graph convolutional policy network for goal-directed molecular graph generation. In: Proceedings of the 32nd International Conference on Neural Information Processing Systems. NIPS’18. Curran Associates Inc., Red Hook, pp. 6412–6422</mixed-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <mixed-citation publication-type="other">Coulom R (2006) Efficient selectivity and backup operators in monte-carlo tree search. Proceedings of the 5th international conference on Computers and games, 72–83</mixed-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Browne</surname>
            <given-names>CB</given-names>
          </name>
          <name>
            <surname>Powley</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Whitehouse</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Lucas</surname>
            <given-names>SM</given-names>
          </name>
          <name>
            <surname>Cowling</surname>
            <given-names>PI</given-names>
          </name>
          <name>
            <surname>Rohlfshagen</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Tavener</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Perez</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Samothrakis</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Colton</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>A survey of monte carlo tree search methods</article-title>
        <source>IEEE Trans Comput Intell AI Games</source>
        <year>2012</year>
        <volume>4</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>43</lpage>
        <pub-id pub-id-type="doi">10.1109/TCIAIG.2012.2186810</pub-id>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <mixed-citation publication-type="other">Kocsis L, Szepesvári C (2006) Bandit based monte-carlo planning. In: Fürnkranz J, Scheffer T, Spiliopoulou M, eds. Machine Learning: ECML. Springer, Berlin, pp. 282–293</mixed-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hochreiter</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Schmidhuber</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Long short-term memory</article-title>
        <source>Neural Comput.</source>
        <year>1997</year>
        <volume>9</volume>
        <issue>8</issue>
        <fpage>1735</fpage>
        <lpage>1780</lpage>
        <pub-id pub-id-type="doi">10.1162/neco.1997.9.8.1735</pub-id>
        <?supplied-pmid 9377276?>
        <pub-id pub-id-type="pmid">9377276</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <mixed-citation publication-type="other">Kingma DP, Ba J (2017) Adam: a method for stochastic Opoimization. <ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/1412.6980">http://arxiv.org/abs/1412.69801412.6980</ext-link></mixed-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bickerton</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Paolini</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Besnard</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Muresan</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Hopkins</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Quantifying the chemical beauty of drugs</article-title>
        <source>Nat Chem</source>
        <year>2012</year>
        <volume>4</volume>
        <fpage>90</fpage>
        <lpage>8</lpage>
        <pub-id pub-id-type="doi">10.1038/nchem.1243</pub-id>
        <?supplied-pmid 22270643?>
        <pub-id pub-id-type="pmid">22270643</pub-id>
      </element-citation>
    </ref>
    <ref id="CR36">
      <label>36.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Maziarka</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Pocha</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Kaczmarczyk</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Rataj</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Danel</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Warchol</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Mol-cyclegan: a generative model for molecular optimization</article-title>
        <source>J Cheminform</source>
        <year>2020</year>
        <volume>12</volume>
        <issue>1</issue>
        <fpage>2</fpage>
        <pub-id pub-id-type="doi">10.1186/s13321-019-0404-1</pub-id>
        <?supplied-pmid 33431006?>
        <pub-id pub-id-type="pmid">33431006</pub-id>
      </element-citation>
    </ref>
    <ref id="CR37">
      <label>37.</label>
      <mixed-citation publication-type="other">Senn H, Thiel W (2009) Qm/mm methods for biomolecular systems. angew chem int ed 48:1198. Angewandte Chemie (International ed. in English) 48, 1198–229. 10.1002/anie.200802019</mixed-citation>
    </ref>
  </ref-list>
</back>

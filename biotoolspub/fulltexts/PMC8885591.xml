<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v2.3 20070202//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName journalpublishing.dtd?>
<?SourceDTD.Version 2.3?>
<?ConverterInfo.XSLTName nlm2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Front Neuroinform</journal-id>
    <journal-id journal-id-type="iso-abbrev">Front Neuroinform</journal-id>
    <journal-id journal-id-type="publisher-id">Front. Neuroinform.</journal-id>
    <journal-title-group>
      <journal-title>Frontiers in Neuroinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1662-5196</issn>
    <publisher>
      <publisher-name>Frontiers Media S.A.</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">8885591</article-id>
    <article-id pub-id-type="doi">10.3389/fninf.2022.828787</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Neuroscience</subject>
        <subj-group>
          <subject>Technology and Code</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>The Brain Observatory Storage Service and Database (<monospace>BossDB</monospace>): A Cloud-Native Approach for Petascale Neuroscience Discovery</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Hider</surname>
          <given-names>Robert</given-names>
          <suffix>Jr.</suffix>
        </name>
        <xref rid="fn001" ref-type="author-notes">
          <sup>†</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Kleissas</surname>
          <given-names>Dean</given-names>
        </name>
        <xref rid="fn001" ref-type="author-notes">
          <sup>†</sup>
        </xref>
        <uri xlink:href="http://loop.frontiersin.org/people/91400/overview"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Gion</surname>
          <given-names>Timothy</given-names>
        </name>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Xenes</surname>
          <given-names>Daniel</given-names>
        </name>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Matelsky</surname>
          <given-names>Jordan</given-names>
        </name>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Pryor</surname>
          <given-names>Derek</given-names>
        </name>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Rodriguez</surname>
          <given-names>Luis</given-names>
        </name>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Johnson</surname>
          <given-names>Erik C.</given-names>
        </name>
        <uri xlink:href="http://loop.frontiersin.org/people/1026932/overview"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Gray-Roncal</surname>
          <given-names>William</given-names>
        </name>
        <xref rid="fn001" ref-type="author-notes">
          <sup>†</sup>
        </xref>
        <uri xlink:href="http://loop.frontiersin.org/people/91385/overview"/>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Wester</surname>
          <given-names>Brock</given-names>
        </name>
        <xref rid="c001" ref-type="corresp">
          <sup>*</sup>
        </xref>
        <xref rid="fn001" ref-type="author-notes">
          <sup>†</sup>
        </xref>
        <uri xlink:href="http://loop.frontiersin.org/people/42803/overview"/>
      </contrib>
    </contrib-group>
    <aff><institution>Research and Exploratory Development Department, Johns Hopkins University Applied Physics Laboratory</institution>, <addr-line>Laurel, MD</addr-line>, <country>United States</country></aff>
    <author-notes>
      <fn fn-type="edited-by">
        <p>Edited by: William T. Katz, Janelia Research Campus, United States</p>
      </fn>
      <fn fn-type="edited-by">
        <p>Reviewed by: Yongsoo Kim, Penn State Milton S. Hershey Medical Center, United States; Pat Gunn, Flatiron Institute, United States</p>
      </fn>
      <corresp id="c001">*Correspondence: Brock Wester <email>brock.wester@jhuapl.edu</email></corresp>
      <fn fn-type="equal" id="fn001">
        <p>†These authors have contributed equally to this work</p>
      </fn>
    </author-notes>
    <pub-date pub-type="epub">
      <day>15</day>
      <month>2</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2022</year>
    </pub-date>
    <volume>16</volume>
    <elocation-id>828787</elocation-id>
    <history>
      <date date-type="received">
        <day>04</day>
        <month>12</month>
        <year>2021</year>
      </date>
      <date date-type="accepted">
        <day>10</day>
        <month>1</month>
        <year>2022</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright © 2022 Hider, Kleissas, Gion, Xenes, Matelsky, Pryor, Rodriguez, Johnson, Gray-Roncal and Wester.</copyright-statement>
      <copyright-year>2022</copyright-year>
      <copyright-holder>Hider, Kleissas, Gion, Xenes, Matelsky, Pryor, Rodriguez, Johnson, Gray-Roncal and Wester</copyright-holder>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License (CC BY). The use, distribution or reproduction in other forums is permitted, provided the original author(s) and the copyright owner(s) are credited and that the original publication in this journal is cited, in accordance with accepted academic practice. No use, distribution or reproduction is permitted which does not comply with these terms.</license-p>
      </license>
    </permissions>
    <abstract>
      <p>Technological advances in imaging and data acquisition are leading to the development of petabyte-scale neuroscience image datasets. These large-scale volumetric datasets pose unique challenges since analyses often span the entire volume, requiring a unified platform to access it. In this paper, we describe the Brain Observatory Storage Service and Database (<monospace>BossDB</monospace>), a cloud-based solution for storing and accessing petascale image datasets. <monospace>BossDB</monospace> provides support for data ingest, storage, visualization, and sharing through a RESTful Application Programming Interface (API). A key feature is the scalable indexing of spatial data and automatic and manual annotations to facilitate data discovery. Our project is open source and can be easily and cost effectively used for a variety of modalities and applications, and has effectively worked with datasets over a petabyte in size.</p>
    </abstract>
    <kwd-group>
      <kwd>connectome</kwd>
      <kwd>software</kwd>
      <kwd>cloud</kwd>
      <kwd>data</kwd>
      <kwd>storage</kwd>
      <kwd>imaging</kwd>
      <kwd>electron microscopy</kwd>
      <kwd>X-ray</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source id="cn001">
          <institution-wrap>
            <institution>National Institutes of Health</institution>
            <institution-id institution-id-type="doi">10.13039/100000002</institution-id>
          </institution-wrap>
        </funding-source>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source id="cn002">
          <institution-wrap>
            <institution>Intelligence Advanced Research Projects Activity</institution>
            <institution-id institution-id-type="doi">10.13039/100011039</institution-id>
          </institution-wrap>
        </funding-source>
      </award-group>
    </funding-group>
    <counts>
      <fig-count count="12"/>
      <table-count count="2"/>
      <equation-count count="0"/>
      <ref-count count="25"/>
      <page-count count="13"/>
      <word-count count="6802"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec sec-type="intro" id="s1">
    <title>1. Introduction</title>
    <p>Mapping the brain to better understand cognitive processes and the biological basis for disease is a fundamental challenge of the BRAIN Initiative. Technological advances in neuroimaging have grown rapidly over the last ten years, making it almost routine to image high-resolution (sub-micron) brain volumes in many laboratories around the world using Electron Microscopy (EM) and X-Ray Microtomography (XRM), among other imaging modalities (Bock et al., <xref rid="B2" ref-type="bibr">2011</xref>; Helmstaedter et al., <xref rid="B8" ref-type="bibr">2013</xref>; Kasthuri et al., <xref rid="B9" ref-type="bibr">2015</xref>; Lee et al., <xref rid="B11" ref-type="bibr">2016</xref>; Dupre and Yuste, <xref rid="B5" ref-type="bibr">2017</xref>; Witvliet et al., <xref rid="B25" ref-type="bibr">2021</xref>). These datasets, which provide the means to resolve individual neurons and the individual connections (synapses) between them, are highly valuable for providing key insights into neural connectivity and neuroanatomical features. As these high resolution neuroimaging volumes grow in extent, however, substantial challenges have emerged, including efficient data storage, the computational and financial cost of indexing and querying, and the technical difficulty of big-data visualization (Helmstaedter et al., <xref rid="B8" ref-type="bibr">2013</xref>; Lichtman et al., <xref rid="B12" ref-type="bibr">2014</xref>).</p>
    <p>As new tools for interrogating neuroimaging datasets at high resolutions advance and become more common, a centralized data-access and data-processing paradigm is needed in order to take advantage of economies of scale when operating at the tera- to petascale level. While research groups are beginning to embrace data archives, most treat the system as simply a place to deposit finalized data, with raw datasets generated and stored in a custom format and analyzed and inspected with custom software. At increasing data scale, it is quickly becoming impossible for researchers to characterize many of the underlying properties. For many recently-generated image volumes approaching the petascale, it is likely that most of the dataset is never viewed in detail by a human. Additionally, conventional approaches for automatically or semi-automatically reconstructing neuronal maps focus on building methods for small volumes, and scaling these tools to operate on multi-terabyte or petabyte data volumes, is often significantly beyond the capabilities and budgets of a single research group.</p>
    <p>Large datasets are incredibly rich in scientific content which should be shared with others to best leverage the investment of time and resources, and to fully exploit the value of the data. Due to the challenges in collection, storage, and analysis of terascale and petascale data volumes, few public datasets of this size are routinely shared, even though many such volumes exist on local, private storage, and many petabytes of new data are anticipated in the future from programs like the BRAIN Initiative and other future large scale programming (Mikula, <xref rid="B16" ref-type="bibr">2016</xref>; Dorkenwald et al., <xref rid="B4" ref-type="bibr">2019</xref>; Wilson et al., <xref rid="B24" ref-type="bibr">2019</xref>; Morgan and Lichtman, <xref rid="B17" ref-type="bibr">2020</xref>; Scheffer et al., <xref rid="B21" ref-type="bibr">2020</xref>; Phelps et al., <xref rid="B18" ref-type="bibr">2021</xref>; Witvliet et al., <xref rid="B25" ref-type="bibr">2021</xref>).</p>
    <p>We considered use cases such as the first fully-automated pipelines for processing and assessing XRM (Dyer et al., <xref rid="B6" ref-type="bibr">2017</xref>) and EM datasets (Bock et al., <xref rid="B2" ref-type="bibr">2011</xref>; Kasthuri et al., <xref rid="B9" ref-type="bibr">2015</xref>; Lee et al., <xref rid="B11" ref-type="bibr">2016</xref>) and work by many academic laboratories around the world to understand state-of-the-art approaches and their limitations. We emphasize that high-performance and scalable data storage is an essential component of any modern connectomics effort, due to the need for rapid, multi-user data access. In designing our Brain Observatory Storage Service and Database (<monospace>BossDB</monospace>), we researched several related efforts, including DVID<xref rid="fn0001" ref-type="fn"><sup>1</sup></xref> (Katz and Plaza, <xref rid="B10" ref-type="bibr">2019</xref>) which excels in versioned terascale storage; CATMAID and Knossos (Saalfeld et al., <xref rid="B20" ref-type="bibr">2009</xref>; Helmstaedter et al., <xref rid="B7" ref-type="bibr">2011</xref>) which provide a mature manual annotation platform. We previously worked with NeuroData to develop ndstore (Burns et al., <xref rid="B3" ref-type="bibr">2013</xref>), which originated and implemented many of the design principles necessary to store and access high-dimensional imaging datasets. These principles include (1) an efficient internal data representation and associated spatial indexing scheme; (2) an API to remotely access services; and (3) MATLAB and Python toolkits to facilitate usability. Based on this prior research and an understanding of the evolving requirements driven by new and maturing imaging modalities, we created a robust, cloud-native petascale datastore with a number of services and support tools (<xref rid="F1" ref-type="fig">Figure 1</xref>).</p>
    <fig position="float" id="F1">
      <label>Figure 1</label>
      <caption>
        <p>A high-level schematic of <monospace>BossDB</monospace> platform.</p>
      </caption>
      <graphic xlink:href="fninf-16-828787-g0001" position="float"/>
    </fig>
  </sec>
  <sec sec-type="methods" id="s2">
    <title>2. Methods</title>
    <p>To enable large-scale, collaborative research we developed and deployed a cloud-native data archive to support the storage, analysis, and sharing of large spatial datasets. Service-oriented architectures have continued to grow in popularity and possess many appealing properties when designing a cloud-based data archive (Vogelstein et al., <xref rid="B22" ref-type="bibr">2016</xref>). Our solution, <monospace>BossDB</monospace>, is deployed within the Amazon Web Services (AWS) ecosystem and has been robustly designed to leverage cloud capabilities and ensure a highly-available, scalable, and cost-efficient system. Other research teams have previously deployed their own instantiations of <monospace>BossDB</monospace> (Vogelstein et al., <xref rid="B22" ref-type="bibr">2016</xref>; Dyer et al., <xref rid="B6" ref-type="bibr">2017</xref>).</p>
    <sec>
      <title>2.1. Spatial Database</title>
      <p>The spatial database is the foundation of <monospace>BossDB</monospace>, and uses the strengths of the cloud to efficiently store and index massive multi-dimensional image and annotation datasets (i.e., multi-channel 3D image volumes). A core concept is our managed storage hierarchy, which automatically migrates data between affordable, durable object storage (i.e., Amazon Simple Storage Service or S3) and an in-memory data store (i.e., Redis), which operates as read and write cache database for faster IO performance with a tradeoff of higher cost. The <monospace>BossDB</monospace> cache manages a lookup index to determine the fastest way to return data to the user, taking advantage of data stored in the hierarchy. While this requires the use of provisioned (non-serverless) resources, this allows for storage of large volumes at a low cost, while providing low latency to commonly accessed regions. We utilize AWS Lambda to perform parallel IO operations between the object store layer and memory cache layer and DynamoDB for indexing. These serverless technologies allow <monospace>BossDB</monospace> to rapidly and automatically scale resources during periods of heavy operation without incurring additional costs while idle.</p>
      <p>The <monospace>BossDB</monospace> spatial database is designed to store petascale, multi-dimensional image data (i.e., multi-channel three-dimensional image volumes, with optional time series support, <xref rid="F2" ref-type="fig">Figure 2</xref>) and associated coregistered voxel annotations (<xref rid="F3" ref-type="fig">Figure 3</xref>). In this context, voxel annotations are unsigned 64-bit integer (uint64) labels stored in a separate <italic>channel</italic> that is in the same coordinate frame as the source image data. Each unique uint64 value represents a unique <italic>object</italic> (e.g., neuron, synapse, organelle). A user can leverage annotations within various channels (e.g., “segmentation,” “mitochondria”) to create groups of voxels to define objects that have some semantic meaning, typically the result of manual annotation or automated processing. The database maintains an index of annotation locations, enabling efficient spatial querying and data retrieval (<xref rid="F4" ref-type="fig">Figure 4</xref>).</p>
      <fig position="float" id="F2">
        <label>Figure 2</label>
        <caption>
          <p>An illustration showing image slices (left) being composed into 3D cuboid volumes (middle). Arbitrary requests may be made to extract image regions of interest (right).</p>
        </caption>
        <graphic xlink:href="fninf-16-828787-g0002" position="float"/>
      </fig>
      <fig position="float" id="F3">
        <label>Figure 3</label>
        <caption>
          <p>An illustration showing <italic>annotations</italic>, composed of voxel labels (left) and how a unique annotation identifier can represent a unique <italic>object</italic> in the image data (right).</p>
        </caption>
        <graphic xlink:href="fninf-16-828787-g0003" position="float"/>
      </fig>
      <fig position="float" id="F4">
        <label>Figure 4</label>
        <caption>
          <p>An illustration showing how large 2D image slices generated by EM imaging are re-formatted as cuboids, which fit into a larger 3D volume, indexed using a <italic>z</italic>-order curve.</p>
        </caption>
        <graphic xlink:href="fninf-16-828787-g0004" position="float"/>
      </fig>
      <p>The internal representation of volumetric data utilizes small cuboids, or 3D chunks of data (i.e., 512 × 512 × 16 voxels, which can vary in dimension), which are stored in Amazon S3 as compressed C-order arrays. Cuboids are indexed using a Morton-order space-filling curve, which maps the 3D location of each cuboid to a single dimension. In addition, annotations are indexed so <monospace>BossDB</monospace> can quickly retrieve which annotation IDs exist in an individual cuboid, and in which cuboids a unique ID exists. With these indices, all of which are stored in auto-scaling Amazon DynamoDB tables, the <monospace>BossDB</monospace> API can provide spatial querying of annotations by ID and efficient retrieval of arbitrary data volumes. The database will also render and store a resolution hierarchy through downsampling of a dataset, which is critical for visualization applications to efficiently provide low-resolution views and useful when processing large datasets. The spatial database supports various bit-depths (including uint8, uint16 image channels and uint64 annotation channels) and we will provide additional bit-depth and data formats as needed.</p>
      <p>Additionally, <monospace>BossDB</monospace> is able to store various mesh files associated with voxel annotation channel ID values, including precomputed format (Maitin-Shepard, <xref rid="B13" ref-type="bibr">2021</xref>), which can be accessed through our API by visualization applications.</p>
    </sec>
    <sec>
      <title>2.2. Single Sign-On Identity Provider</title>
      <p>A centralized and standalone authentication server provides single sign-on functionality for <monospace>BossDB</monospace> and integrated tools and applications. This allows <monospace>BossDB</monospace> to control permissions internally and operate securely, while maintaining the ability to federate with other data archives in the future.</p>
      <p>We use the open source software package Keycloak as an identity provider to manage users and roles. We created a Django OpenID Connect plugin to simplify the integration of services with the SSO provider.</p>
      <p>Our identity provider server intentionally runs independently from the rest of <monospace>BossDB</monospace> system, forcing the <monospace>BossDB</monospace> API to authenticate just like any other SSO integrated tool or application, and making future federation with other data archives or authentication systems easy. The Keycloak server is deployed in an auto-scaling group that sits behind an Elastic Load Balancer in order to achieve high-throughput database requests with minimal latency.</p>
    </sec>
    <sec>
      <title>2.3. Application Programming Interface</title>
      <p>As the primary interface to <monospace>BossDB</monospace>, the API provides a collection of versioned, RESTful web services. It enforces access permissions and organizes data in a logical data model for spatial and functional results. Because the API is versioned, the <monospace>BossDB</monospace> storage engine can support significant changes while still maintaining backwards compatibility with legacy applications and tools. This <monospace>BossDB</monospace> API was designed from first principles to be versioned, and so this feature adds little in the way of day-to-day engineering complexity. All requests to the API are authenticated through the SSO service or via a long-lived API token, which enables tracking usage and throttling requests as needed to manage cost and ensure reliable performance (e.g., high bandwidth power user vs. a limited guest user). The services <monospace>BossDB</monospace> provides are summarized below:</p>
      <sec>
        <title>2.3.1. SSO Management and User Authorization</title>
        <p>A set of services to manage users, roles, groups, and permissions. Roles limit what actions a user can perform on the system, while permissions limit what data users can access or manipulate. Permissions are applied to <monospace>BossDB</monospace> datasets via groups, making it easy to manage and control access for both individuals and teams. Through the application of permissions, a researcher or administrator can choose to keep a dataset private, share with collaborators, or make it publicly available.</p>
      </sec>
      <sec>
        <title>2.3.2. Dataset Management</title>
        <p>The <monospace>BossDB</monospace> API organizes data into a logical hierarchy to group related data together (e.g., source image data and associated annotations, 2-photon and EM datasets from the same tissue sample). This service provides interfaces to create and manage datasets and their properties.</p>
      </sec>
      <sec>
        <title>2.3.3. Ingest Service</title>
        <p>A critical challenge when using a centralized data archive is the ingest of large datasets to standardized formats from diverse local storage formats and organization paradigms. The Ingest Service enables the moving of large datasets of varying data formats (<xref rid="T1" ref-type="table">Table 1</xref>) from local or cloud storage into <monospace>BossDB</monospace> by performing the upload of data into the cloud and then ingesting that data into the spatial database format, allowing independent scaling and failure recovery. The service provides methods to create a new ingest job, monitor the status of a job, join an upload client worker to a job, and cancel a job. Unlike general upload tools that run on client-side compute infrastructure, or commands like the <italic>aws</italic> command-line offerings that may run on a single host, the ingest client is able to perform ingests on arbitrarily many compute nodes, with graceful error management even in the case that a compute node powers down during an ingest job.</p>
        <table-wrap position="float" id="T1">
          <label>Table 1</label>
          <caption>
            <p>Data types and associated data formats that are supported by tile and chunk/volumetric based ingest service processes.</p>
          </caption>
          <table frame="hsides" rules="groups">
            <thead>
              <tr>
                <th valign="top" align="left" rowspan="1" colspan="1">
                  <bold>Data type</bold>
                </th>
                <th valign="top" align="left" rowspan="1" colspan="1">
                  <bold>Data format</bold>
                </th>
                <th valign="top" align="left" rowspan="1" colspan="1">
                  <bold>Ingest type</bold>
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">JPEG</td>
                <td valign="top" align="left" rowspan="1" colspan="1">8-bit, 16-bit</td>
                <td valign="top" align="left" rowspan="1" colspan="1">Tile</td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">PNG</td>
                <td valign="top" align="left" rowspan="1" colspan="1">8-bit, 16-bit</td>
                <td valign="top" align="left" rowspan="1" colspan="1">Tile</td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">TIFF</td>
                <td valign="top" align="left" rowspan="1" colspan="1">8-bit, 16-bit</td>
                <td valign="top" align="left" rowspan="1" colspan="1">Tile</td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">CATMAID</td>
                <td valign="top" align="left" rowspan="1" colspan="1">Native format</td>
                <td valign="top" align="left" rowspan="1" colspan="1">Tile</td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">HDF5</td>
                <td valign="top" align="left" rowspan="1" colspan="1">Any encoding</td>
                <td valign="top" align="left" rowspan="1" colspan="1">Tile/Chunk</td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">N5</td>
                <td valign="top" align="left" rowspan="1" colspan="1">Any encoding</td>
                <td valign="top" align="left" rowspan="1" colspan="1">Tile/Chunk</td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">Zarr</td>
                <td valign="top" align="left" rowspan="1" colspan="1">Any encoding</td>
                <td valign="top" align="left" rowspan="1" colspan="1">Tile/Chunk</td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">CloudVolume</td>
                <td valign="top" align="left" rowspan="1" colspan="1">Native format</td>
                <td valign="top" align="left" rowspan="1" colspan="1">Tile/Chunk</td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">DVID</td>
                <td valign="top" align="left" rowspan="1" colspan="1">Native format</td>
                <td valign="top" align="left" rowspan="1" colspan="1">Tile/Chunk</td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">Nifti</td>
                <td valign="top" align="left" rowspan="1" colspan="1">Any encoding</td>
                <td valign="top" align="left" rowspan="1" colspan="1">Tile/Chunk</td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">Dicom</td>
                <td valign="top" align="left" rowspan="1" colspan="1">Any encoding</td>
                <td valign="top" align="left" rowspan="1" colspan="1">Tile/Chunk</td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">Knossos</td>
                <td valign="top" align="left" rowspan="1" colspan="1">Any encoding</td>
                <td valign="top" align="left" rowspan="1" colspan="1">Tile/Chunk</td>
              </tr>
            </tbody>
          </table>
        </table-wrap>
        <sec>
          <title>2.3.3.1. Tile Ingest</title>
          <p>As demonstrated in <xref rid="F5" ref-type="fig">Figure 5</xref>, the ingest process directly leverages AWS infrastructure, scaling on demand. First, using the ingest client a user uploads an ingest job configuration file to the API (1) which populates a task queue, enumerating all tiles that must be uploaded, and returns temporary AWS credentials. Next, the ingest client retrieves a task from the Upload Task Queue (2), and loads the requested local file into memory as an image tile (3), and uploads the tile data to an S3 bucket (4). The ingest client then writes a message to the index queue signaling it is finished with this tile (5). An AWS Lambda automatically fires when a message enters the Index Queue and it uses DynamoDB to track which tiles are successfully written to the tile bucket (6), (7) and when enough tiles in a region have arrived to generate the <monospace>BossDB</monospace> cuboid data representation, a second Lambda function is triggered (8). This Ingest Lambda function then loads the specified tiles, reformats them into cuboids, inserts them into the Spatial DB S3 bucket, updates the Spatial DB cuboid index, and finally marks the temporary tiles for deletion (9). The ingest client supports both parallel and distributed operation, allowing users to maximize their network bandwidth, especially in the case where source data is organized into numerous small image files.</p>
          <fig position="float" id="F5">
            <label>Figure 5</label>
            <caption>
              <p>A diagram outlining the data ingest service process.</p>
            </caption>
            <graphic xlink:href="fninf-16-828787-g0005" position="float"/>
          </fig>
        </sec>
        <sec>
          <title>2.3.3.2. Volumetric Ingest</title>
          <p>The ingest process also supports uploading three-dimensional chunks of data in the CloudVolume format<xref rid="fn0002" ref-type="fn"><sup>2</sup></xref>; this interface can be straightforwardly extended to other formats. Similar to Tile Ingest, the ingest client is used to upload an ingest-job configuration file to the API, populating a task queue with all chunks to be uploaded. The ingest client then retrieves a task from the Upload Task Queue, and loads that chunk into memory. The memory chunk is divided into multiple <monospace>BossDB</monospace> cuboids (512 x 512 x 16) and each cuboid is uploaded to an AWS S3 bucket. Upon uploading, the S3 update will trigger an AWS Lambda that copies the cuboid into main s3 store, adds an entry in DynamoDB, and marks the original cuboid for deletion.</p>
        </sec>
      </sec>
      <sec>
        <title>2.3.4. Dataset Metadata</title>
        <p><monospace>BossDB</monospace> can store arbitrary key-value pairs linked to data model items, which is useful to track experimental metadata and provenance (e.g., voxel size, animal information, annotation algorithm used). This service provides an interface to query, create, update, and delete key-value pairs associated with a dataset.</p>
      </sec>
      <sec>
        <title>2.3.5. Cutout Service</title>
        <p><monospace>BossDB</monospace> provides the <italic>cutout service</italic>, which enables users to interact with the Spatial Database by reading and writing arbitrary data volumes. While <monospace>BossDB</monospace> stores all data internally using a standardized format, the cutout service uses HTTP content negotiation to determine the data format of a request, allowing users to request specific database-supported formats when downloading data (e.g., compressed C-order blob, hdf5 file, pickled numpy array). The same is true of data-uploads: A user-provided content annotation enables <monospace>BossDB</monospace> to accept data in a variety of volumetric and image-based formats. This service enables scalable analytics by letting users access arbitrary chunks of data in parallel, perform automated processing, and write the annotation result back to <monospace>BossDB</monospace>. It also supports querying for the spatial properties of annotations, such as the bounding box of an annotation or identifying which annotations exist within a region.</p>
      </sec>
      <sec>
        <title>2.3.6. Image Service</title>
        <p>In addition to our volumetric cutout service, we provide an image service to meet common user needs, which retrieves a 2D slice of data from the spatial database along one of the three orthogonal planes (i.e., XY, XZ, YZ), encoded as an image file. Again, HTTP content negotiation is used to determine the format of the response (e.g., png, jpeg). The service supports arbitrary image sizes or a fixed tile size, which is often used by visualization tools.</p>
      </sec>
      <sec>
        <title>2.3.7. Downsample Service</title>
        <p>To allow users to quickly assess, process, and interact with their data, <monospace>BossDB</monospace> iteratively builds a resolution hierarchy for each dataset by downsampling the source data. This is a workflow that is run infrequently and on-demand, and needs to scale from gigabytes to petabytes of data. We developed a serverless architecture built on AWS Step Functions to manage failures and track process state. AWS Lambda is used to perform the underlying image processing in a parallel, scalable fashion. This approach helps to minimize costs since resources are only provisioned when needed and scale on-demand in a fully-automated paradigm. It is also possible to perform a partial downsample when only a portion of the original dataset has changed, saving the time and expense of re-running the process on the entire dataset. Image volumes with anisotropic native voxel sizes (e.g., x = 4 nm, y = 4 nm, z = 40 nm) are downsampled in the image plane dimensions (e.g., downsampling factors of x = 2, y = 2, z = 1) until block sizes reach near-isotropy (e.g. third downsample to resolution of x = 32 nm, y = 32 nm, z = 40 nm), after which they are downsampled equally in all dimensions. This remaining anisotropy diminishes higher in the downsampled hierarchy. In general, these levels are used primarily for visualization, and most analyses are performed at native or near-native resolutions (resolution 0 or 1).</p>
      </sec>
    </sec>
    <sec>
      <title>2.4. User Tools</title>
      <p>User facing tools are required to make a data archive truly useful, easy to use, and well documented. We currently offer a web-based management console, an ingest client, and a client-side Python module called <monospace>intern</monospace> for programmatic interaction<xref rid="fn0003" ref-type="fn"><sup>3</sup></xref> (Matelsky et al., <xref rid="B14" ref-type="bibr">2021</xref>). We have also integrated 3rd-party web-based data visualization tools. While <monospace>BossDB</monospace> API provides a rich interface to interact with the system, user friendly tools built on top of the API are important to increase utility and adoption by the community. We expect to mature and expand the scope of this tool library as community users build on the core <monospace>BossDB</monospace> technologies.</p>
      <sec>
        <title>2.4.1. Web-Based Management Console</title>
        <p><monospace>BossDB</monospace> has a web interface that lets users perform common actions interactively in their browser (e.g., create a dataset, monitor an ingest job, share a dataset with a user). This Django-backed web application is the primary interface for most users and will expose much of the API's functionality through an intuitive graphical interface. From the console, a researcher is able to manage datasets, discover new data, and launch the visualization tool.</p>
      </sec>
      <sec>
        <title>2.4.2. Web-Based Visualization</title>
        <p>A critical capability to any data archive is the ability to easily visualize stored data. Whether inspecting ingested data, exploring a dataset, or sharing an interesting sample with a collaborator, the most common interaction with stored data will be through visualization. We integrated a version of Neuroglancer (Maitin-Shepard, <xref rid="B13" ref-type="bibr">2021</xref>) to let users visually explore data stored in <monospace>BossDB</monospace>, and enable other visualization methods that provide abstraction over much of the API's complexity. The Neuroglancer interface may be used on all modern browsers and operating systems that support WebGL, including (as of the time of publication) Chrome version 51 or greater, Firefox version 46 or greater, and Safari 15.0 or greater. Through use of the imagery API, <monospace>BossDB</monospace> also supports mobile-friendly data visualization tools such as <italic>Substrate</italic> (Matelsky et al., <xref rid="B15" ref-type="bibr">2020</xref>).</p>
      </sec>
      <sec>
        <title>2.4.3. Immersive Visualization and Annotation</title>
        <p>The <monospace>BossDB</monospace> volumetric API likewise supports 3D collaborative annotation through immersive virtual reality (VR) tools such as syGlass (Pidhorskyi et al., <xref rid="B19" ref-type="bibr">2018</xref>), which can enable high-throughput annotation of large volumes of dense imagery. VR takes advantage of the natural parallax of stereoscopic vision, which can improve the visual perception of complex 3D structures.</p>
      </sec>
      <sec>
        <title>2.4.4. Ingest Client</title>
        <p>We have developed an open source ingest client in Python to manage uploading data to <monospace>BossDB</monospace>. The ingest process operates on a upload task queue which contains tasks specifying individual 2D tiles or 3D chunks of data to upload. To deal with the unique formats and file organization methods of diverse users, the client uses a simple plug-in design to import custom snippets of code responsible for taking a task, finding the right file, and loading the data into memory, which is then uploaded by the client. The work queue design allows copies of the client to be run distributed across compute nodes and in parallel on a single machine, substantially increasing throughput.</p>
      </sec>
      <sec>
        <title>2.4.5. Python Software Development Kit (SDK)</title>
        <p>To support developers and researchers who want to programmatically interact with <monospace>BossDB</monospace>, we developed a pip-installable Python library that provides abstraction over much of the complexity in the API. Data cutouts of arbitrary size can be efficiently retrieved from our archive, enabling easy integration with analytics tools. The current SDK, called <monospace>intern</monospace>, will continue to be expanded and supported to accommodate updates and additions to the existing <monospace>BossDB</monospace> system and user requests.</p>
      </sec>
    </sec>
  </sec>
  <sec sec-type="results" id="s3">
    <title>3. Results</title>
    <sec>
      <title>3.1. Motivating Application</title>
      <p>Many of our design requirements for the <monospace>BossDB</monospace> ecosystem were motivated by the activities planned for the Intelligent Advanced Research Projects Activity (IARPA) Machine Intelligent from Cortical Networks (MICrONS) Program<xref rid="fn0004" ref-type="fn"><sup>4</sup></xref>. This effort seeks to enable the rapid advancement of artificial intelligence capabilities by creating novel machine learning algorithms that use neurally-inspired architectures and mathematical abstractions of the representations, transformations, and learning rules employed by the brain<xref rid="fn0004" ref-type="fn"><sup>4</sup></xref>. To guide the construction of these algorithms, the program centers around massive co-registered functional (e.g., two-photon calcium imaging) and structural (e.g., EM) neuroimaging experiments aimed at estimating the synapse-resolution connectome of a 1<italic>mm</italic><sup>3</sup> volume of mouse visual cortex, represented by nearly a petabyte of image and segmentation data, and using that information to constrain machine learning architectures. Our goal was to organize, store, and support the analysis of these large functional and anatomical datasets, and eventually enable public dissemination.</p>
    </sec>
    <sec>
      <title>3.2. Deployment</title>
      <p>We envision that this data archive will facilitate neuroscience inquiries through extensible, scalable processes, with a sample workflow outlined that includes data generation, data ingest, intra- and cross-dataset analysis, and multi-user data visualization in various workflows (e.g., data proofreading) outlined in <xref rid="F6" ref-type="fig">Figure 6</xref>. During the IARPA MICrONS Program, a deployed instance of our <monospace>BossDB</monospace> system enabled concurrent proofreading operation by dozens of users, as well as the storage of a highly-available contiguous image volume that approached 2 PB of lossless EM image data (Bishop et al., <xref rid="B1" ref-type="bibr">2021</xref>) using the <italic>blosc</italic> compression standard<xref rid="fn0005" ref-type="fn"><sup>5</sup></xref>. In addition to EM and segmentation datasets from the IARPA MICrONS program (<ext-link xlink:href="https://bossdb.org/project/microns-minnie" ext-link-type="uri">https://bossdb.org/project/microns-minnie</ext-link>, <ext-link xlink:href="https://bossdb.org/project/microns-pinky" ext-link-type="uri">https://bossdb.org/project/microns-pinky</ext-link>), we currently publicly store highly-available data for over 30 large-scale volumetric image collections, with multiple contiguous image volumes exceeding 100 TB in size (<ext-link xlink:href="https://bossdb.org/projects/" ext-link-type="uri">https://bossdb.org/projects/</ext-link>).</p>
      <fig position="float" id="F6">
        <label>Figure 6</label>
        <caption>
          <p>A diagram outlining an example user story showing utilization of the <monospace>BossDB</monospace> infrastructure. A typical research group collecting data for a hypothesis will move sequentially from (1)–(4). Other groups will extend these analyses using steps (3) and (4). Sample data included for demonstration (see text footnote <xref rid="fn0004" ref-type="fn">4</xref>).</p>
        </caption>
        <graphic xlink:href="fninf-16-828787-g0006" position="float"/>
      </fig>
      <sec>
        <title>3.2.1. Implementation</title>
        <p><xref rid="F7" ref-type="fig">Figure 7</xref> shows the architecture of <monospace>BossDB</monospace>. The system has two user facing services: Authentication and Web Server Endpoint, both of which sit behind AWS elastic load balancers. The system uses Keycloak servers in a high-availability configuration for single sign-on authentication. The web server endpoints use Django API, to provide access to the majority of the services in <monospace>BossDB</monospace>.</p>
        <fig position="float" id="F7">
          <label>Figure 7</label>
          <caption>
            <p>A high-level architecture diagram of <monospace>BossDB</monospace> as deployed using Amazon Web Services architecture, highlighting a number of services, including ingest processes on the left. Sample data included for demonstration (see text footnote <xref rid="fn0004" ref-type="fn">4</xref>).</p>
          </caption>
          <graphic xlink:href="fninf-16-828787-g0007" position="float"/>
        </fig>
        <p><monospace>BossDB</monospace> uses serverless computing and storage, with AWS Lambda, SQS, S3, and DynamoDB to provide all of the other services mentioned in Section 2: Ingest, Metadata, Cutout, Image, and Downsample. Using serverless computing and storage for these components will automatically scale with demand and eliminate the need to maintain components.</p>
        <p><monospace>BossDB</monospace> is installed using the AWS CloudFormation service along with Salt and Packer to manage our infrastructure. This allows us to quickly duplicate the environment for testing and development and even change instance sizes within the new environments.</p>
      </sec>
      <sec>
        <title>3.2.2. Data Generation</title>
        <p>Researchers collect experimental data; stitching, alignment, and registration take part prior to upload to <monospace>BossDB</monospace>. Users create new resources in <monospace>BossDB</monospace> to identify and store their datasets, recording their experimental parameters and dataset properties (e.g., voxel dimensions, bit depth, spatial extent) prior to upload. An example screenshot from our web console is shown in <xref rid="F8" ref-type="fig">Figure 8</xref>; this setup can be accomplished programmatically using <monospace>intern</monospace> as well.</p>
        <fig position="float" id="F8">
          <label>Figure 8</label>
          <caption>
            <p>An example screenshot from our <monospace>BossDB</monospace> console for the MICrONS Pinky dataset (see text footnote <xref rid="fn0004" ref-type="fn">4</xref>).</p>
          </caption>
          <graphic xlink:href="fninf-16-828787-g0008" position="float"/>
        </fig>
      </sec>
      <sec>
        <title>3.2.3. Data Ingest</title>
        <p>Once available, a researcher uploads image data via one of several methods supported by <monospace>BossDB</monospace> (e.g., REST API, ingest client), safely and efficiently storing data in <monospace>BossDB</monospace>. Large datasets can be uploaded incrementally, with data available for read as soon as it has been ingested, providing access to collaborators in minutes, not months.</p>
        <p>The ingest client has already been used to upload petabytes of EM and calcium imaging data; many of these uploads proceed without any intervention from the developer team with the system automatically scaling to meet user's needs.</p>
        <p>Previous testing of the ingest process reached a sustained ingest throughput of 230 GB/Min (<xref rid="F9" ref-type="fig">Figure 9</xref>) using the volumetric ingest-client into <monospace>BossDB</monospace>. The ingest client was run on 750 kubernetes pods across eight large servers uploading data from an AWS Bucket. AWS Lambda scaled to over 5000 concurrent executing functions to handle the load.</p>
        <fig position="float" id="F9">
          <label>Figure 9</label>
          <caption>
            <p>Volumetric Ingest throughput demonstrated over the complete ingest of a 50TB dataset in about 4 h.</p>
          </caption>
          <graphic xlink:href="fninf-16-828787-g0009" position="float"/>
        </fig>
        <p>To perform at this speed we were running 12 Endpoint servers sized with m4.2xlarge instances, an RDS database backed with a db.m4.xlarge instance, and DynamoDB table sized at 2,000 read / 4,000 write capacity.</p>
        <p>This test shows the how <monospace>BossDB</monospace> will autoscale to meet demands (<xref rid="F10" ref-type="fig">Figure 10</xref>). The same 3.2 million tiles from a 225-GB dataset were uploaded during each test. Each test used a different number of kubernetes pods running the ingest-client (100, 200, 400). <monospace>BossDB</monospace> automatically scaled endpoints, DynamoDB read and write demand to handle the throughput efficiently.</p>
        <fig position="float" id="F10">
          <label>Figure 10</label>
          <caption>
            <p>Tile Ingest throughput on demand of a 200 GB EM dataset using various scales of ingest operation.</p>
          </caption>
          <graphic xlink:href="fninf-16-828787-g0010" position="float"/>
        </fig>
        <p><monospace>BossDB</monospace> has monitoring capability at several levels. In <xref rid="F11" ref-type="fig">Figure 11</xref> you see a snippet of our Ingest Dashboard which allows the administrator to see how much stress any one component of the system is under. Notifications will also go out if any key components fail, and when the system hits cost milestones.</p>
        <fig position="float" id="F11">
          <label>Figure 11</label>
          <caption>
            <p>A CloudWatch dashboard monitoring during ingestion.</p>
          </caption>
          <graphic xlink:href="fninf-16-828787-g0011" position="float"/>
        </fig>
      </sec>
      <sec>
        <title>3.2.4. Data Analytics</title>
        <p>Many big data research analyses are enabled by <monospace>BossDB</monospace> features (e.g., standardized interfaces, arbitrary cutouts, spatial indexing), accelerating the scientific process.</p>
        <p>One common use for <monospace>BossDB</monospace> is acting as a backend for local data analysis pipelines. Users download chunks of data from <monospace>BossDB</monospace> using <monospace>intern</monospace> and process it to create annotation labels using humans or machines. The resulting annotation data is uploaded via a choice of methods (python API, ingest client), below we include an example of such use case.</p>
        <table-wrap position="float" id="d95e782">
          <table frame="hsides" rules="groups">
            <tbody>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">
                  <inline-formula>
                    <mml:math id="M1" overflow="scroll">
                      <mml:mstyle style="color:#a06fac">
                        <mml:mo>#</mml:mo>
                        <mml:mtext> import intern package</mml:mtext>
                      </mml:mstyle>
                    </mml:math>
                  </inline-formula>
                </td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">
                  <inline-formula>
                    <mml:math id="M2" overflow="scroll">
                      <mml:mstyle style="color:#3853a4">
                        <mml:mtext>from </mml:mtext>
                      </mml:mstyle>
                      <mml:mtext>  i n t e r n</mml:mtext>
                      <mml:mstyle style="color:#3853a4">
                        <mml:mtext>  import</mml:mtext>
                      </mml:mstyle>
                      <mml:mtext>  a r r a y</mml:mtext>
                    </mml:math>
                  </inline-formula>
                  <break/>
                  <break/>
                </td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">
                  <inline-formula>
                    <mml:math id="M3" overflow="scroll">
                      <mml:mstyle style="color:#a06fac">
                        <mml:mo>#</mml:mo>
                        <mml:mtext> specify data location</mml:mtext>
                      </mml:mstyle>
                    </mml:math>
                  </inline-formula>
                </td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">
                  <inline-formula>
                    <mml:math id="M4" overflow="scroll">
                      <mml:mtext>COLL</mml:mtext>
                      <mml:mo>_</mml:mo>
                      <mml:mtext>NAME </mml:mtext>
                      <mml:mo>=</mml:mo>
                      <mml:mtext> </mml:mtext>
                      <mml:mstyle style="color:#ed1f24">
                        <mml:mo>'</mml:mo>
                      </mml:mstyle>
                      <mml:mstyle style="color:#ed1f24">
                        <mml:mtext>test</mml:mtext>
                      </mml:mstyle>
                      <mml:mstyle style="color:#ed1f24">
                        <mml:mo>_</mml:mo>
                      </mml:mstyle>
                      <mml:mstyle style="color:#ed1f24">
                        <mml:mtext>collection</mml:mtext>
                      </mml:mstyle>
                      <mml:mstyle style="color:#ed1f24">
                        <mml:mo>'</mml:mo>
                      </mml:mstyle>
                    </mml:math>
                  </inline-formula>
                </td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">
                  <inline-formula>
                    <mml:math id="M5" overflow="scroll">
                      <mml:mtext>EXP</mml:mtext>
                      <mml:mo>_</mml:mo>
                      <mml:mtext>NAME </mml:mtext>
                      <mml:mo>=</mml:mo>
                      <mml:mtext> </mml:mtext>
                      <mml:mstyle style="color:#ed1f24">
                        <mml:mo>'</mml:mo>
                      </mml:mstyle>
                      <mml:mstyle style="color:#ed1f24">
                        <mml:mtext>test</mml:mtext>
                      </mml:mstyle>
                      <mml:mstyle style="color:#ed1f24">
                        <mml:mo>_</mml:mo>
                      </mml:mstyle>
                      <mml:mstyle style="color:#ed1f24">
                        <mml:mtext>experiment</mml:mtext>
                      </mml:mstyle>
                      <mml:mstyle style="color:#ed1f24">
                        <mml:mo>'</mml:mo>
                      </mml:mstyle>
                    </mml:math>
                  </inline-formula>
                </td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">
                  <inline-formula>
                    <mml:math id="M6" overflow="scroll">
                      <mml:mtext>CHAN</mml:mtext>
                      <mml:mo>_</mml:mo>
                      <mml:mtext>NAME </mml:mtext>
                      <mml:mo>=</mml:mo>
                      <mml:mtext> </mml:mtext>
                      <mml:mstyle style="color:#ed1f24">
                        <mml:mo>'</mml:mo>
                      </mml:mstyle>
                      <mml:mstyle style="color:#ed1f24">
                        <mml:mtext>test</mml:mtext>
                      </mml:mstyle>
                      <mml:mstyle style="color:#ed1f24">
                        <mml:mo>_</mml:mo>
                      </mml:mstyle>
                      <mml:mstyle style="color:#ed1f24">
                        <mml:mtext>channel</mml:mtext>
                      </mml:mstyle>
                      <mml:mstyle style="color:#ed1f24">
                        <mml:mo>'</mml:mo>
                      </mml:mstyle>
                    </mml:math>
                  </inline-formula>
                  <break/>
                  <break/>
                </td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">
                  <inline-formula>
                    <mml:math id="M7" overflow="scroll">
                      <mml:mstyle style="color:#a06fac">
                        <mml:mo>#</mml:mo>
                      </mml:mstyle>
                      <mml:mstyle style="color:#a06fac">
                        <mml:mtext> Use a URI to identify the data location</mml:mtext>
                        <mml:mo>:</mml:mo>
                      </mml:mstyle>
                    </mml:math>
                  </inline-formula>
                </td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">
                  <inline-formula>
                    <mml:math id="M8" overflow="scroll">
                      <mml:mtext>chan </mml:mtext>
                      <mml:mo>=</mml:mo>
                      <mml:mtext> f</mml:mtext>
                      <mml:mstyle style="color:#ed1f24">
                        <mml:mo>''</mml:mo>
                      </mml:mstyle>
                      <mml:mstyle style="color:#ed1f24">
                        <mml:mtext>bossdb</mml:mtext>
                      </mml:mstyle>
                      <mml:mstyle style="color:#ed1f24">
                        <mml:mo>:</mml:mo>
                        <mml:mo>//</mml:mo>
                        <mml:mo>{</mml:mo>
                        <mml:mtext>COLL</mml:mtext>
                        <mml:mo>_</mml:mo>
                        <mml:mtext>NAME</mml:mtext>
                        <mml:mo>}</mml:mo>
                        <mml:mo>/</mml:mo>
                        <mml:mo>{</mml:mo>
                        <mml:mtext>EXP</mml:mtext>
                        <mml:mo>_</mml:mo>
                        <mml:mtext>NAME</mml:mtext>
                        <mml:mo>}</mml:mo>
                        <mml:mo>/</mml:mo>
                      </mml:mstyle>
                    </mml:math>
                  </inline-formula>
                </td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">
                  <inline-formula>
                    <mml:math id="M9" overflow="scroll">
                      <mml:mstyle style="color:#ed1f24">
                        <mml:mo>{</mml:mo>
                        <mml:mtext>CHAN</mml:mtext>
                        <mml:mo>_</mml:mo>
                        <mml:mtext>NAME</mml:mtext>
                        <mml:mo>}</mml:mo>
                        <mml:mo>'</mml:mo>
                        <mml:mo>'</mml:mo>
                      </mml:mstyle>
                    </mml:math>
                  </inline-formula>
                  <break/>
                  <break/>
                </td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">
                  <inline-formula>
                    <mml:math id="M10" overflow="scroll">
                      <mml:mstyle style="color:#a06fac">
                        <mml:mo>#</mml:mo>
                        <mml:mtext> Create a numpy</mml:mtext>
                        <mml:mo>-</mml:mo>
                        <mml:mtext>like pointer to the data</mml:mtext>
                        <mml:mo>,</mml:mo>
                      </mml:mstyle>
                    </mml:math>
                  </inline-formula>
                </td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">
                  <inline-formula>
                    <mml:math id="M11" overflow="scroll">
                      <mml:mstyle style="color:#a06fac">
                        <mml:mo>#</mml:mo>
                        <mml:mtext> specifying the downsample</mml:mtext>
                        <mml:mo>-</mml:mo>
                        <mml:mtext>level</mml:mtext>
                        <mml:mo>:</mml:mo>
                      </mml:mstyle>
                    </mml:math>
                  </inline-formula>
                </td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">
                  <inline-formula>
                    <mml:math id="M12" overflow="scroll">
                      <mml:mtext>  d a t a s e t </mml:mtext>
                      <mml:mo>=</mml:mo>
                      <mml:mtext> a r r a y</mml:mtext>
                      <mml:mo>(</mml:mo>
                      <mml:mtext>c h a n</mml:mtext>
                      <mml:mo>,</mml:mo>
                      <mml:mtext>  r e s o l u t i o n</mml:mtext>
                      <mml:mo>=</mml:mo>
                      <mml:mn>0</mml:mn>
                      <mml:mo>)</mml:mo>
                    </mml:math>
                  </inline-formula>
                </td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">
                  <inline-formula>
                    <mml:math id="M13" overflow="scroll">
                      <mml:mstyle style="color:#a06fac">
                        <mml:mo>#</mml:mo>
                        <mml:mo>…</mml:mo>
                        <mml:mtext>with access to dataset</mml:mtext>
                        <mml:mo>.</mml:mo>
                        <mml:mtext>shape</mml:mtext>
                        <mml:mo>,</mml:mo>
                      </mml:mstyle>
                    </mml:math>
                  </inline-formula>
                </td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">
                  <inline-formula>
                    <mml:math id="M14" overflow="scroll">
                      <mml:mstyle style="color:#a06fac">
                        <mml:mtext>   dataset</mml:mtext>
                        <mml:mo>.</mml:mo>
                        <mml:mtext>dtype</mml:mtext>
                        <mml:mo>,</mml:mo>
                        <mml:mtext> etc</mml:mtext>
                        <mml:mo>.</mml:mo>
                      </mml:mstyle>
                    </mml:math>
                  </inline-formula>
                  <break/>
                  <break/>
                </td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">
                  <inline-formula>
                    <mml:math id="M15" overflow="scroll">
                      <mml:mstyle style="color:#a06fac">
                        <mml:mo>#</mml:mo>
                        <mml:mtext> Download the cutout from the channel into</mml:mtext>
                      </mml:mstyle>
                    </mml:math>
                  </inline-formula>
                </td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">
                  <inline-formula>
                    <mml:math id="M16" overflow="scroll">
                      <mml:mstyle style="color:#a06fac">
                        <mml:mtext>   a </mml:mtext>
                        <mml:mn>3</mml:mn>
                        <mml:mtext>D numpy array</mml:mtext>
                      </mml:mstyle>
                    </mml:math>
                  </inline-formula>
                </td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">
                  <inline-formula>
                    <mml:math id="M17" overflow="scroll">
                      <mml:mtext>d a t a </mml:mtext>
                      <mml:mo>=</mml:mo>
                      <mml:mtext> d a t a s e t</mml:mtext>
                      <mml:mo>[</mml:mo>
                      <mml:mn>0</mml:mn>
                      <mml:mo>:</mml:mo>
                      <mml:mn>10</mml:mn>
                      <mml:mo>,</mml:mo>
                      <mml:mtext>  </mml:mtext>
                      <mml:mn>0</mml:mn>
                      <mml:mo>:</mml:mo>
                      <mml:mn>512</mml:mn>
                      <mml:mo>,</mml:mo>
                      <mml:mtext>  </mml:mtext>
                      <mml:mn>0</mml:mn>
                      <mml:mo>:</mml:mo>
                      <mml:mn>1024</mml:mn>
                      <mml:mo>]</mml:mo>
                      <mml:mo>.</mml:mo>
                    </mml:math>
                  </inline-formula>
                </td>
              </tr>
            </tbody>
          </table>
        </table-wrap>
      </sec>
      <sec>
        <title>3.2.5. Data Visualization and Publication</title>
        <p>Data can be quickly visualized using applications such as Neuroglancer (<xref rid="F12" ref-type="fig">Figure 12</xref>).</p>
        <fig position="float" id="F12">
          <label>Figure 12</label>
          <caption>
            <p>An example Neuroglancer web visualization backended by <monospace>BossDB</monospace>, showing public EM, segmentation, and mesh data generated during the IARPA MICrONS Program (see text footnote <xref rid="fn0004" ref-type="fn">4</xref>).</p>
          </caption>
          <graphic xlink:href="fninf-16-828787-g0012" position="float"/>
        </fig>
        <p>Data are published along with initial analysis, and made widely accessible through <monospace>BossDB</monospace>. Other research teams can then conduct additional analysis, extending and validating the existing scientific findings.</p>
      </sec>
    </sec>
  </sec>
  <sec sec-type="discussion" id="s4">
    <title>4. Discussion</title>
    <p>Our data archive will enable scientists to easily access and process large datasets, and to scale up their approaches with minimal alterations and without needing large local storage. Because the results are anchored to a universally-accessible datastore, it is easier for others to inspect the results, improve upon them, and reproduce processing pipelines by leveraging common interfaces.</p>
    <p>When considering a cloud-native approach, vendor lock-in is one potential concern – as we not only use the AWS cloud to deploy <monospace>BossDB</monospace>, but have integrated many of its services into the system to substantially accelerate development and performance. To minimize the development impact of expanding to an additional cloud provider or on-premise cluster, future work is needed to create a layer of abstraction between the core software and AWS services. We plan to continue to develop toward a microservices style architecture, which will decrease coupling between sub-components. This will allow <monospace>BossDB</monospace> to be able to independently scale sub-components and increase the ability to easily deploy, update, and manage services. We believe that storage engines will continue to specialize around datatypes (e.g., multi-dimensional image data, video data, gene sequence data) and be applicable to multiple research communities through the creation of domain-specific APIs that maintain the unique formats, organization, and needs of that community.</p>
    <p>We intend to continue to provide <monospace>BossDB</monospace> as a reliable and scalable storage resource to the general microscopy and biology communities in perpetuity. We expect that as the community uses our data archive, additional tools will be developed to address new researcher needs, such as a universal, robust object-level metadata system and additional visualization engines. Several other research groups have leveraged <monospace>BossDB</monospace> deployments, including NeuroData (Vogelstein et al., <xref rid="B23" ref-type="bibr">2018</xref>) which serves a diverse range of collaborators utilizing several imaging modalities (e.g., light microscopy, array tomography, serial multi-photon tomography) and added several new tools and capabilities to the <monospace>BossDB</monospace> ecosystem.</p>
    <p>One concern about running a cloud data archive is estimating and managing cost. <monospace>BossDB</monospace> architecture was designed to allow dynamic scaling of resources to balance cost with performance and throughput capacity. As our software stack continues to mature, we plan to further optimize our tiered storage architecture (e.g., automatic migration data between S3 Standard, Infrequent Access, and Glacier tiers). The proposed system will provide a framework that is able to trivially scale from terabytes to petabytes while maintaining a balance between cost efficiency and performance.</p>
    <p>As modern neuroscience datasets continue to grow in size, the community is fortunate to have several options to store and share their data. The precomputed format (Maitin-Shepard, <xref rid="B13" ref-type="bibr">2021</xref>) offers a flexible, lightweight option that is readily deployable in both local and cloud settings. As mentioned above, DVID (see text footnote <xref rid="fn0001" ref-type="fn">1</xref>) is used to manage immutable and versioned annotations at the terascale level. We believe that our <monospace>BossDB</monospace> solution offers key advantages in scalability and indexing (adaptable from gigabyte to petabyte storage); authentication to manage user access workloads and costs; indexing to promote data exploration and discovery; and managed services to ensure that data is maintained and available in an efficient manner for a variety of user workflows. For a given research lab (or even within the lifecycle of a scientific question), one or more of these storage solutions may be most appropriate to enable and share results.</p>
    <p>The standardization and scalability provided by our data archive will support a fundamental change in how researchers design and execute their experiments, and will rapidly accelerate the processing and reuse of high-quality neuroscience, most immediately for the large, petascale image, and annotation volumes produced by IARPA MICrONS. No previously existing platform met the operational and scaling requirements of the program, including managing an estimated 3–5 petabytes of image and annotation data—much larger than public neuroanatomical data archives. The <monospace>BossDB</monospace> software and documentation is open source and we are eager to expand the user community, supported modalities, and features. More information, examples and support are available at <ext-link xlink:href="https://bossdb.org" ext-link-type="uri">https://bossdb.org</ext-link> and <ext-link xlink:href="https://github.com/jhuapl-boss/" ext-link-type="uri">https://github.com/jhuapl-boss/</ext-link>.</p>
  </sec>
  <sec sec-type="data-availability" id="s5">
    <title>Data Availability Statement</title>
    <p>The original contributions presented in the study are included in the article/supplementary material, further inquiries can be directed to the corresponding author/s.</p>
  </sec>
  <sec id="s6">
    <title>Author Contributions</title>
    <p>RH, DK, TG, DX, JM, DP, LR, ECJ, WG-R, and BW contributed to the <monospace>BossDB</monospace> system design. RH, DK, TG, DX, JM, DP, and LR contributed to software development of the <monospace>BossDB</monospace> system. RH, DK, DX, WG-R, JM, and BW contributed to the manuscript drafting and reviews. All authors approved the submitted version of the manuscript.</p>
  </sec>
  <sec sec-type="funding-information" id="s7">
    <title>Funding</title>
    <p>This material is based upon work supported by the National Institutes of Health (NIH) grants R24MH114799, R24MH114785, and R01MH126684 under the NIH BRAIN Initiative Informatics Program and by the Office of the Director of National Intelligence (ODNI), and Intelligent Advanced Research Projects Activity (IARPA), via IARPA Contract No. 2017-17032700004-005 under the MICrONS program.</p>
  </sec>
  <sec id="s8">
    <title>Author Disclaimer</title>
    <p>The views and conclusions contained herein are those of the authors and should not be interpreted as necessarily representing the official policies or endorsements, either expressed or implied, of the NIH, ODNI, IARPA, or the U.S. Government. The U.S. Government is authorized to reproduce and distribute reprints for Governmental purposes notwithstanding any copyright annotation therein.</p>
  </sec>
  <sec sec-type="COI-statement" id="conf1">
    <title>Conflict of Interest</title>
    <p>The authors declare that the research was conducted in the absence of any commercial or financial relationships that could be construed as a potential conflict of interest.</p>
  </sec>
  <sec sec-type="disclaimer" id="s9">
    <title>Publisher's Note</title>
    <p>All claims expressed in this article are solely those of the authors and do not necessarily represent those of their affiliated organizations, or those of the publisher, the editors and the reviewers. Any product that may be evaluated in this article, or claim that may be made by its manufacturer, is not guaranteed or endorsed by the publisher.</p>
  </sec>
</body>
<back>
  <ack>
    <p>We would like to gratefully acknowledge our collaborators at NeuroData, including A. Baden, K. Lillaney, R. Burns, J. Vogelstein, B. Falk, and E. Perlman; S. Plaza and B. Katz for insights into DVID and volumetric frameworks; many contributors and facilitators, including J. Vogelstein, D. D'Angelo, C. Bishop, E. Johnson, H. Gooden, P. Manavalan, S. Farris, L. Kitchell, J. Downs, D. Ramsden, and D. Moore; and our user community.</p>
  </ack>
  <fn-group>
    <fn id="fn0001">
      <p><sup>1</sup>Distributed, Versioned, Image-Oriented Dataservice. Available online at: <ext-link xlink:href="https://github.com/janelia-flyem/dvid" ext-link-type="uri">https://github.com/janelia-flyem/dvid</ext-link> (accessed October 10, 2017).</p>
    </fn>
    <fn id="fn0002">
      <p><sup>2</sup>CloudVolume Is a Python Library for Reading and Writing Chunked Numpy Arrays From Neuroglancer Volumes in “precomputed” Format. Available online at: <ext-link xlink:href="https://github.com/seung-lab/cloud-volume" ext-link-type="uri">https://github.com/seung-lab/cloud-volume</ext-link>.</p>
    </fn>
    <fn id="fn0003">
      <p><sup>3</sup>Intern Software Development Kit (sdk) Tools Page on <ext-link xlink:href="https://bossdb.org/" ext-link-type="uri">Bossdb.org</ext-link>. Available online at: <ext-link xlink:href="https://bossdb.org/tools/intern" ext-link-type="uri">https://bossdb.org/tools/intern</ext-link> (accessed December 03, 2021).</p>
    </fn>
    <fn id="fn0004">
      <p><sup>4</sup>MICrONS: Machine Intelligence From Cortical Networks. Available online at: <ext-link xlink:href="http://iarpa.gov/index.php/research-programs/microns" ext-link-type="uri">http://iarpa.gov/index.php/research-programs/microns</ext-link> (accessed October 31, 2017).</p>
    </fn>
    <fn id="fn0005">
      <p><sup>5</sup>Blosc Compressor. Available online at: <ext-link xlink:href="http://blosc.org" ext-link-type="uri">http://blosc.org</ext-link> (accessed December 03, 2021).</p>
    </fn>
  </fn-group>
  <ref-list>
    <title>References</title>
    <ref id="B1">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Bishop</surname><given-names>C.</given-names></name><name><surname>Matelsky</surname><given-names>J.</given-names></name><name><surname>Wilt</surname><given-names>M.</given-names></name><name><surname>Downs</surname><given-names>J.</given-names></name><name><surname>Rivlin</surname><given-names>P.</given-names></name><name><surname>Plaza</surname><given-names>S.</given-names></name><etal/></person-group>. (<year>2021</year>). <article-title>“CONFIRMS: a toolkit for scalable, black box connectome assessment and investigation,”</article-title> in <source>43rd Annual International Conference of the IEEE Engineering in Medicine and Biology Society, IEEE EMBC</source> (<publisher-loc>Mexico City</publisher-loc>).<?supplied-pmid 34891774?></mixed-citation>
    </ref>
    <ref id="B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bock</surname><given-names>D. D.</given-names></name><name><surname>Lee</surname><given-names>W.-C. A.</given-names></name><name><surname>Kerlin</surname><given-names>A. M.</given-names></name><name><surname>Andermann</surname><given-names>M. L.</given-names></name><name><surname>Hood</surname><given-names>G.</given-names></name><name><surname>Wetzel</surname><given-names>A. W.</given-names></name><etal/></person-group>. (<year>2011</year>). <article-title>Network anatomy and <italic>in vivo</italic> physiology of visual cortical neurons</article-title>. <source>Nature</source><volume>471</volume>, <fpage>177</fpage>–<lpage>182</lpage>. <pub-id pub-id-type="doi">10.1038/nature09802</pub-id><?supplied-pmid 21390124?><pub-id pub-id-type="pmid">21390124</pub-id></mixed-citation>
    </ref>
    <ref id="B3">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Burns</surname><given-names>R.</given-names></name><name><surname>Lillaney</surname><given-names>K.</given-names></name><name><surname>Berger</surname><given-names>D. R.</given-names></name><name><surname>Grosenick</surname><given-names>L.</given-names></name><name><surname>Deisseroth</surname><given-names>K.</given-names></name><name><surname>Reid</surname><given-names>R. C.</given-names></name><etal/></person-group>. (<year>2013</year>). <article-title>“The open connectome project data cluster: scalable analysis and vision for high-throughput neuroscience,”</article-title> in <source>Proceedings of the 25th International Conference on Scientific and Statistical Database Management SSDBM</source> (<publisher-loc>Baltimore, MD</publisher-loc>: <publisher-name>Association for Computing Machinery</publisher-name>), <fpage>1</fpage>–<lpage>11</lpage>. <?supplied-pmid 24401992?></mixed-citation>
    </ref>
    <ref id="B4">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Dorkenwald</surname><given-names>S.</given-names></name><name><surname>Turner</surname><given-names>N. L.</given-names></name><name><surname>Macrina</surname><given-names>T.</given-names></name><name><surname>Lee</surname><given-names>K.</given-names></name><name><surname>Lu</surname><given-names>R.</given-names></name><name><surname>Wu</surname><given-names>J.</given-names></name><etal/></person-group>. (<year>2019</year>). <source>Binary and Analog Variation of Synapses Between Cortical Pyramidal Neurons.</source> Technical Report, <publisher-name>Princeton University</publisher-name>, <publisher-name>Princeton, NJ</publisher-name>.</mixed-citation>
    </ref>
    <ref id="B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Dupre</surname><given-names>C.</given-names></name><name><surname>Yuste</surname><given-names>R.</given-names></name></person-group> (<year>2017</year>). <article-title>Non-overlapping neural networks in hydra vulgaris</article-title>. <source>Curr. Biol.</source>
<volume>27</volume>, <fpage>1085</fpage>–<lpage>1097</lpage>. <pub-id pub-id-type="doi">10.1016/j.cub.2017.02.049</pub-id><?supplied-pmid 28366745?><pub-id pub-id-type="pmid">28366745</pub-id></mixed-citation>
    </ref>
    <ref id="B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Dyer</surname><given-names>E. L.</given-names></name><name><surname>Roncal</surname><given-names>W. G.</given-names></name><name><surname>Prasad</surname><given-names>J. A.</given-names></name><name><surname>Fernandes</surname><given-names>H. L.</given-names></name><name><surname>Gürsoy</surname><given-names>D.</given-names></name><name><surname>Andrade</surname><given-names>V. D.</given-names></name><etal/></person-group>. (<year>2017</year>). <article-title>Quantifying mesoscale neuroanatomy using X-ray microtomography</article-title>. <source>eNeuro</source><volume>4</volume>:<fpage>ENEURO.0195-17.2017</fpage>. <pub-id pub-id-type="doi">10.1523/ENEURO.0195-17.2017</pub-id><?supplied-pmid 29085899?><pub-id pub-id-type="pmid">29085899</pub-id></mixed-citation>
    </ref>
    <ref id="B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Helmstaedter</surname><given-names>M.</given-names></name><name><surname>Briggman</surname><given-names>K. L.</given-names></name><name><surname>Denk</surname><given-names>W.</given-names></name></person-group> (<year>2011</year>). <article-title>High-accuracy neurite reconstruction for high-throughput neuroanatomy</article-title>. <source>Nat. Neurosci.</source>
<volume>14</volume>, <fpage>1081</fpage>–<lpage>1088</lpage>. <pub-id pub-id-type="doi">10.1038/nn.2868</pub-id><?supplied-pmid 21743472?><pub-id pub-id-type="pmid">21743472</pub-id></mixed-citation>
    </ref>
    <ref id="B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Helmstaedter</surname><given-names>M.</given-names></name><name><surname>Briggman</surname><given-names>K. L.</given-names></name><name><surname>Turaga</surname><given-names>S. C.</given-names></name><name><surname>Jain</surname><given-names>V.</given-names></name><name><surname>Seung</surname><given-names>H. S.</given-names></name><name><surname>Denk</surname><given-names>W.</given-names></name></person-group> (<year>2013</year>). <article-title>Connectomic reconstruction of the inner plexiform layer in the mouse retina</article-title>. <source>Nature</source>
<volume>500</volume>, <fpage>168</fpage>–<lpage>174</lpage>. <pub-id pub-id-type="doi">10.1038/nature12346</pub-id><?supplied-pmid 23925239?><pub-id pub-id-type="pmid">23925239</pub-id></mixed-citation>
    </ref>
    <ref id="B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kasthuri</surname><given-names>N.</given-names></name><name><surname>Hayworth</surname><given-names>K. J.</given-names></name><name><surname>Berger</surname><given-names>D. R.</given-names></name><name><surname>Schalek</surname><given-names>R. L.</given-names></name><name><surname>Conchello</surname><given-names>J. A.</given-names></name><name><surname>Knowles-Barley</surname><given-names>S.</given-names></name><etal/></person-group>. (<year>2015</year>). <article-title>Saturated reconstruction of a volume of neocortex</article-title>. <source>Cell</source><volume>162</volume>, <fpage>648</fpage>–<lpage>661</lpage>. <pub-id pub-id-type="doi">10.1016/j.cell.2015.06.054</pub-id><?supplied-pmid 26232230?><pub-id pub-id-type="pmid">26232230</pub-id></mixed-citation>
    </ref>
    <ref id="B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Katz</surname><given-names>W. T.</given-names></name><name><surname>Plaza</surname><given-names>S. M.</given-names></name></person-group> (<year>2019</year>). <article-title>DVID: distributed versioned image-oriented dataservice</article-title>. <source>Front. Neural Circ.</source>
<volume>13</volume>, <fpage>5</fpage>. <pub-id pub-id-type="doi">10.3389/fncir.2019.00005</pub-id><?supplied-pmid 30804760?><pub-id pub-id-type="pmid">30804760</pub-id></mixed-citation>
    </ref>
    <ref id="B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lee</surname><given-names>W.-C. A.</given-names></name><name><surname>Bonin</surname><given-names>V.</given-names></name><name><surname>Reed</surname><given-names>M.</given-names></name><name><surname>Graham</surname><given-names>B. J.</given-names></name><name><surname>Hood</surname><given-names>G.</given-names></name><name><surname>Glattfelder</surname><given-names>K.</given-names></name><etal/></person-group>. (<year>2016</year>). <article-title>Anatomy and function of an excitatory network in the visual cortex</article-title>. <source>Nature</source><volume>532</volume>, <fpage>370</fpage>–<lpage>374</lpage>. <pub-id pub-id-type="doi">10.1038/nature17192</pub-id><?supplied-pmid 27018655?><pub-id pub-id-type="pmid">27018655</pub-id></mixed-citation>
    </ref>
    <ref id="B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lichtman</surname><given-names>J. W.</given-names></name><name><surname>Pfister</surname><given-names>H.</given-names></name><name><surname>Shavit</surname><given-names>N.</given-names></name></person-group> (<year>2014</year>). <article-title>The big data challenges of connectomics</article-title>. <source>Nat. Neurosci.</source>
<volume>17</volume>, <fpage>1448</fpage>–<lpage>1454</lpage>. <pub-id pub-id-type="doi">10.1038/nn.3837.Epub</pub-id><pub-id pub-id-type="pmid">25349911</pub-id></mixed-citation>
    </ref>
    <ref id="B13">
      <mixed-citation publication-type="webpage"><person-group person-group-type="author"><name><surname>Maitin-Shepard</surname><given-names>J.</given-names></name></person-group> (<year>2021</year>). <source>Neuroglancer</source>. Available online at: <ext-link xlink:href="https://github.com/google/neuroglancer" ext-link-type="uri">https://github.com/google/neuroglancer</ext-link> (accessed June 10, 2017).</mixed-citation>
    </ref>
    <ref id="B14">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Matelsky</surname><given-names>J.</given-names></name><name><surname>Rodriguez</surname><given-names>L.</given-names></name><name><surname>Xenes</surname><given-names>D.</given-names></name><name><surname>Gion</surname><given-names>T.</given-names></name><name><surname>Hider</surname><given-names>R. J.</given-names></name><name><surname>Wester</surname><given-names>B.</given-names></name><etal/></person-group>. (<year>2021</year>). <article-title>“An Integrated toolkit for extensible and reproducible neuroscience,”</article-title> in <source>43rd Annual International Conference of the IEEE Engineering in Medicine and Biology Society, IEEE EMBC</source> (<publisher-loc>Mexico City</publisher-loc>), <fpage>2413</fpage>–<lpage>2418</lpage>. <?supplied-pmid 34891768?></mixed-citation>
    </ref>
    <ref id="B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Matelsky</surname><given-names>J. K.</given-names></name><name><surname>Downs</surname><given-names>J.</given-names></name><name><surname>Cowley</surname><given-names>H. P.</given-names></name><name><surname>Wester</surname><given-names>B.</given-names></name><name><surname>Gray-Roncal</surname><given-names>W.</given-names></name></person-group> (<year>2020</year>). <article-title>A substrate for modular, extensible data-visualization</article-title>. <source>Big Data Anal</source>
<volume>5</volume>, <fpage>1</fpage>. <pub-id pub-id-type="doi">10.1186/s41044-019-0043-6</pub-id><?supplied-pmid 33880186?><pub-id pub-id-type="pmid">33880186</pub-id></mixed-citation>
    </ref>
    <ref id="B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mikula</surname><given-names>S.</given-names></name></person-group> (<year>2016</year>). <article-title>Progress towards mammalian whole-brain cellular connectomics</article-title>. <source>Front. Neuroanatomy</source>
<volume>10</volume>, <fpage>62</fpage>. <pub-id pub-id-type="doi">10.3389/fnana.2016.00062</pub-id><?supplied-pmid 27445704?><pub-id pub-id-type="pmid">27445704</pub-id></mixed-citation>
    </ref>
    <ref id="B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Morgan</surname><given-names>J. L.</given-names></name><name><surname>Lichtman</surname><given-names>J. W.</given-names></name></person-group> (<year>2020</year>). <article-title>An individual interneuron participates in many kinds of inhibition and innervates much of the mouse visual thalamus</article-title>. <source>Neuron</source>
<volume>106</volume>, <fpage>468</fpage>–<lpage>481</lpage>.e2. <pub-id pub-id-type="doi">10.1016/j.neuron.2020.02.001</pub-id><?supplied-pmid 32142646?><pub-id pub-id-type="pmid">32142646</pub-id></mixed-citation>
    </ref>
    <ref id="B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Phelps</surname><given-names>J. S.</given-names></name><name><surname>Hildebrand</surname><given-names>D. G. C.</given-names></name><name><surname>Graham</surname><given-names>B. J.</given-names></name><name><surname>Kuan</surname><given-names>A. T.</given-names></name><name><surname>Thomas</surname><given-names>L. A.</given-names></name><name><surname>Nguyen</surname><given-names>T. M.</given-names></name><etal/></person-group>. (<year>2021</year>). <article-title>Reconstruction of motor control circuits in adult Drosophila using automated transmission electron microscopy</article-title>. <source>Cell</source><volume>184</volume>, <fpage>759</fpage>–<lpage>774</lpage>.e18. <pub-id pub-id-type="doi">10.1016/j.cell.2020.12.013</pub-id><?supplied-pmid 33400916?><pub-id pub-id-type="pmid">33400916</pub-id></mixed-citation>
    </ref>
    <ref id="B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pidhorskyi</surname><given-names>S.</given-names></name><name><surname>Morehead</surname><given-names>M.</given-names></name><name><surname>Jones</surname><given-names>Q.</given-names></name><name><surname>Spirou</surname><given-names>G.</given-names></name><name><surname>Doretto</surname><given-names>G.</given-names></name></person-group> (<year>2018</year>). <article-title>syglass: interactive exploration of multidimensional images using virtual reality head-mounted displays</article-title>. <source>arXiv [Preprint] arXiv:1804.08197</source>.</mixed-citation>
    </ref>
    <ref id="B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Saalfeld</surname><given-names>S.</given-names></name><name><surname>Cardona</surname><given-names>A.</given-names></name><name><surname>Hartenstein</surname><given-names>V.</given-names></name><name><surname>Tomancak</surname><given-names>P.</given-names></name></person-group> (<year>2009</year>). <article-title>CATMAID: collaborative annotation toolkit for massive amounts of image data</article-title>. <source>Bioinformatics</source>
<volume>25</volume>, <fpage>1984</fpage>–<lpage>1986</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btp266</pub-id><?supplied-pmid 19376822?><pub-id pub-id-type="pmid">19376822</pub-id></mixed-citation>
    </ref>
    <ref id="B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Scheffer</surname><given-names>L. K.</given-names></name><name><surname>Xu</surname><given-names>C. S.</given-names></name><name><surname>Januszewski</surname><given-names>M.</given-names></name><name><surname>Lu</surname><given-names>Z.</given-names></name><name><surname>Takemura</surname><given-names>S.-Y.</given-names></name><name><surname>Hayworth</surname><given-names>K. J.</given-names></name><etal/></person-group>. (<year>2020</year>). <article-title>A connectome and analysis of the adult drosophila central brain</article-title>. <source>eLife</source><volume>9</volume>:<fpage>e57443</fpage>. <pub-id pub-id-type="doi">10.7554/eLife.57443</pub-id><?supplied-pmid 32880371?><pub-id pub-id-type="pmid">32880371</pub-id></mixed-citation>
    </ref>
    <ref id="B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Vogelstein</surname><given-names>J. T.</given-names></name><name><surname>Mensh</surname><given-names>B.</given-names></name><name><surname>Häusser</surname><given-names>M.</given-names></name><name><surname>Spruston</surname><given-names>N.</given-names></name><name><surname>Evans</surname><given-names>A. C.</given-names></name><name><surname>Kording</surname><given-names>K.</given-names></name><etal/></person-group>. (<year>2016</year>). <article-title>To the cloud! a grassroots proposal to accelerate brain science discovery</article-title>. <source>Neuron</source><volume>92</volume>, <fpage>622</fpage>–<lpage>627</lpage>. <pub-id pub-id-type="doi">10.1016/j.neuron.2016.10.033</pub-id><?supplied-pmid 27810005?><pub-id pub-id-type="pmid">27810005</pub-id></mixed-citation>
    </ref>
    <ref id="B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Vogelstein</surname><given-names>J. T.</given-names></name><name><surname>Perlman</surname><given-names>E.</given-names></name><name><surname>Falk</surname><given-names>B.</given-names></name><name><surname>Baden</surname><given-names>A.</given-names></name><name><surname>Gray Roncal</surname><given-names>W.</given-names></name><name><surname>Chandrashekhar</surname><given-names>V.</given-names></name><etal/></person-group>. (<year>2018</year>). <article-title>A community-developed open-source computational ecosystem for big neuro data</article-title>. <source>Nat. Methods</source><volume>15</volume>, <fpage>846</fpage>–<lpage>847</lpage>. <pub-id pub-id-type="doi">10.1038/s41592-018-0181-1</pub-id><?supplied-pmid 30377345?><pub-id pub-id-type="pmid">30377345</pub-id></mixed-citation>
    </ref>
    <ref id="B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wilson</surname><given-names>A. M.</given-names></name><name><surname>Schalek</surname><given-names>R.</given-names></name><name><surname>Suissa-Peleg</surname><given-names>A.</given-names></name><name><surname>Jones</surname><given-names>T. R.</given-names></name><name><surname>Knowles-Barley</surname><given-names>S.</given-names></name><name><surname>Pfister</surname><given-names>H.</given-names></name><etal/></person-group>. (<year>2019</year>). <article-title>Developmental rewiring between cerebellar climbing fibers and purkinje cells begins with positive feedback synapse addition</article-title>. <source>Cell Rep.</source><volume>29</volume>, <fpage>2849</fpage>–<lpage>2861</lpage>.e6. <pub-id pub-id-type="doi">10.1016/j.celrep.2019.10.081</pub-id><?supplied-pmid 31775050?><pub-id pub-id-type="pmid">31775050</pub-id></mixed-citation>
    </ref>
    <ref id="B25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Witvliet</surname><given-names>D.</given-names></name><name><surname>Mulcahy</surname><given-names>B.</given-names></name><name><surname>Mitchell</surname><given-names>J. K.</given-names></name><name><surname>Meirovitch</surname><given-names>Y.</given-names></name><name><surname>Berger</surname><given-names>D. R.</given-names></name><name><surname>Wu</surname><given-names>Y.</given-names></name><etal/></person-group>. (<year>2021</year>). <article-title>Connectomes across development reveal principles of brain maturation</article-title>. <source>Nature</source><volume>596</volume>, <fpage>257</fpage>–<lpage>261</lpage>. <pub-id pub-id-type="doi">10.1038/s41586-021-03778-8</pub-id><?supplied-pmid 34349261?><pub-id pub-id-type="pmid">34349261</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

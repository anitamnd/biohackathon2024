<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Metabolites</journal-id>
    <journal-id journal-id-type="iso-abbrev">Metabolites</journal-id>
    <journal-id journal-id-type="publisher-id">metabolites</journal-id>
    <journal-title-group>
      <journal-title>Metabolites</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2218-1989</issn>
    <publisher>
      <publisher-name>MDPI</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">8000456</article-id>
    <article-id pub-id-type="pmid">33808985</article-id>
    <article-id pub-id-type="doi">10.3390/metabo11030163</article-id>
    <article-id pub-id-type="publisher-id">metabolites-11-00163</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>The mwtab Python Library for RESTful Access and Enhanced Quality Control, Deposition, and Curation of the Metabolomics Workbench Data Repository</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0002-4242-080X</contrib-id>
        <name>
          <surname>Powell</surname>
          <given-names>Christian D.</given-names>
        </name>
        <xref ref-type="aff" rid="af1-metabolites-11-00163">1</xref>
        <xref ref-type="aff" rid="af2-metabolites-11-00163">2</xref>
        <xref ref-type="aff" rid="af3-metabolites-11-00163">3</xref>
        <xref ref-type="aff" rid="af4-metabolites-11-00163">4</xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0003-3995-5368</contrib-id>
        <name>
          <surname>Moseley</surname>
          <given-names>Hunter N.B.</given-names>
        </name>
        <xref ref-type="aff" rid="af2-metabolites-11-00163">2</xref>
        <xref ref-type="aff" rid="af3-metabolites-11-00163">3</xref>
        <xref ref-type="aff" rid="af4-metabolites-11-00163">4</xref>
        <xref ref-type="aff" rid="af5-metabolites-11-00163">5</xref>
        <xref rid="c1-metabolites-11-00163" ref-type="corresp">*</xref>
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Kim</surname>
          <given-names>Seongho</given-names>
        </name>
        <role>Academic Editor</role>
      </contrib>
    </contrib-group>
    <aff id="af1-metabolites-11-00163"><label>1</label>Department of Computer Science (Data Science Program), University of Kentucky, Lexington, KY 40506, USA; <email>christian.powell@uky.edu</email></aff>
    <aff id="af2-metabolites-11-00163"><label>2</label>Markey Cancer Center, University of Kentucky, Lexington, KY 40506, USA</aff>
    <aff id="af3-metabolites-11-00163"><label>3</label>Superfund Research Center, University of Kentucky, Lexington, KY 40506, USA</aff>
    <aff id="af4-metabolites-11-00163"><label>4</label>Department of Molecular and Cellular Biochemistry, University of Kentucky, Lexington, KY 40506, USA</aff>
    <aff id="af5-metabolites-11-00163"><label>5</label>Institute for Biomedical Informatics, University of Kentucky, Lexington, KY 40506, USA</aff>
    <author-notes>
      <corresp id="c1-metabolites-11-00163"><label>*</label>Correspondence: <email>hunter.moseley@uky.edu</email></corresp>
    </author-notes>
    <pub-date pub-type="epub">
      <day>12</day>
      <month>3</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="collection">
      <month>3</month>
      <year>2021</year>
    </pub-date>
    <volume>11</volume>
    <issue>3</issue>
    <elocation-id>163</elocation-id>
    <history>
      <date date-type="received">
        <day>06</day>
        <month>2</month>
        <year>2021</year>
      </date>
      <date date-type="accepted">
        <day>10</day>
        <month>3</month>
        <year>2021</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© 2021 by the authors.</copyright-statement>
      <copyright-year>2021</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="pmc" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>Licensee MDPI, Basel, Switzerland. This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution (CC BY) license (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>).</license-p>
      </license>
    </permissions>
    <abstract>
      <p>The Metabolomics Workbench (MW) is a public scientific data repository consisting of experimental data and metadata from metabolomics studies collected with mass spectroscopy (MS) and nuclear magnetic resonance (NMR) analyses. MW has been constantly evolving; updating its ‘mwTab’ text file format, adding a JavaScript Object Notation (JSON) file format, implementing a REpresentational State Transfer (REST) interface, and nearly quadrupling the number of datasets hosted on the repository within the last three years. In order to keep up with the quickly evolving state of the MW repository, the ‘mwtab’ Python library and package have been continuously updated to mirror the changes in the ‘mwTab’ and JSONized formats and contain many new enhancements including methods for interacting with the MW REST interface, enhanced format validation features, and advanced features for parsing and searching for specific metabolite data and metadata. We used the enhanced format validation features to evaluate all available datasets in MW to facilitate improved curation and FAIRness of the repository. The ‘mwtab’ Python package is now officially released as version 1.0.1 and is freely available on GitHub and the Python Package Index (PyPI) under a Clear Berkeley Software Distribution (BSD) license with documentation available on ReadTheDocs.</p>
    </abstract>
    <kwd-group>
      <kwd>metabolomics workbench</kwd>
      <kwd>data validation</kwd>
      <kwd>data deposition</kwd>
      <kwd>python package</kwd>
    </kwd-group>
  </article-meta>
</front>
<body>
  <sec sec-type="intro" id="sec1-metabolites-11-00163">
    <title>1. Introduction</title>
    <p>The Metabolomics Workbench (MW) is a public scientific data repository of metabolomics experimental datasets that was established in 2013 [<xref rid="B1-metabolites-11-00163" ref-type="bibr">1</xref>]. The repository consists of experimental data and metadata from metabolomics studies collected with mass spectroscopy (MS) and nuclear magnetic resonance (NMR) technologies. Specific projects, studies, and experiments (analyses) can be accessed via MW in ‘mwTab’ (text-based files) or JavaScript Object Notation (JSON) formatted files [<xref rid="B2-metabolites-11-00163" ref-type="bibr">2</xref>,<xref rid="B3-metabolites-11-00163" ref-type="bibr">3</xref>]. MW offers a web-based interface to analyze, track, deposit, or download data. Additionally, MW offers a REpresentational State Transfer (REST) interface to download and view data [<xref rid="B4-metabolites-11-00163" ref-type="bibr">4</xref>]. When the ‘mwtab’ Python package was first published in August 2017 (30 August 2017), the MW contained a total of 634 analyses. Over the last three years, the MW repository has continued to quickly grow and now contains more than 1000 projects as of November 2020, which can be subdivided into more than 1500 studies and more than 2500 individual analyses. The MW has maintained its ‘mwTab’ file format, consisting of text-based blocks, which use tabs to organize data, and published an updated specification guide at the beginning of 2019.</p>
    <p>The ‘mwtab’ Python package was originally released in 2017 with the intent of creating a programmatic means of accessing and analyzing ‘mwTab’ formatted files from MW [<xref rid="B5-metabolites-11-00163" ref-type="bibr">5</xref>]. This package had the basic facilities for creating ‘mwTab’ formatted files to facilitate more automated deposition processes. In doing so, the package aimed to follow the FAIR data principles of findability, accessibility, interoperability, and reusability [<xref rid="B6-metabolites-11-00163" ref-type="bibr">6</xref>,<xref rid="B7-metabolites-11-00163" ref-type="bibr">7</xref>]. Since then the ‘mwtab’ package has seen a few updates, which have included various bug fixes and improvements. With the 1.0.1 release written in Python 3, we aimed to dramatically increase the functionality of the ‘mwtab’ package, while also updating the present methods to keep in line with changes in MW [<xref rid="B8-metabolites-11-00163" ref-type="bibr">8</xref>]. Release 1.0.1 includes updates to reflect the evolving changes in the ‘mwTab’ format specification, incorporates methods that utilize the MW’s REST interface, and provides a range of new validation functionality for quality control and curation purposes. These changes lay the foundations for expanding the ‘mwtab’ package functionality as a Command-Line Interface (CLI) and Python Application Programming Interface (API) to the MW data repository.</p>
  </sec>
  <sec sec-type="results" id="sec2-metabolites-11-00163">
    <title>2. Results</title>
    <sec id="sec2dot1-metabolites-11-00163">
      <title>2.1. Additional Functionality of the ‘mwtab’ Package Interface</title>
      <p>The package can be used in two ways: (1) as an API within Python scripts (see <xref rid="metabolites-11-00163-t001" ref-type="table">Table 1</xref>) and (2) as a CLI (see <xref rid="metabolites-11-00163-t002" ref-type="table">Table 2</xref>). The 1.0.1 release of the ‘mwtab’ package includes a number of new features and changes for both API and CLI usage. The 1.0.1 release is now available for import via pip from the Python Package Index (PyPI) or can be manually installed from the GitHub repository [<xref rid="B9-metabolites-11-00163" ref-type="bibr">9</xref>,<xref rid="B10-metabolites-11-00163" ref-type="bibr">10</xref>].</p>
    </sec>
    <sec id="sec2dot2-metabolites-11-00163">
      <title>2.2. Evaluation of the Metabolomics Workbench Repository</title>
      <sec id="sec2dot2dot1-metabolites-11-00163">
        <title>2.2.1. Analysis IDs with Files Missing from the Metabolomics Workbench</title>
        <p>As of 19 November 2020, a total of 1891 analyses were available for download through MW’s REST interface. When we attempted to download all available analyses, a number of analyses were not present for download in a given format. Of those analyses, three (3) could not be downloaded in ‘mwTab’ format and fifty (50) could not be downloaded in JSON format (see <xref rid="metabolites-11-00163-t003" ref-type="table">Table 3</xref>). Only blank pages were present for these files.</p>
      </sec>
      <sec id="sec2dot2dot2-metabolites-11-00163">
        <title>2.2.2. Analysis Files Which Could Not Be Parsed</title>
        <p>Of the 1888 downloaded analyses in ‘mwTab’ format, seventy (70) files could not be parsed into ‘~mwtab.mwtab.MWTabFile’ objects. Of the 1841 downloaded analyses in JSON format, 139 files could not be parsed into ‘~mwtab.mwtab.MWTabFile’ objects.</p>
        <p>Of the seventy (70) ‘mwTab’ files which could not be parsed; fifty (50) files contained formatting errors in one or more data lines in their ‘SUBJECT_SAMPLE_FACTORS’ section, seven (7) files contained ‘MS_METABOLITE_DATA’ sections missing their ‘#’ prefix, four (4) files contained errors in the ‘VERSION’ line of their ‘METABOLOMICS WORKBENCH’ section, four (4) files contained a duplication of the ‘PR:INSTITUTE’ item in their ‘PROJECT’ section, two (2) files contained formatting errors in the ‘AN:ANALYSIS_TYPE’ line of their ‘ANALYSIS’ section, one (1) file was missing the tab delineator in the ‘SP:SAMPLEPREP_PROTOCOL_FILENAME’ line of its’ ‘SAMPLEPREP’ section, one (1) file contained a large number of excessive tabs in its ‘METABOLOMICS WORKBENCH’ header line, and one (1) file was missing the ‘METABOLOMICS WORKBENCH’ section in its entirety.</p>
        <p>The 139 JSON files, which could not be parsed into ‘~mwtab.mwtab.MWTabFile’ objects, could not be parsed due to various formatting errors which broke the JSON format standard and prevented the loading of the file string into dictionary objects with the exception of a single file which lacked the ‘METABOLOMICS WORKBENCH’ section. It is also notable that there were thirteen analyses for which both the ‘mwTab’ and JSON formatted files contained errors.</p>
        <p>It is also notable that for twenty-four (24) analysis IDs, both the ‘mwTab’ and JSON formatted files contained errors, which prevented the files from being parsed. For a full list of files containing parsing errors see <xref ref-type="app" rid="app1-metabolites-11-00163">Supplemental Table S1</xref>.</p>
      </sec>
      <sec id="sec2dot2dot3-metabolites-11-00163">
        <title>2.2.3. Consistency Errors between ‘mwTab’ and JSON Formatted Files</title>
        <p>After the analyses were filtered to remove those that were missing data files or contained processing errors, a total of 1655 analyses remained for which data files were present in both ‘mwTab’ and JSON formats. These analyses were then parsed into ‘~mwtab.mwtab.MWTabFile’ objects. We then compared the pair of objects representing a single analysis to determine if the parsed items were equivalent. Of the 1685 analyses, 1345 analyses had ‘mwTab’ and JSON formatted files that did not match (see <xref ref-type="fig" rid="metabolites-11-00163-f001">Figure 1</xref>). Fourteen (14) analyses had ‘mwTab’ and JSON files which contained different section keys. This was commonly due to the extraneous inclusion of a blank ‘CHROMATOGRAPHY’ section within the ‘mwTab’ formatted data file. The remaining errors between formats can be broken down into; (1) errors in item sections (e.g., ‘PROJECT’, ‘STUDY’, ‘SUBJECT’, etc.), (2) errors in the ‘SUBJECT_SAMPLE_FACTORS’ section, and errors in data sections (e.g., ‘MS(NMR)_METABOLITES_DATA’, ‘NMR_BINNED_DATA’, ‘METABOLITES’, or ‘EXTENDED_MS(NMR)_METABOLITES_DATA’).</p>
        <p>When validating the item sections, 198 analyses contained mismatched item keys within a given section, and 982 analyses had mismatched item values within a given section. Most of the analyses which had data files containing mismatched item keys within sections had additional item keys in the ‘mwTab’ formatted data file. Additionally, two (2) analyses had JSON files in which the ‘CHROMATOGRAPHY’ section was a list as opposed to the expected dictionary.</p>
        <p>When validating the ‘SUBJECT_SAMPLE_FACTORS’ section of analyses, thirteen (13) analyses contained mismatched values in the section.</p>
        <p>When validating the ‘MS(NMR)_METABOLITES_DATA’ and ‘NMR_BINNED_DATA’ sections (further referred to as ‘_DATA’ sections), 869 analyses had some inconsistency within the section. Four (4) of the analyses (AN001492, AN001493, AN001499, and AN002428) had errors due to their JSON files missing a ‘Data’ item representing the ‘mwTab’ files ‘MS_METABOLITES_DATA’ section. Five (5) analyses (AN000441, AN001960, AN002398, AN002403, and AN002404) contained mismatched ‘_DATA’ units items, all likely due to encoding differences in characters used in the unit’s value. The remaining analyses contained mismatched values within the individual data entries.</p>
      </sec>
      <sec id="sec2dot2dot4-metabolites-11-00163">
        <title>2.2.4. Validation Errors in ‘mwTab’ Formatted Files</title>
        <p>The downloaded ‘mwTab’ formatted files which could be parsed into ‘~mwtab.mwtab.MWTabFile’ objects were validated using the ‘~mwtab.validator.validate_file()’ method. Of the 1818 ‘mwTab’ files which could be parsed, 1539 of the files contained some validation error(s) (see <xref ref-type="fig" rid="metabolites-11-00163-f002">Figure 2</xref>). In total, 1272 analysis files were found to have schema errors; 706 analysis files had null values in section items; and 391 data files had inconsistent sample IDs across their ‘SUBJECT_SAMPLE_FACTORS’ and ‘_DATA’ sections. Additionally, one (1) data file had inconsistent sample IDs across its ‘SUBJECT_SAMPLE_FACTORS’ and ‘EXTENDED_MS_METABOLITE_DATA’ sections. Thirty-seven (37) data files had missing ‘_DATA’ sections with no ‘MS_RESULTS_FILE’ item in their ‘MS’ section, effectively lacking any experimental data. Five (5) data files had null values in one or more fields within a sample data line in their ‘SUBJECT_SAMPLE_FACTORS’ section.</p>
      </sec>
      <sec id="sec2dot2dot5-metabolites-11-00163">
        <title>2.2.5. Consistency Issues in ‘METABOLITES’ Section Metabolite Metadata Headings</title>
        <p>MS and targeted NMR (files containing a ‘NMR_METABOLITES_DATA’ section) files from the downloaded analysis entries also had their metabolite metadata headings (field values) within their ‘METABOLITES’ section searched with Regular Expressions (RegExs) for fields which matched the standardized field names (i.e., pubchem_id, inchi_key, etc.). Of the 1818 downloaded ‘mwTab’ files, 1216 of the files contained field names which matched commonly used fields. The RegExs used and values matched can be seen in <xref rid="metabolites-11-00163-t004" ref-type="table">Table 4</xref>. While MW allows for users to specify these fields, the lack of consistency in field names across files presents a large issue hindering reuse of multiple studies in meta-analyses.</p>
        <p>A few logical errors were also found with some of the user-specified field names during the matching process. One user-specified field name that matched the ‘retention_index’ standardized field name was ‘retention index (min)’. The retention index is a dimensionless measure as it is a normalization of a given compound retention time in relation to the retention times of two eluted standards. Additionally, it was found that some user-specified fields which matched the standardized ‘retention_time’ field contained unit denotations in the field name (e.g., ‘retention_time(min)’) while others did not. We suggest that depositors include a ‘retention_time_units’ heading for increased parsability.</p>
      </sec>
    </sec>
    <sec id="sec2dot3-metabolites-11-00163">
      <title>2.3. Files Which Lack Data</title>
      <p>MW serves as a repository for MS and NMR study data, and as a result, all files should contain either MS or NMR processed intensity data. If data are not explicitly included in the ‘MS_METABOLITE_DATA’ for NMR analyses, a ‘MS_RESULTS_FILE’ item should be included in the files ‘MS’. Currently, there is no equivalent ‘NMR_RESULTS_FILE’ item in MW’s format specification for the ‘NMR’ section. Further, 37 analyses from the downloaded ‘mwTab’ files contained no experimental data and failed to include a results file line. It is notable that result files from studies which do contain a ‘MS_RESULTS_FILE’ item can be downloaded through the MW File Transfer Protocol (FTP) server in the form of <uri xlink:href="http://www.metabolomicsworkbench.org/Studies/”results_filename”">http://www.metabolomicsworkbench.org/Studies/”results_filename”</uri>.</p>
    </sec>
  </sec>
  <sec sec-type="discussion" id="sec3-metabolites-11-00163">
    <title>3. Discussion</title>
    <p>Since the first release of the ‘mwtab’ Python package, the MW repository and the ‘mwTab’ file format have seen a number of revisions and have expanded greatly. In order to keep up with MW, the ‘mwtab’ package has also seen a number of changes and bug fixes to match changes in both the ‘mwTab’ file format and MW’s web-based interfaces. The 1.0.1 release of the ‘mwtab’ package not only includes changes to update to the latest standards of MW, but also includes new functionality to improve programmatic access to MW. The package can now be used to work with MW’s JSON formatted analysis files. The package includes new validation functions that are useful in implementing or improving automatic data deposition pipelines and in facilitating multi-study meta-analyses. Further, the package includes new functionality to retrieve and interact with data from MW, which is not in its ‘mwTab’ file format. All improvements and expansions to the package are mirrored in both the API and the CLI. The extensive documentation for the ‘mwtab’ package has been expanded to document all new functionalities. The documentation includes a ‘User Guide’, ‘Tutorial’, and ‘API reference’ generated automatically from the source code and is still available at <uri xlink:href="http://mwtab.readthedocs.io">http://mwtab.readthedocs.io</uri>. The ‘mwtab’ package’s automated unit-tests have been expanded to test all new modules and functionality of the package and also generate test coverage reports.</p>
    <p>We used the updated ‘mwtab’ package to check the metadata quality and data reusability of all available metabolomics datasets from the MW Data Repository. During our quality control and quality assessment (QC/QA) analysis, we found a large number of errors and consistency issues in data hosted by MW. When attempting to retrieve entries from the depository, fifty-three (53) analyses had blank entries for either their ‘mwTab’ or JSON formatted data file; 185 analyses contained gross formatting errors in either their ‘mwTab’ or JSON formatted data files (70 ‘mwTab’ and 139 JSON formatted files), which prevented the files from being parsed into ‘~mwtab.mwtab.MWTabFile’ objects; and 1345 of the 1655 analyses for which both ‘mwTab’ and JSON formatted data files could be downloaded contained inconsistencies across the file formats. A vast majority of ‘mwTab’ formatted files (1539 of 1818 files), which could be parsed into ‘~mwtab.mwtab.MWTabFile’ objects, contained validation errors in their content. Further, a large number of files (1216 of 1818 files) contained consistency errors in the naming of their metabolite metadata headings. Additionally, 37 analysis files lacked processed experimental data altogether.</p>
    <p>We provided the complete QC/QA validation report to Metabolomics Workbench in early February 2021. At the time of acceptance of this paper, the vast majority of the missing and non-parsable entry files had been fixed by Metabolomics Workbench staff. Further, most of the consistency issues are being actively addressed.</p>
    <p>There is a need for improving data and metadata quality and for the establishment of deposition standards [<xref rid="B11-metabolites-11-00163" ref-type="bibr">11</xref>,<xref rid="B12-metabolites-11-00163" ref-type="bibr">12</xref>,<xref rid="B13-metabolites-11-00163" ref-type="bibr">13</xref>,<xref rid="B14-metabolites-11-00163" ref-type="bibr">14</xref>]; however, we present the following suggestions that are narrowly focused on the repository format itself. Specifically, the prevalence of a large number of errors and consistency issues in data files from MW shows the need for improvements from the repository with respect to the implementation and maintenance of the ‘mwTab’ format. While MW has continued to update its file specifications, it has not updated many existing data files to the new standard. One way to address this could be to include named versions of the file specification and include the value as an item in the ‘METABOLOMICS WORKBENCH’ header sections. MW appears to include a ‘VERSION’ item line in the ‘METABOLOMICS WORKBENCH’ section, but it is unclear if the line specifies the version of the data file or the version of the ‘mwTab’ file specification. Additionally, the only version number present is “1” despite earlier data files not matching the updated file specification. A file specification version item line would allow for files hosted in a legacy specification to be easily identified from new up-to-date data files. Many public repositories include versioned file specification, such as the Protein Data Banks’ PDB file specification and Biological Magnetic Resonance Data Bank’s BMRB file specification, and these version specifications indicate major version, minor version, and patch or bug fix version of their respective format separated by a period [<xref rid="B15-metabolites-11-00163" ref-type="bibr">15</xref>,<xref rid="B16-metabolites-11-00163" ref-type="bibr">16</xref>]. Moreover, having both a data file version item line and a file format version item line is preferred so that both changes in content and format can be easily distinguished. We also recommend that MW implements methods to help standardize user-submitted headings. The methods should include common metabolite metadata headings matching in the ‘METABOLITES’ section along with whitespace stripping. These validation and consistency errors would hinder multi-study meta-analyses and large-scale computational analysis of the MW. Further, many of the consistency issues between ‘mwTab’ and JSON formatted data files appear to be caused by changes in character encodings. Therefore, we recommend adopting UTF-8 variable-width character encoding across both ‘mwTab’ and JSON formats. However, adopting UTF-8 encoding can be problematic for some legacy REST interface implementations.</p>
    <p>In all fairness, many of the issues presented here are directly or indirectly due to a lack of diligence and effort from depositors. Moreover, the support and maintenance of a public scientific repository requires a community effort and should not be viewed as the sole responsibility of the repository itself, but what incentive do depositors have to do a good deposition, let alone a superior deposition, when a poor deposition is enough to satisfy the minimum data sharing requirements from journals and funding agencies? Therefore, we propose the idea of certification levels for depositions based on the quality and consistency of metadata provided. Since data quality is experiment dependent, the certification requirements would focus on metadata quality and indirectly data quality via the inclusion of data quality metrics. This idea has similarities to various curation metrics such as the UniProt Knowledgebase annotation score, which provides a heuristic score representing both the quality and quantity of the content supporting a UniProtKB entry or proteome [<xref rid="B17-metabolites-11-00163" ref-type="bibr">17</xref>,<xref rid="B18-metabolites-11-00163" ref-type="bibr">18</xref>]. However, there is a fundamental difference, since completeness of metadata to a certain high standard would be a requirement for the proposed certification. Furthermore, a certification system that includes a high-standard “gold” level would provide an incentive for depositors to do more than just the minimum required, since such certifications would help demonstrate research product quality and could be used in grant proposals and yearly progress reports. Since standard deposition would not require certification, depositors can still satisfy initial deposition requirements for publication while working towards refining depositions for certification. Further, the metabolomics repositories and the research community via scientific societies and standardization groups could work together to develop the requirements for deposition certification that would promote FAIRness and enable large-scale meta-analysis. Eventually, workshops could be developed for training depositors to reach certification.</p>
  </sec>
  <sec sec-type="methods" id="sec4-metabolites-11-00163">
    <title>4. Methods</title>
    <sec id="sec4dot1-metabolites-11-00163">
      <title>4.1. Updates to the ‘mwTab’ Format</title>
      <p>The ‘mwTab’ format specification was last updated on 5 February 2019. The updated ‘mwTab’ format specification is available on the MW website (mwTab file format specification. Available online: <uri xlink:href="https://www.metabolomicsworkbench.org/data/mwTab_specification.pdf">https://www.metabolomicsworkbench.org/data/mwTab_specification.pdf</uri>, accessed on 19 November 2020).</p>
      <p>The ‘mwTab’ format has remained mostly the same with the exception of a few additions (see <xref ref-type="fig" rid="metabolites-11-00163-f003">Figure 3</xref>). These additions to the ‘mwTab’ format include (1) the addition of DataTrack and Project IDs in the ‘METABOLOMICS WORKBENCH’ header line, (2) the requirement of a ‘RAW_FILE_NAME’ item in the ‘Additional sample data’ column (also now present as the ‘Raw file names and additional sample data’ column) of the ‘SUBJECT_SAMPLE_FACTORS’ section, (3) the expansion of key-value pairs in the ‘MS:MS_RESULTS_FILE’ lines in the ‘MS’ block, and (4) the allowance of a ‘NMR_METABOLITES_DATA’ block for targeted NMR studies. Many of these items are not explicitly stated as being updates to the ‘mwTab’ format, but as of November 2020 are present in a significant number of analyses.</p>
      <p>Additionally, we have worked with the MW staff in developing one major improvement to the ‘mwTab’ file format and one convention in the format’s use, which have been accepted in depositions to MW. The major improvement to the ‘mwTab’ file format is the creation of the ‘EXTENDED_MS(NMR)_METABOLITE_DATA’ subsection in the ‘METABOLITES’ section, which allows the deposition of data that are both sample-specific and metabolite-specific and beyond the single intensity value allowed in the ‘MS(NMR)_METABOLITE_DATA’ block. <xref ref-type="fig" rid="metabolites-11-00163-f004">Figure 4</xref> illustrates this new addition to the ‘mwTab’ format, which includes both the metabolite identifier and the sample identifier along with any additional data and metadata field that are simultaneously sample-specific and metabolite-specific. This allows for the inclusion of various additional measurements such as peak-width and peak-height for NMR datasets and the retention time for chromatography-separated mass spectrometry. Moreover, various data quality metrics can now be included in a ‘mwTab’ entry such as an intensity standard deviation or an assignment confidence. The new format convention facilitates deposition of related subject and sample information as extra codified metadata in the ‘SUBJECT_SAMPLE_FACTORS’ block. This allows for the capture and representation of lineages of subjects and samples and the metadata associated with each subject and sample. For example (see <xref ref-type="fig" rid="metabolites-11-00163-f005">Figure 5</xref>), a simple lineage could be cells extracted from a human subject for a cell culture experiment with downstream samples taken as aliquots for different analyses, but more complex subject-sample lineages could include multiple passages through a PDX mouse model. Further, the inclusion of these subject-sample lineages makes it much easier to link data across ‘mwTab’ entries from the same project representing separate analyses of different samples derived from the same group of subjects.</p>
    </sec>
    <sec id="sec4dot2-metabolites-11-00163">
      <title>4.2. Metabolomics Workbench JSON File Format</title>
      <p>When the ‘mwtab’ Python package was created, methods for converting MW’s ‘mwTab’ formatted files into JSON files were included. MW now allows for distribution of their data files in their own JSON format. The ‘mwtab’ Python package has been updated to mirror MW’s JSON format. The ‘~mwtab.mwtab.MWTabFile’ object is based upon an ordered dictionary structure. The dictionary structure of the object was changed to mirror the JSON format, allowing for ‘mwTab’ formatted files to be directly converted into their equivalent JSON format.</p>
    </sec>
    <sec id="sec4dot3-metabolites-11-00163">
      <title>4.3. Overview of the Metabolomics Workbench REST Interface</title>
      <p>The MW data repository provides multiple means of accessing the data stored. The Workbench provides a REST interface which allows for data to be accessed via HTTPS requests. REST URLs consist of three main parts; a context, an input specification, and an output specification (see <xref ref-type="fig" rid="metabolites-11-00163-f006">Figure 6</xref>). The context specifies the type of data/resource intended to be accessed. The input specification describes the item to be requested and consists of two parts; an input item and an input value. The input specification is dependent upon the context requested. The output specification describes the output to be generated by the request and also consists of two parts; an output item and an output format. The full MW REST API specification is available on the MW website (Metabolomics Workbench REST URL-based API Specification. Available online: <uri xlink:href="https://www.metabolomicsworkbench.org/tools/MWRestAPIv1.0.pdf">https://www.metabolomicsworkbench.org/tools/MWRestAPIv1.0.pdf</uri>, accessed on 19 November 2020).</p>
    </sec>
    <sec id="sec4dot4-metabolites-11-00163">
      <title>4.4. Package Implementation</title>
      <p>The ‘mwtab’ Python package previously consisted of seven modules: ‘mwtab.py’, ‘tokenizer.py’, ‘fileio.py’, ‘converter.py’, ‘mwschema.py’, ‘validator.py’, and ‘cli.py’. In the 1.0.1 release, changes were made to six of those modules (‘mwtab.py’, ‘tokenizer.py’, ‘fileio.py’, ‘mwschema.py’, ‘validator.py’, and ‘cli.py’), and two additional modules (‘mwrest.py’ and ‘mwextract.py’) were added to the package (see <xref ref-type="fig" rid="metabolites-11-00163-f007">Figure 7</xref>). The updates to the original package modules either (1) mirrored updates made to the ‘mwTab’ file format, (2) greatly expanded the ‘mwTab’ format validation capabilities, or (3) incorporated new functionality provided by the ‘mwrest.py’ and ‘mwextract.py’ modules.</p>
      <p>The ‘mwextract.py’ module implements a number of classes and functions for extracting metabolite data or metadata from ‘mwTab’ files (in both ‘mwTab’ and JSON format). The ‘~mwtab.mwextract.extract_metadata()’ method allows multiple ‘mwTab’ files to be searched and for a list of possible values to be generated from given section metadata keys. The ‘~mwtab.mwextract.extract_metabolites()’ method allows for multiple ‘mwTab’ files to be searched and for a list of metabolites to be generated from files containing a given set of metadata key-value pairs. The ‘~mwtab.mwextract.extract_metadata()’ method can be used to generate a list of metadata key-value pairs to use in the ‘~mwtab.mwextract.extract_metabolites()’ method.</p>
      <p>The ‘mwrest.py’ module implements the ‘~mwtab.mwtab.GenericMWURL’ and ‘~mwtab.mwtab.MWRESTFile’ classes. The ‘~mwtab.mwrest.GenericMWURL’ class provides a programmatic representation of a URL constructed for use with MW’s REST API. The ‘~mwtab.mwrest.GenericMWURL’ class takes two parameters; (1) a string representing a base URL which directs users to MW’s REST API (defaults to <uri xlink:href="https://www.metabolomicsworkbench.org/rest/">https://www.metabolomicsworkbench.org/rest/</uri>) and (2) a dictionary of key-value pairs of REST parameters. The class validates that the given REST parameters are valid and then combines them with the base URL to create a specific URL which can be used to access MW’s REST interface. These changes do not alter the standard usage of the ‘~mwatb.fileio.read_files()’ method, but enable these methods to take the ‘url’ parameter from a ‘~mwtab.mwrest.GenericMWURL‘ object and retrieve ‘mwTab’ formatted files. Behind the scenes, these methods perform HTTPS requests to retrieve the described data and/or metadata from the MW REST interface, provided the url specifies a valid entry which can be represented as an ‘mwTab’ formatted entry. Further, the functionality of the package has been increased beyond dealing with ‘mwTab’ formattable data. The ‘~mwtab.mwrest.MWRESTFile’ class mirrors the ‘~mwtab.mwtab.MWTabFile’ class in the ‘mwtab.py’ module, but serves as a representation of files which cannot be represented in an ‘mwTab’ format. There is now a ‘~mwtab.fileio.read_mwrest()’ function for downloading data which cannot be represented in an ‘mwTab’ file (ie. csv, json, and plain text data).</p>
      <p>The ‘validator.py’ module has seen a large number of improvements and now includes a number of new methods for validating additional sections of ‘mwTab’ files. The module previously contained methods for validating sample and factor ids and the section schemas of ‘mwTab’ files. The ‘validator.validate_file()’ method existed for these functions. The method has now been improved to include gathering of all existing validation errors and searches for an expanded number of errors. Methods now exist for validating the metabolites and metadata headings in the ‘METABOLITES’ block and for validating the data in the ‘MS(NMR)_METABOLITE_DATA’ or ‘NMR_BINNED_DATA’ blocks. All of these specific validation methods are called by the ‘~mwatb.validator.validate_file()’ method.</p>
      <p>The ‘cli.py’, ‘fileio.py’, ‘mwschema.py’, and ‘mwtab.py’ modules have all been updated to match the changes to the ‘mwTab’ file format and include the new functionality provided from the new ‘mwrest.py’ and ‘mwextract.py’ modules. For the full documentation, see the Read the Docs page at <uri xlink:href="https://mwtab.readthedocs.io/">https://mwtab.readthedocs.io/</uri> [<xref rid="B19-metabolites-11-00163" ref-type="bibr">19</xref>].</p>
      <p>As of 1 January 2020, Python 2 reached its end-of-life and will no longer be receiving new bug reports, fixes, or changes from the Python Software Foundation [<xref rid="B8-metabolites-11-00163" ref-type="bibr">8</xref>]. As a result, the 1.0.1 release of the ‘mwtab’ Python package was not developed with Python 2 support, and no future updates are planned to include Python 2 support. The 0.1 releases of the ‘mwtab’ package which does support Python 2 will, however, remain available through both GitHub and PyPI.</p>
    </sec>
    <sec id="sec4dot5-metabolites-11-00163">
      <title>4.5. Evaluation of the Metabolomics Workbench Repository</title>
      <p>The ‘mwtab’ package functionality was again evaluated on every available ‘mwTab’ and JSON formatted file available from MW (as of 19 November 2020). A total of 1891 analysis IDs were available, and the downloading of both ‘mwTab’ and JSON format data files was attempted through the MW REST interface.</p>
      <p>The files from MW were evaluated for a number of formatting and consistency errors/issues via a set of tested assertions. First, the successful download of each analysis file through MW’s REST API was tested in both ‘mwTab’ and JSON format. Second, the successful parsing of each downloaded file into MWTabFile objects was tested. Third, the consistency between parsed data from ‘mwTab’ and JSON formats was tested. Fourth, each parsed ‘mwTab’ formatted file was validated using the validation methods in the updated ‘mwtab’ Python package. Only ‘mwTab’ formatted data files where validated with the validation methods used would likely give fairly redundant results across both ‘mwTab’ and JSON formats. Lastly, the analysis file which contained ‘METABOLITES’ sections had its metabolite metadata headings parsed with RegExs which were used to detect commonly used fields. This was used to detect consistency issues in field names across analyses, which could hinder cross-study analysis.</p>
      <p>The method used to download all analysis files became the ‘download all’ CLI function. The method uses the ‘~mwtab.mwrest.analysis_ids()’ function to retrieve a list of available analysis IDs from MW. The method then retrieves and saves a data file for each of the available analysis IDs. We called the method twice: once to retrieve ‘mwTab’ formatted files (--to-format = txt) and once again to retrieve JSON formatted files (--to-format = json).</p>
      <p>We then attempted to parse each downloaded file into a ‘~mwtab.mwtab.MWTabFile’ object.</p>
      <p>Next, we used the ‘~mwtab.validator.validate_file()’ method to validate the contents of each resulting ‘~mwtab.mwtab.MWTabFile’ object. The method consists of four main sub-validation functions. The first function validates the consistency of sample ID and sample factors across the file. This function ensures that there are no blank sample ids or factors and that a subset of the sample ids from the ‘SUBJECT_SAMPLE_FACTORS’ block is present in the ‘_DATA’ blocks. The second function validates the consistency of metabolite names across the ‘MS(NMR)_METABOLITE_DATA’ and ‘METABOLITES’ blocks in MS files and targeted NMR files. The function ensures that there are no blank metabolite names and that the metabolites are present in both blocks of the file. The third function validates that no non-numeric values are present in MS processed experimental data. The fourth and final function validates each file against the expected ‘mwTab’ file format (‘mwTab’ schema). The function ensures that each required section is present with the appropriate metadata items.</p>
      <p>MS analysis files contain a ‘METABOLITES’ section which consists of a table of metabolites and metabolite metadata headings (i.e., fields). Commonly used fields include but are not limited to: Human Metabolome Database ID (hmdb_id), International Chemical Identifier (inchi_key), KEGG ID (kegg_id), mass over charge value (moverz), quantified mass over charge value (moverz_quant), PubChem ID (pubchem_id), retention index (retention_index), and retention time (retention_time) [<xref rid="B20-metabolites-11-00163" ref-type="bibr">20</xref>,<xref rid="B21-metabolites-11-00163" ref-type="bibr">21</xref>,<xref rid="B22-metabolites-11-00163" ref-type="bibr">22</xref>,<xref rid="B23-metabolites-11-00163" ref-type="bibr">23</xref>]. MW’s deposition policy allows users to specify the names of these fields, which makes it difficult to accurately parse these field names due to spelling inconsistencies. Therefore, we created RegExs to detect common aberrations so that a list of standardized field names can be used.</p>
    </sec>
    <sec id="sec4dot6-metabolites-11-00163">
      <title>4.6. Updates to the ‘mwtab’ Package Documentation</title>
      <p>Updates to the codebase were consistently documented using the Sphinx Python documentation style [<xref rid="B24-metabolites-11-00163" ref-type="bibr">24</xref>]. All additional documentation (‘User Guide’, ‘Tutorial’, ‘API Reference’, etc.) was also updated and is available at <uri xlink:href="https://mwtab.readthedocs.io/">https://mwtab.readthedocs.io/</uri>.</p>
      <p>The updated package documentation includes improvements to the docs/tutorial.ipynb file which contains basic information about the ‘mwTab’ file format as well as mwtab package usage details and examples. Additional Jupyter notebooks (api_examples.ipynb, cli_examples.ipynb, and diabetes_search.ipynb) have been included in the FigShare repository which provides a range of examples for using the application programming interface, the command line interface, as well as details on how to use the added mwextract module functionality to search directories of ‘mwTab’ formatted files for analyses associated with specific diseases (with the given example being diabetes).</p>
    </sec>
  </sec>
</body>
<back>
  <ack>
    <title>Acknowledgments</title>
    <p>The authors would like to acknowledge the amazing degree of care and effort that Shankar Subramaniam, Eoin Fahy, and the whole MW/UC San Diego team have put into provisioning FAIR access to metabolite studies and their incredible effort in expanding and maintaining the repository. We have been in regular contact with the MW staff members, and when we have raised issues with errors in specific data files or had questions, they have always promptly responded to resolve the issue, in some instances replying and resolving the issue in less than 12 h.</p>
  </ack>
  <fn-group>
    <fn>
      <p><bold>Publisher’s Note:</bold> MDPI stays neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <app-group>
    <app id="app1-metabolites-11-00163">
      <title>Supplementary Materials</title>
      <p>The following are available online at <uri xlink:href="https://www.mdpi.com/2218-1989/11/3/163/s1">https://www.mdpi.com/2218-1989/11/3/163/s1</uri>, Table S1: List of analysis IDs and the format of files which could not be parsed into ‘~mwtab.mwtab.MWTabFile’ objects and Table S2: List of common metabolite metadata headings from ‘METABOLITES’ blocks of MS analyses, Regular Expressions (RegExs) used to match field names, and examples of similar/matching fields present in analysis files.</p>
      <supplementary-material content-type="local-data" id="metabolites-11-00163-s001">
        <media xlink:href="metabolites-11-00163-s001.pdf">
          <caption>
            <p>Click here for additional data file.</p>
          </caption>
        </media>
      </supplementary-material>
    </app>
  </app-group>
  <notes>
    <title>Author Contributions</title>
    <p>Conceptualization, C.D.P. and H.N.B.M.; methodology, C.D.P. and H.N.B.M.; software, C.D.P.; validation, C.D.P.; formal analysis, C.D.P.; investigation, C.D.P.; resources, C.D.P. and H.N.B.M.; data curation, C.D.P.; writing—original draft preparation, C.D.P.; writing—review and editing, C.D.P. and H.N.B.M.; visualization, C.D.P.; supervision, H.N.B.M.; project administration, C.D.P. and H.N.B.M.; funding acquisition, H.N.B.M. Both authors have read and agreed to the published version of the manuscript.</p>
  </notes>
  <notes>
    <title>Funding</title>
    <p>This research was funded by NIH/NIEHS, grant number P42ES007380 (UK Superfund Research Center); NSF, grant number 1419282 (Moseley); NSF, grant number 2020026 (Moseley); and NIH, grant number R03OD030603 (Moseley).</p>
  </notes>
  <notes>
    <title>Institutional Review Board Statement</title>
    <p>Not applicable.</p>
  </notes>
  <notes>
    <title>Informed Consent Statement</title>
    <p>Not applicable.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Data Availability Statement</title>
    <p>The data presented in this study, supplemental materials, scripts used, and version of the updated mwtab Python package used are openly available in FigShare at <uri xlink:href="https://doi.org/10.6084/m9.figshare.12094104">https://doi.org/10.6084/m9.figshare.12094104</uri>.</p>
  </notes>
  <notes notes-type="COI-statement">
    <title>Conflicts of Interest</title>
    <p>The authors declare no conflict of interest. The funders had no role in the design of the study; in the collection, analyses, or interpretation of data; in the writing of the manuscript, or in the decision to publish the results.</p>
  </notes>
  <ref-list>
    <title>References</title>
    <ref id="B1-metabolites-11-00163">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sud</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Fahy</surname>
            <given-names>E.</given-names>
          </name>
          <name>
            <surname>Cotter</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Azam</surname>
            <given-names>K.</given-names>
          </name>
          <name>
            <surname>Vadivelu</surname>
            <given-names>I.</given-names>
          </name>
          <name>
            <surname>Burant</surname>
            <given-names>C.</given-names>
          </name>
          <name>
            <surname>Edison</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Fiehn</surname>
            <given-names>O.</given-names>
          </name>
          <name>
            <surname>Higashi</surname>
            <given-names>R.</given-names>
          </name>
          <name>
            <surname>Nair</surname>
            <given-names>K.S.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Metabolomics Workbench: An international repository for metabolomics data and metadata, metabolite standards, protocols, tutorials and training, and analysis tools</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2016</year>
        <volume>44</volume>
        <fpage>D463</fpage>
        <lpage>D470</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkv1042</pub-id>
        <?supplied-pmid 26467476?>
        <pub-id pub-id-type="pmid">26467476</pub-id>
      </element-citation>
    </ref>
    <ref id="B2-metabolites-11-00163">
      <label>2.</label>
      <element-citation publication-type="web">
        <person-group person-group-type="author">
          <name>
            <surname>Bray</surname>
            <given-names>T.</given-names>
          </name>
        </person-group>
        <article-title>The Javascript Object Notation (Json) Data Interchange Format (No. RFC 8259)</article-title>
        <comment>Technical Report</comment>
        <year>2017</year>
        <comment>Available online: <ext-link ext-link-type="uri" xlink:href="https://tools.ietf.org/html/rfc8259">https://tools.ietf.org/html/rfc8259</ext-link></comment>
        <date-in-citation content-type="access-date" iso-8601-date="2021-03-11">(accessed on 11 March 2021)</date-in-citation>
      </element-citation>
    </ref>
    <ref id="B3-metabolites-11-00163">
      <label>3.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Crockford</surname>
            <given-names>D.</given-names>
          </name>
        </person-group>
        <source>Javascript Object Notation, RFC 4627</source>
        <publisher-name>Internet Engineering Task Force</publisher-name>
        <publisher-loc>Fremont, CA, USA</publisher-loc>
        <year>2006</year>
      </element-citation>
    </ref>
    <ref id="B4-metabolites-11-00163">
      <label>4.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Fielding</surname>
            <given-names>R.</given-names>
          </name>
        </person-group>
        <article-title>Representational state transfer. Architectural Styles and the Design of Network-Based Software Architectures</article-title>
        <source>Ph.D. Thesis</source>
        <publisher-name>University of California Irvine</publisher-name>
        <publisher-loc>Irvine, CA, USA</publisher-loc>
        <year>2000</year>
      </element-citation>
    </ref>
    <ref id="B5-metabolites-11-00163">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Smelter</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Moseley</surname>
            <given-names>H.N.B.</given-names>
          </name>
        </person-group>
        <article-title>A Python library for FAIRer access and deposition to the Metabolomics Workbench Data Repository</article-title>
        <source>Metabolomics</source>
        <year>2018</year>
        <volume>14</volume>
        <fpage>64</fpage>
        <pub-id pub-id-type="doi">10.1007/s11306-018-1356-6</pub-id>
        <?supplied-pmid 29706851?>
        <pub-id pub-id-type="pmid">29706851</pub-id>
      </element-citation>
    </ref>
    <ref id="B6-metabolites-11-00163">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wilkinson</surname>
            <given-names>M.D.</given-names>
          </name>
          <name>
            <surname>Dumontier</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Aalbersberg</surname>
            <given-names>I.J.</given-names>
          </name>
          <name>
            <surname>Appleton</surname>
            <given-names>G.</given-names>
          </name>
          <name>
            <surname>Axton</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Baak</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Blomberg</surname>
            <given-names>N.</given-names>
          </name>
          <name>
            <surname>Boiten</surname>
            <given-names>J.W.</given-names>
          </name>
          <name>
            <surname>da Silva Santos</surname>
            <given-names>L.B.</given-names>
          </name>
          <name>
            <surname>Bourne</surname>
            <given-names>P.E.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The FAIR Guiding Principles for scientific data management and stewardship</article-title>
        <source>Sci. Data</source>
        <year>2016</year>
        <volume>3</volume>
        <fpage>160018</fpage>
        <pub-id pub-id-type="doi">10.1038/sdata.2016.18</pub-id>
        <?supplied-pmid 26978244?>
        <pub-id pub-id-type="pmid">26978244</pub-id>
      </element-citation>
    </ref>
    <ref id="B7-metabolites-11-00163">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Boeckhout</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Zielhuis</surname>
            <given-names>G.A.</given-names>
          </name>
          <name>
            <surname>Bredenoord</surname>
            <given-names>A.L.</given-names>
          </name>
        </person-group>
        <article-title>The FAIR guiding principles for data stewardship: Fair enough?</article-title>
        <source>Eur. J. Hum. Genet.</source>
        <year>2018</year>
        <volume>26</volume>
        <fpage>931</fpage>
        <lpage>936</lpage>
        <pub-id pub-id-type="doi">10.1038/s41431-018-0160-0</pub-id>
        <?supplied-pmid 29777206?>
        <pub-id pub-id-type="pmid">29777206</pub-id>
      </element-citation>
    </ref>
    <ref id="B8-metabolites-11-00163">
      <label>8.</label>
      <element-citation publication-type="confproc">
        <person-group person-group-type="author">
          <name>
            <surname>Van Rossum</surname>
            <given-names>G.</given-names>
          </name>
        </person-group>
        <article-title>Python Programming Language</article-title>
        <source>Proceedings of the USENIX Annual Technical Conference 2007</source>
        <conf-loc>Santa Clara, CA, USA</conf-loc>
        <conf-date>17–22 June 2007</conf-date>
        <volume>Volume 41</volume>
        <fpage>36</fpage>
      </element-citation>
    </ref>
    <ref id="B9-metabolites-11-00163">
      <label>9.</label>
      <element-citation publication-type="web">
        <article-title>Python Package Index</article-title>
        <comment>Available online: <ext-link ext-link-type="uri" xlink:href="https://pypi.org/">https://pypi.org/</ext-link></comment>
        <date-in-citation content-type="access-date" iso-8601-date="2021-01-01">(accessed on 1 January 2021)</date-in-citation>
      </element-citation>
    </ref>
    <ref id="B10-metabolites-11-00163">
      <label>10.</label>
      <element-citation publication-type="web">
        <article-title>GitHub</article-title>
        <comment>Available online: <ext-link ext-link-type="uri" xlink:href="https://github.com/">https://github.com/</ext-link></comment>
        <date-in-citation content-type="access-date" iso-8601-date="2021-01-01">(accessed on 1 January 2021)</date-in-citation>
      </element-citation>
    </ref>
    <ref id="B11-metabolites-11-00163">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fiehn</surname>
            <given-names>O.</given-names>
          </name>
          <name>
            <surname>Robertson</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Griffin</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Van Der Werf</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Nikolau</surname>
            <given-names>B.</given-names>
          </name>
          <name>
            <surname>Morrison</surname>
            <given-names>N.</given-names>
          </name>
          <name>
            <surname>Sumner</surname>
            <given-names>L.W.</given-names>
          </name>
          <name>
            <surname>Goodacre</surname>
            <given-names>R.</given-names>
          </name>
          <name>
            <surname>Hardy</surname>
            <given-names>N.W.</given-names>
          </name>
          <name>
            <surname>Taylor</surname>
            <given-names>C.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The metabolomics standards initiative (MSI)</article-title>
        <source>Metabolomics</source>
        <year>2007</year>
        <volume>3</volume>
        <fpage>175</fpage>
        <lpage>178</lpage>
        <pub-id pub-id-type="doi">10.1007/s11306-007-0070-6</pub-id>
      </element-citation>
    </ref>
    <ref id="B12-metabolites-11-00163">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Salek</surname>
            <given-names>R.M.</given-names>
          </name>
          <name>
            <surname>Neumann</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Schober</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Hummel</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Billiau</surname>
            <given-names>K.</given-names>
          </name>
          <name>
            <surname>Kopka</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Correa</surname>
            <given-names>E.</given-names>
          </name>
          <name>
            <surname>Reijmers</surname>
            <given-names>T.</given-names>
          </name>
          <name>
            <surname>Rosato</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Tenori</surname>
            <given-names>L.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Coordination of Standards in MetabOlomicS (COSMOS): Facilitating integrated metabolomics data access</article-title>
        <source>Metabolomics</source>
        <year>2015</year>
        <volume>11</volume>
        <fpage>1587</fpage>
        <lpage>1597</lpage>
        <pub-id pub-id-type="doi">10.1007/s11306-015-0810-y</pub-id>
        <?supplied-pmid 26491418?>
        <pub-id pub-id-type="pmid">26491418</pub-id>
      </element-citation>
    </ref>
    <ref id="B13-metabolites-11-00163">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Spicer</surname>
            <given-names>R.A.</given-names>
          </name>
          <name>
            <surname>Salek</surname>
            <given-names>R.</given-names>
          </name>
          <name>
            <surname>Steinbeck</surname>
            <given-names>C.</given-names>
          </name>
        </person-group>
        <article-title>A decade after the metabolomics standards initiative it’s time for a revision</article-title>
        <source>Sci. Data</source>
        <year>2017</year>
        <volume>4</volume>
        <fpage>1</fpage>
        <lpage>3</lpage>
        <pub-id pub-id-type="doi">10.1038/sdata.2017.138</pub-id>
      </element-citation>
    </ref>
    <ref id="B14-metabolites-11-00163">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rocca-Serra</surname>
            <given-names>P.</given-names>
          </name>
          <name>
            <surname>Salek</surname>
            <given-names>R.M.</given-names>
          </name>
          <name>
            <surname>Arita</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Correa</surname>
            <given-names>E.</given-names>
          </name>
          <name>
            <surname>Dayalan</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Gonzalez-Beltran</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Ebbels</surname>
            <given-names>T.M.D.</given-names>
          </name>
          <name>
            <surname>Goodacre</surname>
            <given-names>R.</given-names>
          </name>
          <name>
            <surname>Hastings</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Haug</surname>
            <given-names>K.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Data standards can boost metabolomics research, and if there is a will, there is a way</article-title>
        <source>Metabolomics</source>
        <year>2016</year>
        <volume>12</volume>
        <fpage>1</fpage>
        <lpage>13</lpage>
        <pub-id pub-id-type="doi">10.1007/s11306-015-0879-3</pub-id>
        <?supplied-pmid 26612985?>
        <pub-id pub-id-type="pmid">26612985</pub-id>
      </element-citation>
    </ref>
    <ref id="B15-metabolites-11-00163">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Berman</surname>
            <given-names>H.M.</given-names>
          </name>
          <name>
            <surname>Westbrook</surname>
            <given-names>J.D.</given-names>
          </name>
          <name>
            <surname>Feng</surname>
            <given-names>Z.</given-names>
          </name>
          <name>
            <surname>Gilliland</surname>
            <given-names>G.</given-names>
          </name>
          <name>
            <surname>Bhat</surname>
            <given-names>T.N.</given-names>
          </name>
          <name>
            <surname>Weissig</surname>
            <given-names>H.</given-names>
          </name>
          <name>
            <surname>Shindyalov</surname>
            <given-names>I.N.</given-names>
          </name>
          <name>
            <surname>Bourne</surname>
            <given-names>P.E.</given-names>
          </name>
        </person-group>
        <article-title>The Protein Data Bank</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2000</year>
        <volume>28</volume>
        <fpage>235</fpage>
        <lpage>242</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/28.1.235</pub-id>
        <?supplied-pmid 10592235?>
        <pub-id pub-id-type="pmid">10592235</pub-id>
      </element-citation>
    </ref>
    <ref id="B16-metabolites-11-00163">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ulrich</surname>
            <given-names>E.L.</given-names>
          </name>
          <name>
            <surname>Akutsu</surname>
            <given-names>H.</given-names>
          </name>
          <name>
            <surname>Doreleijers</surname>
            <given-names>J.F.</given-names>
          </name>
          <name>
            <surname>Harano</surname>
            <given-names>Y.</given-names>
          </name>
          <name>
            <surname>Ioannidis</surname>
            <given-names>Y.E.</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Livny</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Mading</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Maziuk</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Miller</surname>
            <given-names>Z.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>BioMagResBank</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2007</year>
        <volume>36</volume>
        <issue>Suppl. S1</issue>
        <fpage>D402</fpage>
        <lpage>D408</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkm957</pub-id>
        <?supplied-pmid 17984079?>
        <pub-id pub-id-type="pmid">17984079</pub-id>
      </element-citation>
    </ref>
    <ref id="B17-metabolites-11-00163">
      <label>17.</label>
      <element-citation publication-type="web">
        <article-title>UniProt Annotation Score</article-title>
        <comment>Available online: <ext-link ext-link-type="uri" xlink:href="https://www.uniprot.org/help/annotation_score">https://www.uniprot.org/help/annotation_score</ext-link></comment>
        <date-in-citation content-type="access-date" iso-8601-date="2021-01-01">(accessed on 1 January 2021)</date-in-citation>
      </element-citation>
    </ref>
    <ref id="B18-metabolites-11-00163">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pundir</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Magrane</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Martin</surname>
            <given-names>M.J.</given-names>
          </name>
          <name>
            <surname>O’Donovan</surname>
            <given-names>C.</given-names>
          </name>
        </person-group>
        <article-title>The UniProt Consortium Searching and Navigating UniProt Databases</article-title>
        <source>Curr. Protoc. Bioinform.</source>
        <year>2015</year>
        <volume>50</volume>
        <fpage>1</fpage>
        <lpage>27</lpage>
        <pub-id pub-id-type="doi">10.1002/0471250953.bi0127s50</pub-id>
      </element-citation>
    </ref>
    <ref id="B19-metabolites-11-00163">
      <label>19.</label>
      <element-citation publication-type="web">
        <article-title>ReadTheDocs</article-title>
        <comment>Available online: <ext-link ext-link-type="uri" xlink:href="https://readthedocs.org/">https://readthedocs.org/</ext-link></comment>
        <date-in-citation content-type="access-date" iso-8601-date="2021-01-01">(accessed on 1 January 2021)</date-in-citation>
      </element-citation>
    </ref>
    <ref id="B20-metabolites-11-00163">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wishart</surname>
            <given-names>D.S.</given-names>
          </name>
          <name>
            <surname>Feunang</surname>
            <given-names>Y.D.</given-names>
          </name>
          <name>
            <surname>Marcu</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Guo</surname>
            <given-names>A.C.</given-names>
          </name>
          <name>
            <surname>Liang</surname>
            <given-names>K.</given-names>
          </name>
          <name>
            <surname>Vázquez-Fresno</surname>
            <given-names>R.</given-names>
          </name>
          <name>
            <surname>Sajed</surname>
            <given-names>T.</given-names>
          </name>
          <name>
            <surname>Johnson</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Allison</surname>
            <given-names>P.</given-names>
          </name>
          <name>
            <surname>Karu</surname>
            <given-names>N.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>HMDB 4.0: The human metabolome database for 2018</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2018</year>
        <volume>46</volume>
        <fpage>D608</fpage>
        <lpage>D617</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkx1089</pub-id>
        <pub-id pub-id-type="pmid">29140435</pub-id>
      </element-citation>
    </ref>
    <ref id="B21-metabolites-11-00163">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Heller</surname>
            <given-names>S.R.</given-names>
          </name>
          <name>
            <surname>McNaught</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Pletnev</surname>
            <given-names>I.V.</given-names>
          </name>
          <name>
            <surname>Stein</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Tchekhovskoi</surname>
            <given-names>D.</given-names>
          </name>
        </person-group>
        <article-title>InChI, the IUPAC International Chemical Identifier</article-title>
        <source>J. Chemin</source>
        <year>2015</year>
        <volume>7</volume>
        <fpage>1</fpage>
        <lpage>34</lpage>
        <pub-id pub-id-type="doi">10.1186/s13321-015-0068-4</pub-id>
      </element-citation>
    </ref>
    <ref id="B22-metabolites-11-00163">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kanehisa</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Araki</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Goto</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Hattori</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Hirakawa</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Itoh</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Katayama</surname>
            <given-names>T.</given-names>
          </name>
          <name>
            <surname>Kawashima</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Okuda</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Tokimatsu</surname>
            <given-names>T.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>KEGG for linking genomes to life and the environment</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2007</year>
        <volume>36</volume>
        <issue>Suppl. S1</issue>
        <fpage>D480</fpage>
        <lpage>D484</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkm882</pub-id>
        <?supplied-pmid 18077471?>
        <pub-id pub-id-type="pmid">18077471</pub-id>
      </element-citation>
    </ref>
    <ref id="B23-metabolites-11-00163">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kim</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Cheng</surname>
            <given-names>T.</given-names>
          </name>
          <name>
            <surname>Gindulyte</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>He</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>He</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>Q.</given-names>
          </name>
          <name>
            <surname>Shoemaker</surname>
            <given-names>B.A.</given-names>
          </name>
          <name>
            <surname>Thiessen</surname>
            <given-names>P.A.</given-names>
          </name>
          <name>
            <surname>Yu</surname>
            <given-names>B.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>PubChem 2019 update: Improved access to chemical data</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2019</year>
        <volume>47</volume>
        <fpage>D1102</fpage>
        <lpage>D1109</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gky1033</pub-id>
        <?supplied-pmid 30371825?>
        <pub-id pub-id-type="pmid">30371825</pub-id>
      </element-citation>
    </ref>
    <ref id="B24-metabolites-11-00163">
      <label>24.</label>
      <element-citation publication-type="web">
        <article-title>Sphinx: Python Documentation Generator</article-title>
        <comment>Available online: <ext-link ext-link-type="uri" xlink:href="https://www.sphinx-doc.org/en/master/">https://www.sphinx-doc.org/en/master/</ext-link></comment>
        <date-in-citation content-type="access-date" iso-8601-date="2021-01-01">(accessed on 1 January 2021)</date-in-citation>
      </element-citation>
    </ref>
  </ref-list>
</back>
<floats-group>
  <fig id="metabolites-11-00163-f001" orientation="portrait" position="float">
    <label>Figure 1</label>
    <caption>
      <p>Bar chart depicting the count of consistency errors between ‘mwTab’ and JSON formatted data files. The total number of analyses for which both ‘mwTab’ and JSON formatted files were available upon download and could be parsed into ‘~mwtab.mwtab.MWTabFile’ objects is shown in blue on the left. The total number analyses with inconsistencies between the two available data file formats is shown in dark red second from the left. The remaining red bars show the number of analyses which possess each given inconsistency type.</p>
    </caption>
    <graphic xlink:href="metabolites-11-00163-g001"/>
  </fig>
  <fig id="metabolites-11-00163-f002" orientation="portrait" position="float">
    <label>Figure 2</label>
    <caption>
      <p>Bar chart depicting the count of validation errors in ‘mwTab’ formatted data files. The total number of analyses for which ‘mwTab’ files were available upon download and could be parsed into ‘~mwtab.mwtab.MWTabFile’ objects is shown in blue on the left. The total number of analyses with validation errors is shown in dark red second from the left. The remaining red bars show the number of analyses which possess each given error type.</p>
    </caption>
    <graphic xlink:href="metabolites-11-00163-g002"/>
  </fig>
  <fig id="metabolites-11-00163-f003" orientation="portrait" position="float">
    <label>Figure 3</label>
    <caption>
      <p>Overview of the updated ‘mwTab’ format: (<bold>a</bold>) Updated header block which now includes ‘PROJECT_ID’ key-value pair; (<bold>b</bold>) Uploaded ‘SUBJECT_SAMPLE_FACTORS’ block format with the additional ‘RAW_FILE_NAME’ field in the ‘Additional sample factors’ column; and (<bold>c</bold>) Updated ‘MS’ block format with additional key-value pairs appended to ‘MS:MS_RESULTS_FILE’ line.</p>
    </caption>
    <graphic xlink:href="metabolites-11-00163-g003"/>
  </fig>
  <fig id="metabolites-11-00163-f004" orientation="portrait" position="float">
    <label>Figure 4</label>
    <caption>
      <p>Overview of an ‘EXTEND_MS_METABOLITE_DATA’ section in the ‘METABOLITES’ block of an example ‘mwTab’ file.</p>
    </caption>
    <graphic xlink:href="metabolites-11-00163-g004"/>
  </fig>
  <fig id="metabolites-11-00163-f005" orientation="portrait" position="float">
    <label>Figure 5</label>
    <caption>
      <p>Overview of a ‘SUBJECT_SAMPLE_FACTORS’ block of an example ‘mwTab’ file. Additional sample-specific data and metadata can be included in this block as key-value pairs separated by semicolons (as highlighted). While their inclusion may appear cluttered, these key-value pairs are computer parsable and therefore interoperable.</p>
    </caption>
    <graphic xlink:href="metabolites-11-00163-g005"/>
  </fig>
  <fig id="metabolites-11-00163-f006" orientation="portrait" position="float">
    <label>Figure 6</label>
    <caption>
      <p>Pattern for crafting HTTPS requestable URLs to interface with the Metabolomics Workbench REST interface.</p>
    </caption>
    <graphic xlink:href="metabolites-11-00163-g006"/>
  </fig>
  <fig id="metabolites-11-00163-f007" orientation="portrait" position="float">
    <label>Figure 7</label>
    <caption>
      <p>Organization of the ‘mwtab’ Python package represented with Unified Modeling Language (UML) diagrams: (<bold>a</bold>) UML package diagram of the ‘mwtab’ Python library; (<bold>b</bold>) UML class diagram of the ‘fileio.py’ module; (<bold>c</bold>) UML class diagram of the ‘mwtab.py’ module; d. UML class diagram of the ‘converter.py’ module.</p>
    </caption>
    <graphic xlink:href="metabolites-11-00163-g007"/>
  </fig>
  <table-wrap id="metabolites-11-00163-t001" orientation="portrait" position="float">
    <object-id pub-id-type="pii">metabolites-11-00163-t001_Table 1</object-id>
    <label>Table 1</label>
    <caption>
      <p>Common patterns for using the ‘mwtab’ as a library.</p>
    </caption>
    <table frame="hsides" rules="groups">
      <thead>
        <tr>
          <th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Usage</th>
          <th align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Example</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Reading ‘mwTab’ Files From REST</td>
          <td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1"># create first REST URL <break/>mwt_rest_url = mwtab.GenericMWURL({ <break/>     “context”: “study”, <break/>     “input_item”: “analysis_id”, <break/>     “input_value”: “AN000002, <break/>     “output_item”: “mwtab”, <break/>     “output_format”: “txt”}).url <break/># create second REST URL <break/>another_mwt_rest_url = next(mwtab.generate_mwtab_urls(“AN000003”)) <break/># create a generator to call REST URLS and create MWTabFile objects <break/>mwt_generator = mwtab.read_files(mwt_rest_url, another_mwt_rest_url)</td>
        </tr>
        <tr>
          <td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Extracting Metadata</td>
          <td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1"># make a generator to create MWTabFile objects <break/>mwtabfile = next(fileio.read_files(“path-to-mwtabfile-dir”)) <break/># extract metadata <break/>extracted_values = mwextract.extract_metadata(mwtabfile, “LAST_NAME”)</td>
        </tr>
        <tr>
          <td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Extracting Metabolites</td>
          <td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1"># make a generator to create MWTabFile objects <break/>mwtabfile_gen = fileio.read_files(“path-to-mwtabfile-dir”) <break/># create matcher object <break/>matcher = mwextract.generate_matchers([(“PR:LAST_NAME”, “Smith”)]) <break/># extract metabolites data <break/>metabolite_dict = mwextract.extract_metabolites(mwtabfile_gen, matcher)</td>
        </tr>
      </tbody>
    </table>
  </table-wrap>
  <table-wrap id="metabolites-11-00163-t002" orientation="portrait" position="float">
    <object-id pub-id-type="pii">metabolites-11-00163-t002_Table 2</object-id>
    <label>Table 2</label>
    <caption>
      <p>Command patterns for using the ‘mwtab’ as a Command-Line Interface.</p>
    </caption>
    <table frame="hsides" rules="groups">
      <thead>
        <tr>
          <th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Command</th>
          <th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Description</th>
          <th align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Example</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">download</td>
          <td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Download files through the Metabolomics Workbench REST API</td>
          <td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">$ mwtab download all <break/>$ mwtab download 1 <break/>$ mwtab download AN000001 <break/>$ mwtab download ST000001 --context=study \ <break/>--input-item=study_id --output-item=mwtab \ <break/>--output-format=json <break/>$ mwtab download C20H34O11 --context=compound \ <break/>--input-item=formula --output-item=all --output-format=txt</td>
        </tr>
        <tr>
          <td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">extract</td>
          <td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Extract data or metadata from file(s)</td>
          <td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">$ mwtab extract metadata AN000001.txt./LAST_NAME \ <break/>CHROMATOGRAPHY_TYPE --to-format=csv <break/>$ mwtab extract metabolites file_dir/./PR:LAST_NAME \ <break/>Smith CH:CHROMATOGRAPHY_TYPE “Reversed phase” \ <break/>--to-format=json</td>
        </tr>
      </tbody>
    </table>
  </table-wrap>
  <table-wrap id="metabolites-11-00163-t003" orientation="portrait" position="float">
    <object-id pub-id-type="pii">metabolites-11-00163-t003_Table 3</object-id>
    <label>Table 3</label>
    <caption>
      <p>List of analysis IDs and the format of files that could not be downloaded through Metabolomics Workbench’s REST API.</p>
    </caption>
    <table frame="hsides" rules="groups">
      <thead>
        <tr>
          <th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">File Format</th>
          <th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Analysis ID</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">‘mwTab’</td>
          <td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">AN002380, AN002381, and AN002384</td>
        </tr>
        <tr>
          <td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">JSON</td>
          <td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">AN000255, AN000404, AN000405, AN000410, AN000415, AN000436, AN000439, AN000444, AN000446, AN000450, AN000663, AN000665, AN000667, AN000871, AN001856, AN002131, AN002132, AN002133, AN002134, AN002135, AN002136, AN002137, AN002138, AN002141, AN002142, AN002145, AN002147, AN002148, AN002149, AN002150, AN002151, AN002152, AN002153, AN002154, AN002157, AN002158, AN002159, AN002160, AN002161, AN002162, AN002163, AN002164, AN002165, AN002166, AN002167, AN002168, AN002169, AN002170, AN002171, and AN002314</td>
        </tr>
      </tbody>
    </table>
  </table-wrap>
  <table-wrap id="metabolites-11-00163-t004" orientation="portrait" position="float">
    <object-id pub-id-type="pii">metabolites-11-00163-t004_Table 4</object-id>
    <label>Table 4</label>
    <caption>
      <p>List of common metabolite metadata headings from ‘METABOLITES’ blocks of MS and targeted NMR analyses, Regular Expressions (RegExs) used to match field names, and examples of similar/matching fields present in analysis files. See <xref ref-type="app" rid="app1-metabolites-11-00163">Supplemental Table S2</xref> for a full list of matched field names.</p>
    </caption>
    <table frame="hsides" rules="groups">
      <thead>
        <tr>
          <th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Common Field Name</th>
          <th align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">RegEx Pattern(s)</th>
          <th align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Example Matched Field Names</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">hmdb_id</td>
          <td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">r”(?i)[\s|\S]{,}(HMDB)” <break/>r”(?i)(Human Metabolome D)[\S]{,}”</td>
          <td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">HMDB ID (*representative) <break/>HMDB (*Representative ID) <break/>HMDB_ID <break/>… Total 14 Fields</td>
        </tr>
        <tr>
          <td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">inchi_key</td>
          <td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">r”(?i)(inchi)[\S]{,}”</td>
          <td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Inchi_Key <break/>InChIKey <break/>InchiKey <break/>… Total 10 Fields</td>
        </tr>
        <tr>
          <td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">kegg_id</td>
          <td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">r”(?i)(kegg)$” <break/>r”(?i)(kegg)(\s|_)(i)”</td>
          <td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">KEGG <break/>KEGG I <break/>Kegg ID <break/>… Total 6 Fields</td>
        </tr>
        <tr>
          <td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">moverz</td>
          <td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">r”(?i)(m/z)”</td>
          <td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">m/z <break/>M/Z <break/>m/z rounded</td>
        </tr>
        <tr>
          <td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">moverz_quant</td>
          <td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">r”(?i)(moverz)(\s|_)(quant)” <break/>r”(?i)(quan)[\S]{,}(\s|_)(m)[\S]{,}(z)”</td>
          <td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Quantified m/z <break/>quantitated mz <break/>Moverz Quant <break/>… Total 10 Fields</td>
        </tr>
        <tr>
          <td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">other_id</td>
          <td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">r”(?i)(other)(\s|_)(id)$”</td>
          <td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Other ID <break/>Other_ID</td>
        </tr>
        <tr>
          <td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">pubchem_id</td>
          <td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">r”(?i)(pubchem)[\S]{,}”</td>
          <td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">PubChem CID <break/>Pubchem ID <break/>PubChem <break/>… Total 9 Fields</td>
        </tr>
        <tr>
          <td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">retention_index</td>
          <td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">r”(?i)(ri)$” <break/>r”(?i)(ret)[\s|\S]{,}(index)”</td>
          <td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">retention time index <break/>ri <break/>Retention index <break/>… Total 9 Fields</td>
        </tr>
        <tr>
          <td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">retention_time</td>
          <td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">r”(?i)(r)[\s|\S]{,}(time)[\S]{,}”</td>
          <td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">retention_times <break/>retention time index <break/>Retention Time <break/>… Total 20 Fields</td>
        </tr>
      </tbody>
    </table>
  </table-wrap>
</floats-group>

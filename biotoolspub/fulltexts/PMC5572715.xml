<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">5572715</article-id>
    <article-id pub-id-type="pmid">28186221</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btx078</article-id>
    <article-id pub-id-type="publisher-id">btx078</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Original Papers</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Sequence Analysis</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Kollector: transcript-informed, targeted <italic>de novo</italic> assembly of gene loci</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Kucuk</surname>
          <given-names>Erdi</given-names>
        </name>
        <xref ref-type="aff" rid="btx078-aff1">1</xref>
        <xref ref-type="aff" rid="btx078-aff2">2</xref>
        <xref ref-type="author-notes" rid="btx078-FM2"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Chu</surname>
          <given-names>Justin</given-names>
        </name>
        <xref ref-type="aff" rid="btx078-aff1">1</xref>
        <xref ref-type="aff" rid="btx078-aff2">2</xref>
        <xref ref-type="author-notes" rid="btx078-FM2"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Vandervalk</surname>
          <given-names>Benjamin P</given-names>
        </name>
        <xref ref-type="aff" rid="btx078-aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Hammond</surname>
          <given-names>S Austin</given-names>
        </name>
        <xref ref-type="aff" rid="btx078-aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Warren</surname>
          <given-names>René L</given-names>
        </name>
        <xref ref-type="aff" rid="btx078-aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Birol</surname>
          <given-names>Inanc</given-names>
        </name>
        <xref ref-type="aff" rid="btx078-aff1">1</xref>
        <xref ref-type="aff" rid="btx078-aff2">2</xref>
        <xref ref-type="aff" rid="btx078-aff3">3</xref>
        <xref ref-type="corresp" rid="btx078-cor1"/>
        <!--<email>ibirol@bcgsc.ca</email>-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Berger</surname>
          <given-names>Bonnie</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <aff id="btx078-aff1"><label>1</label>University of British Columbia, Vancouver, BC, Canada</aff>
    <aff id="btx078-aff2"><label>2</label>Canada’s Michael Smith Genome Sciences Centre, British Columbia Cancer Agency, Vancouver, BC, Canada</aff>
    <aff id="btx078-aff3"><label>3</label>Simon Fraser University, Burnaby, BC, Canada</aff>
    <author-notes>
      <corresp id="btx078-cor1">To whom correspondence should be addressed. Email: <email>ibirol@bcgsc.ca</email></corresp>
      <fn id="btx078-FM2">
        <p>The authors wish it to be known that, in their opinion, the first two authors should be regarded as Joint First Authors</p>
      </fn>
    </author-notes>
    <pub-date pub-type="ppub">
      <day>15</day>
      <month>6</month>
      <year>2017</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2017-02-10">
      <day>10</day>
      <month>2</month>
      <year>2017</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>10</day>
      <month>2</month>
      <year>2017</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. -->
    <volume>33</volume>
    <issue>12</issue>
    <fpage>1782</fpage>
    <lpage>1788</lpage>
    <history>
      <date date-type="received">
        <day>16</day>
        <month>9</month>
        <year>2016</year>
      </date>
      <date date-type="rev-recd">
        <day>02</day>
        <month>2</month>
        <year>2017</year>
      </date>
      <date date-type="accepted">
        <day>07</day>
        <month>2</month>
        <year>2017</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author 2017. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2017</copyright-year>
      <license xlink:href="http://creativecommons.org/licenses/by-nc/4.0/" license-type="cc-by-nc">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">http://creativecommons.org/licenses/by-nc/4.0/</ext-link>), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.com</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btx078.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="SA1">
        <title>Motivation</title>
        <p>Despite considerable advancements in sequencing and computing technologies, <italic>de novo</italic> assembly of whole eukaryotic genomes is still a time-consuming task that requires a significant amount of computational resources and expertise. A targeted assembly approach to perform local assembly of sequences of interest remains a valuable option for some applications. This is especially true for gene-centric assemblies, whose resulting sequence can be readily utilized for more focused biological research. Here we describe Kollector, an alignment-free targeted assembly pipeline that uses thousands of transcript sequences concurrently to inform the localized assembly of corresponding gene loci. Kollector robustly reconstructs introns and novel sequences within these loci, and scales well to large genomes—properties that makes it especially useful for researchers working on non-model eukaryotic organisms.</p>
      </sec>
      <sec id="SA2">
        <title>Results</title>
        <p>We demonstrate the performance of Kollector for assembling complete or near-complete <italic>Caenorhabditis elegans</italic> and <italic>Homo sapiens</italic> gene loci from their respective, input transcripts. In a time- and memory-efficient manner, the Kollector pipeline successfully reconstructs respectively 99% and 80% (compared to 86% and 73% with standard <italic>de novo</italic> assembly techniques) of <italic>C.elegans</italic> and <italic>H.sapiens</italic> transcript targets in their corresponding genomic space using whole genome shotgun sequencing reads. We also show that Kollector outperforms both established and recently released targeted assembly tools. Finally, we demonstrate three use cases for Kollector, including comparative and cancer genomics applications.</p>
      </sec>
      <sec id="SA3">
        <title>Availability and Implementation</title>
        <p>Kollector is implemented as a bash script, and is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/bcgsc/kollector">https://github.com/bcgsc/kollector</ext-link></p>
      </sec>
      <sec id="SA4">
        <title>Supplementary information</title>
        <p><xref ref-type="supplementary-material" rid="sup1">Supplementary data</xref> are available at <italic>Bioinformatics</italic> online.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">National Human Genome Research Institute of the National Institutes of Health</named-content>
        </funding-source>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">Genome British Columbia</named-content>
          <named-content content-type="funder-identifier">10.13039/501100000233</named-content>
        </funding-source>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="7"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec sec-type="intro">
    <title>Introduction</title>
    <p>Production of high quality reference genome sequences for non-model organisms remains a challenging undertaking, especially for large (&gt;1 Gbp) genomes. For such projects, <italic>de novo</italic> whole-genome assembly typically requires billions of sequencing reads from several different types of DNA libraries. Processing these large volumes of data, and using them to assemble a genome, usually necessitates access to a high-performance computing environment, significant expertise and specialized software (<xref rid="btx078-B13" ref-type="bibr">Nagarajan and Pop, 2013</xref>). An attractive alternative for generating reference sequences can be achieved through targeted assembly of gene/transcript sequences of interest. Even for species with scant transcriptomic sequence information, there are likely existing sequences that could be used to aid <italic>de novo</italic> assembly, such as homologous gene sequences from a related organism. Utilization of these data helps to localize the assembly problem, and ensures that the desired sequences (e.g. genic regions) are fully reconstructed. A favorable consequence of this localization is a reduction of the complexity and computational cost relative to that of a whole genome assembly. In practice, however, the computational cost of identifying reads related to target sequences has remained challenging due variation and novel sequences not found within a target.</p>
    <p>The first solution for the reconstruction of specific targets was accomplished with TASR, an alignment-free targeted <italic>de novo</italic> assembly software (<xref rid="btx078-B21" ref-type="bibr">Warren and Holt, 2011</xref>). This method was followed by Mapsembler (<xref rid="btx078-B15" ref-type="bibr">Peterlongo and Chikhi, 2012</xref>), which uses read alignments to guide the process, and presented a more memory-efficient and faster alternative. These pioneering targeted assembly technologies were originally designed to reconstruct specific transcript variants, fusion transcripts or genes from large consortium shotgun data, and have now found applications in human health research (<xref rid="btx078-B7" ref-type="bibr">Brown <italic>et al.</italic>, 2014</xref>; <xref rid="btx078-B20" ref-type="bibr">Warren <italic>et al.</italic>, 2012</xref>). These method are notably very efficient as they pair sequence recruitment with built in <italic>de novo</italic> assembly algorithms that utilizes internal data structures directly. Unfortunately, these targeted assembly tools have limited utility when an incomplete sequence bait is used to localize reads for assembly, such as using a transcript to reconstruct a whole genic region or the use of homologous, yet divergent, sequences as bait.</p>
    <p>To reconstruct incomplete regions, most modern methods utilize an iterative read recruitment process to fill in gaps. MITObim (<xref rid="btx078-B11" ref-type="bibr">Hahn <italic>et al.</italic>, 2013</xref>), GRAbB (<xref rid="btx078-B6" ref-type="bibr">Brankovics <italic>et al.</italic>, 2016</xref>) and aTRAM (<xref rid="btx078-B2" ref-type="bibr">Allen <italic>et al.</italic>, 2015</xref>) recruit reads based on sequences derived from read recruited in earlier iterations to extend novel regions of previously incomplete sequences. MITObim was designed to assemble mitochondrial sequences, and works by recruiting reads that share a 31-mer (subsequence of length 31) in common with the target, cycling through the read set multiple times until the target is reconstructed. GRAbB, works in a similar fashion, however it is designed to recruit reads for multiple targets at a time, and thus had been shown to computationally out-perform MITObim (<xref rid="btx078-B6" ref-type="bibr">Brankovics <italic>et al.</italic>, 2016</xref>). Finally, aTRAM is designed for assembling orthologs from a related genome, and utilizes BLAST (<xref rid="btx078-B3" ref-type="bibr">Altschul <italic>et al.</italic>, 1990</xref>) to index portions of the sequence reads so multiple iterations do not require multiple passes through the raw reads during the recruitment process at the cost of a higher memory usage. For each of these tools, after each cycle of recruitment, an assembly using an established assembly tools (e.g. Velvet; <xref rid="btx078-B24" ref-type="bibr">Zerbino and Birney, 2008</xref>) is performed and fed into later iterations to extend the bait sequence.</p>
    <p>Advances in RNA-Seq technology and <italic>de novo</italic> assembly tools (<xref rid="btx078-B10" ref-type="bibr">Grabherr <italic>et al.</italic>, 2011</xref>; <xref rid="btx078-B14" ref-type="bibr">Peng <italic>et al.</italic>, 2013</xref>; <xref rid="btx078-B17" ref-type="bibr">Robertson <italic>et al.</italic>, 2010</xref>) have made high-quality transcriptomes from non-model organisms increasingly available, which can provide a valuable resource to inform targeted assembly of genic regions. In this manuscript we introduce Kollector, an alignment-free targeted assembly pipeline that can use whole transcriptome assemblies to filter and classify whole genome shotgun sequencing reads, thereby localizing the <italic>de novo</italic> assembly of corresponding genic loci. The pipeline collects genomic reads related to target loci using a novel data structure called progressive Bloom filters implemented within BioBloom Tools (BBT) (<xref rid="btx078-B9" ref-type="bibr">Chu <italic>et al.</italic>, 2014</xref>), and assembles them with ABySS (<xref rid="btx078-B18" ref-type="bibr">Simpson <italic>et al.</italic>, 2009</xref>), a de Bruijn graph (<xref rid="btx078-B16" ref-type="bibr">Pevzner <italic>et al.</italic>, 2001</xref>) short read <italic>de novo</italic> assembler. Kollector is able to expand intronic regions iteratively, but in practice requires fewer number of iterations than previous methods by greedily populating progressive Bloom filters. We demonstrate efficient targeted assembly of <italic>Caenorhabditis elegans</italic> and <italic>Homo sapiens</italic> genes by Kollector, and its relative effectiveness compared to four published targeted assembly tools. We also show applications of Kollector in comparative and cancer genomics use cases.</p>
  </sec>
  <sec>
    <title>2 Materials and methods</title>
    <sec>
      <title>2.1 Progressive Bloom filters</title>
      <p>Bloom filters are memory-efficient probabilistic data structures with tunable false positives rates (<xref rid="btx078-B5" ref-type="bibr">Bloom, 1970</xref>). They are effective in storing sequences for use in fast, specific and sensitive sequence classification (<xref rid="btx078-B9" ref-type="bibr">Chu <italic>et al.</italic>, 2014</xref>; <xref rid="btx078-B19" ref-type="bibr">Stranneheim <italic>et al.</italic>, 2010</xref>). This works by shredding (<italic>k</italic>-merizing) a reference sequence, such as transcript sequences, into its constituent <italic>k</italic>-mers (subsequences of a uniform length <italic>k</italic>), and seeding a Bloom filter with these <italic>k</italic>-mers. This seeding sequence is also referred to as a bait sequence. One can then query the Bloom filter using <italic>k</italic>-mers derived from whole genome sequence reads, and test for sequence similarity at a given threshold. Within this paper, our match criteria is based on a similarity score threshold (a value between 0 and 1) described in the BioBloom Tools (BBT) manuscript (<xref rid="btx078-B9" ref-type="bibr">Chu <italic>et al.</italic>, 2014</xref>). Reads/queries are then categorized as match or no match.</p>
      <p>Implemented within BBT, we introduce efficient read recruitment using a novel data structure called a <italic>progressive Bloom filter</italic>. In a progressive Bloom filter, we scan a read set and greedily add additional <italic>k</italic>-mers from matching reads (and their pairs, when available) after each filter query. Because the sequence similarity/<italic>k</italic>-mer overlap threshold (<italic>r</italic> parameter) can result in partial overlaps, it allows for addition of new <italic>k</italic>-mers in the Bloom filter. Consequently, the contents of our Bloom filter will expand into genomic regions not found in our original seed sequences, such as intronic regions. This method works particularly well when read pairs are used, by incorporating the entire <italic>k</italic>-mer content of a read when its pair registers a positive match (<xref ref-type="supplementary-material" rid="sup1">Supplementary Algorithm S1</xref>). After the <italic>k</italic>-mer space is expanded sufficiently, the resulting Bloom filter can be used to again scan through the reads to recruit all relevant reads within the expanded regions of interest.</p>
    </sec>
    <sec>
      <title>2.2 Kollector pipeline</title>
      <p>In Kollector we first use BBT in progressive Bloom filter mode seeded with input transcript (target) sequences. We scan a set of genomic reads for reads pairs that share a user-defined amount of <italic>k</italic>-mer overlap based on the (<italic>r</italic> parameter) referred to as the tagging stage of Kollector. The threshold parameter <italic>r</italic> should remain high (0.5–0.9) to minimize off-target <italic>k</italic>-mer recruitment, but in the case of high read error rates, divergent or low coverage regions, a low value of <italic>r</italic> (0.2–0.5) might be used instead. Read tagging continues until the progressive Bloom filter reaches a user-defined maximum number of <italic>k</italic>-mers (<italic>n</italic> parameter), or until all the genomic reads are processed. The <italic>n</italic> parameter determines the maximum number of <italic>k</italic>-mers the progressive Bloom filter can contain to maintain a maximum FPR before the second stage mentioned below. The maximum FPR is determined by the <italic>f</italic> parameters in BBT, set to 0.001 by Kollector. In practice, <italic>n</italic> should be set to the maximum expectedsize of the total genic space being reconstructed. At this FPR the memory usage of the progressive Bloom filter will not exceed 15<italic>n</italic> bits.</p>
      <p>A real-data illustration of this process for a single <italic>C.elegans</italic> transcript C17E4.10 is shown in <xref ref-type="fig" rid="btx078-F1">Figure 1</xref>. As one would expect, initially tagged reads are derived from exonic regions, but as those reads are added to the filter it allows for reads from intronic regions to be tagged as well (from recruiting their pair), until reads spanning the entire gene have been added to the filter. This progressive Bloom filter is used to recruit reads that share a <italic>k</italic>-mer overlap with the filter based on the length of the read (<italic>s</italic> parameter, defined in BBT (<xref rid="btx078-B9" ref-type="bibr">Chu <italic>et al.</italic>, 2014</xref>)) within the entire read set in the second stage of the pipeline (All Recruited reads in <xref ref-type="fig" rid="btx078-F1">Fig. 1</xref>). The threshold parameter <italic>s</italic> uses the same similarity metric as <italic>r</italic> when evaluating reads, however <italic>s</italic> is not as critical since off-target read classifications will not propagate, and can remain safely set to values between 0.2 and 0.5.
</p>
      <fig id="btx078-F1" orientation="portrait" position="float">
        <label>Fig. 1.</label>
        <caption>
          <p>Genomic read tagging by progressive Bloom filter. Fold coverage of tagged reads is shown at points in time (first 300, 600 and 1200 and all tagged reads) during a single run with the <italic>C.elegans</italic> C17E4.10 gene as target. The raw read coverage is indicated solely as a baseline, to show the tagging process of the progressive Bloom filter. The final recruited coverage is shown in purple after the second stage of Kollector has collected all the reads. The fold coverage was calculated after read alignment to the reference transcript. In the Gene Model track, the black rectangles depict the exons and the connecting grey line depicts the introns</p>
        </caption>
        <graphic xlink:href="btx078f1"/>
      </fig>
      <p>In the third stage, the recruited reads are assembled with ABySS (v1.5.2; np = 12 CPUs, k = 96), and finally the input transcripts are aligned to the assembly with GMAP (version 2016-05-01; t = 10) (<xref rid="btx078-B23" ref-type="bibr">Wu and Watanabe, 2005</xref>) to report assembled scaffolds that contain the targeted loci. The peak memory of Kollector is dominated by of the downstream assembly algorithm used. By default, our pipeline uses ABySS 1.5.2 but in principle other assembly algorithms may be used as well.</p>
      <p>This pipeline can also be run in an iterative mode. Un- or partially-assembled targets from an earlier iteration may be selected as input, along with other targets, and fed back to the pipeline, as the read localization process and the resulting de Bruijn graph complexity are dependent on the context represented in the Bloom filters. Therefore, iterations may result in successful reconstructions for targets that had failed previous attempts.</p>
      <p>To improve the performance of Kollector in complex genomes, BBT can also take a Bloom filter of repeat sequences as an additional input, and use it to tag repeats while extending the progressive Bloom filter. Sequences that are tagged as repeats are not used for the expansion of the <italic>k</italic>-mer space within the filter, thus preventing the recruitment of off-target regions (<xref ref-type="fig" rid="btx078-F2">Fig. 2</xref>).</p>
      <fig id="btx078-F2" orientation="portrait" position="float">
        <label>Fig. 2.</label>
        <caption>
          <p>Graphic of progressive Bloom filter with repeat filtering. The black bars depict <italic>k</italic>-mers derived from the input transcripts. The grey bars depict the <italic>k</italic>-mer space after a few reads have been tagged and their constituent <italic>k</italic>-mers added to the Bloom filter</p>
        </caption>
        <graphic xlink:href="btx078f2"/>
      </fig>
    </sec>
  </sec>
  <sec>
    <title>3 Results</title>
    <p>We tested our tool on a variety of datasets <bold>(</bold><xref rid="btx078-T1" ref-type="table">Table 1</xref>), and in different targeted assembly contexts to show the utility and efficacy of Kollector. All benchmarks described below were obtained using a single high performance computer with 48 GB of RAM and 12 dual Intel Xeon X5650 2.66 GHz CPUs.
<table-wrap id="btx078-T1" orientation="portrait" position="float"><label>Table 1.</label><caption><p>Datasets used in targeted assembly experiments</p></caption><table frame="hsides" rules="groups"><thead><tr><th rowspan="1" colspan="1">#</th><th rowspan="1" colspan="1">Species</th><th rowspan="1" colspan="1">Datatype</th><th rowspan="1" colspan="1">Read lengths</th><th rowspan="1" colspan="1">Total bases</th><th rowspan="1" colspan="1">Raw Cov.</th><th rowspan="1" colspan="1">Source</th></tr></thead><tbody><tr><td rowspan="2" colspan="1">1</td><td rowspan="1" colspan="1"><italic>C.elegans</italic></td><td rowspan="1" colspan="1">WGS</td><td rowspan="1" colspan="1">110 bp</td><td rowspan="1" colspan="1">7.5 Gbp</td><td rowspan="1" colspan="1">75x</td><td rowspan="1" colspan="1">SRA Accession: DRR008444</td></tr><tr><td rowspan="1" colspan="1"><italic>C.elegans</italic></td><td rowspan="1" colspan="1">Transcripts</td><td rowspan="1" colspan="1">–</td><td rowspan="1" colspan="1">27 Mbp</td><td rowspan="1" colspan="1">–</td><td rowspan="1" colspan="1">RefSeq mRNA (&gt;1kb)</td></tr><tr><td rowspan="2" colspan="1">2</td><td rowspan="1" colspan="1"><italic>H.sapiens</italic></td><td rowspan="1" colspan="1">WGS</td><td rowspan="1" colspan="1">250 bp</td><td rowspan="1" colspan="1">229 Gbp</td><td rowspan="1" colspan="1">70x</td><td rowspan="1" colspan="1">SRA Accession: ERR309932</td></tr><tr><td rowspan="1" colspan="1"><italic>H.sapiens</italic></td><td rowspan="1" colspan="1">Transcripts</td><td rowspan="1" colspan="1">–</td><td rowspan="1" colspan="1">138 Mbp</td><td rowspan="1" colspan="1">–</td><td rowspan="1" colspan="1">TCGA barcode: 22-4593-01 assembled using Trans-ABySS (v1.5.1; <italic>k</italic> = 42)</td></tr><tr><td rowspan="2" colspan="1">3</td><td rowspan="1" colspan="1"><italic>P.glauca</italic></td><td rowspan="1" colspan="1">WGS</td><td rowspan="1" colspan="1">150–300 bp</td><td rowspan="1" colspan="1">1.2 Tbp</td><td rowspan="1" colspan="1">48x</td><td rowspan="1" colspan="1">SRA Accession: SRR1982100</td></tr><tr><td rowspan="1" colspan="1"><italic>P.glauca</italic></td><td rowspan="1" colspan="1">Transcripts</td><td rowspan="1" colspan="1">–</td><td rowspan="1" colspan="1">23 Mbp</td><td rowspan="1" colspan="1">–</td><td rowspan="1" colspan="1">Genome Annotation: GCA_000966675.1 (high confidence genes)</td></tr><tr><td rowspan="2" colspan="1">4</td><td rowspan="1" colspan="1"><italic>P.schaeffi</italic></td><td rowspan="1" colspan="1">WGS</td><td rowspan="1" colspan="1">100 bp</td><td rowspan="1" colspan="1">12.8 Gbp</td><td rowspan="1" colspan="1">128x</td><td rowspan="1" colspan="1">SRA Accession: SRX390495</td></tr><tr><td rowspan="1" colspan="1"><italic>P.Humanus</italic></td><td rowspan="1" colspan="1">Transcripts</td><td rowspan="1" colspan="1">–</td><td rowspan="1" colspan="1">2.44 Mbp</td><td rowspan="1" colspan="1">–</td><td rowspan="1" colspan="1">Dryad DOI: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.5061/dryad.9fk1s">http://dx.doi.org/10.5061/dryad.9fk1s</ext-link></td></tr><tr><td rowspan="2" colspan="1">5</td><td rowspan="1" colspan="1"><italic>M.musculus</italic></td><td rowspan="1" colspan="1">WGS</td><td rowspan="1" colspan="1">150 bp</td><td rowspan="1" colspan="1">116 Gbp</td><td rowspan="1" colspan="1">41x</td><td rowspan="1" colspan="1">SRA Accession: SRX1595526</td></tr><tr><td rowspan="1" colspan="1"><italic>H.sapiens</italic></td><td rowspan="1" colspan="1">Transcripts</td><td rowspan="1" colspan="1">–</td><td rowspan="1" colspan="1">57 Mbp</td><td rowspan="1" colspan="1">–</td><td rowspan="1" colspan="1">Ensembl bioMART</td></tr><tr><td rowspan="2" colspan="1">6</td><td rowspan="1" colspan="1"><italic>H.sapiens</italic></td><td rowspan="1" colspan="1">WGS</td><td rowspan="1" colspan="1">100 bp</td><td rowspan="1" colspan="1">13.8 Gbp</td><td rowspan="1" colspan="1">4x</td><td rowspan="1" colspan="1">TCGA barcode: TCGA-BA-4077 (subset)</td></tr><tr><td rowspan="1" colspan="1">HPV 16</td><td rowspan="1" colspan="1">Ref. Genome</td><td rowspan="1" colspan="1">–</td><td rowspan="1" colspan="1">8 Kbp</td><td rowspan="1" colspan="1">–</td><td rowspan="1" colspan="1">Papillomavirus Episteme</td></tr></tbody></table><table-wrap-foot><fn id="tblfna1"><p>The white spruce whole genome shotgun sequence read data reported in <xref rid="btx078-T1" ref-type="table">Table 1</xref> dataset #3 is available at the SRA under accession SRP041401 and Genome Annotation from the high-confidence genes are available at <ext-link ext-link-type="ftp" xlink:href="ftp://ftp.bcgsc.ca/supplementary/PG29_20140822/high_confidence_genes.fasta">ftp://ftp.bcgsc.ca/supplementary/PG29_20140822/high_confidence_genes.fasta</ext-link>.</p></fn></table-wrap-foot></table-wrap></p>
    <sec>
      <title>3.1 Targeted gene assembly using transcript sequences</title>
      <sec>
        <title>3.1.1 Kollector assemblies</title>
        <p>Kollector performs incrementally better when used iteratively, where genes not assembled in initial stages are provided as input for the next iteration. After each iteration, the target transcript sequences are aligned to the Kollector output with GMAP (<xref rid="btx078-B23" ref-type="bibr">Wu and Watanabe, 2005</xref>), and those that have a unique match to a single genomic contig along a certain sequence identity (default = 90%) are deemed to have been successfully reconstructed. Transcripts that do not satisfy this criterion are re-tried in the subsequent iteration by setting a lower specificity for sequence selection during the read collection phase. This is achieved by lowering the <italic>r</italic> parameter in each iteration (e.g. 0.90, 0.70, 0.50, 0.30, 0.20), while keeping the other parameters constant (<italic>s</italic> = 0.50, <italic>n</italic> = 100 000 000 in our experiments).</p>
        <p>Before running Kollector on <italic>H.sapiens</italic>, we randomly divided the transcriptome (<xref rid="btx078-T1" ref-type="table">Table 1</xref>, #2) into five bins of ∼10k transcripts each to prevent the memory usage of ABySS v1.5.2 from exceeding 48 GB of RAM. Each bin is used to initiate a single progressive Bloom filter in a separate Kollector run with a <italic>k</italic>-mer cap (-n) of 100 000 000. Each bin took 29 GB of RAM and completed within 12 h. Isoforms split across different bins may assemble the same genic region multiple times. Similarly, isoforms within the same bin will help reinforce the assembly of their common target locus from the improved read tagging. Highly similar transcripts originating from multi-copy genes may be collapsed into a single sequence, however, the extent of this depends on the assembly algorithm used by Kollector.</p>
        <p>Because progressive Bloom filters are also sensitive to the order of reads in the input file, Kollector has the option to shuffle the genomic reads before each iteration to reduce any potential bias created by read order (<xref ref-type="fig" rid="btx078-F3">Fig. 3</xref>). In our tests, read shuffling led to significant gains in the overall assembly success for both species, reaching 98.7% in <italic>C.elegans</italic> (13 378 out of 13 556 assembled) and 80.1% (41 631 out of 52 006 assembled) in <italic>H.sapiens</italic>.
</p>
        <fig id="btx078-F3" orientation="portrait" position="float">
          <label>Fig. 3.</label>
          <caption>
            <p>Performance of Kollector for assembling target sequences in (<bold>A</bold>) <italic>C. elegans</italic> and (<bold>B</bold>) <italic>H. sapiens.</italic> Genomic reads were randomly shuffled prior to being provided as input to the pipeline (solid lines, mean of 10 independent experiments). For comparison, runs with no shuffling are also depicted (dashed lines). The success rate was calculated as the proportion of target genes successfully assembled over five iterations</p>
          </caption>
          <graphic xlink:href="btx078f3"/>
        </fig>
        <p>To determine the efficacy of our targeted approach compared to a regular <italic>de novo</italic> assembly in reconstructing the genic space, we performed a whole genome assembly of the <italic>C.elegans</italic> and <italic>H.sapiens</italic> datasets discussed above. We used ABySS v1.5.2 to assemble both genomes, utilizing the same assembly <italic>k</italic>-mer size used within our targeted assemblies. This value of <italic>k</italic> was used because it yielded the highest N50 in a set of <italic>k</italic>-mer sweeps on the whole genome assembly. We found that only 85.7% and 72.9% of all genic regions were completely captured (within a single contig) in the <italic>C.elegans</italic> and <italic>H.sapiens</italic> whole genome <italic>de novo</italic> assemblies, respectively. Compared to 98.7% and the 80.1% with Kollector, these results show that performing targeted assembly increases reconstruction contiguity in genic regions. In addition, each complete whole genome assembly required more computational resources than Kollector, requiring 3 hours with 8 GB (single node) and 41 hours with 857 GB (18 nodes) for the <italic>C.elegans</italic> and <italic>H.sapiens</italic> assemblies, respectively.</p>
        <p>We investigated the failed reconstruction of 199 <italic>C.elegans</italic> transcripts (unshuffled experiment, <xref ref-type="fig" rid="btx078-F3">Fig 3A</xref> dashed line), and found that the failed targets had on average a longest intron length significantly larger than the successfully assembled ones (<italic>P</italic> = 1.5 × 10 <sup>−</sup> <sup>8</sup>; Student’s <italic>t</italic>-test; <xref ref-type="fig" rid="btx078-F4">Fig. 4A</xref>), indicating that the failure was due in part to the lengths of the longest introns. For targets with maximum intron lengths of approximately 20 kbp, we expect 50% of the reconstructions to fail reconstruction. However, we note that these large intron genes make-up a very small proportion of the total dataset (<xref ref-type="fig" rid="btx078-F4">Fig. 4B</xref>). Although the distributions suggest substantial overlap, and there were many long targets with successful assembly, with lengths comparable to the failed targets, our statistical test suggests that Kollector has a bias towards assembling smaller genes, likely due to the challenge of identifying enough genomic reads to connect exons separated by long introns. We expect that the use of longer reads and insert sizes (possibly mate-pair reads) could help alleviate some of these issues.
</p>
        <fig id="btx078-F4" orientation="portrait" position="float">
          <label>Fig. 4.</label>
          <caption>
            <p>(<bold>A</bold>) Longest intron length comparison between the <italic>C.elegans</italic> target genes that are successfully assembled (top) versus those that failed (bottom). Notches in the boxes represent a 95% confidence interval around the median. The length difference between two groups, represented on a logarithmic scale on the x-axis, is found to be statistically significant by <italic>t</italic>-test (<italic>P</italic> = 1.5 × 10 <sup>−</sup> <sup>8</sup>). This analysis yields the same result for gene length comparison (<xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S2</xref>) B) Proportion of successful gene assemblies versus longest introns (bars) with number of gene in each bin (lines). The first and second bins make up 10 237 and 1496 genes respectively, and make up 86% of all genes in the dataset (<xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S1</xref>)</p>
          </caption>
          <graphic xlink:href="btx078f4"/>
        </fig>
        <p>To evaluate the accuracy of the genomic contigs produced by Kollector, we aligned the output of a Kollector run from both species to their respective reference genome with BLASTn (<xref rid="btx078-B3" ref-type="bibr">Altschul, 1990</xref>), calling a correct alignment at a threshold of 95% query coverage and 95% sequence identity. Doing so, we find that 99.7% or more of the assembled genes satisfy these criteria in both species (<xref rid="btx078-T2" ref-type="table">Table 2</xref>).
<table-wrap id="btx078-T2" orientation="portrait" position="float"><label>Table 2.</label><caption><p>Accuracy of Kollector-assembled genes</p></caption><table frame="hsides" rules="groups"><colgroup span="1"><col valign="top" align="left" span="1"/><col valign="top" align="char" char="." span="1"/><col valign="top" align="char" char="." span="1"/><col valign="top" align="char" char="." span="1"/></colgroup><thead><tr><th rowspan="1" colspan="1">Species</th><th rowspan="1" colspan="1">Number of genes assembled</th><th rowspan="1" colspan="1">Number of genes aligned</th><th rowspan="1" colspan="1">Success rate</th></tr></thead><tbody><tr><td rowspan="1" colspan="1"><italic>C.elegans</italic></td><td rowspan="1" colspan="1">13 378</td><td rowspan="1" colspan="1">13 356</td><td rowspan="1" colspan="1">99.8</td></tr><tr><td rowspan="1" colspan="1"><italic>H.sapiens</italic></td><td rowspan="1" colspan="1">41 631</td><td rowspan="1" colspan="1">41 525</td><td rowspan="1" colspan="1">99.7</td></tr></tbody></table></table-wrap></p>
        <p>Due to the greedy nature of our algorithm it is possible to recruit off-target regions. The primary source of error is due to repeats, with minor contributions from false positives and read errors. We investigated these off-target events by aligning <italic>H.sapiens</italic> transcripts to the genome. We extracted the regions based on the start and end coordinates of all contigs produced by Kollector that aligned. We found that for contigs &gt;500bp, only 40% were on target. Though this may seem low, this assembly still represents a significantly smaller subset of the whole genome, and this analysis does not take into account contigs generated directly upstream of each gene.</p>
      </sec>
      <sec>
        <title>3.1.2 Comparisons against mapsembler, TASR, aTRAM and GRAbB</title>
        <p>Although not originally and specifically designed for reconstructing genomic loci from transcript sequences, we tested Mapsembler2 (v2.2.4) and TASR (v1.5.1) using the <italic>C.elegans</italic> genomic dataset and input transcripts. For Mapsembler2, we used the default <italic>k</italic>-mer size (<italic>k</italic> = 31) and the consensus sequence mode (-i 2), which means extensions of the target sequence are collapsed. We ran TASR using the independent, <italic>de novo</italic> assembly mode (-i 1) with default parameters, meaning targets are only used for read recruitment and not for seeding the assembly. We evaluated results of these tools with the same GMAP alignment criteria that we reported for Kollector. In our tests, Mapsembler2 and TASR assembled 28% and 18% of the targets, respectively (<xref rid="btx078-T3" ref-type="table">Table 3</xref>). In contrast, Kollector was able to assemble 97% of the target gene set in the first iteration alone. This is because Mapsembler2 and TASR are designed for re-assembling input targets within their respective sequence boundaries, with limited extension capability in the flanking regions, limiting their utility beyond single exon genes. Kollector’s progressive filtering algorithm, unlike the former approaches, can incorporate reads derived from intronic regions for assembly, as discussed.
<table-wrap id="btx078-T3" orientation="portrait" position="float"><label>Table 3.</label><caption><p>Comparison with Mapsembler2 and TASR</p></caption><table frame="hsides" rules="groups"><colgroup span="1"><col valign="top" align="left" span="1"/><col valign="top" align="char" char="." span="1"/><col valign="top" align="char" char="." span="1"/><col valign="top" align="char" char="." span="1"/><col valign="top" align="left" span="1"/><col valign="top" align="char" char="." span="1"/></colgroup><thead><tr><th rowspan="1" colspan="1">Method</th><th rowspan="1" colspan="1">Number of targets attempted</th><th rowspan="1" colspan="1">Number of targets assembled</th><th rowspan="1" colspan="1">Percentage of targets assembled</th><th rowspan="1" colspan="1">Wall clock time (h)</th><th rowspan="1" colspan="1">Peak memory (GB)</th></tr></thead><tbody><tr><td rowspan="1" colspan="1">Kollector</td><td rowspan="1" colspan="1">13 556</td><td rowspan="1" colspan="1">13 144</td><td rowspan="1" colspan="1">96.96</td><td rowspan="1" colspan="1">2</td><td rowspan="1" colspan="1">4.8</td></tr><tr><td rowspan="1" colspan="1">Mapsembler2</td><td rowspan="1" colspan="1">13 556</td><td rowspan="1" colspan="1">3 742</td><td rowspan="1" colspan="1">27.60</td><td rowspan="1" colspan="1">2</td><td rowspan="1" colspan="1">9.3</td></tr><tr><td rowspan="1" colspan="1">TASR</td><td rowspan="1" colspan="1">13 556</td><td rowspan="1" colspan="1">2418</td><td rowspan="1" colspan="1">17.83</td><td rowspan="1" colspan="1">3</td><td rowspan="1" colspan="1">15.6</td></tr><tr><td rowspan="1" colspan="1">aTram</td><td rowspan="1" colspan="1">1000</td><td rowspan="1" colspan="1">731</td><td rowspan="1" colspan="1">73.1</td><td rowspan="1" colspan="1">38</td><td rowspan="1" colspan="1">2.4</td></tr><tr><td rowspan="1" colspan="1">GRAbB</td><td rowspan="1" colspan="1">1000</td><td rowspan="1" colspan="1">425</td><td rowspan="1" colspan="1">42.5</td><td rowspan="1" colspan="1">48<xref ref-type="table-fn" rid="tblfn1"><sup>a</sup></xref></td><td rowspan="1" colspan="1">3.1</td></tr></tbody></table><table-wrap-foot><fn id="tblfn1"><label>a</label><p>Time of termination.</p></fn></table-wrap-foot></table-wrap></p>
        <p>We also tested iterative read recruitment methods aTRAM and GRAbB on a random subset of 1000 transcripts from our <italic>C.elegans</italic> dataset. A smaller subset was chosen as the methods proved intractable on larger datasets. To complete the computation of GRAbB, it requires stopping conditions such as a minimum length of assembly for each target. We provided GRAbB with the exact genomic lengths specified by the reference annotations. Despite this, we were unable to finish computation of GRAbB in a tractable amount of time, and instead took the intermediate results of the method after running GRAbB for 48 hours. We found that on these read subsets, aTRAM and GRAbB assembled 73.1% and 42.5% of the targets respectively. Despite the smaller size of the subset, Kollector outperformed both tools in speed, while utilizing a comparable amount of memory.</p>
      </sec>
      <sec>
        <title>3.1.3 Scaling to large genomes: gene assembly in white spruce</title>
        <p>Assembling complex and very large eukaryotic genomes is a computationally demanding process. Therefore, a targeted assembly approach for retrieving biologically important gene sequences remains an attractive option for most researchers. We have tested such a use case for Kollector using <italic>Picea glauca</italic> (white spruce), which has a genome size in the 20 Gbp range (<xref rid="btx078-B4" ref-type="bibr">Birol <italic>et al.</italic>, 2013</xref>; <xref rid="btx078-B22" ref-type="bibr">Warren <italic>et al.</italic>, 2015</xref>). For the species, Warren and colleagues derived a high-confidence set of 16 386 gene predictions and associated transcripts. Using these transcript sequences, Kollector was able to reconstruct 13 277 (80.4%) of the original target genes in a single iteration, requiring five processes, each using 43.3 GB of RAM and running for 24 hours.</p>
        <p>Researchers are often also interested in the regions immediately upstream and downstream of genes, which contain promoters and other regulatory elements. Due to the nature of the progressive filtering algorithm, Kollector assemblies may extend into these regions. In order to demonstrate this, we aligned the aforementioned high-quality transcript models to the resulting Kollector assemblies, and quantified the amount of sequence upstream and downstream with respect to the transcript. We show that, in addition to a gene’s exonic and intronic sequences, Kollector typically reconstructs approximately 1 kb of sequence beyond the 5’ and 3’ ends of the target transcript (<xref ref-type="fig" rid="btx078-F5">Fig. 5</xref>). Such extensions would enable characterization of the regulatory factors and complexes in the proximal promoter of genes of interest by chromatin immunoprecipitation, and would be especially empowering to studies of non-model organisms without available reference genome sequences.
</p>
        <fig id="btx078-F5" orientation="portrait" position="float">
          <label>Fig. 5.</label>
          <caption>
            <p>Length distribution of flanking regions, after Kollector assembly of <italic>P. glauca</italic> genes. In order to define the flanking regions, we aligned the high-confidence transcript models of white spruce to our Kollector assemblies and quantified the length of the sequence upstream (dashed line, upper <italic>x</italic> axis and right-side <italic>y</italic> axis) and the downstream (solid line, lower <italic>x</italic> axis and left <italic>y</italic> axis) of the input transcript alignment</p>
          </caption>
          <graphic xlink:href="btx078f5"/>
        </fig>
      </sec>
    </sec>
    <sec>
      <title>3.2 Targeted cross-species gene assembly</title>
      <p>Non-model organisms might not have extensive and well-annotated transcriptomes available to researchers. In such cases, Kollector can use transcript sequences from one species to reconstruct the genic regions of a related species.</p>
      <sec>
        <title>3.2.1 Cross-species assembly using kollector</title>
        <p>We tested Kollector using <italic>H.sapiens</italic> transcript sequences as bait to assemble orthologous (&gt;70% sequence identity) <italic>Mus musculus</italic> genes (<xref rid="btx078-T1" ref-type="table">Table 1</xref>, #4<bold>)</bold>. Despite being separated by approximately 90 million years of evolution (<ext-link ext-link-type="uri" xlink:href="http://timetree.org">http://timetree.org</ext-link>), Kollector was able to assemble 3295 of 4025 target genes in a single iteration (<italic>r </italic>= 0.90, assembly <italic>k </italic>= 96), corresponding to an 81.9% success rate, as assessed using the orthologous <italic>M. musculus</italic> transcripts. This single iteration took 4 hours using 18.1 GB of RAM.</p>
      </sec>
      <sec>
        <title>3.2.2 Comparisons to aTRAM</title>
        <p>We assessed Kollector’s performance against aTRAM (<xref rid="btx078-B2" ref-type="bibr">Allen <italic>et al.</italic>, 2015</xref>), which to our knowledge, is the only tool designed to assemble entire genes (including introns) guided by an input protein or DNA gene sequence with or without introns. In their study, <xref rid="btx078-B2" ref-type="bibr">Allen and co-workers (2015)</xref> used a dataset of 1534 conserved proteins from human head lice (<italic>Pediculus humanus</italic>) (<xref rid="btx078-B12" ref-type="bibr">Johnson <italic>et al.</italic>, 2014</xref>) to assemble orthologous genes in the chimpanzee lice (<italic>Pediculus schaeffi</italic>) genome. We ran Kollector using the same whole genome shotgun reads and corresponding cDNA sequences for each orthologous gene, and compared the results using two metrics: proportion of the target gene that aligned to the assembled scaffold, and number of assembled genes that passed a reciprocal best BLASTn hit test with each target gene.</p>
        <p>In our tests Kollector slightly outperformed aTRAM on both metrics (on average 99.3% to aTRAM’s 98.6%, and 1552 genes passing the reciprocal BLASTn test compared with 1530 in aTRAM). Kollector achieved this task in less than one tenth of aTRAM’s run time (<xref rid="btx078-T4" ref-type="table">Table 4</xref>). The markedly greater speed of Kollector is mainly due to its use of alignment free classification with <italic>k</italic>-mers and Bloom filters, allowing it to process thousands of transcripts in a single run. Whereas aTRAM relies on iterative alignments to individual targets to recruit enough reads for their assembly. For applications on this relatively small scale, the progressive read filtering algorithm used by Kollector eliminates the need for iterations.
<table-wrap id="btx078-T4" orientation="portrait" position="float"><label>Table 4.</label><caption><p>Comparison with aTRAM</p></caption><table frame="hsides" rules="groups"><colgroup span="1"><col valign="top" align="left" span="1"/><col valign="top" align="char" char="." span="1"/><col valign="top" align="char" char="." span="1"/><col valign="top" align="char" char="." span="1"/></colgroup><thead><tr><th rowspan="1" colspan="1">Method</th><th rowspan="1" colspan="1">Proportion</th><th rowspan="1" colspan="1">Reciprocal Best-BLASTn</th><th rowspan="1" colspan="1">Time (h)</th></tr></thead><tbody><tr><td rowspan="1" colspan="1">Kollector</td><td rowspan="1" colspan="1">99.3</td><td rowspan="1" colspan="1">1532</td><td rowspan="1" colspan="1">2</td></tr><tr><td rowspan="1" colspan="1">aTRAM</td><td rowspan="1" colspan="1">98.6</td><td rowspan="1" colspan="1">1530</td><td rowspan="1" colspan="1">25</td></tr></tbody></table></table-wrap></p>
        <p>For these experiments parameterized Kollector with <italic>r</italic> = 0.9, s = 0.5, <italic>k</italic> = 48, and <italic>n</italic> = 10 000 000, values similar to our other experiments. Our success rate suggests that this method is robust in capturing relatively divergent sequences. We think this is due to our progressive filtering algorithm, which recruits reads from more conserved regions first and then uses them to extend the sequence in more divergent regions. Furthermore, the sensitivity of reconstruction of more divergent sequences may be increased by using a low <italic>r</italic> parameter (the specificity required for read tagging), which may be preferable if evolutionary distance between two species is considerable.</p>
      </sec>
    </sec>
    <sec>
      <title>3.3 Whole genome targeted assembly</title>
      <p>A prominent application of <italic>de novo</italic> assembly is the detection of specific, yet novel, sequences, where a mapping approach can introduce bias (<xref rid="btx078-B1" ref-type="bibr">Alkan <italic>et al.</italic>, 2011</xref>). However, the large sample size of many studies, such as those of cancer genomics consortia (e.g. ICGC, TCGA), can put a strain on computational resources when <italic>de novo</italic> whole genome assembly is required. Therefore, a fast and reliable targeted assembler, like Kollector, might be an attractive option for most researchers, especially when considering its ability to extend incomplete input sequences.</p>
      <p>In order to demonstrate the extent of its utility, we have used Kollector for the targeted assembly of Human Papilloma Virus (HPV) in a cancer sample. The Cancer Genome Atlas consortium has profiled 279 head and neck squamous cell carcinomas (HSNCs), and detected many HPV positive samples, which were experimentally confirmed with immunohistochemistry and <italic>in situ</italic> hybridization (<xref rid="btx078-B8" ref-type="bibr">Cancer Genome Atlas, 2015</xref>). We ran Kollector on the genomic data from one of the confirmed samples [TCGA-BA-4077] with HPV type -33. Kollector does not need the bait to match the exact target sequence, as demonstrated in Section 3.2, so we used HPV type-16 reference genome as bait, and were able to re-assemble the complete HPV type-33 genome sequence in a single iteration with less than 15 minutes runtime and using 1 Gb of memory. We also used genomic reads from the matched normal sample as negative control, and, as expected, Kollector did not yield any assembled HPV sequences. Because Kollector uses only sequences contributed by the reads, the assembled strain remains unbiased relative to our bait sequence.</p>
    </sec>
  </sec>
  <sec>
    <title>4 Discussion</title>
    <p>We have presented Kollector, a targeted <italic>de novo</italic> genome assembly application that takes transcript sequences and whole genome sequencing reads as input, and assembles the corresponding gene loci. Input transcripts are used to seed progressive Bloom filters, a greedy database that can efficiently expand into intronic regions using sequence overlaps. Due to our alignment free approach, we demonstrate that Kollector can scale well up to large genomes, such as those of human and spruce.</p>
    <p>When assembling genes from transcripts, we show that Kollector successfully assembles more gene loci than iterative read recruitment methods aTRAM and GRABb in less time, and assembles more genes than both non-iterative read recruitment methods Mapsembler2 and TASR. However, we note in the latter case that this was expected since these tools were not designed for targeted gene loci assembly using RNA transcripts, and are thus unable to fill in large intronic gaps. Kollector also successfully assembles more gene loci than aTRAM when assembling the genic space of a related species.</p>
    <p>After our evaluations, we showcased three additional use cases for Kollector. The first one showed that Kollector was able to effectively assemble gene sequences in <italic>P.glauca</italic> (white spruce), despite its large 20-Gbp genome. These gene assemblies typically included 1 kb of upstream and downstream sequence with respect to the input transcript, illustrating the utility of the approach to examine promoters and other regulatory elements around genes for downstream applications. This demonstrates that for gene-centric investigations, Kollector can be a robust substitute for <italic>de novo</italic> whole genome assembly, which remains computationally challenging at large scales.</p>
    <p>The second use case concerned comparative genomics, where Kollector assembled <italic>M.musculus</italic> genes using orthologous <italic>H.sapiens</italic> transcripts as input. This comparative genomics approach is particularly valuable to researchers working on non-model organisms, which might not have extensive and well-annotated transcript sequences available.</p>
    <p>Our final demonstration involved the whole genome targeted assembly of HPV in a head and neck cancer sample. Kollector solves this problem by <italic>de novo</italic> assembling reads of interest, without the risk of introducing artifacts, as typically is the case when aligning reads to a reference genome. Because Kollector can fill in missing sequences by recruiting reads with a progressive Bloom filter, it only requires a limited amount of sequence homology within the bait sequence to fully reassemble a viral sequence. We note that the extent of divergence of the seed sequence that Kollector can use was not fully explored, and thus may be interesting to investigate in future studies.</p>
    <p>In conclusion, we expect Kollector to be a valuable addition to the current suite of targeted assembly tools. Not only does it scale to large datasets, it can be used to reconstruct orthologous sequences in non-model organisms, and will find utility in the reconstruction of large regions <italic>de novo</italic>, using only transcript sequences.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="sup1">
      <label>Supplementary Data</label>
      <media xlink:href="btx078_supp.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack>
    <title>Acknowledgements</title>
    <p>We would like to thank Golnaz Jahesh from Canada’s Michael Smith Genome Research Centre for her contributions to packaging, testing and releasing of the Kollector software. We also thank Gordon Robertson from Canada’s Michael Smith Genome Research Centre for his insights regarding HPV strain detection.</p>
    <sec>
      <title>Funding</title>
      <p>The research presented here was funded by the National Human Genome Research Institute of the National Institutes of Health (under award number R01HG007182), with additional support provided by Genome Canada, Genome British Columbia, the British Columbia Cancer Foundation and Canada Foundation for Innovation. The content of this manuscript is solely the responsibility of the authors and does not necessarily represent the official views of the National Institutes of Health, or other funding organizations.</p>
      <p><italic>Conflict of Interest</italic>: none declared.</p>
    </sec>
  </ack>
  <ref-list>
    <title>References</title>
    <ref id="btx078-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Alkan</surname><given-names>C.</given-names></name></person-group><etal>et al</etal> (<year>2011</year>) 
<article-title>Genome structural variation discovery and genotyping</article-title>. <source>Nat. Rev. Genet</source>., <volume>12</volume>, <fpage>363</fpage>–<lpage>376</lpage>.<pub-id pub-id-type="pmid">21358748</pub-id></mixed-citation>
    </ref>
    <ref id="btx078-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Allen</surname><given-names>J.M.</given-names></name></person-group><etal>et al</etal> (<year>2015</year>) 
<article-title>aTRAM – automated target restricted assembly method: a fast method for assembling loci across divergent taxa from next-generation sequencing data</article-title>. <source>BMC Bioinformatics</source>, <volume>16</volume>, <fpage>98</fpage>.<pub-id pub-id-type="pmid">25887972</pub-id></mixed-citation>
    </ref>
    <ref id="btx078-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Altschul</surname><given-names>S.F.</given-names></name></person-group><etal>et al</etal> (<year>1990</year>) 
<article-title>Basic local alignment search tool</article-title>. <source>J. Mol. Biol</source>., <volume>215</volume>, <fpage>403</fpage>–<lpage>410</lpage>.<pub-id pub-id-type="pmid">2231712</pub-id></mixed-citation>
    </ref>
    <ref id="btx078-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Birol</surname><given-names>I.</given-names></name></person-group><etal>et al</etal> (<year>2013</year>) 
<article-title>Assembling the 20 Gb white spruce (Picea glauca) genome from whole-genome shotgun sequencing data</article-title>. <source>Bioinformatics</source>, <volume>29</volume>, <fpage>1492</fpage>–<lpage>1497</lpage>.<pub-id pub-id-type="pmid">23698863</pub-id></mixed-citation>
    </ref>
    <ref id="btx078-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Bloom</surname><given-names>B.H.</given-names></name></person-group> (<year>1970</year>) 
<article-title>Space/time trade-offs in hash coding with allowable errors</article-title>. <source>Commun. ACM</source>, <volume>13</volume>, <fpage>422</fpage>–<lpage>426</lpage>.</mixed-citation>
    </ref>
    <ref id="btx078-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Brankovics</surname><given-names>B.</given-names></name></person-group><etal>et al</etal> (<year>2016</year>) 
<article-title>GRAbB: selective assembly of genomic regions, a new niche for genomic research</article-title>. <source>PLoS Comput. Biol</source>., <volume>12</volume>, <fpage>e1004753</fpage>.<pub-id pub-id-type="pmid">27308864</pub-id></mixed-citation>
    </ref>
    <ref id="btx078-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Brown</surname><given-names>S.D.</given-names></name></person-group><etal>et al</etal> (<year>2014</year>) 
<article-title>Neo-antigens predicted by tumor genome meta-analysis correlate with increased patient survival</article-title>. <source>Genome Res</source>., <volume>24</volume>, <fpage>743</fpage>–<lpage>750</lpage>.<pub-id pub-id-type="pmid">24782321</pub-id></mixed-citation>
    </ref>
    <ref id="btx078-B8">
      <mixed-citation publication-type="journal"><collab>Cancer Genome Atlas, N.</collab> (<year>2015</year>) 
<article-title>Comprehensive genomic characterization of head and neck squamous cell carcinomas</article-title>. <source>Nature</source>, <volume>517</volume>, <fpage>576</fpage>–<lpage>582</lpage>.<pub-id pub-id-type="pmid">25631445</pub-id></mixed-citation>
    </ref>
    <ref id="btx078-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Chu</surname><given-names>J.</given-names></name></person-group><etal>et al</etal> (<year>2014</year>) 
<article-title>BioBloom tools: fast, accurate and memory-efficient host species sequence screening using bloom filters</article-title>. <source>Bioinformatics</source>, <volume>30</volume>, <fpage>3402</fpage>–<lpage>3404</lpage>.<pub-id pub-id-type="pmid">25143290</pub-id></mixed-citation>
    </ref>
    <ref id="btx078-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Grabherr</surname><given-names>M.G.</given-names></name></person-group><etal>et al</etal> (<year>2011</year>) 
<article-title>Full-length transcriptome assembly from RNA-Seq data without a reference genome</article-title>. <source>Nat. Biotechnol</source>., <volume>29</volume>, <fpage>644</fpage>–<lpage>652</lpage>.<pub-id pub-id-type="pmid">21572440</pub-id></mixed-citation>
    </ref>
    <ref id="btx078-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Hahn</surname><given-names>C.</given-names></name></person-group><etal>et al</etal> (<year>2013</year>) 
<article-title>Reconstructing mitochondrial genomes directly from genomic next-generation sequencing reads—a baiting and iterative mapping approach</article-title>. <source>Nucleic Acids Res</source>., <fpage>gkt371</fpage>.</mixed-citation>
    </ref>
    <ref id="btx078-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Johnson</surname><given-names>K.P.</given-names></name></person-group><etal>et al</etal> (<year>2014</year>) 
<article-title>Rates of genomic divergence in humans, chimpanzees and their lice</article-title>. <source>Proc. R. Soc. B Biol. Sci</source>., <volume>281</volume>, <fpage>20132174</fpage>–<lpage>20132174</lpage>.</mixed-citation>
    </ref>
    <ref id="btx078-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Nagarajan</surname><given-names>N.</given-names></name>, <name name-style="western"><surname>Pop</surname><given-names>M.</given-names></name></person-group> (<year>2013</year>) 
<article-title>Sequence assembly demystified</article-title>. <source>Nat. Rev. Genet</source>., <volume>14</volume>, <fpage>157</fpage>–<lpage>167</lpage>.<pub-id pub-id-type="pmid">23358380</pub-id></mixed-citation>
    </ref>
    <ref id="btx078-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Peng</surname><given-names>Y.</given-names></name></person-group><etal>et al</etal> (<year>2013</year>) 
<article-title>IDBA-tran: a more robust de novo de Bruijn graph assembler for transcriptomes with uneven expression levels</article-title>. <source>Bioinformatics</source>, <volume>29</volume>, <fpage>i326</fpage>–<lpage>i334</lpage>.<pub-id pub-id-type="pmid">23813001</pub-id></mixed-citation>
    </ref>
    <ref id="btx078-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Peterlongo</surname><given-names>P.</given-names></name>, <name name-style="western"><surname>Chikhi</surname><given-names>R.</given-names></name></person-group> (<year>2012</year>) 
<article-title>Mapsembler, targeted and micro assembly of large NGS datasets on a desktop computer</article-title>. <source>BMC Bioinformatics</source>, <volume>13</volume>, <fpage>48</fpage>.<pub-id pub-id-type="pmid">22443449</pub-id></mixed-citation>
    </ref>
    <ref id="btx078-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Pevzner</surname><given-names>P.A.</given-names></name></person-group><etal>et al</etal> (<year>2001</year>) 
<article-title>An Eulerian path approach to DNA fragment assembly</article-title>. <source>Proc. Natl. Acad. Sci</source>., <volume>98</volume>, <fpage>9748</fpage>–<lpage>9753</lpage>.<pub-id pub-id-type="pmid">11504945</pub-id></mixed-citation>
    </ref>
    <ref id="btx078-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Robertson</surname><given-names>G.</given-names></name></person-group><etal>et al</etal> (<year>2010</year>) 
<article-title>De novo assembly and analysis of RNA-seq data</article-title>. <source>Nat. Methods</source>, <volume>7</volume>, <fpage>909</fpage>–<lpage>912</lpage>.<pub-id pub-id-type="pmid">20935650</pub-id></mixed-citation>
    </ref>
    <ref id="btx078-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Simpson</surname><given-names>J.T.</given-names></name></person-group><etal>et al</etal> (<year>2009</year>) 
<article-title>ABySS: A parallel assembler for short read sequence data</article-title>. <source>Genome Res</source>., <volume>19</volume>, <fpage>1117</fpage>–<lpage>1123</lpage>.<pub-id pub-id-type="pmid">19251739</pub-id></mixed-citation>
    </ref>
    <ref id="btx078-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Stranneheim</surname><given-names>H.</given-names></name></person-group><etal>et al</etal> (<year>2010</year>) 
<article-title>Classification of DNA sequences using Bloom filters</article-title>. <source>Bioinformatics</source>, <volume>26</volume>, <fpage>1595</fpage>–<lpage>1600</lpage>.<pub-id pub-id-type="pmid">20472541</pub-id></mixed-citation>
    </ref>
    <ref id="btx078-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Warren</surname><given-names>R.L.</given-names></name></person-group><etal>et al</etal> (<year>2012</year>) 
<article-title>Derivation of HLA types from shotgun sequence datasets</article-title>. <source>Genome Med</source>., <volume>4</volume>, <fpage>95</fpage>.<pub-id pub-id-type="pmid">23228053</pub-id></mixed-citation>
    </ref>
    <ref id="btx078-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Warren</surname><given-names>R.L.</given-names></name>, <name name-style="western"><surname>Holt</surname><given-names>R.A.</given-names></name></person-group> (<year>2011</year>) 
<article-title>Targeted assembly of short sequence reads</article-title>. <source>PLoS One</source>, <volume>6</volume>, <fpage>e19816</fpage>.<pub-id pub-id-type="pmid">21589938</pub-id></mixed-citation>
    </ref>
    <ref id="btx078-B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Warren</surname><given-names>R.L.</given-names></name></person-group><etal>et al</etal> (<year>2015</year>) 
<article-title>Improved white spruce (<italic>Picea glauca</italic>) genome assemblies and annotation of large gene families of conifer terpenoid and phenolic defense metabolism</article-title>. <source>Plant J. Cell Mol. Biol</source>., <volume>83</volume>, <fpage>189</fpage>–<lpage>212</lpage>.</mixed-citation>
    </ref>
    <ref id="btx078-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wu</surname><given-names>T.D.</given-names></name>, <name name-style="western"><surname>Watanabe</surname><given-names>C.K.</given-names></name></person-group> (<year>2005</year>) 
<article-title>GMAP: a genomic mapping and alignment program for mRNA and EST sequences</article-title>. <source>Bioinformatics</source>, <volume>21</volume>, <fpage>1859</fpage>–<lpage>1875</lpage>.<pub-id pub-id-type="pmid">15728110</pub-id></mixed-citation>
    </ref>
    <ref id="btx078-B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zerbino</surname><given-names>D.R.</given-names></name>, <name name-style="western"><surname>Birney</surname><given-names>E.</given-names></name></person-group> (<year>2008</year>) 
<article-title>Velvet: Algorithms for de novo short read assembly using de Bruijn graphs</article-title>. <source>Genome Res</source>., <volume>18</volume>, <fpage>821</fpage>–<lpage>829</lpage>.<pub-id pub-id-type="pmid">18349386</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

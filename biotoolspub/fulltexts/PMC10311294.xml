<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10311294</article-id>
    <article-id pub-id-type="pmid">37387136</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btad229</article-id>
    <article-id pub-id-type="publisher-id">btad229</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Bioinformatics of Microbes and Microbiomes</subject>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>PhaVIP: Phage VIrion Protein classification based on chaos game representation and Vision Transformer</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-5974-4985</contrib-id>
        <name>
          <surname>Shang</surname>
          <given-names>Jiayu</given-names>
        </name>
        <aff><institution>Department of Electrical Engineering, City University of Hong Kong</institution>, Hong Kong (SAR), <country country="CN">China</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Peng</surname>
          <given-names>Cheng</given-names>
        </name>
        <aff><institution>Department of Electrical Engineering, City University of Hong Kong</institution>, Hong Kong (SAR), <country country="CN">China</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Tang</surname>
          <given-names>Xubo</given-names>
        </name>
        <aff><institution>Department of Electrical Engineering, City University of Hong Kong</institution>, Hong Kong (SAR), <country country="CN">China</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0003-1373-8023</contrib-id>
        <name>
          <surname>Sun</surname>
          <given-names>Yanni</given-names>
        </name>
        <aff><institution>Department of Electrical Engineering, City University of Hong Kong</institution>, Hong Kong (SAR), <country country="CN">China</country></aff>
        <xref rid="btad229-cor1" ref-type="corresp"/>
        <!--yannisun@cityu.edu.hk-->
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="btad229-cor1">Corresponding author. Department of Electrical Engineering, Office G6411, YEUNG, City University of Hong Kong, Tat Chee Avenue, Kowloon, Hong Kong SAR, China. E-mail: <email>yannisun@cityu.edu.hk</email> (Y.S.)</corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <month>6</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2023-06-30">
      <day>30</day>
      <month>6</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>30</day>
      <month>6</month>
      <year>2023</year>
    </pub-date>
    <volume>39</volume>
    <issue>Suppl 1</issue>
    <issue-title>ISMB/ECCB 2023 Proceedings</issue-title>
    <fpage>i30</fpage>
    <lpage>i39</lpage>
    <permissions>
      <copyright-statement>© The Author(s) 2023. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2023</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btad229.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>As viruses that mainly infect bacteria, phages are key players across a wide range of ecosystems. Analyzing phage proteins is indispensable for understanding phages’ functions and roles in microbiomes. High-throughput sequencing enables us to obtain phages in different microbiomes with low cost. However, compared to the fast accumulation of newly identified phages, phage protein classification remains difficult. In particular, a fundamental need is to annotate virion proteins, the structural proteins, such as major tail, baseplate, etc. Although there are experimental methods for virion protein identification, they are too expensive or time-consuming, leaving a large number of proteins unclassified. Thus, there is a great demand to develop a computational method for fast and accurate phage virion protein (PVP) classification.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>In this work, we adapted the state-of-the-art image classification model, Vision Transformer, to conduct virion protein classification. By encoding protein sequences into unique images using chaos game representation, we can leverage Vision Transformer to learn both local and global features from sequence “images”. Our method, PhaVIP, has two main functions: classifying PVP and non-PVP sequences and annotating the types of PVP, such as capsid and tail. We tested PhaVIP on several datasets with increasing difficulty and benchmarked it against alternative tools. The experimental results show that PhaVIP has superior performance. After validating the performance of PhaVIP, we investigated two applications that can use the output of PhaVIP: phage taxonomy classification and phage host prediction. The results showed the benefit of using classified proteins over all proteins.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p>The web server of PhaVIP is available via: <ext-link xlink:href="https://phage.ee.cityu.edu.hk/phavip" ext-link-type="uri">https://phage.ee.cityu.edu.hk/phavip</ext-link>. The source code of PhaVIP is available via: <ext-link xlink:href="https://github.com/KennthShang/PhaVIP" ext-link-type="uri">https://github.com/KennthShang/PhaVIP</ext-link>.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>City University of Hong Kong</institution>
            <institution-id institution-id-type="DOI">10.13039/100007567</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>9678241</award-id>
        <award-id>9667256</award-id>
        <award-id>7005453</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Hong Kong Innovation and Technology Commission</institution>
          </institution-wrap>
        </funding-source>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="10"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Bacteriophages, or phages for short, are viruses that can infect bacteria. They are the most widely distributed and abundant biological entities in the biosphere (<xref rid="btad229-B10" ref-type="bibr">Cobián Güemes et al. 2016</xref>), with an estimated population of more than <inline-formula id="IE1"><mml:math id="IM1" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mn>10</mml:mn></mml:mrow></mml:mrow><mml:mrow><mml:mn>31</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> particles (<xref rid="btad229-B34" ref-type="bibr">Lyon 2017</xref>). Phages play an important role in modulating microbial system dynamics by lysing bacteria and mediating the horizontal transfer of genetic material (<xref rid="btad229-B20" ref-type="bibr">Fernández et al. 2018</xref>). In addition, there are accumulating studies showing that phages have an important impact on multiple applications, such as the food industry (<xref rid="btad229-B6" ref-type="bibr">Brüssow and Desiere 2001</xref>), disease diagnostics (<xref rid="btad229-B53" ref-type="bibr">Wang and Yu 2004</xref>), engineering bacterial genomes (<xref rid="btad229-B37" ref-type="bibr">Menouni et al. 2015</xref>), and phage therapy (<xref rid="btad229-B3" ref-type="bibr">Azimi et al. 2019</xref>).</p>
    <p>A fundamental step to promote phages’ applications in these fields is phage genome annotation. Phages’ proteins are highly diverse, and their current annotations are far from complete. For example, only 33% of proteins in the RefSeq phage protein database have annotations. The annotated phage proteins can be roughly divided into two groups: virion and non-virion proteins. Phage virion proteins (PVPs) are phage structural proteins that make up phage outer protein shells (<xref rid="btad229-B29" ref-type="bibr">Kabir et al. 2022</xref>). They were regarded as one major evidence in phage taxonomy classification by the International Committee on Taxonomy of Viruses (ICTV). During the infection, PVP binds to the host’s receptors, aiding the insertion of the phage’s genetic materials into the host cell. Identifying PVPs is a fundamental step to understanding their biological properties and mechanisms of host cell binding. Due to their ubiquity and functional importance, PVPs have been leveraged in multiple downstream applications. For example, PVPs can be used as marker genes in phage host prediction (<xref rid="btad229-B5" ref-type="bibr">Boeckaerts et al. 2021</xref>) and prophage identification within bacterial genomes (<xref rid="btad229-B43" ref-type="bibr">Roux et al. 2015</xref>). Although PVPs have become commonly used features in several phage analysis tasks, accumulating research on the non-PVPs show that we may underestimate their importance. For example, non-PVPs usually play key roles in phages’ lifecycles, including replication and packaging. Among non-PVPs, “integrase” and “excisionase” are two widely accepted marker genes for classifying the lifestyle of phages. Based on these marker genes, several phage lifestyle prediction methods were developed (<xref rid="btad229-B16" ref-type="bibr">Emerson et al. 2012</xref>; <xref rid="btad229-B25" ref-type="bibr">Hockenberry and Wilke 2021</xref>). In addition, some non-PVPs are important for the binding of phage tail fibers to host receptor proteins. For example, the endoglycosidase of <italic toggle="yes">Salmonella virus P22</italic> will hydrolyze lipopolysaccharide and destroy the O-specific chain for phage attachments (<xref rid="btad229-B49" ref-type="bibr">Steinbacher et al. 1996</xref>). What is more, understanding the non-PVPs can help utilize phages for engineering bacterial genomes (<xref rid="btad229-B37" ref-type="bibr">Menouni et al. 2015</xref>), regulating gene expression, and introducing novel functions to change cell physiology (<xref rid="btad229-B26" ref-type="bibr">Howard-Varona et al. 2017</xref>).</p>
    <p>Because PVPs and non-PVPs have different functions, distinguishing them can extend our knowledge about phage properties and functions. Although there are experimental methods for PVP annotation, such as protein arrays and mass spectrometry, they are usually time-consuming, labor-intensive, and costly. Thus, they cannot catch up with the speed of newly identified phages by high-throughput sequencing. For example, as reported in <xref rid="btad229-B48" ref-type="bibr">Sinha et al. (2020)</xref>, only 11% of proteins can be annotated using the mass spectrometry method. Thus, computational PVP classification is still the major choice for handling large-scale input data. The major challenge for computational PVP classification is the high diversity of proteins in phages. For example, most structural proteins encoded by tailed phages, except for portal proteins, cannot be identified through pair-wise sequence alignments. According to the latest RefSeq database downloaded before December 2022, 66% of proteins are marked as “hypothetical protein”, meaning that these proteins cannot be aligned to annotated proteins. Thus, fast and accurate computational methods to predict and classify diverged PVPs are urgently needed.</p>
    <sec>
      <title>1.1 Related work</title>
      <p>To overcome the challenge of high sequence diversity, machine-learning models are commonly used for classifying PVP and non-PVP. Most of these tools have been discussed and evaluated by several comprehensive reviews in the past 3 years (<xref rid="btad229-B36" ref-type="bibr">Meng et al. 2020</xref>; <xref rid="btad229-B38" ref-type="bibr">Nami et al. 2021</xref>; <xref rid="btad229-B29" ref-type="bibr">Kabir et al. 2022</xref>). <xref rid="btad229-T1" ref-type="table">Table 1</xref> summarizes these tools together with their employed feature encoding and machine-learning algorithms.</p>
      <table-wrap position="float" id="btad229-T1">
        <label>Table 1.</label>
        <caption>
          <p>Summary of the existing PVP classification tools.</p>
        </caption>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th rowspan="1" colspan="1">Group</th>
              <th rowspan="1" colspan="1">Tools</th>
              <th rowspan="1" colspan="1">Encoding method</th>
              <th rowspan="1" colspan="1">Model</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">Traditional machine-learning</td>
              <td rowspan="1" colspan="1">PVPred-SCM (<xref rid="btad229-B9" ref-type="bibr">Charoenkwan et al. 2020a</xref>)</td>
              <td rowspan="1" colspan="1"> <italic toggle="yes">K</italic>-mer frequency</td>
              <td rowspan="1" colspan="1">SCM</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">Pred-BVP-Unb (<xref rid="btad229-B2" ref-type="bibr">Arif et al. 2020</xref>)</td>
              <td rowspan="1" colspan="1">Physicochemical properties</td>
              <td rowspan="1" colspan="1">SVM</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">(<xref rid="btad229-B44" ref-type="bibr">Ru et al. 2019</xref>)</td>
              <td rowspan="1" colspan="1">Skip-gram</td>
              <td rowspan="1" colspan="1">RF</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">(<xref rid="btad229-B51" ref-type="bibr">Tan et al. 2018</xref>)</td>
              <td rowspan="1" colspan="1"><italic toggle="yes">K</italic>-mer frequency (g-gap)</td>
              <td rowspan="1" colspan="1">SVM</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">PhagePred (<xref rid="btad229-B39" ref-type="bibr">Pan et al. 2018</xref>)</td>
              <td rowspan="1" colspan="1"><italic toggle="yes">K</italic>-mer frequency (g-gap)</td>
              <td rowspan="1" colspan="1">NB</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">PVP-SVM (<xref rid="btad229-B35" ref-type="bibr">Manavalan et al. 2018</xref>)</td>
              <td rowspan="1" colspan="1"><italic toggle="yes">K</italic>-mer frequency, physicochemical properties</td>
              <td rowspan="1" colspan="1">SVM</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">PVPred (<xref rid="btad229-B13" ref-type="bibr">Ding et al. 2014</xref>)</td>
              <td rowspan="1" colspan="1"><italic toggle="yes">K</italic>-mer frequency (g-gap)</td>
              <td rowspan="1" colspan="1">SVM</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">(<xref rid="btad229-B19" ref-type="bibr">Feng et al. 2013</xref>)</td>
              <td rowspan="1" colspan="1"><italic toggle="yes">K</italic>-mer frequency</td>
              <td rowspan="1" colspan="1">NB</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Ensemble method</td>
              <td rowspan="1" colspan="1">iPVP-MCV (<xref rid="btad229-B23" ref-type="bibr">Han et al. 2021</xref>)</td>
              <td rowspan="1" colspan="1">Position-specific scoring matrix</td>
              <td rowspan="1" colspan="1">SVM-based ensemble model</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">Meta-iPVP (<xref rid="btad229-B8" ref-type="bibr">Charoenkwan et al. 2020b</xref>)</td>
              <td rowspan="1" colspan="1">Probabilistic martix</td>
              <td rowspan="1" colspan="1">SVM, RF, NB, ANN</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">(<xref rid="btad229-B55" ref-type="bibr">Zhang et al. 2015</xref>)</td>
              <td rowspan="1" colspan="1">Position-specific scoring matrix and physicochemical properties</td>
              <td rowspan="1" colspan="1">RF-based ensemble model</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Deep learning</td>
              <td rowspan="1" colspan="1">DeePVP (<xref rid="btad229-B18" ref-type="bibr">Fang et al. 2022</xref>)</td>
              <td rowspan="1" colspan="1">One-hot</td>
              <td rowspan="1" colspan="1">CNN</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">VirionFinder (<xref rid="btad229-B17" ref-type="bibr">Fang and Zhou 2021</xref>)</td>
              <td rowspan="1" colspan="1">One-hot and physicochemical properties</td>
              <td rowspan="1" colspan="1">CNN</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">PhANNs (<xref rid="btad229-B7" ref-type="bibr">Cantu et al. 2020</xref>)</td>
              <td rowspan="1" colspan="1"><italic toggle="yes">K</italic>-mer frequency</td>
              <td rowspan="1" colspan="1">ANN</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">iVIREONS (<xref rid="btad229-B45" ref-type="bibr">Seguritan et al. 2012</xref>)</td>
              <td rowspan="1" colspan="1">Single amino acid</td>
              <td rowspan="1" colspan="1">ANN</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      <p>As indicated in <xref rid="btad229-T1" ref-type="table">Table 1</xref>, four learning models (SVM, NB, RF, and SCM) are commonly used in traditional machine learning-based methods. Ensemble-based methods utilize multiple models or training sets. For example, Meta-iPVP (<xref rid="btad229-B8" ref-type="bibr">Charoenkwan et al. 2020b</xref>) utilizes a novel feature-representing scheme and four machine-learning algorithms to encode seven input features into a probabilistic matrix. Then, the generated probabilistic matrix is fed into the SVM model to classify PVPs. More recently, deep learning-based methods, such as VirionFinder (<xref rid="btad229-B17" ref-type="bibr">Fang and Zhou 2021</xref>) and DeePVP (<xref rid="btad229-B18" ref-type="bibr">Fang et al. 2022</xref>), have been proposed for structural protein identification. Both of them use convolutional neural networks (CNNs) as classifiers. The comparison between the existing tools showed that CNN is an effective method for extracting abstract features from biological sequences (<xref rid="btad229-B29" ref-type="bibr">Kabir et al. 2022</xref>).</p>
      <p>Although these tools have achieved promising performance, they still have a couple of limitations. First, except for PhANNs (<xref rid="btad229-B7" ref-type="bibr">Cantu et al. 2020</xref>) and DeePVP (<xref rid="btad229-B18" ref-type="bibr">Fang et al. 2022</xref>), all these tools are binary identifiers, which can only classify the input proteins as PVP or non-PVP. However, a more detailed multi-class classification of PVPs is also in demand to assign proteins to well-defined annotations (i.e. major tail, minor tail, and baseplate). But the best <italic toggle="yes">F</italic>1-score of PhANNs and DeePVP on multi-class classification can only reach nearly 0.7 on the benchmark dataset. Second, the reference protein sequences employed by different tools are mostly outdated. Only PhANNs and DeePVP provided scripts for re-training or re-constructing the models as reported in <xref rid="btad229-B29" ref-type="bibr">Kabir et al. (2022)</xref>. Lacking this function hinders many tools from achieving more generalized and robust predictions for newly discovered phages. Third, although one-hot encoding and <italic toggle="yes">k</italic>-mer frequency encoding are widely used in the PVP classification task, they both have disadvantages. For example, as indicated in <xref rid="btad229-B42" ref-type="bibr">Ren et al. (2022)</xref>, using one-hot encoding for protein sequences will return sparse matrices, leading to the curse of dimensionality problem in the machine-learning model. <italic toggle="yes">k</italic>-mer frequency encoding fails to maintain the original amino acids’ organization in the raw sequences.</p>
    </sec>
    <sec>
      <title>1.2 Overview</title>
      <p>In this work, we present a method named Phage VIrion Protein (PhaVIP) for phage protein annotation. It has two functions. First, it can classify a protein into either PVPs or non-PVPs (binary classification task). Second, it can assign a more detailed annotation for predicted PVPs, such as major capsid, major tail, and portal (multi-class classification task with seven types of PVPs). To construct a complete and comprehensive dataset, we downloaded the latest annotations of phage proteins from the RefSeq database (December 2022) to train and test PhaVIP. The pipeline of PhaVIP is shown in <xref rid="btad229-F1" ref-type="fig">Fig. 1</xref>. First, to address the shortages of the existing encoding methods, we employ chaos game representation (CGR) to encode proteins into images. Previous works show that using <italic toggle="yes">k</italic>-mer frequency helps distinguish proteins of different functions. However, existing models, such as CNN, are not optimized for learning the associations of <italic toggle="yes">k</italic>-mers and their frequencies. In our design, CGR can encode <italic toggle="yes">k</italic>-mer frequency into images, allowing us to leverage an image classification model, Vision Transformer (ViT) (<xref rid="btad229-B14" ref-type="bibr">Dosovitskiy et al. 2020</xref>; <xref rid="btad229-B41" ref-type="bibr">Raghu et al. 2021</xref>), from computer vision to capture and learn the patterns from CGR images. We leverage the self-attention mechanism in ViT to learn the importance of different sub-images and their associations for protein classification. In addition, because the length of the proteins varies from <inline-formula id="IE2"><mml:math id="IM2" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mn>10</mml:mn></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:math></inline-formula> to <inline-formula id="IE3"><mml:math id="IM3" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mn>10</mml:mn></mml:mrow></mml:mrow><mml:mn>3</mml:mn></mml:msup></mml:mrow></mml:math></inline-formula>, applying CGR allows encoding sequences of highly different lengths into images with the same resolution. Thus, we expect that this combination can lead to better results than existing deep learning models because of the success of the ViT in image classification. In the experiments, we tested PhaVIP on multiple datasets with increasing difficulty. The comprehensive comparison with the existing methods shows that PhaVIP renders better and more robust performance. In addition, we designed two case studies to show the application of PVPs and non-PVPs for downstream phage analysis. These case studies reveal that PhaVIP can provide useful features to improve the accuracy of phage taxonomy classification and host prediction.</p>
      <fig position="float" id="btad229-F1">
        <label>Figure 1.</label>
        <caption>
          <p>The pipelines of PhaVIP, which consists of three major stages: FCGR protein encoding, patch embedding, and Transformer modules. When taking a test/query protein as input, PhaVIP first classifies it into PVP and non-PVP. Only the predicted PVP will be classified into more detailed annotations. Dimension <italic toggle="yes">B</italic> represents the “batch size” of the input data, which means B proteins will be processed in parallel. Dimension <italic toggle="yes">H</italic> and <italic toggle="yes">W</italic> represent the height and weight of the FCGR images. Dimension <italic toggle="yes">M</italic> represents the size of the patches.</p>
        </caption>
        <graphic xlink:href="btad229f1" position="float"/>
      </fig>
    </sec>
  </sec>
  <sec>
    <title>2 Materials and methods</title>
    <p>To use machine-learning methods for classifying PVP and non-PVP, the input proteins need to be encoded into numerical values. Thus, a practical and informative sequence encoding method is crucial for classification. In this work, we applied CGR to encode protein sequences. CGR is a generalized Markov chain and allows one-to-one mapping between the image and the sequence (<xref rid="btad229-B32" ref-type="bibr">Löchel and Heider 2021</xref>). In addition, CGR has already shown promising results in encoding biological sequences, such as generating evolutionary trees (<xref rid="btad229-B24" ref-type="bibr">Hoang et al. 2016</xref>) and finding antimicrobial resistant gene (<xref rid="btad229-B42" ref-type="bibr">Ren et al. 2022</xref>).</p>
    <p>Because CGR can represent protein sequences using unique images, inspired by pattern recognition problems in computer vision (CV), we apply the ViT model to extract and learn features from the CGR image. The attention mechanism in ViT can reveal the representative regions in the image and learn the associations between different parts of the image (<xref rid="btad229-B22" ref-type="bibr">Ghiasi et al. 2022</xref>). Several large-scale benchmark datasets in CV have shown that ViT outperforms traditional models, such as CNN, on image classification. All these features prompt us to employ ViT for PVP classification.</p>
    <p>In the following sections, we will first introduce how CGR encodes protein sequences into unique images. Then, we will describe the ViT model optimized for the PVP classification task. Finally, we will introduce how we collect and generate the PVP datasets used in the experiments.</p>
    <sec>
      <title>2.1 CGR encoding</title>
      <p>The CGR was first developed to construct fractals from random inputs and later extended to encode DNA sequences (<xref rid="btad229-B28" ref-type="bibr">Jeffrey 1990</xref>). The inputs to the CGR are sequences, and the outputs are numerical matrices/images representing the sequences. The basic idea of CGR is to map each nucleotide or amino acid to a unique coordinate in a 2D space. A toy example is given in the right panel of <xref rid="btad229-F2" ref-type="fig">Fig. 2</xref>.</p>
      <fig position="float" id="btad229-F2">
        <label>Figure 2.</label>
        <caption>
          <p>Applying CGR to a toy sequence: CATG. Left: division of the CGR space in the iterative process [reproduced from <xref rid="btad229-B28" ref-type="bibr">Jeffrey (1990)</xref>]; right: the process of determining the four pixels for CATG using CGR.</p>
        </caption>
        <graphic xlink:href="btad229f2" position="float"/>
      </fig>
      <p>To encode the protein sequences into CGR images, we apply the <italic toggle="yes">n</italic>-flakes method (<xref rid="btad229-B21" ref-type="bibr">Fiser et al. 1994</xref>) and use frequency chaos game representation (FCGR) to produce images of the same resolution. The equations of the <italic toggle="yes">n</italic>-flakes method are given in <xref rid="E1" ref-type="disp-formula">Equation (1)</xref> (<xref rid="btad229-B21" ref-type="bibr">Fiser et al. 1994</xref>).
<italic toggle="yes">j</italic> is the vertices ranging from 0 to <italic toggle="yes">n</italic>, which is set to 20 for amino acids. Then, FCGR can be generated by counting the points of the CGR based on a pre-defined grid. Specifically, the algorithm will split the CGR image into <inline-formula id="IE4"><mml:math id="IM4" display="inline" overflow="scroll"><mml:mrow><mml:mi>N</mml:mi><mml:mo>×</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:math></inline-formula> regions. Then, the number of points in one region will be used as the region’s frequency to compress the CGR, leading to an FCGR matrix of dimension <inline-formula id="IE5"><mml:math id="IM5" display="inline" overflow="scroll"><mml:mrow><mml:mi>N</mml:mi><mml:mo>×</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:math></inline-formula> for all input sequences of different lengths. The authors of <xref rid="btad229-B32" ref-type="bibr">Löchel and Heider (2021)</xref> show that the value in the pre-defined grid can represent the frequency of <italic toggle="yes">k</italic>-mers. For example, the gird on the top-left corner of <xref rid="btad229-F2" ref-type="fig">Fig. 2</xref> (left) represents a 3-mer “AAA”. In this work, we employ the R package “Kaos” (<xref rid="btad229-B33" ref-type="bibr">Löchel et al. 2020</xref>) to encode protein sequences into FCGR images. Then, we set <inline-formula id="IE6"><mml:math id="IM6" display="inline" overflow="scroll"><mml:mrow><mml:mi>N</mml:mi><mml:mo>=</mml:mo><mml:mn>64</mml:mn></mml:mrow></mml:math></inline-formula> to generate <inline-formula id="IE7"><mml:math id="IM7" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow><mml:mrow><mml:mn>64</mml:mn><mml:mo>×</mml:mo><mml:mn>64</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> images as the representation of the protein sequences.</p>
      <disp-formula id="E1">
        <label>(1)</label>
        <mml:math id="M1" display="block" overflow="scroll">
          <mml:mrow>
            <mml:mrow>
              <mml:mo>{</mml:mo>
              <mml:mrow>
                <mml:mtable>
                  <mml:mtr>
                    <mml:mtd>
                      <mml:mrow>
                        <mml:msubsup>
                          <mml:mrow>
                            <mml:mi>V</mml:mi>
                          </mml:mrow>
                          <mml:mi>j</mml:mi>
                          <mml:mi>x</mml:mi>
                        </mml:msubsup>
                        <mml:mo>=</mml:mo>
                      </mml:mrow>
                    </mml:mtd>
                    <mml:mtd>
                      <mml:mrow>
                        <mml:mo> </mml:mo>
                        <mml:mtext>sin</mml:mtext>
                        <mml:mo stretchy="true">(</mml:mo>
                        <mml:mfrac>
                          <mml:mrow>
                            <mml:mn>2</mml:mn>
                            <mml:mo>π</mml:mo>
                            <mml:mi>j</mml:mi>
                          </mml:mrow>
                          <mml:mi>n</mml:mi>
                        </mml:mfrac>
                        <mml:mo stretchy="true">)</mml:mo>
                      </mml:mrow>
                    </mml:mtd>
                  </mml:mtr>
                  <mml:mtr>
                    <mml:mtd>
                      <mml:mrow>
                        <mml:msubsup>
                          <mml:mrow>
                            <mml:mi>V</mml:mi>
                          </mml:mrow>
                          <mml:mi>j</mml:mi>
                          <mml:mi>y</mml:mi>
                        </mml:msubsup>
                        <mml:mo>=</mml:mo>
                      </mml:mrow>
                    </mml:mtd>
                    <mml:mtd>
                      <mml:mrow>
                        <mml:mo> </mml:mo>
                        <mml:mtext>cos</mml:mtext>
                        <mml:mo stretchy="true">(</mml:mo>
                        <mml:mfrac>
                          <mml:mrow>
                            <mml:mn>2</mml:mn>
                            <mml:mo>π</mml:mo>
                            <mml:mi>j</mml:mi>
                          </mml:mrow>
                          <mml:mi>n</mml:mi>
                        </mml:mfrac>
                        <mml:mo stretchy="true">)</mml:mo>
                      </mml:mrow>
                    </mml:mtd>
                  </mml:mtr>
                </mml:mtable>
              </mml:mrow>
            </mml:mrow>
            <mml:mo>.</mml:mo>
          </mml:mrow>
        </mml:math>
      </disp-formula>
      <p><xref rid="btad229-F3" ref-type="fig">Figure 3</xref> shows FCGR images of two different phage proteins and a random amino acid sequence. The random sequence in Panel (A) is generated by randomly choosing an amino acid for 1000 times using a uniform distribution. In contrast to the random sequence, the FCGR of baseplate protein and minor capsid protein (<xref rid="btad229-F3" ref-type="fig">Fig. 3B and C</xref>) reveal more unique patterns. For example, the red patches in <xref rid="btad229-F3" ref-type="fig">Fig. 3B and C</xref> exhibit a similar pattern while the blue and red patches show highly different patterns, which may signal key sequence features that can distinguish the baseplate and minor capsid proteins. The patches indicate the distribution of short motifs ending with different amino acids. These patches and their relationships/associations with other patches can be learned by our ViT model to improve classification accuracy.</p>
      <fig position="float" id="btad229-F3">
        <label>Figure 3.</label>
        <caption>
          <p>FCGR images for three sequences. (A) A random sequence. The order of vertices/amino acids is shown around the ring. (B) Baseplate protein with RefSeq accession: <italic toggle="yes">YP_009788086.1</italic>. (C) Minor capsid protein with RefSeq accession: <italic toggle="yes">YP_009900655.1</italic>. The green boxes and blue boxes in (B) and (C) show different patterns and the red boxes show exhibit patterns.</p>
        </caption>
        <graphic xlink:href="btad229f3" position="float"/>
      </fig>
    </sec>
    <sec>
      <title>2.2 Basic structure of ViT</title>
      <p>After encoding the protein sequences into <inline-formula id="IE8"><mml:math id="IM8" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow><mml:mrow><mml:mn>64</mml:mn><mml:mo>×</mml:mo><mml:mn>64</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> images, we employ ViT for PVP classification. As shown in <xref rid="btad229-F1" ref-type="fig">Fig. 1</xref>, the inputs to our ViT model are FCGR images, and the output of the ViT is the probability of the protein being PVP. If the protein is predicted as PVP, our ViT will assign a more detailed annotation for the PVP.</p>
      <sec>
        <title>2.2.1 Patch splitting and embedding</title>
        <p>To feed an FCGR image to ViT, we will reshape the FCGR image <inline-formula id="IE9"><mml:math id="IM9" display="inline" overflow="scroll"><mml:mrow><mml:mi>G</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow><mml:mrow><mml:mn>64</mml:mn><mml:mo>×</mml:mo><mml:mn>64</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> into a sequence of flattened 2D patches <inline-formula id="IE10"><mml:math id="IM10" display="inline" overflow="scroll"><mml:mrow><mml:mi>g</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow><mml:mrow><mml:mi>N</mml:mi><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>, where the dimension of each image patch is <inline-formula id="IE11"><mml:math id="IM11" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi><mml:mo>×</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>, and <italic toggle="yes">N</italic> is <inline-formula id="IE12"><mml:math id="IM12" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mn>64</mml:mn></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>/</mml:mo><mml:msup><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:math></inline-formula>. In our design, <italic toggle="yes">M</italic> is set to 16 by default, and the length of the input sequence <italic toggle="yes">N</italic> will be 16. Then, we can use <xref rid="E2" ref-type="disp-formula">Equation (2)</xref> to generate inputs to the Transformer model.
</p>
        <disp-formula id="E2">
          <label>(2)</label>
          <mml:math id="M2" display="block" overflow="scroll">
            <mml:mrow>
              <mml:mrow>
                <mml:mo stretchy="true">{</mml:mo>
                <mml:mrow>
                  <mml:mtable>
                    <mml:mtr>
                      <mml:mtd>
                        <mml:mrow>
                          <mml:msub>
                            <mml:mrow>
                              <mml:mi>E</mml:mi>
                            </mml:mrow>
                            <mml:mi>t</mml:mi>
                          </mml:msub>
                          <mml:mo>=</mml:mo>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:mo stretchy="false">[</mml:mo>
                          <mml:msubsup>
                            <mml:mrow>
                              <mml:mi>g</mml:mi>
                            </mml:mrow>
                            <mml:mi>m</mml:mi>
                            <mml:mn>1</mml:mn>
                          </mml:msubsup>
                          <mml:msub>
                            <mml:mrow>
                              <mml:mi>H</mml:mi>
                            </mml:mrow>
                            <mml:mi>e</mml:mi>
                          </mml:msub>
                          <mml:mo>;</mml:mo>
                          <mml:msubsup>
                            <mml:mrow>
                              <mml:mi>g</mml:mi>
                            </mml:mrow>
                            <mml:mi>m</mml:mi>
                            <mml:mn>2</mml:mn>
                          </mml:msubsup>
                          <mml:msub>
                            <mml:mrow>
                              <mml:mi>H</mml:mi>
                            </mml:mrow>
                            <mml:mi>e</mml:mi>
                          </mml:msub>
                          <mml:mo>;</mml:mo>
                          <mml:mo>…</mml:mo>
                          <mml:mo>;</mml:mo>
                          <mml:msubsup>
                            <mml:mrow>
                              <mml:mi>g</mml:mi>
                            </mml:mrow>
                            <mml:mi>m</mml:mi>
                            <mml:mi>N</mml:mi>
                          </mml:msubsup>
                          <mml:msub>
                            <mml:mrow>
                              <mml:mi>H</mml:mi>
                            </mml:mrow>
                            <mml:mi>e</mml:mi>
                          </mml:msub>
                          <mml:mo stretchy="false">]</mml:mo>
                        </mml:mrow>
                      </mml:mtd>
                    </mml:mtr>
                    <mml:mtr>
                      <mml:mtd>
                        <mml:mrow>
                          <mml:msub>
                            <mml:mrow>
                              <mml:mi>E</mml:mi>
                            </mml:mrow>
                            <mml:mi>m</mml:mi>
                          </mml:msub>
                          <mml:mo>=</mml:mo>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:mi>I</mml:mi>
                          <mml:msub>
                            <mml:mrow>
                              <mml:mi>H</mml:mi>
                            </mml:mrow>
                            <mml:mi>m</mml:mi>
                          </mml:msub>
                        </mml:mrow>
                      </mml:mtd>
                    </mml:mtr>
                    <mml:mtr>
                      <mml:mtd>
                        <mml:mrow>
                          <mml:msup>
                            <mml:mrow>
                              <mml:mi>Z</mml:mi>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mo stretchy="false">(</mml:mo>
                              <mml:mn>0</mml:mn>
                              <mml:mo stretchy="false">)</mml:mo>
                            </mml:mrow>
                          </mml:msup>
                          <mml:mo>=</mml:mo>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:msub>
                            <mml:mrow>
                              <mml:mi>E</mml:mi>
                            </mml:mrow>
                            <mml:mi>m</mml:mi>
                          </mml:msub>
                          <mml:mo>+</mml:mo>
                          <mml:msub>
                            <mml:mrow>
                              <mml:mi>E</mml:mi>
                            </mml:mrow>
                            <mml:mi>t</mml:mi>
                          </mml:msub>
                        </mml:mrow>
                      </mml:mtd>
                    </mml:mtr>
                  </mml:mtable>
                  <mml:mo>.</mml:mo>
                </mml:mrow>
              </mml:mrow>
            </mml:mrow>
          </mml:math>
        </disp-formula>
        <p>Here, <inline-formula id="IE13"><mml:math id="IM13" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:msubsup><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> is the flattened 2D patch at position <italic toggle="yes">i</italic>, corresponding to a “word” token in Transformer for natural language modeling (<xref rid="btad229-B52" ref-type="bibr">Vaswani et al. 2017</xref>). <italic toggle="yes">I</italic> is the index of the position of each patch <inline-formula id="IE14"><mml:math id="IM14" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> in the input FCGR image. <inline-formula id="IE15"><mml:math id="IM15" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>H</mml:mi></mml:mrow><mml:mi>e</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE16"><mml:math id="IM16" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>H</mml:mi></mml:mrow><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> are learnable linear projection matrices for image patch and positional embedding, respectively.</p>
      </sec>
      <sec>
        <title>2.2.2 The transformer model</title>
        <p>The architecture of the Transformer model in <xref rid="btad229-F1" ref-type="fig">Fig. 1</xref> is the same as the original design in <xref rid="btad229-B52" ref-type="bibr">Vaswani et al. (2017)</xref>. The equations of the Transformer are listed in <xref rid="E3" ref-type="disp-formula">Equation (3)</xref>. The first function is the multi-head attention mechanism (MSA layer), which can extract the importance of patches and learn their associations. Then linear projections (MLP layer) are employed to capture information from each patch simultaneously. Layer normalization (<xref rid="btad229-B54" ref-type="bibr">Wang et al. 2019</xref>), and residual connections (<xref rid="btad229-B4" ref-type="bibr">Baevski and Auli 2018</xref>) are applied before and after each block to prevent gradient exploding and gradient vanishing, respectively. In the last layer, we use the SoftMax function to estimate the probability of a protein being a PVP. If the protein is predicted as a PVP, <inline-formula id="IE17"><mml:math id="IM17" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mi>Z</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> [<xref rid="E3" ref-type="disp-formula">Equation (3)</xref>] will be fed to a multi-class classifier to predict a more detailed annotation.
</p>
        <disp-formula id="E3">
          <label>(3)</label>
          <mml:math id="M3" display="block" overflow="scroll">
            <mml:mrow>
              <mml:mrow>
                <mml:mo stretchy="true">{</mml:mo>
                <mml:mrow>
                  <mml:mtable>
                    <mml:mtr>
                      <mml:mtd>
                        <mml:mrow>
                          <mml:msup>
                            <mml:mrow>
                              <mml:mi>Z</mml:mi>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mo stretchy="false">(</mml:mo>
                              <mml:mn>1</mml:mn>
                              <mml:mo stretchy="false">)</mml:mo>
                            </mml:mrow>
                          </mml:msup>
                        </mml:mrow>
                      </mml:mtd>
                      <mml:mtd>
                        <mml:mo>=</mml:mo>
                      </mml:mtd>
                      <mml:mtd>
                        <mml:mrow>
                          <mml:mi mathvariant="italic">MSA</mml:mi>
                          <mml:mo stretchy="false">(</mml:mo>
                          <mml:msup>
                            <mml:mrow>
                              <mml:mi>Z</mml:mi>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mo stretchy="false">(</mml:mo>
                              <mml:mn>0</mml:mn>
                              <mml:mo stretchy="false">)</mml:mo>
                            </mml:mrow>
                          </mml:msup>
                          <mml:mo stretchy="false">)</mml:mo>
                          <mml:mo>+</mml:mo>
                          <mml:msup>
                            <mml:mrow>
                              <mml:mi>Z</mml:mi>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mo stretchy="false">(</mml:mo>
                              <mml:mn>0</mml:mn>
                              <mml:mo stretchy="false">)</mml:mo>
                            </mml:mrow>
                          </mml:msup>
                        </mml:mrow>
                      </mml:mtd>
                    </mml:mtr>
                    <mml:mtr>
                      <mml:mtd>
                        <mml:mrow>
                          <mml:msup>
                            <mml:mrow>
                              <mml:mi>Z</mml:mi>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mo stretchy="false">(</mml:mo>
                              <mml:mn>2</mml:mn>
                              <mml:mo stretchy="false">)</mml:mo>
                            </mml:mrow>
                          </mml:msup>
                        </mml:mrow>
                      </mml:mtd>
                      <mml:mtd>
                        <mml:mo>=</mml:mo>
                      </mml:mtd>
                      <mml:mtd>
                        <mml:mrow>
                          <mml:mi mathvariant="italic">MLP</mml:mi>
                          <mml:mo stretchy="false">(</mml:mo>
                          <mml:mi>L</mml:mi>
                          <mml:mi>N</mml:mi>
                          <mml:mo stretchy="false">(</mml:mo>
                          <mml:msup>
                            <mml:mrow>
                              <mml:mi>Z</mml:mi>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mo stretchy="false">(</mml:mo>
                              <mml:mn>1</mml:mn>
                              <mml:mo stretchy="false">)</mml:mo>
                            </mml:mrow>
                          </mml:msup>
                          <mml:mo stretchy="false">)</mml:mo>
                          <mml:mo stretchy="false">)</mml:mo>
                          <mml:mo>+</mml:mo>
                          <mml:msup>
                            <mml:mrow>
                              <mml:mi>Z</mml:mi>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mo stretchy="false">(</mml:mo>
                              <mml:mn>1</mml:mn>
                              <mml:mo stretchy="false">)</mml:mo>
                            </mml:mrow>
                          </mml:msup>
                        </mml:mrow>
                      </mml:mtd>
                    </mml:mtr>
                    <mml:mtr>
                      <mml:mtd>
                        <mml:mrow>
                          <mml:msup>
                            <mml:mrow>
                              <mml:mi>y</mml:mi>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mi mathvariant="italic">binary</mml:mi>
                            </mml:mrow>
                          </mml:msup>
                        </mml:mrow>
                      </mml:mtd>
                      <mml:mtd>
                        <mml:mo>=</mml:mo>
                      </mml:mtd>
                      <mml:mtd>
                        <mml:mrow>
                          <mml:mi mathvariant="italic">SoftMax</mml:mi>
                          <mml:mo stretchy="false">(</mml:mo>
                          <mml:mi>L</mml:mi>
                          <mml:mi>N</mml:mi>
                          <mml:mo stretchy="false">(</mml:mo>
                          <mml:msup>
                            <mml:mrow>
                              <mml:mi>Z</mml:mi>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mo stretchy="false">(</mml:mo>
                              <mml:mn>2</mml:mn>
                              <mml:mo stretchy="false">)</mml:mo>
                            </mml:mrow>
                          </mml:msup>
                          <mml:mo stretchy="false">)</mml:mo>
                          <mml:mo stretchy="false">)</mml:mo>
                        </mml:mrow>
                      </mml:mtd>
                    </mml:mtr>
                    <mml:mtr>
                      <mml:mtd>
                        <mml:mrow>
                          <mml:msup>
                            <mml:mrow>
                              <mml:mi>y</mml:mi>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mi mathvariant="italic">multi</mml:mi>
                              <mml:mo>-</mml:mo>
                              <mml:mi mathvariant="italic">class</mml:mi>
                            </mml:mrow>
                          </mml:msup>
                        </mml:mrow>
                      </mml:mtd>
                      <mml:mtd>
                        <mml:mo>=</mml:mo>
                      </mml:mtd>
                      <mml:mtd>
                        <mml:mrow>
                          <mml:mi mathvariant="italic">SoftMax</mml:mi>
                          <mml:mo stretchy="false">(</mml:mo>
                          <mml:mi>L</mml:mi>
                          <mml:mi>N</mml:mi>
                          <mml:mo stretchy="false">(</mml:mo>
                          <mml:msup>
                            <mml:mrow>
                              <mml:mi>Z</mml:mi>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mo stretchy="false">(</mml:mo>
                              <mml:mn>2</mml:mn>
                              <mml:mo stretchy="false">)</mml:mo>
                            </mml:mrow>
                          </mml:msup>
                          <mml:mo stretchy="false">)</mml:mo>
                          <mml:mo stretchy="false">)</mml:mo>
                        </mml:mrow>
                      </mml:mtd>
                    </mml:mtr>
                  </mml:mtable>
                </mml:mrow>
              </mml:mrow>
              <mml:mo>.</mml:mo>
            </mml:mrow>
          </mml:math>
        </disp-formula>
      </sec>
      <sec>
        <title>2.2.3 Model training</title>
        <p>Because there are two tasks in PhaVIP: classifying the PVP and non-PVP sequences (binary classification task) and classifying seven types of PVP (multi-class classification task), we train classifiers for them separately. As introduced in <xref rid="btad229-B11" ref-type="bibr">Devlin et al. (2018)</xref>, pre-training the Transformer model can improve the performance of the downstream task. Thus, we first apply an end-to-end method to train the binary classification model. Then, we fix the parameters in the Transformer encoder and fine-tune a new classifier layer for the multi-class classification model. Binary cross-entropy loss and L2 loss are employed for the binary classification and multi-class classification, respectively. We employ Adam optimizer with a learning rate of 0.001 to update the parameters for both tasks. The models are trained on HPC with the GTX 3080 GPU unit to reduce the running time.</p>
      </sec>
    </sec>
    <sec>
      <title>2.3 Data collection and experimental setup</title>
      <p>Although several PVP datasets have been constructed (<xref rid="btad229-B29" ref-type="bibr">Kabir et al. 2022</xref>), the latest dataset constructed by <xref rid="btad229-B7" ref-type="bibr">Cantu et al. (2020)</xref> was based on the protein annotations released before June 2020. In addition, some annotations of phage protein can be updated regularly in the RefSeq database. For example, as the author of DeePVP (<xref rid="btad229-B18" ref-type="bibr">Fang et al. 2022</xref>) reported, the protein <italic toggle="yes">YP_006383517.1</italic> was not annotated as PVP until October 2021, and this protein was re-annotated as a tail protein in the current version. Thus, in this work, we updated the PVP classification dataset by downloading all the latest annotations from the RefSeq viral protein database (December 2022). Following the guidelines of the third-party review (<xref rid="btad229-B29" ref-type="bibr">Kabir et al. 2022</xref>), we first recruited proteins that belong to phages. Then, the proteins with low-confidence annotations, such as “hypothetical protein”, “similar to”, “xx-like”, “unnamed”, and “putative” were removed. We extracted structural protein sequences by searching the keywords, such as “portal”, “capsid”, “tail”, “fiber”, “tape measure”, “baseplate”, and “structural”. The non-structural proteins were searched using the enzymes’ names, such as annotations ending with “ase”. In addition, we also used other keywords, such as “transcription”, “holin”, “lysin”, and “regulator”, to construct the non-PVP set. To remove the potential redundant sequences, we employed CD-HIT (<xref rid="btad229-B31" ref-type="bibr">Li and Godzik 2006</xref>) to cluster sequences that have above 90% similarity and used the longest sequence to represent each cluster. Finally, our dataset contains 35 213 PVP sequences and 46 883 non-PVP sequences.</p>
      <sec>
        <title>2.3.1 Splitting the dataset</title>
        <p>We split our PVP dataset with increasing difficulty when constructing the training and test set. There are two tasks for PVP classification: classifying the PVP and non-PVP sequences (binary classification) and predicting the PVP types (multi-class classification). In the binary classification task, we use all the proteins for the data partition. In the multi-class classification task, we use the protein annotated with “portal”, “major capsid”, “minor capsid”, “major tail”, “minor tail”, “baseplate”, and “tail_fiber” to construct the multi-class classification dataset. According to the definition of bacteriophage assembly (<xref rid="btad229-B1" ref-type="bibr">Aksyuk and Rossmann 2011</xref>), tail sheath proteins are grouped into the “major tail” or “minor tail” protein classes based on their annotation in the RefSeq database. Other the remained PVPs, such as “Head-tail joining” and “collar” proteins, contain significantly fewer samples than other classes and thus are combined and labeled as “other”.</p>
        <p><italic toggle="yes">Splitting by time</italic>. As mentioned in <xref rid="btad229-B29" ref-type="bibr">Kabir et al. (2022)</xref>, splitting training and test set by time is a widely used data partition method, which mimics the application scenario of using known PVPs to discover new ones. In this dataset, proteins released before December 2020 comprise the training set, while proteins released after that comprise the test set. Finally, we have 27 704 PVP sequences and 36 778 non-PVP sequences for training, and 7509 PVP sequences and 10 103 non-PVP sequences for testing in the PVP classification task. To balance the dataset, we randomly sampled non-PVP sequences to maintain the same number of samples in the binary classification as suggested in <xref rid="btad229-B29" ref-type="bibr">Kabir et al. (2022)</xref>. In the multi-class classification, we keep the original data distribution following <xref rid="btad229-B7" ref-type="bibr">Cantu et al. (2020)</xref>.</p>
        <p><italic toggle="yes">Splitting by similarity</italic>. To test PhaVIP’s performance in classifying diverged PVP, we constructed a hard case where the test sequences share low similarity with the training proteins. Specifically, we applied the all-against-all BLASTP search to our PVP dataset and calculated the product of the pair-wise identity and alignment coverage (Identity <inline-formula id="IE18"><mml:math id="IM18" display="inline" overflow="scroll"><mml:mo>×</mml:mo></mml:math></inline-formula> Coverage). The identity is the percentage of exact matches in the pair-wise alignment and the coverage is the ratio of the aligned length to the length of the query sequence. This will help to estimate the global similarity of the two sequences following the recommendation by ICTV. Then, we employed the data partition strategy proposed in <xref rid="btad229-B40" ref-type="bibr">Petti and Eddy (2022)</xref> to create training and test data with a specified maximum similarity between train and test. In this work, we chose 0.4, 0.5, 0.6, 0.7, 0.8, and 0.9 as the thresholds and employed stratified sampling to generate six pairs of training and test sets. Based on the design of the data partition algorithm in <xref rid="btad229-B40" ref-type="bibr">Petti and Eddy (2022)</xref>, the generated training and test set can be different for each specified similarity cutoff. The size of the train and test data can be found in the online <xref rid="sup1" ref-type="supplementary-material">supplementary file</xref>.</p>
      </sec>
      <sec>
        <title>2.3.2 Metrics</title>
        <p>As mentioned in <xref rid="btad229-B29" ref-type="bibr">Kabir et al. (2022)</xref>, the widely used metrics for evaluating PVP classification performance are precision, recall, and <italic toggle="yes">F</italic>1-score. Their formulas are listed in <xref rid="E4" ref-type="disp-formula">Equations (4)</xref> and <xref rid="E6" ref-type="disp-formula">(6)</xref>:
</p>
        <disp-formula id="E4">
          <label>(4)</label>
          <mml:math id="M4" display="block" overflow="scroll">
            <mml:mrow>
              <mml:mi mathvariant="italic">precision</mml:mi>
              <mml:mo>=</mml:mo>
              <mml:mfrac>
                <mml:mrow>
                  <mml:mi>T</mml:mi>
                  <mml:mi>P</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mi>T</mml:mi>
                  <mml:mi>P</mml:mi>
                  <mml:mo>+</mml:mo>
                  <mml:mi>F</mml:mi>
                  <mml:mi>P</mml:mi>
                </mml:mrow>
              </mml:mfrac>
              <mml:mo>.</mml:mo>
            </mml:mrow>
          </mml:math>
        </disp-formula>
        <disp-formula id="E5">
          <label>(5)</label>
          <mml:math id="M5" display="block" overflow="scroll">
            <mml:mrow>
              <mml:mi mathvariant="italic">recall</mml:mi>
              <mml:mo>=</mml:mo>
              <mml:mfrac>
                <mml:mrow>
                  <mml:mi>T</mml:mi>
                  <mml:mi>P</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mi>T</mml:mi>
                  <mml:mi>P</mml:mi>
                  <mml:mo>+</mml:mo>
                  <mml:mi>F</mml:mi>
                  <mml:mi>N</mml:mi>
                </mml:mrow>
              </mml:mfrac>
              <mml:mo>.</mml:mo>
            </mml:mrow>
          </mml:math>
        </disp-formula>
        <disp-formula id="E6">
          <label>(6)</label>
          <mml:math id="M6" display="block" overflow="scroll">
            <mml:mrow>
              <mml:mi>F</mml:mi>
              <mml:mn>1</mml:mn>
              <mml:mo>-</mml:mo>
              <mml:mi mathvariant="italic">score</mml:mi>
              <mml:mo>=</mml:mo>
              <mml:mfrac>
                <mml:mrow>
                  <mml:mn>2</mml:mn>
                  <mml:mo>×</mml:mo>
                  <mml:mi mathvariant="italic">precision</mml:mi>
                  <mml:mo>×</mml:mo>
                  <mml:mi mathvariant="italic">recall</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mi mathvariant="italic">precision</mml:mi>
                  <mml:mo>+</mml:mo>
                  <mml:mi mathvariant="italic">recall</mml:mi>
                </mml:mrow>
              </mml:mfrac>
              <mml:mo>.</mml:mo>
            </mml:mrow>
          </mml:math>
        </disp-formula>
        <p>For binary PVP classification, true positive (TP), false negative (FN), and false positive (FP) represent the number of corrected identified PVPs, the number of PVPs misclassified into non-PVPs, and the number of falsely identified PVPs, respectively. We will also report the area under the ROC curve (AUCROC) for comparison. For the multi-class classification task, we will calculate precision, recall, and <italic toggle="yes">F</italic>1-score for each class.</p>
      </sec>
    </sec>
  </sec>
  <sec>
    <title>3 Results</title>
    <p>In the experiment, we validate our pipeline on several datasets and compare PhaVIP against the state-of-the-art methods mentioned in the third-party review (<xref rid="btad229-B29" ref-type="bibr">Kabir et al. 2022</xref>), including VirionFinder (<xref rid="btad229-B17" ref-type="bibr">Fang and Zhou 2021</xref>), PhANNs (<xref rid="btad229-B7" ref-type="bibr">Cantu et al. 2020</xref>), DeePVP (<xref rid="btad229-B18" ref-type="bibr">Fang et al. 2022</xref>), Meta-iPVP (<xref rid="btad229-B8" ref-type="bibr">Charoenkwan et al. 2020b</xref>), PVP-SVM (<xref rid="btad229-B35" ref-type="bibr">Manavalan et al. 2018</xref>), and PVPred-SCM (<xref rid="btad229-B9" ref-type="bibr">Charoenkwan et al. 2020a</xref>). Out of these tools, only PhANNs and DeePVP provided source codes for re-training or updating the reference database. Thus, we are able to retrain PhANNs and DeePVP for both the binary and the multi-classification tasks using the suggested hyperparameters. Other tools did not provide a re-training function. Thus, we applied them to the test data directly.</p>
    <p>In the following sections, we will first evaluate the PVP classification performance. Then, following <xref rid="btad229-B18" ref-type="bibr">Fang et al. (2022)</xref>, we will show a case study of classifying PVP on the <italic toggle="yes">mycobacteriophage</italic> PDRPxv genome, a newly identified phage that is a candidate therapy for pathogenic <italic toggle="yes">Mycobacterium</italic>. Finally, we investigate whether using classified PVPs and non-PVPs can benefit two important phage analysis tasks: phage taxonomy classification and host prediction.</p>
    <sec>
      <title>3.1 Performance on the benchmark dataset split by time</title>
      <p>To improve the robustness of the model, we trained PhaVIP, PhANNs, and DeePVP using 10-fold cross-validation. First, we split our training set into 10 subsets. Then, we iteratively selected nine subsets for training and one subset for validation. The 10-fold cross-validation performance of PhaVIP is shown in the online supplementary file (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S1</xref>). The model that achieves the best performance on the validation set was kept for future experiments. For other methods, we used the provided models with the suggested parameters on the test proteins. The ROC curves of all the methods on the test dataset split by time are shown in <xref rid="btad229-F4" ref-type="fig">Fig. 4</xref>. The AUCROC reveals that PhaVIP has more reliable results on the dataset split by time. Because PVPred-SCM does not output a score of the prediction, we only report its recall and FP rate.</p>
      <fig position="float" id="btad229-F4">
        <label>Figure 4.</label>
        <caption>
          <p>The ROC curves of the binary PVP classification on the test data by different tools. The number following the tool name is the value of the AUCROC. PVPred-SCM does not output a score for the prediction, and thus only TPR and FPR are reported.</p>
        </caption>
        <graphic xlink:href="btad229f4" position="float"/>
      </fig>
      <p>In order to show the classification performance in real application scenarios, we also recorded the precision, recall, and <italic toggle="yes">F</italic>1-score of all tested tools under their default score cutoffs in <xref rid="btad229-F5" ref-type="fig">Fig. 5</xref> and <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S1</xref>. The results reveal that PhaVIP and DeePVP have better performance than other methods on this dataset.</p>
      <fig position="float" id="btad229-F5">
        <label>Figure 5.</label>
        <caption>
          <p>The classification performance of the binary PVP classification under the default/suggested thresholds.</p>
        </caption>
        <graphic xlink:href="btad229f5" position="float"/>
      </fig>
      <p>Next, we examine the performance of PhaVIP in the multi-class classification task. Of the available tools, only PhANNs and DeePVP enable more detailed annotation of PVPs. However, classes/labels in the original design of PhANNs and DeePVP are different from ours. Thus, we retrained both methods and compared them with PhaVIP. The <italic toggle="yes">F</italic>1-score of each class is shown in <xref rid="btad229-F6" ref-type="fig">Fig. 6</xref>, and the detailed confusion matrix can be found in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S2</xref>. The results clearly show that the multi-class classification task is harder than classifying the PVP and non-PVP. The possible reasons are the smaller training sets and highly unbalanced classes. Although all the methods used the weighted loss method to balance the training classes, the performance of the small class (minor capsid) is still unsatisfactory. Nevertheless, PhaVIP can achieve better performance in all the classes, especially in the small ones.</p>
      <fig position="float" id="btad229-F6">
        <label>Figure 6.</label>
        <caption>
          <p>The performance of the multi-class classification. <italic toggle="yes">X</italic>-axis: the name of each PVP class. The order of the names is ranked by the class size. <italic toggle="yes">Y</italic>-axis: <italic toggle="yes">F</italic>1-score.</p>
        </caption>
        <graphic xlink:href="btad229f6" position="float"/>
      </fig>
    </sec>
    <sec>
      <title>3.2 Performance on the low-similarity dataset</title>
      <p>It is usually much harder to annotate diverged proteins. As mentioned in Section 2.3, we use the <inline-formula id="IE19"><mml:math id="IM19" display="inline" overflow="scroll"><mml:mrow><mml:mi mathvariant="italic">Identity</mml:mi><mml:mo>×</mml:mo><mml:mi mathvariant="italic">Coverage</mml:mi></mml:mrow></mml:math></inline-formula> as the similarity measurement and control the maximum similarity between the training and test set. We generated six pairs of datasets with decreasing similarity for the binary classification task and multi-class classification task separately. The <italic toggle="yes">F</italic>1-scores of PhaVIP, PhANNs, and DeePVP are shown in <xref rid="btad229-F7" ref-type="fig">Figs 7</xref> and <xref rid="btad229-F8" ref-type="fig">8</xref>. The detailed confusion matrix of the classification can be found in <xref rid="sup1" ref-type="supplementary-material">Supplementary Tables S3–S14</xref>.</p>
      <fig position="float" id="btad229-F7">
        <label>Figure 7.</label>
        <caption>
          <p>The binary classification performance on the low-similarity dataset. <italic toggle="yes">X</italic>-axis: the maximum value of <inline-formula id="IE20"><mml:math id="IM20" display="inline" overflow="scroll"><mml:mrow><mml:mi mathvariant="italic">identity</mml:mi><mml:mo>×</mml:mo><mml:mi mathvariant="italic">coverage</mml:mi></mml:mrow></mml:math></inline-formula> between train and test sets. <italic toggle="yes">Y</italic>-axis: <italic toggle="yes">F</italic>1-score.</p>
        </caption>
        <graphic xlink:href="btad229f7" position="float"/>
      </fig>
      <fig position="float" id="btad229-F8">
        <label>Figure 8.</label>
        <caption>
          <p>The multi-class classification performance on the low-similarity dataset. <italic toggle="yes">X</italic>-axis: the maximum value of <inline-formula id="IE21"><mml:math id="IM21" display="inline" overflow="scroll"><mml:mrow><mml:mi mathvariant="italic">identity</mml:mi><mml:mo>×</mml:mo><mml:mi mathvariant="italic">coverage</mml:mi></mml:mrow></mml:math></inline-formula>. <italic toggle="yes">Y</italic>-axis: <italic toggle="yes">F</italic>1-score.</p>
        </caption>
        <graphic xlink:href="btad229f8" position="float"/>
      </fig>
      <p>As expected, with the increase of the train-versus-test similarity, the <italic toggle="yes">F</italic>1-score of both methods increases. The gap between PhaVIP and the other two methods clearly reveals that our model competes favorably against the state-of-the-art methods on a wide range of similarities in both binary and multi-class classification tasks.</p>
    </sec>
    <sec>
      <title>3.3 Case study: annotating proteins on the <italic toggle="yes">mycobacteriophage</italic> PDRPxv genome</title>
      <p>Inspired by <xref rid="btad229-B48" ref-type="bibr">Sinha et al. (2020)</xref> and <xref rid="btad229-B18" ref-type="bibr">Fang et al. (2022)</xref>, in this case study, we employed PhaVIP to annotate the proteins translated from <italic toggle="yes">mycobacteriophage</italic> PDRPxv, which is recently identified as a candidate therapy for <italic toggle="yes">Mycobacterium</italic>. According to <xref rid="btad229-B48" ref-type="bibr">Sinha et al. (2020)</xref>, totally there are 107 predicted proteins in the PDRPxv genome. The authors identified 12 PVPs using the mass spectrometry method and 12 non-PVPs using the alignment method (BLAST). The functions of the other 83 proteins remain unknown. We downloaded the genomes from GenBank with accession <ext-link xlink:href="KR029087" ext-link-type="DDBJ/EMBL/GenBank">KR029087</ext-link>. Because PDRPxv is not part of the RefSeq dataset, we can evaluate PhaVIP by comparing PhaVIP’s predictions with the 24 annotations derived by the mass spectrometry method and BLAST.</p>
      <p>We used the 24 annotated proteins as input and tested the performance of the best four tools (in the benchmark experiment in <xref rid="btad229-F5" ref-type="fig">Fig. 5</xref>). As shown in <xref rid="btad229-T2" ref-type="table">Table 2</xref>, PhaVIP has better performance than other tools. In addition, all the machine learning-based methods are able to predict the function of the remaining 83 proteins, demonstrating the utility of the learning-based method for PVP classification. We used the Venn diagram to visualize the relationship between the predicted PVP sets. As shown in <xref rid="btad229-F9" ref-type="fig">Fig. 9</xref>, PhaVIP, VirionFinder, and PhANNs identified more PVPs than DeePVP. This is consistent to the observation of DeePVP’s low recall in <xref rid="btad229-F5" ref-type="fig">Fig. 5</xref>. In addition, 93% of PVPs predicted by PhaVIP are also classified as PVPs by other methods, which is higher than PhANNs and VirionFinder.</p>
      <fig position="float" id="btad229-F9">
        <label>Figure 9.</label>
        <caption>
          <p>The Venn diagram of the complete PVP classification results of four best machine-leanring methods on <italic toggle="yes">mycobacteriophage</italic> PDRPxv.</p>
        </caption>
        <graphic xlink:href="btad229f9" position="float"/>
      </fig>
      <table-wrap position="float" id="btad229-T2">
        <label>Table 2.</label>
        <caption>
          <p><italic toggle="yes">F</italic>1-score of classifying proteins in <italic toggle="yes">mycobacteriophage</italic> PDRPxv genome.</p>
        </caption>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th rowspan="1" colspan="1">Tools</th>
              <th rowspan="1" colspan="1">PhaVIP</th>
              <th rowspan="1" colspan="1">DeePVP</th>
              <th rowspan="1" colspan="1">PhANNs</th>
              <th rowspan="1" colspan="1">VirionFinder</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1"><italic toggle="yes">F</italic>1-score</td>
              <td rowspan="1" colspan="1">
                <bold>0.88</bold>
              </td>
              <td rowspan="1" colspan="1">0.85</td>
              <td rowspan="1" colspan="1">0.83</td>
              <td rowspan="1" colspan="1">0.64</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <fn id="tblfn1">
            <p>The highest score is highlighted in bold.</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
    </sec>
    <sec>
      <title>3.4 Using classified proteins in two important applications</title>
      <p>It is widely known that phage proteins play essential roles in taxonomy classification and host prediction. In this section, we investigate the roles of PVPs and non-PVPs in these two tasks.</p>
      <sec>
        <title>3.4.1 Phage taxonomy classification</title>
        <p>Recently, many new phages have been identified using high-throughput sequencing, especially metagenomic sequencing. vConTACT 2.0 (<xref rid="btad229-B15" ref-type="bibr">Eloe-Fadrosh 2019</xref>) is a widely used and robust tool for phage taxonomy classification, as reported in the phage taxonomy review (<xref rid="btad229-B56" ref-type="bibr">Zhu et al. 2022</xref>). It applies protein organization conservation for phage classification. Specifically, vConTACT 2.0 calculates the <italic toggle="yes">P</italic>-value that estimates the significance of two phage sequences sharing an observed number of proteins. Then, a protein-sharing network is constructed based on the <italic toggle="yes">P</italic>-value, and a clustering algorithm is applied to group “similar” sequences into the same cluster. Then, the known labels of the reference genomes in the cluster will be passed to other sequences in the same cluster.</p>
        <p>Although vConTACT has high accuracy in classifying complete or near complete phage sequences, its running time complexity is high because of large-scale pair-wise alignments. Thus, instead of using all proteins (<xref rid="btad229-F10" ref-type="fig">Fig. 10A</xref>), we propose to only use PVPs or non-PVPs to evaluate the similarity between phages. In particular, because PVPs have successful applications in phylogenetic tree construction, we expect that using just PVPs can achieve comparable accuracy of phage classification as using all proteins. Thus, in this experiment, we use just PVP or non-PVP when running vConTACT 2.0 and evaluate how PVP or non-PVP affects the classification results. First, we downloaded the benchmark dataset provided by <xref rid="btad229-B56" ref-type="bibr">Zhu et al. (2022)</xref>. This dataset was constructed using 1460 RefSeq phage sequences from the latest ICTV 2022 taxonomy. It was split by time: 80% of the sequences in each family were used as the training set, and the remaining sequences were used as the test set. Second, we applied prodigal (<xref rid="btad229-B27" ref-type="bibr">Hyatt et al. 2010</xref>) to predict and translate proteins from the phage genomes in training and test sets. PhaVIP is then employed to annotate each protein. Finally, we used predicted PVPs and non-PVPs to predict the taxonomy via vConTACT, respectively. <xref rid="btad229-F10" ref-type="fig">Figure 10B and C</xref> sketched the pipelines.</p>
        <fig position="float" id="btad229-F10">
          <label>Figure 10.</label>
          <caption>
            <p>Three versions of vConTACT 2.0. (A) The original design of vConTACT 2.0 uses all the proteins from the phage genome to construct the protein-sharing network. (B) PVP version of vConTACT 2.0. (C) Non-PVP version of vConTACT 2.0.</p>
          </caption>
          <graphic xlink:href="btad229f10" position="float"/>
        </fig>
        <p>The taxonomy classification results in <xref rid="btad229-F11" ref-type="fig">Fig. 11</xref> show that the PVP version of vConTACT 2.0, which only used PVP for taxonomy classification, can achieve almost the same performance as the regular vConTACT 2.0. In addition, because PVP only accounts for nearly <inline-formula id="IE22"><mml:math id="IM22" display="inline" overflow="scroll"><mml:mrow><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mn>5</mml:mn></mml:mrow></mml:math></inline-formula> of the total predicted proteins, using PVP for taxonomy classification can reduce the running time significantly. Because running PhaVIP only takes about 7 min for all proteins, even with the preprocessing by PhaVIP, the total running time of taxonomy classification by vConTACT 2.0 reduces from 89 to 9 min. Using non-PVP for taxonomy classification can also reduce the running time. But the accuracy is 3% lower than using PVP.</p>
        <fig position="float" id="btad229-F11">
          <label>Figure 11.</label>
          <caption>
            <p>vConTACT taxonomy classification results using different sets of proteins. “Random set 1” and “Random set 2” represent randomly selected protein sets, which have the same number of proteins as PVP and non-PVP set, respectively.</p>
          </caption>
          <graphic xlink:href="btad229f11" position="float"/>
        </fig>
        <p>A fair question is whether using any set of randomly chosen proteins can achieve similar accuracy with reduced running time. To answer this question, we randomly chose the same number of proteins as the PVP set and non-PVP set for taxonomy classification, respectively. In this experiment, PVP and “Random set 1” contain 7105 proteins, and non-PVP and “Random set 2” contain 29 321 proteins. The results in <xref rid="btad229-F11" ref-type="fig">Fig. 11</xref> indicate that using a random set of proteins cannot achieve comparable accuracy as using just PVPs. In addition, vConTACT 2.0’s results using “Random set 1” is worse than “Random set 2” probably because the number of proteins in “random set 2” is larger than “Random set 1”. Overall, these results show that PhaVIP can help select a small subset of important proteins for taxonomy classification.</p>
      </sec>
      <sec>
        <title>3.4.2 Phage host prediction</title>
        <p>The hosts of the phages are mainly bacteria. Identifying the phage–host relationship helps decipher the dynamic relationship between microbes. In addition, because of the fast rise of antibiotic-resistant pathogens, phage therapy has become a potential alternative to antibiotics for killing the “superbugs” (<xref rid="btad229-B30" ref-type="bibr">Lee et al. 2019</xref>). Thus, predicting the phage host is important to both fundamental research and phages’ applications.</p>
        <p>As reported in <xref rid="btad229-B47" ref-type="bibr">Shang and Sun (2022)</xref>, sequence similarity can be utilized for host prediction. If two phages share similar protein organizations, they tend to infect the same host. In addition, sequence similarity between phages and bacteria may help host prediction because phages can mobilize host genes (<xref rid="btad229-B26" ref-type="bibr">Howard-Varona et al. 2017</xref>). Thus, we developed a host prediction pipeline based on protein similarity in order to investigate how different types of proteins affect the prediction performance. The sketch of the pipeline is shown in <xref rid="btad229-F12" ref-type="fig">Fig. 12</xref>.</p>
        <fig position="float" id="btad229-F12">
          <label>Figure 12.</label>
          <caption>
            <p>The pipeline of using similarity search for host prediction. (A) The similarity search based host prediction. We implemented two pipelines using phage protein and bacterial protein as the reference databases, respectively. (B) The majority vote method for generating the final host prediction.</p>
          </caption>
          <graphic xlink:href="btad229f12" position="float"/>
        </fig>
        <p>First, we downloaded the widely used benchmark dataset for host prediction (<xref rid="btad229-B46" ref-type="bibr">Shang and Sun 2021</xref>, <xref rid="btad229-B47" ref-type="bibr">2022</xref>). The training set contains 1306 phage–host interactions collected in and before 2015, and the test set contains 634 interaction pairs after 2015. Every phage is unique, and some of them infect the same host. The training and test sets share 59 host species. Because the alignment-based method cannot predict new labels, we only keep 423 phages in the test set that infect these 59 species for this experiment.</p>
        <p>Second, we create the reference protein databases using the predicted proteins from all the phages in the training set and their hosts. As shown in <xref rid="btad229-F12" ref-type="fig">Fig. 12A</xref>, we save the proteins from phages and their hosts in two databases, respectively. Each protein has a taxonomic label. A phage protein’s label is determined by its host. A bacterial protein’s label is from itself. When there is a query/test phage, we predict its proteins and annotate PVP and non-PVP using PhaVIP. Then, we align the PVP proteins to the phage and bacterial protein databases and record each PVP’s best alignments against two databases, respectively. The labels of the best aligned proteins are used for host prediction. Because there are multiple proteins, we applied the majority vote as shown in <xref rid="btad229-F12" ref-type="fig">Fig. 12B</xref>. Specifically, the label with the most votes is assigned as the host of the phage. An example is given in <xref rid="btad229-F12" ref-type="fig">Fig. 12B</xref>, where three proteins were labeled as <italic toggle="yes">Escherichia coli</italic> and one protein was labeled as <italic toggle="yes">Salmonella enterica</italic>. Thus, the final predicted host of this phage is <italic toggle="yes">E.coli</italic>. Because we have two different databases, we record the results using the phage database and bacterial database separately. As a control experiment, we also repeated the host prediction process using only non-PVPs and all proteins. The host prediction results at different ranks from species to family are shown in <xref rid="btad229-F13" ref-type="fig">Fig. 13</xref>.</p>
        <fig position="float" id="btad229-F13">
          <label>Figure 13.</label>
          <caption>
            <p>Host prediction results after PVP classification. “(phage)” and “(bacteria)” refer to the similarity search against the phage protein and bacterial protein databases, respectively.</p>
          </caption>
          <graphic xlink:href="btad229f13" position="float"/>
        </fig>
        <p>The results reveal that the similarity search against the phage protein database always has better performance than against the bacterial protein database. This phenomenon is also noted by the existing host prediction tools. As reported in <xref rid="btad229-B47" ref-type="bibr">Shang and Sun (2022)</xref>, the tools based on phage–phage similarity usually have better performance than those based on phage–bacteria similarity in the experiments. In addition, we found that non-PVP can achieve better performance in host prediction tasks across different taxonomy levels and databases. A plausible explanation is that the host cell attachment process is complicated and involves many proteins. Some non-PVPs, such as endoglycosidase and endosialidase (<xref rid="btad229-B49" ref-type="bibr">Steinbacher et al. 1996</xref>; <xref rid="btad229-B50" ref-type="bibr">Stummeyer et al. 2005</xref>), also play key roles in the infection, and they are likely to be host-specific. Therefore, using just PVP for host prediction does not necessarily produce a better result, which does not agree with some previous conclusions (<xref rid="btad229-B5" ref-type="bibr">Boeckaerts et al. 2021</xref>). We may have underestimated the importance of non-PVPs in host prediction tasks.</p>
      </sec>
    </sec>
  </sec>
  <sec>
    <title>4 Discussion</title>
    <p>In this work, we present a novel PVP classification tool, named PhaVIP, that combines CGR and ViT for protein encoding and PVP classification. PhaVIP has two functions: predicting the PVP and non-PVP and predicting the type of the PVP. CGR-based encoding can convert proteins with different lengths into images with the same resolution. For each protein, it embeds the <italic toggle="yes">k</italic>-mer frequency into a unique image, allowing us to employ the state-of-the-art image classification model, ViT, to learn the importance and associations between different parts of a CGR image. As shown in all of our experiments, ViT shows better and more robust performance in both binary classification and multi-class classification tasks. We also demonstrated that phage taxonomy classification and host prediction can benefit from using classified proteins rather than all proteins.</p>
    <p>Although PhaVIP has greatly improved PVP classification, there are still some limitations. First, because most existing works do not provide source codes, we can only retrain the two latest published tools (DeePVP and PhANNs) in the experiments. Second, there are still other types of virion proteins, such as head–tail joining and collar proteins. However, because the number of these proteins is far fewer than in other classes, adding these classes for training may aggravate the data imbalance problem. According to our experiments, PhaVIP, DeePVP, and PhANNs cannot perform well in these small classes. For example, PhaVIP, DeePVP, and PhANNs achieved 54%, 50%, and 27% <italic toggle="yes">F</italic>1-score on the collar proteins. Thus, we have several goals to optimize or extend PhaVIP in our future work. First, although PhaVIP can perform well in binary classification, there is still room to improve multi-class classification, especially in the low-similarity data. We will investigate whether some multi-objective loss balancing methods can be incorporated into PhaVIP to overcome the imbalance problem. Second, although some variants of CGR incorporate polarity, charge, and molecular weight information for training (<xref rid="btad229-B12" ref-type="bibr">Dick and Green 2020</xref>), our results show that they have nearly the same results (performance difference <inline-formula id="IE23"><mml:math id="IM23" display="inline" overflow="scroll"><mml:mo>&lt;</mml:mo></mml:math></inline-formula>1.5%) as the original 20-flake CGRs. We will investigate whether there are other suitable features that our framework can utilize to improve performance. Third, we will explore whether we can employ the few-shot learning-based method to learn features from the classes with few labels. This can be used to provide more detailed annotations for further analyzing phages.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>btad229_Supplementary_Data</label>
      <media xlink:href="btad229_supplementary_data.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <sec>
    <title>Supplementary data</title>
    <p><xref rid="sup1" ref-type="supplementary-material">Supplementary data</xref> is available at <italic toggle="yes">Bioinformatics</italic> online.</p>
  </sec>
  <sec sec-type="COI-statement">
    <title>Conflict of interest</title>
    <p>The authors declare that they have no conflict of interest.</p>
  </sec>
  <sec>
    <title>Funding</title>
    <p>This work was supported by City University of Hong Kong [Project 9678241, 9667256, 7005453]; and the Hong Kong Innovation and Technology Commission (InnoHK Project CIMDA).</p>
  </sec>
  <sec sec-type="data-availability">
    <title>Data availability</title>
    <p>All data and codes used for this study are available online via: <ext-link xlink:href="https://phage.ee.cityu.edu.hk/phavip/download" ext-link-type="uri">https://phage.ee.cityu.edu.hk/phavip/download</ext-link>.</p>
  </sec>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btad229-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Aksyuk</surname><given-names>AA</given-names></string-name>, <string-name><surname>Rossmann</surname><given-names>MG.</given-names></string-name></person-group><article-title>Bacteriophage assembly</article-title>. <source>Viruses</source><year>2011</year>;<volume>3</volume>:<fpage>172</fpage>–<lpage>203</lpage>.<pub-id pub-id-type="pmid">21994726</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Arif</surname><given-names>M</given-names></string-name>, <string-name><surname>Ali</surname><given-names>F</given-names></string-name>, <string-name><surname>Ahmad</surname><given-names>S</given-names></string-name></person-group><etal>et al</etal><article-title>Pred-BVP-Unb: fast prediction of bacteriophage virion proteins using un-biased multi-perspective properties with recursive feature elimination</article-title>. <source>Genomics</source><year>2020</year>;<volume>112</volume>:<fpage>1565</fpage>–<lpage>74</lpage>.<pub-id pub-id-type="pmid">31526842</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Azimi</surname><given-names>T</given-names></string-name>, <string-name><surname>Mosadegh</surname><given-names>M</given-names></string-name>, <string-name><surname>Nasiri</surname><given-names>MJ</given-names></string-name></person-group><etal>et al</etal><article-title>Phage therapy as a renewed therapeutic approach to mycobacterial infections: a comprehensive review</article-title>. <source>Infect Drug Resist</source><year>2019</year>;<volume>12</volume>:<fpage>2943</fpage>–<lpage>59</lpage>.<pub-id pub-id-type="pmid">31571947</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B4">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Baevski</surname><given-names>A</given-names></string-name>, <string-name><surname>Auli</surname><given-names>M.</given-names></string-name></person-group> Adaptive input representations for neural language modeling. In: <italic toggle="yes">International Conference on Learning Representations</italic>. <year>2018</year>.</mixed-citation>
    </ref>
    <ref id="btad229-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Boeckaerts</surname><given-names>D</given-names></string-name>, <string-name><surname>Stock</surname><given-names>M</given-names></string-name>, <string-name><surname>Criel</surname><given-names>B</given-names></string-name></person-group><etal>et al</etal><article-title>Predicting bacteriophage hosts based on sequences of annotated receptor-binding proteins</article-title>. <source>Sci Rep</source><year>2021</year>;<volume>11</volume>:<fpage>1</fpage>–<lpage>14</lpage>.<pub-id pub-id-type="pmid">33414495</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Brüssow</surname><given-names>H</given-names></string-name>, <string-name><surname>Desiere</surname><given-names>F.</given-names></string-name></person-group><article-title>Comparative phage genomics and the evolution of siphoviridae: insights from dairy phages</article-title>. <source>Mol Microbiol</source><year>2001</year>;<volume>39</volume>:<fpage>213</fpage>–<lpage>22</lpage>.<pub-id pub-id-type="pmid">11136444</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cantu</surname><given-names>VA</given-names></string-name>, <string-name><surname>Salamon</surname><given-names>P</given-names></string-name>, <string-name><surname>Seguritan</surname><given-names>V</given-names></string-name></person-group><etal>et al</etal><article-title>PhANNs, a fast and accurate tool and web server to classify phage structural proteins</article-title>. <source>PLoS Comput Biol</source><year>2020</year>;<volume>16</volume>:<fpage>e1007845</fpage>.<pub-id pub-id-type="pmid">33137102</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Charoenkwan</surname><given-names>P</given-names></string-name>, <string-name><surname>Kanthawong</surname><given-names>S</given-names></string-name>, <string-name><surname>Schaduangrat</surname><given-names>N</given-names></string-name></person-group><etal>et al</etal><article-title>PVPred-SCM: improved prediction and analysis of phage virion proteins using a scoring card method</article-title>. <source>Cells</source><year>2020a</year>;<volume>9</volume>:<fpage>353</fpage>.<pub-id pub-id-type="pmid">32028709</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Charoenkwan</surname><given-names>P</given-names></string-name>, <string-name><surname>Nantasenamat</surname><given-names>C</given-names></string-name>, <string-name><surname>Hasan</surname><given-names>M</given-names></string-name></person-group><etal>et al</etal><article-title>Meta-iPVP: a sequence-based meta-predictor for improving the prediction of phage virion proteins using effective feature representation</article-title>. <source>J Comput Aided Mol Des</source><year>2020b</year>;<volume>34</volume>:<fpage>1105</fpage>–<lpage>16</lpage>.<pub-id pub-id-type="pmid">32557165</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cobián Güemes</surname><given-names>AG</given-names></string-name>, <string-name><surname>Youle</surname><given-names>M</given-names></string-name>, <string-name><surname>Cantú</surname><given-names>VA</given-names></string-name></person-group><etal>et al</etal><article-title>Viruses as winners in the game of life</article-title>. <source>Annu Rev Virol</source><year>2016</year>;<volume>3</volume>:<fpage>197</fpage>–<lpage>214</lpage>.<pub-id pub-id-type="pmid">27741409</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B11">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Devlin</surname><given-names>J</given-names></string-name>, <string-name><surname>Chang</surname><given-names>M-W</given-names></string-name>, <string-name><surname>Lee</surname><given-names>K</given-names></string-name></person-group><etal>et al</etal> Bert: pre-training of deep bidirectional transformers for language understanding. <italic toggle="yes">arXiv preprint arXiv:1810.04805</italic>. <year>2018</year>.</mixed-citation>
    </ref>
    <ref id="btad229-B12">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Dick</surname><given-names>K</given-names></string-name>, <string-name><surname>Green</surname><given-names>JR.</given-names></string-name></person-group> Chaos game representations &amp; deep learning for proteome-wide protein prediction. In: <italic toggle="yes">2020 IEEE 20th International Conference on Bioinformatics and Bioengineering (BIBE)</italic>, pp. <fpage>115</fpage>–<lpage>21</lpage>. <publisher-name>IEEE</publisher-name>, <year>2020</year>.</mixed-citation>
    </ref>
    <ref id="btad229-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ding</surname><given-names>H</given-names></string-name>, <string-name><surname>Feng</surname><given-names>P-M</given-names></string-name>, <string-name><surname>Chen</surname><given-names>W</given-names></string-name></person-group><etal>et al</etal><article-title>Identification of bacteriophage virion proteins by the ANOVA feature selection and analysis</article-title>. <source>Mol Biosyst</source><year>2014</year>;<volume>10</volume>:<fpage>2229</fpage>–<lpage>35</lpage>.<pub-id pub-id-type="pmid">24931825</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B14">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Dosovitskiy</surname><given-names>A</given-names></string-name>, <string-name><surname>Beyer</surname><given-names>L</given-names></string-name>, <string-name><surname>Kolesnikov</surname><given-names>A</given-names></string-name></person-group><etal>et al</etal> An image is worth 16×16 words: transformers for image recognition at scale. In: <italic toggle="yes">International Conference on Learning Representations</italic>. <year>2020</year>.</mixed-citation>
    </ref>
    <ref id="btad229-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Eloe-Fadrosh</surname><given-names>EA.</given-names></string-name></person-group><article-title>Towards a genome-based virus taxonomy</article-title>. <source>Nat Microbiol</source><year>2019</year>;<volume>4</volume>:<fpage>1249</fpage>–<lpage>50</lpage>.<pub-id pub-id-type="pmid">31337890</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Emerson</surname><given-names>JB</given-names></string-name>, <string-name><surname>Thomas</surname><given-names>BC</given-names></string-name>, <string-name><surname>Andrade</surname><given-names>K</given-names></string-name></person-group><etal>et al</etal><article-title>Dynamic viral populations in hypersaline systems as revealed by metagenomic assembly</article-title>. <source>Appl Environ Microbiol</source><year>2012</year>;<volume>78</volume>:<fpage>6309</fpage>–<lpage>20</lpage>.<pub-id pub-id-type="pmid">22773627</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Fang</surname><given-names>Z</given-names></string-name>, <string-name><surname>Feng</surname><given-names>T</given-names></string-name>, <string-name><surname>Zhou</surname><given-names>H</given-names></string-name></person-group><etal>et al</etal><article-title>DeePVP: identification and classification of phage virion proteins using deep learning</article-title>. <source>Gigascience</source><year>2022</year>;<volume>11</volume>:<fpage>giac076</fpage>.<pub-id pub-id-type="pmid">35950840</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Fang</surname><given-names>Z</given-names></string-name>, <string-name><surname>Zhou</surname><given-names>H.</given-names></string-name></person-group><article-title>VirionFinder: identification of complete and partial prokaryote virus virion protein from virome data using the sequence and biochemical properties of amino acids</article-title>. <source>Front Microbiol</source><year>2021</year>;<volume>12</volume>:<fpage>615711</fpage>.<pub-id pub-id-type="pmid">33613485</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Feng</surname><given-names>P-M</given-names></string-name>, <string-name><surname>Ding</surname><given-names>H</given-names></string-name>, <string-name><surname>Chen</surname><given-names>W</given-names></string-name></person-group><etal>et al</etal><article-title>Naive Bayes classifier with feature selection to identify phage virion proteins</article-title>. <source>Comput Math Methods Med</source><year>2013</year>;<volume>2013</volume>:<fpage>530696</fpage>.<pub-id pub-id-type="pmid">23762187</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Fernández</surname><given-names>L</given-names></string-name>, <string-name><surname>Rodríguez</surname><given-names>A</given-names></string-name>, <string-name><surname>García</surname><given-names>P.</given-names></string-name></person-group><article-title>Phage or foe: an insight into the impact of viral predation on microbial communities</article-title>. <source>ISME J</source><year>2018</year>;<volume>12</volume>:<fpage>1171</fpage>–<lpage>9</lpage>.<pub-id pub-id-type="pmid">29371652</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Fiser</surname><given-names>A</given-names></string-name>, <string-name><surname>Tusnady</surname><given-names>GE</given-names></string-name>, <string-name><surname>Simon</surname><given-names>I.</given-names></string-name></person-group><article-title>Chaos game representation of protein structures</article-title>. <source>J Mol Graph</source><year>1994</year>;<volume>12</volume>:<fpage>302</fpage>–<lpage>4</lpage>.<pub-id pub-id-type="pmid">7696222</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B22">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Ghiasi</surname><given-names>A</given-names></string-name>, <string-name><surname>Kazemi</surname><given-names>H</given-names></string-name>, <string-name><surname>Borgnia</surname><given-names>E</given-names></string-name></person-group><etal>et al</etal> What do vision transformers learn? A visual exploration. <italic toggle="yes">arXiv preprint arXiv:2212.06727</italic>. <year>2022</year>.</mixed-citation>
    </ref>
    <ref id="btad229-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Han</surname><given-names>H</given-names></string-name>, <string-name><surname>Zhu</surname><given-names>W</given-names></string-name>, <string-name><surname>Ding</surname><given-names>C</given-names></string-name></person-group><etal>et al</etal><article-title>iPVP-MCV: a multi-classifier voting model for the accurate identification of phage virion proteins</article-title>. <source>Symmetry</source><year>2021</year>;<volume>13</volume>:<fpage>1506</fpage>.</mixed-citation>
    </ref>
    <ref id="btad229-B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hoang</surname><given-names>T</given-names></string-name>, <string-name><surname>Yin</surname><given-names>C</given-names></string-name>, <string-name><surname>Yau</surname><given-names>SS-T.</given-names></string-name></person-group><article-title>Numerical encoding of DNA sequences by chaos game representation with application in similarity comparison</article-title>. <source>Genomics</source><year>2016</year>;<volume>108</volume>:<fpage>134</fpage>–<lpage>42</lpage>.<pub-id pub-id-type="pmid">27538895</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hockenberry</surname><given-names>AJ</given-names></string-name>, <string-name><surname>Wilke</surname><given-names>CO.</given-names></string-name></person-group><article-title>BACPHLIP: predicting bacteriophage lifestyle from conserved protein domains</article-title>. <source>PeerJ</source><year>2021</year>;<volume>9</volume>:<fpage>e11396</fpage>.<pub-id pub-id-type="pmid">33996289</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B26">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Howard-Varona</surname><given-names>C</given-names></string-name>, <string-name><surname>Hargreaves</surname><given-names>KR</given-names></string-name>, <string-name><surname>Abedon</surname><given-names>ST</given-names></string-name></person-group><etal>et al</etal><article-title>Lysogeny in nature: mechanisms, impact and ecology of temperate phages</article-title>. <source>ISME J</source><year>2017</year>;<volume>11</volume>:<fpage>1511</fpage>–<lpage>20</lpage>.<pub-id pub-id-type="pmid">28291233</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B27">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hyatt</surname><given-names>D</given-names></string-name>, <string-name><surname>Chen</surname><given-names>G-L</given-names></string-name>, <string-name><surname>LoCascio</surname><given-names>PF</given-names></string-name></person-group><etal>et al</etal><article-title>Prodigal: prokaryotic gene recognition and translation initiation site identification</article-title>. <source>BMC Bioinformatics</source><year>2010</year>;<volume>11</volume>:<fpage>1</fpage>–<lpage>11</lpage>.<pub-id pub-id-type="pmid">20043860</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B28">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Jeffrey</surname><given-names>HJ.</given-names></string-name></person-group><article-title>Chaos game representation of gene structure</article-title>. <source>Nucleic Acids Res</source><year>1990</year>;<volume>18</volume>:<fpage>2163</fpage>–<lpage>70</lpage>.<pub-id pub-id-type="pmid">2336393</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B29">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kabir</surname><given-names>M</given-names></string-name>, <string-name><surname>Nantasenamat</surname><given-names>C</given-names></string-name>, <string-name><surname>Kanthawong</surname><given-names>S</given-names></string-name></person-group><etal>et al</etal><article-title>Large-scale comparative review and assessment of computational methods for phage virion proteins identification</article-title>. <source>Excli J</source><year>2022</year>;<volume>21</volume>:<fpage>11</fpage>–<lpage>29</lpage>.<pub-id pub-id-type="pmid">35145365</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B30">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lee</surname><given-names>S-E</given-names></string-name>, <string-name><surname>Lee</surname><given-names>D-Y</given-names></string-name>, <string-name><surname>Lee</surname><given-names>W-G</given-names></string-name></person-group><etal>et al</etal><article-title>Osong public health and research perspectives</article-title>. <source>Osong Public Health Res Perspect</source><year>2019</year>;<volume>10</volume>:<fpage>295</fpage>–<lpage>306</lpage>.<pub-id pub-id-type="pmid">31673491</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B31">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Li</surname><given-names>W</given-names></string-name>, <string-name><surname>Godzik</surname><given-names>A.</given-names></string-name></person-group><article-title>Cd-hit: a fast program for clustering and comparing large sets of protein or nucleotide sequences</article-title>. <source>Bioinformatics</source><year>2006</year>;<volume>22</volume>:<fpage>1658</fpage>–<lpage>9</lpage>.<pub-id pub-id-type="pmid">16731699</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B32">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Löchel</surname><given-names>HF</given-names></string-name>, <string-name><surname>Eger</surname><given-names>D</given-names></string-name>, <string-name><surname>Sperlea</surname><given-names>T</given-names></string-name></person-group><etal>et al</etal><article-title>Deep learning on chaos game representation for proteins</article-title>. <source>Bioinformatics</source><year>2020</year>;<volume>36</volume>:<fpage>272</fpage>–<lpage>9</lpage>.<pub-id pub-id-type="pmid">31225868</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B33">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Löchel</surname><given-names>HF</given-names></string-name>, <string-name><surname>Heider</surname><given-names>D.</given-names></string-name></person-group><article-title>Chaos game representation and its applications in bioinformatics</article-title>. <source>Comput Struct Biotechnol J</source><year>2021</year>;<volume>19</volume>:<fpage>6263</fpage>–<lpage>71</lpage>.<pub-id pub-id-type="pmid">34900136</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B34">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lyon</surname><given-names>J.</given-names></string-name></person-group><article-title>Phage therapy’s role in combating antibiotic-resistant pathogens</article-title>. <source>JAMA</source><year>2017</year>;<volume>318</volume>:<fpage>1746</fpage>–<lpage>8</lpage>.<pub-id pub-id-type="pmid">29071339</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B35">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Manavalan</surname><given-names>B</given-names></string-name>, <string-name><surname>Shin</surname><given-names>TH</given-names></string-name>, <string-name><surname>Lee</surname><given-names>G.</given-names></string-name></person-group><article-title>PVP-SVM: sequence-based prediction of phage virion proteins using a support vector machine</article-title>. <source>Front Microbiol</source><year>2018</year>;<volume>9</volume>:<fpage>476</fpage>.<pub-id pub-id-type="pmid">29616000</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B36">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Meng</surname><given-names>C</given-names></string-name>, <string-name><surname>Zhang</surname><given-names>J</given-names></string-name>, <string-name><surname>Ye</surname><given-names>X</given-names></string-name></person-group><etal>et al</etal><article-title>Review and comparative analysis of machine learning-based phage virion protein identification methods</article-title>. <source>Biochim Biophys Acta Proteins Proteom</source><year>2020</year>;<volume>1868</volume>:<fpage>140406</fpage>.<pub-id pub-id-type="pmid">32135196</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B37">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Menouni</surname><given-names>R</given-names></string-name>, <string-name><surname>Hutinet</surname><given-names>G</given-names></string-name>, <string-name><surname>Petit</surname><given-names>M-A</given-names></string-name></person-group><etal>et al</etal><article-title>Bacterial genome remodeling through bacteriophage recombination</article-title>. <source>FEMS Microbiol Lett</source><year>2015</year>;<volume>362</volume>:<fpage>1</fpage>–<lpage>10</lpage>.</mixed-citation>
    </ref>
    <ref id="btad229-B38">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Nami</surname><given-names>Y</given-names></string-name>, <string-name><surname>Imeni</surname><given-names>N</given-names></string-name>, <string-name><surname>Panahi</surname><given-names>B.</given-names></string-name></person-group><article-title>Application of machine learning in bacteriophage research</article-title>. <source>BMC Microbiol</source><year>2021</year>;<volume>21</volume>:<fpage>1</fpage>–<lpage>8</lpage>.<pub-id pub-id-type="pmid">33386072</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B39">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Pan</surname><given-names>Y</given-names></string-name>, <string-name><surname>Gao</surname><given-names>H</given-names></string-name>, <string-name><surname>Lin</surname><given-names>H</given-names></string-name></person-group><etal>et al</etal><article-title>Identification of bacteriophage virion proteins using multinomial naive Bayes with g-gap feature tree</article-title>. <source>IJMS</source><year>2018</year>;<volume>19</volume>:<fpage>1779</fpage>.<pub-id pub-id-type="pmid">29914091</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B40">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Petti</surname><given-names>S</given-names></string-name>, <string-name><surname>Eddy</surname><given-names>SR.</given-names></string-name></person-group><article-title>Constructing benchmark test sets for biological sequence analysis using independent set algorithms</article-title>. <source>PLoS Comput Biol</source><year>2022</year>;<volume>18</volume>:<fpage>e1009492</fpage>.<pub-id pub-id-type="pmid">35255082</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B41">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Raghu</surname><given-names>M</given-names></string-name>, <string-name><surname>Unterthiner</surname><given-names>T</given-names></string-name>, <string-name><surname>Kornblith</surname><given-names>S</given-names></string-name></person-group><etal>et al</etal><article-title>Do vision transformers see like convolutional neural networks?</article-title><source>Adv Neural Inf Process Syst</source><year>2021</year>;<volume>34</volume>:<fpage>12116</fpage>–<lpage>28</lpage>.</mixed-citation>
    </ref>
    <ref id="btad229-B42">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ren</surname><given-names>Y</given-names></string-name>, <string-name><surname>Chakraborty</surname><given-names>T</given-names></string-name>, <string-name><surname>Doijad</surname><given-names>S</given-names></string-name></person-group><etal>et al</etal><article-title>Prediction of antimicrobial resistance based on whole-genome sequencing and machine learning</article-title>. <source>Bioinformatics</source><year>2022</year>;<volume>38</volume>:<fpage>325</fpage>–<lpage>34</lpage>.<pub-id pub-id-type="pmid">34613360</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B43">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Roux</surname><given-names>S</given-names></string-name>, <string-name><surname>Enault</surname><given-names>F</given-names></string-name>, <string-name><surname>Hurwitz</surname><given-names>BL</given-names></string-name></person-group><etal>et al</etal><article-title>VirSorter: mining viral signal from microbial genomic data</article-title>. <source>PeerJ</source><year>2015</year>;<volume>3</volume>:<fpage>e985</fpage>.<pub-id pub-id-type="pmid">26038737</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B44">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ru</surname><given-names>X</given-names></string-name>, <string-name><surname>Li</surname><given-names>L</given-names></string-name>, <string-name><surname>Wang</surname><given-names>C.</given-names></string-name></person-group><article-title>Identification of phage viral proteins with hybrid sequence features</article-title>. <source>Front Microbiol</source><year>2019</year>;<volume>10</volume>:<fpage>507</fpage>.<pub-id pub-id-type="pmid">30972038</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B45">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Seguritan</surname><given-names>V</given-names></string-name>, <string-name><surname>Alves</surname><given-names>N</given-names><suffix>Jr</suffix></string-name>, <string-name><surname>Arnoult</surname><given-names>M</given-names></string-name></person-group><etal>et al</etal><article-title>Artificial neural networks trained to detect viral and phage structural proteins</article-title>. <source>PLoS Comput Biol</source><year>2012</year>;8(8):e1002657.</mixed-citation>
    </ref>
    <ref id="btad229-B46">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Shang</surname><given-names>J</given-names></string-name>, <string-name><surname>Sun</surname><given-names>Y.</given-names></string-name></person-group><article-title>Predicting the hosts of prokaryotic viruses using GCN-based semi-supervised learning</article-title>. <source>BMC Biol</source><year>2021</year>;<volume>19</volume>:<fpage>1</fpage>–<lpage>15</lpage>.<pub-id pub-id-type="pmid">33407428</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B47">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Shang</surname><given-names>J</given-names></string-name>, <string-name><surname>Sun</surname><given-names>Y.</given-names></string-name></person-group><article-title>CHERRY: a computational metHod for accuratE pRediction of virus–pRokarYotic interactions using a graph encoder–decoder model</article-title>. <source>Brief Bioinform</source><year>2022</year>;<volume>23</volume>:<fpage>bbac182</fpage>.<pub-id pub-id-type="pmid">35595715</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B48">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sinha</surname><given-names>A</given-names></string-name>, <string-name><surname>Eniyan</surname><given-names>K</given-names></string-name>, <string-name><surname>Manohar</surname><given-names>P</given-names></string-name></person-group><etal>et al</etal><article-title>Characterization and genome analysis of B1 sub-cluster mycobacteriophage PDRPxv</article-title>. <source>Virus Res</source><year>2020</year>;<volume>279</volume>:<fpage>197884</fpage>.<pub-id pub-id-type="pmid">31981773</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B49">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Steinbacher</surname><given-names>S</given-names></string-name>, <string-name><surname>Baxa</surname><given-names>U</given-names></string-name>, <string-name><surname>Miller</surname><given-names>S</given-names></string-name></person-group><etal>et al</etal><article-title>Crystal structure of phage P22 tailspike protein complexed with Salmonella sp. O-antigen receptors</article-title>. <source>Proc Natl Acad Sci USA</source><year>1996</year>;<volume>93</volume>:<fpage>10584</fpage>–<lpage>8</lpage>.<pub-id pub-id-type="pmid">8855221</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B50">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Stummeyer</surname><given-names>K</given-names></string-name>, <string-name><surname>Dickmanns</surname><given-names>A</given-names></string-name>, <string-name><surname>Mühlenhoff</surname><given-names>M</given-names></string-name></person-group><etal>et al</etal><article-title>Crystal structure of the polysialic acid–degrading endosialidase of bacteriophage K1F</article-title>. <source>Nat Struct Mol Biol</source><year>2005</year>;<volume>12</volume>:<fpage>90</fpage>–<lpage>6</lpage>.<pub-id pub-id-type="pmid">15608653</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B51">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Tan</surname><given-names>J-X</given-names></string-name>, <string-name><surname>Dao</surname><given-names>F-Y</given-names></string-name>, <string-name><surname>Lv</surname><given-names>H</given-names></string-name></person-group><etal>et al</etal><article-title>Identifying phage virion proteins by using two-step feature selection methods</article-title>. <source>Molecules</source><year>2018</year>;<volume>23</volume>:<fpage>2000</fpage>.<pub-id pub-id-type="pmid">30103458</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B52">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Vaswani</surname><given-names>A</given-names></string-name>, <string-name><surname>Shazeer</surname><given-names>N</given-names></string-name>, <string-name><surname>Parmar</surname><given-names>N</given-names></string-name></person-group><etal>et al</etal> Attention is all you need. In: <italic toggle="yes">Advances in Neural Information Processing Systems</italic>, pp. <fpage>5998</fpage>–<lpage>6008</lpage>. <year>2017</year>.</mixed-citation>
    </ref>
    <ref id="btad229-B53">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wang</surname><given-names>L-F</given-names></string-name>, <string-name><surname>Yu</surname><given-names>M.</given-names></string-name></person-group><article-title>Epitope identification and discovery using phage display libraries: applications in vaccine development and diagnostics</article-title>. <source>Curr Drug Targets</source><year>2004</year>;<volume>5</volume>:<fpage>1</fpage>–<lpage>15</lpage>.<pub-id pub-id-type="pmid">14738215</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B54">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Wang</surname><given-names>Q</given-names></string-name>, <string-name><surname>Li</surname><given-names>B</given-names></string-name>, <string-name><surname>Xiao</surname><given-names>T</given-names></string-name></person-group><etal>et al</etal> Learning deep transformer models for machine translation. In: <italic toggle="yes">Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics</italic>, pp. <fpage>1810</fpage>–<lpage>22</lpage>. <year>2019</year>.</mixed-citation>
    </ref>
    <ref id="btad229-B55">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zhang</surname><given-names>L</given-names></string-name>, <string-name><surname>Zhang</surname><given-names>C</given-names></string-name>, <string-name><surname>Gao</surname><given-names>R</given-names></string-name></person-group><etal>et al</etal><article-title>An ensemble method to distinguish bacteriophage virion from non-virion proteins based on protein sequence characteristics</article-title>. <source>Int J Mol Sci</source><year>2015</year>;<volume>16</volume>:<fpage>21734</fpage>–<lpage>58</lpage>.<pub-id pub-id-type="pmid">26370987</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B56">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zhu</surname><given-names>Y</given-names></string-name>, <string-name><surname>Shang</surname><given-names>J</given-names></string-name>, <string-name><surname>Peng</surname><given-names>C</given-names></string-name></person-group><etal>et al</etal><article-title>Phage family classification under Caudoviricetes: a review of current tools using the latest ICTV classification framework</article-title>. <source>Front Microbiol</source><year>2022</year>;<volume>13</volume>:<fpage>1032186</fpage>.<pub-id pub-id-type="pmid">36590402</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10311294</article-id>
    <article-id pub-id-type="pmid">37387136</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btad229</article-id>
    <article-id pub-id-type="publisher-id">btad229</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Bioinformatics of Microbes and Microbiomes</subject>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>PhaVIP: Phage VIrion Protein classification based on chaos game representation and Vision Transformer</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-5974-4985</contrib-id>
        <name>
          <surname>Shang</surname>
          <given-names>Jiayu</given-names>
        </name>
        <aff><institution>Department of Electrical Engineering, City University of Hong Kong</institution>, Hong Kong (SAR), <country country="CN">China</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Peng</surname>
          <given-names>Cheng</given-names>
        </name>
        <aff><institution>Department of Electrical Engineering, City University of Hong Kong</institution>, Hong Kong (SAR), <country country="CN">China</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Tang</surname>
          <given-names>Xubo</given-names>
        </name>
        <aff><institution>Department of Electrical Engineering, City University of Hong Kong</institution>, Hong Kong (SAR), <country country="CN">China</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0003-1373-8023</contrib-id>
        <name>
          <surname>Sun</surname>
          <given-names>Yanni</given-names>
        </name>
        <aff><institution>Department of Electrical Engineering, City University of Hong Kong</institution>, Hong Kong (SAR), <country country="CN">China</country></aff>
        <xref rid="btad229-cor1" ref-type="corresp"/>
        <!--yannisun@cityu.edu.hk-->
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="btad229-cor1">Corresponding author. Department of Electrical Engineering, Office G6411, YEUNG, City University of Hong Kong, Tat Chee Avenue, Kowloon, Hong Kong SAR, China. E-mail: <email>yannisun@cityu.edu.hk</email> (Y.S.)</corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <month>6</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2023-06-30">
      <day>30</day>
      <month>6</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>30</day>
      <month>6</month>
      <year>2023</year>
    </pub-date>
    <volume>39</volume>
    <issue>Suppl 1</issue>
    <issue-title>ISMB/ECCB 2023 Proceedings</issue-title>
    <fpage>i30</fpage>
    <lpage>i39</lpage>
    <permissions>
      <copyright-statement>© The Author(s) 2023. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2023</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btad229.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>As viruses that mainly infect bacteria, phages are key players across a wide range of ecosystems. Analyzing phage proteins is indispensable for understanding phages’ functions and roles in microbiomes. High-throughput sequencing enables us to obtain phages in different microbiomes with low cost. However, compared to the fast accumulation of newly identified phages, phage protein classification remains difficult. In particular, a fundamental need is to annotate virion proteins, the structural proteins, such as major tail, baseplate, etc. Although there are experimental methods for virion protein identification, they are too expensive or time-consuming, leaving a large number of proteins unclassified. Thus, there is a great demand to develop a computational method for fast and accurate phage virion protein (PVP) classification.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>In this work, we adapted the state-of-the-art image classification model, Vision Transformer, to conduct virion protein classification. By encoding protein sequences into unique images using chaos game representation, we can leverage Vision Transformer to learn both local and global features from sequence “images”. Our method, PhaVIP, has two main functions: classifying PVP and non-PVP sequences and annotating the types of PVP, such as capsid and tail. We tested PhaVIP on several datasets with increasing difficulty and benchmarked it against alternative tools. The experimental results show that PhaVIP has superior performance. After validating the performance of PhaVIP, we investigated two applications that can use the output of PhaVIP: phage taxonomy classification and phage host prediction. The results showed the benefit of using classified proteins over all proteins.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p>The web server of PhaVIP is available via: <ext-link xlink:href="https://phage.ee.cityu.edu.hk/phavip" ext-link-type="uri">https://phage.ee.cityu.edu.hk/phavip</ext-link>. The source code of PhaVIP is available via: <ext-link xlink:href="https://github.com/KennthShang/PhaVIP" ext-link-type="uri">https://github.com/KennthShang/PhaVIP</ext-link>.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>City University of Hong Kong</institution>
            <institution-id institution-id-type="DOI">10.13039/100007567</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>9678241</award-id>
        <award-id>9667256</award-id>
        <award-id>7005453</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Hong Kong Innovation and Technology Commission</institution>
          </institution-wrap>
        </funding-source>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="10"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Bacteriophages, or phages for short, are viruses that can infect bacteria. They are the most widely distributed and abundant biological entities in the biosphere (<xref rid="btad229-B10" ref-type="bibr">Cobián Güemes et al. 2016</xref>), with an estimated population of more than <inline-formula id="IE1"><mml:math id="IM1" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mn>10</mml:mn></mml:mrow></mml:mrow><mml:mrow><mml:mn>31</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> particles (<xref rid="btad229-B34" ref-type="bibr">Lyon 2017</xref>). Phages play an important role in modulating microbial system dynamics by lysing bacteria and mediating the horizontal transfer of genetic material (<xref rid="btad229-B20" ref-type="bibr">Fernández et al. 2018</xref>). In addition, there are accumulating studies showing that phages have an important impact on multiple applications, such as the food industry (<xref rid="btad229-B6" ref-type="bibr">Brüssow and Desiere 2001</xref>), disease diagnostics (<xref rid="btad229-B53" ref-type="bibr">Wang and Yu 2004</xref>), engineering bacterial genomes (<xref rid="btad229-B37" ref-type="bibr">Menouni et al. 2015</xref>), and phage therapy (<xref rid="btad229-B3" ref-type="bibr">Azimi et al. 2019</xref>).</p>
    <p>A fundamental step to promote phages’ applications in these fields is phage genome annotation. Phages’ proteins are highly diverse, and their current annotations are far from complete. For example, only 33% of proteins in the RefSeq phage protein database have annotations. The annotated phage proteins can be roughly divided into two groups: virion and non-virion proteins. Phage virion proteins (PVPs) are phage structural proteins that make up phage outer protein shells (<xref rid="btad229-B29" ref-type="bibr">Kabir et al. 2022</xref>). They were regarded as one major evidence in phage taxonomy classification by the International Committee on Taxonomy of Viruses (ICTV). During the infection, PVP binds to the host’s receptors, aiding the insertion of the phage’s genetic materials into the host cell. Identifying PVPs is a fundamental step to understanding their biological properties and mechanisms of host cell binding. Due to their ubiquity and functional importance, PVPs have been leveraged in multiple downstream applications. For example, PVPs can be used as marker genes in phage host prediction (<xref rid="btad229-B5" ref-type="bibr">Boeckaerts et al. 2021</xref>) and prophage identification within bacterial genomes (<xref rid="btad229-B43" ref-type="bibr">Roux et al. 2015</xref>). Although PVPs have become commonly used features in several phage analysis tasks, accumulating research on the non-PVPs show that we may underestimate their importance. For example, non-PVPs usually play key roles in phages’ lifecycles, including replication and packaging. Among non-PVPs, “integrase” and “excisionase” are two widely accepted marker genes for classifying the lifestyle of phages. Based on these marker genes, several phage lifestyle prediction methods were developed (<xref rid="btad229-B16" ref-type="bibr">Emerson et al. 2012</xref>; <xref rid="btad229-B25" ref-type="bibr">Hockenberry and Wilke 2021</xref>). In addition, some non-PVPs are important for the binding of phage tail fibers to host receptor proteins. For example, the endoglycosidase of <italic toggle="yes">Salmonella virus P22</italic> will hydrolyze lipopolysaccharide and destroy the O-specific chain for phage attachments (<xref rid="btad229-B49" ref-type="bibr">Steinbacher et al. 1996</xref>). What is more, understanding the non-PVPs can help utilize phages for engineering bacterial genomes (<xref rid="btad229-B37" ref-type="bibr">Menouni et al. 2015</xref>), regulating gene expression, and introducing novel functions to change cell physiology (<xref rid="btad229-B26" ref-type="bibr">Howard-Varona et al. 2017</xref>).</p>
    <p>Because PVPs and non-PVPs have different functions, distinguishing them can extend our knowledge about phage properties and functions. Although there are experimental methods for PVP annotation, such as protein arrays and mass spectrometry, they are usually time-consuming, labor-intensive, and costly. Thus, they cannot catch up with the speed of newly identified phages by high-throughput sequencing. For example, as reported in <xref rid="btad229-B48" ref-type="bibr">Sinha et al. (2020)</xref>, only 11% of proteins can be annotated using the mass spectrometry method. Thus, computational PVP classification is still the major choice for handling large-scale input data. The major challenge for computational PVP classification is the high diversity of proteins in phages. For example, most structural proteins encoded by tailed phages, except for portal proteins, cannot be identified through pair-wise sequence alignments. According to the latest RefSeq database downloaded before December 2022, 66% of proteins are marked as “hypothetical protein”, meaning that these proteins cannot be aligned to annotated proteins. Thus, fast and accurate computational methods to predict and classify diverged PVPs are urgently needed.</p>
    <sec>
      <title>1.1 Related work</title>
      <p>To overcome the challenge of high sequence diversity, machine-learning models are commonly used for classifying PVP and non-PVP. Most of these tools have been discussed and evaluated by several comprehensive reviews in the past 3 years (<xref rid="btad229-B36" ref-type="bibr">Meng et al. 2020</xref>; <xref rid="btad229-B38" ref-type="bibr">Nami et al. 2021</xref>; <xref rid="btad229-B29" ref-type="bibr">Kabir et al. 2022</xref>). <xref rid="btad229-T1" ref-type="table">Table 1</xref> summarizes these tools together with their employed feature encoding and machine-learning algorithms.</p>
      <table-wrap position="float" id="btad229-T1">
        <label>Table 1.</label>
        <caption>
          <p>Summary of the existing PVP classification tools.</p>
        </caption>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th rowspan="1" colspan="1">Group</th>
              <th rowspan="1" colspan="1">Tools</th>
              <th rowspan="1" colspan="1">Encoding method</th>
              <th rowspan="1" colspan="1">Model</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">Traditional machine-learning</td>
              <td rowspan="1" colspan="1">PVPred-SCM (<xref rid="btad229-B9" ref-type="bibr">Charoenkwan et al. 2020a</xref>)</td>
              <td rowspan="1" colspan="1"> <italic toggle="yes">K</italic>-mer frequency</td>
              <td rowspan="1" colspan="1">SCM</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">Pred-BVP-Unb (<xref rid="btad229-B2" ref-type="bibr">Arif et al. 2020</xref>)</td>
              <td rowspan="1" colspan="1">Physicochemical properties</td>
              <td rowspan="1" colspan="1">SVM</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">(<xref rid="btad229-B44" ref-type="bibr">Ru et al. 2019</xref>)</td>
              <td rowspan="1" colspan="1">Skip-gram</td>
              <td rowspan="1" colspan="1">RF</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">(<xref rid="btad229-B51" ref-type="bibr">Tan et al. 2018</xref>)</td>
              <td rowspan="1" colspan="1"><italic toggle="yes">K</italic>-mer frequency (g-gap)</td>
              <td rowspan="1" colspan="1">SVM</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">PhagePred (<xref rid="btad229-B39" ref-type="bibr">Pan et al. 2018</xref>)</td>
              <td rowspan="1" colspan="1"><italic toggle="yes">K</italic>-mer frequency (g-gap)</td>
              <td rowspan="1" colspan="1">NB</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">PVP-SVM (<xref rid="btad229-B35" ref-type="bibr">Manavalan et al. 2018</xref>)</td>
              <td rowspan="1" colspan="1"><italic toggle="yes">K</italic>-mer frequency, physicochemical properties</td>
              <td rowspan="1" colspan="1">SVM</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">PVPred (<xref rid="btad229-B13" ref-type="bibr">Ding et al. 2014</xref>)</td>
              <td rowspan="1" colspan="1"><italic toggle="yes">K</italic>-mer frequency (g-gap)</td>
              <td rowspan="1" colspan="1">SVM</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">(<xref rid="btad229-B19" ref-type="bibr">Feng et al. 2013</xref>)</td>
              <td rowspan="1" colspan="1"><italic toggle="yes">K</italic>-mer frequency</td>
              <td rowspan="1" colspan="1">NB</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Ensemble method</td>
              <td rowspan="1" colspan="1">iPVP-MCV (<xref rid="btad229-B23" ref-type="bibr">Han et al. 2021</xref>)</td>
              <td rowspan="1" colspan="1">Position-specific scoring matrix</td>
              <td rowspan="1" colspan="1">SVM-based ensemble model</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">Meta-iPVP (<xref rid="btad229-B8" ref-type="bibr">Charoenkwan et al. 2020b</xref>)</td>
              <td rowspan="1" colspan="1">Probabilistic martix</td>
              <td rowspan="1" colspan="1">SVM, RF, NB, ANN</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">(<xref rid="btad229-B55" ref-type="bibr">Zhang et al. 2015</xref>)</td>
              <td rowspan="1" colspan="1">Position-specific scoring matrix and physicochemical properties</td>
              <td rowspan="1" colspan="1">RF-based ensemble model</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Deep learning</td>
              <td rowspan="1" colspan="1">DeePVP (<xref rid="btad229-B18" ref-type="bibr">Fang et al. 2022</xref>)</td>
              <td rowspan="1" colspan="1">One-hot</td>
              <td rowspan="1" colspan="1">CNN</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">VirionFinder (<xref rid="btad229-B17" ref-type="bibr">Fang and Zhou 2021</xref>)</td>
              <td rowspan="1" colspan="1">One-hot and physicochemical properties</td>
              <td rowspan="1" colspan="1">CNN</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">PhANNs (<xref rid="btad229-B7" ref-type="bibr">Cantu et al. 2020</xref>)</td>
              <td rowspan="1" colspan="1"><italic toggle="yes">K</italic>-mer frequency</td>
              <td rowspan="1" colspan="1">ANN</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">iVIREONS (<xref rid="btad229-B45" ref-type="bibr">Seguritan et al. 2012</xref>)</td>
              <td rowspan="1" colspan="1">Single amino acid</td>
              <td rowspan="1" colspan="1">ANN</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      <p>As indicated in <xref rid="btad229-T1" ref-type="table">Table 1</xref>, four learning models (SVM, NB, RF, and SCM) are commonly used in traditional machine learning-based methods. Ensemble-based methods utilize multiple models or training sets. For example, Meta-iPVP (<xref rid="btad229-B8" ref-type="bibr">Charoenkwan et al. 2020b</xref>) utilizes a novel feature-representing scheme and four machine-learning algorithms to encode seven input features into a probabilistic matrix. Then, the generated probabilistic matrix is fed into the SVM model to classify PVPs. More recently, deep learning-based methods, such as VirionFinder (<xref rid="btad229-B17" ref-type="bibr">Fang and Zhou 2021</xref>) and DeePVP (<xref rid="btad229-B18" ref-type="bibr">Fang et al. 2022</xref>), have been proposed for structural protein identification. Both of them use convolutional neural networks (CNNs) as classifiers. The comparison between the existing tools showed that CNN is an effective method for extracting abstract features from biological sequences (<xref rid="btad229-B29" ref-type="bibr">Kabir et al. 2022</xref>).</p>
      <p>Although these tools have achieved promising performance, they still have a couple of limitations. First, except for PhANNs (<xref rid="btad229-B7" ref-type="bibr">Cantu et al. 2020</xref>) and DeePVP (<xref rid="btad229-B18" ref-type="bibr">Fang et al. 2022</xref>), all these tools are binary identifiers, which can only classify the input proteins as PVP or non-PVP. However, a more detailed multi-class classification of PVPs is also in demand to assign proteins to well-defined annotations (i.e. major tail, minor tail, and baseplate). But the best <italic toggle="yes">F</italic>1-score of PhANNs and DeePVP on multi-class classification can only reach nearly 0.7 on the benchmark dataset. Second, the reference protein sequences employed by different tools are mostly outdated. Only PhANNs and DeePVP provided scripts for re-training or re-constructing the models as reported in <xref rid="btad229-B29" ref-type="bibr">Kabir et al. (2022)</xref>. Lacking this function hinders many tools from achieving more generalized and robust predictions for newly discovered phages. Third, although one-hot encoding and <italic toggle="yes">k</italic>-mer frequency encoding are widely used in the PVP classification task, they both have disadvantages. For example, as indicated in <xref rid="btad229-B42" ref-type="bibr">Ren et al. (2022)</xref>, using one-hot encoding for protein sequences will return sparse matrices, leading to the curse of dimensionality problem in the machine-learning model. <italic toggle="yes">k</italic>-mer frequency encoding fails to maintain the original amino acids’ organization in the raw sequences.</p>
    </sec>
    <sec>
      <title>1.2 Overview</title>
      <p>In this work, we present a method named Phage VIrion Protein (PhaVIP) for phage protein annotation. It has two functions. First, it can classify a protein into either PVPs or non-PVPs (binary classification task). Second, it can assign a more detailed annotation for predicted PVPs, such as major capsid, major tail, and portal (multi-class classification task with seven types of PVPs). To construct a complete and comprehensive dataset, we downloaded the latest annotations of phage proteins from the RefSeq database (December 2022) to train and test PhaVIP. The pipeline of PhaVIP is shown in <xref rid="btad229-F1" ref-type="fig">Fig. 1</xref>. First, to address the shortages of the existing encoding methods, we employ chaos game representation (CGR) to encode proteins into images. Previous works show that using <italic toggle="yes">k</italic>-mer frequency helps distinguish proteins of different functions. However, existing models, such as CNN, are not optimized for learning the associations of <italic toggle="yes">k</italic>-mers and their frequencies. In our design, CGR can encode <italic toggle="yes">k</italic>-mer frequency into images, allowing us to leverage an image classification model, Vision Transformer (ViT) (<xref rid="btad229-B14" ref-type="bibr">Dosovitskiy et al. 2020</xref>; <xref rid="btad229-B41" ref-type="bibr">Raghu et al. 2021</xref>), from computer vision to capture and learn the patterns from CGR images. We leverage the self-attention mechanism in ViT to learn the importance of different sub-images and their associations for protein classification. In addition, because the length of the proteins varies from <inline-formula id="IE2"><mml:math id="IM2" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mn>10</mml:mn></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:math></inline-formula> to <inline-formula id="IE3"><mml:math id="IM3" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mn>10</mml:mn></mml:mrow></mml:mrow><mml:mn>3</mml:mn></mml:msup></mml:mrow></mml:math></inline-formula>, applying CGR allows encoding sequences of highly different lengths into images with the same resolution. Thus, we expect that this combination can lead to better results than existing deep learning models because of the success of the ViT in image classification. In the experiments, we tested PhaVIP on multiple datasets with increasing difficulty. The comprehensive comparison with the existing methods shows that PhaVIP renders better and more robust performance. In addition, we designed two case studies to show the application of PVPs and non-PVPs for downstream phage analysis. These case studies reveal that PhaVIP can provide useful features to improve the accuracy of phage taxonomy classification and host prediction.</p>
      <fig position="float" id="btad229-F1">
        <label>Figure 1.</label>
        <caption>
          <p>The pipelines of PhaVIP, which consists of three major stages: FCGR protein encoding, patch embedding, and Transformer modules. When taking a test/query protein as input, PhaVIP first classifies it into PVP and non-PVP. Only the predicted PVP will be classified into more detailed annotations. Dimension <italic toggle="yes">B</italic> represents the “batch size” of the input data, which means B proteins will be processed in parallel. Dimension <italic toggle="yes">H</italic> and <italic toggle="yes">W</italic> represent the height and weight of the FCGR images. Dimension <italic toggle="yes">M</italic> represents the size of the patches.</p>
        </caption>
        <graphic xlink:href="btad229f1" position="float"/>
      </fig>
    </sec>
  </sec>
  <sec>
    <title>2 Materials and methods</title>
    <p>To use machine-learning methods for classifying PVP and non-PVP, the input proteins need to be encoded into numerical values. Thus, a practical and informative sequence encoding method is crucial for classification. In this work, we applied CGR to encode protein sequences. CGR is a generalized Markov chain and allows one-to-one mapping between the image and the sequence (<xref rid="btad229-B32" ref-type="bibr">Löchel and Heider 2021</xref>). In addition, CGR has already shown promising results in encoding biological sequences, such as generating evolutionary trees (<xref rid="btad229-B24" ref-type="bibr">Hoang et al. 2016</xref>) and finding antimicrobial resistant gene (<xref rid="btad229-B42" ref-type="bibr">Ren et al. 2022</xref>).</p>
    <p>Because CGR can represent protein sequences using unique images, inspired by pattern recognition problems in computer vision (CV), we apply the ViT model to extract and learn features from the CGR image. The attention mechanism in ViT can reveal the representative regions in the image and learn the associations between different parts of the image (<xref rid="btad229-B22" ref-type="bibr">Ghiasi et al. 2022</xref>). Several large-scale benchmark datasets in CV have shown that ViT outperforms traditional models, such as CNN, on image classification. All these features prompt us to employ ViT for PVP classification.</p>
    <p>In the following sections, we will first introduce how CGR encodes protein sequences into unique images. Then, we will describe the ViT model optimized for the PVP classification task. Finally, we will introduce how we collect and generate the PVP datasets used in the experiments.</p>
    <sec>
      <title>2.1 CGR encoding</title>
      <p>The CGR was first developed to construct fractals from random inputs and later extended to encode DNA sequences (<xref rid="btad229-B28" ref-type="bibr">Jeffrey 1990</xref>). The inputs to the CGR are sequences, and the outputs are numerical matrices/images representing the sequences. The basic idea of CGR is to map each nucleotide or amino acid to a unique coordinate in a 2D space. A toy example is given in the right panel of <xref rid="btad229-F2" ref-type="fig">Fig. 2</xref>.</p>
      <fig position="float" id="btad229-F2">
        <label>Figure 2.</label>
        <caption>
          <p>Applying CGR to a toy sequence: CATG. Left: division of the CGR space in the iterative process [reproduced from <xref rid="btad229-B28" ref-type="bibr">Jeffrey (1990)</xref>]; right: the process of determining the four pixels for CATG using CGR.</p>
        </caption>
        <graphic xlink:href="btad229f2" position="float"/>
      </fig>
      <p>To encode the protein sequences into CGR images, we apply the <italic toggle="yes">n</italic>-flakes method (<xref rid="btad229-B21" ref-type="bibr">Fiser et al. 1994</xref>) and use frequency chaos game representation (FCGR) to produce images of the same resolution. The equations of the <italic toggle="yes">n</italic>-flakes method are given in <xref rid="E1" ref-type="disp-formula">Equation (1)</xref> (<xref rid="btad229-B21" ref-type="bibr">Fiser et al. 1994</xref>).
<italic toggle="yes">j</italic> is the vertices ranging from 0 to <italic toggle="yes">n</italic>, which is set to 20 for amino acids. Then, FCGR can be generated by counting the points of the CGR based on a pre-defined grid. Specifically, the algorithm will split the CGR image into <inline-formula id="IE4"><mml:math id="IM4" display="inline" overflow="scroll"><mml:mrow><mml:mi>N</mml:mi><mml:mo>×</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:math></inline-formula> regions. Then, the number of points in one region will be used as the region’s frequency to compress the CGR, leading to an FCGR matrix of dimension <inline-formula id="IE5"><mml:math id="IM5" display="inline" overflow="scroll"><mml:mrow><mml:mi>N</mml:mi><mml:mo>×</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:math></inline-formula> for all input sequences of different lengths. The authors of <xref rid="btad229-B32" ref-type="bibr">Löchel and Heider (2021)</xref> show that the value in the pre-defined grid can represent the frequency of <italic toggle="yes">k</italic>-mers. For example, the gird on the top-left corner of <xref rid="btad229-F2" ref-type="fig">Fig. 2</xref> (left) represents a 3-mer “AAA”. In this work, we employ the R package “Kaos” (<xref rid="btad229-B33" ref-type="bibr">Löchel et al. 2020</xref>) to encode protein sequences into FCGR images. Then, we set <inline-formula id="IE6"><mml:math id="IM6" display="inline" overflow="scroll"><mml:mrow><mml:mi>N</mml:mi><mml:mo>=</mml:mo><mml:mn>64</mml:mn></mml:mrow></mml:math></inline-formula> to generate <inline-formula id="IE7"><mml:math id="IM7" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow><mml:mrow><mml:mn>64</mml:mn><mml:mo>×</mml:mo><mml:mn>64</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> images as the representation of the protein sequences.</p>
      <disp-formula id="E1">
        <label>(1)</label>
        <mml:math id="M1" display="block" overflow="scroll">
          <mml:mrow>
            <mml:mrow>
              <mml:mo>{</mml:mo>
              <mml:mrow>
                <mml:mtable>
                  <mml:mtr>
                    <mml:mtd>
                      <mml:mrow>
                        <mml:msubsup>
                          <mml:mrow>
                            <mml:mi>V</mml:mi>
                          </mml:mrow>
                          <mml:mi>j</mml:mi>
                          <mml:mi>x</mml:mi>
                        </mml:msubsup>
                        <mml:mo>=</mml:mo>
                      </mml:mrow>
                    </mml:mtd>
                    <mml:mtd>
                      <mml:mrow>
                        <mml:mo> </mml:mo>
                        <mml:mtext>sin</mml:mtext>
                        <mml:mo stretchy="true">(</mml:mo>
                        <mml:mfrac>
                          <mml:mrow>
                            <mml:mn>2</mml:mn>
                            <mml:mo>π</mml:mo>
                            <mml:mi>j</mml:mi>
                          </mml:mrow>
                          <mml:mi>n</mml:mi>
                        </mml:mfrac>
                        <mml:mo stretchy="true">)</mml:mo>
                      </mml:mrow>
                    </mml:mtd>
                  </mml:mtr>
                  <mml:mtr>
                    <mml:mtd>
                      <mml:mrow>
                        <mml:msubsup>
                          <mml:mrow>
                            <mml:mi>V</mml:mi>
                          </mml:mrow>
                          <mml:mi>j</mml:mi>
                          <mml:mi>y</mml:mi>
                        </mml:msubsup>
                        <mml:mo>=</mml:mo>
                      </mml:mrow>
                    </mml:mtd>
                    <mml:mtd>
                      <mml:mrow>
                        <mml:mo> </mml:mo>
                        <mml:mtext>cos</mml:mtext>
                        <mml:mo stretchy="true">(</mml:mo>
                        <mml:mfrac>
                          <mml:mrow>
                            <mml:mn>2</mml:mn>
                            <mml:mo>π</mml:mo>
                            <mml:mi>j</mml:mi>
                          </mml:mrow>
                          <mml:mi>n</mml:mi>
                        </mml:mfrac>
                        <mml:mo stretchy="true">)</mml:mo>
                      </mml:mrow>
                    </mml:mtd>
                  </mml:mtr>
                </mml:mtable>
              </mml:mrow>
            </mml:mrow>
            <mml:mo>.</mml:mo>
          </mml:mrow>
        </mml:math>
      </disp-formula>
      <p><xref rid="btad229-F3" ref-type="fig">Figure 3</xref> shows FCGR images of two different phage proteins and a random amino acid sequence. The random sequence in Panel (A) is generated by randomly choosing an amino acid for 1000 times using a uniform distribution. In contrast to the random sequence, the FCGR of baseplate protein and minor capsid protein (<xref rid="btad229-F3" ref-type="fig">Fig. 3B and C</xref>) reveal more unique patterns. For example, the red patches in <xref rid="btad229-F3" ref-type="fig">Fig. 3B and C</xref> exhibit a similar pattern while the blue and red patches show highly different patterns, which may signal key sequence features that can distinguish the baseplate and minor capsid proteins. The patches indicate the distribution of short motifs ending with different amino acids. These patches and their relationships/associations with other patches can be learned by our ViT model to improve classification accuracy.</p>
      <fig position="float" id="btad229-F3">
        <label>Figure 3.</label>
        <caption>
          <p>FCGR images for three sequences. (A) A random sequence. The order of vertices/amino acids is shown around the ring. (B) Baseplate protein with RefSeq accession: <italic toggle="yes">YP_009788086.1</italic>. (C) Minor capsid protein with RefSeq accession: <italic toggle="yes">YP_009900655.1</italic>. The green boxes and blue boxes in (B) and (C) show different patterns and the red boxes show exhibit patterns.</p>
        </caption>
        <graphic xlink:href="btad229f3" position="float"/>
      </fig>
    </sec>
    <sec>
      <title>2.2 Basic structure of ViT</title>
      <p>After encoding the protein sequences into <inline-formula id="IE8"><mml:math id="IM8" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow><mml:mrow><mml:mn>64</mml:mn><mml:mo>×</mml:mo><mml:mn>64</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> images, we employ ViT for PVP classification. As shown in <xref rid="btad229-F1" ref-type="fig">Fig. 1</xref>, the inputs to our ViT model are FCGR images, and the output of the ViT is the probability of the protein being PVP. If the protein is predicted as PVP, our ViT will assign a more detailed annotation for the PVP.</p>
      <sec>
        <title>2.2.1 Patch splitting and embedding</title>
        <p>To feed an FCGR image to ViT, we will reshape the FCGR image <inline-formula id="IE9"><mml:math id="IM9" display="inline" overflow="scroll"><mml:mrow><mml:mi>G</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow><mml:mrow><mml:mn>64</mml:mn><mml:mo>×</mml:mo><mml:mn>64</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> into a sequence of flattened 2D patches <inline-formula id="IE10"><mml:math id="IM10" display="inline" overflow="scroll"><mml:mrow><mml:mi>g</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow><mml:mrow><mml:mi>N</mml:mi><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>, where the dimension of each image patch is <inline-formula id="IE11"><mml:math id="IM11" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi><mml:mo>×</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>, and <italic toggle="yes">N</italic> is <inline-formula id="IE12"><mml:math id="IM12" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mn>64</mml:mn></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>/</mml:mo><mml:msup><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:math></inline-formula>. In our design, <italic toggle="yes">M</italic> is set to 16 by default, and the length of the input sequence <italic toggle="yes">N</italic> will be 16. Then, we can use <xref rid="E2" ref-type="disp-formula">Equation (2)</xref> to generate inputs to the Transformer model.
</p>
        <disp-formula id="E2">
          <label>(2)</label>
          <mml:math id="M2" display="block" overflow="scroll">
            <mml:mrow>
              <mml:mrow>
                <mml:mo stretchy="true">{</mml:mo>
                <mml:mrow>
                  <mml:mtable>
                    <mml:mtr>
                      <mml:mtd>
                        <mml:mrow>
                          <mml:msub>
                            <mml:mrow>
                              <mml:mi>E</mml:mi>
                            </mml:mrow>
                            <mml:mi>t</mml:mi>
                          </mml:msub>
                          <mml:mo>=</mml:mo>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:mo stretchy="false">[</mml:mo>
                          <mml:msubsup>
                            <mml:mrow>
                              <mml:mi>g</mml:mi>
                            </mml:mrow>
                            <mml:mi>m</mml:mi>
                            <mml:mn>1</mml:mn>
                          </mml:msubsup>
                          <mml:msub>
                            <mml:mrow>
                              <mml:mi>H</mml:mi>
                            </mml:mrow>
                            <mml:mi>e</mml:mi>
                          </mml:msub>
                          <mml:mo>;</mml:mo>
                          <mml:msubsup>
                            <mml:mrow>
                              <mml:mi>g</mml:mi>
                            </mml:mrow>
                            <mml:mi>m</mml:mi>
                            <mml:mn>2</mml:mn>
                          </mml:msubsup>
                          <mml:msub>
                            <mml:mrow>
                              <mml:mi>H</mml:mi>
                            </mml:mrow>
                            <mml:mi>e</mml:mi>
                          </mml:msub>
                          <mml:mo>;</mml:mo>
                          <mml:mo>…</mml:mo>
                          <mml:mo>;</mml:mo>
                          <mml:msubsup>
                            <mml:mrow>
                              <mml:mi>g</mml:mi>
                            </mml:mrow>
                            <mml:mi>m</mml:mi>
                            <mml:mi>N</mml:mi>
                          </mml:msubsup>
                          <mml:msub>
                            <mml:mrow>
                              <mml:mi>H</mml:mi>
                            </mml:mrow>
                            <mml:mi>e</mml:mi>
                          </mml:msub>
                          <mml:mo stretchy="false">]</mml:mo>
                        </mml:mrow>
                      </mml:mtd>
                    </mml:mtr>
                    <mml:mtr>
                      <mml:mtd>
                        <mml:mrow>
                          <mml:msub>
                            <mml:mrow>
                              <mml:mi>E</mml:mi>
                            </mml:mrow>
                            <mml:mi>m</mml:mi>
                          </mml:msub>
                          <mml:mo>=</mml:mo>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:mi>I</mml:mi>
                          <mml:msub>
                            <mml:mrow>
                              <mml:mi>H</mml:mi>
                            </mml:mrow>
                            <mml:mi>m</mml:mi>
                          </mml:msub>
                        </mml:mrow>
                      </mml:mtd>
                    </mml:mtr>
                    <mml:mtr>
                      <mml:mtd>
                        <mml:mrow>
                          <mml:msup>
                            <mml:mrow>
                              <mml:mi>Z</mml:mi>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mo stretchy="false">(</mml:mo>
                              <mml:mn>0</mml:mn>
                              <mml:mo stretchy="false">)</mml:mo>
                            </mml:mrow>
                          </mml:msup>
                          <mml:mo>=</mml:mo>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:msub>
                            <mml:mrow>
                              <mml:mi>E</mml:mi>
                            </mml:mrow>
                            <mml:mi>m</mml:mi>
                          </mml:msub>
                          <mml:mo>+</mml:mo>
                          <mml:msub>
                            <mml:mrow>
                              <mml:mi>E</mml:mi>
                            </mml:mrow>
                            <mml:mi>t</mml:mi>
                          </mml:msub>
                        </mml:mrow>
                      </mml:mtd>
                    </mml:mtr>
                  </mml:mtable>
                  <mml:mo>.</mml:mo>
                </mml:mrow>
              </mml:mrow>
            </mml:mrow>
          </mml:math>
        </disp-formula>
        <p>Here, <inline-formula id="IE13"><mml:math id="IM13" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:msubsup><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> is the flattened 2D patch at position <italic toggle="yes">i</italic>, corresponding to a “word” token in Transformer for natural language modeling (<xref rid="btad229-B52" ref-type="bibr">Vaswani et al. 2017</xref>). <italic toggle="yes">I</italic> is the index of the position of each patch <inline-formula id="IE14"><mml:math id="IM14" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> in the input FCGR image. <inline-formula id="IE15"><mml:math id="IM15" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>H</mml:mi></mml:mrow><mml:mi>e</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE16"><mml:math id="IM16" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>H</mml:mi></mml:mrow><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> are learnable linear projection matrices for image patch and positional embedding, respectively.</p>
      </sec>
      <sec>
        <title>2.2.2 The transformer model</title>
        <p>The architecture of the Transformer model in <xref rid="btad229-F1" ref-type="fig">Fig. 1</xref> is the same as the original design in <xref rid="btad229-B52" ref-type="bibr">Vaswani et al. (2017)</xref>. The equations of the Transformer are listed in <xref rid="E3" ref-type="disp-formula">Equation (3)</xref>. The first function is the multi-head attention mechanism (MSA layer), which can extract the importance of patches and learn their associations. Then linear projections (MLP layer) are employed to capture information from each patch simultaneously. Layer normalization (<xref rid="btad229-B54" ref-type="bibr">Wang et al. 2019</xref>), and residual connections (<xref rid="btad229-B4" ref-type="bibr">Baevski and Auli 2018</xref>) are applied before and after each block to prevent gradient exploding and gradient vanishing, respectively. In the last layer, we use the SoftMax function to estimate the probability of a protein being a PVP. If the protein is predicted as a PVP, <inline-formula id="IE17"><mml:math id="IM17" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mi>Z</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> [<xref rid="E3" ref-type="disp-formula">Equation (3)</xref>] will be fed to a multi-class classifier to predict a more detailed annotation.
</p>
        <disp-formula id="E3">
          <label>(3)</label>
          <mml:math id="M3" display="block" overflow="scroll">
            <mml:mrow>
              <mml:mrow>
                <mml:mo stretchy="true">{</mml:mo>
                <mml:mrow>
                  <mml:mtable>
                    <mml:mtr>
                      <mml:mtd>
                        <mml:mrow>
                          <mml:msup>
                            <mml:mrow>
                              <mml:mi>Z</mml:mi>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mo stretchy="false">(</mml:mo>
                              <mml:mn>1</mml:mn>
                              <mml:mo stretchy="false">)</mml:mo>
                            </mml:mrow>
                          </mml:msup>
                        </mml:mrow>
                      </mml:mtd>
                      <mml:mtd>
                        <mml:mo>=</mml:mo>
                      </mml:mtd>
                      <mml:mtd>
                        <mml:mrow>
                          <mml:mi mathvariant="italic">MSA</mml:mi>
                          <mml:mo stretchy="false">(</mml:mo>
                          <mml:msup>
                            <mml:mrow>
                              <mml:mi>Z</mml:mi>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mo stretchy="false">(</mml:mo>
                              <mml:mn>0</mml:mn>
                              <mml:mo stretchy="false">)</mml:mo>
                            </mml:mrow>
                          </mml:msup>
                          <mml:mo stretchy="false">)</mml:mo>
                          <mml:mo>+</mml:mo>
                          <mml:msup>
                            <mml:mrow>
                              <mml:mi>Z</mml:mi>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mo stretchy="false">(</mml:mo>
                              <mml:mn>0</mml:mn>
                              <mml:mo stretchy="false">)</mml:mo>
                            </mml:mrow>
                          </mml:msup>
                        </mml:mrow>
                      </mml:mtd>
                    </mml:mtr>
                    <mml:mtr>
                      <mml:mtd>
                        <mml:mrow>
                          <mml:msup>
                            <mml:mrow>
                              <mml:mi>Z</mml:mi>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mo stretchy="false">(</mml:mo>
                              <mml:mn>2</mml:mn>
                              <mml:mo stretchy="false">)</mml:mo>
                            </mml:mrow>
                          </mml:msup>
                        </mml:mrow>
                      </mml:mtd>
                      <mml:mtd>
                        <mml:mo>=</mml:mo>
                      </mml:mtd>
                      <mml:mtd>
                        <mml:mrow>
                          <mml:mi mathvariant="italic">MLP</mml:mi>
                          <mml:mo stretchy="false">(</mml:mo>
                          <mml:mi>L</mml:mi>
                          <mml:mi>N</mml:mi>
                          <mml:mo stretchy="false">(</mml:mo>
                          <mml:msup>
                            <mml:mrow>
                              <mml:mi>Z</mml:mi>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mo stretchy="false">(</mml:mo>
                              <mml:mn>1</mml:mn>
                              <mml:mo stretchy="false">)</mml:mo>
                            </mml:mrow>
                          </mml:msup>
                          <mml:mo stretchy="false">)</mml:mo>
                          <mml:mo stretchy="false">)</mml:mo>
                          <mml:mo>+</mml:mo>
                          <mml:msup>
                            <mml:mrow>
                              <mml:mi>Z</mml:mi>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mo stretchy="false">(</mml:mo>
                              <mml:mn>1</mml:mn>
                              <mml:mo stretchy="false">)</mml:mo>
                            </mml:mrow>
                          </mml:msup>
                        </mml:mrow>
                      </mml:mtd>
                    </mml:mtr>
                    <mml:mtr>
                      <mml:mtd>
                        <mml:mrow>
                          <mml:msup>
                            <mml:mrow>
                              <mml:mi>y</mml:mi>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mi mathvariant="italic">binary</mml:mi>
                            </mml:mrow>
                          </mml:msup>
                        </mml:mrow>
                      </mml:mtd>
                      <mml:mtd>
                        <mml:mo>=</mml:mo>
                      </mml:mtd>
                      <mml:mtd>
                        <mml:mrow>
                          <mml:mi mathvariant="italic">SoftMax</mml:mi>
                          <mml:mo stretchy="false">(</mml:mo>
                          <mml:mi>L</mml:mi>
                          <mml:mi>N</mml:mi>
                          <mml:mo stretchy="false">(</mml:mo>
                          <mml:msup>
                            <mml:mrow>
                              <mml:mi>Z</mml:mi>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mo stretchy="false">(</mml:mo>
                              <mml:mn>2</mml:mn>
                              <mml:mo stretchy="false">)</mml:mo>
                            </mml:mrow>
                          </mml:msup>
                          <mml:mo stretchy="false">)</mml:mo>
                          <mml:mo stretchy="false">)</mml:mo>
                        </mml:mrow>
                      </mml:mtd>
                    </mml:mtr>
                    <mml:mtr>
                      <mml:mtd>
                        <mml:mrow>
                          <mml:msup>
                            <mml:mrow>
                              <mml:mi>y</mml:mi>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mi mathvariant="italic">multi</mml:mi>
                              <mml:mo>-</mml:mo>
                              <mml:mi mathvariant="italic">class</mml:mi>
                            </mml:mrow>
                          </mml:msup>
                        </mml:mrow>
                      </mml:mtd>
                      <mml:mtd>
                        <mml:mo>=</mml:mo>
                      </mml:mtd>
                      <mml:mtd>
                        <mml:mrow>
                          <mml:mi mathvariant="italic">SoftMax</mml:mi>
                          <mml:mo stretchy="false">(</mml:mo>
                          <mml:mi>L</mml:mi>
                          <mml:mi>N</mml:mi>
                          <mml:mo stretchy="false">(</mml:mo>
                          <mml:msup>
                            <mml:mrow>
                              <mml:mi>Z</mml:mi>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mo stretchy="false">(</mml:mo>
                              <mml:mn>2</mml:mn>
                              <mml:mo stretchy="false">)</mml:mo>
                            </mml:mrow>
                          </mml:msup>
                          <mml:mo stretchy="false">)</mml:mo>
                          <mml:mo stretchy="false">)</mml:mo>
                        </mml:mrow>
                      </mml:mtd>
                    </mml:mtr>
                  </mml:mtable>
                </mml:mrow>
              </mml:mrow>
              <mml:mo>.</mml:mo>
            </mml:mrow>
          </mml:math>
        </disp-formula>
      </sec>
      <sec>
        <title>2.2.3 Model training</title>
        <p>Because there are two tasks in PhaVIP: classifying the PVP and non-PVP sequences (binary classification task) and classifying seven types of PVP (multi-class classification task), we train classifiers for them separately. As introduced in <xref rid="btad229-B11" ref-type="bibr">Devlin et al. (2018)</xref>, pre-training the Transformer model can improve the performance of the downstream task. Thus, we first apply an end-to-end method to train the binary classification model. Then, we fix the parameters in the Transformer encoder and fine-tune a new classifier layer for the multi-class classification model. Binary cross-entropy loss and L2 loss are employed for the binary classification and multi-class classification, respectively. We employ Adam optimizer with a learning rate of 0.001 to update the parameters for both tasks. The models are trained on HPC with the GTX 3080 GPU unit to reduce the running time.</p>
      </sec>
    </sec>
    <sec>
      <title>2.3 Data collection and experimental setup</title>
      <p>Although several PVP datasets have been constructed (<xref rid="btad229-B29" ref-type="bibr">Kabir et al. 2022</xref>), the latest dataset constructed by <xref rid="btad229-B7" ref-type="bibr">Cantu et al. (2020)</xref> was based on the protein annotations released before June 2020. In addition, some annotations of phage protein can be updated regularly in the RefSeq database. For example, as the author of DeePVP (<xref rid="btad229-B18" ref-type="bibr">Fang et al. 2022</xref>) reported, the protein <italic toggle="yes">YP_006383517.1</italic> was not annotated as PVP until October 2021, and this protein was re-annotated as a tail protein in the current version. Thus, in this work, we updated the PVP classification dataset by downloading all the latest annotations from the RefSeq viral protein database (December 2022). Following the guidelines of the third-party review (<xref rid="btad229-B29" ref-type="bibr">Kabir et al. 2022</xref>), we first recruited proteins that belong to phages. Then, the proteins with low-confidence annotations, such as “hypothetical protein”, “similar to”, “xx-like”, “unnamed”, and “putative” were removed. We extracted structural protein sequences by searching the keywords, such as “portal”, “capsid”, “tail”, “fiber”, “tape measure”, “baseplate”, and “structural”. The non-structural proteins were searched using the enzymes’ names, such as annotations ending with “ase”. In addition, we also used other keywords, such as “transcription”, “holin”, “lysin”, and “regulator”, to construct the non-PVP set. To remove the potential redundant sequences, we employed CD-HIT (<xref rid="btad229-B31" ref-type="bibr">Li and Godzik 2006</xref>) to cluster sequences that have above 90% similarity and used the longest sequence to represent each cluster. Finally, our dataset contains 35 213 PVP sequences and 46 883 non-PVP sequences.</p>
      <sec>
        <title>2.3.1 Splitting the dataset</title>
        <p>We split our PVP dataset with increasing difficulty when constructing the training and test set. There are two tasks for PVP classification: classifying the PVP and non-PVP sequences (binary classification) and predicting the PVP types (multi-class classification). In the binary classification task, we use all the proteins for the data partition. In the multi-class classification task, we use the protein annotated with “portal”, “major capsid”, “minor capsid”, “major tail”, “minor tail”, “baseplate”, and “tail_fiber” to construct the multi-class classification dataset. According to the definition of bacteriophage assembly (<xref rid="btad229-B1" ref-type="bibr">Aksyuk and Rossmann 2011</xref>), tail sheath proteins are grouped into the “major tail” or “minor tail” protein classes based on their annotation in the RefSeq database. Other the remained PVPs, such as “Head-tail joining” and “collar” proteins, contain significantly fewer samples than other classes and thus are combined and labeled as “other”.</p>
        <p><italic toggle="yes">Splitting by time</italic>. As mentioned in <xref rid="btad229-B29" ref-type="bibr">Kabir et al. (2022)</xref>, splitting training and test set by time is a widely used data partition method, which mimics the application scenario of using known PVPs to discover new ones. In this dataset, proteins released before December 2020 comprise the training set, while proteins released after that comprise the test set. Finally, we have 27 704 PVP sequences and 36 778 non-PVP sequences for training, and 7509 PVP sequences and 10 103 non-PVP sequences for testing in the PVP classification task. To balance the dataset, we randomly sampled non-PVP sequences to maintain the same number of samples in the binary classification as suggested in <xref rid="btad229-B29" ref-type="bibr">Kabir et al. (2022)</xref>. In the multi-class classification, we keep the original data distribution following <xref rid="btad229-B7" ref-type="bibr">Cantu et al. (2020)</xref>.</p>
        <p><italic toggle="yes">Splitting by similarity</italic>. To test PhaVIP’s performance in classifying diverged PVP, we constructed a hard case where the test sequences share low similarity with the training proteins. Specifically, we applied the all-against-all BLASTP search to our PVP dataset and calculated the product of the pair-wise identity and alignment coverage (Identity <inline-formula id="IE18"><mml:math id="IM18" display="inline" overflow="scroll"><mml:mo>×</mml:mo></mml:math></inline-formula> Coverage). The identity is the percentage of exact matches in the pair-wise alignment and the coverage is the ratio of the aligned length to the length of the query sequence. This will help to estimate the global similarity of the two sequences following the recommendation by ICTV. Then, we employed the data partition strategy proposed in <xref rid="btad229-B40" ref-type="bibr">Petti and Eddy (2022)</xref> to create training and test data with a specified maximum similarity between train and test. In this work, we chose 0.4, 0.5, 0.6, 0.7, 0.8, and 0.9 as the thresholds and employed stratified sampling to generate six pairs of training and test sets. Based on the design of the data partition algorithm in <xref rid="btad229-B40" ref-type="bibr">Petti and Eddy (2022)</xref>, the generated training and test set can be different for each specified similarity cutoff. The size of the train and test data can be found in the online <xref rid="sup1" ref-type="supplementary-material">supplementary file</xref>.</p>
      </sec>
      <sec>
        <title>2.3.2 Metrics</title>
        <p>As mentioned in <xref rid="btad229-B29" ref-type="bibr">Kabir et al. (2022)</xref>, the widely used metrics for evaluating PVP classification performance are precision, recall, and <italic toggle="yes">F</italic>1-score. Their formulas are listed in <xref rid="E4" ref-type="disp-formula">Equations (4)</xref> and <xref rid="E6" ref-type="disp-formula">(6)</xref>:
</p>
        <disp-formula id="E4">
          <label>(4)</label>
          <mml:math id="M4" display="block" overflow="scroll">
            <mml:mrow>
              <mml:mi mathvariant="italic">precision</mml:mi>
              <mml:mo>=</mml:mo>
              <mml:mfrac>
                <mml:mrow>
                  <mml:mi>T</mml:mi>
                  <mml:mi>P</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mi>T</mml:mi>
                  <mml:mi>P</mml:mi>
                  <mml:mo>+</mml:mo>
                  <mml:mi>F</mml:mi>
                  <mml:mi>P</mml:mi>
                </mml:mrow>
              </mml:mfrac>
              <mml:mo>.</mml:mo>
            </mml:mrow>
          </mml:math>
        </disp-formula>
        <disp-formula id="E5">
          <label>(5)</label>
          <mml:math id="M5" display="block" overflow="scroll">
            <mml:mrow>
              <mml:mi mathvariant="italic">recall</mml:mi>
              <mml:mo>=</mml:mo>
              <mml:mfrac>
                <mml:mrow>
                  <mml:mi>T</mml:mi>
                  <mml:mi>P</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mi>T</mml:mi>
                  <mml:mi>P</mml:mi>
                  <mml:mo>+</mml:mo>
                  <mml:mi>F</mml:mi>
                  <mml:mi>N</mml:mi>
                </mml:mrow>
              </mml:mfrac>
              <mml:mo>.</mml:mo>
            </mml:mrow>
          </mml:math>
        </disp-formula>
        <disp-formula id="E6">
          <label>(6)</label>
          <mml:math id="M6" display="block" overflow="scroll">
            <mml:mrow>
              <mml:mi>F</mml:mi>
              <mml:mn>1</mml:mn>
              <mml:mo>-</mml:mo>
              <mml:mi mathvariant="italic">score</mml:mi>
              <mml:mo>=</mml:mo>
              <mml:mfrac>
                <mml:mrow>
                  <mml:mn>2</mml:mn>
                  <mml:mo>×</mml:mo>
                  <mml:mi mathvariant="italic">precision</mml:mi>
                  <mml:mo>×</mml:mo>
                  <mml:mi mathvariant="italic">recall</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mi mathvariant="italic">precision</mml:mi>
                  <mml:mo>+</mml:mo>
                  <mml:mi mathvariant="italic">recall</mml:mi>
                </mml:mrow>
              </mml:mfrac>
              <mml:mo>.</mml:mo>
            </mml:mrow>
          </mml:math>
        </disp-formula>
        <p>For binary PVP classification, true positive (TP), false negative (FN), and false positive (FP) represent the number of corrected identified PVPs, the number of PVPs misclassified into non-PVPs, and the number of falsely identified PVPs, respectively. We will also report the area under the ROC curve (AUCROC) for comparison. For the multi-class classification task, we will calculate precision, recall, and <italic toggle="yes">F</italic>1-score for each class.</p>
      </sec>
    </sec>
  </sec>
  <sec>
    <title>3 Results</title>
    <p>In the experiment, we validate our pipeline on several datasets and compare PhaVIP against the state-of-the-art methods mentioned in the third-party review (<xref rid="btad229-B29" ref-type="bibr">Kabir et al. 2022</xref>), including VirionFinder (<xref rid="btad229-B17" ref-type="bibr">Fang and Zhou 2021</xref>), PhANNs (<xref rid="btad229-B7" ref-type="bibr">Cantu et al. 2020</xref>), DeePVP (<xref rid="btad229-B18" ref-type="bibr">Fang et al. 2022</xref>), Meta-iPVP (<xref rid="btad229-B8" ref-type="bibr">Charoenkwan et al. 2020b</xref>), PVP-SVM (<xref rid="btad229-B35" ref-type="bibr">Manavalan et al. 2018</xref>), and PVPred-SCM (<xref rid="btad229-B9" ref-type="bibr">Charoenkwan et al. 2020a</xref>). Out of these tools, only PhANNs and DeePVP provided source codes for re-training or updating the reference database. Thus, we are able to retrain PhANNs and DeePVP for both the binary and the multi-classification tasks using the suggested hyperparameters. Other tools did not provide a re-training function. Thus, we applied them to the test data directly.</p>
    <p>In the following sections, we will first evaluate the PVP classification performance. Then, following <xref rid="btad229-B18" ref-type="bibr">Fang et al. (2022)</xref>, we will show a case study of classifying PVP on the <italic toggle="yes">mycobacteriophage</italic> PDRPxv genome, a newly identified phage that is a candidate therapy for pathogenic <italic toggle="yes">Mycobacterium</italic>. Finally, we investigate whether using classified PVPs and non-PVPs can benefit two important phage analysis tasks: phage taxonomy classification and host prediction.</p>
    <sec>
      <title>3.1 Performance on the benchmark dataset split by time</title>
      <p>To improve the robustness of the model, we trained PhaVIP, PhANNs, and DeePVP using 10-fold cross-validation. First, we split our training set into 10 subsets. Then, we iteratively selected nine subsets for training and one subset for validation. The 10-fold cross-validation performance of PhaVIP is shown in the online supplementary file (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S1</xref>). The model that achieves the best performance on the validation set was kept for future experiments. For other methods, we used the provided models with the suggested parameters on the test proteins. The ROC curves of all the methods on the test dataset split by time are shown in <xref rid="btad229-F4" ref-type="fig">Fig. 4</xref>. The AUCROC reveals that PhaVIP has more reliable results on the dataset split by time. Because PVPred-SCM does not output a score of the prediction, we only report its recall and FP rate.</p>
      <fig position="float" id="btad229-F4">
        <label>Figure 4.</label>
        <caption>
          <p>The ROC curves of the binary PVP classification on the test data by different tools. The number following the tool name is the value of the AUCROC. PVPred-SCM does not output a score for the prediction, and thus only TPR and FPR are reported.</p>
        </caption>
        <graphic xlink:href="btad229f4" position="float"/>
      </fig>
      <p>In order to show the classification performance in real application scenarios, we also recorded the precision, recall, and <italic toggle="yes">F</italic>1-score of all tested tools under their default score cutoffs in <xref rid="btad229-F5" ref-type="fig">Fig. 5</xref> and <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S1</xref>. The results reveal that PhaVIP and DeePVP have better performance than other methods on this dataset.</p>
      <fig position="float" id="btad229-F5">
        <label>Figure 5.</label>
        <caption>
          <p>The classification performance of the binary PVP classification under the default/suggested thresholds.</p>
        </caption>
        <graphic xlink:href="btad229f5" position="float"/>
      </fig>
      <p>Next, we examine the performance of PhaVIP in the multi-class classification task. Of the available tools, only PhANNs and DeePVP enable more detailed annotation of PVPs. However, classes/labels in the original design of PhANNs and DeePVP are different from ours. Thus, we retrained both methods and compared them with PhaVIP. The <italic toggle="yes">F</italic>1-score of each class is shown in <xref rid="btad229-F6" ref-type="fig">Fig. 6</xref>, and the detailed confusion matrix can be found in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S2</xref>. The results clearly show that the multi-class classification task is harder than classifying the PVP and non-PVP. The possible reasons are the smaller training sets and highly unbalanced classes. Although all the methods used the weighted loss method to balance the training classes, the performance of the small class (minor capsid) is still unsatisfactory. Nevertheless, PhaVIP can achieve better performance in all the classes, especially in the small ones.</p>
      <fig position="float" id="btad229-F6">
        <label>Figure 6.</label>
        <caption>
          <p>The performance of the multi-class classification. <italic toggle="yes">X</italic>-axis: the name of each PVP class. The order of the names is ranked by the class size. <italic toggle="yes">Y</italic>-axis: <italic toggle="yes">F</italic>1-score.</p>
        </caption>
        <graphic xlink:href="btad229f6" position="float"/>
      </fig>
    </sec>
    <sec>
      <title>3.2 Performance on the low-similarity dataset</title>
      <p>It is usually much harder to annotate diverged proteins. As mentioned in Section 2.3, we use the <inline-formula id="IE19"><mml:math id="IM19" display="inline" overflow="scroll"><mml:mrow><mml:mi mathvariant="italic">Identity</mml:mi><mml:mo>×</mml:mo><mml:mi mathvariant="italic">Coverage</mml:mi></mml:mrow></mml:math></inline-formula> as the similarity measurement and control the maximum similarity between the training and test set. We generated six pairs of datasets with decreasing similarity for the binary classification task and multi-class classification task separately. The <italic toggle="yes">F</italic>1-scores of PhaVIP, PhANNs, and DeePVP are shown in <xref rid="btad229-F7" ref-type="fig">Figs 7</xref> and <xref rid="btad229-F8" ref-type="fig">8</xref>. The detailed confusion matrix of the classification can be found in <xref rid="sup1" ref-type="supplementary-material">Supplementary Tables S3–S14</xref>.</p>
      <fig position="float" id="btad229-F7">
        <label>Figure 7.</label>
        <caption>
          <p>The binary classification performance on the low-similarity dataset. <italic toggle="yes">X</italic>-axis: the maximum value of <inline-formula id="IE20"><mml:math id="IM20" display="inline" overflow="scroll"><mml:mrow><mml:mi mathvariant="italic">identity</mml:mi><mml:mo>×</mml:mo><mml:mi mathvariant="italic">coverage</mml:mi></mml:mrow></mml:math></inline-formula> between train and test sets. <italic toggle="yes">Y</italic>-axis: <italic toggle="yes">F</italic>1-score.</p>
        </caption>
        <graphic xlink:href="btad229f7" position="float"/>
      </fig>
      <fig position="float" id="btad229-F8">
        <label>Figure 8.</label>
        <caption>
          <p>The multi-class classification performance on the low-similarity dataset. <italic toggle="yes">X</italic>-axis: the maximum value of <inline-formula id="IE21"><mml:math id="IM21" display="inline" overflow="scroll"><mml:mrow><mml:mi mathvariant="italic">identity</mml:mi><mml:mo>×</mml:mo><mml:mi mathvariant="italic">coverage</mml:mi></mml:mrow></mml:math></inline-formula>. <italic toggle="yes">Y</italic>-axis: <italic toggle="yes">F</italic>1-score.</p>
        </caption>
        <graphic xlink:href="btad229f8" position="float"/>
      </fig>
      <p>As expected, with the increase of the train-versus-test similarity, the <italic toggle="yes">F</italic>1-score of both methods increases. The gap between PhaVIP and the other two methods clearly reveals that our model competes favorably against the state-of-the-art methods on a wide range of similarities in both binary and multi-class classification tasks.</p>
    </sec>
    <sec>
      <title>3.3 Case study: annotating proteins on the <italic toggle="yes">mycobacteriophage</italic> PDRPxv genome</title>
      <p>Inspired by <xref rid="btad229-B48" ref-type="bibr">Sinha et al. (2020)</xref> and <xref rid="btad229-B18" ref-type="bibr">Fang et al. (2022)</xref>, in this case study, we employed PhaVIP to annotate the proteins translated from <italic toggle="yes">mycobacteriophage</italic> PDRPxv, which is recently identified as a candidate therapy for <italic toggle="yes">Mycobacterium</italic>. According to <xref rid="btad229-B48" ref-type="bibr">Sinha et al. (2020)</xref>, totally there are 107 predicted proteins in the PDRPxv genome. The authors identified 12 PVPs using the mass spectrometry method and 12 non-PVPs using the alignment method (BLAST). The functions of the other 83 proteins remain unknown. We downloaded the genomes from GenBank with accession <ext-link xlink:href="KR029087" ext-link-type="DDBJ/EMBL/GenBank">KR029087</ext-link>. Because PDRPxv is not part of the RefSeq dataset, we can evaluate PhaVIP by comparing PhaVIP’s predictions with the 24 annotations derived by the mass spectrometry method and BLAST.</p>
      <p>We used the 24 annotated proteins as input and tested the performance of the best four tools (in the benchmark experiment in <xref rid="btad229-F5" ref-type="fig">Fig. 5</xref>). As shown in <xref rid="btad229-T2" ref-type="table">Table 2</xref>, PhaVIP has better performance than other tools. In addition, all the machine learning-based methods are able to predict the function of the remaining 83 proteins, demonstrating the utility of the learning-based method for PVP classification. We used the Venn diagram to visualize the relationship between the predicted PVP sets. As shown in <xref rid="btad229-F9" ref-type="fig">Fig. 9</xref>, PhaVIP, VirionFinder, and PhANNs identified more PVPs than DeePVP. This is consistent to the observation of DeePVP’s low recall in <xref rid="btad229-F5" ref-type="fig">Fig. 5</xref>. In addition, 93% of PVPs predicted by PhaVIP are also classified as PVPs by other methods, which is higher than PhANNs and VirionFinder.</p>
      <fig position="float" id="btad229-F9">
        <label>Figure 9.</label>
        <caption>
          <p>The Venn diagram of the complete PVP classification results of four best machine-leanring methods on <italic toggle="yes">mycobacteriophage</italic> PDRPxv.</p>
        </caption>
        <graphic xlink:href="btad229f9" position="float"/>
      </fig>
      <table-wrap position="float" id="btad229-T2">
        <label>Table 2.</label>
        <caption>
          <p><italic toggle="yes">F</italic>1-score of classifying proteins in <italic toggle="yes">mycobacteriophage</italic> PDRPxv genome.</p>
        </caption>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th rowspan="1" colspan="1">Tools</th>
              <th rowspan="1" colspan="1">PhaVIP</th>
              <th rowspan="1" colspan="1">DeePVP</th>
              <th rowspan="1" colspan="1">PhANNs</th>
              <th rowspan="1" colspan="1">VirionFinder</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1"><italic toggle="yes">F</italic>1-score</td>
              <td rowspan="1" colspan="1">
                <bold>0.88</bold>
              </td>
              <td rowspan="1" colspan="1">0.85</td>
              <td rowspan="1" colspan="1">0.83</td>
              <td rowspan="1" colspan="1">0.64</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <fn id="tblfn1">
            <p>The highest score is highlighted in bold.</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
    </sec>
    <sec>
      <title>3.4 Using classified proteins in two important applications</title>
      <p>It is widely known that phage proteins play essential roles in taxonomy classification and host prediction. In this section, we investigate the roles of PVPs and non-PVPs in these two tasks.</p>
      <sec>
        <title>3.4.1 Phage taxonomy classification</title>
        <p>Recently, many new phages have been identified using high-throughput sequencing, especially metagenomic sequencing. vConTACT 2.0 (<xref rid="btad229-B15" ref-type="bibr">Eloe-Fadrosh 2019</xref>) is a widely used and robust tool for phage taxonomy classification, as reported in the phage taxonomy review (<xref rid="btad229-B56" ref-type="bibr">Zhu et al. 2022</xref>). It applies protein organization conservation for phage classification. Specifically, vConTACT 2.0 calculates the <italic toggle="yes">P</italic>-value that estimates the significance of two phage sequences sharing an observed number of proteins. Then, a protein-sharing network is constructed based on the <italic toggle="yes">P</italic>-value, and a clustering algorithm is applied to group “similar” sequences into the same cluster. Then, the known labels of the reference genomes in the cluster will be passed to other sequences in the same cluster.</p>
        <p>Although vConTACT has high accuracy in classifying complete or near complete phage sequences, its running time complexity is high because of large-scale pair-wise alignments. Thus, instead of using all proteins (<xref rid="btad229-F10" ref-type="fig">Fig. 10A</xref>), we propose to only use PVPs or non-PVPs to evaluate the similarity between phages. In particular, because PVPs have successful applications in phylogenetic tree construction, we expect that using just PVPs can achieve comparable accuracy of phage classification as using all proteins. Thus, in this experiment, we use just PVP or non-PVP when running vConTACT 2.0 and evaluate how PVP or non-PVP affects the classification results. First, we downloaded the benchmark dataset provided by <xref rid="btad229-B56" ref-type="bibr">Zhu et al. (2022)</xref>. This dataset was constructed using 1460 RefSeq phage sequences from the latest ICTV 2022 taxonomy. It was split by time: 80% of the sequences in each family were used as the training set, and the remaining sequences were used as the test set. Second, we applied prodigal (<xref rid="btad229-B27" ref-type="bibr">Hyatt et al. 2010</xref>) to predict and translate proteins from the phage genomes in training and test sets. PhaVIP is then employed to annotate each protein. Finally, we used predicted PVPs and non-PVPs to predict the taxonomy via vConTACT, respectively. <xref rid="btad229-F10" ref-type="fig">Figure 10B and C</xref> sketched the pipelines.</p>
        <fig position="float" id="btad229-F10">
          <label>Figure 10.</label>
          <caption>
            <p>Three versions of vConTACT 2.0. (A) The original design of vConTACT 2.0 uses all the proteins from the phage genome to construct the protein-sharing network. (B) PVP version of vConTACT 2.0. (C) Non-PVP version of vConTACT 2.0.</p>
          </caption>
          <graphic xlink:href="btad229f10" position="float"/>
        </fig>
        <p>The taxonomy classification results in <xref rid="btad229-F11" ref-type="fig">Fig. 11</xref> show that the PVP version of vConTACT 2.0, which only used PVP for taxonomy classification, can achieve almost the same performance as the regular vConTACT 2.0. In addition, because PVP only accounts for nearly <inline-formula id="IE22"><mml:math id="IM22" display="inline" overflow="scroll"><mml:mrow><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mn>5</mml:mn></mml:mrow></mml:math></inline-formula> of the total predicted proteins, using PVP for taxonomy classification can reduce the running time significantly. Because running PhaVIP only takes about 7 min for all proteins, even with the preprocessing by PhaVIP, the total running time of taxonomy classification by vConTACT 2.0 reduces from 89 to 9 min. Using non-PVP for taxonomy classification can also reduce the running time. But the accuracy is 3% lower than using PVP.</p>
        <fig position="float" id="btad229-F11">
          <label>Figure 11.</label>
          <caption>
            <p>vConTACT taxonomy classification results using different sets of proteins. “Random set 1” and “Random set 2” represent randomly selected protein sets, which have the same number of proteins as PVP and non-PVP set, respectively.</p>
          </caption>
          <graphic xlink:href="btad229f11" position="float"/>
        </fig>
        <p>A fair question is whether using any set of randomly chosen proteins can achieve similar accuracy with reduced running time. To answer this question, we randomly chose the same number of proteins as the PVP set and non-PVP set for taxonomy classification, respectively. In this experiment, PVP and “Random set 1” contain 7105 proteins, and non-PVP and “Random set 2” contain 29 321 proteins. The results in <xref rid="btad229-F11" ref-type="fig">Fig. 11</xref> indicate that using a random set of proteins cannot achieve comparable accuracy as using just PVPs. In addition, vConTACT 2.0’s results using “Random set 1” is worse than “Random set 2” probably because the number of proteins in “random set 2” is larger than “Random set 1”. Overall, these results show that PhaVIP can help select a small subset of important proteins for taxonomy classification.</p>
      </sec>
      <sec>
        <title>3.4.2 Phage host prediction</title>
        <p>The hosts of the phages are mainly bacteria. Identifying the phage–host relationship helps decipher the dynamic relationship between microbes. In addition, because of the fast rise of antibiotic-resistant pathogens, phage therapy has become a potential alternative to antibiotics for killing the “superbugs” (<xref rid="btad229-B30" ref-type="bibr">Lee et al. 2019</xref>). Thus, predicting the phage host is important to both fundamental research and phages’ applications.</p>
        <p>As reported in <xref rid="btad229-B47" ref-type="bibr">Shang and Sun (2022)</xref>, sequence similarity can be utilized for host prediction. If two phages share similar protein organizations, they tend to infect the same host. In addition, sequence similarity between phages and bacteria may help host prediction because phages can mobilize host genes (<xref rid="btad229-B26" ref-type="bibr">Howard-Varona et al. 2017</xref>). Thus, we developed a host prediction pipeline based on protein similarity in order to investigate how different types of proteins affect the prediction performance. The sketch of the pipeline is shown in <xref rid="btad229-F12" ref-type="fig">Fig. 12</xref>.</p>
        <fig position="float" id="btad229-F12">
          <label>Figure 12.</label>
          <caption>
            <p>The pipeline of using similarity search for host prediction. (A) The similarity search based host prediction. We implemented two pipelines using phage protein and bacterial protein as the reference databases, respectively. (B) The majority vote method for generating the final host prediction.</p>
          </caption>
          <graphic xlink:href="btad229f12" position="float"/>
        </fig>
        <p>First, we downloaded the widely used benchmark dataset for host prediction (<xref rid="btad229-B46" ref-type="bibr">Shang and Sun 2021</xref>, <xref rid="btad229-B47" ref-type="bibr">2022</xref>). The training set contains 1306 phage–host interactions collected in and before 2015, and the test set contains 634 interaction pairs after 2015. Every phage is unique, and some of them infect the same host. The training and test sets share 59 host species. Because the alignment-based method cannot predict new labels, we only keep 423 phages in the test set that infect these 59 species for this experiment.</p>
        <p>Second, we create the reference protein databases using the predicted proteins from all the phages in the training set and their hosts. As shown in <xref rid="btad229-F12" ref-type="fig">Fig. 12A</xref>, we save the proteins from phages and their hosts in two databases, respectively. Each protein has a taxonomic label. A phage protein’s label is determined by its host. A bacterial protein’s label is from itself. When there is a query/test phage, we predict its proteins and annotate PVP and non-PVP using PhaVIP. Then, we align the PVP proteins to the phage and bacterial protein databases and record each PVP’s best alignments against two databases, respectively. The labels of the best aligned proteins are used for host prediction. Because there are multiple proteins, we applied the majority vote as shown in <xref rid="btad229-F12" ref-type="fig">Fig. 12B</xref>. Specifically, the label with the most votes is assigned as the host of the phage. An example is given in <xref rid="btad229-F12" ref-type="fig">Fig. 12B</xref>, where three proteins were labeled as <italic toggle="yes">Escherichia coli</italic> and one protein was labeled as <italic toggle="yes">Salmonella enterica</italic>. Thus, the final predicted host of this phage is <italic toggle="yes">E.coli</italic>. Because we have two different databases, we record the results using the phage database and bacterial database separately. As a control experiment, we also repeated the host prediction process using only non-PVPs and all proteins. The host prediction results at different ranks from species to family are shown in <xref rid="btad229-F13" ref-type="fig">Fig. 13</xref>.</p>
        <fig position="float" id="btad229-F13">
          <label>Figure 13.</label>
          <caption>
            <p>Host prediction results after PVP classification. “(phage)” and “(bacteria)” refer to the similarity search against the phage protein and bacterial protein databases, respectively.</p>
          </caption>
          <graphic xlink:href="btad229f13" position="float"/>
        </fig>
        <p>The results reveal that the similarity search against the phage protein database always has better performance than against the bacterial protein database. This phenomenon is also noted by the existing host prediction tools. As reported in <xref rid="btad229-B47" ref-type="bibr">Shang and Sun (2022)</xref>, the tools based on phage–phage similarity usually have better performance than those based on phage–bacteria similarity in the experiments. In addition, we found that non-PVP can achieve better performance in host prediction tasks across different taxonomy levels and databases. A plausible explanation is that the host cell attachment process is complicated and involves many proteins. Some non-PVPs, such as endoglycosidase and endosialidase (<xref rid="btad229-B49" ref-type="bibr">Steinbacher et al. 1996</xref>; <xref rid="btad229-B50" ref-type="bibr">Stummeyer et al. 2005</xref>), also play key roles in the infection, and they are likely to be host-specific. Therefore, using just PVP for host prediction does not necessarily produce a better result, which does not agree with some previous conclusions (<xref rid="btad229-B5" ref-type="bibr">Boeckaerts et al. 2021</xref>). We may have underestimated the importance of non-PVPs in host prediction tasks.</p>
      </sec>
    </sec>
  </sec>
  <sec>
    <title>4 Discussion</title>
    <p>In this work, we present a novel PVP classification tool, named PhaVIP, that combines CGR and ViT for protein encoding and PVP classification. PhaVIP has two functions: predicting the PVP and non-PVP and predicting the type of the PVP. CGR-based encoding can convert proteins with different lengths into images with the same resolution. For each protein, it embeds the <italic toggle="yes">k</italic>-mer frequency into a unique image, allowing us to employ the state-of-the-art image classification model, ViT, to learn the importance and associations between different parts of a CGR image. As shown in all of our experiments, ViT shows better and more robust performance in both binary classification and multi-class classification tasks. We also demonstrated that phage taxonomy classification and host prediction can benefit from using classified proteins rather than all proteins.</p>
    <p>Although PhaVIP has greatly improved PVP classification, there are still some limitations. First, because most existing works do not provide source codes, we can only retrain the two latest published tools (DeePVP and PhANNs) in the experiments. Second, there are still other types of virion proteins, such as head–tail joining and collar proteins. However, because the number of these proteins is far fewer than in other classes, adding these classes for training may aggravate the data imbalance problem. According to our experiments, PhaVIP, DeePVP, and PhANNs cannot perform well in these small classes. For example, PhaVIP, DeePVP, and PhANNs achieved 54%, 50%, and 27% <italic toggle="yes">F</italic>1-score on the collar proteins. Thus, we have several goals to optimize or extend PhaVIP in our future work. First, although PhaVIP can perform well in binary classification, there is still room to improve multi-class classification, especially in the low-similarity data. We will investigate whether some multi-objective loss balancing methods can be incorporated into PhaVIP to overcome the imbalance problem. Second, although some variants of CGR incorporate polarity, charge, and molecular weight information for training (<xref rid="btad229-B12" ref-type="bibr">Dick and Green 2020</xref>), our results show that they have nearly the same results (performance difference <inline-formula id="IE23"><mml:math id="IM23" display="inline" overflow="scroll"><mml:mo>&lt;</mml:mo></mml:math></inline-formula>1.5%) as the original 20-flake CGRs. We will investigate whether there are other suitable features that our framework can utilize to improve performance. Third, we will explore whether we can employ the few-shot learning-based method to learn features from the classes with few labels. This can be used to provide more detailed annotations for further analyzing phages.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>btad229_Supplementary_Data</label>
      <media xlink:href="btad229_supplementary_data.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <sec>
    <title>Supplementary data</title>
    <p><xref rid="sup1" ref-type="supplementary-material">Supplementary data</xref> is available at <italic toggle="yes">Bioinformatics</italic> online.</p>
  </sec>
  <sec sec-type="COI-statement">
    <title>Conflict of interest</title>
    <p>The authors declare that they have no conflict of interest.</p>
  </sec>
  <sec>
    <title>Funding</title>
    <p>This work was supported by City University of Hong Kong [Project 9678241, 9667256, 7005453]; and the Hong Kong Innovation and Technology Commission (InnoHK Project CIMDA).</p>
  </sec>
  <sec sec-type="data-availability">
    <title>Data availability</title>
    <p>All data and codes used for this study are available online via: <ext-link xlink:href="https://phage.ee.cityu.edu.hk/phavip/download" ext-link-type="uri">https://phage.ee.cityu.edu.hk/phavip/download</ext-link>.</p>
  </sec>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btad229-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Aksyuk</surname><given-names>AA</given-names></string-name>, <string-name><surname>Rossmann</surname><given-names>MG.</given-names></string-name></person-group><article-title>Bacteriophage assembly</article-title>. <source>Viruses</source><year>2011</year>;<volume>3</volume>:<fpage>172</fpage>–<lpage>203</lpage>.<pub-id pub-id-type="pmid">21994726</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Arif</surname><given-names>M</given-names></string-name>, <string-name><surname>Ali</surname><given-names>F</given-names></string-name>, <string-name><surname>Ahmad</surname><given-names>S</given-names></string-name></person-group><etal>et al</etal><article-title>Pred-BVP-Unb: fast prediction of bacteriophage virion proteins using un-biased multi-perspective properties with recursive feature elimination</article-title>. <source>Genomics</source><year>2020</year>;<volume>112</volume>:<fpage>1565</fpage>–<lpage>74</lpage>.<pub-id pub-id-type="pmid">31526842</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Azimi</surname><given-names>T</given-names></string-name>, <string-name><surname>Mosadegh</surname><given-names>M</given-names></string-name>, <string-name><surname>Nasiri</surname><given-names>MJ</given-names></string-name></person-group><etal>et al</etal><article-title>Phage therapy as a renewed therapeutic approach to mycobacterial infections: a comprehensive review</article-title>. <source>Infect Drug Resist</source><year>2019</year>;<volume>12</volume>:<fpage>2943</fpage>–<lpage>59</lpage>.<pub-id pub-id-type="pmid">31571947</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B4">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Baevski</surname><given-names>A</given-names></string-name>, <string-name><surname>Auli</surname><given-names>M.</given-names></string-name></person-group> Adaptive input representations for neural language modeling. In: <italic toggle="yes">International Conference on Learning Representations</italic>. <year>2018</year>.</mixed-citation>
    </ref>
    <ref id="btad229-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Boeckaerts</surname><given-names>D</given-names></string-name>, <string-name><surname>Stock</surname><given-names>M</given-names></string-name>, <string-name><surname>Criel</surname><given-names>B</given-names></string-name></person-group><etal>et al</etal><article-title>Predicting bacteriophage hosts based on sequences of annotated receptor-binding proteins</article-title>. <source>Sci Rep</source><year>2021</year>;<volume>11</volume>:<fpage>1</fpage>–<lpage>14</lpage>.<pub-id pub-id-type="pmid">33414495</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Brüssow</surname><given-names>H</given-names></string-name>, <string-name><surname>Desiere</surname><given-names>F.</given-names></string-name></person-group><article-title>Comparative phage genomics and the evolution of siphoviridae: insights from dairy phages</article-title>. <source>Mol Microbiol</source><year>2001</year>;<volume>39</volume>:<fpage>213</fpage>–<lpage>22</lpage>.<pub-id pub-id-type="pmid">11136444</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cantu</surname><given-names>VA</given-names></string-name>, <string-name><surname>Salamon</surname><given-names>P</given-names></string-name>, <string-name><surname>Seguritan</surname><given-names>V</given-names></string-name></person-group><etal>et al</etal><article-title>PhANNs, a fast and accurate tool and web server to classify phage structural proteins</article-title>. <source>PLoS Comput Biol</source><year>2020</year>;<volume>16</volume>:<fpage>e1007845</fpage>.<pub-id pub-id-type="pmid">33137102</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Charoenkwan</surname><given-names>P</given-names></string-name>, <string-name><surname>Kanthawong</surname><given-names>S</given-names></string-name>, <string-name><surname>Schaduangrat</surname><given-names>N</given-names></string-name></person-group><etal>et al</etal><article-title>PVPred-SCM: improved prediction and analysis of phage virion proteins using a scoring card method</article-title>. <source>Cells</source><year>2020a</year>;<volume>9</volume>:<fpage>353</fpage>.<pub-id pub-id-type="pmid">32028709</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Charoenkwan</surname><given-names>P</given-names></string-name>, <string-name><surname>Nantasenamat</surname><given-names>C</given-names></string-name>, <string-name><surname>Hasan</surname><given-names>M</given-names></string-name></person-group><etal>et al</etal><article-title>Meta-iPVP: a sequence-based meta-predictor for improving the prediction of phage virion proteins using effective feature representation</article-title>. <source>J Comput Aided Mol Des</source><year>2020b</year>;<volume>34</volume>:<fpage>1105</fpage>–<lpage>16</lpage>.<pub-id pub-id-type="pmid">32557165</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cobián Güemes</surname><given-names>AG</given-names></string-name>, <string-name><surname>Youle</surname><given-names>M</given-names></string-name>, <string-name><surname>Cantú</surname><given-names>VA</given-names></string-name></person-group><etal>et al</etal><article-title>Viruses as winners in the game of life</article-title>. <source>Annu Rev Virol</source><year>2016</year>;<volume>3</volume>:<fpage>197</fpage>–<lpage>214</lpage>.<pub-id pub-id-type="pmid">27741409</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B11">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Devlin</surname><given-names>J</given-names></string-name>, <string-name><surname>Chang</surname><given-names>M-W</given-names></string-name>, <string-name><surname>Lee</surname><given-names>K</given-names></string-name></person-group><etal>et al</etal> Bert: pre-training of deep bidirectional transformers for language understanding. <italic toggle="yes">arXiv preprint arXiv:1810.04805</italic>. <year>2018</year>.</mixed-citation>
    </ref>
    <ref id="btad229-B12">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Dick</surname><given-names>K</given-names></string-name>, <string-name><surname>Green</surname><given-names>JR.</given-names></string-name></person-group> Chaos game representations &amp; deep learning for proteome-wide protein prediction. In: <italic toggle="yes">2020 IEEE 20th International Conference on Bioinformatics and Bioengineering (BIBE)</italic>, pp. <fpage>115</fpage>–<lpage>21</lpage>. <publisher-name>IEEE</publisher-name>, <year>2020</year>.</mixed-citation>
    </ref>
    <ref id="btad229-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ding</surname><given-names>H</given-names></string-name>, <string-name><surname>Feng</surname><given-names>P-M</given-names></string-name>, <string-name><surname>Chen</surname><given-names>W</given-names></string-name></person-group><etal>et al</etal><article-title>Identification of bacteriophage virion proteins by the ANOVA feature selection and analysis</article-title>. <source>Mol Biosyst</source><year>2014</year>;<volume>10</volume>:<fpage>2229</fpage>–<lpage>35</lpage>.<pub-id pub-id-type="pmid">24931825</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B14">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Dosovitskiy</surname><given-names>A</given-names></string-name>, <string-name><surname>Beyer</surname><given-names>L</given-names></string-name>, <string-name><surname>Kolesnikov</surname><given-names>A</given-names></string-name></person-group><etal>et al</etal> An image is worth 16×16 words: transformers for image recognition at scale. In: <italic toggle="yes">International Conference on Learning Representations</italic>. <year>2020</year>.</mixed-citation>
    </ref>
    <ref id="btad229-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Eloe-Fadrosh</surname><given-names>EA.</given-names></string-name></person-group><article-title>Towards a genome-based virus taxonomy</article-title>. <source>Nat Microbiol</source><year>2019</year>;<volume>4</volume>:<fpage>1249</fpage>–<lpage>50</lpage>.<pub-id pub-id-type="pmid">31337890</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Emerson</surname><given-names>JB</given-names></string-name>, <string-name><surname>Thomas</surname><given-names>BC</given-names></string-name>, <string-name><surname>Andrade</surname><given-names>K</given-names></string-name></person-group><etal>et al</etal><article-title>Dynamic viral populations in hypersaline systems as revealed by metagenomic assembly</article-title>. <source>Appl Environ Microbiol</source><year>2012</year>;<volume>78</volume>:<fpage>6309</fpage>–<lpage>20</lpage>.<pub-id pub-id-type="pmid">22773627</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Fang</surname><given-names>Z</given-names></string-name>, <string-name><surname>Feng</surname><given-names>T</given-names></string-name>, <string-name><surname>Zhou</surname><given-names>H</given-names></string-name></person-group><etal>et al</etal><article-title>DeePVP: identification and classification of phage virion proteins using deep learning</article-title>. <source>Gigascience</source><year>2022</year>;<volume>11</volume>:<fpage>giac076</fpage>.<pub-id pub-id-type="pmid">35950840</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Fang</surname><given-names>Z</given-names></string-name>, <string-name><surname>Zhou</surname><given-names>H.</given-names></string-name></person-group><article-title>VirionFinder: identification of complete and partial prokaryote virus virion protein from virome data using the sequence and biochemical properties of amino acids</article-title>. <source>Front Microbiol</source><year>2021</year>;<volume>12</volume>:<fpage>615711</fpage>.<pub-id pub-id-type="pmid">33613485</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Feng</surname><given-names>P-M</given-names></string-name>, <string-name><surname>Ding</surname><given-names>H</given-names></string-name>, <string-name><surname>Chen</surname><given-names>W</given-names></string-name></person-group><etal>et al</etal><article-title>Naive Bayes classifier with feature selection to identify phage virion proteins</article-title>. <source>Comput Math Methods Med</source><year>2013</year>;<volume>2013</volume>:<fpage>530696</fpage>.<pub-id pub-id-type="pmid">23762187</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Fernández</surname><given-names>L</given-names></string-name>, <string-name><surname>Rodríguez</surname><given-names>A</given-names></string-name>, <string-name><surname>García</surname><given-names>P.</given-names></string-name></person-group><article-title>Phage or foe: an insight into the impact of viral predation on microbial communities</article-title>. <source>ISME J</source><year>2018</year>;<volume>12</volume>:<fpage>1171</fpage>–<lpage>9</lpage>.<pub-id pub-id-type="pmid">29371652</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Fiser</surname><given-names>A</given-names></string-name>, <string-name><surname>Tusnady</surname><given-names>GE</given-names></string-name>, <string-name><surname>Simon</surname><given-names>I.</given-names></string-name></person-group><article-title>Chaos game representation of protein structures</article-title>. <source>J Mol Graph</source><year>1994</year>;<volume>12</volume>:<fpage>302</fpage>–<lpage>4</lpage>.<pub-id pub-id-type="pmid">7696222</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B22">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Ghiasi</surname><given-names>A</given-names></string-name>, <string-name><surname>Kazemi</surname><given-names>H</given-names></string-name>, <string-name><surname>Borgnia</surname><given-names>E</given-names></string-name></person-group><etal>et al</etal> What do vision transformers learn? A visual exploration. <italic toggle="yes">arXiv preprint arXiv:2212.06727</italic>. <year>2022</year>.</mixed-citation>
    </ref>
    <ref id="btad229-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Han</surname><given-names>H</given-names></string-name>, <string-name><surname>Zhu</surname><given-names>W</given-names></string-name>, <string-name><surname>Ding</surname><given-names>C</given-names></string-name></person-group><etal>et al</etal><article-title>iPVP-MCV: a multi-classifier voting model for the accurate identification of phage virion proteins</article-title>. <source>Symmetry</source><year>2021</year>;<volume>13</volume>:<fpage>1506</fpage>.</mixed-citation>
    </ref>
    <ref id="btad229-B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hoang</surname><given-names>T</given-names></string-name>, <string-name><surname>Yin</surname><given-names>C</given-names></string-name>, <string-name><surname>Yau</surname><given-names>SS-T.</given-names></string-name></person-group><article-title>Numerical encoding of DNA sequences by chaos game representation with application in similarity comparison</article-title>. <source>Genomics</source><year>2016</year>;<volume>108</volume>:<fpage>134</fpage>–<lpage>42</lpage>.<pub-id pub-id-type="pmid">27538895</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hockenberry</surname><given-names>AJ</given-names></string-name>, <string-name><surname>Wilke</surname><given-names>CO.</given-names></string-name></person-group><article-title>BACPHLIP: predicting bacteriophage lifestyle from conserved protein domains</article-title>. <source>PeerJ</source><year>2021</year>;<volume>9</volume>:<fpage>e11396</fpage>.<pub-id pub-id-type="pmid">33996289</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B26">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Howard-Varona</surname><given-names>C</given-names></string-name>, <string-name><surname>Hargreaves</surname><given-names>KR</given-names></string-name>, <string-name><surname>Abedon</surname><given-names>ST</given-names></string-name></person-group><etal>et al</etal><article-title>Lysogeny in nature: mechanisms, impact and ecology of temperate phages</article-title>. <source>ISME J</source><year>2017</year>;<volume>11</volume>:<fpage>1511</fpage>–<lpage>20</lpage>.<pub-id pub-id-type="pmid">28291233</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B27">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hyatt</surname><given-names>D</given-names></string-name>, <string-name><surname>Chen</surname><given-names>G-L</given-names></string-name>, <string-name><surname>LoCascio</surname><given-names>PF</given-names></string-name></person-group><etal>et al</etal><article-title>Prodigal: prokaryotic gene recognition and translation initiation site identification</article-title>. <source>BMC Bioinformatics</source><year>2010</year>;<volume>11</volume>:<fpage>1</fpage>–<lpage>11</lpage>.<pub-id pub-id-type="pmid">20043860</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B28">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Jeffrey</surname><given-names>HJ.</given-names></string-name></person-group><article-title>Chaos game representation of gene structure</article-title>. <source>Nucleic Acids Res</source><year>1990</year>;<volume>18</volume>:<fpage>2163</fpage>–<lpage>70</lpage>.<pub-id pub-id-type="pmid">2336393</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B29">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kabir</surname><given-names>M</given-names></string-name>, <string-name><surname>Nantasenamat</surname><given-names>C</given-names></string-name>, <string-name><surname>Kanthawong</surname><given-names>S</given-names></string-name></person-group><etal>et al</etal><article-title>Large-scale comparative review and assessment of computational methods for phage virion proteins identification</article-title>. <source>Excli J</source><year>2022</year>;<volume>21</volume>:<fpage>11</fpage>–<lpage>29</lpage>.<pub-id pub-id-type="pmid">35145365</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B30">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lee</surname><given-names>S-E</given-names></string-name>, <string-name><surname>Lee</surname><given-names>D-Y</given-names></string-name>, <string-name><surname>Lee</surname><given-names>W-G</given-names></string-name></person-group><etal>et al</etal><article-title>Osong public health and research perspectives</article-title>. <source>Osong Public Health Res Perspect</source><year>2019</year>;<volume>10</volume>:<fpage>295</fpage>–<lpage>306</lpage>.<pub-id pub-id-type="pmid">31673491</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B31">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Li</surname><given-names>W</given-names></string-name>, <string-name><surname>Godzik</surname><given-names>A.</given-names></string-name></person-group><article-title>Cd-hit: a fast program for clustering and comparing large sets of protein or nucleotide sequences</article-title>. <source>Bioinformatics</source><year>2006</year>;<volume>22</volume>:<fpage>1658</fpage>–<lpage>9</lpage>.<pub-id pub-id-type="pmid">16731699</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B32">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Löchel</surname><given-names>HF</given-names></string-name>, <string-name><surname>Eger</surname><given-names>D</given-names></string-name>, <string-name><surname>Sperlea</surname><given-names>T</given-names></string-name></person-group><etal>et al</etal><article-title>Deep learning on chaos game representation for proteins</article-title>. <source>Bioinformatics</source><year>2020</year>;<volume>36</volume>:<fpage>272</fpage>–<lpage>9</lpage>.<pub-id pub-id-type="pmid">31225868</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B33">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Löchel</surname><given-names>HF</given-names></string-name>, <string-name><surname>Heider</surname><given-names>D.</given-names></string-name></person-group><article-title>Chaos game representation and its applications in bioinformatics</article-title>. <source>Comput Struct Biotechnol J</source><year>2021</year>;<volume>19</volume>:<fpage>6263</fpage>–<lpage>71</lpage>.<pub-id pub-id-type="pmid">34900136</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B34">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lyon</surname><given-names>J.</given-names></string-name></person-group><article-title>Phage therapy’s role in combating antibiotic-resistant pathogens</article-title>. <source>JAMA</source><year>2017</year>;<volume>318</volume>:<fpage>1746</fpage>–<lpage>8</lpage>.<pub-id pub-id-type="pmid">29071339</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B35">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Manavalan</surname><given-names>B</given-names></string-name>, <string-name><surname>Shin</surname><given-names>TH</given-names></string-name>, <string-name><surname>Lee</surname><given-names>G.</given-names></string-name></person-group><article-title>PVP-SVM: sequence-based prediction of phage virion proteins using a support vector machine</article-title>. <source>Front Microbiol</source><year>2018</year>;<volume>9</volume>:<fpage>476</fpage>.<pub-id pub-id-type="pmid">29616000</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B36">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Meng</surname><given-names>C</given-names></string-name>, <string-name><surname>Zhang</surname><given-names>J</given-names></string-name>, <string-name><surname>Ye</surname><given-names>X</given-names></string-name></person-group><etal>et al</etal><article-title>Review and comparative analysis of machine learning-based phage virion protein identification methods</article-title>. <source>Biochim Biophys Acta Proteins Proteom</source><year>2020</year>;<volume>1868</volume>:<fpage>140406</fpage>.<pub-id pub-id-type="pmid">32135196</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B37">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Menouni</surname><given-names>R</given-names></string-name>, <string-name><surname>Hutinet</surname><given-names>G</given-names></string-name>, <string-name><surname>Petit</surname><given-names>M-A</given-names></string-name></person-group><etal>et al</etal><article-title>Bacterial genome remodeling through bacteriophage recombination</article-title>. <source>FEMS Microbiol Lett</source><year>2015</year>;<volume>362</volume>:<fpage>1</fpage>–<lpage>10</lpage>.</mixed-citation>
    </ref>
    <ref id="btad229-B38">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Nami</surname><given-names>Y</given-names></string-name>, <string-name><surname>Imeni</surname><given-names>N</given-names></string-name>, <string-name><surname>Panahi</surname><given-names>B.</given-names></string-name></person-group><article-title>Application of machine learning in bacteriophage research</article-title>. <source>BMC Microbiol</source><year>2021</year>;<volume>21</volume>:<fpage>1</fpage>–<lpage>8</lpage>.<pub-id pub-id-type="pmid">33386072</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B39">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Pan</surname><given-names>Y</given-names></string-name>, <string-name><surname>Gao</surname><given-names>H</given-names></string-name>, <string-name><surname>Lin</surname><given-names>H</given-names></string-name></person-group><etal>et al</etal><article-title>Identification of bacteriophage virion proteins using multinomial naive Bayes with g-gap feature tree</article-title>. <source>IJMS</source><year>2018</year>;<volume>19</volume>:<fpage>1779</fpage>.<pub-id pub-id-type="pmid">29914091</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B40">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Petti</surname><given-names>S</given-names></string-name>, <string-name><surname>Eddy</surname><given-names>SR.</given-names></string-name></person-group><article-title>Constructing benchmark test sets for biological sequence analysis using independent set algorithms</article-title>. <source>PLoS Comput Biol</source><year>2022</year>;<volume>18</volume>:<fpage>e1009492</fpage>.<pub-id pub-id-type="pmid">35255082</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B41">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Raghu</surname><given-names>M</given-names></string-name>, <string-name><surname>Unterthiner</surname><given-names>T</given-names></string-name>, <string-name><surname>Kornblith</surname><given-names>S</given-names></string-name></person-group><etal>et al</etal><article-title>Do vision transformers see like convolutional neural networks?</article-title><source>Adv Neural Inf Process Syst</source><year>2021</year>;<volume>34</volume>:<fpage>12116</fpage>–<lpage>28</lpage>.</mixed-citation>
    </ref>
    <ref id="btad229-B42">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ren</surname><given-names>Y</given-names></string-name>, <string-name><surname>Chakraborty</surname><given-names>T</given-names></string-name>, <string-name><surname>Doijad</surname><given-names>S</given-names></string-name></person-group><etal>et al</etal><article-title>Prediction of antimicrobial resistance based on whole-genome sequencing and machine learning</article-title>. <source>Bioinformatics</source><year>2022</year>;<volume>38</volume>:<fpage>325</fpage>–<lpage>34</lpage>.<pub-id pub-id-type="pmid">34613360</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B43">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Roux</surname><given-names>S</given-names></string-name>, <string-name><surname>Enault</surname><given-names>F</given-names></string-name>, <string-name><surname>Hurwitz</surname><given-names>BL</given-names></string-name></person-group><etal>et al</etal><article-title>VirSorter: mining viral signal from microbial genomic data</article-title>. <source>PeerJ</source><year>2015</year>;<volume>3</volume>:<fpage>e985</fpage>.<pub-id pub-id-type="pmid">26038737</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B44">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ru</surname><given-names>X</given-names></string-name>, <string-name><surname>Li</surname><given-names>L</given-names></string-name>, <string-name><surname>Wang</surname><given-names>C.</given-names></string-name></person-group><article-title>Identification of phage viral proteins with hybrid sequence features</article-title>. <source>Front Microbiol</source><year>2019</year>;<volume>10</volume>:<fpage>507</fpage>.<pub-id pub-id-type="pmid">30972038</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B45">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Seguritan</surname><given-names>V</given-names></string-name>, <string-name><surname>Alves</surname><given-names>N</given-names><suffix>Jr</suffix></string-name>, <string-name><surname>Arnoult</surname><given-names>M</given-names></string-name></person-group><etal>et al</etal><article-title>Artificial neural networks trained to detect viral and phage structural proteins</article-title>. <source>PLoS Comput Biol</source><year>2012</year>;8(8):e1002657.</mixed-citation>
    </ref>
    <ref id="btad229-B46">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Shang</surname><given-names>J</given-names></string-name>, <string-name><surname>Sun</surname><given-names>Y.</given-names></string-name></person-group><article-title>Predicting the hosts of prokaryotic viruses using GCN-based semi-supervised learning</article-title>. <source>BMC Biol</source><year>2021</year>;<volume>19</volume>:<fpage>1</fpage>–<lpage>15</lpage>.<pub-id pub-id-type="pmid">33407428</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B47">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Shang</surname><given-names>J</given-names></string-name>, <string-name><surname>Sun</surname><given-names>Y.</given-names></string-name></person-group><article-title>CHERRY: a computational metHod for accuratE pRediction of virus–pRokarYotic interactions using a graph encoder–decoder model</article-title>. <source>Brief Bioinform</source><year>2022</year>;<volume>23</volume>:<fpage>bbac182</fpage>.<pub-id pub-id-type="pmid">35595715</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B48">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sinha</surname><given-names>A</given-names></string-name>, <string-name><surname>Eniyan</surname><given-names>K</given-names></string-name>, <string-name><surname>Manohar</surname><given-names>P</given-names></string-name></person-group><etal>et al</etal><article-title>Characterization and genome analysis of B1 sub-cluster mycobacteriophage PDRPxv</article-title>. <source>Virus Res</source><year>2020</year>;<volume>279</volume>:<fpage>197884</fpage>.<pub-id pub-id-type="pmid">31981773</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B49">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Steinbacher</surname><given-names>S</given-names></string-name>, <string-name><surname>Baxa</surname><given-names>U</given-names></string-name>, <string-name><surname>Miller</surname><given-names>S</given-names></string-name></person-group><etal>et al</etal><article-title>Crystal structure of phage P22 tailspike protein complexed with Salmonella sp. O-antigen receptors</article-title>. <source>Proc Natl Acad Sci USA</source><year>1996</year>;<volume>93</volume>:<fpage>10584</fpage>–<lpage>8</lpage>.<pub-id pub-id-type="pmid">8855221</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B50">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Stummeyer</surname><given-names>K</given-names></string-name>, <string-name><surname>Dickmanns</surname><given-names>A</given-names></string-name>, <string-name><surname>Mühlenhoff</surname><given-names>M</given-names></string-name></person-group><etal>et al</etal><article-title>Crystal structure of the polysialic acid–degrading endosialidase of bacteriophage K1F</article-title>. <source>Nat Struct Mol Biol</source><year>2005</year>;<volume>12</volume>:<fpage>90</fpage>–<lpage>6</lpage>.<pub-id pub-id-type="pmid">15608653</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B51">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Tan</surname><given-names>J-X</given-names></string-name>, <string-name><surname>Dao</surname><given-names>F-Y</given-names></string-name>, <string-name><surname>Lv</surname><given-names>H</given-names></string-name></person-group><etal>et al</etal><article-title>Identifying phage virion proteins by using two-step feature selection methods</article-title>. <source>Molecules</source><year>2018</year>;<volume>23</volume>:<fpage>2000</fpage>.<pub-id pub-id-type="pmid">30103458</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B52">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Vaswani</surname><given-names>A</given-names></string-name>, <string-name><surname>Shazeer</surname><given-names>N</given-names></string-name>, <string-name><surname>Parmar</surname><given-names>N</given-names></string-name></person-group><etal>et al</etal> Attention is all you need. In: <italic toggle="yes">Advances in Neural Information Processing Systems</italic>, pp. <fpage>5998</fpage>–<lpage>6008</lpage>. <year>2017</year>.</mixed-citation>
    </ref>
    <ref id="btad229-B53">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wang</surname><given-names>L-F</given-names></string-name>, <string-name><surname>Yu</surname><given-names>M.</given-names></string-name></person-group><article-title>Epitope identification and discovery using phage display libraries: applications in vaccine development and diagnostics</article-title>. <source>Curr Drug Targets</source><year>2004</year>;<volume>5</volume>:<fpage>1</fpage>–<lpage>15</lpage>.<pub-id pub-id-type="pmid">14738215</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B54">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Wang</surname><given-names>Q</given-names></string-name>, <string-name><surname>Li</surname><given-names>B</given-names></string-name>, <string-name><surname>Xiao</surname><given-names>T</given-names></string-name></person-group><etal>et al</etal> Learning deep transformer models for machine translation. In: <italic toggle="yes">Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics</italic>, pp. <fpage>1810</fpage>–<lpage>22</lpage>. <year>2019</year>.</mixed-citation>
    </ref>
    <ref id="btad229-B55">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zhang</surname><given-names>L</given-names></string-name>, <string-name><surname>Zhang</surname><given-names>C</given-names></string-name>, <string-name><surname>Gao</surname><given-names>R</given-names></string-name></person-group><etal>et al</etal><article-title>An ensemble method to distinguish bacteriophage virion from non-virion proteins based on protein sequence characteristics</article-title>. <source>Int J Mol Sci</source><year>2015</year>;<volume>16</volume>:<fpage>21734</fpage>–<lpage>58</lpage>.<pub-id pub-id-type="pmid">26370987</pub-id></mixed-citation>
    </ref>
    <ref id="btad229-B56">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zhu</surname><given-names>Y</given-names></string-name>, <string-name><surname>Shang</surname><given-names>J</given-names></string-name>, <string-name><surname>Peng</surname><given-names>C</given-names></string-name></person-group><etal>et al</etal><article-title>Phage family classification under Caudoviricetes: a review of current tools using the latest ICTV classification framework</article-title>. <source>Front Microbiol</source><year>2022</year>;<volume>13</volume>:<fpage>1032186</fpage>.<pub-id pub-id-type="pmid">36590402</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

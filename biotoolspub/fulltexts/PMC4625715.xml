<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Genomics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Genomics</journal-id>
    <journal-title-group>
      <journal-title>BMC Genomics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2164</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">4625715</article-id>
    <article-id pub-id-type="publisher-id">2050</article-id>
    <article-id pub-id-type="doi">10.1186/s12864-015-2050-y</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Methodology Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>VariantMetaCaller: automated fusion of variant calling pipelines for quantitative, precision-based filtering</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Gézsi</surname>
          <given-names>András</given-names>
        </name>
        <address>
          <email>gezsi.andras@gmail.com</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
        <xref ref-type="aff" rid="Aff2"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Bolgár</surname>
          <given-names>Bence</given-names>
        </name>
        <address>
          <email>bolgar@mit.bme.hu</email>
        </address>
        <xref ref-type="aff" rid="Aff2"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Marx</surname>
          <given-names>Péter</given-names>
        </name>
        <address>
          <email>marxp@mit.bme.hu</email>
        </address>
        <xref ref-type="aff" rid="Aff2"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Sarkozy</surname>
          <given-names>Peter</given-names>
        </name>
        <address>
          <email>psarkozy@mit.bme.hu</email>
        </address>
        <xref ref-type="aff" rid="Aff2"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Szalai</surname>
          <given-names>Csaba</given-names>
        </name>
        <address>
          <email>genomika.cs@gmail.com</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Antal</surname>
          <given-names>Péter</given-names>
        </name>
        <address>
          <email>antal@mit.bme.hu</email>
        </address>
        <xref ref-type="aff" rid="Aff2"/>
      </contrib>
      <aff id="Aff1"><label/>Department of Genetics, Cell- and Immunobiology, Semmelweis University, Nagyvárad tér 4, Budapest, H-1089 Hungary </aff>
      <aff id="Aff2"><label/>Department of Measurement and Information Systems, Budapest University of Technology and Economics, Magyar tudósok krt. 2, Budapest, H-1117 Hungary </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>28</day>
      <month>10</month>
      <year>2015</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>28</day>
      <month>10</month>
      <year>2015</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2015</year>
    </pub-date>
    <volume>16</volume>
    <elocation-id>875</elocation-id>
    <history>
      <date date-type="received">
        <day>24</day>
        <month>6</month>
        <year>2015</year>
      </date>
      <date date-type="accepted">
        <day>6</day>
        <month>10</month>
        <year>2015</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© Gézsi et al. 2015</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold> This article is distributed under the terms of the Creative Commons Attribution 4.0 International License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The Creative Commons Public Domain Dedication waiver(<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p>The low concordance between different variant calling methods still poses a challenge for the wide-spread application of next-generation sequencing in research and clinical practice. A wide range of variant annotations can be used for filtering call sets in order to improve the precision of the variant calls, but the choice of the appropriate filtering thresholds is not straightforward. Variant quality score recalibration provides an alternative solution to hard filtering, but it requires large-scale, genomic data.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>We evaluated germline variant calling pipelines based on BWA and Bowtie 2 aligners in combination with GATK UnifiedGenotyper, GATK HaplotypeCaller, FreeBayes and SAMtools variant callers, using simulated and real benchmark sequencing data (NA12878 with Illumina Platinum Genomes). We argue that these pipelines are not merely discordant, but they extract complementary useful information.</p>
        <p>We introduce VariantMetaCaller to test the hypothesis that the automated fusion of measurement related information allows better performance than the recommended hard-filtering settings or recalibration and the fusion of the individual call sets without using annotations. VariantMetaCaller uses Support Vector Machines to combine multiple information sources generated by variant calling pipelines and estimates probabilities of variants.</p>
        <p>This novel method had significantly higher sensitivity and precision than the individual variant callers in all target region sizes, ranging from a few hundred kilobases to whole exomes. We also demonstrated that VariantMetaCaller supports a quantitative, precision based filtering of variants under wider conditions. Specifically, the computed probabilities of the variants can be used to order the variants, and for a given threshold, probabilities can be used to estimate precision. Precision then can be directly translated to the number of true called variants, or equivalently, to the number of false calls, which allows finding problem-specific balance between sensitivity and precision.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p>VariantMetaCaller can be applied to small target regions and whole exomes as well, and it can be used in cases of organisms for which highly accurate variant call sets are not yet available, therefore it can be a viable alternative to hard filtering in cases where variant quality score recalibration cannot be used. VariantMetaCaller is freely available at <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.mit.bme.hu/VariantMetaCaller">http://bioinformatics.mit.bme.hu/VariantMetaCaller</ext-link>.</p>
      </sec>
      <sec>
        <title>Electronic supplementary material</title>
        <p>The online version of this article (doi:10.1186/s12864-015-2050-y) contains supplementary material, which is available to authorized users.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Next-generation sequencing</kwd>
      <kwd>Variant calling</kwd>
      <kwd>Support Vector Machine</kwd>
    </kwd-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2015</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p>The level of uncertainty in next-generation sequencing (NGS) measurements is still higher than what is required for routine clinical use, even for germline variants in targeted gene panels and exome sequencing [<xref ref-type="bibr" rid="CR1">1</xref>]. The measurement process includes a complex computational variant calling pipeline, which contains many alternative elements with various parameters, heavily influencing the unique characteristics and performance of the whole procedure. Several studies showed that (1) currently there is no single best general individual variant calling method with both superior sensitivity and precision at all circumstances [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR2">2</xref>], and (2) there are significant discrepancies between commonly used variant calling pipelines, even when applied to the same set of sequence data [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR3">3</xref>–<xref ref-type="bibr" rid="CR5">5</xref>]. An <italic>ad hoc</italic> approach is the fine-tuning of the pipeline for the actual measurement, which requires substantial expertise and time, also hindering standardization and benchmarking.</p>
    <p>Generally, variant callers aim to be sensitive, call variants “aggressively” and provide annotations to the user that can help distinguish true variants from false calls originating from sequencing, alignment or data processing artefacts. To further improve the sensitivity of the pipeline, one can use multiple variant calling methods, as it is a well-known fact that different callers produce different results [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR3">3</xref>–<xref ref-type="bibr" rid="CR7">7</xref>]. The rationale behind this practice is that the consequence of a false negative variant call (i.e. not discovering a true variant) is usually more serious than the consequence of a false positive (i.e. unreal variant claimed to be real), especially in clinical settings. The union of different call sets (called by different variant callers) could be taken for maximum sensitivity. However, this would result in higher false positive rate, i.e. a decrease in precision. Variants could, in principle, be validated experimentally using complementary measurement methods, but only at the cost of losing the high-throughput efficiency of NGS. Therefore, an application-specific balance between sensitivity and precision is needed.</p>
    <p>A possible solution for selecting the appropriate list of variants is the use of <italic>hard filters</italic>. Variant callers produce a rich set of annotations that provide abundant information about mapping quality and various biases. For example, the evidence for a mutation is usually stronger at higher read depths [<xref ref-type="bibr" rid="CR5">5</xref>]. A bias in the position of the variant in the read or a bias in the number of reads or base quality scores supporting an alternate allele may denote mapping problems and can be used to identify false variants. However, annotations have complex interrelationships [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR5">5</xref>], they depend on the experimental settings, and in most cases, are difficult to interpret [<xref ref-type="bibr" rid="CR2">2</xref>]. It is often unclear what an adequate hard filter is; beyond general guidelines each specific study requires experimenting and empirical testing. Besides, most annotation classes depend on the actual read depth, and a filter setting which works for low coverage may not perform equally well for high coverage. The non-uniform coverage often seen in NGS studies [<xref ref-type="bibr" rid="CR8">8</xref>] makes hard filtering a challenging task. Furthermore, it is also difficult to assess the resulting precision of the hard-filtered variant set.</p>
    <p>An automated approach to improve precision of variant calling, applicable at a larger scale, is the use of variant quality score recalibration (VQSR) [<xref ref-type="bibr" rid="CR9">9</xref>], which can be used to reclassify variant qualities. However, it requires a large amount of data: it can be used only for whole genomes or for at least 30 whole exomes according to GATK Best Practices. If a smaller region is sequenced, one can rely only on manual hard filters. Besides, VQSR uses gold standard, “error-free” variant sets as reference. In case of organisms for which these resources are unavailable, VQSR cannot be used in a straightforward manner.</p>
    <p>In fact, automated recalibration can be also applied using abundant annotations of multiple pipelines instead of large amount of data: in this case the heterogeneous, intermediate annotations from multiple methods can be exploited for automated “recalibration”. Indeed, this forms our central hypothesis that popular variant calling pipelines are not merely discordant, but the generated intermediate annotations contain complementary high-dimensional information, which can be combined into a better performing overall model. Our further hypothesis is that fusion of the intermediate annotation information allows the prediction of probabilities of variants in areas not accessible by current approaches.</p>
    <p>Based on these assumptions, we constructed VariantMetaCaller, which combines information from various variant callers using Support Vector Machines (SVM) (for an earlier related method, see [<xref ref-type="bibr" rid="CR10">10</xref>]). Figure <xref rid="Fig1" ref-type="fig">1</xref> shows the earlier approaches, the current study design including data sets and evaluations, and the conceptual overview of VariantMetaCaller. This novel method predicts the probability that a variant is a true genetic variant and not a sequencing artefact, which provides a principled solution for quantitative support for variant filtering. Specifically, probabilities can be used to order the variants, and for a given threshold, probabilities can be used to estimate precision. Precision then can be directly translated to the number of true called variants, or equivalently to the number of false calls, which allows finding problem-specific balance between sensitivity and precision, i.e. it allows a quantitative, <italic>precision-based filtering</italic>.
<fig id="Fig1"><label>Fig. 1</label><caption><p>Earlier approaches, current study design including data sets and evaluations, and the conceptual overview of VariantMetaCaller. <italic>Study design</italic>: Simulated sequences of various target region sizes, and real sequence data covering the whole exome of NA12878 were aligned by BWA and Bowtie 2 to the human genome. Variants were called by GATK HaplotypeCaller, GATK UnifiedGenotyper, FreeBayes and SAMtools. <italic>Evaluation</italic>: Variant calling pipelines were compared by calculating concordance rates. Precision-recall curves were plotted and the area under the precision-recall curves was calculated for each method. <italic>Earlier approaches</italic>: Hard filters can be applied to filter variants by specifying annotation cutoffs. VQSR can be applied to recalibrate variant qualities based on gold standard reference data and variant annotations. BAYSIC combines the unfiltered variant calls by late integration. <italic>Overview of VariantMetaCaller</italic>: VariantMetaCaller (1) combines the unfiltered call sets by SVMs that use variant annotations as features and (2) estimates the probability of each variants being real. The probabilistic output of VQSR and VariantMetaCaller can be used to estimate FDR at each probability cutoff and to optimally select the filtered variants with respect to the cost function of the researchers. AUPRC = Area under the precision-recall curve, FDR = false discovery rate, NGS = Next-generation sequencing, SVM = Support Vector Machine</p></caption><graphic xlink:href="12864_2015_2050_Fig1_HTML" id="MO1"/></fig></p>
    <p>Automated fusion of multiple variant callers has been seen as a promising direction to exploit hidden information with more advanced statistical models. Until now, the arising problem of high-dimensionality and heterogeneity has remained unsolved in earlier fusion approaches, for example BAYSIC [<xref ref-type="bibr" rid="CR11">11</xref>], used only the predicted calls, implementing late information fusion. To cope with high-dimensionality, a few SVM-based methods have already been introduced, such as the unpublished Ensemble method [<xref ref-type="bibr" rid="CR12">12</xref>] and the one used for the Exome Sequencing Project [<xref ref-type="bibr" rid="CR13">13</xref>]. The method of the Exome Sequencing Project was not developed to utilize the combination of multiple variant-callers, and it determines annotation value cutoffs for defining negative training examples and gold standard data sets for defining positive training examples [<xref ref-type="bibr" rid="CR14">14</xref>]. VariantMetaCaller is conceptually similar to Ensemble, but the latter is limited to single-sample variant sets, and as to our knowledge, does not produce a quantitative score and therefore cannot be used to balance between sensitivity and precision.</p>
    <p>In this paper, we first overview the main characteristics of synthetic data sets used for evaluation throughout the paper. Second, we report the performance of various variant calling methods with special emphasis on their heterogeneity and concordance. Next, we present a systematic evaluation and comparison of selected previous variant calling pipelines against VariantMetaCaller using both synthetic and real sequencing data. Specifically, we investigate the accuracy of the predicted probabilities of the variants showing the superiority of VariantMetaCaller over existing solutions.</p>
  </sec>
  <sec id="Sec2">
    <title>Results and discussion</title>
    <sec id="Sec3">
      <title>Results on simulated sequencing data</title>
      <p>We created synthetic sequencing data with known variations in the reference genome to compare the performance of previous variant calling pipelines to that of our method. We chose chromosome 17 for illustrative purposes and created artificial diploid chromosomes that contained randomly selected exonic variants from the publicly available Exome Aggregation Consortium variant call set (see <xref rid="Sec10" ref-type="sec">Methods</xref>). The target regions were all exons of the 17th chromosome with a total size of around 3.47 Mbp. We created 50 independent samples and arranged them into five distinct groups. The total number of SNPs and indels was 14,384 and 1,852, respectively, and the average number (and standard deviation) of polymorphic SNPs and indels was 3,132 (29.5) and 455 (12.9), respectively in the generated samples. We simulated paired-end sequencing of the artificial chromosomes at various depths of coverage from very low (4×) to high (200×) mean coverage. The simulated sequences contained Illumina-specific sequencing errors (see <xref rid="Sec10" ref-type="sec">Methods</xref>).</p>
      <p>After aligning the sequencing reads with BWA–MEM and Bowtie 2 to the human reference sequence, we called variants on the five sample batches with four different variant callers (GATK HaplotypeCaller, GATK UnifiedGenotyper, FreeBayes and SAMtools) (see <xref rid="Sec10" ref-type="sec">Methods</xref>).</p>
      <sec id="Sec4">
        <title>Performance and concordance of individual variant callers</title>
        <p>Our results showed, in agreement with previous findings [<xref ref-type="bibr" rid="CR2">2</xref>–<xref ref-type="bibr" rid="CR4">4</xref>, <xref ref-type="bibr" rid="CR6">6</xref>], that there was not a single best general individual variant calling method with superior sensitivity and precision at all read depths, neither for SNPs nor indels, although HaplotypeCaller performed quite well in case of indels and was the most precise in case of SNPs (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Supplementary results).</p>
        <p>Additionally, several studies showed that there were significant discrepancies between commonly used variant calling pipelines, even when applied to the same set of sequence data [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR3">3</xref>–<xref ref-type="bibr" rid="CR5">5</xref>]. To understand and utilize this phenomenon, we systematically evaluated the concordance rates of the four variant callers, with a special focus on the impact of coverage depth. This step is essential, because our newly developed method, VariantMetaCaller, is heavily based on the concordance and certain complementarity of the unfiltered call sets of the individual variant callers.</p>
        <p>First, we quantified the concordance rates of the individual variant callers by counting the number of methods calling a given variant. The percentage of concordantly called variants by all four variant callers were considerably higher for SNPs than for indels (Fig. <xref rid="Fig2" ref-type="fig">2</xref>). In case of SNPs, the percentage of concordant variant calls roughly increased from approximately 78−80 <italic>%</italic> seen in low coverage to 90−95 <italic>%</italic> in high coverage, depending on the aligner. Conversely, the percentage of singly-called variants roughly decreased with increasing coverage, from approximately 7−10 <italic>%</italic> in low coverage to 1−2 <italic>%</italic> in high coverage (Fig. <xref rid="Fig2" ref-type="fig">2</xref><xref rid="Fig2" ref-type="fig">a</xref>). At low depths, the frequency of the singly-called variants was the second highest, but with increasing coverage, this category became the least frequent.
<fig id="Fig2"><label>Fig. 2</label><caption><p>Fraction of all, true and false variants called by a different number of variant callers in case of simulated data. Sequencing reads covering the exonic region of a selected chromosome were simulated for 50 artificially generated samples with pre-known variations to the human genome (i.e. reference variants). Variants were called on the BWA–MEM and Bowtie 2 aligned reads by HaplotypeCaller, UnifiedGenotyper, FreeBayes and SAMtools. Stacked bars with different colors represent the fraction of all (<bold>a</bold>), true (<bold>b</bold>) and false (<bold>c</bold>) variants with respect to the reference variants, called by a given number of variant callers at various coverage depths (see the common legend on the bottom). Each panel is divided into four subpanels, where the top pair represents: SNPs, bottom pair: indels, left column: BWA alignment, right-column: Bowtie 2 alignment</p></caption><graphic xlink:href="12864_2015_2050_Fig2_HTML" id="MO2"/></fig></p>
        <p>In case of indels, the variant callers produced markedly different results. Irrespective of the coverage depth, less than the half of the indels were called by all four methods, and the fraction of singly-called variants were above 25 <italic>%</italic>. Furthermore, the frequency of the singly-called variants was the second highest at all depths.</p>
        <p>We also found that above medium coverages, the percentage of fully concordant variants slightly began to drop for both SNPs and indels. These results are in compliance with the findings of Yu and Sun [<xref ref-type="bibr" rid="CR3">3</xref>] and O’Rawe et al. [<xref ref-type="bibr" rid="CR1">1</xref>], but it contradicts the expectation that with increasing read depth the accuracy of variant calling would also increase, which would in turn result in higher concordance between individual variant callers. Although, this is not the main focus of the paper, we show in the supplementary results (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>) that sensitivity and precision change in opposite directions at varying depths. Specifically, for increasing coverage from low to medium depths, sensitivity gain surpassed precision loss alluding to increased accuracy, which also resulted in higher concordance. However, at higher read depths, the sensitivity gain and precision loss was more balanced or even reversed. We suspect that these phenomena are related to different types of statistical errors stemming from small coverage (sample size) and asymptotic errors (biases) of the variant callers, but this requires further investigation.</p>
        <p>The concordance rates were generally lower for variant call sets based on the Bowtie 2 with respect to BWA, alignments, which can be partly explained by the relatively higher accuracy of variant calls based on BWA alignments (for the effect of the aligners on variant calling, see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Supplementary results).</p>
        <p>Next, we restricted variants to only true or false positives, and partitioned the variants according to the number of methods that called them. Figure <xref rid="Fig2" ref-type="fig">2</xref>b and c illustrate the empirical distribution over the partitions. The fraction of true variants was generally the highest for the concordantly called SNPs and indels, and was generally the lowest for singly-called variants apart from very low coverages (Fig. <xref rid="Fig2" ref-type="fig">2</xref><xref rid="Fig2" ref-type="fig">b</xref>). In parallel with this, the fraction of falsely called variants was the highest in the category of the singly-called variants (Fig. <xref rid="Fig2" ref-type="fig">2</xref><xref rid="Fig2" ref-type="fig">c</xref>), and was negligible (&lt;0.01 <italic>%</italic> for SNPs and &lt;0.1 <italic>%</italic> for indels) in the case of highly concordant variants. The fraction of falsely called variants was an order of magnitude higher for indels than for SNPs, reflecting the well-known observation that indel calling is more difficult than SNP calling [<xref ref-type="bibr" rid="CR1">1</xref>] (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Supplementary results). Besides, the fraction of false variants increased with increasing coverage across all depths for indels and above 20× coverage for SNPs. At high coverage the rate of falsely called variants was approximately 2−3.6 <italic>%</italic> for SNPs, and 30−39 <italic>%</italic> for indels depending on the aligner.</p>
        <p>Finally, we calculated the fraction of true variants among variants called by exactly one or by all four methods (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S1). The percentage of true variants among variants called by all four methods was generally high, both for SNPs (&gt;99.83 <italic>%</italic> with BWA and &gt;99.94 <italic>%</italic> with Bowtie 2 alignments) and for indels (&gt;97.6 <italic>%</italic>), irrespective of the coverage depth. Conversely, the fraction of true variants among singly-called variants was significantly lower, and decreased with increasing coverage, both for SNPs (with the exception of very low coverage; &lt;50 <italic>%</italic> above 30× coverage) and especially for indels (&lt;15 <italic>%</italic> above 30× coverage).</p>
        <p>Our novel method, VariantMetaCaller, exploits these observations, and uses the fully concordant variants as positive and the singly-called variants as negative training examples and trains SVMs to separate true variants from potentially erroneously called variants. As Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S1 shows, there is an apparent noise in the training data, specifically the substantial fraction of true variants in the negative training set. Thus, we investigated its effects and found that excluding the negative training examples and including only the positive ones in a one-class SVM framework decreased the performance of VariantMetaCaller. Furthermore, we evaluated the performance of VariantMetaCaller using a filtered training set that was ideal in the sense that it contained only true negative singly-called and true positive fully concordant variants. However, this resulted only in a very low increase in performance (see <xref rid="Sec10" ref-type="sec">Methods</xref> and Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S2). Finally, it can be generally expected that the use of even more variant callers in the VariantMetaCaller framework will mitigate this problem (for the effect of using only 3 callers, see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S1).</p>
      </sec>
      <sec id="Sec5">
        <title>Comparison of VariantMetaCaller to individual variant callers</title>
        <p>VariantMetaCaller combines the results of multiple variant callers based on their statistical properties described earlier. After merging the unfiltered variant calls, the program creates a data set for each input method from annotations generated by the callers coupled with annotations computed by VariantMetaCaller. On these data sets, SVMs are trained separately for SNPs and indels using fully concordant and singly-called variants as positive and negative training examples, respectively. A final SVM score is computed for each variant, which estimates the probability of the variant being “real” (see <xref rid="Sec10" ref-type="sec">Methods</xref>).</p>
        <p>We evaluated the performance of VariantMetaCaller over two different pipeline sets based on the choice of the alignment software, the four variant calling methods were run on either the BWA or Bowtie 2 aligned reads. Specifically, we calculated the precision and the sensitivity (also known as recall) of all variant callers at each variant quality threshold, and similarly of VariantMetaCaller at each SVM score threshold and plotted sensitivity against precision (see Fig. <xref rid="Fig3" ref-type="fig">3</xref>). For the evaluations, we used the hard filtered call sets of each individual variant caller (see <xref rid="Sec10" ref-type="sec">Methods</xref> and Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Supplementary results). As it can be clearly seen, VariantMetaCaller dominated all variant callers in the precision–sensitivity space, meaning that VariantMetaCaller achieved higher precision at all sensitivity levels than any of the individual variant callers irrespective of the depth of coverage, the aligner and the type of the variants. Furthermore, VariantMetaCaller achieved higher maximum sensitivity as well, albeit the precision dropped sharply at high sensitivity values.
<fig id="Fig3"><label>Fig. 3</label><caption><p>Precision-sensitivity curves at selected coverage depths for simulated data. Precision and sensitivity (recall) was calculated for each variant of the hard filtered call sets of four individual variant callers and for the results of VariantMetaCaller. Precision was plotted against sensitivity for SNPs (<bold>a</bold>) and for indels (<bold>b</bold>) at two selected coverage depths (8× and 200× representing low and high coverage, respectively). The rows differentiate between alignment algorithms and the columns represent different coverage depths. Variant calling was performed on five sample groups each containing ten samples. Bands around lines represent 95 <italic>%</italic> confidence intervals based on the results of the different sample groups. FB = FreeBayes, HC = HaplotypeCaller, ST = SAMtools, UG = UnifiedGenotyper, VMC = VariantMetaCaller</p></caption><graphic xlink:href="12864_2015_2050_Fig3_HTML" id="MO3"/></fig></p>
        <p>As we show in the supplementary results (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S2), the precision of all individual variant callers was relatively high for SNPs (&gt;0.99) as opposed to the precision for indels (0.6−0.95). The precision of VariantMetaCaller was therefore higher for SNPs than for indels.</p>
        <p>We calculated the area under the precision–recall curves (AUPRC), which is a summary statistic that reflects the ability of a score to correctly identify true variants. More specifically, the AUPRC measure can be interpreted as a probability: it equals the fraction of true variants among those variants whose score exceed a randomly selected threshold [<xref ref-type="bibr" rid="CR15">15</xref>]. AUPRC is commonly used to assess the performance in highly imbalanced problems, where true negatives highly outnumber the true positives, such as document search on web, and this also holds in variant calling, where the true negatives virtually span the whole target region. AUPRC is a more informative indicator of performance in these cases than e.g. the area under the receiver operating characteristic curve (AUROC), because AUPRC is not overwhelmed by the huge number of true negatives.</p>
        <p>The AUPRC of VariantMetaCaller was the highest among all methods independently of coverage depth, the aligner or the type of the variants (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S3, Figure S4, Table S3). The difference was strongly statistically significant in the case of all depths and for both aligners (maximum Bonferroni-adjusted p-value in case of SNPs: 0.002, indels: 0.006, paired two-tailed t-test across sample groups; Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S3). As it is expected, the AUPRC was lower at low depths and increased with higher coverage, and for SNPs, the AUPRC was higher at the same depth than for indels. In case of SNPs (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S3A), the individual variant caller with the highest AUPRC varied with different depths and aligners. At the lowest depth, UnifiedGenotyper had the highest AUPRC, but with increasing depth it became the worst. HaplotypeCaller produced the highest AUPRC for indels among the variant callers irrespective of the depth of coverage and the aligner (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S3B).</p>
        <p>Generally, the difference between VariantMetaCaller and HaplotypeCaller was the lowest with the exception of very low depths, and except for SNPs with Bowtie 2 alignment where the best performing method varied depending on the coverage depth. In case of SNPs (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S4A), both FreeBayes and SAMtools showed a relatively high difference at low depths, but these differences decreased sharply at higher coverage. Interestingly, UnifiedGenotyper showed an opposite trend: relatively good performance at low depths turned into the largest difference at higher depths. In case of indels (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S4B), the differences of AUPRC between VariantMetaCaller and HaplotypeCaller, UnifiedGenotyper and FreeBayes decreased slightly with increasing depth, and the differences between VariantMetaCaller and SAMtools increased with increasing depth.</p>
        <p>The observed varying performance of the methods compared to VariantMetaCaller is due to many factors: (1) the relative sensitivity of the individual variant callers to each other (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S5), (2) the trends of the false discovery rates of the individual variant callers (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S6), (3) the varying sensitivity loss and precision change caused by hard filtering (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S7) and (4) the goodness of the variant quality estimation of the variant callers.</p>
        <sec id="Sec6">
          <title>Effects of the aligner</title>
          <p>The variant callers generally achieved higher maximum sensitivity when BWA, as opposed to Bowtie 2, was used for alignment (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S4). Consequently, VariantMetaCaller achieved higher maximum sensitivity and AUPRC when BWA was used at all read depths for both SNPs and indels (Table <xref rid="Tab1" ref-type="table">1</xref> and Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S5). In case of SNPs, the mean difference between maximum sensitivity achieved by BWA and Bowtie 2 alignment across all coverage depths and sample groups was 0.028 (95 % CI: 0.027−0.029). Although the differences seem small, 0.01 <italic>%</italic> gain in sensitivity denotes discovering approximately 144 additional variants in the current experimental setting. In case of indels, the difference between maximum sensitivity was even larger: 0.044 (95 % CI: 0.042−0.046). In the current setting, 0.01 <italic>%</italic> gain in sensitivity denotes discovering approximately 19 additional indels. The overall precision and the AUPRC scores of VariantMetaCaller were also higher in case of BWA alignment than Bowtie 2 alignments for both SNPs and indels (Table <xref rid="Tab1" ref-type="table">1</xref>). The AUPRC differences notably varied with the used aligner in case of SNPs (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S4A), but showed very similar patterns in case of indels (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S4B). For further details of the effects of the aligners, see supplementary results (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>).
<table-wrap id="Tab1"><label>Table 1</label><caption><p>Effects of the differences between BWA and Bowtie 2 alignments on the accuracy of variant calling in simulated data set</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Difference between BWA and Bowtie 2 in terms of</th><th align="left" colspan="3">SNPs</th><th align="left" colspan="3">Indels</th></tr><tr><th align="left"/><th align="left">Mean difference</th><th align="left">95 % CI</th><th align="left"><italic>P</italic>-value</th><th align="left">Mean difference</th><th align="left">95 % CI</th><th align="left"><italic>P</italic>-value</th></tr></thead><tbody><tr><td align="left">Maximum sensitivity of VariantMetaCaller</td><td align="left">0.028</td><td align="left">0.027−0.029</td><td align="left">2.2×10<sup>−16</sup>
</td><td align="left">0.044</td><td align="left">0.042−0.046</td><td align="left">2.2×10<sup>−16</sup>
</td></tr><tr><td align="left">Precision at maximum sensitivity</td><td align="left">0.009</td><td align="left">0.007−0.01</td><td align="left">2.2×10<sup>−16</sup>
</td><td align="left">0.039</td><td align="left">0.025−0.053</td><td align="left">8.6×10<sup>−7</sup>
</td></tr><tr><td align="left">AUPRC of VariantMetaCaller</td><td align="left">0.028</td><td align="left">0.027−0.029</td><td align="left">2.2×10<sup>−16</sup>
</td><td align="left">0.042</td><td align="left">0.040−0.044</td><td align="left">2.2×10<sup>−16</sup>
</td></tr></tbody></table></table-wrap></p>
        </sec>
      </sec>
      <sec id="Sec7">
        <title>Results at various sizes of genomic regions</title>
        <p>In order to demonstrate the applicability of VariantMetaCaller on smaller genomic scales, especially in case of target region sizes that are typical in targeted gene panels, we filtered the full length chromosome to smaller non-overlapping regions, where the exonic length added up to approximately 100 kb, 200 kb, 300 kb and 500 kb, respectively. We selected ten regions for each size and performed the analyses on each region. The number of variants in the regions is shown in Table S6 (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>).</p>
        <p>The AUPRC of VariantMetaCaller was the highest among all methods irrespective of the size of the region, the coverage depth, the aligner and the type of the variants (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S8). The difference was strongly statistically significant in case of all genomic sizes, depths and aligners (maximum Bonferroni-adjusted p-value in case of SNPs: 0.041, indels: 0.005, paired two-tailed t-test across sample groups and different regions of the same size). Similarly to the case of full length chromosome, the AUPRC for SNPs was higher at the same depth than for indels.</p>
        <p>The difference between AUPRC of VariantMetaCaller and each variant caller varied mostly with the coverage depth and showed similar patterns across the different sizes of the target regions and the used aligner (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S9). In case of SNPs, FreeBayes performed generally well, i.e. had the lowest difference of AUPRC compared to that of VariantMetaCaller (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S9A), but in case of indels, HaplotypeCaller performed consistently better (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S9B).</p>
        <p>When the BWA aligner was used instead of Bowtie 2, the AUPRC of VariantMetaCaller was statistically significantly higher: the mean difference of AUPRC across all depths of coverage, sample groups and different regions was 0.032 (95 % CI: 0.03−0.035, p-value: &lt;2.2∗10<sup>−16</sup>, paired two-tailed t-test) and 0.04 (95 % CI: 0.036−0.043, p-value: &lt;2.2∗10<sup>−16</sup>, paired two-tailed t-test) in the case of SNPs and indels, respectively.</p>
        <p>These results demonstrate the validity of VariantMetaCaller also in case of target regions that are typical in targeted gene panels.</p>
      </sec>
    </sec>
    <sec id="Sec8">
      <title>Results on real sequencing data</title>
      <p>We also evaluated VariantMetaCaller on real sequencing data, using the publicly available data set of NA12878, for which a high confident “platinum” quality reference variant call set [<xref ref-type="bibr" rid="CR16">16</xref>] is also available from <italic>Illumina, Inc.</italic>. We aligned the quality filtered sequencing reads with BWA–MEM and Bowtie 2, filtered the alignments to the whole exome, and performed base quality score recalibration and indel realignment according to the GATK Best Practices. The mean coverage depth was approximately 12× in case of both alignments. We called SNPs and indels with the four selected variant callers as before (see <xref rid="Sec10" ref-type="sec">Methods</xref>).</p>
      <p>The concordance of the unfiltered variant call sets called by the individual methods was modest (Table <xref rid="Tab2" ref-type="table">2</xref>). The percentage of SNPs called concordantly by all four variant callers was 88.8 and 84.27 <italic>%</italic> for BWA and Bowtie 2 alignments, respectively. The percentage of variants that were called by only one variant caller was 3.48 <italic>%</italic> for BWA alignments and even higher, 8.83 <italic>%</italic> for Bowtie 2 alignments. The concordance rates were lower for indels: less than the half of all indels were called by all four callers, and the percentage of singly-called variants was 21.36 <italic>%</italic> (BWA) and 20.43 <italic>%</italic> (Bowtie 2).
<table-wrap id="Tab2"><label>Table 2</label><caption><p>Number of unfiltered variants in the real data set called by the individual variant callers</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" colspan="4">Variant found by variant caller</th><th align="left" colspan="4">SNPs</th><th align="left" colspan="4">Indels</th></tr><tr><th align="left" colspan="4"/><th align="left" colspan="2">BWA</th><th align="left" colspan="2">Bowtie 2</th><th align="left" colspan="2">BWA</th><th align="left" colspan="2">Bowtie 2</th></tr><tr><th align="left">HC</th><th align="left">UG</th><th align="left">FreeBayes</th><th align="left">SAMtools</th><th align="left"># of variants</th><th align="left">% of all</th><th align="left"># of variants</th><th align="left">% of all</th><th align="left"># of variants</th><th align="left">% of all</th><th align="left"># of variants</th><th align="left">% of all</th></tr></thead><tbody><tr><td align="left">+</td><td align="left">+</td><td align="left">+</td><td align="left">+</td><td align="left">48297</td><td align="left">88.81 %</td><td align="left">43659</td><td align="left">84.27 %</td><td align="left">2918</td><td align="left">46.73 %</td><td align="left">2958</td><td align="left">49.58 %</td></tr><tr><td align="left">+</td><td align="left">+</td><td align="left">+</td><td align="left"/><td align="left">440</td><td align="left">0.81 %</td><td align="left">297</td><td align="left">0.57 %</td><td align="left">532</td><td align="left">8.52 %</td><td align="left">544</td><td align="left">9.12 %</td></tr><tr><td align="left">+</td><td align="left">+</td><td align="left"/><td align="left">+</td><td align="left">432</td><td align="left">0.79 %</td><td align="left">273</td><td align="left">0.53 %</td><td align="left">76</td><td align="left">1.22 %</td><td align="left">77</td><td align="left">1.29 %</td></tr><tr><td align="left">+</td><td align="left"/><td align="left">+</td><td align="left">+</td><td align="left">296</td><td align="left">0.54 %</td><td align="left">215</td><td align="left">0.42 %</td><td align="left">638</td><td align="left">10.22 %</td><td align="left">466</td><td align="left">7.81 %</td></tr><tr><td align="left"/><td align="left">+</td><td align="left">+</td><td align="left">+</td><td align="left">1332</td><td align="left">2.45 %</td><td align="left">1078</td><td align="left">2.08 %</td><td align="left">53</td><td align="left">0.85 %</td><td align="left">66</td><td align="left">1.11 %</td></tr><tr><td align="left">+</td><td align="left">+</td><td align="left"/><td align="left"/><td align="left">222</td><td align="left">0.41 %</td><td align="left">115</td><td align="left">0.22 %</td><td align="left">18</td><td align="left">0.29 %</td><td align="left">24</td><td align="left">0.40 %</td></tr><tr><td align="left">+</td><td align="left"/><td align="left">+</td><td align="left"/><td align="left">82</td><td align="left">0.15 %</td><td align="left">45</td><td align="left">0.09 %</td><td align="left">254</td><td align="left">4.07 %</td><td align="left">186</td><td align="left">3.12 %</td></tr><tr><td align="left">+</td><td align="left"/><td align="left"/><td align="left">+</td><td align="left">57</td><td align="left">0.10 %</td><td align="left">36</td><td align="left">0.07 %</td><td align="left">235</td><td align="left">3.76 %</td><td align="left">130</td><td align="left">2.18 %</td></tr><tr><td align="left"/><td align="left">+</td><td align="left">+</td><td align="left"/><td align="left">367</td><td align="left">0.67 %</td><td align="left">403</td><td align="left">0.78 %</td><td align="left">56</td><td align="left">0.90 %</td><td align="left">99</td><td align="left">1.66 %</td></tr><tr><td align="left"/><td align="left">+</td><td align="left"/><td align="left">+</td><td align="left">164</td><td align="left">0.30 %</td><td align="left">90</td><td align="left">0.17 %</td><td align="left">23</td><td align="left">0.37 %</td><td align="left">41</td><td align="left">0.69 %</td></tr><tr><td align="left"/><td align="left"/><td align="left">+</td><td align="left">+</td><td align="left">798</td><td align="left">1.47 %</td><td align="left">1021</td><td align="left">1.97 %</td><td align="left">108</td><td align="left">1.73 %</td><td align="left">156</td><td align="left">2.61 %</td></tr><tr><td align="left">+</td><td align="left"/><td align="left"/><td align="left"/><td align="left">499</td><td align="left">0.92 %</td><td align="left">178</td><td align="left">0.34 %</td><td align="left">578</td><td align="left">9.26 %</td><td align="left">342</td><td align="left">5.73 %</td></tr><tr><td align="left"/><td align="left">+</td><td align="left"/><td align="left"/><td align="left">329</td><td align="left">0.60 %</td><td align="left">330</td><td align="left">0.64 %</td><td align="left">11</td><td align="left">0.18 %</td><td align="left">40</td><td align="left">0.67 %</td></tr><tr><td align="left"/><td align="left"/><td align="left">+</td><td align="left"/><td align="left">781</td><td align="left">1.44 %</td><td align="left">3596</td><td align="left">6.94 %</td><td align="left">256</td><td align="left">4.10 %</td><td align="left">371</td><td align="left">6.22 %</td></tr><tr><td align="left"/><td align="left"/><td align="left"/><td align="left">+</td><td align="left">285</td><td align="left">0.52 %</td><td align="left">471</td><td align="left">0.91 %</td><td align="left">489</td><td align="left">7.83 %</td><td align="left">466</td><td align="left">7.81 %</td></tr></tbody></table></table-wrap></p>
      <p>We combined the unfiltered variant call sets of the four variant callers by VariantMetaCaller. Again, during the SVM training, we used the concordant variants (i.e. called by all four variant callers) as positive and the singly-called variants as negative training examples. After fusing the annotation data sets with SVMs, we estimated the probability of each variant being real (see <xref rid="Sec10" ref-type="sec">Methods</xref>). We also combined the individual call sets with BAYSIC [<xref ref-type="bibr" rid="CR11">11</xref>], which performs a latent class analysis and estimates a posterior probability for each variant. In addition, we performed GATK VQSR for the variants called by HaplotypeCaller and UnifiedGenotyper. VQSR fits a Gaussian mixture model to the quantitative annotations given to each variant and estimates a posterior probability to each variant call. In order to be able to use VQSR on the exome of a single sample, we restricted the number of the fitted Gaussians to 4 according the current recommendations [<xref ref-type="bibr" rid="CR17">17</xref>]. Finally, we restricted all variant call sets to the confident region of the Platinum reference call set.</p>
      <p>We computed the precision and sensitivity for each hard filtered variant call set, for the variant quality score recalibrated variant sets, for BAYSIC and for VariantMetaCaller. VariantMetaCaller generally dominated all other methods in the precision–sensitivity space, meaning that VariantMetaCaller achieved higher precision at most sensitivity levels than any of the other method independently of the aligner and the type of the variants (Fig. <xref rid="Fig4" ref-type="fig">4</xref><xref rid="Fig4" ref-type="fig">a</xref>). This is also reflected by the finding that VariantMetaCaller had the highest AUPRC (Fig. <xref rid="Fig4" ref-type="fig">4</xref><xref rid="Fig4" ref-type="fig">b</xref>). The relative performance of the individual variant callers was similar to that of observed using synthetic data. In case of SNPs and BWA alignments, the hard-filtered HaplotypeCaller and UnifiedGenotyper had roughly equal AUPRCs (0.92), and higher than that of FreeBayes and SAMtools (0.89 both). However, using Bowtie 2 alignments, SAMtools performed better than any of the individual variant callers (AUPRC: 0.85), and UnifiedGenotyper proved to be the worst (AUPRC: 0.8). In case of indels the results qualitatively mirrored those seen for synthetic data (for comparison, see Fig. <xref rid="Fig4" ref-type="fig">4</xref><xref rid="Fig4" ref-type="fig">b</xref> to Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S3), except that the relative performance of UnifiedGenotyper and FreeBayes was reverted. VQSR improved performance relative to hard filtering only in the case of SNPs and Bowtie 2 alignments. This result may be related to the scarcity of data relative to the high demands of VQSR.
<fig id="Fig4"><label>Fig. 4</label><caption><p>Results on real sequencing data. Sequence reads originating from a single lane of an Illumina HiSeq 2000 run of NA12878 were aligned by BWA and Bowtie 2 to the human genome and the alignments were filtered to the target region of the whole exome. Variants were called by GATK HaplotypeCaller, GATK UnifiedGenotyper, FreeBayes and SAMtools and the unfiltered call sets were combined by VariantMetaCaller and BAYSIC. Each variant call sets were hard filtered according to general recommendations and the GATK-based variant calls were also recalibrated by VQSR. All call sets were filtered to the confidently called region of the Platinum reference call set. <bold>a</bold> Precision-recall curves for each method for SNPs (top) and for indels (bottom) in case of BWA (left) and Bowtie 2 (right) alignment. <bold>b</bold> Area under the precision-recall curves for each method for SNPs (top) and for indels (bottom) in case of BWA (left) and Bowtie 2 (right) alignment. <bold>c</bold> Mean absolute error of estimated versus true precision of the different methods that produce probability estimates of variants. FB = FreeBayes, HC = HaplotypeCaller, HF = Hard filtered, MAE = mean absolute error, ST = SAMtools, UG = UnifiedGenotyper, VMC = VariantMetaCaller, VQSR = Variant quality score recalibration</p></caption><graphic xlink:href="12864_2015_2050_Fig4_HTML" id="MO4"/></fig></p>
      <p>To test our central hypothesis about the advantage of intermediate information fusion, we compared VariantMetaCaller to the late information fusion method BAYSIC (see Fig. <xref rid="Fig4" ref-type="fig">4</xref><xref rid="Fig4" ref-type="fig">b</xref>). We found that the difference between the AUPRC of VariantMetaCaller and BAYSIC was in the range of 1−4 <italic>%</italic>. This is remarkable, because 1 <italic>%</italic> difference means prioritizing approximately 473 SNPs, and 49 indels more accurately. Additionally, we also computed the AUPRC for VariantMetaCaller and BAYSIC for each chromosome, and found that the AUPRC for VariantMetaCaller was higher than that for BAYSIC in most cases regardless of the type of the variant or the aligner and the differences were strongly statistically significant (Table <xref rid="Tab3" ref-type="table">3</xref>).
<table-wrap id="Tab3"><label>Table 3</label><caption><p>Differences between AUPRC of VariantMetaCaller and BAYSIC in case of each human chromosome</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Type</th><th align="left">Aligner</th><th align="left">Nr. of chromosomes <sup><italic>a</italic></sup>
</th><th align="left"><italic>P</italic>-value <sup><italic>b</italic></sup></th></tr></thead><tbody><tr><td align="left">SNP</td><td align="left">BWA</td><td align="left">21</td><td align="left">5.96×10<sup>−7</sup>
</td></tr><tr><td align="left">SNP</td><td align="left">Bowtie 2</td><td align="left">22</td><td align="left">2.15×10<sup>−5</sup>
</td></tr><tr><td align="left">Indel</td><td align="left">BWA</td><td align="left">19</td><td align="left">5.33×10<sup>−5</sup>
</td></tr><tr><td align="left">Indel</td><td align="left">Bowtie 2</td><td align="left">21</td><td align="left">3.93×10<sup>−6</sup>
</td></tr></tbody></table><table-wrap-foot><p><sup><italic>a</italic></sup>Number of chromosomes for which the AUPRC of VariantMetaCaller was greater than of BAYSIC</p><p><sup><italic>b</italic></sup>Computed with one-tailed, paired Wilcoxon test</p></table-wrap-foot></table-wrap></p>
      <p>The other central theme of our work is to provide a flexible solution for quantitative support of variant filtering, similarly to the false discovery rate based paradigm [<xref ref-type="bibr" rid="CR18">18</xref>–<xref ref-type="bibr" rid="CR20">20</xref>]. This can be achieved by the precise estimation of the probability of the variants. Specifically, probabilities can be used to order the variants, and for a given threshold, unlike scores, probabilities can be used to estimate precision (see Eq. <xref rid="Equ2" ref-type="">2</xref>). Precision then can be directly translated to the number of true called variants, or equivalently to the number of false calls, which supports quantitative, application-specific filter adjustment. As VariantMetaCaller, BAYSIC and VQSR estimate the probability of each variant, we also investigated the differences of the methods with respect to the goodness of this estimation. For this purpose, we calculated the mean absolute error (MAE) of the predicted and the real precision for each method. The MAE rate was generally low, but it was the lowest in the case of VariantMetaCaller for SNPs irrespective of the aligner, and it was the lowest for indels with Bowtie 2 alignment (Fig. <xref rid="Fig4" ref-type="fig">4</xref><xref rid="Fig4" ref-type="fig">c</xref>). In case of indels with BWA alignment, the MAE of VariantMetaCaller was comparable to that of UnifiedGenotyper, but the latter had substantially lower sensitivity. In summary, the predicted precision or the predicted false discovery rate can be conveniently used for filtering. Furthermore, the predicted probabilities support the optimal selection of variants depending on the preferences and cost functions of the researchers [<xref ref-type="bibr" rid="CR2">2</xref>, <xref ref-type="bibr" rid="CR21">21</xref>].</p>
    </sec>
  </sec>
  <sec id="Sec9" sec-type="conclusion">
    <title>Conclusions</title>
    <p>In this paper, we compared alternative variant calling pipelines, and in line with other studies [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR3">3</xref>–<xref ref-type="bibr" rid="CR7">7</xref>], we found low concordance between them, especially in the case of indels. However, we hypothesized that the intermediate annotations generated by individual variant callers are complementary information sources, which can be exploited by their automated fusion. For this task, we presented VariantMetaCaller, which utilizes the high-dimensional annotation information by fusion from multiple variant callers. As a result, it provides more accurate probabilistic scores for calls compared to earlier solutions, and thereby offers improved quantitative control for variant filtering, based on expected precision. Furthermore, the estimated probabilities can be propagated towards downstream analysis and combined with uncertainties from biological, clinical and population levels (for the incorporation of disease gene information in variant prioritization, see [<xref ref-type="bibr" rid="CR22">22</xref>]).</p>
    <p>The execution time of VariantMetaCaller scales quadratically and the memory footprint scales linearly with the number of variants to prioritize and is independent of the number of samples, or the coverage depth (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S10). From typical, few hundred kilobase long gene panels up to even a few megabases, the execution time is significantly less than the run time of the variant callers. Nevertheless, Whole Genome Sequencing (WGS) data would result in an approximately 100 times increase in the number of variants compared to whole exomes. The quadratic time complexity of the SVM optimization task means that the current implementation cannot cope directly with the WGS dimensionality. Subsampling or more advanced optimization methods could be used, which is our plan for future work. However, the program is efficiently parallelized, as speedup scales linearly with the number of processing elements. Its scalability allows further computational extensions, such as the wrapping of VariantMetaCaller into an expectation-maximization framework that iteratively refines the heuristically defined variant status used for training. Another extension could be the sequential embedding of VariantMetaCaller into a Monte Carlo framework, in which the status of variants is randomly drawn according to the actually predicted probabilities. In this sense, the current work can be seen as a first step towards computationally more demanding applications. Finally, the proposed methodology is open for the dynamic adaption, replacement and incorporation of pipelines.</p>
    <p>In summary, our study demonstrates the usefulness of intermediate information fusion, by showing that VariantMetaCaller outperforms individual variant callers and a late information fusion method under a wide range of conditions e.g. for artificially generated or real benchmark data. Our study also shows that VariantMetaCaller provides accurate probabilistic scores for calls even in areas that have been inaccessible for existing solutions, such as in targeted gene panels or organisms without accurate call sets. Thus, VariantMetaCaller broadens the application scope of quantitative, <italic>precision-based filtering</italic>.</p>
  </sec>
  <sec id="Sec10">
    <title>Methods</title>
    <sec id="Sec11">
      <title>Simulation of artificial sequencing data</title>
      <p>We generated 100 haploid artificial human chromosomes using an in-house developed simulation software to evaluate the performance of our method. The 17th chromosome was chosen for illustrative purposes. We performed the following for each haploid chromosome: we independently selected variants (alternate alleles) based on the allele frequencies of the publicly available Exome Aggregation Consortium (ExAC) variant call set [<xref ref-type="bibr" rid="CR23">23</xref>] (version 0.3) and modified the hg19 reference sequence to contain the chosen alternate alleles. Then we paired the haploid chromosomes to get the diploid chromosome sets of 50 artificial samples which we arranged into five distinct sample groups each containing 10 samples. The true variants of the samples served as the reference call set during the comparisons, i.e. we measured sensitivity and precision of the methods with respect to these variants.</p>
      <p>Using the same in-house developed simulation software and the ART toolkit [<xref ref-type="bibr" rid="CR24">24</xref>] (version: VanillaIceCream 03-11-2014) we simulated paired-end sequences (2×105 bp, mean insert size: 180, standard deviation of insert size: 10) of the exonic target regions at various read depths (coverage at exonic sites: 4,8,12,16,20,30,40,60,100 and 200). We used the Illumina sequencing platform specific error profile of ART. It is important to note that as our goal was to assess the performance of the whole pipelines (i.e. the combined effect of alignment and variant calling), the indicated coverage depths are the initial depths (before alignment) and are not necessarily equal to the depth at variant sites due to potential alignment errors or edge effects. Also note that the independently generated variants do not reflect the true linkage disequilibrium pattern of the human genome. However, as the mean distance between two neighboring variants is longer than the length of the simulated sequence reads and the variant calling algorithms currently do not utilize reference linkage information, this limitation does not affect the results.</p>
      <p>We restricted the variant calling pipelines to the targeted regions, as the ExAC call set only covers the exonic region of the human genome.</p>
      <p>We filtered the full length chromosome to smaller regions to demonstrate the usage of the methodology on smaller genomic regions. The resulting exonic lengths added up to approximately 100 kb, 200 kb, 300 kb and 500 kb, respectively. We selected ten non-overlapping, consecutive regions for each size.</p>
    </sec>
    <sec id="Sec12">
      <title>Real sequencing data</title>
      <p>FASTQ files were downloaded for the sample NA12878 from a publicly available NGS data set from the Illumina base space website [<xref ref-type="bibr" rid="CR25">25</xref>] of project: “HiSeq 2000: TruSeq PCR-Free (Platinum Genomes)”. We used only the reads from the first lane of the sequencing run.</p>
      <p>We compared our results to the Illumina Platinum Genomes [<xref ref-type="bibr" rid="CR16">16</xref>] (version 6.0) reference call set. This call set was assembled by Illumina Inc. in the following way: Libraries from all 17 samples in the CEPH pedigree trio 1463 (including the sample NA12878) were prepared using the TruSeq DNA PCR-Free Library Prep Kit and sequenced at 50 × coverage depth on a HiSeq 2000 System. Several different analysis pipelines were used to call variants for all pedigree members (including Isaac, BWA+GATK, BWA+FreeBayes, Cortex and CGI pipelines). Variant calls were analyzed with a specialized workflow that accounts for the inheritance structure and concordance across the different methods. We used the resulting publicly available high-confidence variant calls (VCF) and confident regions (BED files) as “gold standard” during the evaluations. Further details of the analysis workflow can be obtained on the Illumina Platinum Genomes website [<xref ref-type="bibr" rid="CR16">16</xref>].</p>
    </sec>
    <sec id="Sec13">
      <title>Variant calling pipelines</title>
      <p>We aligned the quality filtered (with PRINSEQ [<xref ref-type="bibr" rid="CR26">26</xref>] version 0.20.4) sequencing reads to the hg19 reference genome with BWA–MEM [<xref ref-type="bibr" rid="CR27">27</xref>] using default parameters or, alternatively, with Bowtie 2 [<xref ref-type="bibr" rid="CR28">28</xref>] using <italic>very-sensitive</italic> default settings. We applied GATK [<xref ref-type="bibr" rid="CR29">29</xref>] base quality score recalibration and indel realignment only to the real sequencing data.</p>
      <p>We used four variant callers to detect SNPs and short indels: GATK UnifiedGenotyper and HaplotypeCaller [<xref ref-type="bibr" rid="CR29">29</xref>] (version 3.3-0), FreeBayes [<xref ref-type="bibr" rid="CR30">30</xref>] (version v0.9.20-17-g5f1bc44-dirty) and SAMtools combined with BCFtools [<xref ref-type="bibr" rid="CR31">31</xref>] (version 1.1-22-gc61d8d1). We used all variant callers with default parameters with the following exception: FreeBayes was set to ignore multi-nucleotide polymorphisms and complex events in order to ease the combination of the variants calls.</p>
      <p>Furthermore, variant call sets were left aligned using BCFtools in order to unify different representations of the same variants.</p>
      <p>Hard filters were set according to the GATK Best Practices recommendations [<xref ref-type="bibr" rid="CR32">32</xref>] for GATK called variant sets. For FreeBayes and SAMtools we set the quality threshold to 30 and 100 as a hard filter for real and artificial sequencing data, respectively.</p>
      <p>Note that recent extensions of variant calling pipelines, such as read correction [<xref ref-type="bibr" rid="CR33">33</xref>–<xref ref-type="bibr" rid="CR35">35</xref>] are not covered in our study.</p>
    </sec>
    <sec id="Sec14">
      <title>Support Vector Machine-based combination of variant callers</title>
      <sec id="Sec15">
        <title>Support Vector Machine</title>
        <p>VariantMetaCaller combines unfiltered, multi- or single-sample variant calls of individual variant callers by the following way:</p>
        <p>First, we merge variants called by the individual variant callers and unify overlapping variant calls with different allele representations. Next, we train an SVM for SNPs and indels and for each input variant caller separately.</p>
        <p>We use the following heuristics to define the positive training instances: we initialize a threshold <italic>t</italic> to be the number of the variant callers (or a number defined by the user at program start). Then, the positive training set consists of variants simultaneously called by at least <italic>t</italic> callers, with an additional constraint that all callers must contribute. If any of these conditions fail, the threshold is decreased until a proper positive set is established.</p>
        <p>Then, for each variant caller we determine the singly-called variants (i.e. variants found at most by one or a user-defined number of callers). If all callers have singly-called variants then these serve as negative training instances and a two-class SVM is used. If there is at least one caller that has no singly-called variant then for each variant caller a one-class SVM is trained using only the positive training instances (e.g. this is dominant in the case of the restricted smaller genomic regions). Finally, we train an SVM classifier for each data set.</p>
        <p>Note that the present application of SVM deviates from the standard frequentist, machine-learning applications of SVMs which typically assume independent, identically distributed (i.i.d.) data, perfect class labels and a cross-validation framework for the evaluation of future performance. However, in genomic applications, variants are not i.i.d., class labels are heuristics, reference class labels are used to estimate the performance on the actual data, and multiple reference data sets are used for statistical evaluation in case of simulated data sets.</p>
        <p>We use a modified version of LIBSVM [<xref ref-type="bibr" rid="CR36">36</xref>] to implement SVM functionality.</p>
        <sec id="Sec16">
          <title>Computing probability of variants</title>
          <p>Given a variant caller, we compute the conditional probability of each variant being a “real” variant (i.e. belonging to the positive class) [<xref ref-type="bibr" rid="CR37">37</xref>], where callers have equal probabilities. Then, the final score is the probability of variants marginalized over all variant callers. Thus, for the <italic>i</italic>th variant: 
<disp-formula id="Equ1"><label>(1)</label><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ P_{SVM}(i) = \frac{1}{N}\sum\limits_{j=1}^{N}Pr(y_{ij}=1|x_{ij}),  $$ \end{document}</tex-math><mml:math id="M2"><mml:msub><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">SVM</mml:mtext></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>i</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>N</mml:mi></mml:mrow></mml:mfrac><mml:munderover accent="false" accentunder="false"><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>N</mml:mi></mml:mrow></mml:munderover><mml:mtext mathvariant="italic">Pr</mml:mtext><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">ij</mml:mtext></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">ij</mml:mtext></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>,</mml:mo></mml:math><graphic xlink:href="12864_2015_2050_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula></p>
          <p>where N equals the number of variant callers, <italic>P</italic><italic>r</italic>(<italic>y</italic><sub><italic>ij</italic></sub>=1|<italic>x</italic><sub><italic>ij</italic></sub>) is the probability of the <italic>i</italic>th variant being in the positive class in case of the <italic>j</italic>th variant caller.</p>
          <p>Additionally, we order the variants by <italic>P</italic><sub><italic>SVM</italic></sub> decreasingly, and compute the estimated precision for each <italic>i</italic> index along the ordering by the following formula: 
<disp-formula id="Equ2"><label>(2)</label><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ \begin{aligned} E_{PREC}^{(i)} &amp;= \frac{TP^{(i)}}{TP^{(i)}+FP^{(i)}} \\ &amp;= \frac{\sum_{j=1}^{i}P_{SVM}^{(j)}}{\sum_{j=1}^{i}P_{SVM}^{(j)} + \sum_{j=1}^{i}(1-P_{SVM}^{(j)})} \\ &amp;= \frac{1}{i}\sum\limits_{j=1}^{i}P_{SVM}^{(j)}, \end{aligned}  $$ \end{document}</tex-math><mml:math id="M4"><mml:mtable><mml:mtr><mml:mtd><mml:msubsup><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">PREC</mml:mtext></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>i</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:msubsup></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>T</mml:mi><mml:msup><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>i</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:mi>T</mml:mi><mml:msup><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>i</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:mi>F</mml:mi><mml:msup><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>i</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:mfrac></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:munderover><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:munderover><mml:msubsup><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">SVM</mml:mtext></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>j</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:msubsup></mml:mrow><mml:mrow><mml:munderover><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:munderover><mml:msubsup><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">SVM</mml:mtext></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>j</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:munderover><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:munderover><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msubsup><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">SVM</mml:mtext></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>j</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:msubsup><mml:mo>)</mml:mo></mml:mrow></mml:mfrac></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:mfrac><mml:munderover accent="false" accentunder="false"><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:munderover><mml:msubsup><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">SVM</mml:mtext></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>j</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:msubsup><mml:mo>,</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:math><graphic xlink:href="12864_2015_2050_Article_Equ2.gif" position="anchor"/></alternatives></disp-formula></p>
          <p>where <italic>T</italic><italic>P</italic><sup>(<italic>i</italic>)</sup> and <italic>F</italic><italic>P</italic><sup>(<italic>i</italic>)</sup> are the estimated number of true positives and false positives, respectively, along the ordering of the variants at the <italic>i</italic>th index. Note, that the estimated false discovery rate (FDR) is <inline-formula id="IEq1"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$E_{\textit {FDR}}^{(i)} = 1-E_{\textit {PREC}}^{(i)}$\end{document}</tex-math><mml:math id="M6"><mml:msubsup><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">FDR</mml:mtext></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>i</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msubsup><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">PREC</mml:mtext></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>i</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="12864_2015_2050_Article_IEq1.gif"/></alternatives></inline-formula>.</p>
        </sec>
        <sec id="Sec17">
          <title>Adjusting the estimated probabilities</title>
          <p>We found that in case of the simulated chromosome, the expected precisions were underestimated, which requires further investigation (for the probabilistic interpretation of SVM’s output, see [<xref ref-type="bibr" rid="CR38">38</xref>, <xref ref-type="bibr" rid="CR39">39</xref>]). However, the rate of the real versus estimated precisions could be properly captured by the coverage depth and the choice of the aligner software (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S11). We fitted exponential functions to the empirical observations, and in case of the real data set we used the value of these functions to adjust the estimated probabilities in order to adjust the estimated precision.</p>
        </sec>
        <sec id="Sec18">
          <title>Effects of noise in training data</title>
          <p>To investigate the presence of noise in the constructed positive and negative training instances, we calculated the fraction of true variants in the negative samples and the fraction of false variants in the positive samples (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S1). Because of the relatively high error rates in the negative samples, we calculated the performance gain of the “ideally trained” model (i.e. using only the true negatives and true positives for training), which showed a significant, but modest increase in performance (mean AUPRC gain: &lt;0.007 <italic>%</italic> for SNPs and &lt;0.4 <italic>%</italic> for indels, Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S2).</p>
        </sec>
      </sec>
      <sec id="Sec19">
        <title>Parameters for Support Vector Machine</title>
        <p>We use the radial basis function (RBF) kernel for SVM. A two-level grid search together with 5-fold cross validation is applied to determine the penalty <italic>C</italic> and the <italic>γ</italic> parameter for each RBF kernel leading to the highest accuracy. The first level of the grid search iterates through 2<sup>−5</sup> to 2<sup>17</sup> by 2<sup>2</sup> for the parameter <italic>C</italic>, and through 2<sup>−17</sup> to 2<sup>3</sup> by 2<sup>2</sup> for the parameter <italic>γ</italic>. At the second level, a finer grid search (by 2<sup>0.2</sup>) is performed on the region that gave the highest accuracy during cross-validation. After the best (<italic>C</italic>,<italic>γ</italic>) is found, the whole training set is used again to compute the final model.</p>
        <p>The grid search is parallelized with OpenMP. The parameters of the grid search are configurable.</p>
      </sec>
      <sec id="Sec20">
        <title>Input features</title>
        <p>The program creates a data set for each variant caller from the available annotations generated by the caller. Besides using standard annotations (e.g. read depth, variant quality, mapping quality etc.) the program calculates additional features such as the number of bases to the closest variant, mean and standard deviation of the entropy of the genotype distribution across all samples of the variant, entropy of the reference sequence near the variant. The full listing of the utilized annotations and their short description can be found in Additional file <xref rid="MOESM2" ref-type="media">2</xref>. The features and their transformation and scaling methods can be fully configured using a configuration file of the program.</p>
      </sec>
      <sec id="Sec21">
        <title>Combined genotypes</title>
        <p>The final genotype probabilities are calculated based on the genotype probabilities computed by the variant callers. Genotypes with maximal probabilities are indicated in the resulting variant call format (VCF) file.</p>
      </sec>
    </sec>
    <sec id="Sec22">
      <title>Comparisons of the methods</title>
      <p>We compared the performance of the variant callers and VariantMetaCaller by plotting precision-recall curves. First, for each variant caller, we ordered the hard filtered variants first by decreasing quality, and in case of ties in the qualities: by decreasing read depth. For VariantMetaCaller, we ordered the combined variants first by decreasing SVM score and then by decreasing mean read depth. Next, we computed the precision and the sensitivity (i.e. recall) at each threshold of variant quality and SVM score, respectively, and plotted precision by sensitivity.</p>
      <p>We calculated the area under the precision-recall curve (AUPRC) as well, using trapezoid rule integration [<xref ref-type="bibr" rid="CR40">40</xref>], and we calculated the differences between the AUPRC values of the variant callers and VariantMetaCaller.</p>
    </sec>
    <sec id="Sec23">
      <title>Software description and requirements</title>
      <p>The VariantMetaCaller software is written in C++. It is compiled into a command line tool, and can work on Linux/Unix systems. The software expects standard VCF files as input and produces a VCF file as output which includes all variants from input files and SVM scores for each variant as additional annotations. The available parametrization is described in a help screen and on the software’s website. The computations described in the paper were performed on a standard desktop PC. For a detailed analysis of computational requirements see Conclusions and Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S10.</p>
    </sec>
  </sec>
  <sec id="Sec24">
    <title>Availability of supporting data and software</title>
    <p>The VariantMetaCaller software and the artificial sequencing data sets supporting the results of this article is freely available at <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.mit.bme.hu/VariantMetaCaller/">http://bioinformatics.mit.bme.hu/VariantMetaCaller/</ext-link>. The real sequencing data set is available (after registration) as part of a public Illumina BaseSpace project: “HiSeq 2000: TruSeq PCR-Free (Platinum Genomes)” at <ext-link ext-link-type="uri" xlink:href="https://basespace.illumina.com/home/index">https://basespace.illumina.com/home/index</ext-link>.</p>
  </sec>
</body>
<back>
  <app-group>
    <app id="App1">
      <sec id="Sec25">
        <title>Additional files</title>
        <p>
          <media position="anchor" xlink:href="12864_2015_2050_MOESM1_ESM.pdf" id="MOESM1">
            <label>Additional file 1</label>
            <caption>
              <p><bold>Supplementary results, figures and tables.</bold> Supplementary results, <bold>Figures S1–S11</bold> and <bold>Tables S1–S6</bold>.</p>
            </caption>
          </media>
        </p>
        <p>
          <media position="anchor" xlink:href="12864_2015_2050_MOESM2_ESM.pdf" id="MOESM2">
            <label>Additional file 2</label>
            <caption>
              <p><bold>Variant annotations used as features for SVMs.</bold> The full listing and short description of the variant annotations used as features for Support Vector Machines.</p>
            </caption>
          </media>
        </p>
      </sec>
    </app>
  </app-group>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>AUPRC</term>
        <def>
          <p>Area under the precision–</p>
        </def>
      </def-item>
      <def-item>
        <term>recall curve; AUROC</term>
        <def>
          <p>Area under the receiver operating characteristic curve</p>
        </def>
      </def-item>
      <def-item>
        <term>CI</term>
        <def>
          <p>Confidence interval</p>
        </def>
      </def-item>
      <def-item>
        <term>ExAC</term>
        <def>
          <p>Exome Aggregation Consortium</p>
        </def>
      </def-item>
      <def-item>
        <term>FDR</term>
        <def>
          <p>False discovery rate</p>
        </def>
      </def-item>
      <def-item>
        <term>GATK</term>
        <def>
          <p>Genome analysis Toolkit</p>
        </def>
      </def-item>
      <def-item>
        <term>i.i.d.</term>
        <def>
          <p>Independent, identically distributed</p>
        </def>
      </def-item>
      <def-item>
        <term>MAE</term>
        <def>
          <p>Mean absolute error</p>
        </def>
      </def-item>
      <def-item>
        <term>NGS</term>
        <def>
          <p>Next–</p>
        </def>
      </def-item>
      <def-item>
        <term>generation sequencing; RBF</term>
        <def>
          <p>Radial basis function</p>
        </def>
      </def-item>
      <def-item>
        <term>SNP</term>
        <def>
          <p>Single nucleotide polymorphism</p>
        </def>
      </def-item>
      <def-item>
        <term>SVM</term>
        <def>
          <p>Support Vector Machine</p>
        </def>
      </def-item>
      <def-item>
        <term>VCF</term>
        <def>
          <p>Variant call format</p>
        </def>
      </def-item>
      <def-item>
        <term>VQSR</term>
        <def>
          <p>Variant quality score recalibration</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Competing interests</bold>
      </p>
      <p>The authors declare that they have no competing interests.</p>
    </fn>
    <fn>
      <p>
        <bold>Authors’ contributions</bold>
      </p>
      <p>AG, BB, PM, PS, CS and PA designed and executed the experiments. AG and BB wrote the software. All authors contributed to preparation of the manuscript. All authors reviewed and commented on the manuscript. All authors read and approved the final manuscript.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>This work was supported by the OTKA 112915, OTKA 112228, OTKA 112872 grants, and by the János Bolyai Research Scholarship of the Hungarian Academy of Sciences (P. Antal). The authors thank Attila Gulyás-Kovács for his insightful comments and help in reviewing the manuscript.</p>
  </ack>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>O’Rawe</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Jiang</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Sun</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Hu</surname>
            <given-names>J</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Low concordance of multiple variant-calling pipelines: practical implications for exome and genome sequencing</article-title>
        <source>Genome Med</source>
        <year>2013</year>
        <volume>5</volume>
        <issue>3</issue>
        <fpage>28</fpage>
        <pub-id pub-id-type="doi">10.1186/gm432</pub-id>
        <?supplied-pmid 23537139?>
        <pub-id pub-id-type="pmid">23537139</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Park</surname>
            <given-names>MH</given-names>
          </name>
          <name>
            <surname>Rhee</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Park</surname>
            <given-names>JH</given-names>
          </name>
          <name>
            <surname>Woo</surname>
            <given-names>HM</given-names>
          </name>
          <name>
            <surname>Choi</surname>
            <given-names>BO</given-names>
          </name>
          <name>
            <surname>Kim</surname>
            <given-names>BY</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Comprehensive analysis to improve the validation rate for single nucleotide variants detected by next-generation sequencing</article-title>
        <source>PloS One</source>
        <year>2014</year>
        <volume>9</volume>
        <issue>1</issue>
        <fpage>86664</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0086664</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yu</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Sun</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Comparing a few SNP calling algorithms using low-coverage sequencing data</article-title>
        <source>BMC Bioinformatics</source>
        <year>2013</year>
        <volume>14</volume>
        <issue>1</issue>
        <fpage>274</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-14-274</pub-id>
        <?supplied-pmid 24044377?>
        <pub-id pub-id-type="pmid">24044377</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Liu</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Han</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Gelernter</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Yang</surname>
            <given-names>BZ</given-names>
          </name>
        </person-group>
        <article-title>Variant callers for next-generation sequencing data: a comparison study</article-title>
        <source>PloS One</source>
        <year>2013</year>
        <volume>8</volume>
        <issue>9</issue>
        <fpage>75619</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0075619</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pirooznia</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Kramer</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Parla</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Goes</surname>
            <given-names>FS</given-names>
          </name>
          <name>
            <surname>Potash</surname>
            <given-names>JB</given-names>
          </name>
          <name>
            <surname>McCombie</surname>
            <given-names>WR</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Validation and assessment of variant calling pipelines for next-generation sequencing</article-title>
        <source>Hum Genomics</source>
        <year>2014</year>
        <volume>8</volume>
        <issue>1</issue>
        <fpage>14</fpage>
        <pub-id pub-id-type="doi">10.1186/1479-7364-8-14</pub-id>
        <?supplied-pmid 25078893?>
        <pub-id pub-id-type="pmid">25078893</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Neuman</surname>
            <given-names>JA</given-names>
          </name>
          <name>
            <surname>Isakov</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Shomron</surname>
            <given-names>N</given-names>
          </name>
        </person-group>
        <article-title>Analysis of insertion-deletion from deep-sequencing data: software evaluation for optimal detection</article-title>
        <source>Brief Bioinform</source>
        <year>2013</year>
        <volume>14</volume>
        <issue>1</issue>
        <fpage>46</fpage>
        <lpage>55</lpage>
        <pub-id pub-id-type="doi">10.1093/bib/bbs013</pub-id>
        <?supplied-pmid 22707752?>
        <pub-id pub-id-type="pmid">22707752</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cheng</surname>
            <given-names>AY</given-names>
          </name>
          <name>
            <surname>Teo</surname>
            <given-names>YY</given-names>
          </name>
          <name>
            <surname>Ong</surname>
            <given-names>RT-H</given-names>
          </name>
        </person-group>
        <article-title>Assessing single nucleotide variant detection and genotype calling on whole-genome sequenced individuals</article-title>
        <source>Bioinformatics (Oxford, England)</source>
        <year>2014</year>
        <volume>30</volume>
        <issue>12</issue>
        <fpage>1707</fpage>
        <lpage>13</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btu067</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Quail</surname>
            <given-names>MA</given-names>
          </name>
          <name>
            <surname>Smith</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Coupland</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Otto</surname>
            <given-names>TD</given-names>
          </name>
          <name>
            <surname>Harris</surname>
            <given-names>SR</given-names>
          </name>
          <name>
            <surname>Connor</surname>
            <given-names>TR</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A tale of three next generation sequencing platforms: comparison of Ion Torrent, Pacific Biosciences and Illumina MiSeq sequencers</article-title>
        <source>BMC Genomics</source>
        <year>2012</year>
        <volume>13</volume>
        <issue>1</issue>
        <fpage>341</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2164-13-341</pub-id>
        <?supplied-pmid 22827831?>
        <pub-id pub-id-type="pmid">22827831</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Van der Auwera</surname>
            <given-names>GA</given-names>
          </name>
          <name>
            <surname>Carneiro</surname>
            <given-names>MO</given-names>
          </name>
          <name>
            <surname>Hartl</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Poplin</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Del Angel</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Levy-Moonshine</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Bateman</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Pearson</surname>
            <given-names>WR</given-names>
          </name>
          <name>
            <surname>Stein</surname>
            <given-names>LD</given-names>
          </name>
          <name>
            <surname>Stormo</surname>
            <given-names>GD</given-names>
          </name>
          <name>
            <surname>Yates</surname>
            <given-names>JR</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>From FastQ data to high-confidence variant calls: the genome analysis toolkit best practices pipeline</article-title>
        <source>Current Protocols in Bioinformatics</source>
        <year>2013</year>
        <publisher-loc>Hoboken, NJ, USA</publisher-loc>
        <publisher-name>Wiley</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>O’Fallon</surname>
            <given-names>BD</given-names>
          </name>
          <name>
            <surname>Wooderchak-Donahue</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Crockett</surname>
            <given-names>DK</given-names>
          </name>
        </person-group>
        <article-title>A support vector machine for identification of single-nucleotide polymorphisms from next-generation sequencing data</article-title>
        <source>Bioinformatics (Oxford, England)</source>
        <year>2013</year>
        <volume>29</volume>
        <issue>11</issue>
        <fpage>1361</fpage>
        <lpage>6</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btt172</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cantarel</surname>
            <given-names>BL</given-names>
          </name>
          <name>
            <surname>Weaver</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>McNeill</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Mackey</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Reese</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>BAYSIC: a Bayesian method for combining sets of genome variants with improved specificity and sensitivity</article-title>
        <source>BMC Bioinformatics</source>
        <year>2014</year>
        <volume>15</volume>
        <issue>1</issue>
        <fpage>104</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-15-104</pub-id>
        <?supplied-pmid 24725768?>
        <pub-id pub-id-type="pmid">24725768</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12</label>
      <mixed-citation publication-type="other">An automated ensemble method for combining and evaluating genomic variants from multiple callers | Blue Collar Bioinformatics on WordPress.com. <ext-link ext-link-type="uri" xlink:href="http://bcb.io/2013/02/06/an-automated-ensemble-method-for-combining-and-evaluating-genomic-variants-from-multiple-callers">http://bcb.io/2013/02/06/an-automated-ensemble-method-for-combining-and-evaluating-genomic-variants-from-multiple-callers</ext-link>. Accessed 2015-02-05.</mixed-citation>
    </ref>
    <ref id="CR13">
      <label>13</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tennessen</surname>
            <given-names>JA</given-names>
          </name>
          <name>
            <surname>Bigham</surname>
            <given-names>AW</given-names>
          </name>
          <name>
            <surname>O’Connor</surname>
            <given-names>TD</given-names>
          </name>
          <name>
            <surname>Fu</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Kenny</surname>
            <given-names>EE</given-names>
          </name>
          <name>
            <surname>Gravel</surname>
            <given-names>S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Evolution and functional impact of rare coding variation from deep sequencing of human exomes</article-title>
        <source>Science (New York, N.Y.)</source>
        <year>2012</year>
        <volume>337</volume>
        <issue>6090</issue>
        <fpage>64</fpage>
        <lpage>9</lpage>
        <pub-id pub-id-type="doi">10.1126/science.1219240</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14</label>
      <mixed-citation publication-type="other">Exome Variant Server - Column Description. <ext-link ext-link-type="uri" xlink:href="http://evs.gs.washington.edu/EVS/HelpDescriptions.jsp">http://evs.gs.washington.edu/EVS/HelpDescriptions.jsp</ext-link>. Accessed 2015-02-13.</mixed-citation>
    </ref>
    <ref id="CR15">
      <label>15</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Boyd</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Eng</surname>
            <given-names>KH</given-names>
          </name>
          <name>
            <surname>Page</surname>
            <given-names>CD</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Blockeel</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Kersting</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Nijssen</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>železný</surname>
            <given-names>F</given-names>
          </name>
        </person-group>
        <article-title>Machine Learning and Knowledge Discovery in Databases</article-title>
        <source>Machine Learning and Knowledge Discovery in Databases. Lecture Notes in Computer Science</source>
        <year>2013</year>
        <publisher-loc>Berlin, Heidelberg</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16</label>
      <mixed-citation publication-type="other">Platinum Genomes. <ext-link ext-link-type="uri" xlink:href="http://www.illumina.com/platinumgenomes/">http://www.illumina.com/platinumgenomes/</ext-link>. Accessed 2015-02-05.</mixed-citation>
    </ref>
    <ref id="CR17">
      <label>17</label>
      <mixed-citation publication-type="other">Variant Quality Score Recalibration (VQSR) - GATK-Forum. <ext-link ext-link-type="uri" xlink:href="http://gatkforums.broadinstitute.org/discussion/39/variant-quality-score-recalibration-vqsr">http://gatkforums.broadinstitute.org/discussion/39/variant-quality-score-recalibration-vqsr</ext-link>. Accessed 2015-02-05.</mixed-citation>
    </ref>
    <ref id="CR18">
      <label>18</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Benjamini</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Hochberg</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>Controlling the false discovery rate: a practical and powerful approach to multiple testing</article-title>
        <source>J R Stat Soc Ser B</source>
        <year>1995</year>
        <volume>57</volume>
        <issue>1</issue>
        <fpage>289</fpage>
        <lpage>300</lpage>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Storey</surname>
            <given-names>JD</given-names>
          </name>
          <name>
            <surname>Tibshirani</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Statistical significance for genomewide studies</article-title>
        <source>Proc Natl Acad Sci U S A</source>
        <year>2003</year>
        <volume>100</volume>
        <issue>16</issue>
        <fpage>9440</fpage>
        <lpage>5</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.1530509100</pub-id>
        <?supplied-pmid 12883005?>
        <pub-id pub-id-type="pmid">12883005</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Benjamini</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>Discovering the false discovery rate</article-title>
        <source>J R Stat Soci: Series B (Stat Methodol)</source>
        <year>2010</year>
        <volume>72</volume>
        <issue>4</issue>
        <fpage>405</fpage>
        <lpage>16</lpage>
        <pub-id pub-id-type="doi">10.1111/j.1467-9868.2010.00746.x</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Salto-Tellez</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Gonzalez de Castro</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>Next-generation sequencing: a change of paradigm in molecular diagnostic validation</article-title>
        <source>J Pathol</source>
        <year>2014</year>
        <volume>234</volume>
        <issue>1</issue>
        <fpage>5</fpage>
        <lpage>10</lpage>
        <pub-id pub-id-type="doi">10.1002/path.4365</pub-id>
        <?supplied-pmid 24756835?>
        <pub-id pub-id-type="pmid">24756835</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sifrim</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Popovic</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Tranchevent</surname>
            <given-names>LC</given-names>
          </name>
          <name>
            <surname>Ardeshirdavani</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Sakai</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Konings</surname>
            <given-names>P</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>eXtasy: variant prioritization by genomic data fusion</article-title>
        <source>Nat Methods</source>
        <year>2013</year>
        <volume>10</volume>
        <issue>11</issue>
        <fpage>1083</fpage>
        <lpage>4</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.2656</pub-id>
        <?supplied-pmid 24076761?>
        <pub-id pub-id-type="pmid">24076761</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23</label>
      <mixed-citation publication-type="other">Exome Aggregation Consortium (ExAC): Cambridge, MA. <ext-link ext-link-type="uri" xlink:href="http://exac.broadinstitute.org">http://exac.broadinstitute.org</ext-link>. Accessed 2015-01-20.</mixed-citation>
    </ref>
    <ref id="CR24">
      <label>24</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Huang</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Myers</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Marth</surname>
            <given-names>GT</given-names>
          </name>
        </person-group>
        <article-title>ART: a next-generation sequencing read simulator</article-title>
        <source>Bioinformatics (Oxford, England)</source>
        <year>2012</year>
        <volume>28</volume>
        <issue>4</issue>
        <fpage>593</fpage>
        <lpage>4</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btr708</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25</label>
      <mixed-citation publication-type="other">BaseSpace. <ext-link ext-link-type="uri" xlink:href="https://basespace.illumina.com/home/index">https://basespace.illumina.com/home/index</ext-link>. Accessed 2015-02-10.</mixed-citation>
    </ref>
    <ref id="CR26">
      <label>26</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Schmieder</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Edwards</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Quality control and preprocessing of metagenomic datasets</article-title>
        <source>Bioinformatics</source>
        <year>2011</year>
        <volume>27</volume>
        <issue>6</issue>
        <fpage>863</fpage>
        <lpage>864</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btr026</pub-id>
        <?supplied-pmid 21278185?>
        <pub-id pub-id-type="pmid">21278185</pub-id>
      </element-citation>
    </ref>
    <ref id="CR27">
      <label>27</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Durbin</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Fast and accurate short read alignment with Burrows-Wheeler transform</article-title>
        <source>Bioinformatics (Oxford, England)</source>
        <year>2009</year>
        <volume>25</volume>
        <issue>14</issue>
        <fpage>1754</fpage>
        <lpage>60</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp324</pub-id>
      </element-citation>
    </ref>
    <ref id="CR28">
      <label>28</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Langmead</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Fast gapped-read alignment with Bowtie 2</article-title>
        <source>Nat Methods</source>
        <year>2012</year>
        <volume>9</volume>
        <issue>4</issue>
        <fpage>357</fpage>
        <lpage>9</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.1923</pub-id>
        <?supplied-pmid 22388286?>
        <pub-id pub-id-type="pmid">22388286</pub-id>
      </element-citation>
    </ref>
    <ref id="CR29">
      <label>29</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>DePristo</surname>
            <given-names>MA</given-names>
          </name>
          <name>
            <surname>Banks</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Poplin</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Garimella</surname>
            <given-names>KV</given-names>
          </name>
          <name>
            <surname>Maguire</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Hartl</surname>
            <given-names>C</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A framework for variation discovery and genotyping using next-generation DNA sequencing data</article-title>
        <source>Nat Genet</source>
        <year>2011</year>
        <volume>43</volume>
        <issue>5</issue>
        <fpage>491</fpage>
        <lpage>8</lpage>
        <pub-id pub-id-type="doi">10.1038/ng.806</pub-id>
        <?supplied-pmid 21478889?>
        <pub-id pub-id-type="pmid">21478889</pub-id>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30</label>
      <mixed-citation publication-type="other">Garrison E, Marth G. Haplotype-based variant detection from short-read sequencing. Preprint at arXiv:1207.3907v2 [q-bio.GN] (2012), <ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/1207.3907v2">http://arxiv.org/abs/1207.3907v2</ext-link>. Accessed 2014-11-01.</mixed-citation>
    </ref>
    <ref id="CR31">
      <label>31</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>A statistical framework for SNP calling, mutation discovery, association mapping and population genetical parameter estimation from sequencing data</article-title>
        <source>Bioinformatics (Oxford, England)</source>
        <year>2011</year>
        <volume>27</volume>
        <issue>21</issue>
        <fpage>2987</fpage>
        <lpage>93</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btr509</pub-id>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>McKenna</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Hanna</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Banks</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Sivachenko</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Cibulskis</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Kernytsky</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The Genome Analysis Toolkit: a MapReduce framework for analyzing next-generation DNA sequencing data</article-title>
        <source>Genome Res</source>
        <year>2010</year>
        <volume>20</volume>
        <issue>9</issue>
        <fpage>1297</fpage>
        <lpage>303</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.107524.110</pub-id>
        <?supplied-pmid 20644199?>
        <pub-id pub-id-type="pmid">20644199</pub-id>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Heo</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>XL</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Ma</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Hwu</surname>
            <given-names>WM</given-names>
          </name>
        </person-group>
        <article-title>BLESS: bloom filter-based error correction solution for high-throughput sequencing reads</article-title>
        <source>Bioinformatics (Oxford, England)</source>
        <year>2014</year>
        <volume>30</volume>
        <issue>10</issue>
        <fpage>1354</fpage>
        <lpage>62</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btu030</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ilie</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Molnar</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>RACER: Rapid and accurate correction of errors in reads</article-title>
        <source>Bioinformatics (Oxford, England)</source>
        <year>2013</year>
        <volume>29</volume>
        <issue>19</issue>
        <fpage>2490</fpage>
        <lpage>3</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btt407</pub-id>
      </element-citation>
    </ref>
    <ref id="CR35">
      <label>35</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Song</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Florea</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Langmead</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Lighter: fast and memory-efficient sequencing error correction without counting</article-title>
        <source>Genome Biol</source>
        <year>2014</year>
        <volume>15</volume>
        <issue>11</issue>
        <fpage>509</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-014-0509-9</pub-id>
        <?supplied-pmid 25398208?>
        <pub-id pub-id-type="pmid">25398208</pub-id>
      </element-citation>
    </ref>
    <ref id="CR36">
      <label>36</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chang</surname>
            <given-names>CC</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>CJ</given-names>
          </name>
        </person-group>
        <article-title>LIBSVM: A library for support vector machines</article-title>
        <source>ACM Trans Intell Syst Technol</source>
        <year>2011</year>
        <volume>2</volume>
        <fpage>27</fpage>
        <lpage>12727</lpage>
        <pub-id pub-id-type="doi">10.1145/1961189.1961199</pub-id>
      </element-citation>
    </ref>
    <ref id="CR37">
      <label>37</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lin</surname>
            <given-names>HT</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>CJ</given-names>
          </name>
          <name>
            <surname>Weng</surname>
            <given-names>RC</given-names>
          </name>
        </person-group>
        <article-title>A note on Platt’s probabilistic outputs for support vector machines</article-title>
        <source>Mach Learn</source>
        <year>2007</year>
        <volume>68</volume>
        <issue>3</issue>
        <fpage>267</fpage>
        <lpage>76</lpage>
        <pub-id pub-id-type="doi">10.1007/s10994-007-5018-6</pub-id>
      </element-citation>
    </ref>
    <ref id="CR38">
      <label>38</label>
      <mixed-citation publication-type="other">Franc V, Zien A, Schölkopf B. Support vector machines as probabilistic models. In: Proceedings of the 28th International Conference on Machine Learning (ICML-11). Bellevue, WA, USA: 2011. p. 665–72.</mixed-citation>
    </ref>
    <ref id="CR39">
      <label>39</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Platt</surname>
            <given-names>JC</given-names>
          </name>
        </person-group>
        <article-title>Probabilistic outputs for support vector machines and comparisons to regularized likelihood methods</article-title>
        <source>Adv Large Margin Classifiers</source>
        <year>1999</year>
        <volume>10</volume>
        <issue>3</issue>
        <fpage>61</fpage>
        <lpage>74</lpage>
      </element-citation>
    </ref>
    <ref id="CR40">
      <label>40</label>
      <mixed-citation publication-type="other">Tuszynski J. caTools: Tools: Moving Window Statistics, GIF, Base64, ROC AUC, Etc. 2014. R package version 1.17.1.<ext-link ext-link-type="uri" xlink:href="http://CRAN.R-project.org/package=caTools">http://CRAN.R-project.org/package=caTools</ext-link>. Accessed 2015-01-15.</mixed-citation>
    </ref>
  </ref-list>
</back>

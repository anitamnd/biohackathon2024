<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6612806</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btz377</article-id>
    <article-id pub-id-type="publisher-id">btz377</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Ismb/Eccb 2019 Conference Proceedings</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Comparative and Functional Genomics</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Efficient merging of genome profile alignments</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Hennig</surname>
          <given-names>André</given-names>
        </name>
        <xref ref-type="corresp" rid="btz377-cor1"/>
        <xref ref-type="aff" rid="btz377-aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Nieselt</surname>
          <given-names>Kay</given-names>
        </name>
        <xref ref-type="corresp" rid="btz377-cor1"/>
        <!--<email>kay.nieselt@uni-tuebingen.de</email>-->
        <xref ref-type="aff" rid="btz377-aff1"/>
      </contrib>
    </contrib-group>
    <aff id="btz377-aff1">Center for Bioinformatics (ZBIT), Integrative Transcriptomics, Eberhard Karls University of Tübingen, Tübingen, Germany</aff>
    <author-notes>
      <corresp id="btz377-cor1">To whom correspondence should be addressed. <email>kay.nieselt@uni-tuebingen.de</email></corresp>
    </author-notes>
    <pub-date pub-type="ppub">
      <month>7</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2019-07-05">
      <day>05</day>
      <month>7</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>05</day>
      <month>7</month>
      <year>2019</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. -->
    <volume>35</volume>
    <issue>14</issue>
    <fpage>i71</fpage>
    <lpage>i80</lpage>
    <permissions>
      <copyright-statement>© The Author(s) 2019. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2019</copyright-year>
      <license license-type="cc-by-nc" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">http://creativecommons.org/licenses/by-nc/4.0/</ext-link>), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.com</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btz377.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>Whole-genome alignment (WGA) methods show insufficient scalability toward the generation of large-scale WGAs. Profile alignment-based approaches revolutionized the fields of multiple sequence alignment construction methods by significantly reducing computational complexity and runtime. However, WGAs need to consider genomic rearrangements between genomes, which make the profile-based extension of several whole-genomes challenging. Currently, none of the available methods offer the possibility to align or extend WGA profiles.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>Here, we present genome profile alignment, an approach that aligns the profiles of WGAs and that is capable of producing large-scale WGAs many times faster than conventional methods. Our concept relies on already available whole-genome aligners, which are used to compute several smaller sets of aligned genomes that are combined to a full WGA with a divide and conquer approach. To align or extend WGA profiles, we make use of the SuperGenome data structure, which features a bidirectional mapping between individual sequence and alignment coordinates. This data structure is used to efficiently transfer different coordinate systems into a common one based on the principles of profiles alignments. The approach allows the computation of a WGA where alignments are subsequently merged along a guide tree. The current implementation uses <monospace>progressiveMauve a</monospace>nd offers the possibility for parallel computation of independent genome alignments. Our results based on various bacterial datasets up to several hundred genomes show that we can reduce the runtime from months to hours with a quality that is negligibly worse than the WGA computed with the conventional <monospace>progressiveMauve</monospace> tool.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p><monospace>GPA</monospace> is freely available at <ext-link ext-link-type="uri" xlink:href="https://lambda.informatik.uni-tuebingen.de/gitlab/ahennig/GPA">https://lambda.informatik.uni-tuebingen.de/gitlab/ahennig/GPA</ext-link>. <monospace>GPA</monospace> is implemented in Java, uses <monospace>progressiveMauve</monospace> and offers a parallel computation of WGAs.</p>
      </sec>
      <sec id="s4">
        <title>Supplementary information</title>
        <p><xref ref-type="supplementary-material" rid="sup1">Supplementary data</xref> are available at <italic>Bioinformatics</italic> online.</p>
      </sec>
    </abstract>
    <counts>
      <page-count count="10"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Whole-genome sequencing (WGS) has become increasingly affordable due to the continuous developments of next-generation sequencing technologies. WGS for example is now routinely conducted in a clinical context to monitor pandemic bacterial outbreaks based on the sequencing of different isolates. Single nucleotide polymorphisms (SNPs) between isolates and a reference genome can help to understand and reconstruct transmission chains (<xref rid="btz377-B5" ref-type="bibr">Bryant <italic>et al.</italic>, 2013</xref>; <xref rid="btz377-B22" ref-type="bibr">Sabat <italic>et al.</italic>, 2013</xref>). The disadvantage using a single reference to compare different individuals is that features missing from the reference cannot be detected. Especially in the absence of a closely related reference genome, such an approach is not appropriate (<xref rid="btz377-B1" ref-type="bibr">Abdelbary <italic>et al.</italic>, 2018</xref>). To overcome this problem, an increasing number of studies incorporate the pan-genome of the species into the analysis of different isolates. Here, gene content and genomic rearrangements such as insertions, deletions, translocations and inversions are used to explain the manifestation of phenotypic traits like antibiotic resistance (<xref rid="btz377-B20" ref-type="bibr">Medini <italic>et al.</italic>, 2005</xref>). One approach to compute a pan-genome is based on whole-genome alignments (WGAs) [see for example <xref rid="btz377-B2" ref-type="bibr">Angiuoli <italic>et al.</italic> (2011)</xref>; <xref rid="btz377-B15" ref-type="bibr">Hennig <italic>et al.</italic> (2015</xref>); <xref rid="btz377-B23" ref-type="bibr">Schatz <italic>et al.</italic> (2014)</xref>]. In comparison to a BLAST-based approach or variants of it which are employed to compute orthologous gene groups, the WGA-based approach has the advantage that for the identification of orthologous genes gene neighborhood is taken into account. In addition, the pan-genome based on a WGA can be generalized to consider also nongenic features. Further applications of WGAs encompass the identification of pathogenic genomic islands or reconstruction of phylogenomic trees (<xref rid="btz377-B6" ref-type="bibr">Chan and Ragan, 2013</xref>).</p>
    <p>Runtimes of current state-of-the-art aligners that are capable of modeling genomic rearrangements, such as <monospace>progressiveMauve</monospace> (<xref rid="btz377-B7" ref-type="bibr">Darling <italic>et al.</italic>, 2010</xref>), are at least quadratic in the number of genomes. Thus, computation of WGAs of hundreds or thousands of even closely related bacterial genomes with state-of-the-art tools are prohibitive. Currently only <monospace>Parsnp</monospace> (<xref rid="btz377-B25" ref-type="bibr">Treangen <italic>et al.</italic>, 2014</xref>) is able to compute large-scale alignments with hundreds or even thousands of genomes within hours. However, it computes only a core-genome alignment. While <monospace>Parsnp</monospace> is a highly valuable tool for the identification of SNPs from the core pan-genome, it does not allow for the detection of genomic rearrangements and pathogenic islands for example. Recent advances in the field of WGA methods were made with the introduction of seq-seq-pan (<xref rid="btz377-B18" ref-type="bibr">Jandrasits <italic>et al.</italic>, 2018</xref>), which offers the efficient extension of existing WGA by new genomes. Through a pairwise iterative alignment process, new genomic sequences are aligned against the consensus sequence of the alignment, which shows a substantial runtime decrease while achieving comparably high-quality alignments.</p>
    <p><monospace>seq-seq-pan</monospace> makes use of the profile of a pairwise alignment (and deduces a consensus sequence) for extension by new sequences. Using a profile as a representation for an alignment is a popular concept for calculating multiple sequence alignments (MSA) and was first introduced by <xref rid="btz377-B17" ref-type="bibr">Hogeweg and Hesper (1984)</xref> in their progressive alignment heuristic. The idea to progressively compute MSAs along a guide tree, where at each node either a pairwise alignment between sequences, a sequence and a profile or two profiles are conducted, reduces the runtime significantly in contrast to the construction of an optimal alignment that maximizes the sum of pairs score for example. Especially the profile–profile alignment offers a fast and efficient way to combine two separate alignments. Recent advances in this field have been made by <xref rid="btz377-B19" ref-type="bibr">Liu and Warnow (2014)</xref> with the idea of a divide and conquer approach to compute smaller subsets of alignments which are merged through a profile–profile alignment. The parallel computation of the subset alignments further reduces the computational runtime, while still achieving highly accurate results.However, currently such a profile alignment-based approach is missing in state-of-the-art alignment tools such as <monospace>progressiveMauve</monospace>. Since WGAs need to consider genomic rearrangements, such as translocations and inversions, between the individual genomes, a profile alignment of two or more WGAs is more difficult than a profile alignment of MSAs. Here, we introduce our concept for the first profile–profile alignment of WGAs. The profile-based merging of WGAs is conducted with the help of our SuperGenome data structure (<xref rid="btz377-B16" ref-type="bibr">Herbig <italic>et al.</italic>, 2012</xref>), which can be used to transfer different WGA-coordinate systems into a common one.</p>
    <p>Based on this profile-based alignment approach, we implemented GPA (genome profile alignment), a software that can align hundreds to thousands of genomes in a fast and efficient manner. The goals of our WGA construction strategy were to adopt the advances from the field of profile-based MSA tools, and therefore significantly reduce computational time and still achieving highly accurate WGAs. Our intention was not to develop a new genome alignment algorithm. Therefore, <monospace>GPA</monospace> relies on other whole-genome aligners but using a divide and conquer strategy to merge subsets of alignments along a guide tree. In our current release, we have combined <monospace>progressiveMauve</monospace> with our profile-based approach.</p>
    <p>The article is organized as follows: In Section 2, we first present the SuperGenome data structure and the algorithmic principles that allow an efficient merging of several alignments. The critical aspect is the transfer of different coordinate systems into a common one, which is supported by the SuperGenome. We explain in detail the extension of a given WGA by other genomes or other WGAs. Based on this, we then explain how to compute large-scale WGAs from scratch in a fast and parallelized manner. The section concludes with a description of statistics that we used to compare and evaluate our approach with the original <monospace>progressiveMauve</monospace>. The Section 3 presents the evaluation of the WGAs computed for different simulated as well as real biological datasets by <monospace>progressiveMauve</monospace> and <monospace>GPA</monospace>. The evaluation is focused on the runtime needed and the achieved quality of the WGA by both approaches. Finally, we conclude this article with a critical discussion of our results and propose future extensions of our approach.</p>
  </sec>
  <sec>
    <title>2 Materials and methods</title>
    <sec>
      <title>2.1 SuperGenome data structure and construction</title>
      <p>In comparison to MSA, where the order of nucleotides within each sequence is assumed to be preserved, aligning whole-genomes has to consider the occurrence of rearrangements, such as translocations as well as inversions. Regions shared by two or more genomes that do not contain any rearrangements of homologous sequences are called locally collinear blocks (LCBs), and a WGA is typically then represented by a set of such LCBs. Programs computing WGAs of this form are for example Mauve (<xref rid="btz377-B8" ref-type="bibr">Darling <italic>et al.</italic>, 2004</xref>), <monospace>progressiveMauve</monospace> (<xref rid="btz377-B7" ref-type="bibr">Darling <italic>et al.</italic>, 2010</xref>), Mugsy (<xref rid="btz377-B2" ref-type="bibr">Angiuoli and Salzberg, 2011</xref>) and TBA (<xref rid="btz377-B4" ref-type="bibr">Blanchette <italic>et al.</italic>, 2004</xref>). The SuperGenome is a data structure, which makes use of a WGA and features a bidirectional mapping between the alignment coordinates and the original coordinates of each individual genome in the WGA (<xref rid="btz377-B16" ref-type="bibr">Herbig <italic>et al.</italic>, 2012</xref>). The main advantage of the SuperGenome data structure is that it provides an unambiguous coordinate system and is independent of any prechosen reference genome.</p>
      <p>We will first introduce some formal terminology before we then describe the algorithm to compute large-scale WGAs to decrease computational runtime using a profile-based approach together with the SuperGenome data structures derived from the profiles.</p>
      <p>Given are <italic>n</italic> genomes <inline-formula id="IE1"><mml:math id="IM1"><mml:mrow><mml:msub><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:math></inline-formula> and a WGA <inline-formula id="IE2"><mml:math id="IM2"><mml:mi mathvariant="bold">A</mml:mi></mml:math></inline-formula> on these <italic>n</italic> genomes. For every genome, we define a pair of integer arrays <italic>G<sub>i</sub></italic> and <italic>SG<sub>i</sub></italic>, which provides the bidirectional mapping between the genomic positions of <italic>g<sub>i</sub></italic> and alignment positions of <inline-formula id="IE3"><mml:math id="IM3"><mml:mi mathvariant="bold">A</mml:mi></mml:math></inline-formula>. Let us assume that the <italic>j</italic>-th base of <italic>g<sub>i</sub></italic> is aligned at the <italic>k</italic>-th position in <inline-formula id="IE4"><mml:math id="IM4"><mml:mi mathvariant="bold">A</mml:mi></mml:math></inline-formula>. Thus, <italic>G<sub>i</sub></italic>, representing the mapping of <italic>g<sub>i</sub></italic> to <inline-formula id="IE5"><mml:math id="IM5"><mml:mi mathvariant="bold">A</mml:mi></mml:math></inline-formula>, contains the value <italic>k</italic> at entry <italic>j</italic>. In the case that the base was aligned as its reverse complement (i.e., representing an inversion), the value of <italic>k</italic> is negative:
<disp-formula id="E1"><label>(1)</label><mml:math id="M1"><mml:mrow><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="true">{</mml:mo><mml:mrow><mml:mtable><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mtext>if</mml:mtext><mml:mo> </mml:mo><mml:mtext>base</mml:mtext><mml:mo> </mml:mo><mml:mi>j</mml:mi><mml:mo> </mml:mo><mml:mtext>is</mml:mtext><mml:mo> </mml:mo><mml:mtext>aligned</mml:mtext><mml:mo> </mml:mo><mml:mtext>in</mml:mtext><mml:mo> </mml:mo><mml:mtext>forward</mml:mtext><mml:mo> </mml:mo><mml:mtext>orientation</mml:mtext><mml:mo> </mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mo>−</mml:mo><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mtext>if</mml:mtext><mml:mo> </mml:mo><mml:mtext>base</mml:mtext><mml:mo> </mml:mo><mml:mi>j</mml:mi><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mtext>is</mml:mtext><mml:mo> </mml:mo><mml:mtext>aligned</mml:mtext><mml:mo> </mml:mo><mml:mtext>as</mml:mtext><mml:mo> </mml:mo><mml:mtext>reverse</mml:mtext><mml:mo> </mml:mo><mml:mtext>complement</mml:mtext><mml:mo> </mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow><mml:mo> </mml:mo></mml:mrow></mml:math></disp-formula></p>
      <p>The respective SuperGenome array <italic>SG<sub>i</sub></italic> represents the mapping of the aligned sequence of genome <italic>g<sub>i</sub></italic> in <inline-formula id="IE6"><mml:math id="IM6"><mml:mi mathvariant="bold">A</mml:mi></mml:math></inline-formula> and is analogous to <italic>G<sub>i</sub></italic>. In addition, it also accounts for gaps. In case at position <italic>k</italic> in <inline-formula id="IE7"><mml:math id="IM7"><mml:mi mathvariant="bold">A</mml:mi></mml:math></inline-formula> no base of <italic>g<sub>i</sub></italic> was aligned the entry is set to zero:
<disp-formula id="E2"><label>(2)</label><mml:math id="M2"><mml:mrow><mml:mi>S</mml:mi><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo stretchy="true">=</mml:mo><mml:mrow><mml:mo stretchy="true">{</mml:mo><mml:mrow><mml:mtable><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mtext>if</mml:mtext><mml:mo> </mml:mo><mml:mtext>base</mml:mtext><mml:mo> </mml:mo><mml:mi>j</mml:mi><mml:mo> </mml:mo><mml:mtext>is</mml:mtext><mml:mo> </mml:mo><mml:mtext>aligned</mml:mtext><mml:mo> </mml:mo><mml:mtext>in</mml:mtext><mml:mo> </mml:mo><mml:mtext>forward</mml:mtext><mml:mo> </mml:mo><mml:mtext>orientation</mml:mtext><mml:mo> </mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mo>−</mml:mo><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mtext>if</mml:mtext><mml:mo> </mml:mo><mml:mtext>base</mml:mtext><mml:mo> </mml:mo><mml:mi>j</mml:mi><mml:mo> </mml:mo><mml:mtext>is</mml:mtext><mml:mo> </mml:mo><mml:mtext>aligned</mml:mtext><mml:mo> </mml:mo><mml:mtext>as</mml:mtext><mml:mo> </mml:mo><mml:mtext>reverse</mml:mtext><mml:mo> </mml:mo><mml:mtext>complement</mml:mtext><mml:mo> </mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mo> </mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mtext>if</mml:mtext><mml:mo> </mml:mo><mml:mtext>no</mml:mtext><mml:mo> </mml:mo><mml:mtext>base</mml:mtext><mml:mo> </mml:mo><mml:mtext>of</mml:mtext><mml:mo> </mml:mo><mml:msub><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mi mathvariant="normal">i</mml:mi></mml:msub><mml:mo> </mml:mo><mml:mtext>aligns</mml:mtext><mml:mo> </mml:mo><mml:mtext>at</mml:mtext><mml:mo> </mml:mo><mml:mtext>that</mml:mtext><mml:mo> </mml:mo><mml:mtext>position</mml:mtext><mml:mo> </mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula></p>
      <p>An example illustrating the concept of the two arrays is shown in <xref ref-type="fig" rid="btz377-F1">Figure 1A</xref>.
</p>
      <fig id="btz377-F1" orientation="portrait" position="float">
        <label>Fig. 1.</label>
        <caption>
          <p>(<bold>A</bold>) Example of the SuperGenome data structure with its arrays <italic>G</italic> and <italic>SG</italic> for a genome with its aligned genomic sequence. As visually encoded, the array <italic>G</italic> resembles the alignment position for each base, while <italic>SG</italic> stores the genomic positions of the aligned bases. Negative values in <italic>G</italic> and <italic>SG</italic> indicate the alignment of the reversed complement of the base. (<bold>B</bold>) Based on the three genomic sequences <italic>g</italic><sub>1</sub>, <italic>g</italic><sub>2</sub> and <italic>g</italic><sub>3</sub> and their alignment <inline-formula id="IE8"><mml:math id="IM8"><mml:mrow><mml:mi mathvariant="bold">A</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, a SuperGenome data structure (union of the <italic>SG</italic> and <italic>G</italic> arrays) is computed. In addition, a consensus sequence from the alignment is deduced. (<bold>C</bold>) A new genomic sequence <italic>g</italic><sub>4</sub> is combined with <inline-formula id="IE9"><mml:math id="IM9"><mml:mrow><mml:mi mathvariant="bold">A</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. For this a pairwise alignment <inline-formula id="IE10"><mml:math id="IM10"><mml:mrow><mml:mi mathvariant="bold">A</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="italic">cons</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mn>4</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is computed and again a SuperGenome data structure is deduced. (<bold>D</bold>) Update of <inline-formula id="IE511"><mml:math id="IM11"><mml:mrow><mml:mi mathvariant="bold">A</mml:mi></mml:mrow></mml:math></inline-formula> by <italic>g</italic><sub>4</sub>: for every position <italic>j</italic> in <inline-formula id="IE11"><mml:math id="IM12"><mml:mrow><mml:mi mathvariant="bold">A</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="italic">cons</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mn>4</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, (1) array <inline-formula id="IE12"><mml:math id="IM13"><mml:mrow><mml:mi>S</mml:mi><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">cons</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> (orange) contains the index of the aligned consensus sequence positions, which is used to determine the original genomic positions <inline-formula id="IE13"><mml:math id="IM14"><mml:mrow><mml:mi>S</mml:mi><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:mi>S</mml:mi><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">cons</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> (example shown in blue). (2) This allows a coordinate transfer <inline-formula id="IE14"><mml:math id="IM15"><mml:mrow><mml:mi mathvariant="italic">SG</mml:mi><mml:msub><mml:mrow><mml:mo>′</mml:mo></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:mi>S</mml:mi><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:mi>S</mml:mi><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">cons</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE15"><mml:math id="IM16"><mml:mrow><mml:mi>G</mml:mi><mml:msub><mml:mrow><mml:mo>′</mml:mo></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:mi mathvariant="italic">SG</mml:mi><mml:msub><mml:mrow><mml:mo>′</mml:mo></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:math></inline-formula> (red) into a common coordinate system of <inline-formula id="IE16"><mml:math id="IM17"><mml:mrow><mml:mi mathvariant="bold">A</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="italic">cons</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mn>4</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. (E) From the updated SuperGenome data structure the new alignment <inline-formula id="IE17"><mml:math id="IM18"><mml:mrow><mml:mi mathvariant="bold">A</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mn>4</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is easily deduced</p>
        </caption>
        <graphic xlink:href="btz377f1"/>
      </fig>
      <p>These two arrays enable a simple way to deduce information from the WGA. For alignment position <italic>k</italic> it is easy to determine which individual genomic positions are aligned with each other by accessing <inline-formula id="IE18"><mml:math id="IM19"><mml:mrow><mml:mi>S</mml:mi><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> for each genome <italic>g<sub>i</sub></italic>. Vice versa, to determine which bases are aligned to a specific base <italic>j</italic> from <italic>g<sub>i</sub></italic>, the image of <inline-formula id="IE19"><mml:math id="IM20"><mml:mrow><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> is computed and the respective entry in the SG arrays is then used as above.</p>
      <p>For a given WGA of <italic>n</italic> genomes, the generation of the data structure is straightforward. For each genome, the pair of arrays <italic>G<sub>i</sub></italic> and <italic>SG<sub>i</sub></italic> is first initialized with the corresponding lengths of <italic>g<sub>i</sub></italic> and <inline-formula id="IE20"><mml:math id="IM21"><mml:mi mathvariant="bold">A</mml:mi></mml:math></inline-formula>, respectively, containing only zeros for each entry. To simplify the handling of the 0-based array structure of Java, the arrays have a leading entry (set to zero), resulting such that the <italic>j</italic>-th entry of the array represents the <italic>j</italic>-th position in the genome or the alignment. Through an iteration over every alignment position, the arrays are filled, resulting in a total of <inline-formula id="IE21"><mml:math id="IM22"><mml:mrow><mml:mn>2</mml:mn><mml:mo>×</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:math></inline-formula> arrays with a space requirement of <inline-formula id="IE22"><mml:math id="IM23"><mml:mrow><mml:mi>n</mml:mi><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> length of the alignment and the sum of all genome lengths.</p>
      <p>In addition to the coordinate mapping, the SuperGenome takes the LCB structure into account, as for example, computed by <monospace>progressiveMauve</monospace> and stored in <monospace>XMFA</monospace>-format. The coordinate system of the alignment and its mapping to the genomic position, thus the <italic>SG</italic> arrays, is based on the concatenation of the individual LCBs contained in the <monospace>XMFA</monospace>-file. For the construction of the data structure the ordering of the LCB does not matter, however for consistency we simply using the predefined ordering of the input file. Furthermore, this ordering and the lengths of the LCBs are stored to allow the inference of the LCBs from the SG arrays. For example, for two LCBs of length <italic>n</italic> and <italic>m</italic>, respectively, the array positions <inline-formula id="IE23"><mml:math id="IM24"><mml:mrow><mml:mi mathvariant="italic">SG</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE24"><mml:math id="IM25"><mml:mrow><mml:mi mathvariant="italic">SG</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> represent these two LCBs.</p>
      <p>From the SuperGenome data structure, the WGA can be derived from the arrays <italic>SG<sub>i</sub></italic>, where each aligned sequence of <italic>g<sub>i</sub></italic> can be reconstructed iteratively back from the genomic positions of the entries. Here, inversions (negative values) and gaps (zeroes) have to be taken into account.</p>
    </sec>
    <sec>
      <title>2.2 Extending an existing WGA</title>
      <p>We now first describe how a new genome is added to an existing WGA on <italic>n</italic> genomes using the SuperGenome approach. Then we show how to extend this principle to merging two WGAs on <italic>n</italic> and <italic>m</italic> genomes, respectively, into a WGA on <italic>n </italic>+<italic> m</italic> genomes. The general idea is that for the extension step only a pairwise alignment is computed. This concept can then be generalized to several alignments and genomes that are combined into a WGA of all involved genomes.</p>
      <p>A common approach to make use of an existing alignment <inline-formula id="IE25"><mml:math id="IM26"><mml:mi mathvariant="bold">A</mml:mi></mml:math></inline-formula> is a profile alignment, which preserves all prior aligned positions. The profile of <inline-formula id="IE26"><mml:math id="IM27"><mml:mi mathvariant="bold">A</mml:mi></mml:math></inline-formula> is represented by a consensus sequence, which is derived from the SuperGenome data structure through a majority call on all alignment positions of <inline-formula id="IE27"><mml:math id="IM28"><mml:mi mathvariant="bold">A</mml:mi></mml:math></inline-formula> (see <xref ref-type="fig" rid="btz377-F1">Fig. 1B</xref> for an example). For the integration of a new genome <inline-formula id="IE28"><mml:math id="IM29"><mml:mrow><mml:msub><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> into <inline-formula id="IE29"><mml:math id="IM30"><mml:mi mathvariant="bold">A</mml:mi></mml:math></inline-formula>, unique regions of <inline-formula id="IE30"><mml:math id="IM31"><mml:mrow><mml:msub><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and homologous regions of <inline-formula id="IE31"><mml:math id="IM32"><mml:mrow><mml:msub><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and the profile have to be computed in order to extend <inline-formula id="IE32"><mml:math id="IM33"><mml:mi mathvariant="bold">A</mml:mi></mml:math></inline-formula> by <inline-formula id="IE33"><mml:math id="IM34"><mml:mrow><mml:msub><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>. This is achieved by computing a pairwise alignment of the profile consensus sequence and the genomic sequence <inline-formula id="IE34"><mml:math id="IM35"><mml:mrow><mml:msub><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>. This pairwise alignment serves as a guiding alignment to extend the given alignment <inline-formula id="IE35"><mml:math id="IM36"><mml:mi mathvariant="bold">A</mml:mi></mml:math></inline-formula> by the new genome <inline-formula id="IE36"><mml:math id="IM37"><mml:mrow><mml:msub><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>. Again we use the SuperGenome data structure for this step (see <xref ref-type="fig" rid="btz377-F1">Fig. 1C–E</xref> for an illustration of this procedure). For this, the SuperGenome data structure of the pairwise alignment is computed, which includes the array <italic>SG<sub>cons</sub></italic> with all positions of the profile consensus sequence and <inline-formula id="IE37"><mml:math id="IM38"><mml:mrow><mml:mi>S</mml:mi><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, the SG array of genome <inline-formula id="IE38"><mml:math id="IM39"><mml:mrow><mml:msub><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>. The extension of <bold>A</bold> comprises the transfer of the coordinates of <italic>SG<sub>i</sub></italic> and <italic>G<sub>i</sub></italic> for the <italic>n</italic> genomes into the common coordinate system of <inline-formula id="IE39"><mml:math id="IM40"><mml:mrow><mml:mi>S</mml:mi><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mtext>cons</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE40"><mml:math id="IM41"><mml:mrow><mml:mi>S</mml:mi><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>. The new bidirectional coordinate mappings <inline-formula id="IE41"><mml:math id="IM42"><mml:mrow><mml:mi mathvariant="italic">SG</mml:mi><mml:msub><mml:mrow><mml:mo>′</mml:mo></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE42"><mml:math id="IM43"><mml:mrow><mml:mi>G</mml:mi><mml:msub><mml:mrow><mml:mo>′</mml:mo></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> for genome <italic>g<sub>i</sub></italic> are derived by
<disp-formula id="E3"><label>(3)</label><mml:math id="M3"><mml:mrow><mml:mi mathvariant="italic">SG</mml:mi><mml:msub><mml:mrow><mml:mo>′</mml:mo></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:mi>S</mml:mi><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:mi>S</mml:mi><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">cons</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo stretchy="false">]</mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mtext>and</mml:mtext><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mi mathvariant="normal">G</mml:mi><mml:msub><mml:mrow><mml:mo>′</mml:mo></mml:mrow><mml:mi mathvariant="normal">i</mml:mi></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:mtext>SG</mml:mtext><mml:msub><mml:mrow><mml:mo>′</mml:mo></mml:mrow><mml:mi mathvariant="normal">i</mml:mi></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:mi mathvariant="normal">j</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:mi mathvariant="normal">j</mml:mi></mml:mrow></mml:math></disp-formula>
where <inline-formula id="IE43"><mml:math id="IM44"><mml:mrow><mml:mi>S</mml:mi><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">cons</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> is the index of the consensus sequence, which is aligned at position <italic>j</italic> in the pairwise alignment, and <inline-formula id="IE44"><mml:math id="IM45"><mml:mrow><mml:mi>S</mml:mi><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:mi>S</mml:mi><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">cons</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> the index of the base of <italic>g<sub>i</sub></italic> that was aligned in <inline-formula id="IE45"><mml:math id="IM46"><mml:mi mathvariant="bold">A</mml:mi></mml:math></inline-formula>.This coordinate transfer restores all columns of alignment <inline-formula id="IE46"><mml:math id="IM47"><mml:mi mathvariant="bold">A</mml:mi></mml:math></inline-formula>. The arrays <inline-formula id="IE47"><mml:math id="IM48"><mml:mrow><mml:mi>S</mml:mi><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE48"><mml:math id="IM49"><mml:mrow><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> do not have to be updated, since they are already consistent with the coordinate system of the guiding alignment. Based on the updated SuperGenome data structure on <italic>n </italic>+<italic> </italic>1 genomes, the new alignment can now be easily derived and written into the alignment format as described above.</p>
      <p>The procedure for adding one genome to a WGA is easily extended to merging the profiles of two WGAs on <italic>n </italic>&gt;<italic> </italic>1 and <italic>m </italic>&gt;<italic> </italic>1 genomes, respectively. Again, we compute a pairwise alignment, now on the two respective consensus sequences, derive the respective SuperGenome, which together with the SuperGenome of the input WGAs is used to update the bidirectional mappings [see <xref ref-type="disp-formula" rid="E3">Equation (3)</xref>] of the two WGAs. A consequence of this merging procedure is that prior aligned bases remain aligned in the merged WGA.</p>
      <p>Finally, it is straightforward to generalize the pairwise approach to combining more than two WGAs or WGAs with individual genome sequences. Rather than aligning only two sequences, we compute the multiple genome alignment of all consensus sequences derived from the <italic>k </italic>&gt;<italic> </italic>2 individual WGAs as well as possible single genome sequences. The generalized workflow of merging several WGAs into a common WGA can be summarized in the following six steps (see also <xref ref-type="fig" rid="btz377-F2">Fig. 2</xref>):
</p>
      <fig id="btz377-F2" orientation="portrait" position="float">
        <label>Fig. 2.</label>
        <caption>
          <p>Workflow of merging several alignment and genomes using the SuperGenome data structure into a large WGA. The workflow consists of six steps: (1) Build SuperGenome for every alignment, (2) compute consensus sequence from input alignments, (3) align all consensus and genome sequences, (4) build SuperGenome of guiding alignment, (5) merge all alignments and genomes (marked with a star) via coordinates transfer and (6) output alignment of all sequences in <monospace>XMFA</monospace>-format derived from updated SuperGenome data structure</p>
        </caption>
        <graphic xlink:href="btz377f2"/>
      </fig>
      <list list-type="order">
        <list-item>
          <p>Construct SuperGenome data structure for every input alignment.</p>
        </list-item>
        <list-item>
          <p>For every SuperGenome compute a consensus sequence (output in FASTA format).</p>
        </list-item>
        <list-item>
          <p>Align consensus sequences as well as possible individual genome sequences with whole-genome aligner (e.g., using <monospace>progressiveMauve</monospace>) to generate the guiding alignment.</p>
        </list-item>
        <list-item>
          <p>Construct SuperGenome data structure for the guiding alignment.</p>
        </list-item>
        <list-item>
          <p>For every genome <italic>i</italic>, update <italic>SG<sub>i</sub></italic> and <italic>G<sub>i</sub></italic> according to <xref ref-type="disp-formula" rid="E3">Equation (3)</xref>.</p>
        </list-item>
        <list-item>
          <p>Output new alignment derived from updated <inline-formula id="IE49"><mml:math id="IM50"><mml:mrow><mml:mi mathvariant="italic">SG</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE50"><mml:math id="IM51"><mml:mrow><mml:mi>G</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula> (output in <monospace>XMFA</monospace>-format).</p>
        </list-item>
      </list>
      <p>The merged WGA also accounts for LCB structures from the input alignments. Previous start and stop positions in <italic>SG</italic>, which determine the borders of a LCB, are transferred and added to the ones introduced by the guiding alignment. The resulting LCBs of the merged WGA are defined between every consecutive pair of LCB border positions in <italic>SG</italic> originating from the different WGAs that are merged to secure the LCB property that no rearrangements within a block occur.</p>
    </sec>
    <sec>
      <title>2.3 Genome profile alignment</title>
      <p>We have implemented the described approach how to efficiently merge several WGAs or to extend a given WGA by new genomes using our SuperGenome data structure in the tool which we call <monospace>GPA</monospace>. Our tool is written in Java and can be run on any machine with a Java VM installed. For the computation of the WGAs, we currently make use of <monospace>progressiveMauve</monospace>, which needs to be installed independently.</p>
      <p><monospace>GPA</monospace> can be applied in two ways: it can align genome sequences from scratch, or it can be used to extend an existing WGA by new genomes. In the first case, the input data are the genome sequences that need to be provided in FASTA format. Since the general idea of our approach is to combine smaller sets of aligned genomes to a full WGA, these smaller sets first have to be defined. For this, we either make use of a guide tree, which determines the individual merging steps, or all genome sequences are randomly distributed into subsets, where the size of the subsets has to be predefined by the user. The guide tree needs to be provided by the user in Newick tree format and can, for example, be the one as computed by <monospace>progressiveMauve</monospace>. As most guide trees are binary and only two sequences are aligned at each node, the provided input tree is further modified, to control the number of sequences/WGAs that are aligned in each step. With a user-defined maximum number of sequences aligned in each step, the nodes of the guide tree (representing the set of sequences which will be aligned) are propagated from the leaves (representing the genomes) toward the root (representing the final WGA) until another propagation to the next node of the tree would exceed the maximum. This modified guide tree is used to compute an internal guide tree structure. In the next step, after the internal guide tree structure has been built, <monospace>GPA</monospace> automatically creates a folder structure, which serves to save the WGAs from the intermediate steps in <monospace>XMFA</monospace>-format. The computation of the WGAs follows the typical process of progressive alignments, starting at the leaves of the guide tree and the root represents the full WGA. If no guide tree has been provided, <monospace>GPA</monospace> merges all WGAs of the individual subsets into a common WGA in one step. To further decrease the runtime, <monospace>GPA</monospace> provides the possibility to compute the independent subalignments in parallel.</p>
      <p>The second application case is to extend an existing WGA. For this, <monospace>GPA</monospace> can be provided with an arbitrary number of WGAs and single genomes. Here, the respective profiles or genomic sequences are aligned in one step. The final WGA then contains all new genomes as well as those which were contained in the input WGAs. Note that in fact the second case is used throughout the computation of a WGA from scratch when using our approach in <monospace>GPA</monospace>.</p>
    </sec>
    <sec>
      <title>2.4 Experimental setup</title>
      <sec>
        <title>2.4.1 Evaluation criteria</title>
        <p>Besides runtime assessment, we used three different statistics to compare the WGA computed using our guide tree-based SuperGenome approach with the WGA computed by applying <monospace>progressiveMauve</monospace> to all genomes at once: <italic>pairwise consistency score</italic>, <italic>total column score</italic> and <italic>F-score</italic>.</p>
        <p>The pairwise consistency (PC) score reflects how much the WGA agrees with all possible pairwise alignments, a concept which was first described by <xref rid="btz377-B14" ref-type="bibr">Gotoh (1990)</xref> and adapted in <monospace>T-COFFEE</monospace> (<xref rid="btz377-B21" ref-type="bibr">Notredame <italic>et al.</italic>, 2000</xref>). For this, for each pair of genomes in the WGA, we compute the percentage of bases that are consistently aligned in the WGA and in the respective pairwise genome alignment. For a given WGA of <italic>n</italic> genomes, we then report the average PC score from all <inline-formula id="IE51"><mml:math id="IM52"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mtable><mml:mtr><mml:mtd><mml:mi>n</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>2</mml:mn></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> scores.</p>
        <p>The total column (TC) score, first introduced in <monospace>BaliBase</monospace> (<xref rid="btz377-B24" ref-type="bibr">Thompson <italic>et al.</italic>, 2005</xref>), equals the percentage of identically aligned columns in a given alignment when compared with a given reference alignment.</p>
        <p>The third statistic, the <italic>F</italic>-score, is the harmonic mean of <italic>precision</italic> and <italic>recall</italic> for identical pairwise aligned bases. The <italic>F</italic>-score was used in the Alignathon competition (<ext-link ext-link-type="uri" xlink:href="https://compbio.soe.ucsc.edu/alignathon/">https://compbio.soe.ucsc.edu/alignathon/</ext-link>) for the comparison of two WGAs (<xref rid="btz377-B9" ref-type="bibr">Earl <italic>et al.</italic>, 2014</xref>), where one of the two WGAs serves as a reference.</p>
        <p>All three statistics have been widely used to evaluate MSA methods. The TC score is very conservative and prone to small changes in the alignment, since one misaligned sequence can drastically decrease the score. Therefore, comparing the best MSA methods may only result in low TC scores. On the other hand, only slight differences in the PC score between two alignments, as well as a high TC and <italic>F</italic>-score, are reliable indicators for the similarity of the two. For the calculation of all scores when comparing two WGAs, one needs to take care of possible inversions and translocations. Again, the SuperGenome data structure serves extremely useful for this, and therefore we also used it for the calculation of these scores.</p>
      </sec>
      <sec>
        <title>2.4.2 Simulated datasets</title>
        <p>To evaluate the performance of <monospace>GPA</monospace> in the context of a ‘ground truth’, where the optimal WGA is known, we used the same genome simulation approach as the Alignathon. The simulated genomes were generated with the software <monospace>EVOLVER</monospace> (<xref rid="btz377-B10" ref-type="bibr">Edgar <italic>et al.</italic>, 2009</xref>) together with the <monospace>evolverSimControl suite</monospace> (<xref rid="btz377-B11" ref-type="bibr">Edgar <italic>et al.</italic>, 2012</xref>), that is able to evolve genomes based on a given phylogenetic tree and report the respective WGA. The simulation parameters required for the <monospace>evolverSimControl suite</monospace> were used from the <monospace>EVOLVER</monospace> example and adapted to prohibit duplication events, since Mauve cannot address duplication events. The <italic>F</italic>-scores between the simulated and <monospace>GPA</monospace> generated WGAs were calculated with <monospace>mafTools</monospace> (<xref rid="btz377-B9" ref-type="bibr">Earl <italic>et al.</italic>, 2014</xref>) (<ext-link ext-link-type="uri" xlink:href="https://github.com/dentearl/mafTools/">https://github.com/dentearl/mafTools/</ext-link>).</p>
      </sec>
      <sec>
        <title>2.4.3 Biological datasets</title>
        <p>To explore the performance of <monospace>GPA</monospace>, we applied our approach to a large number of complete single chromosome bacterial genomes from the same species which we derived from NCBI (<ext-link ext-link-type="uri" xlink:href="http://ftp://ftp.ncbi.nlm.nih.gov/genomes">ftp://ftp.ncbi.nlm.nih.gov/genomes</ext-link>). The various datasets reflect different genome lengths and sizes as well as diversities of genomes within a species to explore the performance of <monospace>GPA</monospace>. Currently, <monospace>GPA</monospace> can only handle single sequences per genome. However, it is possible to concatenate the different chromosomes (or plasmids) of one genome to overcome this limitation. Still, we decided to remove all possible plasmids prior to the WGA computation and only computed single chromosome alignments. All datasets used in this work are listed in <xref rid="btz377-T1" ref-type="table">Table 1</xref> together with the total number of genomes as well as the average genome length and average GC content (source <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/">https://www.ncbi.nlm.nih.gov/</ext-link>).</p>
        <table-wrap id="btz377-T1" orientation="portrait" position="float">
          <label>Table 1.</label>
          <caption>
            <p>The datasets, which were used for the WGA computations as obtained from the NCBI FTP server</p>
          </caption>
          <table frame="hsides" rules="groups">
            <colgroup span="1">
              <col valign="top" align="left" span="1"/>
              <col valign="top" align="char" char="." span="1"/>
              <col valign="top" align="char" char="." span="1"/>
              <col valign="top" align="char" char="." span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th rowspan="1" colspan="1">Organism</th>
                <th rowspan="1" colspan="1">No. of Strains</th>
                <th rowspan="1" colspan="1">Median genome length (Mb)</th>
                <th rowspan="1" colspan="1">GC content (%)</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="1" colspan="1">
                  <italic>B.cereus</italic>
                </td>
                <td rowspan="1" colspan="1">13</td>
                <td rowspan="1" colspan="1">5.760</td>
                <td rowspan="1" colspan="1">35.1</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <italic>L. monocytogenes</italic>
                </td>
                <td rowspan="1" colspan="1">30</td>
                <td rowspan="1" colspan="1">2.975</td>
                <td rowspan="1" colspan="1">37.9</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <italic>C.trachomatis</italic>
                </td>
                <td rowspan="1" colspan="1">72</td>
                <td rowspan="1" colspan="1">1.046</td>
                <td rowspan="1" colspan="1">41.3</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <italic>M.tuberculosis</italic>
                </td>
                <td rowspan="1" colspan="1">128</td>
                <td rowspan="1" colspan="1">4.385</td>
                <td rowspan="1" colspan="1">65.6</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <italic>K.pneumoniae</italic>
                </td>
                <td rowspan="1" colspan="1">166</td>
                <td rowspan="1" colspan="1">5.590</td>
                <td rowspan="1" colspan="1">57.2</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <italic>S.aureus</italic>
                </td>
                <td rowspan="1" colspan="1">176</td>
                <td rowspan="1" colspan="1">2.847</td>
                <td rowspan="1" colspan="1">32.8</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <italic>B.pertussis</italic>
                </td>
                <td rowspan="1" colspan="1">326</td>
                <td rowspan="1" colspan="1">4.100</td>
                <td rowspan="1" colspan="1">67.7</td>
              </tr>
            </tbody>
          </table>
          <table-wrap-foot>
            <fn id="tblfn1">
              <p><italic>Note:</italic> All statistics including the median genome length and median GC content have been derived from NCBI.</p>
            </fn>
          </table-wrap-foot>
        </table-wrap>
      </sec>
      <sec>
        <title>2.4.4 Computational platform</title>
        <p>We ran all WGA computations on a Linux server with four <italic>Intel(R) 197 Xeon(R) CPU E5-4610 v2 @ 2.30GHz</italic> and 500 GB of memory. We measured the runtime with the <monospace>GNU time</monospace> command. During all WGA computations, <monospace>GPA</monospace> used the maximal number of threads needed to ensure that all independent subset alignments could be computed in parallel.</p>
      </sec>
    </sec>
  </sec>
  <sec>
    <title>3 Results</title>
    <p>With <monospace>GPA</monospace>, we have extended <monospace>progressiveMauve</monospace> by the possibility to provide an existing sequence alignment in <monospace>XMFA</monospace>-format and align it to other sequences or alignments. Traditionally, profile alignment is conducted on a pairwise level, however, with <monospace>GPA</monospace> a multiple profile alignment can be computed in one step. With this feature, a progressive alignment strategy that is typically performed along a binary guide tree can now be generalized to nonbinary trees with fewer internal nodes. <monospace>GPA</monospace> provides a parameter <italic>k</italic>, that controls the maximal degree of multifurcation of every internal node and therefore how many genomes and/or profiles are merged at each step. Our overall intention for this strategy was to multiply align up to hundreds or more bacterial genomes with a significantly reduced runtime and at the same time achieve highly qualitative WGAs. We first evaluated the WGAs computed by <monospace>GPA</monospace> based on simulations, followed by comparison of the WGAs computed for real biological datasets.</p>
    <sec>
      <title>3.1 Evaluation based on simulated data</title>
      <p>We simulated five different WGAs of different sizes, where we used the genome of <italic>Bordetella pertussis</italic> (RefSeq ID: <italic>NC_002929.2</italic>) as the start of the simulation as well as the guide trees computed from real biological genomes (see below) using <monospace>progressiveMauve</monospace>. The simulations were all independent of each other. Therefore a comparison of the PC, TC and <italic>F</italic>-scores across the WGAs of different size is misleading because only the phylogenetic origin of the simulated dataset is same. Here, the focus is set on comparing the performance of the iterative profile alignment approach of <monospace>GPA</monospace> with <monospace>progressiveMauve</monospace>. For <monospace>GPA</monospace>, WGAs with different merge sizes <italic>k</italic> were computed, the one with the highest <italic>F</italic>-score is reported. For the evaluations based on the TC scores we either use the simulated alignment (as computed by <monospace>EVOLVER</monospace>) or the alignment computed by <monospace>progressiveMauve</monospace> at once as a reference.</p>
      <p>As can be seen from the results (see <xref rid="btz377-T2" ref-type="table">Table 2</xref>) the computation of the WGA by <monospace>GPA</monospace> is not only significantly faster than computation by <monospace>progressiveMauve</monospace>, but also the runtime difference increases drastically with increasing number of genomes. At the same time, the WGA computed by <monospace>GPA</monospace> is highly comparable to the one computed by <monospace>progressiveMauve</monospace>. Both WGA computation approaches yield highly similar PC and TC scores (with the simulated alignment as the reference), which differ in less than 2%. Also, the combination of high TC (&gt;60%) and <italic>F</italic>-scores (&gt;0.98) between the respective WGAs of both tools shows their high conformity. In addition, the <italic>F</italic>-scores, derived from the comparison of the WGA as computed by <monospace>progressiveMauve</monospace> and <monospace>GPA</monospace>, respectively, with the simulated, ‘ground truth’ WGA are almost identical. The largest difference between both approaches besides runtime is the memory needed to construct the alignment. Here, <monospace>GPA</monospace> needs around three to five times more memory than <monospace>progressiveMauve</monospace> to compute the WGAs. An exception for this is WGA computation of 80 simulated strains, where the increase of memory consumption as well as runtime of <monospace>progressiveMauve</monospace> is extraordinary. The simulation was repeated several times, and the large runtime and memory consumption was confirmed for each run.</p>
      <table-wrap id="btz377-T2" orientation="portrait" position="float">
        <label>Table 2.</label>
        <caption>
          <p>Evaluation of WGAs generated by progressiveMauve (PM) and <monospace>GPA</monospace> based on simulated WGAs by <monospace>EVOLVER</monospace> (EVO)</p>
        </caption>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th rowspan="1" colspan="1"/>
              <th colspan="2" rowspan="1">Runtime [min]</th>
              <th colspan="2" rowspan="1">PC score</th>
              <th align="left" rowspan="1" colspan="1"><italic>F</italic>-score</th>
              <th align="left" rowspan="1" colspan="1"><italic>F</italic>-score</th>
              <th align="left" rowspan="1" colspan="1"><italic>F</italic>-score</th>
              <th align="left" rowspan="1" colspan="1">TC score</th>
              <th align="left" rowspan="1" colspan="1">TC score</th>
              <th align="left" rowspan="1" colspan="1">TC score</th>
              <th colspan="2" rowspan="1">Memory usage [GB]</th>
            </tr>
            <tr>
              <th align="left" rowspan="1" colspan="1">No. of Strains</th>
              <th align="left" rowspan="1" colspan="1">PM</th>
              <th align="left" rowspan="1" colspan="1">GPA</th>
              <th align="left" rowspan="1" colspan="1">PM</th>
              <th align="left" rowspan="1" colspan="1">GPA</th>
              <th align="left" rowspan="1" colspan="1">PM with EVO</th>
              <th align="left" rowspan="1" colspan="1">GPA with EVO</th>
              <th align="left" rowspan="1" colspan="1">PM with GPA</th>
              <th align="left" rowspan="1" colspan="1">GPA in PM</th>
              <th align="left" rowspan="1" colspan="1">PM in EVO</th>
              <th align="left" rowspan="1" colspan="1">GPA in EVO</th>
              <th align="left" rowspan="1" colspan="1">PM</th>
              <th align="left" rowspan="1" colspan="1">GPA</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">10</td>
              <td rowspan="1" colspan="1">26</td>
              <td rowspan="1" colspan="1">8</td>
              <td rowspan="1" colspan="1">97.27%</td>
              <td rowspan="1" colspan="1">97.12%</td>
              <td rowspan="1" colspan="1">0.985</td>
              <td rowspan="1" colspan="1">0.985</td>
              <td rowspan="1" colspan="1">0.992</td>
              <td rowspan="1" colspan="1">92.54%</td>
              <td rowspan="1" colspan="1">92.26%</td>
              <td rowspan="1" colspan="1">90.39%</td>
              <td rowspan="1" colspan="1">0.72</td>
              <td rowspan="1" colspan="1">2.50</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">20</td>
              <td rowspan="1" colspan="1">125</td>
              <td rowspan="1" colspan="1">39</td>
              <td rowspan="1" colspan="1">98.28%</td>
              <td rowspan="1" colspan="1">98.24%</td>
              <td rowspan="1" colspan="1">0.997</td>
              <td rowspan="1" colspan="1">0.996</td>
              <td rowspan="1" colspan="1">0.996</td>
              <td rowspan="1" colspan="1">93.94%</td>
              <td rowspan="1" colspan="1">96.40%</td>
              <td rowspan="1" colspan="1">95.36%</td>
              <td rowspan="1" colspan="1">1.34</td>
              <td rowspan="1" colspan="1">4.59</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">40</td>
              <td rowspan="1" colspan="1">678</td>
              <td rowspan="1" colspan="1">121</td>
              <td rowspan="1" colspan="1">94.78%</td>
              <td rowspan="1" colspan="1">93.86%</td>
              <td rowspan="1" colspan="1">0.976</td>
              <td rowspan="1" colspan="1">0.971</td>
              <td rowspan="1" colspan="1">0.990</td>
              <td rowspan="1" colspan="1">62.84%</td>
              <td rowspan="1" colspan="1">60.18%</td>
              <td rowspan="1" colspan="1">58.74%</td>
              <td rowspan="1" colspan="1">2.33</td>
              <td rowspan="1" colspan="1">10.14</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">80</td>
              <td rowspan="1" colspan="1">14541</td>
              <td rowspan="1" colspan="1">163</td>
              <td rowspan="1" colspan="1">94.49%</td>
              <td rowspan="1" colspan="1">95.02%</td>
              <td rowspan="1" colspan="1">0.976</td>
              <td rowspan="1" colspan="1">0.977</td>
              <td rowspan="1" colspan="1">0.984</td>
              <td rowspan="1" colspan="1">63.67%</td>
              <td rowspan="1" colspan="1">68.03%</td>
              <td rowspan="1" colspan="1">70.68%</td>
              <td rowspan="1" colspan="1">23.11</td>
              <td rowspan="1" colspan="1">16.83</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">326</td>
              <td rowspan="1" colspan="1">—</td>
              <td rowspan="1" colspan="1">653</td>
              <td rowspan="1" colspan="1">—</td>
              <td rowspan="1" colspan="1">88.14%</td>
              <td align="center" rowspan="1" colspan="1">—</td>
              <td rowspan="1" colspan="1">0.948</td>
              <td rowspan="1" colspan="1">—</td>
              <td rowspan="1" colspan="1">—</td>
              <td rowspan="1" colspan="1">—</td>
              <td rowspan="1" colspan="1">14.13%</td>
              <td rowspan="1" colspan="1">—</td>
              <td rowspan="1" colspan="1">47.21</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <fn id="tblfn2">
            <p><italic>Note:</italic> All WGAs were evaluated with respect to their runtime (wall-clock time), average PC, <italic>F</italic>-scores achieved against EVO and maximal amount of RAM used in the process of WGA computation. In addition the TC score and <italic>F</italic>-score between PM and <monospace>GPA</monospace> is reported. Again, for the calculation of the TC and <italic>F</italic>-score, PM is used as the reference. <monospace>GPA</monospace> was run with several different parameters <italic>k</italic> for the merge size, reported for each dataset is the one with the highest <italic>F</italic>-score achieved with EVO.</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
      <p>Furthermore, for this alignment size a broader range of different <italic>k</italic> values were tested. As it can be seen in <xref rid="btz377-T3" ref-type="table">Table 3</xref>, even though a small <italic>k</italic> (relative to the alignment size) leads to a shorter runtime, it also results in notably lower quality scores for the computed WGAs. In particular, the TC score is more than 8% lower for <italic>k </italic>=<italic> </italic>3 in comparison to the values achieved with <italic>k </italic>&gt;<italic> </italic>10. We also noted that when <italic>k</italic> becomes large enough, the difference between quality scores become negligible.</p>
      <table-wrap id="btz377-T3" orientation="portrait" position="float">
        <label>Table 3.</label>
        <caption>
          <p>Evaluation of WGAs generated by <monospace>GPA</monospace> based on simulated WGAs with several different parameters <italic>k</italic> for the maximal merge size</p>
        </caption>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th align="left" rowspan="1" colspan="1">80 strains</th>
              <th align="left" rowspan="1" colspan="1">Runtime</th>
              <th align="left" rowspan="1" colspan="1">PC score</th>
              <th align="left" rowspan="1" colspan="1"><italic>F</italic>-score</th>
              <th align="left" rowspan="1" colspan="1"><italic>F</italic>-score</th>
              <th align="left" rowspan="1" colspan="1">TC score</th>
              <th align="left" rowspan="1" colspan="1">TC score</th>
            </tr>
            <tr>
              <th align="left" rowspan="1" colspan="1">
                <italic>k</italic>
              </th>
              <th align="left" rowspan="1" colspan="1">[min.]</th>
              <th rowspan="1" colspan="1"/>
              <th align="left" rowspan="1" colspan="1">GPA with EVO</th>
              <th align="left" rowspan="1" colspan="1">GPA with PM</th>
              <th align="left" rowspan="1" colspan="1">GPA in PM</th>
              <th align="left" rowspan="1" colspan="1">GPA in EVO</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">3</td>
              <td rowspan="1" colspan="1">24</td>
              <td rowspan="1" colspan="1">88.03%</td>
              <td rowspan="1" colspan="1">0.942</td>
              <td rowspan="1" colspan="1">0.947</td>
              <td rowspan="1" colspan="1">55.40%</td>
              <td rowspan="1" colspan="1">61.46%</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">7</td>
              <td rowspan="1" colspan="1">34</td>
              <td rowspan="1" colspan="1">90.38%</td>
              <td rowspan="1" colspan="1">0.955</td>
              <td rowspan="1" colspan="1">0.961</td>
              <td rowspan="1" colspan="1">59.02%</td>
              <td rowspan="1" colspan="1">64.90%</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">12</td>
              <td rowspan="1" colspan="1">96</td>
              <td rowspan="1" colspan="1">94.35%</td>
              <td rowspan="1" colspan="1">0.976</td>
              <td rowspan="1" colspan="1">0.982</td>
              <td rowspan="1" colspan="1">62.29%</td>
              <td rowspan="1" colspan="1">69.61%</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">17</td>
              <td rowspan="1" colspan="1">163</td>
              <td rowspan="1" colspan="1">94.70%</td>
              <td rowspan="1" colspan="1">0.977</td>
              <td rowspan="1" colspan="1">0.983</td>
              <td rowspan="1" colspan="1">63.67%</td>
              <td rowspan="1" colspan="1">70.68%</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">22</td>
              <td rowspan="1" colspan="1">177</td>
              <td rowspan="1" colspan="1">94.53%</td>
              <td rowspan="1" colspan="1">0.977</td>
              <td rowspan="1" colspan="1">0.984</td>
              <td rowspan="1" colspan="1">63.55%</td>
              <td rowspan="1" colspan="1">70.62%</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <fn id="tblfn3">
            <p><italic>Note:</italic> All WGAs were evaluated with respect to their runtime (wall-clock time) and PC score. In addition, TC score and <italic>F</italic>-scores between <monospace>GPA</monospace> and EVO as well as <monospace>GPA</monospace> and progressiveMauve are reported.</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
    </sec>
    <sec>
      <title>3.2 Evaluation based on biological data: runtime</title>
      <p>Since in the current implementation of <monospace>GPA</monospace>, we use <monospace>progressiveMauve</monospace> as underlying multiple genome alignment method, our evaluation focuses on the direct comparison between the WGA produced by applying <monospace>progressiveMauve</monospace> to all genomes at once and the WGA computed using our iterative merging approach implemented in <monospace>GPA</monospace>.</p>
      <p>To compare the runtimes for the WGA construction of both <monospace>progressiveMauve</monospace> and <monospace>GPA</monospace>, all WGAs are computed from scratch. Here, for datasets with less than 100 genomes, we chose to split these into randomly distributed groups that were of equal size if possible. For all other datasets, we used the guide tree produced by <monospace>progressiveMauve</monospace>, to determine the individual merging steps. In addition, for datasets with more than 100 genomes available, we computed several WGAs of different size. Starting at a set of 10 genomes, we subsequently added new genomes to the set for the next larger alignment. This ensures that we can evaluate the progression of the performance of the tools with the increasing number of genomes.</p>
      <p>The results (see <xref rid="btz377-T4" ref-type="table">Table 4</xref>) show a general significant runtime decrease for the WGA construction of <monospace>GPA</monospace> compared with <monospace>progressiveMauve</monospace>, independent of the dataset. As it can be seen from the results and <xref ref-type="fig" rid="btz377-F3">Figure 3</xref>, the runtime of <monospace>progressiveMauve</monospace> increases at least quadratically with the number of aligned genomes, while for <monospace>GPA</monospace> the increase shows a linear dependency.</p>
      <table-wrap id="btz377-T4" orientation="portrait" position="float">
        <label>Table 4.</label>
        <caption>
          <p>Comparison between the WGA construction using the original <monospace>progressiveMauve</monospace> (PM) method and our SuperGenome-based iterative profile alignment approach of <monospace>GPA</monospace></p>
        </caption>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th colspan="3" rowspan="1">Dataset</th>
              <th colspan="2" align="left" rowspan="1">Runtime [min]<hr/></th>
              <th colspan="2" align="left" rowspan="1">No. of LCBs<hr/></th>
              <th colspan="2" align="left" rowspan="1">PC score<hr/></th>
              <th align="left" rowspan="1" colspan="1">TC score<hr/></th>
              <th align="left" rowspan="1" colspan="1"><italic>F</italic>-score</th>
            </tr>
            <tr>
              <th rowspan="1" colspan="1"/>
              <th align="left" rowspan="1" colspan="1">Organism</th>
              <th align="left" rowspan="1" colspan="1">No. of Strains</th>
              <th align="left" rowspan="1" colspan="1">PM</th>
              <th align="left" rowspan="1" colspan="1">GPA</th>
              <th align="left" rowspan="1" colspan="1">PM</th>
              <th align="left" rowspan="1" colspan="1">GPA</th>
              <th align="left" rowspan="1" colspan="1">PM</th>
              <th align="left" rowspan="1" colspan="1">GPA</th>
              <th align="left" rowspan="1" colspan="1">GPA in PM</th>
              <th rowspan="1" colspan="1"/>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">10</td>
              <td rowspan="1" colspan="1">27</td>
              <td rowspan="1" colspan="1">9</td>
              <td rowspan="1" colspan="1">3</td>
              <td rowspan="1" colspan="1">6</td>
              <td rowspan="1" colspan="1">97.90%</td>
              <td rowspan="1" colspan="1">97.97%</td>
              <td rowspan="1" colspan="1">93.99%</td>
              <td rowspan="1" colspan="1">0.998</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">20</td>
              <td rowspan="1" colspan="1">98</td>
              <td rowspan="1" colspan="1">22</td>
              <td rowspan="1" colspan="1">16</td>
              <td rowspan="1" colspan="1">4</td>
              <td rowspan="1" colspan="1">96.83%</td>
              <td rowspan="1" colspan="1">97.29%</td>
              <td rowspan="1" colspan="1">88.31%</td>
              <td rowspan="1" colspan="1">0.994</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">
                <italic>M.tuberculosis</italic>
              </td>
              <td rowspan="1" colspan="1">40</td>
              <td rowspan="1" colspan="1">475</td>
              <td rowspan="1" colspan="1">41</td>
              <td rowspan="1" colspan="1">230</td>
              <td rowspan="1" colspan="1">72</td>
              <td rowspan="1" colspan="1">96.00%</td>
              <td rowspan="1" colspan="1">96.61%</td>
              <td rowspan="1" colspan="1">85.05%</td>
              <td rowspan="1" colspan="1">0.993</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">(4.385 Mb)</td>
              <td rowspan="1" colspan="1">80</td>
              <td rowspan="1" colspan="1">1665</td>
              <td rowspan="1" colspan="1">105</td>
              <td rowspan="1" colspan="1">852</td>
              <td rowspan="1" colspan="1">148</td>
              <td rowspan="1" colspan="1">92.36%</td>
              <td rowspan="1" colspan="1">93.03%</td>
              <td rowspan="1" colspan="1">73.03%</td>
              <td rowspan="1" colspan="1">0.990</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">128</td>
              <td rowspan="1" colspan="1">&gt;350 h<sup>a</sup></td>
              <td rowspan="1" colspan="1">527</td>
              <td align="center" rowspan="1" colspan="1">—</td>
              <td rowspan="1" colspan="1">437</td>
              <td align="center" rowspan="1" colspan="1">—</td>
              <td rowspan="1" colspan="1">90.67%</td>
              <td align="center" rowspan="1" colspan="1">—</td>
              <td align="center" rowspan="1" colspan="1">—</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">10</td>
              <td rowspan="1" colspan="1">55</td>
              <td rowspan="1" colspan="1">25</td>
              <td rowspan="1" colspan="1">177</td>
              <td rowspan="1" colspan="1">160</td>
              <td rowspan="1" colspan="1">38.77%</td>
              <td rowspan="1" colspan="1">38.94%</td>
              <td rowspan="1" colspan="1">73.13%</td>
              <td rowspan="1" colspan="1">0.991</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">20</td>
              <td rowspan="1" colspan="1">691</td>
              <td rowspan="1" colspan="1">90</td>
              <td rowspan="1" colspan="1">784</td>
              <td rowspan="1" colspan="1">769</td>
              <td rowspan="1" colspan="1">41.31%</td>
              <td rowspan="1" colspan="1">41.42%</td>
              <td rowspan="1" colspan="1">67.18%</td>
              <td rowspan="1" colspan="1">0.989</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">
                <italic>K.pneumoniae</italic>
              </td>
              <td rowspan="1" colspan="1">40</td>
              <td rowspan="1" colspan="1">9401</td>
              <td rowspan="1" colspan="1">99</td>
              <td rowspan="1" colspan="1">3369</td>
              <td rowspan="1" colspan="1">1463</td>
              <td rowspan="1" colspan="1">42.91%</td>
              <td rowspan="1" colspan="1">43.15%</td>
              <td rowspan="1" colspan="1">55.94%</td>
              <td rowspan="1" colspan="1">0.981</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <bold>Guide tree</bold>
              </td>
              <td rowspan="1" colspan="1">(5.590 Mb)</td>
              <td rowspan="1" colspan="1">80</td>
              <td rowspan="1" colspan="1">120 038</td>
              <td rowspan="1" colspan="1">329</td>
              <td rowspan="1" colspan="1">3986</td>
              <td rowspan="1" colspan="1">4632</td>
              <td rowspan="1" colspan="1">42.15%</td>
              <td rowspan="1" colspan="1">42.38%</td>
              <td rowspan="1" colspan="1">45.02%</td>
              <td rowspan="1" colspan="1">0.974</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">166</td>
              <td rowspan="1" colspan="1">&gt;6250 h<sup>a</sup></td>
              <td rowspan="1" colspan="1">771</td>
              <td align="center" rowspan="1" colspan="1">—</td>
              <td rowspan="1" colspan="1">8558</td>
              <td align="center" rowspan="1" colspan="1">—</td>
              <td rowspan="1" colspan="1">41.19%</td>
              <td align="center" rowspan="1" colspan="1">—</td>
              <td align="center" rowspan="1" colspan="1">—</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">10</td>
              <td rowspan="1" colspan="1">16</td>
              <td rowspan="1" colspan="1">7</td>
              <td rowspan="1" colspan="1">221</td>
              <td rowspan="1" colspan="1">53</td>
              <td rowspan="1" colspan="1">82.45%</td>
              <td rowspan="1" colspan="1">81.81%</td>
              <td rowspan="1" colspan="1">73.07%</td>
              <td rowspan="1" colspan="1">0.983</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">20</td>
              <td rowspan="1" colspan="1">64</td>
              <td rowspan="1" colspan="1">33</td>
              <td rowspan="1" colspan="1">415</td>
              <td rowspan="1" colspan="1">362</td>
              <td rowspan="1" colspan="1">81.58%</td>
              <td rowspan="1" colspan="1">81.11%</td>
              <td rowspan="1" colspan="1">67.83%</td>
              <td rowspan="1" colspan="1">0.986</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">
                <italic>S.aureus</italic>
              </td>
              <td rowspan="1" colspan="1">40</td>
              <td rowspan="1" colspan="1">552</td>
              <td rowspan="1" colspan="1">28</td>
              <td rowspan="1" colspan="1">1222</td>
              <td rowspan="1" colspan="1">555</td>
              <td rowspan="1" colspan="1">76.33%</td>
              <td rowspan="1" colspan="1">75.70%</td>
              <td rowspan="1" colspan="1">56.63%</td>
              <td rowspan="1" colspan="1">0.976</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">(2.847 Mb)</td>
              <td rowspan="1" colspan="1">80</td>
              <td rowspan="1" colspan="1">5213</td>
              <td rowspan="1" colspan="1">121</td>
              <td rowspan="1" colspan="1">2492</td>
              <td rowspan="1" colspan="1">2498</td>
              <td rowspan="1" colspan="1">73.02%</td>
              <td rowspan="1" colspan="1">72.50%</td>
              <td rowspan="1" colspan="1">47.37%</td>
              <td rowspan="1" colspan="1">0.976</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">176</td>
              <td rowspan="1" colspan="1">&gt;1650 h<sup>a</sup></td>
              <td rowspan="1" colspan="1">198</td>
              <td align="center" rowspan="1" colspan="1">—</td>
              <td rowspan="1" colspan="1">3213</td>
              <td align="center" rowspan="1" colspan="1">—</td>
              <td rowspan="1" colspan="1">71.91%</td>
              <td align="center" rowspan="1" colspan="1">—</td>
              <td align="center" rowspan="1" colspan="1">—</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">10</td>
              <td rowspan="1" colspan="1">24</td>
              <td rowspan="1" colspan="1">9</td>
              <td rowspan="1" colspan="1">64</td>
              <td rowspan="1" colspan="1">56</td>
              <td rowspan="1" colspan="1">58.77%</td>
              <td rowspan="1" colspan="1">58.99%</td>
              <td rowspan="1" colspan="1">95.87%</td>
              <td rowspan="1" colspan="1">0.995</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">20</td>
              <td rowspan="1" colspan="1">99</td>
              <td rowspan="1" colspan="1">16</td>
              <td rowspan="1" colspan="1">88</td>
              <td rowspan="1" colspan="1">115</td>
              <td rowspan="1" colspan="1">58.56%</td>
              <td rowspan="1" colspan="1">58.45%</td>
              <td rowspan="1" colspan="1">90.06%</td>
              <td rowspan="1" colspan="1">0.991</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">
                <italic>B.pertussis</italic>
              </td>
              <td rowspan="1" colspan="1">40</td>
              <td rowspan="1" colspan="1">503</td>
              <td rowspan="1" colspan="1">96</td>
              <td rowspan="1" colspan="1">165</td>
              <td rowspan="1" colspan="1">172</td>
              <td rowspan="1" colspan="1">57.65%</td>
              <td rowspan="1" colspan="1">57.78%</td>
              <td rowspan="1" colspan="1">85.48%</td>
              <td rowspan="1" colspan="1">0.990</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">(4.100 Mb)</td>
              <td rowspan="1" colspan="1">80</td>
              <td rowspan="1" colspan="1">1683</td>
              <td rowspan="1" colspan="1">78</td>
              <td rowspan="1" colspan="1">314</td>
              <td rowspan="1" colspan="1">373</td>
              <td rowspan="1" colspan="1">58.69%</td>
              <td rowspan="1" colspan="1">58.39%</td>
              <td rowspan="1" colspan="1">75.57%</td>
              <td rowspan="1" colspan="1">0.981</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">326</td>
              <td rowspan="1" colspan="1">&gt;6250 h<sup>a</sup></td>
              <td rowspan="1" colspan="1">504</td>
              <td align="center" rowspan="1" colspan="1">—</td>
              <td rowspan="1" colspan="1">3708</td>
              <td align="center" rowspan="1" colspan="1">—</td>
              <td rowspan="1" colspan="1">47.37%</td>
              <td align="center" rowspan="1" colspan="1">—</td>
              <td align="center" rowspan="1" colspan="1">—</td>
            </tr>
            <tr>
              <td colspan="11" rowspan="1">
                <hr/>
              </td>
            </tr>
            <tr>
              <td rowspan="7" colspan="1">
                <bold>Random</bold>
              </td>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <italic>B.cereus</italic>
              </td>
              <td rowspan="1" colspan="1">13</td>
              <td rowspan="1" colspan="1">225</td>
              <td rowspan="1" colspan="1">61</td>
              <td rowspan="1" colspan="1">380</td>
              <td rowspan="1" colspan="1">214</td>
              <td rowspan="1" colspan="1">60.00%</td>
              <td rowspan="1" colspan="1">60.63%</td>
              <td rowspan="1" colspan="1">62.40%</td>
              <td rowspan="1" colspan="1">0.977</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">(5.760 Mb)</td>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <italic>L.monocytogenes</italic>
              </td>
              <td rowspan="1" colspan="1">30</td>
              <td rowspan="1" colspan="1">628</td>
              <td rowspan="1" colspan="1">28</td>
              <td rowspan="1" colspan="1">293</td>
              <td rowspan="1" colspan="1">254</td>
              <td rowspan="1" colspan="1">73.41%</td>
              <td rowspan="1" colspan="1">73.92%</td>
              <td rowspan="1" colspan="1">61.50%</td>
              <td rowspan="1" colspan="1">0.989</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">(2.975 Mb)</td>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <italic>C.trachomatis</italic>
              </td>
              <td rowspan="1" colspan="1">72</td>
              <td rowspan="1" colspan="1">351</td>
              <td rowspan="1" colspan="1">14</td>
              <td rowspan="1" colspan="1">4</td>
              <td rowspan="1" colspan="1">80</td>
              <td rowspan="1" colspan="1">98.35%</td>
              <td rowspan="1" colspan="1">98.36%</td>
              <td rowspan="1" colspan="1">86.68%</td>
              <td rowspan="1" colspan="1">0.995</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">(1.046 Mb)</td>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <fn id="tblfn4">
            <p><italic>Note:</italic> The results are divided into two distinct groups, whether for <monospace>GPA</monospace> a guide tree (guide tree) was used or not (random). The runtime for WGA computation and the number of LCBs for the respective WGAs is reported. In addition, the WGAs were evaluated with respect to their average PC, the TC score (% of identical aligned columns in PM) and <italic>F</italic>-score. Both, for the calculation of the TC and <italic>F</italic>-score, PM is used as the reference. <monospace>GPA</monospace> was run with several different parameters <italic>k</italic> for the merge size, reported for each dataset is the one with the highest PC score.</p>
          </fn>
          <fn id="tblfn5">
            <label>a</label>
            <p>Time past till computation has been manually aborted by us.</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
      <fig id="btz377-F3" orientation="portrait" position="float">
        <label>Fig. 3.</label>
        <caption>
          <p>Comparison of the measured computational runtime needed for the construction of the WGA depending on the number of genomes for the datasets of <italic>S. aureus</italic> (left) and <italic>B. pertussis</italic> (right). In addition to the direct comparison between progressiveMauve (orange) and <monospace>GPA</monospace>, the upper left section only shows the runtime (wall-clock time) of <monospace>GPA</monospace> (blue) and <monospace>GPA</monospace> CPU time (green), together with the <italic>r</italic><sup>2</sup> values for the linear regression. The respective regression curves (PM cubic/<monospace>GPA</monospace> linear) were computed with R</p>
        </caption>
        <graphic xlink:href="btz377f3"/>
      </fig>
      <p>The scalability and runtime reduction of <monospace>GPA</monospace> is most impressive for the WGAs with over 80 genomes. Here, none of the WGAs computed by <monospace>progressiveMauve</monospace> have finished after 350 h or even 1650 h (more than 2 months) of computing time, where the choice was made to not further wait for the result. Note in all these cases, the guide tree was still constructed. In contrast to this, <monospace>GPA</monospace> could compute all WGA computations within a couple of hours or maximally few days. For example for the WGA of 176 <italic>Staphylococcus aureus</italic> strains <monospace>GPA</monospace> needed slightly more than 3 h (198 min), while <monospace>progressiveMauve</monospace> ran more than 1650 h without reporting a result, thus in this case <monospace>GPA</monospace> was at least 500 times faster.</p>
      <p>Independent from the used WGA construction method, the runtime comparison between the datasets of the species shows differences as well. Here, an essential factor is the average genomic length. The computation time needed for WGAs with the same number of aligned genomes was less for the shorter genomes of <italic>S.aureus</italic> than for <italic>Mycobacterium tuberculosis</italic> and <italic>B.pertussis</italic>, which show comparable average genome lengths as well as runtimes. The WGAs for <italic>Klebsiella pneumoniae</italic> that has on average the longest genomes also needed the longest absolute runtime. When comparing the results of <italic>M.tuberculosis</italic> and <italic>B.pertussis</italic>, which have a similar length, the diversity of the genomes within a dataset (reflected by a smaller overall PC score) does not affect the runtime as much as the genome length.</p>
      <p>The number of LCBs, which represent genomic architectural differences between the genomes, differ a lot between the organisms analyzed here. For example, WGAs of <italic>M.tuberculosis</italic> and <italic>B.pertussis</italic> with similar genome lengths have vastly different number of LCBs. On the other hand, as can be seen from <xref rid="btz377-T4" ref-type="table">Table 4</xref> with increasing number of aligned genomes from the same organism also the number of LCBs always increases, independent whether the WGA was computed using <monospace>progressiveMauve</monospace> or <monospace>GPA</monospace>. When comparing <monospace>progressiveMauve</monospace> and <monospace>GPA</monospace> for a given set of genomes, the number of LCBs is largely of similar order of magnitude, though in most cases (but not all) the WGA computed with <monospace>GPA</monospace> had less LCBs than those for the WGA computed with the original <monospace>progressiveMauve</monospace>.</p>
    </sec>
    <sec>
      <title>3.3 Evaluation based on biological data: qualitative comparison of WGAs</title>
      <p>In order to compare the WGA computed using <monospace>GPA</monospace> with the one computed by the original approach of <monospace>progressiveMauve</monospace>, we applied three evaluation criteria (see Section 2). For each dataset, we calculated the average PC score, TC score and <italic>F</italic>-score (see <xref rid="btz377-T4" ref-type="table">Table 4</xref>). For the calculation of TC and <italic>F</italic>-score, the <monospace>progressiveMauve</monospace>-generated WGA was chosen to be the reference.</p>
      <p>For each dataset, independent of the number of aligned strains per species, the average PC score is very similar between the <monospace>progressiveMauve</monospace>- and <monospace>GPA</monospace>-derived WGAs (&lt;1% difference). The largest difference of 0.67% is observed for the alignment of 80 strains of <italic>M.tuberculosis</italic>, where <monospace>GPA</monospace> yields a slightly higher PC score than <monospace>progressiveMauve</monospace>. Overall, the PC only slightly decreases within a species when adding more genomes to the alignment. The largest difference was observed for the WGAs computed for <italic>B.pertussis</italic>: here the average PC score dropped from 59% for 10 genomes down to 47.4% when 326 genomes were aligned. An exception has been observed for the <italic>K.pneumoniae</italic> WGAs. Here the average PC score of the WGA built from 10 and 20 genomes was smaller than for the WGAs with 40 and 80 genomes. Generally, the PC score differs most strongly when comparing different bacteria. While the WGAs of <italic>M.tuberculosis</italic> and <italic>Chlamydia trachomatis</italic> have average PC scores greater than 90%, the WGAs of <italic>K.pneumoniae</italic> achieve a maximum of 43%.</p>
      <p>The TC score, which represents the fraction of identically aligned columns, compares the WGAs computed by <monospace>GPA</monospace> with the one derived with the original <monospace>progressiveMauve</monospace>. Overall the TC score is above 60% in most cases, indicating that <monospace>GPA</monospace> aligns a majority of all columns identically to the original <monospace>progressiveMauve</monospace> even for larger WGAs with up to 80 genomes. Also, none of the WGAs of our test datasets shows a TC score below 45%. Similar to the PC score the TC score differs between different organisms though here the biggest differences are seen when increasing the number of genomes within a species. Interestingly, the PC and TC scores do not necessarily correlate a lot, i.e. WGAs with similar PC scores do not necessarily have similar TC scores. For example, WGAs with low PC scores (as seen for example in the case of <italic>B.pertussis</italic>) may have higher TC scores than WGAs with high PC scores (e.g. <italic>S.aureus</italic>).</p>
      <p>Another indicator of the high similarity of the WGAs computed with <monospace>GPA</monospace> and those computed with <monospace>progressiveMauve</monospace> is the very high <italic>F</italic>-score. Independent of the organism as well as the number of genomes the smallest value is 97.6% and the largest value is 99.8%. Here, in general the <italic>precision</italic> score is higher than the <italic>recall</italic> for the resulting <italic>F</italic>-score (data not shown). We observed that WGAs with a high TC score also have a high <italic>F</italic>-score. On the other hand, increasing the number of genomes for a WGA generally leads to a significant decrease of the TC score, while this behavior is not observed for the <italic>F</italic>-score. An example is <italic>S.aureus</italic>, where the lowest TC score in all comparisons was achieved, while the <italic>F</italic>-score is still above 0.97.</p>
    </sec>
    <sec>
      <title>3.4 Impact of compressing the guide tree</title>
      <p>Next, we analyzed the impact of the multifurcation parameter <italic>k</italic>, which is used to compress the input guide tree. This parameter <italic>k</italic> reflects the maximal degree of each internal node of the guide tree, which represents the maximal number of profiles or sequences that are merged in a single step during the WGA computation. Clearly, as can be seen from <xref rid="btz377-T4" ref-type="table">Table 4</xref>, the runtime of <monospace>progressiveMauve</monospace> increases significantly with increasing number of genomes. Thus, a trade-off between the number of genomes aligned at a time and runtime needs to be considered when choosing <italic>k</italic>.</p>
      <p>For this purpose, for a given initial guide tree on a given set of genomes, we computed WGAs with <monospace>GPA</monospace> using different <italic>k</italic>. For each <italic>k</italic>, we reported the runtime, PC, TC as well as the <italic>F</italic>-score. As expected the majority of all cases shows that larger <italic>k</italic> result in larger runtimes (see <xref ref-type="supplementary-material" rid="sup1">Supplementary Table S1</xref>). On the other hand, the PC and TC score, as well as the <italic>F</italic>-score, are not greatly affected by the choice of <italic>k</italic>, if <italic>k</italic> is not chosen too small for the dataset, as it can be seen for the simulated WGA of 80 genomes from <xref rid="btz377-T3" ref-type="table">Table 3</xref>. However, the number of LCBs varies, though a clear pattern cannot be deduced. Furthermore, the analysis of the WGAs, where no guide tree was provided for <monospace>GPA</monospace>, and therefore equally sized groups were merged, shows that at least for smaller sized WGAs highly similar results to <monospace>progressiveMauve</monospace> can be achieved as well (see lower part of <xref rid="btz377-T4" ref-type="table">Table 4</xref>).</p>
    </sec>
  </sec>
  <sec>
    <title>4 Discussion</title>
    <p>In this article, we introduced <monospace>GPA</monospace>, a tool which extends the WGA method <monospace>progressiveMauve</monospace> (<xref rid="btz377-B7" ref-type="bibr">Darling <italic>et al.</italic>, 2010</xref>) by the possibility to align individual genomes or WGAs to a given profile genome alignment. The challenge in the case of profile-based WGA is that genomic rearrangements like translocations and inversions have to be considered and therefore the profile of genome alignments cannot be as easily derived as in typical MSAs. Each individual genome as well as WGA represents its own coordinate system, and one challenge when merging a given WGA with individual genomes or another WGA is the transfer of the individual coordinate systems into a common one. With our SuperGenome data structure, we have introduced a novel concept that allows the extension of a given WGA by further genomes or other WGAs, through a coordinate transfer along a guiding alignment of their profiles. Currently, we use <monospace>progressiveMauve</monospace> together with <monospace>GPA</monospace> and guarantee to adhere also to the LCBs computed by <monospace>progressiveMauve</monospace>.</p>
    <p>Clearly, <monospace>progressiveMauve</monospace> has been shown to be among the best methods for the alignment of bacterial genomes because of its ability to consider rearrangements between the genomes. However, the runtime of <monospace>progressiveMauve</monospace> which was shown to be at least quadratic (<xref rid="btz377-B7" ref-type="bibr">Darling <italic>et al.</italic>, 2010</xref>), as well as lack of parallelization, prevent the computation of WGAs of hundreds or even thousands of genomes. Thus the second goal of this article was to significantly reduce the runtime of <monospace>progressiveMauve</monospace>.</p>
    <p>One central feature of <monospace>progressiveMauve</monospace> is a binary guide tree and a WGA that is progressively computed along this tree. A large fraction of the runtime of <monospace>progressiveMauve</monospace> is dedicated to the optimization of the genomic rearrangements (through repeated reanchoring) of all genomes aligned at the respective node in the guide tree. The key algorithmic ingredient in <monospace>GPA</monospace> is the use of a compressed rather than strictly binary guide tree and the adaptation of our introduced profile WGA to the alignment of several profiles in one step. The compressed guide tree leads to a significant reduction of internal nodes and therefore subalignments that are merged at a time. It should be noted, that alignment of genomes/profiles at each node in the guide tree used by <monospace>GPA</monospace> is performed with <monospace>progressiveMauve</monospace>, which also explains the resulting high quality of the WGA.</p>
    <p>Though by definition the SuperGenome can be derived from WGAs of arbitrary species, we have restricted our analyses to intraspecies microbial genomes, i.e. aligning different strains from the same species. For our largest dataset of <italic>B.pertussis</italic> with 326 genomes, <monospace>GPA</monospace> needed &lt;9 h, while a sole <monospace>progressiveMauve</monospace> -based alignment was not finished after 6250 h (after which we aborted the computation). A linear regression analysis showed a clear linear relationship between runtime and genomes (see <xref ref-type="fig" rid="btz377-F3">Fig. 3</xref>). Based on the coefficients of the regression the computation of a WGA with 1000 <italic>S.aureus</italic> genomes for example would need about 19 h, a WGA of 1000 <italic>B.pertussis</italic> genomes about 26 h. It should be noted that <monospace>GPA</monospace> always uses a precomputed guide tree. In the runtime comparison, the computation for the guide tree in <monospace>progressiveMauve</monospace> was not subtracted from the overall runtime. However, this part of the complete runtime in most cases is negligible (&lt;10%, see <xref ref-type="supplementary-material" rid="sup1">Supplementary Table S2</xref>). Only for the WGA of <italic>K.pneumoniae</italic>, the fraction of the guide tree computation for the small number of genomes (10, 20, 40) was larger than 50%. For the practical application of <monospace>GPA</monospace>, we recommend <monospace>Parsnp</monospace>, which for example was capable to produce the guide tree for the 326 genomes of <italic>B.pertussis</italic> in &lt;20 min.</p>
    <p>The results of <monospace>GPA</monospace> depend on the guide tree and the number of profiles that are merged at each node, our parameter <italic>k</italic>. As the guide tree determines the order in which the genomes are subsequently added, it is only plausible that the quality of the final WGA decreases if the tree does not reflect their phylogenetic relationship.</p>
    <p>The comparison of <monospace>progressiveMauve</monospace> and <monospace>GPA</monospace> shows that as a trade-off for the reduced runtime of <monospace>GPA</monospace> the quality of the WGAs is in most of the cases slightly worse. However, the small differences of the PC scores by only a few percents together with the high TC and <italic>F</italic>-scores show that the WGAs computed with <monospace>GPA</monospace> are highly similar to those computed using the original <monospace>progressiveMauve</monospace> approach. In addition, the comparison and evaluation of the simulated data show, that when comparing the WGA computed by <monospace>progressiveMauve</monospace> and the one computed by <monospace>GPA</monospace> with the ‘ground truth’ both the PC score as well as <italic>F</italic>-score are almost identical independent of the number of genomes in the WGA. This shows that we could introduce a WGA approach that enables a faster computation of WGAs, while achieving a comparable quality, which was our intention.</p>
    <p>We also showed that in some cases there is a trade-off between runtime and quality when deciding how many profiles are merged at the same time. The parameter <italic>k</italic> controls the maximal number of profiles aligned at a time with <monospace>progressiveMauve</monospace>. On the other hand, small <italic>k</italic> results in a short runtime, however, at the cost of an inferior PC and TC score (see <xref rid="btz377-T3" ref-type="table">Table 3</xref>). Since the results of <monospace>progressiveMauve</monospace> show that the computation time needed for WGAs with less than 20 genomes is in most cases below 2 h, a <italic>k</italic> between 10 and 25 is currently our default and recommended value for larger WGAs with more than 50 genomes. Currently, we have no automated way of choosing a <italic>k</italic> that optimizes the PC score, however, if <italic>k</italic> is not chosen too small, the variations between the resulting WGAs are minor. In addition, the generation of WGAs with thousands of genomes by <monospace>GPA</monospace> benefits from the usage of large cluster systems, because the independent alignments can be computed in parallel.</p>
    <p>Currently, <monospace>GPA</monospace> makes use of <monospace>progressiveMauve</monospace> as the underlying WGA method, however, the modular implementation allows in principle the support of other WGA methods. Since the SuperGenome data structure requires a one-to-one mapping between the nucleotides of the genomes, only methods are feasible that generate alignments with this feature. The disadvantage of these type of methods, which include <monospace>progressiveMauve</monospace>, is that duplicated regions cannot be aligned.</p>
    <p>In the current version, memory consumption is an issue of <monospace>GPA</monospace>, since the complete SuperGenome data structure is kept in memory to speed up computation. For example, for the alignment of 326 <italic>B.pertussis</italic> strains, <monospace>GPA</monospace> needed between 70 and 110 GB RAM, depending on the parameter <italic>k</italic>. With the next release, we will introduce an index file for the SuperGenome data structure that is accessed on demand to enable even larger WGAs with significantly less memory requirements. First results indicate that for WGA with more than 100 genomes only a 10th of the RAM used with the original data structure (less than 10 GB for all tested WGAs) is needed (data not shown).</p>
    <p>The current version of <monospace>GPA</monospace> and the SuperGenome data structure uses the consensus sequence derived from the profiles of WGAs, which we used as a simple solution to efficiently align several profiles. Apparently, this is a feasible, but not an optimal solution, and therefore other methods that use a more sophisticated representation of the profiles for the merging step will be considered as possibly improved solutions in a future release. Furthermore, considering recent efforts with respect to the computation of optimal LCBs and their ordering (<xref rid="btz377-B13" ref-type="bibr">Gärtner <italic>et al.</italic>, 2018</xref>), which influence the structure of the coordinate system, could further improve our approach.</p>
    <p>A possible application of <monospace>GPA</monospace> can be seen from comparative genome analyses that rely on a WGA. An example is AureoWiki (<xref rid="btz377-B12" ref-type="bibr">Fuchs <italic>et al.</italic>, 2017</xref>) (<ext-link ext-link-type="uri" xlink:href="http://aureowiki.med.uni-greifswald.de/">http://aureowiki.med.uni-greifswald.de/</ext-link>), a database of 32 different <italic>S.aureus</italic> strains that has been built from the results of a WGA-based pan-genome computation. To incorporate new <italic>S.aureus</italic> strains into the database, would require a WGA with the new genomic sequences. Computing this WGA from scratch could introduce changes that are not consistent with prior results. Here, the profile-based extension of the WGA by <monospace>GPA</monospace> preserves the former WGA and allows the addition of new strains without the necessity to completely rebuild the database.</p>
    <p>As a conclusion, <monospace>GPA</monospace> introduces a time efficient computation of large-scale WGAs through the usage of WGA-profile alignments and adds further utility by the possibility to extend existing WGAs. With <monospace>GPA</monospace> hundreds to thousands or more bacterial genomes can now be fully aligned in an acceptable time.</p>
    <p><italic>Conflict of Interest</italic>: none declared.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="sup1">
      <label>btz377_Supplementary_Data</label>
      <media xlink:href="btz377_supplementary_data.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btz377-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Abdelbary</surname><given-names>M.M.</given-names></name></person-group><etal>et al</etal> (<year>2018</year>) 
<article-title>Evaluating the use of whole-genome sequencing for outbreak investigations in the lack of closely related reference genome</article-title>. <source>Infect. Genet. Evol</source>., <volume>59</volume>, <fpage>1</fpage>–<lpage>6</lpage>.<pub-id pub-id-type="pmid">29367013</pub-id></mixed-citation>
    </ref>
    <ref id="btz377-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Angiuoli</surname><given-names>S.V.</given-names></name>, <name name-style="western"><surname>Salzberg</surname><given-names>S.L.</given-names></name></person-group> (<year>2011</year>) 
<article-title>Mugsy: fast multiple alignment of closely related whole genomes</article-title>. <source>Bioinformatics</source>, <volume>27</volume>, <fpage>334</fpage>–<lpage>342</lpage>.<pub-id pub-id-type="pmid">21148543</pub-id></mixed-citation>
    </ref>
    <ref id="btz377-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Angiuoli</surname><given-names>S.V.</given-names></name></person-group><etal>et al</etal> (<year>2011</year>) 
<article-title>Improving pan-genome annotation using whole genome multiple alignment</article-title>. <source>BMC Bioinf</source>., <volume>12</volume>, <fpage>272.</fpage></mixed-citation>
    </ref>
    <ref id="btz377-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Blanchette</surname><given-names>M.</given-names></name></person-group><etal>et al</etal> (<year>2004</year>) 
<article-title>Aligning multiple genomic sequences with the threaded blockset aligner</article-title>. <source>Genome Res</source>., <volume>14</volume>, <fpage>708</fpage>–<lpage>715</lpage>.<pub-id pub-id-type="pmid">15060014</pub-id></mixed-citation>
    </ref>
    <ref id="btz377-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Bryant</surname><given-names>J.M.</given-names></name></person-group><etal>et al</etal> (<year>2013</year>) 
<article-title>Whole-genome sequencing to identify transmission of <italic>Mycobacterium abscessus</italic> between patients with cystic fibrosis: a retrospective cohort study</article-title>. <source>Lancet</source>, <volume>381</volume>, <fpage>1551</fpage>–<lpage>1560</lpage>.<pub-id pub-id-type="pmid">23541540</pub-id></mixed-citation>
    </ref>
    <ref id="btz377-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Chan</surname><given-names>C.X.</given-names></name>, <name name-style="western"><surname>Ragan</surname><given-names>M.A.</given-names></name></person-group> (<year>2013</year>) 
<article-title>Next-generation phylogenomics</article-title>. <source>Biol. Direct</source>, <volume>8</volume>, <fpage>3.</fpage><pub-id pub-id-type="pmid">23339707</pub-id></mixed-citation>
    </ref>
    <ref id="btz377-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Darling</surname><given-names>A.</given-names></name></person-group><etal>et al</etal> (<year>2010</year>) 
<article-title>progressiveMauve: multiple genome alignment with gene gain, loss and rearrangement</article-title>. <source>PLoS One</source>, <volume>5</volume>, <fpage>e11147.</fpage><pub-id pub-id-type="pmid">20593022</pub-id></mixed-citation>
    </ref>
    <ref id="btz377-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Darling</surname><given-names>A.C.</given-names></name></person-group><etal>et al</etal> (<year>2004</year>) 
<article-title>Mauve: multiple alignment of conserved genomic sequence with rearrangements</article-title>. <source>Genome Res</source>., <volume>14</volume>, <fpage>1394</fpage>–<lpage>1403</lpage>.<pub-id pub-id-type="pmid">15231754</pub-id></mixed-citation>
    </ref>
    <ref id="btz377-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Earl</surname><given-names>D.</given-names></name></person-group><etal>et al</etal> (<year>2014</year>) 
<article-title>Alignathon: a competitive assessment of whole-genome alignment methods</article-title>. <source>Genome Res</source>., <volume>24</volume>, <fpage>2077</fpage>–<lpage>2089</lpage>.<pub-id pub-id-type="pmid">25273068</pub-id></mixed-citation>
    </ref>
    <ref id="btz377-B10">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Edgar</surname><given-names>R.</given-names></name></person-group><etal>et al</etal> (<year>2009</year>) EVOLVER. <ext-link ext-link-type="uri" xlink:href="http://www.drive5.com/evolver/">http://www.drive5.com/evolver/</ext-link> (20 November 2018, date last accessed).</mixed-citation>
    </ref>
    <ref id="btz377-B11">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Edgar</surname><given-names>R.</given-names></name></person-group><etal>et al</etal> (<year>2012</year>) evolverSimControl. <ext-link ext-link-type="uri" xlink:href="https://github.com/dentearl/evolverSimControl">https://github.com/dentearl/evolverSimControl</ext-link> (20 November 2018, date last accessed).</mixed-citation>
    </ref>
    <ref id="btz377-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Fuchs</surname><given-names>S.</given-names></name></person-group><etal>et al</etal> (<year>2017</year>) 
<article-title>Aureowiki—the repository of the <italic>Staphylococcus aureus</italic> research and annotation community</article-title>. <source>Int. J. Med. Microbiol</source>., <volume>308</volume>, <fpage>558</fpage>–<lpage>568</lpage>.<pub-id pub-id-type="pmid">29198880</pub-id></mixed-citation>
    </ref>
    <ref id="btz377-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Gärtner</surname><given-names>F.</given-names></name></person-group><etal>et al</etal> (<year>2018</year>) 
<article-title>Coordinate systems for supergenomes</article-title>. <source>Algorithms Mol. Biol</source>., <volume>13</volume>, <fpage>15.</fpage><pub-id pub-id-type="pmid">30258487</pub-id></mixed-citation>
    </ref>
    <ref id="btz377-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Gotoh</surname><given-names>O.</given-names></name></person-group> (<year>1990</year>) 
<article-title>Consistency of optimal sequence alignments</article-title>. <source>Bull. Math. Biol</source>., <volume>52</volume>, <fpage>509</fpage>–<lpage>525</lpage>.<pub-id pub-id-type="pmid">1697773</pub-id></mixed-citation>
    </ref>
    <ref id="btz377-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Hennig</surname><given-names>A.</given-names></name></person-group><etal>et al</etal> (<year>2015</year>) 
<article-title>Pan-tetris: an interactive visualisation for pan-genomes</article-title>. <source>BMC Bioinf</source>., <volume>16</volume>, <fpage>S3.</fpage></mixed-citation>
    </ref>
    <ref id="btz377-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Herbig</surname><given-names>A.</given-names></name></person-group><etal>et al</etal> (<year>2012</year>) 
<article-title>GenomeRing: alignment visualization based on SuperGenome coordinates</article-title>. <source>Bioinformatics</source>, <volume>28</volume>, <fpage>i7</fpage>–<lpage>i15</lpage>.<pub-id pub-id-type="pmid">22689781</pub-id></mixed-citation>
    </ref>
    <ref id="btz377-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Hogeweg</surname><given-names>P.</given-names></name>, <name name-style="western"><surname>Hesper</surname><given-names>B.</given-names></name></person-group> (<year>1984</year>) 
<article-title>The alignment of sets of sequences and the construction of phyletic trees: an integrated method</article-title>. <source>J. Mol. Evol</source>., <volume>20</volume>, <fpage>175</fpage>–<lpage>186</lpage>.<pub-id pub-id-type="pmid">6433036</pub-id></mixed-citation>
    </ref>
    <ref id="btz377-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Jandrasits</surname><given-names>C.</given-names></name></person-group><etal>et al</etal> (<year>2018</year>) 
<article-title>seq-seq-pan: building a computational pan-genome data structure on whole genome alignment</article-title>. <source>BMC Genomics</source>, <volume>19</volume>, <fpage>47.</fpage><pub-id pub-id-type="pmid">29334898</pub-id></mixed-citation>
    </ref>
    <ref id="btz377-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Liu</surname><given-names>K.</given-names></name>, <name name-style="western"><surname>Warnow</surname><given-names>T.</given-names></name></person-group> (<year>2014</year>) 
<article-title>Large-scale multiple sequence alignment and tree estimation using SATé</article-title>. <source>Methods Mol. Biol.</source>, <volume>1079</volume>, <fpage>219</fpage>–<lpage>244</lpage>.<pub-id pub-id-type="pmid">24170406</pub-id></mixed-citation>
    </ref>
    <ref id="btz377-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Medini</surname><given-names>D.</given-names></name></person-group><etal>et al</etal> (<year>2005</year>) 
<article-title>The microbial pan-genome</article-title>. <source>Curr. Opin. Genet. Dev</source>., <volume>15</volume>, <fpage>589</fpage>–<lpage>594</lpage>.<pub-id pub-id-type="pmid">16185861</pub-id></mixed-citation>
    </ref>
    <ref id="btz377-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Notredame</surname><given-names>C.</given-names></name></person-group><etal>et al</etal> (<year>2000</year>) 
<article-title>T-coffee: a novel method for fast and accurate multiple sequence alignment1</article-title>. <source>J. Mol. Biol</source>., <volume>302</volume>, <fpage>205</fpage>–<lpage>217</lpage>.<pub-id pub-id-type="pmid">10964570</pub-id></mixed-citation>
    </ref>
    <ref id="btz377-B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Sabat</surname><given-names>A.</given-names></name></person-group><etal>et al</etal> (<year>2013</year>) 
<article-title>Overview of molecular typing methods for outbreak detection and epidemiological surveillance</article-title>. <source>Eurosurveillance</source>, <volume>18</volume>, <fpage>20380.</fpage><pub-id pub-id-type="pmid">23369389</pub-id></mixed-citation>
    </ref>
    <ref id="btz377-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Schatz</surname><given-names>M.C.</given-names></name></person-group><etal>et al</etal> (<year>2014</year>) 
<article-title>Whole genome de novo assemblies of three divergent strains of rice, <italic>Oryza sativa</italic>, document novel gene space of aus and indica</article-title>. <source>Genome Biol</source>., <volume>15</volume>, <fpage>506.</fpage><pub-id pub-id-type="pmid">25468217</pub-id></mixed-citation>
    </ref>
    <ref id="btz377-B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Thompson</surname><given-names>J.D.</given-names></name></person-group><etal>et al</etal> (<year>2005</year>) 
<article-title>Balibase 3.0: latest developments of the multiple sequence alignment benchmark</article-title>. <source>Proteins</source>, <volume>61</volume>, <fpage>127</fpage>–<lpage>136</lpage>.<pub-id pub-id-type="pmid">16044462</pub-id></mixed-citation>
    </ref>
    <ref id="btz377-B25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Treangen</surname><given-names>T.J.</given-names></name></person-group><etal>et al</etal> (<year>2014</year>) 
<article-title>The harvest suite for rapid core-genome alignment and visualization of thousands of intraspecific microbial genomes</article-title>. <source>Genome Biol</source>., <volume>15</volume>, <fpage>524.</fpage><pub-id pub-id-type="pmid">25410596</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

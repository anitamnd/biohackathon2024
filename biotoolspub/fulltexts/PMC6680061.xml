<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Gigascience</journal-id>
    <journal-id journal-id-type="iso-abbrev">Gigascience</journal-id>
    <journal-id journal-id-type="publisher-id">gigascience</journal-id>
    <journal-title-group>
      <journal-title>GigaScience</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2047-217X</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6680061</article-id>
    <article-id pub-id-type="doi">10.1093/gigascience/giz094</article-id>
    <article-id pub-id-type="publisher-id">giz094</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Technical Note</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>SeQuiLa-cov: A fast and scalable library for depth of coverage calculations</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Wiewiórka</surname>
          <given-names>Marek</given-names>
        </name>
        <xref ref-type="aff" rid="aff1"/>
        <xref ref-type="author-notes" rid="afn1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Szmurło</surname>
          <given-names>Agnieszka</given-names>
        </name>
        <xref ref-type="aff" rid="aff1"/>
        <xref ref-type="author-notes" rid="afn1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Kuśmirek</surname>
          <given-names>Wiktor</given-names>
        </name>
        <xref ref-type="aff" rid="aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">http://orcid.org/0000-0002-0941-4571</contrib-id>
        <name>
          <surname>Gambin</surname>
          <given-names>Tomasz</given-names>
        </name>
        <!--<email>tgambin@gmail.com</email>-->
        <xref ref-type="aff" rid="aff1"/>
        <xref ref-type="corresp" rid="cor1"/>
      </contrib>
    </contrib-group>
    <aff id="aff1">Institute of Computer Science, Warsaw University of Technology, ul. Nowowiejska 15/19, 00-665 Warsaw, Poland</aff>
    <author-notes>
      <corresp id="cor1"><bold>Correspondence address</bold>. Tomasz Gambin, Institute of Computer Science, Warsaw University of Technology, ul. Nowowiejska 15/19, 00-665 Warsaw, Poland. E-mail: <email>tgambin@gmail.com</email></corresp>
      <fn id="afn1">
        <p>Contributed equally.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="epub" iso-8601-date="2019-08-05">
      <day>05</day>
      <month>8</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="collection">
      <month>8</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>05</day>
      <month>8</month>
      <year>2019</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. -->
    <volume>8</volume>
    <issue>8</issue>
    <elocation-id>giz094</elocation-id>
    <history>
      <date date-type="received">
        <day>13</day>
        <month>12</month>
        <year>2018</year>
      </date>
      <date date-type="rev-recd">
        <day>24</day>
        <month>5</month>
        <year>2019</year>
      </date>
      <date date-type="accepted">
        <day>10</day>
        <month>7</month>
        <year>2019</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2019. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2019</copyright-year>
      <license license-type="cc-by" xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="giz094.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="abs1">
        <title>Background</title>
        <p>Depth of coverage calculation is an important and computationally intensive preprocessing step in a variety of next-generation sequencing pipelines, including the analysis of RNA-sequencing data, detection of copy number variants, or quality control procedures.</p>
      </sec>
      <sec id="abs2">
        <title>Results</title>
        <p>Building upon big data technologies, we have developed SeQuiLa-cov, an extension to the recently released SeQuiLa platform, which provides efficient depth of coverage calculations, reaching &gt;100× speedup over the state-of-the-art tools. The performance and scalability of our solution allow for exome and genome-wide calculations running locally or on a cluster while hiding the complexity of the distributed computing with Structured Query Language Application Programming Interface.</p>
      </sec>
      <sec id="abs3">
        <title>Conclusions</title>
        <p>SeQuiLa-cov provides significant performance gain in depth of coverage calculations streamlining the widely used bioinformatic processing pipelines.</p>
      </sec>
    </abstract>
    <kwd-group kwd-group-type="keywords">
      <kwd>NGS data analysis</kwd>
      <kwd>depth of coverage</kwd>
      <kwd>big data</kwd>
      <kwd>distributed computing</kwd>
      <kwd>SQL</kwd>
      <kwd>CNV-calling</kwd>
      <kwd>RNA-seq</kwd>
      <kwd>quality control for sequencing data</kwd>
    </kwd-group>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">Iuventus Plus</named-content>
        </funding-source>
        <award-id>IP2015 019874</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">Polish National Science Center grant Preludium</named-content>
        </funding-source>
        <award-id>2014/13/N/ST6/01843</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="7"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec id="sec1">
    <title>Findings</title>
    <p> </p>
  </sec>
  <sec sec-type="intro" id="sec2">
    <title>Introduction</title>
    <p>Given a set of sequencing reads and a genomic contig, depth of coverage for a given position is defined as the total number of reads overlapping the locus.</p>
    <p>The coverage calculation is a frequently performed but time-consuming step in the analysis of next-generation sequencing (NGS) data. In particular, copy number variant detection pipelines require obtaining sufficient read depth of the analyzed samples [<xref rid="bib1" ref-type="bibr">1–3</xref>]. In other applications, the coverage is computed to assess the quality of the sequencing data (e.g., to calculate the percentage of genome with ≥30× read depth) or to identify genomic regions overlapped by an insufficient number of reads for reliable variant calling [<xref rid="bib4" ref-type="bibr">4</xref>]. Finally, depth of coverage is one of the most computationally intensive parts of differential expression analysis using RNA-sequencing data at single-base resolution [<xref rid="bib5" ref-type="bibr">5–7</xref>].</p>
    <p>A number of tools supporting this operation have been developed, with 22 of them specified in the Omictools catalog [<xref rid="bib8" ref-type="bibr">8</xref>]. Well-known, state-of-the-art solutions include samtools depth [<xref rid="bib9" ref-type="bibr">9</xref>], bedtools genomecov [<xref rid="bib10" ref-type="bibr">10</xref>], GATK DepthOfCoverage [<xref rid="bib11" ref-type="bibr">11</xref>], sambamba [<xref rid="bib12" ref-type="bibr">12</xref>], and mosdepth [<xref rid="bib13" ref-type="bibr">13</xref>] (see comparison presented in Table <xref rid="tbl1" ref-type="table">1</xref>).</p>
    <table-wrap id="tbl1" orientation="portrait" position="float">
      <label>Table 1:</label>
      <caption>
        <p>Comparison of leading coverage calculation software tools</p>
      </caption>
      <table frame="hsides" rules="groups">
        <thead>
          <tr>
            <th align="left" rowspan="1" colspan="1"/>
            <th align="left" rowspan="1" colspan="1"/>
            <th colspan="2" align="center" rowspan="1">Functionality</th>
            <th align="left" rowspan="1" colspan="1"/>
            <th align="left" rowspan="1" colspan="1"/>
            <th colspan="2" align="center" rowspan="1">Implementation</th>
            <th align="left" rowspan="1" colspan="1"/>
          </tr>
          <tr>
            <th align="left" rowspan="1" colspan="1">Tool</th>
            <th align="left" rowspan="1" colspan="1">Approach</th>
            <th align="left" rowspan="1" colspan="1">Bases</th>
            <th align="left" rowspan="1" colspan="1">Blocks</th>
            <th align="left" rowspan="1" colspan="1">Windows</th>
            <th align="left" rowspan="1" colspan="1">Language</th>
            <th align="left" rowspan="1" colspan="1">Intel GKL</th>
            <th align="left" rowspan="1" colspan="1">Parallelism type</th>
            <th align="left" rowspan="1" colspan="1">Interface</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td rowspan="1" colspan="1">
              <bold>samtools</bold>
            </td>
            <td rowspan="1" colspan="1">Pileup</td>
            <td rowspan="1" colspan="1">Yes</td>
            <td rowspan="1" colspan="1">No</td>
            <td rowspan="1" colspan="1">No</td>
            <td rowspan="1" colspan="1">C</td>
            <td rowspan="1" colspan="1">No</td>
            <td rowspan="1" colspan="1">None</td>
            <td rowspan="1" colspan="1">Command line</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">
              <bold>bedtools</bold>
            </td>
            <td rowspan="1" colspan="1">Events</td>
            <td rowspan="1" colspan="1">Yes</td>
            <td rowspan="1" colspan="1">Yes</td>
            <td rowspan="1" colspan="1">No</td>
            <td rowspan="1" colspan="1">C++</td>
            <td rowspan="1" colspan="1">No</td>
            <td rowspan="1" colspan="1">None</td>
            <td rowspan="1" colspan="1">Command line</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">
              <bold>GATK</bold>
              <xref ref-type="table-fn" rid="tb1fn1">
                <sup>1</sup>
              </xref>
            </td>
            <td rowspan="1" colspan="1">Pileup</td>
            <td rowspan="1" colspan="1">Yes</td>
            <td rowspan="1" colspan="1">No</td>
            <td rowspan="1" colspan="1">No</td>
            <td rowspan="1" colspan="1">Java</td>
            <td rowspan="1" colspan="1">Yes</td>
            <td rowspan="1" colspan="1">Distributed</td>
            <td rowspan="1" colspan="1">Command line</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">
              <bold>sambamba</bold>
            </td>
            <td rowspan="1" colspan="1">Pileup</td>
            <td rowspan="1" colspan="1">No</td>
            <td rowspan="1" colspan="1">Yes</td>
            <td rowspan="1" colspan="1">Yes</td>
            <td rowspan="1" colspan="1">D</td>
            <td rowspan="1" colspan="1">No</td>
            <td rowspan="1" colspan="1">Multithreaded</td>
            <td rowspan="1" colspan="1">Command line</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">
              <bold>mosdepth</bold>
            </td>
            <td rowspan="1" colspan="1">Events</td>
            <td rowspan="1" colspan="1">No</td>
            <td rowspan="1" colspan="1">Yes</td>
            <td rowspan="1" colspan="1">Yes</td>
            <td rowspan="1" colspan="1">Nim</td>
            <td rowspan="1" colspan="1">No</td>
            <td rowspan="1" colspan="1">Multithreaded<xref ref-type="table-fn" rid="tb1fn2"><sup>2</sup></xref></td>
            <td rowspan="1" colspan="1">Command line</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">SeQuiLa-cov</td>
            <td rowspan="1" colspan="1">Events</td>
            <td rowspan="1" colspan="1">Yes</td>
            <td rowspan="1" colspan="1">Yes</td>
            <td rowspan="1" colspan="1">Yes</td>
            <td rowspan="1" colspan="1">Scala</td>
            <td rowspan="1" colspan="1">Yes</td>
            <td rowspan="1" colspan="1">Distributed</td>
            <td rowspan="1" colspan="1">Scala, SQL</td>
          </tr>
        </tbody>
      </table>
      <table-wrap-foot>
        <fn id="tb1fn1">
          <label>1</label>
          <p>GATK DepthOfCoverage has not yet been ported to the latest version, i.e., GATK 4.x.</p>
        </fn>
        <fn id="tb1fn2">
          <label>2</label>
          <p>Only for BAM decompression.</p>
        </fn>
      </table-wrap-foot>
    </table-wrap>
    <p>Traditionally, these methods calculate the depth of coverage using a pileup-based approach (introduced in samtools [<xref rid="bib9" ref-type="bibr">9</xref>] and used in GATK [<xref rid="bib11" ref-type="bibr">11</xref>]), which is inefficient because it iterates through each nucleotide position at every read in a BAM file. An optimized, event-bas<xref rid="bib10" ref-type="bibr">10</xref>] and mosdepth [<xref rid="bib13" ref-type="bibr">13</xref>]. These algorithms use only specific “events,” i.e., start and end of the alignment blocks within each read (Fig. <xref ref-type="fig" rid="fig1">1A</xref>) instead of analyzing every base of each read, which substantially reduces the overall computational complexity.</p>
    <fig id="fig1" orientation="portrait" position="float">
      <label>Figure 1:</label>
      <caption>
        <p>SeQuiLa-cov: functionality, algorithm, and implementation. <bold>(A)</bold> General concept of events-based algorithm for depth of coverage calculation. Given a genomic chromosome and a set of aligned sequencing reads, the algorithm allocates “events” vector. Subsequently, it iterates the list of reads and increments/decrements by 1 the values of the events vector at the indexes corresponding to start/end positions of each read. The depth of coverage for a genomic locus is calculated using the cumulative sum of all elements in the events vector preceding the specified position. The algorithm may produce 3 typically used coverage types: (i) per-base coverage, which includes the coverage value for each genomic position separately, (ii) blocks, which lists adjacent positions with equal coverage values merged into a single interval, and (iii) fixed-length windows coverage, which generates a set of equal-size, non-overlapping and tiling genomic ranges and outputs the arithmetic mean of base coverage values for each region. <bold>(B)</bold> Provided SQL API to interact with NGS data. The first statement creates a relational table read_set over compressed BAM files using the provided custom Data Source, whereas the second statement demonstrates the use of the bdg_coverage function to calculate depth of coverage for a specified sample. The presented call for coverage method takes sample identifier (sample1) and result type (blocks) as input parameters. bdg_coverage is implemented as a table-valued function. Therefore, it outputs a table as a result, allowing for customizing a query using Data Manipulation Language, e.g., in the SELECT or WHERE clause. For the purpose of this example, we assume that the BAM file for sample1 contains only reads from chr3. <bold>(C)</bold> Concept of distributed version of events-based algorithm. Assuming that we run our calculations in a distributed environment, the computation nodes do not work on the whole input data set (table read_set) but on <italic>n</italic> smaller data partitions (slice<sub>1</sub>, slice<sub>2</sub>, ..., slice<sub><italic>n</italic></sub>), each containing a subset of input aligned reads. The algorithm first calculates the partial events vector for available data slices and subsequently produces a corresponding partial partial_coverage vector. Because of the possibility of overlapping of ranges between 2 consecutive data slices, an additional correction step needs to be performed. When an overlap is identified, the corresponding coverage values from the preceding vector’s tail are cut and added to the head values of the subsequent vector. On the figure, 2 overlaps are shown, one of them situated between partial_coverage<sub>1</sub> and partial_coverage<sub>2</sub> (overlap<sub>12</sub> of length 4) encompassing positions chr3:101–104. The coverage values from partial_coverage<sub>1</sub> for overlap<sub>12</sub> are removed from partial_coverage<sub>1</sub> and added to the head of partial_coverage<sub>2</sub>. As a result, a set of non-overlapping coverage vectors are calculated, which is further integrated into the depth of coverage for the whole input data set. <bold>(D</bold>) Implementation details of SeQuiLa-cov. We have used the Apache Spark environment, where a single driver node runs the high-level driver program, which schedules tasks for multiple worker nodes. On each worker node, a set of data partitions are accessed and manipulated in order to generate events and partial_coverage vectors. To gather data about partial_coverage vectors’ ranges along with tailing coverage values, and to distribute data needed for rearranging coverage vector values and ranges, we have used Spark’s shared variables “accumulator” and “broadcast,” respectively.</p>
      </caption>
      <graphic xlink:href="giz094fig1"/>
    </fig>
    <p>Samtools and bedtools depth of coverage modules do not provide any support for a multi-core environment. Mosdepth implements parallel BAM decompression, but its main algorithm remains sequential. Sambamba, on the other hand, promotes itself as a highly parallel tool, implementing depth of coverage calculations in a map-reduce fashion using multiple threads on a single node. Regardless of parallelization degree, all of the aforementioned tools share a common bottleneck caused by using a single thread for returning results. Finally, GATK was the first genomic framework to provide support for distributed computations; however, the DepthOfCoverage method has not yet been ported to the current software release of the toolkit.</p>
    <p>We present the first fully scalable, distributed, SQL-oriented solution designated for depth of coverage calculations. SeQuiLa-cov, an extension to the recently released SeQuiLa [<xref rid="bib14" ref-type="bibr">14</xref>] platform, runs a redesigned event-based algorithm for the distributed environment and provides a convenient, SQL-compliant interface.</p>
  </sec>
  <sec id="sec3">
    <title>Algorithm and implementation</title>
    <sec id="sec3-1">
      <title>Algorithm</title>
      <p>Consider an input data set, read_set, of aligned sequencing reads sorted by genomic position from a BAM file partitioned into <italic>n</italic> data slices (read_set<sub>1</sub>, read_set<sub>2</sub>, read_set<italic><sub>n</sub></italic>) (Fig. <xref ref-type="fig" rid="fig1">1B</xref>).</p>
      <p>In the most general case, the algorithm can be used in a distributed environment where each cluster node computes the coverage for the subset of data slices using the event-based method. Specifically, for the <italic>i</italic>th partition containing the set of reads (read_set<italic><sub>i</sub></italic>), the set of events<sub><italic>i</italic>,chr</sub> vectors (where chr is an index of genomic contig represented in read_set) is allocated and updated, based on the items from read_set<italic><sub>i</sub></italic>. For all reads, the algorithm parses the concise idiosyncratic gapped alignment report (CIGAR) string, and for each continuous alignment block characterized by start position and length len it increments by 1 the events<sub><italic>i,chr</italic></sub>(start) and decrements by 1 the value of events<sub><italic>i,chr</italic></sub>(start + len). To compute the partial coverage vector for partition <italic>i</italic> and contig chr, a vector value at the index <italic>j</italic> is calculated as follows: 
<disp-formula><tex-math id="M1">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}
\begin{equation*}
\mathrm{partial}\_\mathrm{coverage}_{i,\mathrm{chr}}(j) = \sum \nolimits _{m=1}^{j} \mathrm{events}_{i,\mathrm{chr}}(m).
\end{equation*}
\end{document}</tex-math></disp-formula></p>
      <p>The result of this stage is a set of partial_coverage<sub><italic>i</italic>,chr</sub> vectors distributed among the computation nodes. To calculate the final coverage for the whole read_set, an additional step of correction for overlaps between the partitions is required. An overlap overlap<sub><italic>i</italic>,chr</sub> of length <italic>l</italic> between vectors partial_coverage<sub><italic>i</italic>,chr</sub> and partial_coverage<sub><italic>i</italic>+1,chr</sub> may occur on the partition boundaries where <italic>l</italic> tailing genomic positions of partial_coverage<sub><italic>i</italic>,chr</sub> are the same as <italic>l</italic> heading genomic positions of partial_coverage<sub><italic>i</italic>+1,chr</sub> (see Fig. <xref ref-type="fig" rid="fig1">1C</xref>).</p>
      <p>If an overlap is identified, then the coverage values from the partial_coverage<sub><italic>i</italic>,chr</sub>’s <italic>l</italic>-length tail are added into the partial_coverage<sub><italic>i</italic>+1,chr</sub>’s head and subsequently the last <italic>l</italic> elements of partial_coverage<sub><italic>i</italic>,chr</sub> are removed. Once this correction step is completed, non-overlapping coverage<sub><italic>i</italic>,chr</sub> vectors are collected and yield the final coverage values for the whole input read_set.</p>
      <p>The main characteristic of the described algorithm is its ability to distribute data and calculations (such as BAM decompression and main coverage procedure) among the available computation nodes. Moreover, instead of simply performing the full data reduction stage of the partial coverage vectors, our solution minimizes required data shuffling among cluster nodes by limiting it to the overlapping part of coverage vectors. Importantly, the SeQuiLa-cov computation model supports fine-grained parallelism at a user-defined partition size in contrast to the traditional, coarse-grained parallelization strategies that involve splitting input data at a contig level.</p>
    </sec>
    <sec id="sec3-2">
      <title>Implementation</title>
      <p>We have implemented SeQuiLa-cov in Scala programming language using the Apache Spark framework. To efficiently access the data from a BAM file we have prepared a custom data source using Data Source API exposed by SparkSQL. Performance of the read operation benefits from the Intel Genomics Kernel Library (GKL) [<xref rid="bib15" ref-type="bibr">15</xref>] used for decompressing the BAM file chunks and from a predicate push-down mechanism that filters out data at the earliest stage.</p>
      <p>The implementation of the core coverage calculation algorithm aimed to minimize the memory footprint whenever possible by using parsimonious data types, e.g., “Short” type instead of “Integer,” and to implement an efficient memory allocation strategy for large data structures, e.g., favoring static Arrays over dynamic size ArrayBuffers. Additionally, to reduce the overhead of data shuffling between the worker nodes in the correction for overlap stage, we used Spark’s shared variables [<xref rid="bib16" ref-type="bibr">16</xref>] “accumulators” and “broadcast variables” (Fig. <xref ref-type="fig" rid="fig1">1C</xref>). Accumulator is used to gather information about the worker nodes’ coverage vector ranges and coverage vector tail values, which are subsequently read and processed by the driver. This information is then used to construct a broadcast variable distributed to the worker nodes in order to perform adequate trimming and summing operations on partial coverage vectors.</p>
    </sec>
  </sec>
  <sec id="sec4">
    <title>Functionality</title>
    <sec id="sec4-1">
      <title>Supported coverage result types</title>
      <p>SeQuiLa-cov features 3 distinct result types: “per-base,” “blocks,” and “fixed-length windows” coverage (Fig. <xref ref-type="fig" rid="fig1">1A</xref>). For per-base, the depth of coverage is calculated and returned for each genomic position, making it the most verbose output option. The method producing block-level coverage (blocks) involves merging adjacent genomic positions with equal coverage values into genomic intervals. As a consequence, fewer records than in the case of per-base output type are generated, with no information loss. For the fixed-length windows the algorithm generates set of fixed-length, tiling, non-overlapping genomic intervals and returns the arithmetic mean of coverage values over positions within each window.</p>
    </sec>
    <sec id="sec4-2">
      <title>ANSI SQL compliance</title>
      <p>The SeQuiLa-cov solution promotes SQL as a data query and manipulation language in genomic analysis. Data flows are performed in SQL-like manner through the custom data source, supporting the convenient Create Table as Select and Insert as Select methods. SeQuiLa-cov provides a table abstraction over existing alignment files, with no need of data conversion, which can be further queried and manipulated in a declarative way. The coverage calculation function bdg_coverage, as described in the Algorithm subsection, has been implemented as a table-valued function (Fig. <xref ref-type="fig" rid="fig1">1D</xref>).</p>
    </sec>
    <sec id="sec4-3">
      <title>Execution and integration options</title>
      <p>SeQuiLa-cov can be used as an extension to Apache Spark in the form of an external JAR dependency or can be executed from the command line as a Docker container. Both options can be run locally (on a single node) or on a Hadoop cluster using YARN (see project documentation for sample commands). The tool accepts BAM/CRAM files as input and supports processing of short and long reads. The tabular output of the coverage computations can be stored in various file formats, e.g., binary (ORC, Parquet), as well as text (CSV, TSV). The tool can be integrated with state-of-the-art applications through text files or can be used directly as an additional library in bioinformatics pipelines implemented in Scala, R, or Python.</p>
    </sec>
  </sec>
  <sec id="sec5">
    <title>Benchmarking</title>
    <p>We have benchmarked SeQuiLa-cov solutions with leading software for depth of coverage calculations, specifically samtools depth, bedtools genomeCov, sambamba depth, and mosdepth (results of DepthOfCOverage from outdated GATK version are available at <ext-link ext-link-type="uri" xlink:href="http://biodatageeks.org/sequila/benchmarking/benchmarking.html#depth-of-coverage">http://biodatageeks.org/sequila/benchmarking/benchmarking.html#depth-of-coverage</ext-link>). The tests were performed on the aligned whole-exome sequencing (WES) and whole-genome sequencing (WGS) reads from the NA12878 sample (see Methods for details) and aimed at calculating blocks and window coverage. To compare the performance and scalability of each solution, we executed calculations for 1, 5, and 10 cores on a single computation node (see Table <xref rid="tbl2" ref-type="table">2</xref>).</p>
    <table-wrap id="tbl2" orientation="portrait" position="float">
      <label>Table 2:</label>
      <caption>
        <p>Benchmarking leading solutions against SeQuiLa-cov on WES/WGS data in execution time of block and window calculations</p>
      </caption>
      <table frame="hsides" rules="groups">
        <thead>
          <tr>
            <th align="left" rowspan="1" colspan="1">Data</th>
            <th align="left" rowspan="1" colspan="1">Operation type</th>
            <th align="center" rowspan="1" colspan="1">Cores</th>
            <th align="left" rowspan="1" colspan="1">samtools</th>
            <th align="left" rowspan="1" colspan="1">bedtools</th>
            <th align="left" rowspan="1" colspan="1">sambamba</th>
            <th align="left" rowspan="1" colspan="1">mosdepth</th>
            <th align="left" rowspan="1" colspan="1">SeQuiLa-cov</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td rowspan="1" colspan="1">WGS</td>
            <td rowspan="1" colspan="1">Blocks</td>
            <td rowspan="1" colspan="1">1</td>
            <td rowspan="1" colspan="1">2h 14m 58s<xref ref-type="table-fn" rid="tb2fn1"><sup>1</sup></xref></td>
            <td rowspan="1" colspan="1">10h 41m 27s</td>
            <td rowspan="1" colspan="1">2h 44m 0s</td>
            <td rowspan="1" colspan="1">1h 46m 27s</td>
            <td rowspan="1" colspan="1">1h 47m 5s</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1">5</td>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1">2h 47m 53s</td>
            <td rowspan="1" colspan="1">36m 13s</td>
            <td rowspan="1" colspan="1">26m 59s</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1">10</td>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1">2h 50m 47s</td>
            <td rowspan="1" colspan="1">34m 34s</td>
            <td rowspan="1" colspan="1">13m 54s</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1">Fixed-length windows</td>
            <td rowspan="1" colspan="1">1</td>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1">1h 46m 50s</td>
            <td rowspan="1" colspan="1">1h 22m 49s</td>
            <td rowspan="1" colspan="1">1h 24m 8s</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1">5</td>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1">1h 41m 23s</td>
            <td rowspan="1" colspan="1">20m 3s</td>
            <td rowspan="1" colspan="1">18m 43s</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1">10</td>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1">1h 50m 35s</td>
            <td rowspan="1" colspan="1">17m 49s</td>
            <td rowspan="1" colspan="1">9m 14s</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">WES</td>
            <td rowspan="1" colspan="1">Blocks</td>
            <td rowspan="1" colspan="1">1</td>
            <td rowspan="1" colspan="1">12m 26s<xref ref-type="table-fn" rid="tb2fn1"><sup>1</sup></xref></td>
            <td rowspan="1" colspan="1">23m 25s</td>
            <td rowspan="1" colspan="1">25m 42s</td>
            <td rowspan="1" colspan="1">6m 43s</td>
            <td rowspan="1" colspan="1">6m 54s</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1">5</td>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1">25m 46s</td>
            <td rowspan="1" colspan="1">2m 25s</td>
            <td rowspan="1" colspan="1">1m 47s</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1">10</td>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1">25m 49s</td>
            <td rowspan="1" colspan="1">2m 20s</td>
            <td rowspan="1" colspan="1">1m 4s</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1">Fixed-length windows</td>
            <td rowspan="1" colspan="1">1</td>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1">14m 36s</td>
            <td rowspan="1" colspan="1">6m 11s</td>
            <td rowspan="1" colspan="1">6m 29s</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1">5</td>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1">14m 54s</td>
            <td rowspan="1" colspan="1">2m 8s</td>
            <td rowspan="1" colspan="1">1m 42s</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1">10</td>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1"/>
            <td rowspan="1" colspan="1">14m 40s</td>
            <td rowspan="1" colspan="1">2m 14s</td>
            <td rowspan="1" colspan="1">1m 1s</td>
          </tr>
        </tbody>
      </table>
      <table-wrap-foot>
        <fn id="tb2fn1">
          <p>Both samtools and bedtools calculate coverage using only a single thread; however, their results differ significantly, with samtools being approximately twice as fast. Sambamba positions itself as a multithreaded solution, although our tests revealed that its execution time is nearly constant, regardless of the number of CPU cores used, and even twice as slow as samtools. Mosdepth achieved speedup against samtools in blocks coverage and against sambamba in windows coverage calculations; however, its scalability reaches its limit at 5 CPU cores. Finally, SeQuiLa-cov achieves performance nearly identical to that of mosdepth for the single core, but the execution time decreases substantially for greater number of available computing resources, which makes this solution the fastest when run on multiple cores and nodes.</p>
        </fn>
        <fn id="tb2fn2">
          <label>1</label>
          <p>Per-base results are treated as block output. Samtools lacks the functionality of block coverage calculations; however, we included this tool in our benchmark for completeness, treating its per-base results as block outcome assuming that both result types require nearly the same resources.</p>
        </fn>
      </table-wrap-foot>
    </table-wrap>
    <p>Samtools depth and bedtools genomeCov are both natively non-scalable and were run on a single thread only. Exome-wide calculations exceeded 10 minutes and genome-wide analyses took &gt;2 hours in the case of samtools, while bedtools’ performance was substantially worse, i.e., ∼1.9× for WES and ∼4.7× for WGS. Sambamba depth claims that it can take advantage of fully parallelized data processing with the use of multithreading. However, our results revealed that even when additional threads were used, the total execution time of coverage calculations remained nearly constant and greater than samtools’ result. Mosdepth shows substantial speedup (∼1.3×) against samtools when using a single thread. This performance gain increases to ∼3.7× when using 5 decompression threads; however, it does not benefit from adding additional CPU power. In the case of fixed-length window coverage mosdepth achieves more than ∼1.3 speedup against sambamba.</p>
    <p>SeQuiLa-cov achieves performance similar to mosdepth when run using a single core. However, SeQuiLa-cov is ∼1.3× and ∼2.5× as fast as mosdepth when using 5 and 10 CPU cores, respectively, demonstrating its better scalability. Similar performance is observed for both block and fixed-length window methods.</p>
    <p>To fully assess the scalability profile of our solution, we performed additional tests in a cluster environment (see Methods for details). Our results show that when utilizing additional resources (i.e., &gt;10 CPU cores), SeQuiLa-cov is able to reduce the total computation time to 15 seconds for WES and &lt;1 minute for WGS data (Fig. <xref ref-type="fig" rid="fig2">2</xref>). The scalability limit is achieved for 200 and ∼500 CPU cores for WES and WGS data, respectively.</p>
    <fig id="fig2" orientation="portrait" position="float">
      <label>Figure 2:</label>
      <caption>
        <p>Performance and scalability comparison of samtools, mosdepth, and SeQuiLa-cov. Each experiment setting was repeated several times. Bar height and error bars indicate mean and range of execution time, respectively. The best pileup-based solution is definitely slower (2 times for WGS calculations) than both event-based solutions, which clearly shows the superiority of the latter one. Mosdepth execution time scales up to 5 cores; afterwards it shows no further gain in performance. SeQuiLa-cov has nearly the same execution time results as mosdepth for both block and window calculations for a single core, but scales out desirably using all 500 CPU cores on cluster nodes and at the same time performing WGS calculations in &lt;1 minute.</p>
      </caption>
      <graphic xlink:href="giz094fig2"/>
    </fig>
    <p>To evaluate the impact of the Intel GKL library on the deflate operation (BAM bzgf block decompression), we performed block coverage calculations on WES data on 50 CPU cores. The results showed on average ∼1.18× speedup when running with the Intel GKL deflate implementation.</p>
    <p>Finally, our comprehensive functional unit testing showed that the results calculated by SeQuiLa-cov and samtools depth are identical.</p>
  </sec>
  <sec sec-type="conclusions" id="sec6">
    <title>Conclusions</title>
    <p>Recent advances in big data technologies and distributed computing can contribute to speeding up both genomic data processing and management. Analysis of large genomic data sets requires efficient, accurate, and scalable algorithms to perform calculations using the computing power of multiple cluster nodes. In this work, we show that with a sufficiently large cluster, genome-wide coverage calculations may last &lt;1 minute and at the same time be &gt;100× faster than the best single-threaded solution.</p>
    <p>Although the tool can be integrated with non-distributed software, our primary aim is to support large-scale processing pipelines, and the full advantage of SeQuiLa-cov’s scalability and performance will be available once it is deployed and executed in a distributed environment. We expect that there will be a growing number of scalable solutions (Big Data Genomics project [<xref rid="bib17" ref-type="bibr">17</xref>] with tools DECA and Cannoli as well as GATK4 [<xref rid="bib19_457_1563819529959" ref-type="bibr">18</xref>]) that can take advantage of reading input data directly from distributed storage systems.</p>
    <p>SeQuiLa-cov is one of the building blocks of the SeQuiLa [<xref rid="bib14" ref-type="bibr">14</xref>] ecosystem, which initiated the move towards efficient, distributed processing of genomic data and providing SQL-oriented API for convenient and elastic querying. We foresee that following this direction will enable the evolution of genomic data analysis from file-oriented to table-oriented processing.</p>
  </sec>
  <sec sec-type="methods" id="sec7">
    <title>Methods</title>
    <sec id="sec7-1">
      <title>Test data</title>
      <p>We tested our solution using reads from the NA12878 sample, which were aligned to the hg18 genome. The WES data contained &gt;161 million reads (17 GB of disk space) and WGS data included &gt;2.6 billion reads (272 GB of disk space). Both BAM files were compressed at the default BAM compression level (5).</p>
    </sec>
    <sec id="sec7-2">
      <title>Testing environment</title>
      <p>To perform comprehensive performance evaluation, we set up a test cluster consisting of 28 Hadoop nodes (1 edge node, 3 master nodes, and 24 data nodes) with Hortonworks Data Platform 3.0.1 installed. Each data node has 28 cores (56 with hyper-threading) and 512 GB of RAM; YARN resource pool has been configured with 2,640 virtual cores and 9,671 GB RAM.</p>
    </sec>
    <sec id="sec7-3">
      <title>Investigated solutions</title>
      <p>In our benchmark we used the most recent versions of the investigated tools, i.e., samtools version 1.9, bedtools 2.27.0, sambamba 0.6.8, mosdepth version 0.2.3, and SeQuiLa-cov version 0.5.1.</p>
    </sec>
  </sec>
  <sec id="sec8">
    <title>Availability of source code and requirements</title>
    <p>• Project name: SeQuiLa-cov</p>
    <p>• Project home page: <ext-link ext-link-type="uri" xlink:href="http://biodatageeks.org/sequila/">http://biodatageeks.org/sequila/</ext-link></p>
    <p>• Source code repository: <ext-link ext-link-type="uri" xlink:href="https://github.com/ZSI-Bio/bdg-sequila">https://github.com/ZSI-Bio/bdg-sequila</ext-link></p>
    <p>• Operating system: Platform independent</p>
    <p>• Programming language: Scala</p>
    <p>• Other requirements: Docker</p>
    <p>• License: Apache License 2.0</p>
    <p>• RRID: SCR_017220</p>
  </sec>
  <sec sec-type="materials" id="sec9">
    <title>Availability of supporting data and materials</title>
    <p>The Docker image is available at <ext-link ext-link-type="uri" xlink:href="https://hub.docker.com/r/biodatageeks/">https://hub.docker.com/r/biodatageeks/</ext-link>. Supplementary information on benchmarking procedure as well as test data are publicly accessible at the project documentation site <ext-link ext-link-type="uri" xlink:href="http://biodatageeks.org/sequila/benchmarking/benchmarking.html#depth-of-coverage">http://biodatageeks.org/sequila/benchmarking/benchmarking.html#depth-of-coverage</ext-link>. An archival copy of the code and supporting data is also available via the GigaScience database GigaDB [<xref rid="bib18" ref-type="bibr">19</xref>].</p>
  </sec>
  <sec id="sec11">
    <title>Abbreviations</title>
    <p>API: Application Programming Interface; BAM: Binary Alignment Map; CPU: central processing unit; CSV: comma-separated values; GKL: Genomics Kernel Library; NGS: next-generation sequencing; ORC: optimized row columnar; RAM: random access memory; SQL: Structured Query Language; TSV: tab-separated values; YARN: Yet Another Resource Negotiator; WES: whole-exome sequencing; WGS: whole-genome sequencing.</p>
  </sec>
  <sec id="sec13">
    <title>Competing interests</title>
    <p>The authors declare that they have no competing interests.</p>
  </sec>
  <sec sec-type="funding" id="sec14">
    <title>Funding</title>
    <p>This work has been supported by the Polish budget funds for science in years 2016–2019 (Iuventus Plus grant IP2015 019874), as well as Polish National Science Center grant Preludium 2014/13/N/ST6/01843.</p>
  </sec>
  <sec id="sec15">
    <title>Authors' contributions</title>
    <p>M.W.: conceptualization, formal analysis, investigation, software, and writing. A.S.: data curation, formal analysis, investigation, software, visualization, and writing. W.K.: formal analysis, investigation, writing. T.G.: formal analysis, supervision, investigation, visualization, and writing. All authors approved the final manuscript.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="sup1">
      <label>giz094_GIGA-D-18-00504-Original-Submission</label>
      <media xlink:href="giz094_giga-d-18-00504-original-submission.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="sup2">
      <label>giz094_GIGA-D-18-00504_Revision-1</label>
      <media xlink:href="giz094_giga-d-18-00504_revision-1.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="sup3">
      <label>giz094_GIGA-D-18-00504_Revision-2</label>
      <media xlink:href="giz094_giga-d-18-00504_revision-2.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="sup4">
      <label>giz094_GIGA-D-18-00504_Revision-3</label>
      <media xlink:href="giz094_giga-d-18-00504_revision-3.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="sup5">
      <label>giz094_Response_to_Reviewer_Comments_Original_Submission</label>
      <media xlink:href="giz094_response_to_reviewer_comments_original_submission.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="sup6">
      <label>giz094_Response_to_Reviewer_Comments_Revision-1</label>
      <media xlink:href="giz094_response_to_reviewer_comments_revision-1.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="sup7">
      <label>giz094_Response_to_Reviewer_Comments_Revision_2</label>
      <media xlink:href="giz094_response_to_reviewer_comments_revision_2.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="sup8">
      <label>giz094_Reviewer_1_Report_Original_Submission</label>
      <caption>
        <p>Brent Pedersen -- 1/22/2019 Reviewed</p>
      </caption>
      <media xlink:href="giz094_reviewer_1_report_original_submission.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="sup9">
      <label>giz094_Reviewer_1_Report_Revision_1</label>
      <caption>
        <p>Brent Pedersen -- 6/4/2019 Reviewed</p>
      </caption>
      <media xlink:href="giz094_reviewer_1_report_revision_1.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="sup10">
      <label>giz094_Reviewer_2_Report_Original_Submission</label>
      <caption>
        <p>Gianluigi Zanetti -- 2/10/2019 Reviewed</p>
      </caption>
      <media xlink:href="giz094_reviewer_2_report_original_submission.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="sup11">
      <label>giz094_Reviewer_3_Report_Original_Submission</label>
      <caption>
        <p>Sara Goodwin -- 2/26/2019 Reviewed</p>
      </caption>
      <media xlink:href="giz094_reviewer_3_report_original_submission.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ref-list id="REF1">
    <title>References</title>
    <ref id="bib1">
      <label>1.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Fromer</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Purcell</surname><given-names>SM</given-names></name></person-group><article-title>Using XHMM software to detect copy number variation in whole-exome sequencing data</article-title>. <source>Curr Protoc Hum Genet</source>. <year>2014</year>;<volume>81</volume>:<fpage>1</fpage>–<lpage>21</lpage>.</mixed-citation>
    </ref>
    <ref id="bib2">
      <label>2.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Jiang</surname><given-names>Y</given-names></name>, <name name-style="western"><surname>Oldridge</surname><given-names>DA</given-names></name>, <name name-style="western"><surname>Diskin</surname><given-names>SJ</given-names></name>, <etal>et al</etal>.</person-group><article-title>CODEX: a normalization and copy number variation detection method for whole exome sequencing</article-title>. <source>Nucleic Acids Res</source>. <year>2015</year>;<volume>43</volume>(<issue>6</issue>):<fpage>e39</fpage>.<pub-id pub-id-type="pmid">25618849</pub-id></mixed-citation>
    </ref>
    <ref id="bib3">
      <label>3.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Gambin</surname><given-names>T</given-names></name>, <name name-style="western"><surname>Akdemir</surname><given-names>ZC</given-names></name>, <name name-style="western"><surname>Yuan</surname><given-names>B</given-names></name>, <etal>et al</etal>.</person-group><article-title>Homozygous and hemizygous CNV detection from exome sequencing data in a Mendelian disease cohort</article-title>. <source>Nucleic Acids Res</source>. <year>2017</year>;<volume>45</volume>(<issue>4</issue>):<fpage>1633</fpage>–<lpage>48</lpage>.<pub-id pub-id-type="pmid">27980096</pub-id></mixed-citation>
    </ref>
    <ref id="bib4">
      <label>4.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Okonechnikov</surname><given-names>K</given-names></name>, <name name-style="western"><surname>Conesa</surname><given-names>A</given-names></name>, <name name-style="western"><surname>García-Alcalde</surname><given-names>F</given-names></name></person-group><article-title>Qualimap 2: advanced multi-sample quality control for high-throughput sequencing data</article-title>. <source>Bioinformatics</source>. <year>2015</year>;<volume>32</volume>(<issue>2</issue>):<fpage>btv566</fpage>.</mixed-citation>
    </ref>
    <ref id="bib5">
      <label>5.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Frazee</surname><given-names>AC</given-names></name>, <name name-style="western"><surname>Sabunciyan</surname><given-names>S</given-names></name>, <name name-style="western"><surname>Hansen</surname><given-names>KD</given-names></name>, <etal>et al</etal>.</person-group><article-title>Differential expression analysis of RNA-seq data at single-base resolution</article-title>. <source>Biostatistics</source>. <year>2014</year>;<volume>15</volume>(<issue>3</issue>):<fpage>413</fpage>–<lpage>26</lpage>.<pub-id pub-id-type="pmid">24398039</pub-id></mixed-citation>
    </ref>
    <ref id="bib6">
      <label>6.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Nellore</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Collado-Torres</surname><given-names>L</given-names></name>, <name name-style="western"><surname>Jaffe</surname><given-names>AE</given-names></name>, <etal>et al</etal>.</person-group><article-title>Rail-RNA: scalable analysis of RNA-seq splicing and coverage</article-title>. <source>Bioinformatics</source>. <year>2016</year>;<volume>33</volume>(<issue>24</issue>):<fpage>btw575</fpage>.</mixed-citation>
    </ref>
    <ref id="bib7">
      <label>7.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Collado-Torres</surname><given-names>L</given-names></name>, <name name-style="western"><surname>Nellore</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Frazee</surname><given-names>AC</given-names></name>, <etal>et al</etal>.</person-group><article-title>Flexible expressed region analysis for RNA-seq with derfinder</article-title>. <source>Nucleic Acids Res</source>. <year>2017</year>;<volume>45</volume>(<issue>2</issue>):<fpage>e9</fpage>–<lpage>e9</lpage>.<pub-id pub-id-type="pmid">27694310</pub-id></mixed-citation>
    </ref>
    <ref id="bib8">
      <label>8.</label>
      <mixed-citation publication-type="url"><comment>Coverage/Depth analysis bioinformatics tools | Next-generation sequencing analysis - OMICtools</comment><ext-link ext-link-type="uri" xlink:href="https://omictools.com/depth-of-coverage-category">https://omictools.com/depth-of-coverage-category</ext-link>.Accessed 24 May 2019.</mixed-citation>
    </ref>
    <ref id="bib9">
      <label>9.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Li</surname><given-names>H</given-names></name>, <name name-style="western"><surname>Handsaker</surname><given-names>B</given-names></name>, <name name-style="western"><surname>Wysoker</surname><given-names>A</given-names></name>, <etal>et al</etal>.</person-group><article-title>The Sequence Alignment/Map format and SAMtools</article-title>. <source>Bioinformatics</source>. <year>2009</year>;<volume>25</volume>(<issue>16</issue>):<fpage>2078</fpage>–<lpage>9</lpage>.<pub-id pub-id-type="pmid">19505943</pub-id></mixed-citation>
    </ref>
    <ref id="bib10">
      <label>10.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Quinlan</surname><given-names>AR</given-names></name>, <name name-style="western"><surname>Hall</surname><given-names>IM</given-names></name></person-group><article-title>BEDTools: a flexible suite of utilities for comparing genomic features</article-title>. <source>Bioinformatics</source>. <year>2010</year>;<volume>26</volume>(<issue>6</issue>):<fpage>841</fpage>–<lpage>2</lpage>.<pub-id pub-id-type="pmid">20110278</pub-id></mixed-citation>
    </ref>
    <ref id="bib11">
      <label>11.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>McKenna</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Hanna</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Banks</surname><given-names>E</given-names></name>, <etal>et al</etal>.</person-group><article-title>The Genome Analysis Toolkit: a MapReduce framework for analyzing next-generation DNA sequencing data</article-title>. <source>Genome Res</source>. <year>2010</year>;<volume>20</volume>(<issue>9</issue>):<fpage>1297</fpage>–<lpage>303</lpage>.<pub-id pub-id-type="pmid">20644199</pub-id></mixed-citation>
    </ref>
    <ref id="bib12">
      <label>12.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Tarasov</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Vilella</surname><given-names>AJ</given-names></name>, <name name-style="western"><surname>Cuppen</surname><given-names>E</given-names></name>, <etal>et al</etal>.</person-group><article-title>Sambamba: fast processing of NGS alignment formats</article-title>. <source>Bioinformatics</source>. <year>2015</year>;<volume>31</volume>(<issue>12</issue>):<fpage>2032</fpage>–<lpage>4</lpage>.<pub-id pub-id-type="pmid">25697820</pub-id></mixed-citation>
    </ref>
    <ref id="bib13">
      <label>13.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Pedersen</surname><given-names>BS</given-names></name>, <name name-style="western"><surname>Quinlan</surname><given-names>AR</given-names></name></person-group><article-title>Mosdepth: quick coverage calculation for genomes and exomes</article-title>. <source>Bioinformatics</source>. <year>2018</year>;<volume>34</volume>(<issue>5</issue>):<fpage>867</fpage>–<lpage>8</lpage>.<pub-id pub-id-type="pmid">29096012</pub-id></mixed-citation>
    </ref>
    <ref id="bib14">
      <label>14.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wiewiórka</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Leśniewska</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Szmurło</surname><given-names>A</given-names></name>, <etal>et al</etal>.</person-group><article-title>SeQuiLa: an elastic, fast and scalable SQL-oriented solution for processing and querying genomic intervals</article-title>. <source>Bioinformatics</source>. <year>2019</year>; <volume>25</volume>, <issue>12</issue>, <fpage>2156</fpage>–<lpage>8</lpage>.</mixed-citation>
    </ref>
    <ref id="bib15">
      <label>15.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Guilford</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Powley</surname><given-names>G</given-names></name>, <name name-style="western"><surname>Tucker</surname><given-names>G</given-names></name>, <etal>et al</etal>.</person-group><article-title>Accelerating the compression and decompression of genomics data using GKL provided by Intel</article-title>. <year>2017</year><ext-link ext-link-type="uri" xlink:href="https://www.intel.com/content/dam/www/public/us/en/documents/white-papers/accelerating-genomics-data-gkl-white-paper.pdf">https://www.intel.com/content/dam/www/public/us/en/documents/white-papers/accelerating-genomics-data-gkl-white-paper.pdf</ext-link>. Accessed 24 May 2019.</mixed-citation>
    </ref>
    <ref id="bib16">
      <label>16.</label>
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Zaharia</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Chowdhury</surname><given-names>MJ</given-names></name>, <name name-style="western"><surname>Franklin</surname><given-names>M</given-names></name>, <etal>et al</etal>.</person-group><article-title>Spark: Cluster computing with working sets</article-title>. In: <source>HotCloud'10 Proceedings of the 2nd USENIX conference on Hot Topics in Cloud Computing, Boston, MA, 2010</source>. <publisher-loc>Berkeley, CA</publisher-loc>: <publisher-name>USENIX Association</publisher-name>; <year>2010</year>:<fpage>10</fpage>.</mixed-citation>
    </ref>
    <ref id="bib17">
      <label>17.</label>
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Massie</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Nothaft</surname><given-names>F</given-names></name>, <name name-style="western"><surname>Hartl</surname><given-names>C</given-names></name>, <etal>et al</etal>.</person-group><source>Adam: Genomics Formats and Processing Patterns for Cloud Scale Computing</source>. <publisher-name>University of California, Berkeley</publisher-name>, <comment>Technical Report No. UCB/EECS-2013-207</comment>; <year>2013</year><ext-link ext-link-type="uri" xlink:href="https://www2.eecs.berkeley.edu/Pubs/TechRpts/2013/EECS-2013-207.html">https://www2.eecs.berkeley.edu/Pubs/TechRpts/2013/EECS-2013-207.htm</ext-link>l. Accessed 23 July 2019.</mixed-citation>
    </ref>
    <ref id="bib19_457_1563819529959">
      <label>18.</label>
      <mixed-citation publication-type="url"><collab>GATK</collab>. <ext-link ext-link-type="uri" xlink:href="https://software.broadinstitute.org/gatk/gatk4">https://software.broadinstitute.org/gatk/gatk4</ext-link>. Accessed 24 May 2019.</mixed-citation>
    </ref>
    <ref id="bib18">
      <label>19.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wiewiórka</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Szmurło</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Kuśmirek</surname><given-names>W</given-names></name>, <etal>et al</etal>.</person-group><article-title>Supporting data for “SeQuiLa-cov: a fast and scalable library for depth of coverage calculations.”</article-title>. <source>GigaScience Database</source>. <year>2019</year><pub-id pub-id-type="doi">10.5524/100617</pub-id>. Accessed 23 July 2019.</mixed-citation>
    </ref>
  </ref-list>
</back>

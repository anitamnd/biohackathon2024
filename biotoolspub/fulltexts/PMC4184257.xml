<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v2.3 20070202//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName journalpublishing.dtd?>
<?SourceDTD.Version 2.3?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-id journal-id-type="hwp">bioinfo</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">4184257</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btu406</article-id>
    <article-id pub-id-type="publisher-id">btu406</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Applications Notes</subject>
        <subj-group subj-group-type="heading">
          <subject>Genome Analysis</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>GATB: Genome Assembly &amp; Analysis Tool Box</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Drezen</surname>
          <given-names>Erwan</given-names>
        </name>
        <xref ref-type="aff" rid="btu406-AFF1">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Rizk</surname>
          <given-names>Guillaume</given-names>
        </name>
        <xref ref-type="aff" rid="btu406-AFF1">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Chikhi</surname>
          <given-names>Rayan</given-names>
        </name>
        <xref ref-type="aff" rid="btu406-AFF1">
          <sup>2</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Deltel</surname>
          <given-names>Charles</given-names>
        </name>
        <xref ref-type="aff" rid="btu406-AFF1">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Lemaitre</surname>
          <given-names>Claire</given-names>
        </name>
        <xref ref-type="aff" rid="btu406-AFF1">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Peterlongo</surname>
          <given-names>Pierre</given-names>
        </name>
        <xref ref-type="aff" rid="btu406-AFF1">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Lavenier</surname>
          <given-names>Dominique</given-names>
        </name>
        <xref ref-type="aff" rid="btu406-AFF1">
          <sup>1</sup>
        </xref>
        <xref ref-type="corresp" rid="btu406-COR1">*</xref>
      </contrib>
      <aff id="btu406-AFF1"><sup>1</sup>INRIA/IRISA/GenScale, Campus de Beaulieu, 35042 Rennes Cedex, France and <sup>2</sup>Department of Computer Science and Engineering, Pennsylvania State University, PA 16802, USA</aff>
    </contrib-group>
    <author-notes>
      <corresp id="btu406-COR1">*To whom correspondence should be addressed.</corresp>
      <fn id="FN1">
        <p>Associate Editor: John Hancock</p>
      </fn>
    </author-notes>
    <pub-date pub-type="ppub">
      <day>15</day>
      <month>10</month>
      <year>2014</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>01</day>
      <month>7</month>
      <year>2014</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>01</day>
      <month>7</month>
      <year>2014</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the
							<pub-date pub-type="epub"/>. -->
    <volume>30</volume>
    <issue>20</issue>
    <fpage>2959</fpage>
    <lpage>2961</lpage>
    <history>
      <date date-type="received">
        <day>25</day>
        <month>3</month>
        <year>2014</year>
      </date>
      <date date-type="rev-recd">
        <day>20</day>
        <month>6</month>
        <year>2014</year>
      </date>
      <date date-type="accepted">
        <day>20</day>
        <month>6</month>
        <year>2014</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author 2014. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2014</copyright-year>
      <license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by-nc/3.0">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by-nc/3.0/">http://creativecommons.org/licenses/by-nc/3.0/</ext-link>), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.com</license-p>
      </license>
    </permissions>
    <abstract>
      <p><bold>Motivation:</bold> Efficient and fast next-generation sequencing (NGS) algorithms are essential to analyze the terabytes of data generated by the NGS machines. A serious bottleneck can be the design of such algorithms, as they require sophisticated data structures and advanced hardware implementation.</p>
      <p><bold>Results:</bold> We propose an open-source library dedicated to genome assembly and analysis to fasten the process of developing efficient software. The library is based on a recent optimized de-Bruijn graph implementation allowing complex genomes to be processed on desktop computers using fast algorithms with low memory footprints.</p>
      <p><bold>Availability and implementation:</bold> The GATB library is written in C++ and is available at the following Web site <ext-link ext-link-type="uri" xlink:href="http://gatb.inria.fr">http://gatb.inria.fr</ext-link> under the A-GPL license.</p>
      <p>
        <bold>Contact:</bold>
        <email>lavenier@irisa.fr</email>
      </p>
      <p><bold>Supplementary information:</bold><ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btu406/-/DC1">Supplementary data</ext-link> are available at <italic>Bioinformatics</italic> online.</p>
    </abstract>
    <counts>
      <page-count count="3"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 INTRODUCTION</title>
    <p>The analysis of next-generation sequencing (NGS) data remains a time- and space-consuming task. Many efforts have been made to provide efficient data structures for indexing the terabytes of data generated by the fast sequencing machines (Suffix Array, Burrows–Wheeler transform, Bloom filter, etc.). Genome assemblers such as Velvet (<xref rid="btu406-B21" ref-type="bibr">Zerbino and Birney, 2008</xref>), ABySS (<xref rid="btu406-B18" ref-type="bibr">Simpson <italic>et al.</italic>, 2009</xref>), SOAPdenovo2 (<xref rid="btu406-B12" ref-type="bibr">Luo <italic>et al.</italic>, 2012</xref>), SPAdes (<xref rid="btu406-B1" ref-type="bibr">Bankevich <italic>et al.</italic>, 2012</xref>) or mappers such as BWA (<xref rid="btu406-B9" ref-type="bibr">Li and Durbin, 2009</xref>) or variant detection such as CRAC (<xref rid="btu406-B14" ref-type="bibr">Philippe <italic>et al.</italic>, 2013</xref>) for instance make an intensive use of these data structures to keep their memory footprint as low as possible.</p>
    <p>At the same time, parallelism has been largely investigated to reduce execution time. Many strategies such as GPU implementation (<xref rid="btu406-B11" ref-type="bibr">Liu <italic>et al.</italic>, 2012</xref>), cloud deployment (<xref rid="btu406-B20" ref-type="bibr">Zhao <italic>et al.</italic>, 2013</xref>), algorithm vectorization (<xref rid="btu406-B15" ref-type="bibr">Rizk and Lavenier, 2010</xref>), multithreading, etc., have demonstrated high potentiality on NGS processing.</p>
    <p>The overall efficiency of NGS software depends on a smart combination of data representation and use of the available processing units. Developing such software is thus a real challenge, as it requires a large spectrum of competence from high-level data structure and algorithm concepts to tiny details of implementation.</p>
    <p>The GATB library aims to ease the design of NGS algorithms. It offers a panel of high-level optimized building blocks to speedup the development of NGS tools related to genome assembly and/or genome analysis. The underlying data structure is a memory efficient de-Bruijn graph (<xref rid="btu406-B4" ref-type="bibr">Compeau <italic>et al.</italic>, 2011</xref>), and the general parallelism model is multithreading. The GATB library targets standard computing resources such as current multicore processor (laptop computer, small server) with a few gigabytes of memory.</p>
    <p>Hence, from the high-level C++ functions available in the GATB library, NGS programing designers can rapidly elaborate their own software based on state-of-the-art algorithms and data structures of the domain.</p>
    <p>Based on the same idea, other bioinformatics libraries exist, from which domain-specific tools can be elaborated. The NGS++ library (<xref rid="btu406-B13" ref-type="bibr">Markovits <italic>et al.</italic>, 2013</xref>) is specifically tailored for developing applications that work with genomic regions and features, such as epigenomics marks, gene features and data that are associated with BED type files. The SeqAn library (<xref rid="btu406-B5" ref-type="bibr">Doring <italic>et al.</italic>, 2008</xref>) is a general-purpose library targeting standard sequence processing. Advanced data structures such as de-Bruijn graphs are not included in SeqAn. Khmer (<xref rid="btu406-B7" ref-type="bibr">Crusoe <italic>et al.</italic>, 2014</xref>) is a library and toolkit for doing k-mer-based NGS dataset analysis. As with GATB, most of khmer relies on an underlying probabilistic data structure (Bloom filter). The khmer library can be used in various k-mer processing such as abundance filtering, error trimming, graph size filtering or partitioning.</p>
  </sec>
  <sec>
    <title>2 METHODS</title>
    <p>One of the main concerns of the GATB-core library is to provide computing modules able to run on standard machines, i.e. computers not requiring large amount of main memory.</p>
    <p>The central data structure is a de-Bruijn graph from which numerous actions can be performed as shown <xref ref-type="fig" rid="btu406-F1">Figure 1</xref>: data error correction, assembly, biological motif detection [e.g. single nucleotide polymorphism (SNP)], etc. The graph is constructed by extracting and by counting all the different k-mers from one or several sequencing datasets. This time- and space-consuming task is conducted by a disk streaming algorithm, DSK (<xref rid="btu406-B16" ref-type="bibr">Rizk <italic>et al.</italic>, 2013</xref>), which adapts its memory requirement according to the available computer memory. Trade-off between execution time and memory occupancy can be set up: the larger the computer memory, shorter the computation time (reduced disk access).
<fig id="btu406-F1" position="float"><label>Fig. 1.</label><caption><p>Schematic view of the GATB organization</p></caption><graphic xlink:href="btu406f1p"/></fig></p>
    <p>The de-Bruijn graph memory footprint is kept low thanks to an optimized Bloom filter representation (<xref rid="btu406-B3" ref-type="bibr">Chikhi and Rish, 2012</xref>; <xref rid="btu406-B17" ref-type="bibr">Salikhov <italic>et al.</italic>, 2014</xref>). Only vertices of the de-Bruijn graph are memorized. Edges are deduced by querying the Bloom filter. False positives (owing to the probabilistic behavior of the Bloom filter) are suppressed by adding an extra data structure enumerating critical vertices. This efficient de-Bruijn graph representation fits, for example, a complete mammal genome in ∼4 GB.</p>
  </sec>
  <sec id="SEC3">
    <title>3 IMPLEMENTATION</title>
    <p>The GATB library is composed of five main packages: system, tools, bank, kmer and de-Bruijn packages.</p>
    <p>The <bold>system</bold> package holds all the operations related to the operating system (OS): file management, memory management and thread management. Using such an abstraction allows client code to be independent from the OS, thus suppressing compilation directive inside the code or improving some OS accesses by hiding specific OS optimization. The supported operating systems are Linux, Mac and Windows.</p>
    <p>The <bold>tools</bold> package offers generic operations used throughout the user application but not specific to genomics area. For example, this package includes design pattern tools (such as iterators, observers, smart pointers, etc.) and object collections (such as containers, bags, iterables, etc.). It also optimizes the way GATB data structures are saved. The HDF5 file format is currently used (<xref rid="btu406-B6" ref-type="bibr">HDF5, 2012</xref>). This powerful technology is extremely well suited for large and complex data collection such as those handled in the GATB library.</p>
    <p>The <bold>bank</bold> package provides operations related to standard genomic sequence dataset management. All the main sequence file formats are supported, and high-level interfaces allow sequences to be easily iterated regardless of the input format. In other words, algorithms are written independently of the input formats.</p>
    <p>The <bold>kmer</bold> package is dedicated to fine-grained manipulation of k-mers. Optimized routines are provided to perform k-mer counting from large sequence datasets, to find k-mer neighborhood or to select k-mers based on different criteria.</p>
    <p>Finally, the <bold>de-</bold><bold>B</bold><bold>ruijn</bold> package provides high-level functions to manipulate a static de-Bruijn graph data structure: creation from a set of k-mers, iteration through different nature of nodes (simple k-mers, branching k-mers, etc.), extraction of neighbor nodes, etc. Additional information (e.g. k-mer coverage, markers of visited nodes) is stored in the graph branching nodes. From this abstraction level, developing new tools based on de-Buijn graphs is fast, and does not require programmers to delve into low-level details.</p>
    <p>The GATB library takes benefit of the parallel nature of today’s multicore architecture of microprocessors. When possible, time-consuming parts of the code are multithreaded to provide fast runtime execution.</p>
    <p>The GATB library is developed in C++ under the A-GPL license and is available from the following Web site: <ext-link ext-link-type="uri" xlink:href="http://gatb.inria.fr">http://gatb.inria.fr</ext-link>. An extensive documentation with tutorials is available to guide designers in the process of developing new NGS tools from the GATB building blocks: <ext-link ext-link-type="uri" xlink:href="http://gatb-core.gforge.inria.fr">http://gatb-core.gforge.inria.fr</ext-link> (see also <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btu406/-/DC1">Supplementary File 2</ext-link> for technical implementation details).</p>
  </sec>
  <sec>
    <title>4 RESULTS</title>
    <p>To demonstrate the efficiency of the GATB library, a few software implemented from GATB are briefly presented. The idea is to give a quick overview of the application spectrum of the GATB library and some performance numbers.</p>
    <p><bold>Minia</bold> (<xref rid="btu406-B3" ref-type="bibr">Chikhi and Rish, 2012</xref>) is a short-read de-Bruijn assembler capable of assembling large and complex genomes into contigs on a desktop computer. The assembler produces contigs of similar length and accuracy to other de-Bruijn assemblers––e.g. Velvet (<xref rid="btu406-B21" ref-type="bibr">Zerbino and Birney, 2008</xref>). As an example, a <italic>Boa constrictor constrictor</italic> (1.6 Gb) dataset (Illumina 2 × 120 bp reads, 125 × coverage) from Assemblathon 2 (<xref rid="btu406-B2" ref-type="bibr">Bradnam <italic>et al.</italic>, 2013</xref>) can be processed in ∼45 h and 3 GB of memory on a standard computer (3.4 GHz 8-core processor) using a single core, yielding a contig N50 of 3.6 kb (prior to scaffolding and gap-filling).</p>
    <p><bold>Bloocoo</bold> is a k-mer spectrum-based read error corrector, designed to correct large datasets with low memory footprints. It uses the disk streaming k-mer counting algorithm contained in the GATB library and inserts solid k-mers in a Bloom filter. The correction procedure is similar to the Musket multistage approach (<xref rid="btu406-B11" ref-type="bibr">Liu <italic>et al.</italic>, 2013</xref>). Bloocoo yields similar results while requiring far less memory: for example, it can correct whole human genome re-sequencing reads at 70× coverage with &lt;4 GB of memory (see <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btu406/-/DC1">Supplementary file 1</ext-link> for extra information on Bloocoo).</p>
    <p><bold>DiscoSNP</bold> aims to <bold>disco</bold>ver <bold>S</bold>ingle <bold>N</bold>ucleotide <bold>P</bold>olymorphism from non-assembled reads and without a reference genome. From one or several datasets a global de-Bruijn graph is constructed, then scanned to locate specific SNP graph patterns (<xref rid="btu406-B19" ref-type="bibr">Uricaru <italic>et al.</italic>, 2014</xref>). A coverage analysis on these particular locations can finally be performed to validate and assign scores to detected biological elements. Applied on a mouse dataset (2.88 Gb, 100 bp Illumina reads), DiscoSnp takes 34 h and requires 4.5 GB RAM. In the same spirit, the <bold>TakeABreak</bold> software discovers inversion variants from non-assembled reads. It directly finds particular patterns in the de-Bruijn graph and provides execution performances similar to DiscoSNP (<xref rid="btu406-B8" ref-type="bibr">Lemaitre <italic>et al.</italic>, 2014</xref>).</p>
    <p><italic>Funding</italic>: <funding-source>ANR (French National Research Agency)</funding-source> (<award-id>ANR-12-EMMA- 0019-01</award-id>).</p>
    <p><italic>Conflict of interest</italic>: none declared.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="PMC_1" content-type="local-data">
      <caption>
        <title>Supplementary Data</title>
      </caption>
      <media mimetype="text" mime-subtype="html" xlink:href="supp_30_20_2959__index.html"/>
      <media xlink:role="associated-file" mimetype="application" mime-subtype="pdf" xlink:href="supp_btu406_Supplementary1.pdf"/>
      <media xlink:role="associated-file" mimetype="application" mime-subtype="pdf" xlink:href="supp_btu406_Supplementary2.pdf"/>
    </supplementary-material>
  </sec>
</body>
<back>
  <ref-list>
    <title>REFERENCES</title>
    <ref id="btu406-B1">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bankevich</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>SPAdes: a new genome assembly algorithm and its applications to single-cell sequencing</article-title>
        <source>J. Comput. Biol.</source>
        <year>2012</year>
        <volume>19</volume>
        <fpage>455</fpage>
        <lpage>477</lpage>
        <pub-id pub-id-type="pmid">22506599</pub-id>
      </element-citation>
    </ref>
    <ref id="btu406-B2">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bradnam</surname>
            <given-names>KR</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Assemblathon 2: evaluating de novo methods of genome assembly in three vertebrate species</article-title>
        <source>Gigascience</source>
        <year>2013</year>
        <volume>2</volume>
        <fpage>10</fpage>
        <pub-id pub-id-type="pmid">23870653</pub-id>
      </element-citation>
    </ref>
    <ref id="btu406-B3">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chikhi</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Risk</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>Space-efficient and exact de-Bruijn graph representation based on a Bloom filter</article-title>
        <source>Algorithms Bioinform.</source>
        <year>2012</year>
        <volume>8</volume>
        <fpage>236</fpage>
        <lpage>248</lpage>
      </element-citation>
    </ref>
    <ref id="btu406-B4">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Compeau</surname>
            <given-names>P</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>How to apply de Bruijn graphs to genome assembly</article-title>
        <source>Nat. Biotechnol.</source>
        <year>2011</year>
        <volume>29</volume>
        <fpage>987</fpage>
        <lpage>991</lpage>
        <pub-id pub-id-type="pmid">22068540</pub-id>
      </element-citation>
    </ref>
    <ref id="btu406-B5">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Doring</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>SeqAn:an efficient generic C++ loibrary for sequence analysis</article-title>
        <source>BMC Bioinformatics</source>
        <year>2008</year>
        <volume>9</volume>
        <fpage>11</fpage>
        <pub-id pub-id-type="pmid">18184432</pub-id>
      </element-citation>
    </ref>
    <ref id="btu406-B6">
      <element-citation publication-type="journal">
        <collab>HDF5 group help desk</collab>
        <article-title>File format specification v2.0</article-title>
        <year>2012</year>
        <comment>
          <ext-link ext-link-type="uri" xlink:href="http://www.hdfgroup.org/HDF5/doc/H5.format.html">http://www.hdfgroup.org/HDF5/doc/H5.format.html</ext-link>
        </comment>
      </element-citation>
    </ref>
    <ref id="btu406-B7">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Crusoe</surname>
            <given-names>MR</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The khmer software package: enabling efficient sequence analysis</article-title>
        <year>2014</year>
        <comment>[Epub ahead of print, doi: 10.6084/m9.figshare.979190]</comment>
      </element-citation>
    </ref>
    <ref id="btu406-B8">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Lemaitre</surname>
            <given-names>C</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Mapping-free and assembly-free discovery of inversion breakpoints from raw NGS reads</article-title>
        <source>First International Conference on Algorithms for Computational Biology (AlCoB 2014)</source>
        <year>2014</year>
        <publisher-loc>Tarragona, Spain</publisher-loc>
      </element-citation>
    </ref>
    <ref id="btu406-B9">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Durbin</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Fast and accurate short read alignment with Burrows-Wheeler Transform</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <fpage>1754</fpage>
        <lpage>1760</lpage>
        <pub-id pub-id-type="pmid">19451168</pub-id>
      </element-citation>
    </ref>
    <ref id="btu406-B10">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Liu</surname>
            <given-names>Y</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Musket: a multistage k-mer spectrum-based error corrector for Illumina sequence data</article-title>
        <source>Bioinformatics</source>
        <year>2013</year>
        <volume>29</volume>
        <fpage>308</fpage>
        <lpage>315</lpage>
        <pub-id pub-id-type="pmid">23202746</pub-id>
      </element-citation>
    </ref>
    <ref id="btu406-B11">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Liu</surname>
            <given-names>Y</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>CUSHAW: a CUDA compatible short read aligner to large genomes based on the Burrows–Wheeler transform</article-title>
        <source>Bioinformatics</source>
        <year>2012</year>
        <volume>28</volume>
        <fpage>1830</fpage>
        <lpage>1837</lpage>
        <pub-id pub-id-type="pmid">22576173</pub-id>
      </element-citation>
    </ref>
    <ref id="btu406-B12">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Luo</surname>
            <given-names>R</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>SOAPdenovo2: an empirically improved memory-efficient short-read de novo assembler</article-title>
        <source>Gigascience</source>
        <year>2012</year>
        <volume>1</volume>
        <fpage>18</fpage>
        <pub-id pub-id-type="pmid">23587118</pub-id>
      </element-citation>
    </ref>
    <ref id="btu406-B13">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Markovits</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>NGS++: a library for rapid prototyping of epigenomics software tools</article-title>
        <source>Bioinformatics</source>
        <year>2013</year>
        <volume>29</volume>
        <fpage>1893</fpage>
        <lpage>1894</lpage>
        <pub-id pub-id-type="pmid">23736531</pub-id>
      </element-citation>
    </ref>
    <ref id="btu406-B14">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Philippe</surname>
            <given-names>N</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>CRAC: an integrated approach to the analysis of RNA-seq reads</article-title>
        <source>Genome Biol.</source>
        <year>2013</year>
        <volume>14</volume>
        <fpage>R30</fpage>
        <pub-id pub-id-type="pmid">23537109</pub-id>
      </element-citation>
    </ref>
    <ref id="btu406-B15">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rizk</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Lavenier</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>GASSST: global alignment short sequence search tool</article-title>
        <source>Bioinformatics</source>
        <year>2010</year>
        <volume>26</volume>
        <fpage>2534</fpage>
        <lpage>2540</lpage>
        <pub-id pub-id-type="pmid">20739310</pub-id>
      </element-citation>
    </ref>
    <ref id="btu406-B16">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rizk</surname>
            <given-names>G</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>DSK: k-mer counting with very low memory usage</article-title>
        <source>Bioinformatics</source>
        <year>2013</year>
        <volume>29</volume>
        <fpage>652</fpage>
        <lpage>653</lpage>
        <pub-id pub-id-type="pmid">23325618</pub-id>
      </element-citation>
    </ref>
    <ref id="btu406-B17">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Salikhov</surname>
            <given-names>K</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Using cascading bloom filters to improve the memory usage for de-Bruijn graph</article-title>
        <source>Algorithms Mol Biol</source>
        <year>2014</year>
        <volume>9</volume>
        <fpage>2</fpage>
        <pub-id pub-id-type="pmid">24565280</pub-id>
      </element-citation>
    </ref>
    <ref id="btu406-B18">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Simpson</surname>
            <given-names>JT</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>ABySS: a parallel assembler for short read sequence data</article-title>
        <source>Genome Res.</source>
        <year>2009</year>
        <volume>19</volume>
        <fpage>1117</fpage>
        <lpage>1123</lpage>
        <pub-id pub-id-type="pmid">19251739</pub-id>
      </element-citation>
    </ref>
    <ref id="btu406-B19">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Uricaru</surname>
            <given-names>R</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Reference-ree detection of genotypable SNPs, in revision to NAR</article-title>
        <year>2014</year>
        <comment>[Epub ahead of print]</comment>
      </element-citation>
    </ref>
    <ref id="btu406-B20">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhao</surname>
            <given-names>S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Rainbow: a tool for large-scale whole-genome sequencing data analysis using cloud computing</article-title>
        <source>BMC Genomics</source>
        <year>2013</year>
        <volume>14</volume>
        <fpage>425</fpage>
        <pub-id pub-id-type="pmid">23802613</pub-id>
      </element-citation>
    </ref>
    <ref id="btu406-B21">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zerbino</surname>
            <given-names>DR</given-names>
          </name>
          <name>
            <surname>Birney</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <article-title>Velvet: algorithms for de novo short read assembly using de-Bruijn graphs</article-title>
        <source>Genome Res.</source>
        <year>2008</year>
        <volume>18</volume>
        <fpage>821</fpage>
        <lpage>829</lpage>
        <pub-id pub-id-type="pmid">18349386</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-archivearticle1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">PLoS One</journal-id>
    <journal-id journal-id-type="iso-abbrev">PLoS ONE</journal-id>
    <journal-id journal-id-type="publisher-id">plos</journal-id>
    <journal-id journal-id-type="pmc">plosone</journal-id>
    <journal-title-group>
      <journal-title>PLoS ONE</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1932-6203</issn>
    <publisher>
      <publisher-name>Public Library of Science</publisher-name>
      <publisher-loc>San Francisco, USA</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">3441570</article-id>
    <article-id pub-id-type="pmid">23028432</article-id>
    <article-id pub-id-type="publisher-id">PONE-D-11-23103</article-id>
    <article-id pub-id-type="doi">10.1371/journal.pone.0042304</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research Article</subject>
      </subj-group>
      <subj-group subj-group-type="Discipline-v2">
        <subject>Biology</subject>
        <subj-group>
          <subject>Computational Biology</subject>
          <subj-group>
            <subject>Genomics</subject>
            <subj-group>
              <subject>Genome Analysis Tools</subject>
              <subj-group>
                <subject>Sequence Assembly Tools</subject>
              </subj-group>
            </subj-group>
            <subj-group>
              <subject>Genome Sequencing</subject>
            </subj-group>
          </subj-group>
        </subj-group>
        <subj-group>
          <subject>Genomics</subject>
          <subj-group>
            <subject>Genome Analysis Tools</subject>
            <subj-group>
              <subject>Sequence Assembly Tools</subject>
            </subj-group>
          </subj-group>
          <subj-group>
            <subject>Genome Sequencing</subject>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v2">
        <subject>Computer Science</subject>
        <subj-group>
          <subject>Software Engineering</subject>
          <subj-group>
            <subject>Software Design</subject>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v2">
        <subject>Engineering</subject>
        <subj-group>
          <subject>Software Engineering</subject>
          <subj-group>
            <subject>Software Design</subject>
          </subj-group>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>An Integrated Pipeline for de Novo Assembly of Microbial Genomes</article-title>
      <alt-title alt-title-type="running-head">The A5 Assembly Pipeline</alt-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Tritt</surname>
          <given-names>Andrew</given-names>
        </name>
        <xref ref-type="aff" rid="aff1">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Eisen</surname>
          <given-names>Jonathan A.</given-names>
        </name>
        <xref ref-type="aff" rid="aff1">
          <sup>1</sup>
        </xref>
        <xref ref-type="aff" rid="aff2">
          <sup>2</sup>
        </xref>
        <xref ref-type="aff" rid="aff3">
          <sup>3</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Facciotti</surname>
          <given-names>Marc T.</given-names>
        </name>
        <xref ref-type="aff" rid="aff1">
          <sup>1</sup>
        </xref>
        <xref ref-type="aff" rid="aff4">
          <sup>4</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Darling</surname>
          <given-names>Aaron E.</given-names>
        </name>
        <xref ref-type="aff" rid="aff1">
          <sup>1</sup>
        </xref>
        <xref ref-type="corresp" rid="cor1">
          <sup>*</sup>
        </xref>
      </contrib>
    </contrib-group>
    <aff id="aff1">
      <label>1</label>
      <addr-line>Genome Center, University of California Davis, Davis, California, United States of America</addr-line>
    </aff>
    <aff id="aff2">
      <label>2</label>
      <addr-line>Department of Evolution and Ecology, University of California Davis, Davis, California, United States of America</addr-line>
    </aff>
    <aff id="aff3">
      <label>3</label>
      <addr-line>Department of Medical Microbiology and Immunology, University of California Davis, Davis, California, United States of America</addr-line>
    </aff>
    <aff id="aff4">
      <label>4</label>
      <addr-line>Department of Biomedical Engineering, University of California Davis, Davis, California, United States of America</addr-line>
    </aff>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Zhu</surname>
          <given-names>Dongxiao</given-names>
        </name>
        <role>Editor</role>
        <xref ref-type="aff" rid="edit1"/>
      </contrib>
    </contrib-group>
    <aff id="edit1">
      <addr-line>Wayne State University, United States of America</addr-line>
    </aff>
    <author-notes>
      <corresp id="cor1">* E-mail: <email>aarondarling@ucdavis.edu</email></corresp>
      <fn fn-type="COI-statement">
        <p><bold>Competing Interests: </bold>The authors have declared that no competing interests exist.</p>
      </fn>
      <fn fn-type="con">
        <p>Conceived and designed the experiments: AJT AED. Performed the experiments: AJT AED. Analyzed the data: AJT AED. Contributed reagents/materials/analysis tools: AJT MTF AED. Wrote the paper: AJT JAE MTF AED.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="collection">
      <year>2012</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>13</day>
      <month>9</month>
      <year>2012</year>
    </pub-date>
    <volume>7</volume>
    <issue>9</issue>
    <elocation-id>e42304</elocation-id>
    <history>
      <date date-type="received">
        <day>16</day>
        <month>11</month>
        <year>2011</year>
      </date>
      <date date-type="accepted">
        <day>6</day>
        <month>7</month>
        <year>2012</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Â© 2012 Tritt et al</copyright-statement>
      <copyright-year>2012</copyright-year>
      <copyright-holder>Tritt et al</copyright-holder>
      <license xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are properly credited.</license-p>
      </license>
    </permissions>
    <abstract>
      <p>Remarkable advances in DNA sequencing technology have created a need for <italic>de novo</italic> genome assembly methods tailored to work with the new sequencing data types. Many such methods have been published in recent years, but assembling raw sequence data to obtain a draft genome has remained a complex, multi-step process, involving several stages of sequence data cleaning, error correction, assembly, and quality control. Successful application of these steps usually requires intimate knowledge of a diverse set of algorithms and software. We present an assembly pipeline called A5 (<bold>A</bold>ndrew <bold>A</bold>nd <bold>A</bold>aron's <bold>A</bold>wesome <bold>A</bold>ssembly pipeline) that simplifies the entire genome assembly process by automating these stages, by integrating several previously published algorithms with new algorithms for quality control and automated assembly parameter selection. We demonstrate that A5 can produce assemblies of quality comparable to a leading assembly algorithm, SOAPdenovo, without any prior knowledge of the particular genome being assembled and without the extensive parameter tuning required by the other assembly algorithm. In particular, the assemblies produced by A5 exhibit 50% or more reduction in broken protein coding sequences relative to SOAPdenovo assemblies. The A5 pipeline can also assemble Illumina sequence data from libraries constructed by the Nextera (transposon-catalyzed) protocol, which have markedly different characteristics to mechanically sheared libraries. Finally, A5 has modest compute requirements, and can assemble a typical bacterial genome on current desktop or laptop computer hardware in under two hours, depending on depth of coverage.</p>
    </abstract>
    <funding-group>
      <funding-statement>This work was supported by National Science Foundation award ER 0949453. The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement>
    </funding-group>
    <counts>
      <page-count count="9"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec id="s1">
    <title>Introduction</title>
    <p>High throughput DNA sequencing continues to revolutionize our understanding of biological systems. In particular, the <italic>de novo</italic> sequencing and assembly of genomes and metagenomes has yielded basic scientific insight into the relationship between genotype and phenotype, in addition to biotechnological advances in enzyme discovery, bioprospecting, medicine, and agriculture. Although many high throughput sequencing instruments have been developed, such as the ABI SOLiD, Helicos Heliscope, IonTorrent PGM, Roche 454, and Pacific Biosciences RS1, we focus on data generated by the Illumina instrument in this work because it is the most prevalent data type at the moment. Current Illumina instruments such as the HiSeq 2000 and MiSeq generate paired nucleotide sequence reads of length up to 150 nt per read from fragments as long as 600 nt, with longer reads and inserts under development. Currently one run of a HiSeq 2000 instrument generates up to 600 Gbp of sequence data. Despite the widespread use of Illumina sequencing, <italic>de novo</italic> genome assembly from Illumina data continues to pose a challenging problem.</p>
    <p>A tremendous number of software tools have been developed to assist with genome assembly from Illumina data. These include tools for base calling of the images from the sequencer <xref rid="pone.0042304-Kao1" ref-type="bibr">[1]</xref>, <xref rid="pone.0042304-Kircher1" ref-type="bibr">[2]</xref>, error correction of the sequence reads <xref rid="pone.0042304-Kelley1" ref-type="bibr">[3]</xref>, <xref rid="pone.0042304-Kao2" ref-type="bibr">[4]</xref>, removal of adapter sequence contamination <xref rid="pone.0042304-Lassmann1" ref-type="bibr">[5]</xref>, contig assembly <xref rid="pone.0042304-Warren1" ref-type="bibr">[6]</xref>, <xref rid="pone.0042304-Chaisson1" ref-type="bibr">[7]</xref>, and scaffolding <xref rid="pone.0042304-Koren1" ref-type="bibr">[8]</xref>â<xref rid="pone.0042304-Dayarian1" ref-type="bibr">[10]</xref>. This list is not complete, but rather meant to illustrate some of the many tools for Illumina sequence analysis. As part of a project to sequence and assemble <italic>de novo</italic> the genomes of 64 halophilic archaea, we have evaluated many of these software tools and constructed a new genome assembly pipeline that incorporates methods for data cleaning, error correction, contig assembly, and scaffolding together with a new algorithm for assembly quality control.</p>
    <p>The new assembly quality control algorithm uses paired-end read information to detect and fix misassembled contigs and scaffolds. The first stage involves mapping reads back to assembled contigs. The second stage involves detecting statistically significant clusters of read pairs that conflict with the assembled contigs. Having identified putative regions of misassembly, the algorithm then determines the region of misassembly as precisely as possible and removes that region from the assembly, breaking the contigs or scaffolds at that point. The quality control algorithm is implemented in a software module that can also be used independently of the assembly pipeline.</p>
    <p>The new assembly pipeline, called A5, can operate directly on FastQ format data generated by an Illumina sequencing run without any prior processing. The A5 pipeline also contains methods to infer many of the assembly parameters directly from the data, and in cases where that was not practical, default values have been chosen by tuning their values on assemblies of <italic>Haloferax mediterranei</italic> and <italic>Haloferax volcanii</italic> DS2 <xref rid="pone.0042304-Hartman1" ref-type="bibr">[11]</xref>, for which high quality reference genomes were available.</p>
    <p>We present comparison of the A5 pipeline's performance relative to the SOAPdenovo assembler <xref rid="pone.0042304-Li1" ref-type="bibr">[12]</xref> on two datasets wherein we attempted to fix the <italic>human time budget</italic>, in terms of the number of steps that must be performed by a user, to be roughly equal for the two approaches. We also compare against SOAPdenovo in an ideal setting where extra effort has been taken to clean and error correct the reads prior to use of SOAPdenovo. The first dataset is the halophilic archaeon, <italic>H. volcanii</italic> DS2, for which a high quality published reference genome is available <xref rid="pone.0042304-Hartman1" ref-type="bibr">[11]</xref>. For this dataset we are able to use reference-based assembly metrics to evaluate assembly quality <xref rid="pone.0042304-Darling1" ref-type="bibr">[13]</xref>. We also evaluate assembly quality on an <italic>Escherichia coli</italic> CC118 isolate sequenced using transposon-catalyzed library preparation methods (Epicentre Nextera). No high quality reference genome exists for the <italic>E. coli</italic> isolate, so we report basic descriptive statistics for assemblies generated by each method.</p>
    <p><italic>De novo</italic> genome assembly from Illumina data is an extremely active area of research, with many assembly algorithms published and many more continuing to be produced. A thorough comparison of the performance of all these methods is a highly nontrivial undertaking and well outside the scope of the present work. Instead, we chose to compare A5 to a single other widely-used assembly method, namely SOAPdenovo. We selected SOAPdenovo for comparison because it ranked among the best in two recent surveys of assembly algorithms <xref rid="pone.0042304-Earl1" ref-type="bibr">[14]</xref>, <xref rid="pone.0042304-Salzberg1" ref-type="bibr">[15]</xref>, because it is able to run on a single paired-end library, and like A5 is relatively simple to download, install, and use. Although methods that require both small insert paired-end libraries and large insert mate-pair libraries can produce very high quality results <xref rid="pone.0042304-Gnerre1" ref-type="bibr">[16]</xref>, the time, cost and technical expertise required to construct large insert libraries is significantly beyond that required for small insert libraries (especially using transposon-catalyzed library construction). For this reason we feel there is a great need for methods to easily produce assemblies of the highest quality possible without large insert mate-pair data. A5 can be considered a first attempt at such a method.</p>
    <p>Although the A5 pipeline was parameterized using archaeal genomes, it is readily applicable to genome assembly of other organisms including bacteria, virii, and homozygous eukaryotes. Compute requirements are likely to be the limiting factor for assembly of large genomes; these requirements are discussed below.</p>
  </sec>
  <sec id="s2">
    <title>Results</title>
    <p>We evaluated the performance of A5 on two real Illumina data sets and compared the results to those obtained when running SOAPdenovo v1.05 <xref rid="pone.0042304-Li1" ref-type="bibr">[12]</xref> on the same datasets. The first data set (called <bold>Volc</bold>) is a paired-end short insert library constructed from <italic>H. volcanii</italic> DS2 genomic DNA using sonication followed by end-repair, A-tailing, and adapter ligation, and was sequenced on an Illumina GAIIx instrument. Sequencing yielded 6844701 read pairs, with each read being 78 nt in length. These data have been deposited at the NCBI Short Read Archive, accession SRX105348 (data can be downloaded from <ext-link ext-link-type="uri" xlink:href="http://edhar.genomecenter.ucdavis.edu/">http://edhar.genomecenter.ucdavis.edu/</ext-link>
<inline-formula><inline-graphic xlink:href="pone.0042304.e001.jpg"/></inline-formula>andrew/ngopt_pipeline/ms/). We chose <italic>H. volcanii</italic> for this evaluation because it is a model organism among the archaea, we have an ongoing project to sequence 64 other haloarchaea genomes, and a high quality reference genome is available for <italic>H. volcanii</italic> DS2 <xref rid="pone.0042304-Hartman1" ref-type="bibr">[11]</xref>, enabling the use of reference-based assembly metrics <xref rid="pone.0042304-Darling1" ref-type="bibr">[13]</xref>. The second data set, called <bold>Tn</bold> and previously published by <xref rid="pone.0042304-Adey1" ref-type="bibr">[17]</xref>, is a paired-end library constructed from <italic>E. coli</italic> CC118 genomic DNA using transposon-catalyzed adapter ligation (Nextera) and was sequenced on an Illumina HiSeq 2000 instrument using TruSeq 2 chemistry. Reads from this dataset were obtained from the NCBI Short Read Archive, accession SRX030179.</p>
    <p>We executed A5 and SOAPdenovo for each data set. <xref ref-type="table" rid="pone-0042304-t001">Table 1</xref> reports the assembly performance for <bold>Volc</bold> assemblies. <xref ref-type="table" rid="pone-0042304-t002">Table 2</xref> reports the assembly performance for <bold>Tn</bold> assemblies. <bold>Volc</bold> assemblies were scored using Mauve Assembly Metrics <xref rid="pone.0042304-Darling1" ref-type="bibr">[13]</xref>, which quantifies differences between the reference and assembly using whole genome alignment. We note that aligner error may cause additional errors to be found between the assembly and the reference. Although high quality reference assemblies exist for other <italic>E. coli</italic> isolates, none are available for strain CC118. We can not use another <italic>E. coli</italic> as a reference due to the potential for extensive genomic divergence among <italic>E. coli</italic> isolates <xref rid="pone.0042304-Perna1" ref-type="bibr">[18]</xref>. Contigs from A5 were broken using the A5QC algorithm. <bold>Volc</bold> contigs were broken up into 859 contigs (N50â=â8170) and <bold>Tn</bold> contigs were broken up into 342 contigs (N50â=â27316). N50 is defined as the contig length N for which 50% of all bases in the assembly are in a contig (or scaffold) of length <inline-formula><inline-graphic xlink:href="pone.0042304.e002.jpg"/></inline-formula>.</p>
    <table-wrap id="pone-0042304-t001" orientation="portrait" position="float">
      <object-id pub-id-type="doi">10.1371/journal.pone.0042304.t001</object-id>
      <label>Table 1</label>
      <caption>
        <title>Assembly metrics for <italic>H. volcanii</italic> DS2.</title>
      </caption>
      <alternatives>
        <graphic id="pone-0042304-t001-1" xlink:href="pone.0042304.t001"/>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col align="left" span="1"/>
            <col align="center" span="1"/>
            <col align="center" span="1"/>
            <col align="center" span="1"/>
            <col align="center" span="1"/>
            <col align="center" span="1"/>
            <col align="center" span="1"/>
            <col align="center" span="1"/>
            <col align="center" span="1"/>
            <col align="center" span="1"/>
          </colgroup>
          <thead>
            <tr>
              <td align="left" rowspan="1" colspan="1"/>
              <td colspan="6" align="left" rowspan="1">SOAPdenovo</td>
              <td colspan="3" align="left" rowspan="1">A5</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">Assembly</td>
              <td align="left" rowspan="1" colspan="1">ctg-CDS</td>
              <td align="left" rowspan="1" colspan="1">scaf-CDS</td>
              <td align="left" rowspan="1" colspan="1">ctg-N50</td>
              <td align="left" rowspan="1" colspan="1">scaf-N50</td>
              <td align="left" rowspan="1" colspan="1">ctg-LCB</td>
              <td align="left" rowspan="1" colspan="1">scaf-LCB</td>
              <td align="left" rowspan="1" colspan="1">ctg</td>
              <td align="left" rowspan="1" colspan="1">scaf</td>
              <td align="left" rowspan="1" colspan="1">scaf-QC</td>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" rowspan="1" colspan="1">Sequence count</td>
              <td align="left" rowspan="1" colspan="1">7686</td>
              <td align="left" rowspan="1" colspan="1">211</td>
              <td align="left" rowspan="1" colspan="1">10258</td>
              <td align="left" rowspan="1" colspan="1">212</td>
              <td align="left" rowspan="1" colspan="1">19508</td>
              <td align="left" rowspan="1" colspan="1">226</td>
              <td align="left" rowspan="1" colspan="1">853</td>
              <td align="left" rowspan="1" colspan="1">106</td>
              <td align="left" rowspan="1" colspan="1">95</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">N50</td>
              <td align="left" rowspan="1" colspan="1">5111</td>
              <td align="left" rowspan="1" colspan="1">125642</td>
              <td align="left" rowspan="1" colspan="1">4775</td>
              <td align="left" rowspan="1" colspan="1">125739</td>
              <td align="left" rowspan="1" colspan="1">2832</td>
              <td align="left" rowspan="1" colspan="1">107081</td>
              <td align="left" rowspan="1" colspan="1">8170</td>
              <td align="left" rowspan="1" colspan="1">101041</td>
              <td align="left" rowspan="1" colspan="1">110196</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">Miscalled bases</td>
              <td align="left" rowspan="1" colspan="1">379</td>
              <td align="left" rowspan="1" colspan="1">573</td>
              <td align="left" rowspan="1" colspan="1">270</td>
              <td align="left" rowspan="1" colspan="1">395</td>
              <td align="left" rowspan="1" colspan="1">409</td>
              <td align="left" rowspan="1" colspan="1">377</td>
              <td align="left" rowspan="1" colspan="1">120</td>
              <td align="left" rowspan="1" colspan="1">315</td>
              <td align="left" rowspan="1" colspan="1">247</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">Uncalled bases</td>
              <td align="left" rowspan="1" colspan="1">0</td>
              <td align="left" rowspan="1" colspan="1">92290</td>
              <td align="left" rowspan="1" colspan="1">0</td>
              <td align="left" rowspan="1" colspan="1">11430</td>
              <td align="left" rowspan="1" colspan="1">0</td>
              <td align="left" rowspan="1" colspan="1">13304</td>
              <td align="left" rowspan="1" colspan="1">0</td>
              <td align="left" rowspan="1" colspan="1">6436</td>
              <td align="left" rowspan="1" colspan="1">6727</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">Extra bases</td>
              <td align="left" rowspan="1" colspan="1">269960</td>
              <td align="left" rowspan="1" colspan="1">18582</td>
              <td align="left" rowspan="1" colspan="1">27069</td>
              <td align="left" rowspan="1" colspan="1">14295</td>
              <td align="left" rowspan="1" colspan="1">32797</td>
              <td align="left" rowspan="1" colspan="1">19732</td>
              <td align="left" rowspan="1" colspan="1">14096</td>
              <td align="left" rowspan="1" colspan="1">17903</td>
              <td align="left" rowspan="1" colspan="1">18496</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">Missing bases</td>
              <td align="left" rowspan="1" colspan="1">149253</td>
              <td align="left" rowspan="1" colspan="1">151966</td>
              <td align="left" rowspan="1" colspan="1">148291</td>
              <td align="left" rowspan="1" colspan="1">142017</td>
              <td align="left" rowspan="1" colspan="1">160773</td>
              <td align="left" rowspan="1" colspan="1">156254</td>
              <td align="left" rowspan="1" colspan="1">128909</td>
              <td align="left" rowspan="1" colspan="1">107421</td>
              <td align="left" rowspan="1" colspan="1">106626</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">Extra sequences</td>
              <td align="left" rowspan="1" colspan="1">6129</td>
              <td align="left" rowspan="1" colspan="1">75</td>
              <td align="left" rowspan="1" colspan="1">8604</td>
              <td align="left" rowspan="1" colspan="1">76</td>
              <td align="left" rowspan="1" colspan="1">17194</td>
              <td align="left" rowspan="1" colspan="1">95</td>
              <td align="left" rowspan="1" colspan="1">33</td>
              <td align="left" rowspan="1" colspan="1">5</td>
              <td align="left" rowspan="1" colspan="1">5</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">Missing replicons</td>
              <td align="left" rowspan="1" colspan="1">0</td>
              <td align="left" rowspan="1" colspan="1">0</td>
              <td align="left" rowspan="1" colspan="1">0</td>
              <td align="left" rowspan="1" colspan="1">0</td>
              <td align="left" rowspan="1" colspan="1">1</td>
              <td align="left" rowspan="1" colspan="1">1</td>
              <td align="left" rowspan="1" colspan="1">0</td>
              <td align="left" rowspan="1" colspan="1">0</td>
              <td align="left" rowspan="1" colspan="1">0</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">DCJ Distance</td>
              <td align="left" rowspan="1" colspan="1">1559</td>
              <td align="left" rowspan="1" colspan="1">143</td>
              <td align="left" rowspan="1" colspan="1">1656</td>
              <td align="left" rowspan="1" colspan="1">140</td>
              <td align="left" rowspan="1" colspan="1">2317</td>
              <td align="left" rowspan="1" colspan="1">134</td>
              <td align="left" rowspan="1" colspan="1">839</td>
              <td align="left" rowspan="1" colspan="1">123</td>
              <td align="left" rowspan="1" colspan="1">100</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">LCB Count</td>
              <td align="left" rowspan="1" colspan="1">15</td>
              <td align="left" rowspan="1" colspan="1">22</td>
              <td align="left" rowspan="1" colspan="1">9</td>
              <td align="left" rowspan="1" colspan="1">14</td>
              <td align="left" rowspan="1" colspan="1">7</td>
              <td align="left" rowspan="1" colspan="1">10</td>
              <td align="left" rowspan="1" colspan="1">45</td>
              <td align="left" rowspan="1" colspan="1">55</td>
              <td align="left" rowspan="1" colspan="1">28</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">Broken CDS</td>
              <td align="left" rowspan="1" colspan="1">434</td>
              <td align="left" rowspan="1" colspan="1">434</td>
              <td align="left" rowspan="1" colspan="1">454</td>
              <td align="left" rowspan="1" colspan="1">454</td>
              <td align="left" rowspan="1" colspan="1">634</td>
              <td align="left" rowspan="1" colspan="1">634</td>
              <td align="left" rowspan="1" colspan="1">276</td>
              <td align="left" rowspan="1" colspan="1">214</td>
              <td align="left" rowspan="1" colspan="1">212</td>
            </tr>
          </tbody>
        </table>
      </alternatives>
      <table-wrap-foot>
        <fn id="nt101">
          <p>Reference-based assembly metrics on ten assemblies of <italic>H. volcanii</italic> DS2 (<bold>Volc</bold>) dataset. âscafâ indicates an assembly that has been scaffolded, while âctgâ indicates no scaffolding. Labels â-CDSâ, â-N50â, and â-LCBâ indicate SOAPdenovo assemblies run with parameter combinations that minimized broken coding sequences, maximized scaffold N50, and minimized LCB (Locally Collinear Block) count, respectively. For A5, assembly âscaf-QCâ has been broken using the A5QC algorithm and rescaffolded using SSPACE. The DCJ Distance is the Double-Cut-and-Join distance <xref rid="pone.0042304-Bergeron1" ref-type="bibr">[35]</xref>, a measure of the minimum number of rearrangement operations required to transform one genome assembly into another.</p>
        </fn>
      </table-wrap-foot>
    </table-wrap>
    <table-wrap id="pone-0042304-t002" orientation="portrait" position="float">
      <object-id pub-id-type="doi">10.1371/journal.pone.0042304.t002</object-id>
      <label>Table 2</label>
      <caption>
        <title>Assembly metrics for <italic>E. coli</italic> CC118.</title>
      </caption>
      <alternatives>
        <graphic id="pone-0042304-t002-2" xlink:href="pone.0042304.t002"/>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col align="left" span="1"/>
            <col align="center" span="1"/>
            <col align="center" span="1"/>
            <col align="center" span="1"/>
            <col align="center" span="1"/>
            <col align="center" span="1"/>
          </colgroup>
          <thead>
            <tr>
              <td align="left" rowspan="1" colspan="1"/>
              <td colspan="2" align="left" rowspan="1">SOAPdenovo</td>
              <td colspan="3" align="left" rowspan="1">A5</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">Assembly</td>
              <td align="left" rowspan="1" colspan="1">ctg</td>
              <td align="left" rowspan="1" colspan="1">scaf</td>
              <td align="left" rowspan="1" colspan="1">ctg</td>
              <td align="left" rowspan="1" colspan="1">scaf</td>
              <td align="left" rowspan="1" colspan="1">scaf-QC</td>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" rowspan="1" colspan="1">Sequence count</td>
              <td align="left" rowspan="1" colspan="1">4348</td>
              <td align="left" rowspan="1" colspan="1">197</td>
              <td align="left" rowspan="1" colspan="1">323</td>
              <td align="left" rowspan="1" colspan="1">111</td>
              <td align="left" rowspan="1" colspan="1">87</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">N50</td>
              <td align="left" rowspan="1" colspan="1">12825</td>
              <td align="left" rowspan="1" colspan="1">83067</td>
              <td align="left" rowspan="1" colspan="1">27846</td>
              <td align="left" rowspan="1" colspan="1">72166</td>
              <td align="left" rowspan="1" colspan="1">82719</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">Mean seq len</td>
              <td align="left" rowspan="1" colspan="1">1056</td>
              <td align="left" rowspan="1" colspan="1">22647</td>
              <td align="left" rowspan="1" colspan="1">13800</td>
              <td align="left" rowspan="1" colspan="1">40207</td>
              <td align="left" rowspan="1" colspan="1">51300</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">Max seq len</td>
              <td align="left" rowspan="1" colspan="1">48725</td>
              <td align="left" rowspan="1" colspan="1">200327</td>
              <td align="left" rowspan="1" colspan="1">113049</td>
              <td align="left" rowspan="1" colspan="1">330689</td>
              <td align="left" rowspan="1" colspan="1">330689</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">Total bases</td>
              <td align="left" rowspan="1" colspan="1">4590705</td>
              <td align="left" rowspan="1" colspan="1">4461465</td>
              <td align="left" rowspan="1" colspan="1">4457409</td>
              <td align="left" rowspan="1" colspan="1">4462953</td>
              <td align="left" rowspan="1" colspan="1">4463084</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">Uncalled bases</td>
              <td align="left" rowspan="1" colspan="1">0</td>
              <td align="left" rowspan="1" colspan="1">26290</td>
              <td align="left" rowspan="1" colspan="1">0</td>
              <td align="left" rowspan="1" colspan="1">220</td>
              <td align="left" rowspan="1" colspan="1">290</td>
            </tr>
          </tbody>
        </table>
      </alternatives>
      <table-wrap-foot>
        <fn id="nt102">
          <p>Non-reference based metrics on assemblies of <italic>E. coli</italic> CC118 (<bold>Tn</bold>) dataset. Data for SOAPdenovo were calculated from the assembly run with parameters that maximized scaffold N50. âscafâ indicates an assembly that has been scaffolded, while âctgâ indicates no scaffolding. For A5, assembly âscaf-QCâ has been broken using the A5QC algorithm and rescaffolded using SSPACE.</p>
        </fn>
      </table-wrap-foot>
    </table-wrap>
    <p>We initially ran SOAPdenovo with default parameters; however, the resulting assemblies were of extremely poor quality. For <bold>Volc</bold> there were 280985 contigs (N50â=â76) and 14433 scaffolds (N50â=â209), and for <bold>Tn</bold>, there were 1572720 contigs (N50â=â76) and 8144 scaffolds (N50â=â121). Rather than reporting poor results for SOAPdenovo, we endeavored to manually optimize its assembly parameters so that we can compare the A5 assembly to the best possible SOAPdenovo results. To do so, we ran SOAPdenovo with different combinations of values for the parameters <inline-formula><inline-graphic xlink:href="pone.0042304.e003.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="pone.0042304.e004.jpg"/></inline-formula>, where <inline-formula><inline-graphic xlink:href="pone.0042304.e005.jpg"/></inline-formula> is the <inline-formula><inline-graphic xlink:href="pone.0042304.e006.jpg"/></inline-formula>-mer size for SOAPdenovo and <inline-formula><inline-graphic xlink:href="pone.0042304.e007.jpg"/></inline-formula> is the threshold for the minimum number of times a <inline-formula><inline-graphic xlink:href="pone.0042304.e008.jpg"/></inline-formula>-mer must be observed in the data to be considered valid. For both datasets, we selected combinations that maximized scaffold N50. In addition, for the <bold>Volc</bold> dataset we also present assembly scoring results for the parameter combination that minimized LCB (locally colinear block) count between the assembly and the reference, as well the combination that minimized the number of broken coding sequences. The parameter combination that maximized scaffold N50 for <bold>Volc</bold> also minimized the sum of missing and extra bases relative to the reference. The parameter space queried was <inline-formula><inline-graphic xlink:href="pone.0042304.e009.jpg"/></inline-formula>, where <inline-formula><inline-graphic xlink:href="pone.0042304.e010.jpg"/></inline-formula> is the set of values over which <inline-formula><inline-graphic xlink:href="pone.0042304.e011.jpg"/></inline-formula> was varied, and <inline-formula><inline-graphic xlink:href="pone.0042304.e012.jpg"/></inline-formula> is the set of values over which <inline-formula><inline-graphic xlink:href="pone.0042304.e013.jpg"/></inline-formula> was varied. Using this process, the optimal parameters were found to be</p>
    <list list-type="bullet">
      <list-item>
        <p><bold>Volc</bold> (-N50): <inline-formula><inline-graphic xlink:href="pone.0042304.e014.jpg"/></inline-formula>, <inline-formula><inline-graphic xlink:href="pone.0042304.e015.jpg"/></inline-formula>.</p>
      </list-item>
      <list-item>
        <p><bold>Volc</bold> (-LCB): <inline-formula><inline-graphic xlink:href="pone.0042304.e016.jpg"/></inline-formula>, <inline-formula><inline-graphic xlink:href="pone.0042304.e017.jpg"/></inline-formula>.</p>
      </list-item>
      <list-item>
        <p><bold>Volc</bold> (-CDS): <inline-formula><inline-graphic xlink:href="pone.0042304.e018.jpg"/></inline-formula>, <inline-formula><inline-graphic xlink:href="pone.0042304.e019.jpg"/></inline-formula>.</p>
      </list-item>
      <list-item>
        <p><bold>Tn</bold>: <inline-formula><inline-graphic xlink:href="pone.0042304.e020.jpg"/></inline-formula>, <inline-formula><inline-graphic xlink:href="pone.0042304.e021.jpg"/></inline-formula></p>
      </list-item>
    </list>
    <p>Labels â-CDSâ, â-N50â, and â-LCBâ indicate SOAPdenovo assemblies run with parameter combinations that minimized broken coding sequences, maximized scaffold N50, and minimized LCB (Locally Collinear Block) count, respectively. Locally collinear blocks are continuous regions of assembly which can span zero or more contigs and scaffolds which are free from rearrangement relative to the reference genome. See <xref rid="pone.0042304-Darling1" ref-type="bibr">[13]</xref>, <xref rid="pone.0042304-Darling2" ref-type="bibr">[19]</xref> for a more complete discussion. A5 assemblies were generated using source code from revision 625 of A5.</p>
    <p>In addition to the reference-based assembly metrics, we present the scaffold and contig size distribution as a âlength accumulation curveâ in <xref ref-type="fig" rid="pone-0042304-g001">Figure 1</xref>. In that figure, scaffolds (contigs) are sorted in descending order by length and the cumulative length is plotted as additional scaffolds (contigs) are added. The scaffold length distribution for A5 and SOAPdenovo appear to be very similar. However, the contig length distributions are quite different, with SOAPdenovo generating much shorter contigs than A5. This exemplifies a fundamental difference between the contig-generation strategies employed by SOAPdenovo and IDBA (used in the A5 pipeline). SOAPdenovo is conservative during contig generation and avoids introducing misassembly and chimerism, but produces only very short contigs, whereas IDBA produces long contigs that occasionally contain misassemblies that the A5 pipeline's QC step must resolve.</p>
    <fig id="pone-0042304-g001" orientation="portrait" position="float">
      <object-id pub-id-type="doi">10.1371/journal.pone.0042304.g001</object-id>
      <label>Figure 1</label>
      <caption>
        <title>Sequence length accumulation curve for six assemblies of the model archaeon <italic>H. volcanii</italic> DS2.</title>
        <p>Curves represent the number of bases in an assembly as a function of the <inline-formula><inline-graphic xlink:href="pone.0042304.e022.jpg"/></inline-formula> largest sequences. Assemblies generated from SOAPdenovo and A5 are labelled with âSOAPâ and âA5â, respectively. âscafâ indicates an assembly that has been scaffolded, while âctgâ indicates no scaffolding. For A5, assembly âscaf-QCâ has been broken using the A5QC algorithm and rescaffolded using SSPACE. A perfect assembly would have exactly the number of sequences as the organism has replicons (5 in this case), and the curve would be in the extreme upper left corner.</p>
      </caption>
      <graphic xlink:href="pone.0042304.g001"/>
    </fig>
    <sec id="s2a">
      <title>A5 and SOAPdenovo assemblies on error corrected reads</title>
      <p>As reported elsewhere <xref rid="pone.0042304-Salzberg1" ref-type="bibr">[15]</xref>, assemblers such as SOAPdenovo can be highly sensitive to errors in the read sequence data and cleaning and filtering the reads prior to assembly can offer large improvements in some cases. In the previous section we report results of a comparison between A5 and SOAPdenovo assemblies when each pipeline is run in a single step from raw Illumina data. However, common practice involves manually performing several read cleaning steps prior to a SOAPdenovo assembly.</p>
      <p>A direct comparison of A5 to SOAPdenovo is challenging because A5 incorporates read cleaning steps whereas SOAP does not. Therefore, we also ran SOAPdenovo assemblies of <bold>Volc</bold> and <bold>Tn</bold> on cleaned and error corrected reads generated by stage 1 of the A5 pipeline. For these assemblies we also scanned a larger range of possible <inline-formula><inline-graphic xlink:href="pone.0042304.e023.jpg"/></inline-formula>-mer sizes for SOAPdenovo at the suggestion of an anonymous reviewer: <inline-formula><inline-graphic xlink:href="pone.0042304.e024.jpg"/></inline-formula>. The -CDS, -N50, and -LCB metrics were optimal in scaffold assemblies with <inline-formula><inline-graphic xlink:href="pone.0042304.e025.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="pone.0042304.e026.jpg"/></inline-formula>, respectively.</p>
      <p>SOAPdenovo assembly results on cleaned reads are provided in <xref ref-type="supplementary-material" rid="pone.0042304.s003">Table S2</xref>. As expected, using cleaned reads reduced the number of miscalled bases by 37â59% in the SOAPdenovo contig assemblies. Surprisingly, the number of miscalled bases in scaffold assemblies was lower only for <inline-formula><inline-graphic xlink:href="pone.0042304.e027.jpg"/></inline-formula>, with scaffold assemblies at other <inline-formula><inline-graphic xlink:href="pone.0042304.e028.jpg"/></inline-formula> values having higher miscalled base counts than the optimal -CDS, -N50, and -LCB runs on uncleaned data. We speculate that this may be result from two factors. First, the currently available version of SOAPdenovo does not support setting <inline-formula><inline-graphic xlink:href="pone.0042304.e029.jpg"/></inline-formula> when <inline-formula><inline-graphic xlink:href="pone.0042304.e030.jpg"/></inline-formula>. Therefore all assemblies on clean data with higher <inline-formula><inline-graphic xlink:href="pone.0042304.e031.jpg"/></inline-formula> settings were done with with <inline-formula><inline-graphic xlink:href="pone.0042304.e032.jpg"/></inline-formula>. However we observed that <inline-formula><inline-graphic xlink:href="pone.0042304.e033.jpg"/></inline-formula> produced better assemblies when <inline-formula><inline-graphic xlink:href="pone.0042304.e034.jpg"/></inline-formula> in some settings (see above). Second, the scaffold gap filling process used by SOAPdenovo may explain the extra error in scaffold assemblies relative to contig assemblies. Scaffold gap filling identifies reads with pairing information suggesting they belong in the scaffolded region between two contigs and adds them to the assembly. In some cases these regions might have low coverage, making error correction less effective.</p>
      <p>In comparing the SOAPdenovo results on raw and cleaned reads, we observe that the highest achieved scaffold N50 and the LCB count metric (a measure of misassembly error) are apparently unaffected by the read cleaning process, with a difference of only 0.1% between cleaned and raw data in scaffold N50, and no change in LCB count. We observe a slight reduction in contig N50 and increase in broken CDS when SOAPdenovo is run on cleaned reads.</p>
    </sec>
    <sec id="s2b">
      <title>Compute time and memory requirements</title>
      <p>The A5 pipeline can construct genome assemblies with limited memory and CPU requirements. For microbial genomes around 4 Mbp sequenced to 100Ã coverage, memory as low as 4 GB can be sufficient (data not shown). Typically the error correction using SGA is the most resource intensive stage in the pipeline. SGA's implementation of error correction offers a configurable space/time tradeoff wherein temporary files on a filesystem can be used to reduce RAM requirements at the expense of extra compute time. A5 makes use of this configurable tradeoff by determining at runtime the available memory on the system and allocating a fixed fraction of it to SGA for error correction. This approach enables error correction to run faster on machines with larger available memory.</p>
      <p>The A5 assemblies of <bold>Volc</bold> and <bold>Tn</bold> were conducted on a 8 core 64-bit system with 48 GB RAM. On this machine, the <bold>Volc</bold> assembly took 1 hour, 20 minutes with a peak memory usage of 20 GB during the SGA error correction step. The <bold>Tn</bold> assembly completed in 1 hour, 29 minutes with a peak memory usage of 21 GB.</p>
    </sec>
  </sec>
  <sec id="s3">
    <title>Discussion</title>
    <p>When constructing assemblies directly from Illumina sequence output in a single step, A5 produces higher quality assemblies than SOAPdenovo on the datasets we analyzed. In particular, A5 assemblies have a <inline-formula><inline-graphic xlink:href="pone.0042304.e035.jpg"/></inline-formula> lower rate of broken coding sequences relative to SOAPdenovo assemblies. For gene-oriented analyses such as inferring metabolic potential and surveys of natural selection via dN/dS ratios, the reduced error in coding sequences may be very advantageous. To obtain the SOAPdenovo results we conducted a parameter sweep over 50 combinations of <inline-formula><inline-graphic xlink:href="pone.0042304.e036.jpg"/></inline-formula>-mer length (<inline-formula><inline-graphic xlink:href="pone.0042304.e037.jpg"/></inline-formula>) and the minimum <inline-formula><inline-graphic xlink:href="pone.0042304.e038.jpg"/></inline-formula>-mer frequency (<inline-formula><inline-graphic xlink:href="pone.0042304.e039.jpg"/></inline-formula>), while A5 required only a single run of the pipeline. SOAPdenovo outperforms A5 in scaffold N50 on the <italic>H. volcanii</italic> DS2 dataset, but on the <italic>E. coli</italic> dataset (for which no high quality reference assembly is available) A5 produces a better assembly when measured by scaffold count, mean scaffold size, and max scaffold size. The scaffold N50 of SOAPdenovo on the <italic>E. coli</italic> was higher by about 1%. One possible reason that A5 may produce better results on the transposon catalyzed library is that the insert size using that library preparation protocol often does not fit a normal distribution. Instead the insert size distribution depends greatly on the relative concentrations of transposase and target DNA and can range from a truncated uniform to roughly lognormal depending on the enzyme concentration and what size selection steps are taken during library preparation. Most scaffolding programs to-date model the insert sizes for paired-end reads using a normal distribution with a particular mean and standard deviation. A5 also uses this model, but has been configured to be permissive of scaffolding using libraries with broadly distributed insert sizes. We speculate that another explanation for A5's improved performance on transposon-catalyzed libraries may be that the method is more robust to low coverage regions. Illumina libraries constructed by in-vitro transposition with Tn5 transposase have considerable target site preference (data not shown), leading to highly nonuniform coverage around a genome.</p>
    <p>In all cases where reference data was available A5 produced fewer miscalled bases. This is to be expected, as A5 first performs error correction on reads before assembling them into contigs. Running SOAPdenovo on error corrected reads did reduce base call errors in assembled contigs, however both contig and scaffold assemblies still had more basecall errors than A5's assemblies. A5 also produced assemblies with 50% fewer broken CDS than SOAPdenovo when run on our data. This may have important implications for downstream analysis of gene function, regulation, and metabolism.</p>
    <p>The strategy used for detection of misassmblies demonstrates the utility of paired-end data for improving draft genome assemblies. In addition to identifying misassemblies after scaffolding, paired-reads may also be used to identify repetitive regions. Although we use paired short reads, the methodology is not limited to this type of data. Long reads with split mapping positions could in theory be used in the same manner as the paired short read data.</p>
    <sec id="s3a">
      <title>Limitations and scope</title>
      <p>A limitation to misassembly detection is the underlying assumptions about the structure of misassemblies. The first assumption we make is that the only feature of the misassembly is a false adjacency between two bases. In many cases, however, a misassembly consists of more than a single false adjacency and includes extra inserted sequence. One approach to overcome this would be to employ a model that characterizes the insertion of additional sequence. A related limiting assumption is that coverage within each of the two regions surrounding the misassembly is uniform. This assumption is frequently violated, as sequence coverage is rarely uniform. We also assume that coverage is equal on both sides of the false adjacency. In cases where coverage is not equal between the two regions flanking a misassembly, as may be the case in metagenomes, a spatial clustering algorithm that allows for variable density clusters, such as AMSTLSC <xref rid="pone.0042304-Deng1" ref-type="bibr">[20]</xref>, would more accurately identify blocks. Finally, we assume that all replicons in the target genome are circular. In genomes containing linear chromosomes, a misassembly combining a whole linear chromosome with a position internal to another chromosome would result in a single block on one side of the misassembly. Identifying a misassembly in this case would require additional information. When two chromosomes have been assembled together at their ends (telomeres, for chromosomes with such structures), no such blocks will be found necessitating a different approach to identifying misassemblies.</p>
      <p>In addition to theoretical limitations, A5 also also has practical computational limits. Large datasets, such as a full lane of data generated on the Illumina HiSeq 2000 platform, require resources beyond that typically available in a desktop or laptop computer. The major computational bottlenecks of A5 are the first two stages: read cleaning and contigging. Memory requirements for read error correction grow with total data volume, requirements for contigging grow with data volume and total size/complexity of the assembled genome (since the <italic>de Bruijn</italic> graph is more complex in these cases). The DBSCAN algorithm has <inline-formula><inline-graphic xlink:href="pone.0042304.e040.jpg"/></inline-formula> time-complexity and <inline-formula><inline-graphic xlink:href="pone.0042304.e041.jpg"/></inline-formula> memory-complexity. One approach to reduce the memory complexity of DBSCAN would be to implement a grid-based density clustering algorithm that operates on cell densities rather than individual data points. Such algorithms exist <xref rid="pone.0042304-Wang1" ref-type="bibr">[21]</xref>; however, employing a grid may compromise the resolution at which a misassembly can be identified. Finally, when coverage is high, subsampling the dataset can lower the memory load without sacrificing sensitivity.</p>
      <p>Previous efforts have been made toward identification of misassemblies <xref rid="pone.0042304-Phillippy1" ref-type="bibr">[22]</xref>. Implementations identify locations of putative misassemblies and require further manual inspection to remove these regions. The algorithm we developed for misassembly detection is conceptually similar to algorithms applied for segmental homology detection that operate by âchainingâ homologous fragments into collinear blocks. Chaining algorithms such as FISH <xref rid="pone.0042304-Calabrese1" ref-type="bibr">[23]</xref> and DAGChainer <xref rid="pone.0042304-Haas1" ref-type="bibr">[24]</xref>, are not permissive for this task, as they depend on a collinear arrangement of points. Because fragment lengths vary in size, points of mapped read pairs rarely fit this model of collinearity. The algorithm is also related to structural variant detection algorithms <xref rid="pone.0042304-Chen1" ref-type="bibr">[25]</xref>, <xref rid="pone.0042304-Zeitouni1" ref-type="bibr">[26]</xref>. Structural variant detection begins with mapping reads back to the reference and using read orientation information and mapping distance to identify anomalous pairs. In theory, some of these algorithms could also be employed to detect misassembly.</p>
      <p>Our characterization of the performance of A5 also has limitations. We have only compared A5 to a single other assembler, SOAPdenovo, on a limited number of datasets. We chose this assembler because it is widely used and like A5 can assemble individual libraries without an additional mate pair library. Broad performance comparisons of many assemblers on many datasets is a major undertaking and we hope that A5 can be included in future comparisons like GAGE and the Assemblathon <xref rid="pone.0042304-Earl1" ref-type="bibr">[14]</xref>, <xref rid="pone.0042304-Salzberg1" ref-type="bibr">[15]</xref>.</p>
    </sec>
  </sec>
  <sec id="s4">
    <title>Design and Implementation</title>
    <sec id="s4a">
      <title>A5 pipeline</title>
      <p>The A5 (<bold>A</bold>ndrew <bold>A</bold>nd <bold>A</bold>aron's <bold>A</bold>wesome <bold>A</bold>ssembly) pipeline consists of five stages: 1) read cleaning, 2) contigging, 3) scaffolding, 4) misassembly checking, and 5) rescaffolding. <xref ref-type="fig" rid="pone-0042304-g002">Figure 2</xref> provides an overview of these stages.</p>
      <fig id="pone-0042304-g002" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.1371/journal.pone.0042304.g002</object-id>
        <label>Figure 2</label>
        <caption>
          <title>Overview of the stages in A5.</title>
          <p>The first stage of the A5 pipeline cleans reads, removing any contaminant reads and correcting base-call errors. Then the pipeline assembles contigs with IDBA using these error corrected reads. These contigs are then scaffolded using the original read set. Scaffolds are then checked for misassemblies, and broken at regions containing misassemblies. Finally, the broken scaffolds are rescaffolded using the original read set.</p>
        </caption>
        <graphic xlink:href="pone.0042304.g002"/>
      </fig>
      <sec id="s4a1">
        <title>Stage 1</title>
        <p>For the first stage A5 uses two previously published programs. First, ambiguous and low quality portions of reads are removed from the dataset. Then sequencing errors are corrected in the reads. Both of these steps use tools from from the SGA software package <xref rid="pone.0042304-Simpson1" ref-type="bibr">[27]</xref>. Although many read error correction packages have been published, we found the implementation in SGA to have reasonable compute time and memory requirements compared to others while also providing good accuracy. Next, the pipeline applies Tagdust <xref rid="pone.0042304-Lassmann1" ref-type="bibr">[5]</xref> to remove any sequencing adapter contamination that may be present in the data. The default set of adapter sequences used for screening include the standard Illumina TruSeq adapters and those used in Epicentre Nextera (transposon-catalyzed) library preparation protocols <xref rid="pone.0042304-Adey1" ref-type="bibr">[17]</xref>. User-specified adapter sequences can be screened by adding them to a FastA file.</p>
      </sec>
      <sec id="s4a2">
        <title>Stage 2</title>
        <p>Using the newly cleaned reads derived from stage 1, stage 2 of the A5 pipeline builds contigs with the the assembler IDBA <xref rid="pone.0042304-Peng1" ref-type="bibr">[28]</xref>. We selected IDBA due to its ability to produce long contigs in the presence of inconsistent depth of sequence coverage more robustly than other methods (data not shown). Like many current assembly algorithms, IDBA uses a <italic>de Bruijn</italic> graph-based algorithm to assemble contigs. A <italic>de Bruijn</italic> graph is a directed graph that represents overlap between all <inline-formula><inline-graphic xlink:href="pone.0042304.e042.jpg"/></inline-formula>-mers found in a nucleotide dataset. For a more complete description and comparison to other assembly approaches please see <xref rid="pone.0042304-Pop1" ref-type="bibr">[29]</xref>. Many <italic>de Bruijn</italic>-based assemblers require the user to specify a single <inline-formula><inline-graphic xlink:href="pone.0042304.e043.jpg"/></inline-formula>-mer length, and the optimal choice of <inline-formula><inline-graphic xlink:href="pone.0042304.e044.jpg"/></inline-formula> depends intimately on characteristics of the genome being assembled. Moreover it is possible that for a particular dataset with given read lengths and error profiles, different regions of the same genome may be optimally reconstructed by different values of <inline-formula><inline-graphic xlink:href="pone.0042304.e045.jpg"/></inline-formula>. In contrast, IDBA simply requires a minimum and maximum value of <inline-formula><inline-graphic xlink:href="pone.0042304.e046.jpg"/></inline-formula> to use when processing the <italic>de Bruijn</italic> graph into contigs. This simplifies parameter choice. One final factor entering into the choice of IDBA was its ability to generate highly contiguous sequence even with unpaired sequence reads. Although assemblers using paired-end read information during contigging can often produce exceptional results <xref rid="pone.0042304-Gnerre1" ref-type="bibr">[16]</xref>, <xref rid="pone.0042304-Imelfort1" ref-type="bibr">[30]</xref>, we did not want to impose the requirement of paired reads (or multiple libraries with different insert sizes) upon users of the pipeline. This keeps applicability of A5 as broad as possible.</p>
      </sec>
      <sec id="s4a3">
        <title>Stage 3</title>
        <p>In stage 3 of A5, contigs are scaffolded and extended using the software SSPACE <xref rid="pone.0042304-Boetzer1" ref-type="bibr">[9]</xref>.</p>
      </sec>
      <sec id="s4a4">
        <title>Stage 4</title>
        <p>In stage 4 of A5, crude scaffolds are subjected to a quality control check for misassemblies. An undesirable side-effect of using a contigging algorithm that is unaware of read pairing information is that misassemblies can occur in contigs that could have been avoided if the longer-range linkage information present in read pairs (or long reads) had been used. As described in <xref ref-type="sec" rid="s2">Results</xref> below, we observe occasional misassemblies in the contigs generated by IDBA. Although the version of IDBA currently incorporated into A5 (v0.20) has an option to use pairing information, it has little effect on the assembly (data not shown). Cleaned reads are mapped back to crude scaffolds using the read mapping software, BWA <xref rid="pone.0042304-Kelley1" ref-type="bibr">[3]</xref>. Custom code (described in detail below in section 0) is then used to extract all read pairs that are discordant with the crude scaffold assembly and two-dimensional spatial clustering <xref rid="pone.0042304-Ester1" ref-type="bibr">[32]</xref> is used to identify clusters of discordant read pairs that are suggestive of a misassembly. The A5 pipeline then breaks the crude scaffolds at the estimated position of the misassembly.</p>
      </sec>
      <sec id="s4a5">
        <title>Stage 5</title>
        <p>Finally, in stage 5 the broken-up scaffolds are rescaffolded using SSPACE <xref rid="pone.0042304-Boetzer1" ref-type="bibr">[9]</xref>.</p>
      </sec>
    </sec>
    <sec id="s4b">
      <title>Automated parameter selection</title>
      <p>Most currently available assembly programs have a wide variety of parameters which must be specified by the user, and some of these can have a profound impact on the quality of the resulting assembly. The software employed within A5 is no exception. Often these parameters require dataset-specific tuning. A common approach employed by the hapless bioinformatician involves repeatedly executing the assembly software and evaluating the results until a perceived optimum has been achieved (or a pressing deadline looms). Scripts for automating this iterative tuning procedure have been developed <xref rid="pone.0042304-Seemann1" ref-type="bibr">[33]</xref>, however, it is not always feasible, depending on available compute resources and the size of the dataset. The A5 pipeline avoids the problem for users by calculating reasonable parameters for each stage of the pipeline using values derived from the data itself. In some cases, default parameters have been set to data-independent values. Supplementary <xref ref-type="supplementary-material" rid="pone.0042304.s001">Text S1</xref> summarizes the many parameters in the pipeline and <xref ref-type="supplementary-material" rid="pone.0042304.s002">Table S1</xref> describes how they are set.</p>
    </sec>
    <sec id="s4c">
      <title>Automated misassembly quality control</title>
      <p>After crude scaffolds have been built, A5 performs an automated quality control step.</p>
      <p>As exemplified in <xref ref-type="fig" rid="pone-0042304-g003">Figure 3</xref>, reads are first mapped to scaffolds, and then read pairs are spatially clustered on the points where they map. After mapping, read pairs that support the current assembly architecture, which we refer to as <italic>proper connections</italic>, must be removed before spatial clustering. Without their removal, <italic>proper connections</italic> among read pairs would form large spatial clusters. Including these data in the clustering input would not only waste considerable computational resources but may also obscure or subsume clusters caused by local misassemblies in scaffolds.</p>
      <fig id="pone-0042304-g003" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.1371/journal.pone.0042304.g003</object-id>
        <label>Figure 3</label>
        <caption>
          <title>Demonstration of the automated misassembly quality control process.</title>
          <p><bold>Upper Left:</bold> A hypothetical whole genome alignment of an assembly containing misassemblies relative to the true genome, consisting of three circular chromosomes, and the resulting broken assembly. Red, green, and blue lines connect aligned regions. Black connecting lines represent real paired read connections between contigs and orange connecting lines represent erroneous connections. Black boxes in the broken assembly highlight blocks identified by the DBSCAN algorithm. <bold>Upper Right and Bottom Row:</bold> Plots of connected points between contigs. Black and orange dots correspond to black and orange connections lines from left figure, respectively. Dotted lines correspond to misassembly breakpoints. Gray circles highlight the set of points that are clustered by DBSCAN.</p>
        </caption>
        <graphic xlink:href="pone.0042304.g003"/>
      </fig>
      <p>Proper connections can be identified using the DNA fragment length (insert size) distribution of the library. However, two common features of Illumina datasets can skew the mean and inflate the variance estimates of the insert size distribution. The first of these features is referred to as a <italic>shadow</italic> library. Briefly, a shadow library is a population of small-insert (<inline-formula><inline-graphic xlink:href="pone.0042304.e047.jpg"/></inline-formula>600 nt) paired end reads that are a product of imperfect construction of large-insert mate-pair libraries using the standard Illumina protocol. The Illumina mate-pair protocol involves circularization of fragments, further subfragmentation of the circular molecules, and purification of the linear subfragments containing the circularization junction. The purification of subfragments containing circularization junctions (from which the large-insert mate-pair reads derive) often fails to remove all DNA fragments lacking a circularization junction, those fragments yield the small insert read pairs termed a <italic>shadow</italic> library. The second feature that can interfere with insert size distribution calculations is inherent noise in the dataset. Such noise can be caused by chimeric fragments and ambiguous read mapping due to repetitive regions or highly erroneous reads.</p>
    </sec>
    <sec id="s4d">
      <title>Accurate estimates of insert size distributions</title>
      <p>To avoid including noise in mean and variance estimates from shadow libraries and other error sources, we perform a round of Expectation-Maximization (EM) clustering of insert sizes before calculating sample statistics <xref rid="pone.0042304-Gupta1" ref-type="bibr">[34]</xref>. Choice of the number of clusters <inline-formula><inline-graphic xlink:href="pone.0042304.e048.jpg"/></inline-formula> in the EM-clustering algorithm is derived from a preliminary estimation of the library insert size using the method implemented in BWA <xref rid="pone.0042304-Li2" ref-type="bibr">[31]</xref>. Libraries with a preliminary insert size estimate greater than 1000 bp are assumed to have been constructed using a mate-pair protocol, and therefore may contain a paired-end short insert shadow library in addition to the large insert mate-pair library. To separate the short insert library from the large insert library, <inline-formula><inline-graphic xlink:href="pone.0042304.e049.jpg"/></inline-formula> is set to 3: one cluster for improper connections, one cluster for the short insert shadow library, and one for the desired large insert library. If the preliminary insert size estimation is less than 1000 bp, the library is assumed to have been constructed using a paired-end protocol, and <inline-formula><inline-graphic xlink:href="pone.0042304.e050.jpg"/></inline-formula> is set to 2: one for improper connections and one for the short-insert library. Clusters returned from EM-clustering are identified as containing improper connections if they have high variance, defined as <inline-formula><inline-graphic xlink:href="pone.0042304.e051.jpg"/></inline-formula>, and proper connections if they have low variance (<inline-formula><inline-graphic xlink:href="pone.0042304.e052.jpg"/></inline-formula>), where <inline-formula><inline-graphic xlink:href="pone.0042304.e053.jpg"/></inline-formula> is the mean insert of pairs within the cluster, and <inline-formula><inline-graphic xlink:href="pone.0042304.e054.jpg"/></inline-formula> is the standard deviation. In practice, the <inline-formula><inline-graphic xlink:href="pone.0042304.e055.jpg"/></inline-formula>th lowest-variance clusters are identified as proper connections. Each low-variance cluster is then used to remove mapped read pairs having inserts in the range <inline-formula><inline-graphic xlink:href="pone.0042304.e056.jpg"/></inline-formula>, where <inline-formula><inline-graphic xlink:href="pone.0042304.e057.jpg"/></inline-formula>. The remaining read pairs represent improper connections and may contain clusters suggestive of misassembly.</p>
      <p>After proper connections have been removed, misassemblies are identified by locating clusters of many read pairs mapped within a scaffold or between two scaffolds. We treat the mapped read pairs as <italic>points</italic> in two-dimensional spaces defined by each possible scaffold pair and self-pair. When the outer boundaries of a cluster of points is projected back onto the one dimensional sequence(s), we call the resulting intervals <italic>blocks</italic>. These blocks define regions of misassembly.</p>
      <p>To identify blocks, we use the spatial clustering algorithm DBSCAN to cluster points in each of these 2-dimensional spaces <xref rid="pone.0042304-Ester1" ref-type="bibr">[32]</xref>. The two key parameters of DBSCAN are <inline-formula><inline-graphic xlink:href="pone.0042304.e058.jpg"/></inline-formula>, the maximum allowed distance between two points in a cluster and <inline-formula><inline-graphic xlink:href="pone.0042304.e059.jpg"/></inline-formula>, the minimum number of points allowed in a cluster. The first parameter is used to locate the neighboring points of each point, where a point <inline-formula><inline-graphic xlink:href="pone.0042304.e060.jpg"/></inline-formula> is considered a neighbor of point <inline-formula><inline-graphic xlink:href="pone.0042304.e061.jpg"/></inline-formula> if <inline-formula><inline-graphic xlink:href="pone.0042304.e062.jpg"/></inline-formula>. We set <inline-formula><inline-graphic xlink:href="pone.0042304.e063.jpg"/></inline-formula> by modelling read mapping positions as a Bernoulli process. The probability of success <inline-formula><inline-graphic xlink:href="pone.0042304.e064.jpg"/></inline-formula> in the Bernoulli process is set by calculating a minimum read mapping frequency across the genome assembly. This is done by partitioning the assembly into windows of length <inline-formula><inline-graphic xlink:href="pone.0042304.e065.jpg"/></inline-formula>, where <inline-formula><inline-graphic xlink:href="pone.0042304.e066.jpg"/></inline-formula> for a library with mean insert <inline-formula><inline-graphic xlink:href="pone.0042304.e067.jpg"/></inline-formula>. Let <inline-formula><inline-graphic xlink:href="pone.0042304.e068.jpg"/></inline-formula> be the <inline-formula><inline-graphic xlink:href="pone.0042304.e069.jpg"/></inline-formula>th window and <inline-formula><inline-graphic xlink:href="pone.0042304.e070.jpg"/></inline-formula> be the number of reads that map to <inline-formula><inline-graphic xlink:href="pone.0042304.e071.jpg"/></inline-formula>. We then set <inline-formula><inline-graphic xlink:href="pone.0042304.e072.jpg"/></inline-formula> according to the following equation<disp-formula id="pone.0042304.e073"><graphic xlink:href="pone.0042304.e073.jpg" position="anchor" orientation="portrait"/><label>(1)</label></disp-formula>The rationale for using the portion of the crude scaffold assembly with the fewest mapped reads is that in practice, sequencing coverage is often highly variable, with some regions receiving excessive coverage and others receiving little. This variation in coverage can be caused by systematic biases in the library construction and sequencing procedures, including fragmentation bias, PCR bias, and uneven representation of genomic DNA after DNA extraction. By estimating this parameter on a region of low coverage, we ensure sensitivity to detect misassemblies in low-coverage regions.</p>
      <p>Assuming the positions of mapped reads follow a Bernoulli process, the distance between two independent reads in a sequence follows a geometric distribution with parameter <inline-formula><inline-graphic xlink:href="pone.0042304.e074.jpg"/></inline-formula>. We derive a maximum allowable distance, <inline-formula><inline-graphic xlink:href="pone.0042304.e075.jpg"/></inline-formula>, between two points (mapped reads) in one sequence by selecting the <inline-formula><inline-graphic xlink:href="pone.0042304.e076.jpg"/></inline-formula> quantile of a geometric distribution with parameter <inline-formula><inline-graphic xlink:href="pone.0042304.e077.jpg"/></inline-formula>. This is done by setting the cumulative distribution function, <inline-formula><inline-graphic xlink:href="pone.0042304.e078.jpg"/></inline-formula>, equal to <inline-formula><inline-graphic xlink:href="pone.0042304.e079.jpg"/></inline-formula> and solving for <inline-formula><inline-graphic xlink:href="pone.0042304.e080.jpg"/></inline-formula>:<disp-formula id="pone.0042304.e081"><graphic xlink:href="pone.0042304.e081.jpg" position="anchor" orientation="portrait"/></disp-formula>
<disp-formula id="pone.0042304.e082"><graphic xlink:href="pone.0042304.e082.jpg" position="anchor" orientation="portrait"/></disp-formula>
<disp-formula id="pone.0042304.e083"><graphic xlink:href="pone.0042304.e083.jpg" position="anchor" orientation="portrait"/></disp-formula>
<disp-formula id="pone.0042304.e084"><graphic xlink:href="pone.0042304.e084.jpg" position="anchor" orientation="portrait"/><label>(2)</label></disp-formula>for some <inline-formula><inline-graphic xlink:href="pone.0042304.e085.jpg"/></inline-formula>. In practice we set <inline-formula><inline-graphic xlink:href="pone.0042304.e086.jpg"/></inline-formula>, to select the 99.9<inline-formula><inline-graphic xlink:href="pone.0042304.e087.jpg"/></inline-formula> quantile. Furthermore, we assume overlapping reads belong to the same block, and set <inline-formula><inline-graphic xlink:href="pone.0042304.e088.jpg"/></inline-formula> where <inline-formula><inline-graphic xlink:href="pone.0042304.e089.jpg"/></inline-formula> is the read length. The second parameter of the DBSCAN algorithm, <inline-formula><inline-graphic xlink:href="pone.0042304.e090.jpg"/></inline-formula>, is set to be the expected number of points in the minimum allowed block length in a region of minimal coverage. Assuming a block will consist of 3 points at minimum and allowing a maximum distance between consecutive points to be <inline-formula><inline-graphic xlink:href="pone.0042304.e091.jpg"/></inline-formula>, we allow the minimum block length to be <inline-formula><inline-graphic xlink:href="pone.0042304.e092.jpg"/></inline-formula>. We then calculate the expected number of points in a window of length <inline-formula><inline-graphic xlink:href="pone.0042304.e093.jpg"/></inline-formula> given that the probability of a read mapping to a single position is <inline-formula><inline-graphic xlink:href="pone.0042304.e094.jpg"/></inline-formula>, setting <inline-formula><inline-graphic xlink:href="pone.0042304.e095.jpg"/></inline-formula>.</p>
      <p>Finally, regions of length <inline-formula><inline-graphic xlink:href="pone.0042304.e096.jpg"/></inline-formula> within individual scaffolds that are flanked by two blocks are identified as containing misassemblies and are removed from the assembly, breaking the scaffold into two subscaffolds. The removed region contains the misassembly breakpoint, but the exact position of the misassembly may not be well-defined in many cases, either due to lack of coverage by reads spanning that position or due to errors in the assembled sequence.</p>
    </sec>
    <sec id="s4e">
      <title>Availability</title>
      <p>Software for Linux and Mac OS X, along with source code is freely available from <ext-link ext-link-type="uri" xlink:href="http://code.google.com/p/ngopt/">http://code.google.com/p/ngopt/</ext-link> The source code has been licensed under the GNU Public License (GPL) v3.0.</p>
    </sec>
  </sec>
  <sec sec-type="supplementary-material" id="s5">
    <title>Supporting Information</title>
    <supplementary-material content-type="local-data" id="pone.0042304.s001">
      <label>Text S1</label>
      <caption>
        <p><bold>Description internal assembly pipeline parameters.</bold> The A5 pipeline incorporates many algorithms, each of which require certain parameters to be set. Each of these parameters is described in detail here.</p>
        <p>(PDF)</p>
      </caption>
      <media xlink:href="pone.0042304.s001.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pone.0042304.s002">
      <label>Table S1</label>
      <caption>
        <p><bold>Automatically set parameters.</bold> Assembly parameters within the a5 pipeline and how their values are chosen. <inline-formula><inline-graphic xlink:href="pone.0042304.e097.jpg"/></inline-formula> is the maximum inter-point distance used for spatial clustering and <inline-formula><inline-graphic xlink:href="pone.0042304.e098.jpg"/></inline-formula> is the minimum number of points in a cluster.</p>
        <p>(PDF)</p>
      </caption>
      <media xlink:href="pone.0042304.s002.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pone.0042304.s003">
      <label>Table S2</label>
      <caption>
        <p><bold>Assembly metrics for SOAPdenovo running on error corrected reads from </bold><bold><italic>H. volcanii</italic></bold><bold> DS2.</bold> Reference-based assembly metrics for SOAPdenovo assemblies of <italic>H. volcanii</italic> DS2 (<bold>Volc</bold>) reads cleaned by stage 1 of the A5 pipeline. âscafâ indicates an assembly that has been scaffolded, while âctgâ indicates no scaffolding. Labels â-CDSâ, â-N50â, and â-LCBâ indicate SOAPdenovo assemblies run with parameter combinations that minimized broken coding sequences, maximized scaffold N50, and minimized LCB (Locally Collinear Block) count, respectively. SOAPdenovo with <inline-formula><inline-graphic xlink:href="pone.0042304.e099.jpg"/></inline-formula> produced the best assemblies for -CDS, -N50, while <inline-formula><inline-graphic xlink:href="pone.0042304.e100.jpg"/></inline-formula> was optimal for -LCB. Contig statistics are on the contigs matching the optimal scaffold assemblies.</p>
        <p>(PDF)</p>
      </caption>
      <media xlink:href="pone.0042304.s003.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack>
    <p>We thank Vadim Mozhayskiy for beta testing a version of the A5 software.</p>
  </ack>
  <ref-list>
    <title>References</title>
    <ref id="pone.0042304-Kao1">
      <label>1</label>
      <mixed-citation publication-type="journal"><name><surname>Kao</surname><given-names>WC</given-names></name>, <name><surname>Stevens</surname><given-names>K</given-names></name>, <name><surname>Song</surname><given-names>YS</given-names></name> (<year>2009</year>) <article-title>Bayescall: A model-based basecalling algorithm for high-throughput short-read sequencing</article-title>. <source>Genome Research</source>
<volume>19</volume>: <fpage>1884</fpage>â<lpage>1895</lpage>.<pub-id pub-id-type="pmid">19661376</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0042304-Kircher1">
      <label>2</label>
      <mixed-citation publication-type="journal"><name><surname>Kircher</surname><given-names>M</given-names></name>, <name><surname>Stenzel</surname><given-names>U</given-names></name>, <name><surname>Kelso</surname><given-names>J</given-names></name> (<year>2009</year>) <article-title>Improved base calling for the illumina genome analyzer using machine learning strategies</article-title>. <source>Genome Biology</source>
<volume>10</volume>: <fpage>R83</fpage>.<pub-id pub-id-type="pmid">19682367</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0042304-Kelley1">
      <label>3</label>
      <mixed-citation publication-type="journal"><name><surname>Kelley</surname><given-names>D</given-names></name>, <name><surname>Schatz</surname><given-names>M</given-names></name>, <name><surname>Salzberg</surname><given-names>S</given-names></name> (<year>2010</year>) <article-title>Quake: quality-aware detection and correction of sequencing errors</article-title>. <source>Genome Biology</source>
<volume>11</volume>: <fpage>R116</fpage>.<pub-id pub-id-type="pmid">21114842</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0042304-Kao2">
      <label>4</label>
      <mixed-citation publication-type="journal"><name><surname>Kao</surname><given-names>WC</given-names></name>, <name><surname>Chan</surname><given-names>AH</given-names></name>, <name><surname>Song</surname><given-names>YS</given-names></name> (<year>2011</year>) <article-title>Echo: A reference-free short-read error correction algorithm</article-title>. <source>Genome Research</source>
<volume>21</volume>: <fpage>1181</fpage>â<lpage>1192</lpage>.<pub-id pub-id-type="pmid">21482625</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0042304-Lassmann1">
      <label>5</label>
      <mixed-citation publication-type="journal"><name><surname>Lassmann</surname><given-names>T</given-names></name>, <name><surname>Hayashizaki</surname><given-names>Y</given-names></name>, <name><surname>Daub</surname><given-names>CO</given-names></name> (<year>2009</year>) <article-title>Tagdusta program to eliminate artifacts from next generation sequencing data</article-title>. <source>Bioinformatics</source>
<volume>25</volume>: <fpage>2839</fpage>â<lpage>2840</lpage>.<pub-id pub-id-type="pmid">19737799</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0042304-Warren1">
      <label>6</label>
      <mixed-citation publication-type="journal"><name><surname>Warren</surname><given-names>RL</given-names></name>, <name><surname>Sutton</surname><given-names>GG</given-names></name>, <name><surname>Jones</surname><given-names>SJM</given-names></name>, <name><surname>Holt</surname><given-names>RA</given-names></name> (<year>2007</year>) <article-title>Assembling millions of short dna sequences using ssake</article-title>. <source>Bioinformatics</source>
<volume>23</volume>: <fpage>500</fpage>â<lpage>501</lpage>.<pub-id pub-id-type="pmid">17158514</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0042304-Chaisson1">
      <label>7</label>
      <mixed-citation publication-type="journal"><name><surname>Chaisson</surname><given-names>MJ</given-names></name>, <name><surname>Pevzner</surname><given-names>PA</given-names></name> (<year>2008</year>) <article-title>Short read fragment assembly of bacterial genomes</article-title>. <source>Genome Research</source>
<volume>18</volume>: <fpage>324</fpage>â<lpage>330</lpage>.<pub-id pub-id-type="pmid">18083777</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0042304-Koren1">
      <label>8</label>
      <mixed-citation publication-type="journal"><name><surname>Koren</surname><given-names>S</given-names></name>, <name><surname>Treangen</surname><given-names>TJ</given-names></name>, <name><surname>Pop</surname><given-names>M</given-names></name> (<year>2011</year>) <article-title>Bambus 2: Scaffolding metagenomes</article-title>. <source>Bioinformatics</source>
</mixed-citation>
    </ref>
    <ref id="pone.0042304-Boetzer1">
      <label>9</label>
      <mixed-citation publication-type="journal"><name><surname>Boetzer</surname><given-names>M</given-names></name>, <name><surname>Henkel</surname><given-names>CV</given-names></name>, <name><surname>Jansen</surname><given-names>HJ</given-names></name>, <name><surname>Butler</surname><given-names>D</given-names></name>, <name><surname>Pirovano</surname><given-names>W</given-names></name> (<year>2011</year>) <article-title>Scaffolding pre-assembled contigs using SSPACE</article-title>. <source>Bioinformatics</source>
<volume>27</volume>: <fpage>578</fpage>â<lpage>579</lpage>.<pub-id pub-id-type="pmid">21149342</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0042304-Dayarian1">
      <label>10</label>
      <mixed-citation publication-type="journal"><name><surname>Dayarian</surname><given-names>A</given-names></name>, <name><surname>Michael</surname><given-names>T</given-names></name>, <name><surname>Sengupta</surname><given-names>A</given-names></name> (<year>2010</year>) <article-title>Sopra: Scaffolding algorithm for paired reads via statistical optimization</article-title>. <source>BMC Bioinformatics</source>
<volume>11</volume>: <fpage>345</fpage>.<pub-id pub-id-type="pmid">20576136</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0042304-Hartman1">
      <label>11</label>
      <mixed-citation publication-type="journal"><name><surname>Hartman</surname><given-names>AL</given-names></name>, <name><surname>Norais</surname><given-names>C</given-names></name>, <name><surname>Badger</surname><given-names>JH</given-names></name>, <name><surname>Delmas</surname><given-names>S</given-names></name>, <name><surname>Haldenby</surname><given-names>S</given-names></name>, <etal>et al</etal> (<year>2010</year>) <article-title>The Complete Genome Sequence of <italic>Haloferax volcanii</italic> DS2, a Model Archaeon</article-title>. <source>PLoS ONE</source>
<volume>5</volume>: <fpage>e9605</fpage>.<pub-id pub-id-type="pmid">20333302</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0042304-Li1">
      <label>12</label>
      <mixed-citation publication-type="journal"><name><surname>Li</surname><given-names>R</given-names></name>, <name><surname>Zhu</surname><given-names>H</given-names></name>, <name><surname>Ruan</surname><given-names>J</given-names></name>, <name><surname>Qian</surname><given-names>W</given-names></name>, <name><surname>Fang</surname><given-names>X</given-names></name>, <etal>et al</etal> (<year>2010</year>) <article-title>De novo assembly of human genomes with massively parallel short read sequencing</article-title>. <source>Genome Research</source>
<volume>20</volume>: <fpage>265</fpage>â<lpage>272</lpage>.<pub-id pub-id-type="pmid">20019144</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0042304-Darling1">
      <label>13</label>
      <mixed-citation publication-type="journal"><name><surname>Darling</surname><given-names>A</given-names></name>, <name><surname>Tritt</surname><given-names>A</given-names></name>, <name><surname>Eisen</surname><given-names>JA</given-names></name>, <name><surname>Facciotti</surname><given-names>MT</given-names></name> (<year>2011</year>) <article-title>Mauve assembly metrics</article-title>. <source>Bioinformatics</source>
<volume>27</volume>: <fpage>2756</fpage>â<lpage>2757</lpage>.<pub-id pub-id-type="pmid">21810901</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0042304-Earl1">
      <label>14</label>
      <mixed-citation publication-type="journal"><name><surname>Earl</surname><given-names>DA</given-names></name>, <name><surname>Bradnam</surname><given-names>K</given-names></name>, <name><surname>St John</surname><given-names>J</given-names></name>, <name><surname>Darling</surname><given-names>A</given-names></name>, <name><surname>Lin</surname><given-names>D</given-names></name>, <etal>et al</etal> (<year>2011</year>) <article-title>Assemblathon 1: A competitive assessment of de novo short read assembly methods</article-title>. <source>Genome Research</source>
<volume>21</volume>: <fpage>2224</fpage>â<lpage>2241</lpage>.<pub-id pub-id-type="pmid">21926179</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0042304-Salzberg1">
      <label>15</label>
      <mixed-citation publication-type="journal"><name><surname>Salzberg</surname><given-names>SL</given-names></name>, <name><surname>Phillippy</surname><given-names>AM</given-names></name>, <name><surname>Zimin</surname><given-names>A</given-names></name>, <name><surname>Puiu</surname><given-names>D</given-names></name>, <name><surname>Magoc</surname><given-names>T</given-names></name>, <etal>et al</etal> (<year>2012</year>) <article-title>GAGE: a critical evaluation of genome assemblies and assembly algorithms</article-title>. <source>Genome Research</source>
<volume>22</volume>: <fpage>557</fpage>â<lpage>567</lpage>.<pub-id pub-id-type="pmid">22147368</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0042304-Gnerre1">
      <label>16</label>
      <mixed-citation publication-type="journal"><name><surname>Gnerre</surname><given-names>S</given-names></name>, <name><surname>MacCallum</surname><given-names>I</given-names></name>, <name><surname>Przybylski</surname><given-names>D</given-names></name>, <name><surname>Ribeiro</surname><given-names>FJ</given-names></name>, <name><surname>Burton</surname><given-names>JN</given-names></name>, <etal>et al</etal> (<year>2011</year>) <article-title>High-quality draft assemblies of mammalian genomes from massively parallel sequence data</article-title>. <source>Proceedings of the National Academy of Sciences</source>
<volume>108</volume>: <fpage>1513</fpage>â<lpage>1518</lpage>.</mixed-citation>
    </ref>
    <ref id="pone.0042304-Adey1">
      <label>17</label>
      <mixed-citation publication-type="journal"><name><surname>Adey</surname><given-names>A</given-names></name>, <name><surname>Morrison</surname><given-names>H</given-names></name>, <name><surname>Asan, Xun</surname><given-names>X</given-names></name>, <name><surname>Kitzman</surname><given-names>J</given-names></name>, <etal>et al</etal> (<year>2010</year>) <article-title>Rapid, low-input, low-bias construction of shotgun fragment libraries by high-density in vitro transposition</article-title>. <source>Genome Biology</source>
<volume>11</volume>: <fpage>R119</fpage>.<pub-id pub-id-type="pmid">21143862</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0042304-Perna1">
      <label>18</label>
      <mixed-citation publication-type="journal"><name><surname>Perna</surname><given-names>NT</given-names></name>, <name><surname>Plunkett</surname><given-names>G</given-names></name>, <name><surname>Burland</surname><given-names>V</given-names></name>, <name><surname>Mau</surname><given-names>B</given-names></name>, <name><surname>Glasner</surname><given-names>JD</given-names></name>, <etal>et al</etal> (<year>2001</year>) <article-title>Genome sequence of entero-haemorrhagic escherichia coli o157:h7</article-title>. <source>Nature</source>
<volume>409</volume>: <fpage>529</fpage>â<lpage>533</lpage>.<pub-id pub-id-type="pmid">11206551</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0042304-Darling2">
      <label>19</label>
      <mixed-citation publication-type="journal"><name><surname>Darling</surname><given-names>ACE</given-names></name>, <name><surname>Mau</surname><given-names>B</given-names></name>, <name><surname>Blattner</surname><given-names>FR</given-names></name>, <name><surname>Perna</surname><given-names>NT</given-names></name> (<year>2004</year>) <article-title>Mauve: multiple alignment of conserved genomic sequence with rearrangements</article-title>. <source>Genome Res</source>
<volume>14</volume>: <fpage>1394</fpage>â<lpage>403</lpage>.<pub-id pub-id-type="pmid">15231754</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0042304-Deng1">
      <label>20</label>
      <mixed-citation publication-type="book">Deng M, Liu Q, Li G, Cheng T (2009) An adaptive spatial clustering algorithm based on the minimum spanning tree-like. In: Liu Y, Tang X, editors, International Symposium on Spatial Analysis, Spatial-Temporal Data Modeling, and Data Mining. SPIE, volume 7492, pp. 74921Z1â74921Z9.</mixed-citation>
    </ref>
    <ref id="pone.0042304-Wang1">
      <label>21</label>
      <mixed-citation publication-type="book">Wang W, Yang J, Muntz RR (1997) Sting: A statistical information grid approach to spatial data mining. In: Jarke M, Carey MJ, Dittrich KR, Lochovsky FH, Loucopoulos P, <etal>et al</etal>., editors, Twenty-Third International Conference on Very Large Data Bases. Athens, Greece: Morgan Kaufmann, pp. 186â195.</mixed-citation>
    </ref>
    <ref id="pone.0042304-Phillippy1">
      <label>22</label>
      <mixed-citation publication-type="journal"><name><surname>Phillippy</surname><given-names>A</given-names></name>, <name><surname>Schatz</surname><given-names>M</given-names></name>, <name><surname>Pop</surname><given-names>M</given-names></name> (<year>2008</year>) <article-title>Genome assembly forensics: finding the elusive mis-assembly</article-title>. <source>Genome Biology</source>
<volume>9</volume>: <fpage>R55</fpage>.<pub-id pub-id-type="pmid">18341692</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0042304-Calabrese1">
      <label>23</label>
      <mixed-citation publication-type="journal"><name><surname>Calabrese</surname><given-names>PP</given-names></name>, <name><surname>Chakravarty</surname><given-names>S</given-names></name>, <name><surname>Vision</surname><given-names>TJ</given-names></name> (<year>2003</year>) <article-title>Fast identification and statistical evaluation of segmental homologies in comparative maps</article-title>. <source>Bioinformatics</source>
<volume>19</volume>: <fpage>i74</fpage>â<lpage>i80</lpage>.<pub-id pub-id-type="pmid">12855440</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0042304-Haas1">
      <label>24</label>
      <mixed-citation publication-type="journal"><name><surname>Haas</surname><given-names>BJ</given-names></name>, <name><surname>Delcher</surname><given-names>AL</given-names></name>, <name><surname>Wortman</surname><given-names>JR</given-names></name>, <name><surname>Salzberg</surname><given-names>SL</given-names></name> (<year>2004</year>) <article-title>Dagchainer: a tool for mining segmental genome duplications and synteny</article-title>. <source>Bioinformatics</source>
<volume>20</volume>: <fpage>3643</fpage>â<lpage>3646</lpage>.<pub-id pub-id-type="pmid">15247098</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0042304-Chen1">
      <label>25</label>
      <mixed-citation publication-type="journal"><name><surname>Chen</surname><given-names>K</given-names></name>, <name><surname>Wallis</surname><given-names>JW</given-names></name>, <name><surname>McLellan</surname><given-names>MD</given-names></name>, <name><surname>Larson</surname><given-names>DE</given-names></name>, <name><surname>Kalicki</surname><given-names>JM</given-names></name>, <etal>et al</etal> (<year>2009</year>) <article-title>Breakdancer: an algorithm for high-resolution mapping of genomic structural variation</article-title>. <source>Nat Meth</source>
<volume>6</volume>: <fpage>677</fpage>â<lpage>681</lpage>.</mixed-citation>
    </ref>
    <ref id="pone.0042304-Zeitouni1">
      <label>26</label>
      <mixed-citation publication-type="journal"><name><surname>Zeitouni</surname><given-names>B</given-names></name>, <name><surname>Boeva</surname><given-names>V</given-names></name>, <name><surname>Janoueix-Lerosey</surname><given-names>I</given-names></name>, <name><surname>Loeillet</surname><given-names>S</given-names></name>, <name><surname>Legoix-n</surname><given-names>P</given-names></name>, <etal>et al</etal> (<year>2010</year>) <article-title>Svdetect: a tool to identify genomic structural variations from paired-end and mate-pair sequencing data</article-title>. <source>Bioinfor-matics</source>
<volume>26</volume>: <fpage>1895</fpage>â<lpage>1896</lpage>.</mixed-citation>
    </ref>
    <ref id="pone.0042304-Simpson1">
      <label>27</label>
      <mixed-citation publication-type="journal"><name><surname>Simpson</surname><given-names>JT</given-names></name>, <name><surname>Durbin</surname><given-names>R</given-names></name> (<year>2010</year>) <article-title>Effcient construction of an assembly string graph using the fm-index</article-title>. <source>Bioinformatics</source>
<volume>26</volume>: <fpage>i367</fpage>â<lpage>i373</lpage>.<pub-id pub-id-type="pmid">20529929</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0042304-Peng1">
      <label>28</label>
      <mixed-citation publication-type="journal"><name><surname>Peng</surname><given-names>Y</given-names></name>, <name><surname>Leung</surname><given-names>H</given-names></name>, <name><surname>Yiu</surname><given-names>SM</given-names></name>, <name><surname>Chin</surname><given-names>FYL</given-names></name> (<year>2010</year>) <article-title>Idba - a practical iterative de bruijn graph de novo assembler</article-title>. <source>Computer</source>
<volume>6044</volume>: <fpage>426</fpage>â<lpage>440</lpage>.</mixed-citation>
    </ref>
    <ref id="pone.0042304-Pop1">
      <label>29</label>
      <mixed-citation publication-type="journal"><name><surname>Pop</surname><given-names>M</given-names></name> (<year>2009</year>) <article-title>Genome assembly reborn: recent computational challenges</article-title>. <source>Briefings in Bioinfor-matics</source>
<volume>10</volume>: <fpage>354</fpage>â<lpage>366</lpage>.</mixed-citation>
    </ref>
    <ref id="pone.0042304-Imelfort1">
      <label>30</label>
      <mixed-citation publication-type="other">Imelfort M (2011) SaSSY, unpublished software. Available at GitHub: <ext-link ext-link-type="uri" xlink:href="https://github.com/minillinim/SaSSY">https://github.com/minillinim/SaSSY</ext-link>. Accessed 2012 Aug 05.</mixed-citation>
    </ref>
    <ref id="pone.0042304-Li2">
      <label>31</label>
      <mixed-citation publication-type="journal"><name><surname>Li</surname><given-names>H</given-names></name>, <name><surname>Durbin</surname><given-names>R</given-names></name> (<year>2009</year>) <article-title>Fast and accurate short read alignment with BurrowsWheeler transform</article-title>. <source>Bioinformatics</source>
<volume>25</volume>: <fpage>1754</fpage>â<lpage>1760</lpage>.<pub-id pub-id-type="pmid">19451168</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0042304-Ester1">
      <label>32</label>
      <mixed-citation publication-type="journal"><name><surname>Ester</surname><given-names>M</given-names></name>, <name><surname>Kriegel</surname><given-names>HP</given-names></name>, <name><surname>Sander</surname><given-names>J</given-names></name>, <name><surname>Xu</surname><given-names>X</given-names></name> (<year>1996</year>) <article-title>A density-based algorithm for discovering clusters in large spatial databases with noise</article-title>. <source>Computer</source>
<volume>96</volume>: <fpage>226231</fpage>.</mixed-citation>
    </ref>
    <ref id="pone.0042304-Seemann1">
      <label>33</label>
      <mixed-citation publication-type="other">Seemann T, Gladman S (2011) VelvetOptimiser, unpublished software. Available at Victorian Bioinformatics Consortium website: <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.net.au/software.velvetoptimiser.shtml">http://bioinformatics.net.au/software.velvetoptimiser.shtml</ext-link>. Accessed 2012 Aug 05.</mixed-citation>
    </ref>
    <ref id="pone.0042304-Gupta1">
      <label>34</label>
      <mixed-citation publication-type="journal"><name><surname>Gupta</surname><given-names>MR</given-names></name>, <name><surname>Chen</surname><given-names>Y</given-names></name> (<year>2010</year>) <article-title>Theory and use of the em algorithm</article-title>. <source>Foundations and Trends in Signal Processing</source>
<volume>4</volume>: <fpage>223</fpage>â<lpage>296</lpage>.</mixed-citation>
    </ref>
    <ref id="pone.0042304-Bergeron1">
      <label>35</label>
      <mixed-citation publication-type="book">Bergeron A, Mixtacki J, Stoye J (2006) A Unifying View of Genome Rearrangements. In: Bucher P, Moret BME, editors, WABI '06: Proceedings of the Sixth InternationalWorkshop on Algorithms in Bioinformatics. Springer, volume 4175 of Lecture Notes in Computer Science, pp. 163â173.</mixed-citation>
    </ref>
  </ref-list>
</back>

<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Archiving and Interchange DTD v3.0 20080202//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName archivearticle3.dtd?>
<?SourceDTD.Version 3.0?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Hum Mutat</journal-id>
    <journal-id journal-id-type="iso-abbrev">Hum. Mutat</journal-id>
    <journal-id journal-id-type="doi">10.1002/(ISSN)1098-1004</journal-id>
    <journal-id journal-id-type="publisher-id">HUMU</journal-id>
    <journal-title-group>
      <journal-title>Human Mutation</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1059-7794</issn>
    <issn pub-type="epub">1098-1004</issn>
    <publisher>
      <publisher-name>John Wiley and Sons Inc.</publisher-name>
      <publisher-loc>Hoboken</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">5765404</article-id>
    <article-id pub-id-type="doi">10.1002/humu.23348</article-id>
    <article-id pub-id-type="publisher-id">HUMU23348</article-id>
    <article-categories>
      <subj-group subj-group-type="overline">
        <subject>Informatics</subject>
      </subj-group>
      <subj-group subj-group-type="heading">
        <subject>Informatics</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>VariantValidator: Accurate validation, mapping, and formatting of sequence variation descriptions</article-title>
      <alt-title alt-title-type="left-running-head">FREEMAN et al.</alt-title>
    </title-group>
    <contrib-group>
      <contrib id="humu23348-cr-0001" contrib-type="author">
        <name>
          <surname>Freeman</surname>
          <given-names>Peter J.</given-names>
        </name>
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-5838-5404</contrib-id>
        <xref ref-type="aff" rid="humu23348-aff-0001">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib id="humu23348-cr-0002" contrib-type="author">
        <name>
          <surname>Hart</surname>
          <given-names>Reece K.</given-names>
        </name>
        <xref ref-type="aff" rid="humu23348-aff-0002">
          <sup>2</sup>
        </xref>
        <xref ref-type="aff" rid="humu23348-aff-0003">
          <sup>3</sup>
        </xref>
      </contrib>
      <contrib id="humu23348-cr-0003" contrib-type="author">
        <name>
          <surname>Gretton</surname>
          <given-names>Liam J.</given-names>
        </name>
        <xref ref-type="aff" rid="humu23348-aff-0004">
          <sup>4</sup>
        </xref>
      </contrib>
      <contrib id="humu23348-cr-0004" contrib-type="author">
        <name>
          <surname>Brookes</surname>
          <given-names>Anthony J.</given-names>
        </name>
        <xref ref-type="aff" rid="humu23348-aff-0001">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib id="humu23348-cr-0005" contrib-type="author" corresp="yes">
        <name>
          <surname>Dalgleish</surname>
          <given-names>Raymond</given-names>
        </name>
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0001-7667-187X</contrib-id>
        <address>
          <email>raymond.dalgleish@le.ac.uk</email>
        </address>
        <xref ref-type="aff" rid="humu23348-aff-0001">
          <sup>1</sup>
        </xref>
      </contrib>
    </contrib-group>
    <aff id="humu23348-aff-0001">
      <label>
        <sup>1</sup>
      </label>
      <named-content content-type="organisation-division">Department of Genetics</named-content>
      <institution>University of Leicester</institution>
      <named-content content-type="city">Leicester</named-content>
      <country country="GB">United Kingdom</country>
    </aff>
    <aff id="humu23348-aff-0002">
      <label>
        <sup>2</sup>
      </label>
      <named-content content-type="organisation-division">Invitae</named-content>
      <institution>Inc.</institution>
      <named-content content-type="city">San Francisco</named-content>
      <named-content content-type="city">California</named-content>
    </aff>
    <aff id="humu23348-aff-0003">
      <label>
        <sup>3</sup>
      </label>
      <named-content content-type="organisation-division">Genome Medical</named-content>
      <institution>Inc.</institution>
      <named-content content-type="city">San Francisco</named-content>
      <named-content content-type="city">California</named-content>
    </aff>
    <aff id="humu23348-aff-0004">
      <label>
        <sup>4</sup>
      </label>
      <named-content content-type="organisation-division">IT Services</named-content>
      <institution>University of Leicester</institution>
      <named-content content-type="city">Leicester</named-content>
      <country country="GB">United Kingdom</country>
    </aff>
    <author-notes>
      <corresp id="correspondenceTo"><label>*</label><bold>Correspondence</bold><break/>Raymond Dalgleish, Department of Genetics, University of Leicester, University Road, Leicester, LE1 7RH, United Kingdom.<break/>Email: <email>raymond.dalgleish@le.ac.uk</email><break/></corresp>
    </author-notes>
    <pub-date pub-type="epub">
      <day>17</day>
      <month>10</month>
      <year>2017</year>
    </pub-date>
    <pub-date pub-type="ppub">
      <month>1</month>
      <year>2018</year>
    </pub-date>
    <volume>39</volume>
    <issue>1</issue>
    <issue-id pub-id-type="doi">10.1002/humu.2018.39.issue-1</issue-id>
    <fpage>61</fpage>
    <lpage>68</lpage>
    <history>
      <date date-type="received">
        <day>25</day>
        <month>4</month>
        <year>2017</year>
      </date>
      <date date-type="rev-recd">
        <day>21</day>
        <month>9</month>
        <year>2017</year>
      </date>
      <date date-type="accepted">
        <day>25</day>
        <month>9</month>
        <year>2017</year>
      </date>
    </history>
    <permissions>
      <!--<copyright-statement content-type="issue-copyright"> Copyright &#x000a9; 2018 Wiley Periodicals, Inc. <copyright-statement>-->
      <copyright-statement content-type="article-copyright">© 2017 The Authors. <italic>Human Mutation</italic> published by Wiley Periodicals, Inc.</copyright-statement>
      <license license-type="creativeCommonsBy">
        <license-p>This is an open access article under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution</ext-link> License, which permits use, distribution and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri content-type="pdf" xlink:type="simple" xlink:href="file:HUMU-39-61.pdf"/>
    <abstract>
      <title>Abstract</title>
      <p>The Human Genome Variation Society (HGVS) variant nomenclature is widely used to describe sequence variants in scientific publications, clinical reports, and databases. However, the HGVS recommendations are complex and this often results in inaccurate variant descriptions being reported. The open‐source hgvs Python package (<ext-link ext-link-type="uri" xlink:href="https://github.com/biocommons/hgvs">https://github.com/biocommons/hgvs</ext-link>) provides a programmatic interface for parsing, manipulating, formatting, and validating of variants according to the HGVS recommendations, but does not provide a user‐friendly Web interface. We have developed a Web‐based variant validation tool, VariantValidator (<ext-link ext-link-type="uri" xlink:href="https://variantvalidator.org/">https://variantvalidator.org/</ext-link>), which utilizes the hgvs Python package and provides additional functionality to assist users who wish to accurately describe and report sequence‐level variations that are compliant with the HGVS recommendations. VariantValidator was designed to ensure that users are guided through the intricacies of the HGVS nomenclature, for example, if the user makes a mistake, VariantValidator automatically corrects the mistake if it can, or provides helpful guidance if it cannot. In addition, VariantValidator has the facility to interconvert genomic variant descriptions in HGVS and Variant Call Format with a degree of accuracy that surpasses most competing solutions.</p>
    </abstract>
    <kwd-group kwd-group-type="author-generated">
      <kwd id="humu23348-kwd-0001">HGVS variant nomenclature</kwd>
      <kwd id="humu23348-kwd-0002">reference sequences</kwd>
      <kwd id="humu23348-kwd-0003">sequence variants</kwd>
      <kwd id="humu23348-kwd-0004">sequence variation</kwd>
      <kwd id="humu23348-kwd-0005">validation</kwd>
      <kwd id="humu23348-kwd-0006">variant call format</kwd>
      <kwd id="humu23348-kwd-0007">VCF</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>Wellcome Trust</funding-source>
        <award-id>097828/Z/11/B</award-id>
      </award-group>
    </funding-group>
    <counts>
      <fig-count count="3"/>
      <table-count count="1"/>
      <page-count count="8"/>
      <word-count count="5614"/>
    </counts>
    <custom-meta-group>
      <custom-meta>
        <meta-name>source-schema-version-number</meta-name>
        <meta-value>2.0</meta-value>
      </custom-meta>
      <custom-meta>
        <meta-name>component-id</meta-name>
        <meta-value>humu23348</meta-value>
      </custom-meta>
      <custom-meta>
        <meta-name>cover-date</meta-name>
        <meta-value>January 2018</meta-value>
      </custom-meta>
      <custom-meta>
        <meta-name>details-of-publishers-convertor</meta-name>
        <meta-value>Converter:WILEY_ML3GV2_TO_NLMPMC version:5.2.8 mode:remove_FC converted:12.01.2018</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
  <notes>
    <p content-type="self-citation">
      <mixed-citation publication-type="journal" id="humu23348-cit-0018"><string-name><surname>Freeman</surname><given-names>PJ</given-names></string-name>, <string-name><surname>Hart</surname><given-names>RK</given-names></string-name>, <string-name><surname>Gretton</surname><given-names>LJ</given-names></string-name>, <string-name><surname>Brookes</surname><given-names>AJ</given-names></string-name>, <string-name><surname>Dalgleish</surname><given-names>R</given-names></string-name>. <article-title>VariantValidator: Accurate validation, mapping and formatting of sequence variation descriptions</article-title>. <source>Human Mutation</source>. <year>2018</year>;<volume>39</volume>:<fpage>61</fpage>–<lpage>68</lpage>. <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1002/humu.23348">https://doi.org/10.1002/humu.23348</ext-link><pub-id pub-id-type="pmid">28967166</pub-id></mixed-citation>
    </p>
    <fn-group>
      <fn id="humu23348-note-0001">
        <p><bold>Funding information</bold> Contract Grant Sponsor: Wellcome Trust (097828/Z/11/B).</p>
      </fn>
      <fn id="humu23348-note-0002">
        <p>Communicated by Peter N. Robinson</p>
      </fn>
    </fn-group>
  </notes>
</front>
<body>
  <sec id="humu23348-sec-0010">
    <label>1</label>
    <title>INTRODUCTION</title>
    <p>The Human Genome Variation Society (HGVS) nomenclature for the description of human sequence variants (den Dunnen et al., <xref rid="humu23348-bib-0005" ref-type="ref">2016</xref>) is widely adopted by scientific journals and variant databases and is endorsed by professional organizations (Deans, Fairley, den Dunnen, &amp; Clark, <xref rid="humu23348-bib-0004" ref-type="ref">2016</xref>; Richards et al., <xref rid="humu23348-bib-0012" ref-type="ref">2015</xref>; Tack, Deans, Wolstenhome, Patton, &amp; Dequeker, <xref rid="humu23348-bib-0013" ref-type="ref">2016</xref>). As high‐throughput sequencing has become more common, HGVS recommendations have evolved to communicate a plethora of new variants to the scientific and healthcare communities (Taschner &amp; den Dunnen, <xref rid="humu23348-bib-0014" ref-type="ref">2011</xref>). This has resulted in some aspects of the nomenclature being somewhat difficult to comprehend and use, for experts and non‐experts alike, and so has resulted in many instances of inaccurate communication of variant data. Consequently, high‐quality user‐friendly tools are required to help investigators validate variant descriptions to ensure that the described variant is valid and consistent with the predicted phenotypic effect. There is also a need for high‐quality tools that can convert high‐throughput sequence variation descriptions (e.g., the Variant Call Format [VCF] <ext-link ext-link-type="uri" xlink:href="https://github.com/samtools/hts-specs">https://github.com/samtools/hts-specs</ext-link>) (Danecek et al., <xref rid="humu23348-bib-0003" ref-type="ref">2011</xref>) into accurate descriptions of each variant using HGVS nomenclature with respect to all relevant reference sequences (i.e., genomic reference sequences and transcript reference sequences), and vice versa.</p>
    <p>Mutalyzer (Wildeman, van Ophuizen, den Dunnen, &amp; Taschner, <xref rid="humu23348-bib-0015" ref-type="ref">2008</xref>) already provides a Web interface for constructing, validating, and transforming sequence variant descriptions. Mutalyzer is a powerful and widely used tool but it cannot comprehensively validate all variants that comply with the HGVS nomenclature. For example, its primary Name Checker interface cannot validate sequence variants described in the context of chromosomal DNA reference sequences, for example, NC_000017.10:g.48275363C&gt;A (GRCh37). Mutalyzer's Position Converter will accept NC_000017.10:g.48275363C&gt;A and map the variant base position to relevant transcript descriptions. However, it does not attempt to validate the stated reference base against the reference sequence, that is, it will accept the syntactically correct, but data‐incorrect, variant description NC_000017.10:g.48275363G&gt;A (rather than C&gt;A) and map it to NM_000088.3:c.589C&gt;T rather than G&gt;T. In addition, Mutalyzer lacks the ability to validate intronic variants with respect to coding sequence (transcript) reference sequences, for example, NM_000088.3:c.589‐1G&gt;T, because it lacks the facility to map transcripts to the genome and back again.</p>
    <p>The Ensembl Variant Effect Predictor (VEP) (McLaren et al., <xref rid="humu23348-bib-0009" ref-type="ref">2016</xref>) provides much of the necessary functionality required to map sequence variant descriptions in the VCF format to the HGVS format. However, VEP currently cannot handle sequence mismatches that often occur between genome reference sequences and the corresponding aligned RefSeq transcript sequences, for example, chromosomal variant NC_000001.11:g.216046439A&gt;C (GRCh37) returns the HGVS transcript description NM_206933.2:c.6317T&gt;G and predicted protein description NP_996816.2:p.Ile2106Arg, whereas the valid descriptions should be NM_206933.2:c.6317C&gt;G and NP_996816.2:p.(Thr2106Arg). VEP will therefore return inaccurate transcript and protein HGVS descriptions when there exist sequence discrepancies between the transcript and genomic sequences. VEP is also currently unable to validate some of the syntactically simple HGVS description types, for example, inversions, such as NM_000088.3:c.591_593inv.</p>
    <p>The hgvs Python package (Hart et al., <xref rid="humu23348-bib-0006" ref-type="ref">2015</xref>) has several distinct advantages over Mutalyzer: (a) variants are validated in the context of the specified reference sequence; (b) intronic variants, with respect to coding sequences, can be mapped to corresponding chromosomal sequences and the reference base validated at the chromosomal sequence level; (c) tools are provided to map variation within one transcript to other transcripts that overlap the same genomic coordinates. However, the hgvs Python package does not provide a user‐friendly interface, and it does not currently possess the functionality to process non‐HGVS formatted variant descriptions such as VCF (Danecek et al., <xref rid="humu23348-bib-0003" ref-type="ref">2011</xref>) or the pseudo‐VCF format (e.g., 11‐5248232‐T‐A), which is used by ExAC (<ext-link ext-link-type="uri" xlink:href="https://exac.broadinstitute.org/)">https://exac.broadinstitute.org/)</ext-link> (Lek et al., <xref rid="humu23348-bib-0007" ref-type="ref">2016</xref>), VarSome (<ext-link ext-link-type="uri" xlink:href="https://varsome.com/)">https://varsome.com/)</ext-link>, and other related resources.</p>
    <p>We have built a simple and intuitive Web interface, VariantValidator (<ext-link ext-link-type="uri" xlink:href="https://variantvalidator.org/">https://variantvalidator.org/</ext-link>), which harnesses and automates the key components of the hgvs Python package (Hart et al., <xref rid="humu23348-bib-0006" ref-type="ref">2015</xref>). We have also incorporated additional functionality such that VariantValidator is able to accurately map between the HGVS and VCF sequence variation description formats, enabling rapid transformation of high‐throughput sequence data generation into HGVS‐compliant variant descriptions. Unlike any of the aforementioned tools, VariantValidator adheres fully to the current HGVS guidelines in regard to the description of intronic variants with respect to a transcript reference sequence. VariantValidator produces complete descriptions in the format &lt;genomic reference sequence&gt; (&lt;transcript reference sequence&gt;):c.&lt;position&gt; &lt;observed variation&gt;; for example, NG_007400.1(NM_000088.3):c.589‐1G&gt;T (<ext-link ext-link-type="uri" xlink:href="http://varnomen.hgvs.org/bg-material/refseq/">http://varnomen.hgvs.org/bg-material/refseq/</ext-link>). Finally, VariantValidator has been designed to provide users with informative guidance relating to any variant‐description errors, which may have been detected, rather than terse error messages.</p>
  </sec>
  <sec id="humu23348-sec-0020">
    <label>2</label>
    <title>METHODS</title>
    <p>The VariantValidator interface is deployed on an Apache 2.0 HTTP server using mod_wsgi (<ext-link ext-link-type="uri" xlink:href="https://github.com/GrahamDumpleton/mod_wsgi">https://github.com/GrahamDumpleton/mod_wsgi</ext-link>) and is written in Python using the Flask micro‐framework (<ext-link ext-link-type="uri" xlink:href="http://flask.pocoo.org/">http://flask.pocoo.org/</ext-link>). At the time of writing, VariantValidator is limited to the functionality provided in hgvs Python package version 1.0.0a1 (<ext-link ext-link-type="uri" xlink:href="https://github.com/biocommons/hgvs">https://github.com/biocommons/hgvs</ext-link>) and Universal Transcript Archive (UTA) version uta_20170707 (<ext-link ext-link-type="uri" xlink:href="https://github.com/biocommons/uta/">https://github.com/biocommons/uta/</ext-link>). To ensure optimal performance, VariantValidator benefits from a local installation of uta_20170707 and is programmed such that sequences (nucleotide or amino acid) are recovered from a locally installed version of SeqRepo (<ext-link ext-link-type="uri" xlink:href="https://github.com/biocommons/biocommons.seqrepo">https://github.com/biocommons/biocommons.seqrepo</ext-link>). VariantValidator uses several MySQL look‐up tables containing: (a) RefSeq Transcript IDs (NM_ or NR_), current transcript name, HGNC gene symbol, corresponding gene symbol used by UTA (e.g., the previous UTA build (uta_20170117) used the gene symbol <italic>LEPRE1</italic>, which was actually updated by HGNC to <italic>P3H1</italic> in December 2014); (b) coordinate‐based mappings (chromosome number, start position, end position) of RefSeqGene (NG_) sequences to chromosomal sequences (NC_) for both genome builds GRCh37 and GRCh38; (c) LRG reference sequence IDs and LRG transcript reference sequence IDs with their associated RefSeqGene IDs or RefSeq transcript IDs respectively; (d) and RefSeq Transcript ID, HGNC ID, current gene symbol, current gene name, and coordinate‐based mappings of the transcripts to genome builds GRCh37 and GRCh38. The lookup tables were compiled and are updated on a monthly basis by custom Python scripts. The required data are downloaded directly from NCBI (<ext-link ext-link-type="uri" xlink:href="https://ftp.ncbi.nih.gov/refseq/H_sapiens/">https://ftp.ncbi.nih.gov/refseq/H_sapiens/</ext-link>), HGNC (<ext-link ext-link-type="uri" xlink:href="http://ftp.ebi.ac.uk/pub/databases/genenames/new/tsv/hgnc_complete_set.txt">http://ftp.ebi.ac.uk/pub/databases/genenames/new/tsv/hgnc_complete_set.txt</ext-link>) and UCSC (<ext-link ext-link-type="uri" xlink:href="https://genome.ucsc.edu/cgi-bin/hgTables">https://genome.ucsc.edu/cgi-bin/hgTables</ext-link>).</p>
    <p>The most significant current limitations of the hgvs Python package at this stage are: (a) some classes of complex variation, for example, predicting the effect at the protein level of nucleotide inversions (however, we have incorporated supporting code into VariantValidator to overcome this issue); and (b) some RefSeqGene sequences and historic versions of some transcripts are either absent from UTA, or they are not mapped to a particular genome build (most usually GRCh37). This is a result of relevant historical mapping datasets being unavailable from NCBI for these sequences. However, significant efforts are being made to develop a robust protocol to map the absent sequences accurately to genome builds GRCh37 and GRCh38.</p>
    <p>VariantValidator has some limitations in that it does not yet implement the full functionality of the hgvs Python package. For example, there is no support for the output of variant descriptions in the context of Ensembl transcripts (Aken et al., <xref rid="humu23348-bib-0001" ref-type="ref">2017</xref>) using the Genebuild alignment method. This decision is based on the HGVS variant nomenclature recommending the use of NCBI RefSeq (O'Leary et al., <xref rid="humu23348-bib-0011" ref-type="ref">2016</xref>) and LRG (Dalgleish et al., <xref rid="humu23348-bib-0002" ref-type="ref">2010</xref>; MacArthur et al., <xref rid="humu23348-bib-0008" ref-type="ref">2014</xref>) reference sequences (<ext-link ext-link-type="uri" xlink:href="http://varnomen.hgvs.org/bg-material/refseq/">http://varnomen.hgvs.org/bg-material/refseq/</ext-link>). However, VariantValidator will accept the input of variant descriptions with respect to Ensembl transcript sequences if a sequence‐identical RefSeq transcript reference sequence is available. Requests to implement missing functionality and bug reports can be submitted to the VariantValidator administrator by clicking the “Contact admin” link at the top right corner of the Web page. In addition, if errors are detected during the processing of input variation descriptions, VariantValidator automatically contacts admin via email and the associated bug is quickly rectified.</p>
  </sec>
  <sec id="humu23348-sec-0030">
    <label>3</label>
    <title>RESULTS AND DISCUSSION</title>
    <sec id="humu23348-sec-0040">
      <label>3.1</label>
      <title>What is the purpose of VariantValidator?</title>
      <p>The hgvs Python package is a powerful tool for: (a) validating HGVS variant descriptions; (b) mapping variation between different reference sequence types (e.g., chromosome, gene and transcript reference sequences); (c) formatting (i.e., normalizing or shuffling) descriptions of variants in stretches of repetitive sequence so that they fully comply with HGVS nomenclature guidelines. Although the hgvs Python package is intended as a foundation for tool developers, many users would prefer to access it through a simple and intuitive Graphical User Interface (GUI). VariantValidator provides a Web‐based GUI for the hgvs Python package.</p>
      <p>During the development of VariantValidator we set several key objectives: (a) the interface must be clean, concise, and easy to read; (b) the application must guide users in HGVS nomenclature compliance, providing clear recommendations, prompts, and warnings where required; (c) mapping variants between reference sequences should be automated and the results displayed to the user on a single clearly laid out Web page; (d) the application must provide additional features that are unavailable in the hgvs Python package so that the user is provided with a wide range of useful information; for example, the conversion of c. HGVS variant descriptions into the VCF format, up to date HGNC gene symbols (Yates et al., <xref rid="humu23348-bib-0017" ref-type="ref">2017</xref>) and transcript descriptions; (e) links that enable the user to access relevant external data, for example, NCBI RefSeq records and aggregated data resources, for example, VarSome (<ext-link ext-link-type="uri" xlink:href="https://varsome.com/">https://varsome.com/</ext-link>) (as discussed below).</p>
      <p>VariantValidator provides users with an alternative to the commonly used Mutalyzer Web‐based software. It was specifically designed to provide users with functionality that Mutalyzer is unable to provide, including: (a) automated validation of intronic variants with respect to transcript reference sequences and assembly of HGVS‐compliant intronic c. variant descriptions; (b) the ability to appropriately re‐format specific variant descriptions such that they cross into intronic sequence, and remain fully compliant with HGVS recommendations; (c) the ability to map sequence variation at the chromosomal level to all relevant transcripts; (d) the ability to accept and process non‐HGVS variant descriptions such as VCF and hybrid HGVS:VCF variant descriptions; (e) helpful warnings and, where appropriate, automated “hand‐holding,” which guides the user through the complexities of the HGVS nomenclature. These functions are discussed below. In addition to the standard batch validation tool in VariantValidator, there is also a tool that converts variant data from VCF files and feeds them directly into the batch validation tool. We currently implement a fair usage policy limiting the batch tools toward processing 20,000 variants in a single job. However, we are in the process of streamlining the batch tool and intend to relax this restriction as soon as possible.</p>
    </sec>
    <sec id="humu23348-sec-0050">
      <label>3.2</label>
      <title>The VariantValidator interface</title>
      <p>VariantValidator provides an interface allowing validation of genomic variants (e.g., NC_000001.10:g.150550916G&gt;A or NG_029146.1:g.6299C&gt;T) or transcript variants (e.g., NM_182763.2:c.688+403C&gt;T). It can also validate variant descriptions in VCF‐like (pseudo‐VCF) formats such as 1‐150550916‐G‐A or 1:150550916G&gt;A (GRCh37); and unofficial “hybrid” HGVS:VCF formats (e.g., NC_000016.9:g.2099572TC&gt;T is corrected to NC_000016.9:g.2099575delC). As an illustration, consider the variant in the <italic>MCL1</italic> gene, NM_182763.2:c.688+403C&gt;T, used as an example in the original description of the hgvs Python package (Hart et al., <xref rid="humu23348-bib-0006" ref-type="ref">2015</xref>). This can be submitted to VariantValidator as follows: (a) type or paste the variant description into the input text box; (b) select a genome build; (c) click Submit (Figure <xref rid="humu23348-fig-0001" ref-type="fig">1</xref>). On submission, the input variant description is validated to ensure that: (a) it complies with the HGVS recommendations; (b) the reported nucleotide sequence alterations (e.g., deletions, duplications, substitutions, etc.) are consistent with the reference sequence; (c) intron/exon boundary coordinates are correct. HGVS‐compliant variant descriptions are then presented to the user in the context of all available corresponding reference sequences. In addition, we have incorporated functions to return data on gene‐level variant descriptions (RefSeqGene) and chromosomal locations in both HGVS format and a commonly used VCF‐like format. If validation fails, an error message, including the reason for failure, is returned with guidance to the user.</p>
      <fig fig-type="Figure" xml:lang="en" id="humu23348-fig-0001" orientation="portrait" position="float">
        <label>Figure 1</label>
        <caption>
          <p>Mapping of variants onto alternative transcripts. Submitted variant descriptions are automatically mapped, via the selected genome build (GRCh38), onto all other transcripts that overlap the same genomic position. In this example, NM_182763.2:c.688+403C&gt;T, which is intronic with respect to <italic>MCL1</italic> transcript variant 2 mRNA, is mapped to an exonic variant in <italic>MCL1</italic> transcript variant 1 mRNA, NM_021960.4:c.740C&gt;T. The same initial variant description also maps to an exonic variant in <italic>MCL1</italic> transcript variant 3 mRNA, NM_001197320.1:c.281C&gt;T</p>
        </caption>
        <graphic id="nlm-graphic-3" xlink:href="HUMU-39-61-g001"/>
      </fig>
      <p>The UTA (<ext-link ext-link-type="uri" xlink:href="https://github.com/biocommons/uta">https://github.com/biocommons/uta</ext-link>) (Hart et al., <xref rid="humu23348-bib-0006" ref-type="ref">2015</xref>) stores sequence alignment data accessed by hgvs but does not provide the descriptive name of transcript reference sequences, for example, Homo sapiens MCL1, BCL2 family apoptosis regulator (MCL1), transcript variant 1, mRNA. Providing this name is particularly useful if a gene (e.g., MCL1) encodes more than one transcript variant because, unlike the reference sequence ID (NM_021960.4), the name clearly identifies the transcript variant (transcript variant 1) against which variation is being reported. VariantValidator stores regularly updated RefSeq data (see <italic>Methods</italic>) and displays the corresponding descriptions of transcript reference sequences. VariantValidator determines that NM_182763.2:c.688+403C&gt;T refers to an intronic variant in “Homo sapiens BCL2 family apoptosis regulator (MCL1), transcript variant 2, mRNA.” Three well‐characterized RefSeq transcripts exist for the <italic>MCL1</italic> gene and VariantValidator automatically maps the submitted variant to its genomic coordinates and also to any other transcripts that overlap the genomic coordinates specified in the variant description. As shown in Figure <xref rid="humu23348-fig-0001" ref-type="fig">1</xref>, we have mapped an intronic variant with respect to <italic>MCL1</italic> transcript variant 2 mRNA to an exonic variant in <italic>MCL1</italic> transcript variant 1 mRNA, NM_021960.4:c.740C&gt;T. The same initial variant description also maps to an exonic variant in <italic>MCL1</italic> transcript variant 3 mRNA, NM_001197320.1:c.281C&gt;T. VariantValidator provides complete HGVS‐compliant variant descriptions detailing how sequence variation at the genomic level maps to sequence variation in each overlapping transcript. VariantValidator also automatically provides the user with a pseudo‐VCF description of the input variant description (1‐150550916‐G‐A, GRCh37 or 1‐150578440‐G‐A, GRCh38—Figure <xref rid="humu23348-fig-0001" ref-type="fig">1</xref>), which enables the user to query external data resources, for example, VarSome. If VariantValidator is unable to recover necessary information relating to a specific transcript from UTA, for example, if the previous version of an updated reference sequence is not mapped to the supported genome builds (GRCh37 and GRCh38), reference sequences that are actually supported in UTA can be identified using the reference sequence finder (<ext-link ext-link-type="uri" xlink:href="https://variantvalidator.org/ref_finder/">https://variantvalidator.org/ref_finder/</ext-link>).</p>
      <p>VariantValidator provides links to RefSeq sequence records (Figure <xref rid="humu23348-fig-0001" ref-type="fig">1</xref>) and links to VarSome.com (<ext-link ext-link-type="uri" xlink:href="https://varsome.com/">https://varsome.com/</ext-link>), which provides aggregated information on the input variant description.</p>
    </sec>
    <sec id="humu23348-sec-0060">
      <label>3.3</label>
      <title>Ease of use</title>
      <p>We aim to consistently use simple workflows, for example, a three‐click workflow that allows a genomic variant correctly mapping to genome build GRCh37 (NC_000001.10:g.150550916G&gt;A or 1‐150550916‐G‐A) to be projected via a transcript level variant description (NM_182763.2:c.688+403C&gt;T) onto genome build GRCh38 (NC_000001.11:g.150578440G&gt;A or 1‐150578440‐G‐A). This feature is particularly useful for transforming variant descriptions from genomic data, in the VCF format, into the HGVS format for publication and use in clinical reports and databases. Similarly, this workflow can be used to project the data stored in publications, clinical reports, and databases onto the two most recent genome builds (GRCh37 and GRCh38). In addition, we have incorporated various subroutines to assist inexperienced HGVS nomenclature users. For example, when validating incorrectly reported intron/exon boundary coordinates (e.g., NM_182763.2:c.687+404C&gt;T), VariantValidator performs automatic re‐mapping to the nearest exon boundary and displays the most probable valid variant description to the user (i.e., NM_182763.2:c.688+403C&gt;T).</p>
      <p>VariantValidator has additional advantages over Mutalyzer. These include: (a) the use of the non‐coding variant type (n.) is fully compliant with HGVS recommendations; and (b) variant descriptions and alignments are provided for both coding and genomic sequences thus allowing the user to make informed decisions when validating complex variants, such as those close to exon/intron boundaries. To emphasize these two points, if the variant description NM_000089.3:c.1033_1035del (Molyneux, Starman, Byers, &amp; Dalgleish, <xref rid="humu23348-bib-0010" ref-type="ref">1993</xref>) is submitted to Mutalyzer, it returns the original variant description and NM_000089.3:n.1504_1506del, which is a description relative to the first base of the transcript. Although Mutalyzer informs the user that this description is “Not for use in LSDBs in case of protein‐coding transcripts” it gives the misleading impression that the description could be valid and HGVS‐compliant in other contexts. In contrast, VariantValidator returns (among others) the original variant description NM_000089.3:c.1033_1035delGTT, the corresponding genome variant description NC_000007.13:g.94039133_94039135delTGT (GRCh37) and a normalized (3´‐shuffled) coding variant description that maps the deletion across an exon/intron boundary relative to the genomic DNA sequence onto which the transcript maps, NM_000089.3:c.1035_1035+2delTGT (Figure <xref rid="humu23348-fig-0002" ref-type="fig">2</xref>).</p>
      <fig fig-type="Figure" xml:lang="en" id="humu23348-fig-0002" orientation="portrait" position="float">
        <label>Figure 2</label>
        <caption>
          <p>Variant descriptions at exon/intron boundaries. This illustrates how a three‐base deletion in the <italic>COL1A2</italic> gene at the junction of the 3′ end of exon 19 with the adjacent intron might be described in two different ways in the context of the RefSeq transcript reference sequence NM_000089.3. Description A shows that the three deleted bases can be described at position NM_000089.3:c.1033_1035 where the deleted bases are GTT, but Description B shows that the variant can be normalized and described at position NM_000089.3:c.1035_1035+2 where the deleted bases are TGT. The latter description corresponds with the genomic variant description NC_000007.13:g.94039133_94039135delTGT. Formally, intronic variants described in the context of a transcript reference sequence must be accompanied by a genomic reference sequence to allow full verification of the variant. This is illustrated by Description C</p>
        </caption>
        <graphic id="nlm-graphic-5" xlink:href="HUMU-39-61-g002"/>
      </fig>
      <p>During development testing of VariantValidator, analysis of error logs indicated that some users were specifying HGNC gene symbols, rather than valid sequence records, as sequence references for variant validation, for example, COL5A1:c.5071A&gt;T. When COL5A1:c.5071A&gt;T is submitted to VariantValidator, the user is warned that “HGVS variant nomenclature does not allow the use of a gene symbol (COL5A1) in place of a valid reference sequence” (<ext-link ext-link-type="uri" xlink:href="http://varnomen.hgvs.org/bg-material/refseq/">http://varnomen.hgvs.org/bg-material/refseq/</ext-link>). VariantValidator then provides the user with valid transcript reference sequences that might be used in the context of this variant to generate a valid description. The user‐corrected variant description must then be submitted to VariantValidator to determine whether or not it is, in fact, valid.</p>
    </sec>
    <sec id="humu23348-sec-0070">
      <label>3.4</label>
      <title>Validation of intronic variation with respect to transcript reference sequences</title>
      <p>HGVS nomenclature recommendations provide guidance on how to describe intronic sequence variation with respect to transcript (coding DNA) reference sequences, for example, the imaginary variant NM_012345.6:c.88+2T&gt;G. Indeed, the guidelines acknowledge that describing intronic splice site variants in this way provides an immediate indication of the location of the variant. However, since RefSeq transcript reference sequences do not contain intronic sequence, it is impossible to directly verify in this example description that the reference base at the +2 position is actually a T.</p>
      <p>The practicality of validating an intronic variant that is reported in the context of a transcript reference sequence is well illustrated by the sequence variant NM_022356.3:c.2055+18G&gt;A (Willaert et al., <xref rid="humu23348-bib-0016" ref-type="ref">2009</xref>). Mutalyzer cannot validate the variant description in this format even though it is compliant with the HGVS nomenclature. The solution is to specify the variant in the context of the corresponding RefSeqGene reference sequence, NG_008123.1, but there are three transcript variants (NM_022356.3, NM_001146289.1, and NM_001243246.1.) for the <italic>P3H1</italic> gene encoding protein isoforms, which differ at their C‐terminal ends. Mutalyzer warns the user that three transcripts are found for the gene and asks the user to select one of the three from “001, 002, 003.″ The user must then compile a new variant description that specifies the transcript to which the variant description refers. For the example <italic>P3H1</italic> variant, the required working description for Mutalyzer becomes NG_008123.1(LEPRE1_v003):c.2055+18G&gt;A. Two issues should be noted. The cached version of NG_008123.1 at Mutalyzer, at the time of writing, is date‐stamped 29‐May‐2014, which predates the change of gene symbol for this gene by HGNC from <italic>LEPRE1</italic> to <italic>P3H1</italic> in December 2014. This explains why Mutalyzer designates the three transcripts as LEPRE1_v001, LEPRE1_v002, and LEPRE1_v003 rather than as P3H1_v001, P3H1_v002, and P3H1_v003. The more confusing aspect of this scheme is that the numeric parts of these three transcript designations do not correspond with the transcript variant numbers assigned by RefSeq to the three transcript sequences (Table <xref rid="humu23348-tbl-0001" ref-type="table-wrap">1</xref>). Instead, they are derived from the sequential order in which the three transcript variants are annotated in the RefSeqGene record NG_008123.1. VariantValidator does, however, provide support for users who attempt to validate variant descriptions in the formats similar to NG_008123.1(LEPRE1_v003):c.2055+18G&gt;A or NG_008123.1:c.2055+18G&gt;A where a RefSeqGene reference sequence is being used inappropriately for c. positions that should be annotated with respect to a coding‐DNA sequence. When NG_008123.1(LEPRE1_v003):c.2055+18G&gt;A is submitted, VariantValidator warns “NG_:c.PositionVariation descriptions should not be used unless a transcript reference sequence has also been provided e.g. NG_(NM_):c.PositionVariation: For additional assistance, submit NG_008123.1:c.2055+18G&gt;A to VariantValidator.” When NG_008123.1:c.2055+18G&gt;A is submitted, VariantValidator automatically provides the user with the available transcripts to which the original variant description may have been mapped (e.g., NG_008123.1(NM_022356.3):c.2055+18G&gt;A (Homo sapiens prolyl 3‐hydroxylase 1 (P3H1), transcript variant 1, mRNA.), with the caveat that the provided variant description must be subsequently submitted to VariantValidator to determine whether it is valid. Describing an intronic sequence variant as NG_008123.1(NM_022356.3):c.2055+18G&gt;A makes good practical sense. It reveals that the variant is intronic (c.f. NG_008123.1:g.24831G&gt;A) and defines both the RefSeqGene and RefSeq sequences in the context of which the variant is described. In contrast, the Mutalyzer transcript designation (LEPRE1_003, or P3H1_003) coveys no absolute (or immediately understandable) identifier for the transcript sequence. Describing variants in the joint context of a transcript and genomic reference sequences is a feature of HGVS nomenclature version 15.11. There will be instances where no RefSeqGene reference exists for a gene, for example, <italic>HOXD12</italic>, at the time of writing, but intronic variants can be validly described for such genes in the context of genome and transcript reference sequences, for example, NC_000002.11(NM_021193.3):c.574+1G&gt;A (<ext-link ext-link-type="uri" xlink:href="http://varnomen.hgvs.org/bg-material/refseq/">http://varnomen.hgvs.org/bg-material/refseq/</ext-link>). VariantValidator uses this convention when recommending variant descriptions with the caveat that if a RefSeqGene sequence record is available, it should take precedence over the chromosomal record. Mutalyzer does not adopt a fallback position for describing intronic variation when there is no RefSeqGene record, thus it cannot describe or validate intronic sequence variants for approximately 75% of genes with protein‐coding or non‐coding transcripts. Not only does VariantValidator use the chromosomal sequence as its reporting fallback position, it also clearly states when RefSeqGene records are not available.</p>
      <table-wrap id="humu23348-tbl-0001" xml:lang="en" orientation="portrait" position="float">
        <label>Table 1</label>
        <caption>
          <p>Mutalyzer transcript designations do not correspond with the RefSeq transcript sequence definitions</p>
        </caption>
        <table frame="hsides" rules="groups">
          <col align="left" span="1"/>
          <col align="left" span="1"/>
          <col align="left" span="1"/>
          <thead>
            <tr style="border-bottom:solid 1px #000000" valign="bottom">
              <th align="left" valign="bottom" rowspan="1" colspan="1">RefSeq accessions and versions for <italic>P3H1</italic> gene transcripts</th>
              <th align="left" valign="bottom" rowspan="1" colspan="1">RefSeq sequence definitions</th>
              <th align="left" valign="bottom" rowspan="1" colspan="1">Mutalyzer transcript designations</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" rowspan="1" colspan="1">NM_022356.3</td>
              <td align="left" rowspan="1" colspan="1">Homo sapiens prolyl 3‐hydroxylase 1 (P3H1), transcript variant 1, mRNA.</td>
              <td align="left" rowspan="1" colspan="1">LEPRE1_v003</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">NM_001146289.1</td>
              <td align="left" rowspan="1" colspan="1">Homo sapiens prolyl 3‐hydroxylase 1 (P3H1), transcript variant 2, mRNA.</td>
              <td align="left" rowspan="1" colspan="1">LEPRE1_v002</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">NM_001243246.1</td>
              <td align="left" rowspan="1" colspan="1">Homo sapiens prolyl 3‐hydroxylase 1 (P3H1), transcript variant 3, mRNA.</td>
              <td align="left" rowspan="1" colspan="1">LEPRE1_v001</td>
            </tr>
          </tbody>
        </table>
        <permissions>
          <copyright-holder>John Wiley &amp; Sons, Ltd.</copyright-holder>
        </permissions>
      </table-wrap>
    </sec>
    <sec id="humu23348-sec-0080">
      <label>3.5</label>
      <title>Validation and mapping of chromosomal variants to underlying genes and transcripts</title>
      <p>In contrast to Mutalyzer Name Checker (<ext-link ext-link-type="uri" xlink:href="https://mutalyzer.nl/name-checker">https://mutalyzer.nl/name-checker</ext-link>), VariantValidator will validate variant descriptions with respect to chromosomal reference sequences, for example, NC_000017.10:g.48275363C&gt;A or 17‐48275363‐C‐A (GRCh37), and is particularly useful when validating descriptions in VCF files generated by NGS data analysis programs. This allows users to accurately map a chromosomal sequence variant to all overlapping genes and transcripts and automatically generate fully HGVS‐compliant variant descriptions with respect to each. The Mutalyzer Position Converter does perform a similar function but does not actually validate the input variant description, meaning that mistyped descriptions are not identified. In addition, the Position Converter can produce variant mappings that report positions that lie distant from the reference sequences in the context of which they are reported. For example, the <italic>COL1A1</italic> variant NC_000017.10:g.48275363C&gt;A is correctly mapped by Position Converter to <italic>COL1A1</italic> gene and transcript records, but also to LOC1005065: XR_109403.1:n.570‐4413C&gt;A. There is no gene corresponding to LOC1005065 and XR_109403.1 is a retired sequence that corresponds to the former predicted locus LOC100506522. VariantValidator only maps variants to locations in fully validated RefSeq transcripts for which there is supporting biological evidence (NM_ and NR_) genes (NG_) and chromosomes (NC_), which are included in the UTA.</p>
    </sec>
    <sec id="humu23348-sec-0090">
      <label>3.6</label>
      <title>Features in VariantValidator that are additional to the underlying hgvs Python package</title>
      <p>The VariantValidator Web interface provides simultaneous automated validation and mapping to all relevant reference sequences and displays the data in a single view. This cannot be achieved using hgvs from the programming interface, so VariantValidator provides a level of functionality and detail to users that hgvs alone cannot provide.</p>
      <p>VariantValidator provides users with additional functionality, not discussed above, that enhances the outputs that can be achieved using hgvs alone. For example, to ensure that variants can be validated in the context of recently created RefSeqGene sequences, VariantValidator retrieves RefSeqGene records, where possible, that are not present in the UTA database. It then maps sequence variation with respect to coding reference sequences via chromosomal coordinates to the RefSeqGene coordinates. Similarly, VariantValidator uses lookup tables to match LRG and LRG transcript reference sequences with their corresponding RefSeqGene and RefSeq transcript sequences respectively, thus VariantValidator provides support for users wishing to validate variant descriptions with respect to LRG reference sequences. Similar logic is applied for users wishing to input variant descriptions with respect to Ensembl transcript reference sequences with the caveat that VariantValidator will not output variant descriptions relating to Ensembl transcript reference sequences.</p>
      <p>The ability to format intronic variant descriptions in the form NG_008123.1(NM_022356.3):c.2055+18G&gt;A is not intrinsic to the hgvs Python package and has been developed specifically for VariantValidator. This is also true of the ability to map inversions within coding reference sequences to predicted protein sequence variation. This requires extracting the coding sequence, generating a variant coding sequence, translating both sequences, and finally comparing the protein sequences to extract a description of the predicted protein sequence variation. We have also developed some of the basic VariantValidator‐specific functions to provide additional features such as: (a) the generation of pseudo‐VCF format variant descriptions; (b) integration of output from VarSome.com, which provides an alignment tool that displays variation at the sequence level along with aggregated data relevant to the submitted variant; (c) tools to extract variant data from VCF files and pseudo‐VCF variant descriptions and re‐format the VCF calls into variant descriptions that can be handled by the hgvs Python package; (d) a fully automated batch validation tool; and (e) VariantValidator generates a series of custom error messages such that users are informed that VariantValidator automatically corrects errors made by the user when it is able to do so, or provide informative information such that the user can correct their own mistakes when VariantValidator is unable to do so. These features allow VariantValidator to access and supplement the wide range of tools provided by the hgvs Python package. VariantValidator can, therefore, provide users with a clean, concise and user‐friendly Web interface that enables responsive validation of sequence variants.</p>
    </sec>
    <sec id="humu23348-sec-0100">
      <label>3.7</label>
      <title>Mutalyzer features not supported by VariantValidator</title>
      <p>Although VariantValidator offers an alternative to Mutalyzer, it does not yet provide the full range of functionality that Mutalyzer currently offers, for example, a HGVS name generator (<ext-link ext-link-type="uri" xlink:href="https://mutalyzer.nl/name-generator">https://mutalyzer.nl/name-generator</ext-link>); a description extractor (<ext-link ext-link-type="uri" xlink:href="https://mutalyzer.nl/description-extractor">https://mutalyzer.nl/description-extractor</ext-link>); and a function to convert amino acid substitutions into likely nucleotide substitutions (<ext-link ext-link-type="uri" xlink:href="https://mutalyzer.nl/back-translator">https://mutalyzer.nl/back-translator</ext-link>).</p>
      <p>Although the hgvs Python package functions allow all common variant types to be parsed into the necessary formats to be handled by its functions, a key strength of the package is its ability to map sequence‐level variation between different reference sequences. In the current build of the hgvs Python package (1.0.0a1), two particular variant types are currently not well supported with respect to mapping. Gene conversions can be validated with respect to sequence‐level variation and HGVS compliance. However, they cannot yet be mapped between reference sequences or mapped into theoretical protein sequence variation descriptions. In this respect, VariantValidator is only slightly less capable than Mutalyzer that can validate the syntax of a conversion description (e.g., NM_000088.3:c.4_64conNM_004006.1:c.123_171), but not project the variant to other reference sequence contexts. However, we intend to address this deficiency in a future release of VariantValidator.</p>
    </sec>
    <sec id="humu23348-sec-0110">
      <label>3.8</label>
      <title>Plans for further development</title>
      <p>The hgvs Python package and UTA are undergoing continuing development and we may consider expanding VariantValidator to provide support for additional specific types of sequence variation and reference sequence types in the future. Proper future support for inversions might allow us to use native hgvs Python package functions rather than our own custom code. Similarly, support for gene conversions would be a desirable feature. However, the desire to properly support inversions and conversion must be set against the fact that instances of such variant types are relatively rare. We are currently re‐developing our batch analysis tools (batch validator and vcf2hgvs) to enhance their performance so that results are returned to our users more quickly.</p>
    </sec>
  </sec>
</body>
<back>
  <ack id="humu23348-sec-0120">
    <title>ACKNOWLEDGMENTS</title>
    <p>We thank Andreas Massouras and Vasilis Tsiolkas at Sephator S.A. for allowing us to incorporate the functionality of VarSome into VariantValidator.</p>
  </ack>
  <ack id="humu23348-sec-0130">
    <title>DISCLOSURE STATEMENT</title>
    <p>The authors declare no conflict of interest.</p>
  </ack>
  <ref-list id="humu23348-bibl-0001">
    <title>REFERENCES</title>
    <ref id="humu23348-bib-0001">
      <mixed-citation publication-type="journal" id="humu23348-cit-0001"><string-name><surname>Aken</surname>, <given-names>B. L.</given-names></string-name>, <string-name><surname>Achuthan</surname>, <given-names>P.</given-names></string-name>, <string-name><surname>Akanni</surname>, <given-names>W.</given-names></string-name>, <string-name><surname>Amode</surname>, <given-names>M. R.</given-names></string-name>, <string-name><surname>Bernsdorff</surname>, <given-names>F.</given-names></string-name>, <string-name><surname>Bhai</surname>, <given-names>J.</given-names></string-name>, … <string-name><surname>Flicek</surname>, <given-names>P.</given-names></string-name> (<year>2017</year>). <article-title>Ensembl 2017</article-title>. <source>Nucleic Acids Research</source>, <volume>45</volume>, <fpage>D635</fpage>–<lpage>D642</lpage>.<pub-id pub-id-type="pmid">27899575</pub-id></mixed-citation>
    </ref>
    <ref id="humu23348-bib-0002">
      <mixed-citation publication-type="journal" id="humu23348-cit-0002"><string-name><surname>Dalgleish</surname>, <given-names>R.</given-names></string-name>, <string-name><surname>Flicek</surname>, <given-names>P.</given-names></string-name>, <string-name><surname>Cunningham</surname>, <given-names>F.</given-names></string-name>, <string-name><surname>Astashyn</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Tully</surname>, <given-names>R. E.</given-names></string-name>, <string-name><surname>Proctor</surname>, <given-names>G.</given-names></string-name>, … <string-name><surname>Maglott</surname>, <given-names>D. R.</given-names></string-name> (<year>2010</year>). <article-title>Locus Reference Genomic sequences: An improved basis for describing human DNA variants</article-title>. <source>Genome Medicine</source>, <volume>2</volume>, <fpage>24</fpage>.<pub-id pub-id-type="pmid">20398331</pub-id></mixed-citation>
    </ref>
    <ref id="humu23348-bib-0003">
      <mixed-citation publication-type="journal" id="humu23348-cit-0003"><string-name><surname>Danecek</surname>, <given-names>P.</given-names></string-name>, <string-name><surname>Auton</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Abecasis</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Albers</surname>, <given-names>C. A.</given-names></string-name>, <string-name><surname>Banks</surname>, <given-names>E.</given-names></string-name>, <string-name><surname>DePristo</surname>, <given-names>M. A.</given-names></string-name>, … <string-name><surname>Durbin</surname>, <given-names>R.</given-names></string-name> (<year>2011</year>). <article-title>The variant call format and VCFtools</article-title>. <source>Bioinformatics</source>, <volume>27</volume>, <fpage>2156</fpage>–<lpage>2158</lpage>.<pub-id pub-id-type="pmid">21653522</pub-id></mixed-citation>
    </ref>
    <ref id="humu23348-bib-0004">
      <mixed-citation publication-type="journal" id="humu23348-cit-0004"><string-name><surname>Deans</surname>, <given-names>Z.</given-names></string-name>, <string-name><surname>Fairley</surname>, <given-names>J. A.</given-names></string-name>, <string-name><surname>den Dunnen</surname>, <given-names>J. T.</given-names></string-name>, &amp; <string-name><surname>Clark</surname>, <given-names>C.</given-names></string-name> (<year>2016</year>). <article-title>HGVS nomenclature in practice: An example from the United Kingdom National External Quality Assessment Scheme</article-title>. <source>Human Mutation</source>, <volume>37</volume>, <fpage>576</fpage>–<lpage>578</lpage>.<pub-id pub-id-type="pmid">26919400</pub-id></mixed-citation>
    </ref>
    <ref id="humu23348-bib-0005">
      <mixed-citation publication-type="journal" id="humu23348-cit-0005"><string-name><surname>den Dunnen</surname>, <given-names>J. T.</given-names></string-name>, <string-name><surname>Dalgleish</surname>, <given-names>R.</given-names></string-name>, <string-name><surname>Maglott</surname>, <given-names>D. R.</given-names></string-name>, <string-name><surname>Hart</surname>, <given-names>R. K.</given-names></string-name>, <string-name><surname>Greenblatt</surname>, <given-names>M. S.</given-names></string-name>, <string-name><surname>McGowan‐Jordan</surname>, <given-names>J.</given-names></string-name>, … <string-name><surname>Taschner</surname>, <given-names>P. E. M.</given-names></string-name> (<year>2016</year>). <article-title>HGVS recommendations for the description of sequence variants: 2016 update</article-title>. <source>Human Mutation</source>, <volume>37</volume>, <fpage>564</fpage>–<lpage>569</lpage>.<pub-id pub-id-type="pmid">26931183</pub-id></mixed-citation>
    </ref>
    <ref id="humu23348-bib-0006">
      <mixed-citation publication-type="journal" id="humu23348-cit-0006"><string-name><surname>Hart</surname>, <given-names>R. K.</given-names></string-name>, <string-name><surname>Rico</surname>, <given-names>R.</given-names></string-name>, <string-name><surname>Hare</surname>, <given-names>E.</given-names></string-name>, <string-name><surname>Garcia</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Westbrook</surname>, <given-names>J.</given-names></string-name>, &amp; <string-name><surname>Fusaro</surname>, <given-names>V. A.</given-names></string-name> (<year>2015</year>). <article-title>A Python package for parsing, validating, mapping and formatting sequence variants using HGVS nomenclature</article-title>. <source>Bioinformatics</source>, <volume>31</volume>, <fpage>268</fpage>–<lpage>270</lpage>.<pub-id pub-id-type="pmid">25273102</pub-id></mixed-citation>
    </ref>
    <ref id="humu23348-bib-0007">
      <mixed-citation publication-type="journal" id="humu23348-cit-0007"><string-name><surname>Lek</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Karczewski</surname>, <given-names>K. J.</given-names></string-name>, <string-name><surname>Minikel</surname>, <given-names>E. V.</given-names></string-name>, <string-name><surname>Samocha</surname>, <given-names>K. E.</given-names></string-name>, <string-name><surname>Banks</surname>, <given-names>E.</given-names></string-name>, <string-name><surname>Fennell</surname>, <given-names>T.</given-names></string-name>, … <string-name><surname>MacArthur</surname>, <given-names>D. G.</given-names></string-name> (<year>2016</year>). <article-title>Analysis of protein‐coding genetic variation in 60,706 humans</article-title>. <source>Nature</source>, <volume>536</volume>, <fpage>285</fpage>–<lpage>291</lpage>.<pub-id pub-id-type="pmid">27535533</pub-id></mixed-citation>
    </ref>
    <ref id="humu23348-bib-0008">
      <mixed-citation publication-type="journal" id="humu23348-cit-0008"><string-name><surname>MacArthur</surname>, <given-names>J. A. L.</given-names></string-name>, <string-name><surname>Morales</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Tully</surname>, <given-names>R. E.</given-names></string-name>, <string-name><surname>Astashyn</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Gil</surname>, <given-names>L.</given-names></string-name>, <string-name><surname>Bruford</surname>, <given-names>E. A.</given-names></string-name>, … <string-name><surname>Cunningham</surname>, <given-names>F.</given-names></string-name> (<year>2014</year>). <article-title>Locus Reference Genomic: Reference sequences for the reporting of clinically relevant sequence variants</article-title>. <source>Nucleic Acids Research</source>, <volume>42</volume>, <fpage>D873</fpage>–<lpage>D878</lpage>.<pub-id pub-id-type="pmid">24285302</pub-id></mixed-citation>
    </ref>
    <ref id="humu23348-bib-0009">
      <mixed-citation publication-type="journal" id="humu23348-cit-0009"><string-name><surname>McLaren</surname>, <given-names>W.</given-names></string-name>, <string-name><surname>Gil</surname>, <given-names>L.</given-names></string-name>, <string-name><surname>Hunt</surname>, <given-names>S. E.</given-names></string-name>, <string-name><surname>Riat</surname>, <given-names>H. S.</given-names></string-name>, <string-name><surname>Ritchie</surname>, <given-names>G. R. S.</given-names></string-name>, <string-name><surname>Thormann</surname>, <given-names>A.</given-names></string-name>, … <string-name><surname>Cunningham</surname>, <given-names>F.</given-names></string-name> (<year>2016</year>). <article-title>The Ensembl variant effect predictor</article-title>. <source>Genome Biology</source>, <volume>17</volume>, <fpage>122</fpage>.<pub-id pub-id-type="pmid">27268795</pub-id></mixed-citation>
    </ref>
    <ref id="humu23348-bib-0010">
      <mixed-citation publication-type="journal" id="humu23348-cit-0010"><string-name><surname>Molyneux</surname>, <given-names>K.</given-names></string-name>, <string-name><surname>Starman</surname>, <given-names>B. J.</given-names></string-name>, <string-name><surname>Byers</surname>, <given-names>P. H.</given-names></string-name>, &amp; <string-name><surname>Dalgleish</surname>, <given-names>R.</given-names></string-name> (<year>1993</year>). <article-title>A single amino acid deletion in the α2(I) chain of type I collagen produces osteogenesis imperfecta type III</article-title>. <source>Human Genetics</source>, <volume>90</volume>, <fpage>621</fpage>–<lpage>628</lpage>.<pub-id pub-id-type="pmid">8444468</pub-id></mixed-citation>
    </ref>
    <ref id="humu23348-bib-0011">
      <mixed-citation publication-type="journal" id="humu23348-cit-0011"><string-name><surname>O'Leary</surname>, <given-names>N. A.</given-names></string-name>, <string-name><surname>Wright</surname>, <given-names>M. W.</given-names></string-name>, <string-name><surname>Brister</surname>, <given-names>J. R.</given-names></string-name>, <string-name><surname>Ciufo</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Haddad</surname>, <given-names>D.</given-names></string-name>, <string-name><surname>McVeigh</surname>, <given-names>R.</given-names></string-name>, … <string-name><surname>Pruitt</surname>, <given-names>K. D.</given-names></string-name> (<year>2016</year>). <article-title>Reference sequence (RefSeq) database at NCBI: Current status, taxonomic expansion, and functional annotation</article-title>. <source>Nucleic Acids Research</source>, <volume>44</volume>, <fpage>D733</fpage>–<lpage>D745</lpage>.<pub-id pub-id-type="pmid">26553804</pub-id></mixed-citation>
    </ref>
    <ref id="humu23348-bib-0012">
      <mixed-citation publication-type="journal" id="humu23348-cit-0012"><string-name><surname>Richards</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Aziz</surname>, <given-names>N.</given-names></string-name>, <string-name><surname>Bale</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Bick</surname>, <given-names>D.</given-names></string-name>, <string-name><surname>Das</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Gastier‐Foster</surname>, <given-names>J.</given-names></string-name>, … <string-name><surname>Rehm</surname>, <given-names>H. L.</given-names></string-name> (<year>2015</year>). <article-title>Standards and guidelines for the interpretation of sequence variants: A joint consensus recommendation of the American College of Medical Genetics and Genomics and the Association for Molecular Pathology</article-title>. <source>Genetics in Medicine</source>, <volume>17</volume>, <fpage>405</fpage>–<lpage>424</lpage>.<pub-id pub-id-type="pmid">25741868</pub-id></mixed-citation>
    </ref>
    <ref id="humu23348-bib-0013">
      <mixed-citation publication-type="journal" id="humu23348-cit-0013"><string-name><surname>Tack</surname>, <given-names>V.</given-names></string-name>, <string-name><surname>Deans</surname>, <given-names>Z. C.</given-names></string-name>, <string-name><surname>Wolstenhome</surname>, <given-names>N.</given-names></string-name>, <string-name><surname>Patton</surname>, <given-names>S.</given-names></string-name>, &amp; <string-name><surname>Dequeker</surname>, <given-names>E. M. C.</given-names></string-name> (<year>2016</year>). <article-title>What's in a name? A co‐ordinated approach towards a uniform nomenclature to improve patient reports and databases</article-title>. <source>Human Mutation</source>, <volume>37</volume>, <fpage>570</fpage>–<lpage>575</lpage>.<pub-id pub-id-type="pmid">26920083</pub-id></mixed-citation>
    </ref>
    <ref id="humu23348-bib-0014">
      <mixed-citation publication-type="journal" id="humu23348-cit-0014"><string-name><surname>Taschner</surname>, <given-names>P. E. M.</given-names></string-name>, &amp; <string-name><surname>den Dunnen</surname>, <given-names>J. T.</given-names></string-name> (<year>2011</year>). <article-title>Describing structural changes by extending HGVS sequence variation nomenclature</article-title>. <source>Human Mutation</source>, <volume>32</volume>, <fpage>507</fpage>–<lpage>511</lpage>.<pub-id pub-id-type="pmid">21309030</pub-id></mixed-citation>
    </ref>
    <ref id="humu23348-bib-0015">
      <mixed-citation publication-type="journal" id="humu23348-cit-0015"><string-name><surname>Wildeman</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>van Ophuizen</surname>, <given-names>E.</given-names></string-name>, <string-name><surname>den Dunnen</surname>, <given-names>J. T.</given-names></string-name>, &amp; <string-name><surname>Taschner</surname>, <given-names>P. E. M.</given-names></string-name> (<year>2008</year>). <article-title>Improving sequence variant descriptions in mutation databases and literature using the Mutalyzer sequence variation nomenclature checker</article-title>. <source>Human Mutation</source>, <volume>29</volume>, <fpage>6</fpage>–<lpage>13</lpage>.<pub-id pub-id-type="pmid">18000842</pub-id></mixed-citation>
    </ref>
    <ref id="humu23348-bib-0016">
      <mixed-citation publication-type="journal" id="humu23348-cit-0016"><string-name><surname>Willaert</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Malfait</surname>, <given-names>F.</given-names></string-name>, <string-name><surname>Symoens</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Gevaert</surname>, <given-names>K.</given-names></string-name>, <string-name><surname>Kayserili</surname>, <given-names>H.</given-names></string-name>, <string-name><surname>Megarbane</surname>, <given-names>A.</given-names></string-name>, … <string-name><surname>De Paepe</surname>, <given-names>A.</given-names></string-name> (<year>2009</year>). <article-title>Recessive osteogenesis imperfecta caused by LEPRE1 mutations: Clinical documentation and identification of the splice form responsible for prolyl 3‐hydroxylation</article-title>. <source>Journal of Medical Genetics</source>, <volume>46</volume>, <fpage>233</fpage>–<lpage>241</lpage>.<pub-id pub-id-type="pmid">19088120</pub-id></mixed-citation>
    </ref>
    <ref id="humu23348-bib-0017">
      <mixed-citation publication-type="journal" id="humu23348-cit-0017"><string-name><surname>Yates</surname>, <given-names>B.</given-names></string-name>, <string-name><surname>Braschi</surname>, <given-names>B.</given-names></string-name>, <string-name><surname>Gray</surname>, <given-names>K. A.</given-names></string-name>, <string-name><surname>Seal</surname>, <given-names>R. L.</given-names></string-name>, <string-name><surname>Tweedie</surname>, <given-names>S.</given-names></string-name>, &amp; <string-name><surname>Bruford</surname>, <given-names>E. A.</given-names></string-name> (<year>2017</year>). <article-title>Genenames.org: The HGNC and VGNC resources in 2017</article-title>. <source>Nucleic Acids Research</source>, <volume>45</volume>, <fpage>D619</fpage>–<lpage>D625</lpage>.<pub-id pub-id-type="pmid">27799471</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

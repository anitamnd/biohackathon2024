<?DTDIdentifier.IdentifierValue article.dtd?>
<?DTDIdentifier.IdentifierType system?>
<?SourceDTD.DTDName article.dtd?>
<?SourceDTD.Version 1.0?>
<?ConverterInfo.XSLTName bmc2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Res Notes</journal-id>
    <journal-title-group>
      <journal-title>BMC Research Notes</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1756-0500</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">3278344</article-id>
    <article-id pub-id-type="publisher-id">1756-0500-5-27</article-id>
    <article-id pub-id-type="pmid">22244497</article-id>
    <article-id pub-id-type="doi">10.1186/1756-0500-5-27</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Technical Note</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>BarraCUDA - a fast short read sequence aligner using graphics processing units</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" equal-contrib="yes" id="A1">
        <name>
          <surname>Klus</surname>
          <given-names>Petr</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>petr@klus.co.uk</email>
      </contrib>
      <contrib contrib-type="author" equal-contrib="yes" id="A2">
        <name>
          <surname>Lam</surname>
          <given-names>Simon</given-names>
        </name>
        <xref ref-type="aff" rid="I2">2</xref>
        <email>simon@icyjuice.net</email>
      </contrib>
      <contrib contrib-type="author" id="A3">
        <name>
          <surname>Lyberg</surname>
          <given-names>Dag</given-names>
        </name>
        <xref ref-type="aff" rid="I3">3</xref>
        <email>110221828@umail.ucc.ie</email>
      </contrib>
      <contrib contrib-type="author" id="A4">
        <name>
          <surname>Cheung</surname>
          <given-names>Ming Sin</given-names>
        </name>
        <xref ref-type="aff" rid="I4">4</xref>
        <email>msc51@cam.ac.uk</email>
      </contrib>
      <contrib contrib-type="author" id="A5">
        <name>
          <surname>Pullan</surname>
          <given-names>Graham</given-names>
        </name>
        <xref ref-type="aff" rid="I5">5</xref>
        <email>gp10006@cam.ac.uk</email>
      </contrib>
      <contrib contrib-type="author" id="A6">
        <name>
          <surname>McFarlane</surname>
          <given-names>Ian</given-names>
        </name>
        <xref ref-type="aff" rid="I2">2</xref>
        <email>im238@cam.ac.uk</email>
      </contrib>
      <contrib contrib-type="author" id="A7">
        <name>
          <surname>Yeo</surname>
          <given-names>Giles SH</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>gshy2@cam.ac.uk</email>
      </contrib>
      <contrib contrib-type="author" corresp="yes" id="A8">
        <name>
          <surname>Lam</surname>
          <given-names>Brian YH</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>yhbl2@cam.ac.uk</email>
      </contrib>
    </contrib-group>
    <aff id="I1"><label>1</label>University of Cambridge Metabolic Research Laboratories, Institute of Metabolic Science, Box 289, Addenbrooke's Hospital, Hill's Road, Cambridge CB2 0QQ, UK</aff>
    <aff id="I2"><label>2</label>Genomics CoreLab, NIHR-Cambridge Biomedical Research Centre, Box 232, Addenbrooke's Hospital, Hill's Road, Cambridge CB2 0QQ, UK</aff>
    <aff id="I3"><label>3</label>Department of Microbiology, University College Cork, College Road, Cork, Ireland</aff>
    <aff id="I4"><label>4</label>The Gurdon Institute, University of Cambridge, Tennis Court Road, Cambridge CB2 1QN, UK</aff>
    <aff id="I5"><label>5</label>Whittle Laboratory, University of Cambridge, JJ Thomson Avenue, Cambridge CB3 0DY, UK</aff>
    <pub-date pub-type="collection">
      <year>2012</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>13</day>
      <month>1</month>
      <year>2012</year>
    </pub-date>
    <volume>5</volume>
    <fpage>27</fpage>
    <lpage>27</lpage>
    <history>
      <date date-type="received">
        <day>16</day>
        <month>11</month>
        <year>2011</year>
      </date>
      <date date-type="accepted">
        <day>13</day>
        <month>1</month>
        <year>2012</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright Â©2012 Klus et al; licensee BioMed Central Ltd.</copyright-statement>
      <copyright-year>2012</copyright-year>
      <copyright-holder>Klus et al; licensee BioMed Central Ltd.</copyright-holder>
      <license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0">http://creativecommons.org/licenses/by/2.0</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="http://www.biomedcentral.com/1756-0500/5/27"/>
    <abstract>
      <sec>
        <title>Background</title>
        <p>With the maturation of next-generation DNA sequencing (NGS) technologies, the throughput of DNA sequencing reads has soared to over 600 gigabases from a single instrument run. General purpose computing on graphics processing units (GPGPU), extracts the computing power from hundreds of parallel stream processors within graphics processing cores and provides a cost-effective and energy efficient alternative to traditional high-performance computing (HPC) clusters. In this article, we describe the implementation of BarraCUDA, a GPGPU sequence alignment software that is based on BWA, to accelerate the alignment of sequencing reads generated by these instruments to a reference DNA sequence.</p>
      </sec>
      <sec>
        <title>Findings</title>
        <p>Using the NVIDIA Compute Unified Device Architecture (CUDA) software development environment, we ported the most computational-intensive alignment component of BWA to GPU to take advantage of the massive parallelism. As a result, BarraCUDA offers a magnitude of performance boost in alignment throughput when compared to a CPU core while delivering the same level of alignment fidelity. The software is also capable of supporting multiple CUDA devices in parallel to further accelerate the alignment throughput.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p>BarraCUDA is designed to take advantage of the parallelism of GPU to accelerate the alignment of millions of sequencing reads generated by NGS instruments. By doing this, we could, at least in part streamline the current bioinformatics pipeline such that the wider scientific community could benefit from the sequencing technology.</p>
        <p>BarraCUDA is currently available from <ext-link ext-link-type="uri" xlink:href="http://seqbarracuda.sf.net">http://seqbarracuda.sf.net</ext-link></p>
      </sec>
    </abstract>
  </article-meta>
</front>
<body>
  <sec>
    <title>Background</title>
    <p>Next-generation sequencing (NGS) is a technique based on sequencing by synthesis or sequencing by ligation in a massively parallel fashion and generates short sequencing reads ranging from 25 to 400 bp. The first commercially available next-generation sequencer, the Genome Sequencer 20 was released by 454 Life Sciences in 2005 [<xref ref-type="bibr" rid="B1">1</xref>] with the hope of enabling the analysis of complete genomes within a short period of time [<xref ref-type="bibr" rid="B2">2</xref>]. It produced a throughput of 20 megabases from a 5-hour run, which was 30 fold higher than traditional Sanger capillary electrophoresis systems. Over these years, the output of next-generation sequencers has increased 30, 000 fold to 600 gigabases from a single instrument run (Illumina Hiseq 2000) which is about 200 times the depth of coverage of an entire human genome.</p>
    <p>The advancement of the technology has generated an enormous amount of sequence data [<xref ref-type="bibr" rid="B3">3</xref>]. Sequence alignment is one of the first steps for downstream data analyses, during which sequencing reads have to be mapped either to other reads to form a genome (also known as <italic>de novo </italic>sequence assembly) [<xref ref-type="bibr" rid="B1">1</xref>,<xref ref-type="bibr" rid="B4">4</xref>]; or on to a reference DNA sequence, usually a genome, for downstream applications such as single-nucleotide polymorphism (SNP) discovery [<xref ref-type="bibr" rid="B3">3</xref>], Chip-Seq [<xref ref-type="bibr" rid="B5">5</xref>] or RNA-Seq [<xref ref-type="bibr" rid="B6">6</xref>]. Here we focus on the latter type of alignments.</p>
    <p>A handful of software packages have been developed for computing alignments of sequencing reads generated by NGS instruments on to a reference sequence. Early generation aligners such as MAQ [<xref ref-type="bibr" rid="B7">7</xref>], RMAP [<xref ref-type="bibr" rid="B8">8</xref>,<xref ref-type="bibr" rid="B9">9</xref>] and Soap [<xref ref-type="bibr" rid="B10">10</xref>] use hash-based algorithms to perform the mapping of sequencing reads on to reference genomes. Even though these tools can be accelerated by several seeding approaches, or parallelized by using multiple cores and cloud computing (e.g. CloudBurst [<xref ref-type="bibr" rid="B11">11</xref>]), the computational cost remains expensive. For example, by extrapolating the result from Schtaz et al. [<xref ref-type="bibr" rid="B11">11</xref>], it would take over 30, 000 CPU hours to align reads generated from a single HiSeq 2000 run.</p>
    <p>Later in 2009, a new generation of sequence aligners were released, namely Soap2 [<xref ref-type="bibr" rid="B12">12</xref>], Bowtie [<xref ref-type="bibr" rid="B13">13</xref>] and BWA [<xref ref-type="bibr" rid="B14">14</xref>]. These tools use a suffix tree-based algorithm (also known as FM-index) based on Burrows-Wheeler Transform (BWT). BWT is a block-sorting algorithm originally designed for lossless data compression [<xref ref-type="bibr" rid="B15">15</xref>], it can also be used for string matching by a backward search approach [<xref ref-type="bibr" rid="B16">16</xref>]. The major advantages of this approach include a low time complexity of <italic>O</italic>(<italic>n</italic>) to find an exact match where <italic>n </italic>is the length of the query [<xref ref-type="bibr" rid="B16">16</xref>] and the performance is independent from the size of the reference sequence. In addition, a high compression ratio of 2.5 bit per base for the reference genome [<xref ref-type="bibr" rid="B17">17</xref>] also means a full human genome can fit into 1.3 GB of space. The new algorithm is a magnitude quicker and much more memory efficient than their hash-based predecessors [<xref ref-type="bibr" rid="B14">14</xref>]. In an experiment performed by Li and Durbin [<xref ref-type="bibr" rid="B14">14</xref>] the alignment throughput for 12.2 million 51 bp reads being mapped to the Human genome went down from 94 CPU hours (MAQ) to 4 CPU hours (BWA) on a 2.5 GHz Intel Harpertown-based Xeon E5420 while retaining comparable accuracy in alignment mapping.</p>
    <p>Modern graphics cards are designed primarily for rendering real time, high-definition complex 3D graphics features for various visual applications such as gaming and graphics design. Each graphics processing unit, or GPU, consists of many high performance stream processors capable of performing billions of independent calculations per second in order to meet the high visualization demand required for graphics applications. It is this processing capability that can be translated into a general-purpose computation capability equivalent to a small cluster of traditional CPUs. In addition, the lower energy profile and cost means the use of GPU to perform parallel computing tasks has become increasingly attractive. Many modern supercomputers including the Chinese Tianhe-1A, Nebulae and Japanese Tsubame 2.0 (<ext-link ext-link-type="uri" xlink:href="http://www.top500.org/lists/2010/11">http://www.top500.org/lists/2010/11</ext-link>) also contain multiple GPU nodes on top of traditional nodes with CPUs to take advantage to the parallel computing capability of GPUs.</p>
    <p>MUMmerGPU [<xref ref-type="bibr" rid="B18">18</xref>,<xref ref-type="bibr" rid="B19">19</xref>] is one of the first GPGPU-based DNA alignment software that utilizes the NVIDIA Compute Unified Device Architecture (CUDA) to perform variable-length maximal exact DNA alignments. Unlike other BWT aligners it uses a different suffix-tree approach, namely Ukkonen's algorithm [<xref ref-type="bibr" rid="B20">20</xref>] to find exact matches in the reference sequence of all the sub-strings in the query DNA sequence. The current version of MUMmer GPU out-performs its CPU counterpart by 13 fold [<xref ref-type="bibr" rid="B18">18</xref>,<xref ref-type="bibr" rid="B19">19</xref>]. However, unlike other sequence aligners mentioned in the previous section, MUMmerGPU does not support inexact alignments by itself and has to be used in conjunction with the original MUMmer software package [<xref ref-type="bibr" rid="B21">21</xref>] to perform inexact alignments.</p>
    <p>Here we introduce BarraCUDA, a program that takes advantage of GPGPU to perform inexact alignment of sequencing reads on to a reference sequence. BarraCUDA is built on the foundation of BWA and we have rewritten the BWT-based alignment core module to make use of the massive parallelism of GPGPU. It also employs the fast and memory efficient BWT-based algorithm employed in the original software and supports mismatches and full gapped alignment of sequencing reads.</p>
    <sec>
      <title>Software implementation</title>
      <p>BarraCUDA utilises NVIDIA's GPGPU implementation, namely Compute Unified Device Architecture (CUDA) to parallelise the alignment of sequence reads. Firstly, the program loads the complete BWT-encoded reference sequence and sequence reads from disk to GPU memory; This is followed by launching a GPU alignment kernel, where the alignment task of each of the sequence reads are distributed to hundreds of processors within the GPU and computations are performed in parallel; Once the kernel finishes, the alignment results are transferred from GPU back to disk. The following sections describe the details of each of the steps performed in BarraCUDA. (Please also refer to the Additional file <xref ref-type="supplementary-material" rid="S1">1</xref> for the pseudo-code algorithm framework)</p>
      <sec>
        <title>1. Transferring BWT-encoded reference sequence and sequence reads from disk to GPU</title>
        <p>BarraCUDA first loads the full BWT suffix array from disk into cached texture memory in the GPU using a 1-dimensional <italic>uint4 </italic>array to ensure fast data access. Sequence reads are loaded into GPU memory in batches and packed in a single continuous block to minimise internal fragmentations, and the data is also bound to the texture cache to maximise the data throughput.</p>
      </sec>
      <sec>
        <title>2. CUDA thread assignments</title>
        <p>Mapping a sequence read to a reference sequence is a data independent process and does not require any information from any of the other reads, thus BarraCUDA employs a straightforward data parallelism by assigning an alignment kernel thread to each of the individual sequencing reads and launching the GPU kernel with tens of thousands of threads at the same time.</p>
      </sec>
      <sec>
        <title>3. Inexact sequence alignment--a depth-first search GPU kernel</title>
        <p>The alignment kernel in BarraCUDA, like BWA and all other BWT-based sequence aligners, consists of a backward search string-matching algorithm [<xref ref-type="bibr" rid="B13">13</xref>,<xref ref-type="bibr" rid="B14">14</xref>] to look for alignments. Inexact alignment requires a search space of <italic>O</italic>(9<italic><sup>n</sup></italic>) in order to generate and evaluate a series of base substitutions that could lead to an exact string match (Figure <xref ref-type="fig" rid="F1">1a</xref>). BarraCUDA differs from BWA in its strategy to perform search traversal. While BWA utilises a time efficient breadth-first search (BFS) approach as shown in Figure <xref ref-type="fig" rid="F1">1b</xref>, it can utilize a maximum of 40 MB of memory space for each computational thread (please refer to the Additional file <xref ref-type="supplementary-material" rid="S1">1</xref> for explanations). With thousands of concurrent threads on the GPU, the memory to each thread is very limited and BFS does not seem to be an option. Therefore in BarraCUDA, we adopted a difference-bound DFS approach (as outlined in Figure <xref ref-type="fig" rid="F1">1c</xref>) where it uses 20, 000 fold less memory to perform alignments (see Additional file <xref ref-type="supplementary-material" rid="S1">1</xref>). Rather than storing all partial hits while traversing through the search space, the DFS algorithm only stores in memory the branch of the search space with the local best hit score, i.e. (1), (1, 1) followed by (1, 1, 1) to give a full alignment (Figure <xref ref-type="fig" rid="F1">1c</xref>). Nonetheless, DFS is not as time efficient as BFS employed in BWA, BarraCUDA has to re-assess nodes multiple times until all possible hits from that node are evaluated, for instance in Figure <xref ref-type="fig" rid="F1">1c</xref>, the program has to return from (1, 1, 1) to (1, 1) in order to reach (1, 1, 3) as the next best hit, and this is particular a problem when the read length is long and the search space is extremely large.</p>
        <fig id="F1" position="float">
          <label>Figure 1</label>
          <caption>
            <p><bold>The search space traversal for inexact alignments</bold>. <bold>A</bold>. There are 4 types of alignments for each base, namely exact match, mismatch, insertion and deletion. A mismatch alignment is performed by substituting the reference base G with the three other possible bases (A, T and C). Insertions are detected by deleting the base from the query sequence, and deletions by inserting all 4 bases into the query sequence. <bold>B</bold>. A BFS strategy: BFS starts from the first base (1) and stores all hits in daughter nodes (1, 1)...(1, 3) in memory (with shaded squares), then it chooses (1, 1) and expands it into (1, 1, 1) ... (1, 1, 3). With all the nodes in memory, the agent then evaluates (1, 1, 1) which returns an alignment followed by (1, 1, 3), a suboptimal alignment, which is the next best hit in memory. After that the agent proceeds to (1, 2) which has the same number of differences as (1, 1, 3). BWA does not process nodes with more than z + 1 differences, i.e. (1, 3), (1, 1, 2) with the default option. <bold>C</bold>. A DFS strategy: DFS chooses the best hit (1, 1) from (1), and subsequently chooses (1, 1, 1) which returns an alignment. Then the agent goes back to (1, 1) to reach (1, 1, 3) as the next best hit to return the sub-optimal alignment. After that, the agent returns to (1, 1), then (1) to reach (1, 2) (not shown). Like BWA, BarraCUDA skips nodes with &gt; z + 1 differences by default.</p>
          </caption>
          <graphic xlink:href="1756-0500-5-27-1"/>
        </fig>
      </sec>
      <sec>
        <title>4. Multiple kernel design</title>
        <p>Long sequence reads are divided into short fragments 32 bp (default seed length) and alignment is performed by multiple consecutive DFS kernel runs. Figure <xref ref-type="fig" rid="F2">2</xref> illustrates an example of such approach with the alignment of a 5 bp read, the first DFS kernel (GPU thread A) only maps up to the third base (nodes 3.1, 5.1 and 6.1), and partial alignments at this point are returned from the GPU and stored in a temporary memory stack on the host computer (rounded square). After that, similar to BWA's BFS, all partial hits in the host memory store are ranked by their number of differences by the host code where the best hits are prioritised for the subsequent kernel launch, (i.e. GPU thread B, GPU thread C followed by GPU thread D). By doing this, we could reduce significantly the number of revisits by the DFS agent to the length of the fragments (32 bp), and thus lower the serialisations caused by thread divergence compared to alignment using one single kernel. In addition, this could also allow us to discard partial hits that have more than <italic>z </italic>+ 1 differences on the memory stack, as in BWA, when a full alignment is found, to increase the computing efficiency.</p>
        <fig id="F2" position="float">
          <label>Figure 2</label>
          <caption>
            <p><bold>A multiple kernel design</bold>. The alignment of a sequencing read is performed by multiple DFS kernel threads. Each of the sequencing reads is partitioned into short fragments and multiple kernel threads are launched to map each of the fragments to the reference in a consecutive manner. The figure shows an example of mapping a 5 bp read: The first kernel thread (A) processes only the first 3 bp and returns partial hits (3), (5) and (6) to a temporary memory store in the host computer, ranked according to the number of differences in these hits, mimicking the BFS strategy in BWA. Following that, threads (B), (C) and (D) are launched in an orderly manner to map the remaining 2 bp to obtain the full alignments (5, 3) and (6, 3).</p>
          </caption>
          <graphic xlink:href="1756-0500-5-27-2"/>
        </fig>
      </sec>
      <sec>
        <title>5. Alignment data management</title>
        <p>During runtime, the alignment data for each of the sequence reads including BWT suffix array (SA) coordinates and the number of differences is stored temporarily in GPU memory. Once the kernel finishes, the data are copied from the GPU back to the host and subsequently written onto disk storage in a binary file format. Similar to BWA, the SA coordinates can then be translated to linear space using BarraCUDA's 'samse' or 'sampe' cores for single-end or paired-end libraries respectively.</p>
      </sec>
    </sec>
  </sec>
  <sec>
    <title>Findings</title>
    <sec>
      <title>BarraCUDA shares a similar alignment accuracy as BWA</title>
      <p>It is important that the changes in the search algorithm and alignment criteria in BarraCUDA do not penalize the alignment accuracy of the software. To test this, we first generated a library of 1 million pairs of simulated reads of 70 bp from the <italic>Caenorhabditis Elegans </italic>genome (WS200.55, 102 million bp) using 'wgsim' from SAMtools [<xref ref-type="bibr" rid="B22">22</xref>] with a base error rate of 0.02. We then mapped the reads back to the same genome using BWA and BarraCUDA. To measure the mapping accuracy we calculated the percentage of reads mapped, and the rate of incorrect mappings using a mapping quality threshold of 10 (Phred-scale). As shown in Table <xref ref-type="table" rid="T1">1</xref>, both BWA and BarraCUDA reported a similar percentage of reads mapped to the <italic>C. Elegans </italic>genome at around 90% and 96% single-end and paired-end respectively. The error rate was also very similar between BWA and BarraCUDA, where about 0.06% of both single and paired end reads were incorrectly aligned to the genome.</p>
      <table-wrap id="T1" position="float">
        <label>Table 1</label>
        <caption>
          <p>Alignment accuracy compared to BWA using simulated reads</p>
        </caption>
        <table frame="hsides" rules="groups">
          <thead>
            <tr>
              <th/>
              <th align="left" colspan="2">BWA</th>
              <th align="left" colspan="2">BarraCUDA</th>
            </tr>
            <tr>
              <th/>
              <th colspan="4">
                <hr/>
              </th>
            </tr>
            <tr>
              <th/>
              <th align="left">Gap enabled</th>
              <th align="left">Gap disabled</th>
              <th align="left">Gap enabled</th>
              <th align="left">Gap disabled</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">
                <bold>Single-end</bold>
              </td>
              <td/>
              <td/>
              <td/>
              <td/>
            </tr>
            <tr>
              <td colspan="5">
                <hr/>
              </td>
            </tr>
            <tr>
              <td align="left">% Mapped</td>
              <td align="left">89.95</td>
              <td align="left">91.01</td>
              <td align="left">91.42</td>
              <td align="left">91.14</td>
            </tr>
            <tr>
              <td colspan="5">
                <hr/>
              </td>
            </tr>
            <tr>
              <td align="left">% Error</td>
              <td align="left">0.06</td>
              <td align="left">0.04</td>
              <td align="left">0.05</td>
              <td align="left">0.05</td>
            </tr>
            <tr>
              <td colspan="5">
                <hr/>
              </td>
            </tr>
            <tr>
              <td align="left">
                <bold>Paired-end</bold>
              </td>
              <td/>
              <td/>
              <td/>
              <td/>
            </tr>
            <tr>
              <td colspan="5">
                <hr/>
              </td>
            </tr>
            <tr>
              <td align="left">% Mapped</td>
              <td align="left">96.53</td>
              <td align="left">96.50</td>
              <td align="left">96.61</td>
              <td align="left">96.64</td>
            </tr>
            <tr>
              <td colspan="5">
                <hr/>
              </td>
            </tr>
            <tr>
              <td align="left">% Error </td>
              <td align="left">0.04</td>
              <td align="left">0.04</td>
              <td align="left">0.06</td>
              <td align="left">0.06</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
    </sec>
    <sec>
      <title>Ungapped alignment has minimal effects on alignment accuracy</title>
      <p>Gapped alignment is costly in terms of alignment throughput, due to the much larger search space <italic>O</italic>(9<italic><sup>n</sup></italic>) compared to <italic>O</italic>(4<italic><sup>n</sup></italic>) when gap opening is disabled (Figure <xref ref-type="fig" rid="F1">1a</xref>). In a separate experiment, we performed the alignment of the same set of data above with gap opening disabled (using option '-o 0') and found that the number of confident mappings and the error rates were largely unaffected (Table <xref ref-type="table" rid="T1">1</xref>).</p>
      <p>The choice between gapped and ungapped alignment is largely dependent on the nature of the sequencing experiments. For re-sequencing studies, gapped alignment is essential to minimise false positive variant calls [<xref ref-type="bibr" rid="B23">23</xref>]. On the other hand, we would recommend disabling gap opening using option '-o 0' for experiments such as Chip-seq or RNA-seq for good performance.</p>
    </sec>
    <sec>
      <title>Gapped alignment throughput of a GPU is equivalent to that of 6 CPU cores</title>
      <p>The alignment throughputs of BarraCUDA and BWA were measured by mapping 2 sets of paired-end whole-genome shotgun libraries containing sequencing reads of 37 bp, and 76 bp in length (1000 Genomes Project, European Nucleotide Archive accession: ERR003014 and SRR032215 respectively) on to the human genome (NCBI36.54).</p>
      <p>For BWT-index construction, both BWA and BarraCUDA utilize the same BWT-indexing core [<xref ref-type="bibr" rid="B24">24</xref>] and took about 1.5 h to complete (data not shown). The encoded genome was 2.6 GB including both the forward and reverse BWT indices. It is useful to note that all BWT-related files (.bwt,.rbwt,.ann,.sa,.rsa,.pac,.rpac) only needed to be generated once, and that the files are compatible between the two programs.</p>
      <p>Figure <xref ref-type="fig" rid="F3">3a</xref> and <xref ref-type="fig" rid="F3">3b</xref> depicts the relative alignment throughputs (including the alignment 'aln' core in blue and SAM output 'sampe' core in red) for the 37 bp read library of BWA and BarraCUDA respectively. For gapped alignments, running BWA alignment core with an Intel Westmere-based Xeon X5670 2.93 GHz CPU and 8 GB DDR3 memory with 1 thread took 67 m 56 s to map all the 11.3 million pairs of reads in the library, while the time taken was reduced to 11 m 51 s when the same task was performed using all 6 cores on the CPU (Figure <xref ref-type="fig" rid="F3">3a</xref>). On the other hand, BarraCUDA took 10 m 51 s to perform the same task using an NVIDIA Tesla M2090, which was on a par with BWA using all 6 cores on the X5670.</p>
      <fig id="F3" position="float">
        <label>Figure 3</label>
        <caption>
          <p><bold>A comparison of alignment throughput of BWA and BarraCUDA in align real-life sequencing reads to the human genome</bold>. Two whole-genome shotgun libraries from the 1000 Genomes Project were used to compare the paired-end alignment throughput between BWA and BarraCUDA. <bold>A</bold>. 11.3 million pairs of 37 bp reads (ENA accession: ERR003014) were aligned to the human genome (NCBI 36.54) using BWA v0.5.8 with a server class Intel Xeon 5670 (utilising 1 or 6 threads) and BarraCUDA with an NVIDIA Tesla M2090, both with default options. The figure shows the time taken for 'aln' core (in blue) and 'sampe' core (in red); <bold>B</bold>. The time taken with gap opening disabled using the option '-o 0'; <bold>C</bold>. The time taken to align 14.5 million pairs of 76 bp reads (ENA accession: SRR032215) using the same set of hardware; <bold>D</bold>. The timings with gap opening disabled.</p>
        </caption>
        <graphic xlink:href="1756-0500-5-27-3"/>
      </fig>
      <p>For ungapped alignments, while BWA exhibited a speed increase of 14.6% with 6 threads, we observed a 2.1 fold speed-up in BarraCUDA compared to gapped alignment (Figure <xref ref-type="fig" rid="F3">3b</xref>). In this experiment, BarraCUDA only took 5 m 46 s to align all 11.3 million pairs of read onto the human genome, almost half the time taken by BWA with 6 threads.</p>
      <p>The SAM conversion 'samse' and 'sampe' cores in BWA, which convert alignments coordinates from BWT SA intervals back to linear space on the reference genome, are comparative less computational intensive than the alignment core as seen in Figure <xref ref-type="fig" rid="F3">3</xref> and thus do not make use of multiple threads. We did not port the 'samse/sampe' to GPU in this version of BarraCUDA, but we improved the conversion speed by an average of 27% through the use of a more efficient memory management strategy in working with BWT indices.</p>
      <p>With increased number of reads and a longer read length when aligning the 76 bp library, both software took a longer time to complete the mappings (Figure <xref ref-type="fig" rid="F3">3c</xref>). BWA with a single thread took almost 4 h to complete the gapped alignment of 14 million pairs of sequencing reads in the library, it was significantly shortened to 46 m 10 s when all 6 cores on the X5670 were used. BarraCUDA took 40 m 1 s to complete the alignment that was again similar to BWA with 6 threads.</p>
      <p>When gap opening was disabled, the throughput of BWA was doubled (Figure <xref ref-type="fig" rid="F3">3d</xref>). Similarly, the time taken for BarraCUDA was also significantly shortened when gapped alignment was disabled, to 16 m 21 s which is 56% faster than BWA with 6 threads.</p>
      <p>The 'sampe' core, on the other hand was not affected by the size and the read length of the library and took roughly the same time as the 37 bp library to convert the alignment coordinates. Again, BarraCUDA version of 'sampe' was slightly faster than BWA in this test.</p>
    </sec>
    <sec>
      <title>Percentage of mappings</title>
      <p>The percentage of confident mappings was similar between BWA and BarraCUDA (Table <xref ref-type="table" rid="T2">2</xref>), and like the artificial <italic>C. Elegans </italic>data set, the effect on the percentage of mapping by disabling gapped alignments was minimal.</p>
      <table-wrap id="T2" position="float">
        <label>Table 2</label>
        <caption>
          <p>The percentage of confident mappings between BWA and BarraCUDA</p>
        </caption>
        <table frame="hsides" rules="groups">
          <thead>
            <tr>
              <th/>
              <th align="left" colspan="2">BWA</th>
              <th align="left" colspan="2">BarraCUDA</th>
            </tr>
            <tr>
              <th/>
              <th colspan="4">
                <hr/>
              </th>
            </tr>
            <tr>
              <th/>
              <th align="left">Gap enabled</th>
              <th align="left">Gap disabled</th>
              <th align="left">Gap enabled</th>
              <th align="left">Gap disabled</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">
                <bold>37 bp library</bold>
              </td>
              <td/>
              <td/>
              <td/>
              <td/>
            </tr>
            <tr>
              <td colspan="5">
                <hr/>
              </td>
            </tr>
            <tr>
              <td align="left">% Mapped</td>
              <td align="left">77.19</td>
              <td align="left">76.91</td>
              <td align="left">77.16</td>
              <td align="left">76.99</td>
            </tr>
            <tr>
              <td colspan="5">
                <hr/>
              </td>
            </tr>
            <tr>
              <td align="left">
                <bold>76 bp library</bold>
              </td>
              <td/>
              <td/>
              <td/>
              <td/>
            </tr>
            <tr>
              <td colspan="5">
                <hr/>
              </td>
            </tr>
            <tr>
              <td align="left">% Mapped</td>
              <td align="left">82.74</td>
              <td align="left">82.87</td>
              <td align="left">82.75</td>
              <td align="left">82.58</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
    </sec>
    <sec>
      <title>Multiple GPU configuration</title>
      <p>For computers with multiple CUDA-capable GPUs, BarraCUDA automatically selects the best GPU based on number of stream processors and the amount of graphics memory available to the software. Users can also specify which CUDA device the software is to be executed on by using the '-C' option followed by the device number. In order to take advantage of multiple GPUs in a system, BarraCUDA is accompanied with two scripts, namely 'barracuda-multi-se' and 'barracuda-multi-pe' to align parallel single-end reads and paired-end reads respectively using multiple GPUs. 'barracuda-multi-se' automatically detects the number of CUDA devices in the computer, splits the input.fastq read files according to the number of CUDA devices and calls multiple instances of BarraCUDA to align sequencing reads ('aln' and 'samse') in parallel. Once the alignment finishes, the script joins the files back into one single SAM file. For paired-end reads, 'barracuda-multi-pe' calls two instances of BarraCUDA to align the two paired.fastq read files at the same time and generates a single SAM output using the 'sampe' core. At the time of writing, 'barracuda-multi-pe' does not support more than 2 GPUs while 'barracuda-multi-se' is not bounded by the number of CUDA devices.</p>
    </sec>
    <sec>
      <title>Multiple GPUs show a better scalability than CPUs</title>
      <p>Figure <xref ref-type="fig" rid="F4">4</xref> shows the scalability of using multiple GPUs and CPUs in aligning another whole-genome shotgun library of 13.5 million single-end 95 bp reads (ENA accession: SRR063699) to the <italic>Drosophila Melanogaster </italic>genome (BDGP5.25.63). Similar to the human library we examined earlier, the alignment throughput of BarraCUDA with 1 Tesla M2050 GPU was similar to that of BWA with 6 CPU cores (Xeon X5670 2.93 GHz with 8 GB DDR3 RAM). We tried to boost further the speed of BWA with more CPU cores, but we did not find any additional benefit beyond 8 cores. On the other hand we found that using BarraCUDA with two GPUs already outperformed BWA using all 12 cores (2Ã Xeon X5670s) at 2.5 Mbp/s, and the alignment throughput when used with 8 GPUs took only 3.8 min, which was 2.8 times the speed of BWA utilising all 12 CPU cores available on the computer node. The difference in the scalabilities between CPUs and GPUs is mainly due to the difference in memory bandwidths, where each GPU has exclusive access to their own dedicated on-board memory, the system memory on the computer is shared among 12 CPU cores, and this become a bottleneck when there are more than 8 BWA threads running at the same time.</p>
      <fig id="F4" position="float">
        <label>Figure 4</label>
        <caption>
          <p><bold>The scalability of alignment throughputs using multiple GPUs and CPUs</bold>. This figures shows the effect on alignment throughputs (in megabases per seconds, Mbp/s) when multiple GPUs and CPUs were used to map a single-end library containing 13.6 million 96 bp reads to the D. Melanogaster genome. A computer node containing two 6-core Intel Xeon 5670 s and eight NVIDIA Tesla M2050 were used in this test. The throughputs of BWA were measured with 1, 2, 4, 6, 8, 10 and 12 threads and BarraCUDA with 1, 2, 4, 6 and 8 M2050s using default options.</p>
        </caption>
        <graphic xlink:href="1756-0500-5-27-4"/>
      </fig>
    </sec>
  </sec>
  <sec>
    <title>Conclusions</title>
    <p>Here we present BarraCUDA, a next generation sequencing alignment software to perform mapping of sequencing reads to reference genomes using NVIDIA graphics cards. Being based on BWA, BarraCUDA can perform gapped alignment with gap extensions and supports mappings for single- and paired-end reads with comparable alignment accuracies. BarraCUDA also generates alignments in the SAM format for compatibility with downstream data analysis applications.</p>
    <p>Due to the limited amount of on-board memory and the tremendous number of threads to handle concurrently, a memory efficient DFS approach was used to perform inexact matches. Although DFS is not as time efficient as BFS utilized in BWA, BarraCUDA still offers a throughput of 6X the speed of a CPU core for gapped alignment and even faster when gap opening is disabled.</p>
    <p>We also show here that multiple GPUs scales better than CPUs. A normal computer can easily take up 4 GPUs, meaning that using this test library as an example, a single-end alignment can be done in 5 min, which is twice the speed of a high-end 12-core workstation. Using 8X GPU, we can achieve an alignment speed 3X faster than a traditional computing node with 12 CPU cores, making GPU nodes a more favourable option, in terms of HPC environment, than using those with CPUs.</p>
    <p>The software lays an important milestone in low-cost and energy efficient computing in bioinformatics using GPGPU. The software is still under active development and work is underway to further improve the program efficiency.</p>
  </sec>
  <sec>
    <title>Availability and requirements</title>
    <p>Project Name: BarraCUDA</p>
    <p>Project Home Page: <ext-link ext-link-type="uri" xlink:href="http://seqbarracuda.sf.net">http://seqbarracuda.sf.net</ext-link></p>
    <p>Operating System(s): Linux</p>
    <p>Programming Language: C/C++, CUDA</p>
    <p>Other Requirements: NVIDIA graphics cards with compute capability 1.3 or above, 768 MB VRAM, CUDA toolkit V4.0 or above</p>
    <p>Licence: GNU GPL</p>
    <p>Any Restrictions to use by non-academics: Nil</p>
  </sec>
  <sec>
    <title>Abbreviations</title>
    <p>NGS: Next-generation sequencing; CUDA: Compute unified device architecture; SNP: Single-nucleotide polymorphism; BWT: Burrows-wheeler transform; DFS: Depth-first search; BFS: Breadth-first search; GPGPU: General purpose computing using graphics processing units; SM: Stream multi-processer; SIMT: Single-instruction multiple-thread; HPC: High-performance computing.</p>
  </sec>
  <sec>
    <title>Competing interests</title>
    <p>The authors declare that they have no competing interests.</p>
  </sec>
  <sec>
    <title>Authors' contributions</title>
    <p>BYHL and PK prepared the manuscript. BYHL, SL, PK and DL designed and implemented the software. MSC was involved in testing the software. GP provided the NVIDIA hardware for implementation. GP, GSHY and IM participated in initial feasibility analysis and were involved in the critical review of the manuscript. BYHL and GSHY supervised the overall progress of the project.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="S1">
      <caption>
        <title>Additional file 1</title>
        <p><bold>Pseudo-code for BarraCUDA GPGPU alignment core and determining the memory workspace requirements for BWA's BFS and BarraCUDA's DFS alignment cores</bold>.</p>
      </caption>
      <media xlink:href="1756-0500-5-27-S1.PDF" mimetype="application" mime-subtype="pdf">
        <caption>
          <p>Click here for file</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <sec>
    <title>Acknowledgements</title>
    <p>We would like to thank NVIDIA for donating their Tesla GPUs and access to their PSG laboratory cluster through the University of Cambridge CUDA Center of Excellence programme. We would also like to thank Thomas Bradley and Timothy Lanfear from NVIDIA for their technical assistances and advices. The work is supported by EurOCHIP FP7 consortium, MRC Centre of Obesity and Related Metabolic Diseases, and a funding from the National Institute for Health Research Cambridge Comprehensive Biomedical Research Centre.</p>
  </sec>
  <ref-list>
    <ref id="B1">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Margulies</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Egholm</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Altman</surname>
          <given-names>WE</given-names>
        </name>
        <name>
          <surname>Attiya</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Bader</surname>
          <given-names>JS</given-names>
        </name>
        <name>
          <surname>Bemben</surname>
          <given-names>LA</given-names>
        </name>
        <name>
          <surname>Berka</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Braverman</surname>
          <given-names>MS</given-names>
        </name>
        <name>
          <surname>Chen</surname>
          <given-names>YJ</given-names>
        </name>
        <name>
          <surname>Chen</surname>
          <given-names>Z</given-names>
        </name>
        <etal/>
        <article-title>Genome sequencing in microfabricated high-density picolitre reactors</article-title>
        <source>Nature</source>
        <year>2005</year>
        <volume>437</volume>
        <issue>7057</issue>
        <fpage>376</fpage>
        <lpage>380</lpage>
        <pub-id pub-id-type="pmid">16056220</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B2">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Wheeler</surname>
          <given-names>DA</given-names>
        </name>
        <name>
          <surname>Srinivasan</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Egholm</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Shen</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Chen</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>McGuire</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>He</surname>
          <given-names>W</given-names>
        </name>
        <name>
          <surname>Chen</surname>
          <given-names>YJ</given-names>
        </name>
        <name>
          <surname>Makhijani</surname>
          <given-names>V</given-names>
        </name>
        <name>
          <surname>Roth</surname>
          <given-names>GT</given-names>
        </name>
        <etal/>
        <article-title>The complete genome of an individual by massively parallel DNA sequencing</article-title>
        <source>Nature</source>
        <year>2008</year>
        <volume>452</volume>
        <issue>7189</issue>
        <fpage>872</fpage>
        <lpage>876</lpage>
        <pub-id pub-id-type="doi">10.1038/nature06884</pub-id>
        <pub-id pub-id-type="pmid">18421352</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B3">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Mikkelsen</surname>
          <given-names>TS</given-names>
        </name>
        <name>
          <surname>Ku</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Jaffe</surname>
          <given-names>DB</given-names>
        </name>
        <name>
          <surname>Issac</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Lieberman</surname>
          <given-names>E</given-names>
        </name>
        <name>
          <surname>Giannoukos</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Alvarez</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Brockman</surname>
          <given-names>W</given-names>
        </name>
        <name>
          <surname>Kim</surname>
          <given-names>TK</given-names>
        </name>
        <name>
          <surname>Koche</surname>
          <given-names>RP</given-names>
        </name>
        <etal/>
        <article-title>Genome-wide maps of chromatin state in pluripotent and lineage-committed cells</article-title>
        <source>Nature</source>
        <year>2007</year>
        <volume>448</volume>
        <issue>7153</issue>
        <fpage>553</fpage>
        <lpage>560</lpage>
        <pub-id pub-id-type="doi">10.1038/nature06008</pub-id>
        <pub-id pub-id-type="pmid">17603471</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B4">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Green</surname>
          <given-names>RE</given-names>
        </name>
        <name>
          <surname>Malaspinas</surname>
          <given-names>AS</given-names>
        </name>
        <name>
          <surname>Krause</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Briggs</surname>
          <given-names>AW</given-names>
        </name>
        <name>
          <surname>Johnson</surname>
          <given-names>PL</given-names>
        </name>
        <name>
          <surname>Uhler</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Meyer</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Good</surname>
          <given-names>JM</given-names>
        </name>
        <name>
          <surname>Maricic</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Stenzel</surname>
          <given-names>U</given-names>
        </name>
        <etal/>
        <article-title>A complete Neandertal mitochondrial genome sequence determined by high-throughput sequencing</article-title>
        <source>Cell</source>
        <year>2008</year>
        <volume>134</volume>
        <issue>3</issue>
        <fpage>416</fpage>
        <lpage>426</lpage>
        <pub-id pub-id-type="doi">10.1016/j.cell.2008.06.021</pub-id>
        <pub-id pub-id-type="pmid">18692465</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B5">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Park</surname>
          <given-names>PJ</given-names>
        </name>
        <article-title>ChIP-seq: advantages and challenges of a maturing technology</article-title>
        <source>Nat Rev</source>
        <year>2009</year>
        <volume>10</volume>
        <issue>10</issue>
        <fpage>669</fpage>
        <lpage>680</lpage>
        <pub-id pub-id-type="doi">10.1038/nrg2641</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B6">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Wang</surname>
          <given-names>Z</given-names>
        </name>
        <name>
          <surname>Gerstein</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Snyder</surname>
          <given-names>M</given-names>
        </name>
        <article-title>RNA-Seq: a revolutionary tool for transcriptomics</article-title>
        <source>Nat Rev</source>
        <year>2009</year>
        <volume>10</volume>
        <issue>1</issue>
        <fpage>57</fpage>
        <lpage>63</lpage>
        <pub-id pub-id-type="doi">10.1038/nrg2484</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B7">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Li</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Ruan</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Durbin</surname>
          <given-names>R</given-names>
        </name>
        <article-title>Mapping short DNA sequencing reads and calling variants using mapping quality scores</article-title>
        <source>Genome Research</source>
        <year>2008</year>
        <volume>18</volume>
        <issue>11</issue>
        <fpage>1851</fpage>
        <lpage>1858</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.078212.108</pub-id>
        <pub-id pub-id-type="pmid">18714091</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B8">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Smith</surname>
          <given-names>AD</given-names>
        </name>
        <name>
          <surname>Chung</surname>
          <given-names>WY</given-names>
        </name>
        <name>
          <surname>Hodges</surname>
          <given-names>E</given-names>
        </name>
        <name>
          <surname>Kendall</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Hannon</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Hicks</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Xuan</surname>
          <given-names>Z</given-names>
        </name>
        <name>
          <surname>Zhang</surname>
          <given-names>MQ</given-names>
        </name>
        <article-title>Updates to the RMAP short-read mapping software</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <issue>21</issue>
        <fpage>2841</fpage>
        <lpage>2842</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp533</pub-id>
        <pub-id pub-id-type="pmid">19736251</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B9">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Smith</surname>
          <given-names>AD</given-names>
        </name>
        <name>
          <surname>Xuan</surname>
          <given-names>Z</given-names>
        </name>
        <name>
          <surname>Zhang</surname>
          <given-names>MQ</given-names>
        </name>
        <article-title>Using quality scores and longer reads improves accuracy of Solexa read mapping</article-title>
        <source>BMC bioinformatics</source>
        <year>2008</year>
        <volume>9</volume>
        <fpage>128</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-9-128</pub-id>
        <pub-id pub-id-type="pmid">18307793</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B10">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Li</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Li</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Kristiansen</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>Wang</surname>
          <given-names>J</given-names>
        </name>
        <article-title>SOAP: short oligonucleotide alignment program</article-title>
        <source>Bioinformatics</source>
        <year>2008</year>
        <volume>24</volume>
        <issue>5</issue>
        <fpage>713</fpage>
        <lpage>714</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btn025</pub-id>
        <pub-id pub-id-type="pmid">18227114</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B11">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Schatz</surname>
          <given-names>MC</given-names>
        </name>
        <article-title>CloudBurst: highly sensitive read mapping with MapReduce</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <issue>11</issue>
        <fpage>1363</fpage>
        <lpage>1369</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp236</pub-id>
        <pub-id pub-id-type="pmid">19357099</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B12">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Li</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Yu</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Li</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Lam</surname>
          <given-names>TW</given-names>
        </name>
        <name>
          <surname>Yiu</surname>
          <given-names>SM</given-names>
        </name>
        <name>
          <surname>Kristiansen</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>Wang</surname>
          <given-names>J</given-names>
        </name>
        <article-title>SOAP2: an improved ultrafast tool for short read alignment</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <issue>15</issue>
        <fpage>1966</fpage>
        <lpage>1967</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp336</pub-id>
        <pub-id pub-id-type="pmid">19497933</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B13">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Langmead</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Trapnell</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Pop</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Salzberg</surname>
          <given-names>SL</given-names>
        </name>
        <article-title>Ultrafast and memory-efficient alignment of short DNA sequences to the human genome</article-title>
        <source>Genome Biol</source>
        <year>2009</year>
        <volume>10</volume>
        <issue>3</issue>
        <fpage>R25</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2009-10-3-r25</pub-id>
        <pub-id pub-id-type="pmid">19261174</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B14">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Li</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Durbin</surname>
          <given-names>R</given-names>
        </name>
        <article-title>Fast and accurate short read alignment with Burrows-Wheeler transform</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <issue>14</issue>
        <fpage>1754</fpage>
        <lpage>1760</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp324</pub-id>
        <pub-id pub-id-type="pmid">19451168</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B15">
      <mixed-citation publication-type="book">
        <name>
          <surname>Burrows</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Wheeler</surname>
          <given-names>D</given-names>
        </name>
        <source>A block-sorting lossless data compression algorithm</source>
        <year>1994</year>
        <publisher-name>California: Digital Equipment Corporation</publisher-name>
      </mixed-citation>
    </ref>
    <ref id="B16">
      <mixed-citation publication-type="book">
        <name>
          <surname>Ferragina</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Manzini</surname>
          <given-names>G</given-names>
        </name>
        <article-title>Opportunistic data structures with applications</article-title>
        <source>41st Annual Symposium on Foundations of Computer Science: 2000; Redondo Beach, California</source>
        <publisher-name>IEEE</publisher-name>
        <fpage>390</fpage>
        <lpage>398</lpage>
      </mixed-citation>
    </ref>
    <ref id="B17">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Lippert</surname>
          <given-names>RA</given-names>
        </name>
        <name>
          <surname>Mobarry</surname>
          <given-names>CM</given-names>
        </name>
        <name>
          <surname>Walenz</surname>
          <given-names>BP</given-names>
        </name>
        <article-title>A space-efficient construction of the Burrows-Wheeler transform for genomic data</article-title>
        <source>J Comput Biol</source>
        <year>2005</year>
        <volume>12</volume>
        <issue>7</issue>
        <fpage>943</fpage>
        <lpage>951</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2005.12.943</pub-id>
        <pub-id pub-id-type="pmid">16201914</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B18">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Schatz</surname>
          <given-names>MC</given-names>
        </name>
        <name>
          <surname>Trapnell</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Delcher</surname>
          <given-names>AL</given-names>
        </name>
        <name>
          <surname>Varshney</surname>
          <given-names>A</given-names>
        </name>
        <article-title>High-throughput sequence alignment using graphics processing units</article-title>
        <source>BMC bioinformatics</source>
        <year>2007</year>
        <volume>8</volume>
        <fpage>474</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-8-474</pub-id>
        <pub-id pub-id-type="pmid">18070356</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B19">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Trapnell</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Schatz</surname>
          <given-names>MC</given-names>
        </name>
        <article-title>Optimizing data intensive GPGPU computations for DNA sequence alignment</article-title>
        <source>Parallel Computing</source>
        <year>2009</year>
        <volume>35</volume>
        <issue>8</issue>
        <fpage>429</fpage>
        <lpage>440</lpage>
        <pub-id pub-id-type="doi">10.1016/j.parco.2009.05.002</pub-id>
        <pub-id pub-id-type="pmid">20161021</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B20">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Ukkonen</surname>
          <given-names>E</given-names>
        </name>
        <article-title>On-line construction of suffix trees</article-title>
        <source>Algorithmica</source>
        <year>1995</year>
        <volume>14</volume>
        <issue>3</issue>
        <fpage>249</fpage>
        <lpage>260</lpage>
        <pub-id pub-id-type="doi">10.1007/BF01206331</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B21">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Delcher</surname>
          <given-names>AL</given-names>
        </name>
        <name>
          <surname>Salzberg</surname>
          <given-names>SL</given-names>
        </name>
        <name>
          <surname>Phillippy</surname>
          <given-names>AM</given-names>
        </name>
        <article-title>Using MUMmer to identify similar regions in large sequence sets</article-title>
        <source>Current protocols in bioinformatics/editoral board, Andreas D Baxevanis [et al</source>
        <year>2003</year>
        <volume>10</volume>
        <fpage>10 13</fpage>
      </mixed-citation>
    </ref>
    <ref id="B22">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Li</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Handsaker</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Wysoker</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Fennell</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Ruan</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Homer</surname>
          <given-names>N</given-names>
        </name>
        <name>
          <surname>Marth</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Abecasis</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Durbin</surname>
          <given-names>R</given-names>
        </name>
        <article-title>The Sequence Alignment/Map format and SAMtools</article-title>
        <source>Bioinfomatics</source>
        <year>2009</year>
        <volume>25</volume>
        <issue>16</issue>
        <fpage>2078</fpage>
        <lpage>2079</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp352</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B23">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Consortium</surname>
          <given-names>TGP</given-names>
        </name>
        <article-title>A map of human genome variation from population-scale sequencing</article-title>
        <source>Nature</source>
        <year>2010</year>
        <volume>467</volume>
        <issue>7319</issue>
        <fpage>1061</fpage>
        <lpage>1073</lpage>
        <pub-id pub-id-type="doi">10.1038/nature09534</pub-id>
        <pub-id pub-id-type="pmid">20981092</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B24">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Lam</surname>
          <given-names>TW</given-names>
        </name>
        <name>
          <surname>Sung</surname>
          <given-names>WK</given-names>
        </name>
        <name>
          <surname>Tam</surname>
          <given-names>SL</given-names>
        </name>
        <name>
          <surname>Wong</surname>
          <given-names>CK</given-names>
        </name>
        <name>
          <surname>Yiu</surname>
          <given-names>SM</given-names>
        </name>
        <article-title>Compressed indexing and local alignment of DNA</article-title>
        <source>Bioinformatics</source>
        <year>2008</year>
        <volume>24</volume>
        <issue>6</issue>
        <fpage>791</fpage>
        <lpage>797</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btn032</pub-id>
        <pub-id pub-id-type="pmid">18227115</pub-id>
      </mixed-citation>
    </ref>
  </ref-list>
</back>

<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Brief Bioinform</journal-id>
    <journal-id journal-id-type="iso-abbrev">Brief Bioinform</journal-id>
    <journal-id journal-id-type="publisher-id">bib</journal-id>
    <journal-title-group>
      <journal-title>Briefings in Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1467-5463</issn>
    <issn pub-type="epub">1477-4054</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">9487642</article-id>
    <article-id pub-id-type="pmid">35849103</article-id>
    <article-id pub-id-type="doi">10.1093/bib/bbac301</article-id>
    <article-id pub-id-type="publisher-id">bbac301</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Problem Solving Protocol</subject>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Clair3-trio: high-performance Nanopore long-read variant calling in family trios with trio-to-trio deep neural networks</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-8560-3999</contrib-id>
        <name>
          <surname>Su</surname>
          <given-names>Junhao</given-names>
        </name>
        <!--jhsu@cs.hku.hk-->
        <aff><institution>Department of Computer Science, The University of Hong Kong</institution>, Hong Kong, <country country="CN">China</country></aff>
        <xref rid="afn1" ref-type="author-notes"/>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-6546-2324</contrib-id>
        <name>
          <surname>Zheng</surname>
          <given-names>Zhenxian</given-names>
        </name>
        <!--zxzheng@cs.hku.hk-->
        <aff><institution>Department of Computer Science, The University of Hong Kong</institution>, Hong Kong, <country country="CN">China</country></aff>
        <xref rid="afn1" ref-type="author-notes"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Ahmed</surname>
          <given-names>Syed Shakeel</given-names>
        </name>
        <!--ssahmed@hku.hk-->
        <aff><institution>Department of Computer Science, The University of Hong Kong</institution>, Hong Kong, <country country="CN">China</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0003-4676-8587</contrib-id>
        <name>
          <surname>Lam</surname>
          <given-names>Tak-Wah</given-names>
        </name>
        <!--twlam@cs.hku.hk-->
        <aff><institution>Department of Computer Science, The University of Hong Kong</institution>, Hong Kong, <country country="CN">China</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-9711-6533</contrib-id>
        <name>
          <surname>Luo</surname>
          <given-names>Ruibang</given-names>
        </name>
        <!--rbluo@cs.hku.hk-->
        <aff><institution>Department of Computer Science, The University of Hong Kong</institution>, Hong Kong, <country country="CN">China</country></aff>
        <xref rid="cor1" ref-type="corresp"/>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="cor1">Corresponding author: Ruibang Luo, Department of Computer Science, The University of Hong Kong, Hong Kong, 999077, China. Tel.: +852 2859 2186; Fax: +852 2559 8447; E-mail: <email>rbluo@cs.hku.hk</email></corresp>
      <fn id="afn1">
        <p>Junhao Su and Zhenxian Zheng have contributed equally to this work.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="collection">
      <month>9</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2022-07-17">
      <day>17</day>
      <month>7</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>17</day>
      <month>7</month>
      <year>2022</year>
    </pub-date>
    <volume>23</volume>
    <issue>5</issue>
    <elocation-id>bbac301</elocation-id>
    <history>
      <date date-type="received">
        <day>4</day>
        <month>5</month>
        <year>2022</year>
      </date>
      <date date-type="rev-recd">
        <day>16</day>
        <month>6</month>
        <year>2022</year>
      </date>
      <date date-type="accepted">
        <day>2</day>
        <month>7</month>
        <year>2022</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2022. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2022</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="bbac301.pdf"/>
    <abstract>
      <title>Abstract</title>
      <p>Accurate identification of genetic variants from family child–mother–father trio sequencing data is important in genomics. However, state-of-the-art approaches treat variant calling from trios as three independent tasks, which limits their calling accuracy for Nanopore long-read sequencing data. For better trio variant calling, we introduce Clair3-Trio, the first variant caller tailored for family trio data from Nanopore long-reads. Clair3-Trio employs a Trio-to-Trio deep neural network model, which allows it to input the trio sequencing information and output all of the trio’s predicted variants within a single model to improve variant calling. We also present MCVLoss, a novel loss function tailor-made for variant calling in trios, leveraging the explicit encoding of the Mendelian inheritance. Clair3-Trio showed comprehensive improvement in experiments. It predicted far fewer Mendelian inheritance violation variations than current state-of-the-art methods. We also demonstrated that our Trio-to-Trio model is more accurate than competing architectures. Clair3-Trio is accessible as a free, open-source project at <ext-link xlink:href="https://github.com/HKU-BAL/Clair3-Trio" ext-link-type="uri">https://github.com/HKU-BAL/Clair3-Trio</ext-link>.</p>
    </abstract>
    <kwd-group>
      <kwd>variant calling</kwd>
      <kwd>Mendelian inheritance</kwd>
      <kwd>nanopore long-read</kwd>
      <kwd>deep neural networks</kwd>
      <kwd>family trios</kwd>
    </kwd-group>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>HKSAR Government</institution>
          </institution-wrap>
        </funding-source>
        <award-id>17113721</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Oxford Nanopore Technologies</institution>
            <institution-id institution-id-type="DOI">10.13039/100010890</institution-id>
          </institution-wrap>
        </funding-source>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>General Program</institution>
          </institution-wrap>
        </funding-source>
        <award-id>JCYJ20210324134405015</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Shenzhen Municipal Government</institution>
          </institution-wrap>
        </funding-source>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="12"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec id="sec3">
    <title>Introduction</title>
    <p>Accurate identification of genetic variants in family trios in the human genome is an important task in genomics, which provides insight into precision medicine and phenotype understanding [<xref rid="ref1" ref-type="bibr">1</xref>]. The human genome follows the Mendelian inheritance [<xref rid="ref2" ref-type="bibr">2</xref>], with half of the child’s genome in family trios inherited from each parent. Calling genetic variants in trios provides a more comprehensive understanding of the inheritance pattern of genetic variants in families [<xref rid="ref3" ref-type="bibr">3</xref>].</p>
    <p>Several state-of-the-art deep learning-based methods are available for calling small variants from Oxford Nanopore Technologies (ONT) data. They are based on two main designs: pileup and full-alignment. Clairvoyante [<xref rid="ref4" ref-type="bibr">4</xref>], Clair [<xref rid="ref5" ref-type="bibr">5</xref>] and Nanocaller [<xref rid="ref6" ref-type="bibr">6</xref>] use a pileup-based design, which summarizes the read alignments into features and counts, which are then piped into a variant-calling network. PEPPER-Margin-DeepVariant (PEPPER) [<xref rid="ref7" ref-type="bibr">7</xref>], on the other hand, applies a haplotype-aware variant calling pipeline and uses full alignment-based input to call variants via neural networks. Clair3 [<xref rid="ref8" ref-type="bibr">8</xref>] combines the two major designs, using an advance and cascade design, which symphonizes pileup for the best speed and full-alignment for the best accuracy for calling variants from ONT data. Other variant-calling methods, including Medaka [<xref rid="ref9" ref-type="bibr">9</xref>] and Longshot [<xref rid="ref10" ref-type="bibr">10</xref>], are also available for ONT data. However, all the state-of-the-art methods are designed for calling individual variants from trios and fail to leverage Mendelian inheritance in the family for better variant-calling accuracy for ONT data.</p>
    <p>For calling varaints with genetic information shared in family trios, two pilot studies based on DeepVariant [<xref rid="ref11" ref-type="bibr">11</xref>] have been developed. dv-trio [<xref rid="ref12" ref-type="bibr">12</xref>] provides a processing pipeline to call variants using DeepVariant, together with GATK [<xref rid="ref13" ref-type="bibr">13</xref>] and FamSeq [<xref rid="ref14" ref-type="bibr">14</xref>], to reduce the number of Mendelian inheritance violations in its variant calling. DeepTrio [<xref rid="ref15" ref-type="bibr">15</xref>] extends DeepVariant’s single sample input to accept the input of three samples in its deep neural networks to call candidate sites identified by heuristic checking. Current trio variant callers do not include Mendelian inheritance violation factors in their model architecture designs or decisions. Furthermore, all these methods are designed for Illumina and PacBio HiFi data and cannot call variants from ONT data. Therefore, there is currently no trio information-aware caller available for calling variants from ONT data.</p>
    <p>Generally, two research gaps remain for calling variants from trios for ONT data: (i) how to train the model to learn from the information about both individuals and that preserved in family trios and (ii) how to train the model to predict the following Mendelian inheritance, a basic feature in family trios. Unfortunately, these two questions have never been studied in the ONT data and remain unsolved in the community.</p>
    <p>To fill the two main research gaps and improve variant calling from trios’ ONT data, we propose a new model: Clair3-Trio. Clair3-Trio is the first variant caller tailored for family trios ONT data with a Trio-to-Trio deep neural network model design that allows it to input the trio’s sequencing information and output all of the trio’s predicted variants. Using the Trio-to-Trio model, Clair3-Trio can efficiently call variants based on individual and family trio information. We also designed a loss function, MCVLoss (Mendelian Inheritance Constraint Violation Loss), to make the model explicitly encode the priors of Mendelian inheritance in trios to improve its variant calling (described in the Methods section). Based on our experiment on the Genome in a Bottle (GIAB) HG002 trio data [<xref rid="ref16" ref-type="bibr">16</xref>], Clair3-Trio showed comprehensive improvement in experiments compared with state-of-the-art methods. It showed an increment of over +10% in the F1-score of the child and +5% in the F1-score of the parents compared with Clair3 and PEPPER when tested at 10× ONT data. In addition, it showed an order of magnitude fewer Mendelian inheritance violations than other methods. All codes and experimental settings for Clair3-Trio are publicly available at <ext-link xlink:href="https://github.com/HKU-BAL/Clair3-Trio" ext-link-type="uri">https://github.com/HKU-BAL/Clair3-Trio</ext-link>.</p>
  </sec>
  <sec id="sec4">
    <title>Methods</title>
    <sec id="sec5">
      <title>Family trio variant calling with Clair3-trio</title>
      <p>Clair3-Trio consists of two main modules (<xref rid="f1" ref-type="fig">Figure 1A</xref>): (i) data preprocessing, which uses the Clair3 pileup model and WhatsHap phase, as well as the haplotag sub-module [<xref rid="ref17" ref-type="bibr">17</xref>] function to phase the data of each individual in a family; and (ii) model calling, which calls family trio variants with the Clair3-Trio model. The inputs for Clair3-Trio are three alignment files from a family trio: child, mother and father. The workflow and model are discussed in the following.</p>
      <fig position="float" id="f1">
        <label>Figure 1</label>
        <caption>
          <p>Workflow of Clair3-Trio. (<bold>A</bold>) The calling workflow of Clair3-Trio. The trio’s sequencing data are first phased by Clair3’s pileup variant calling and WhatsHap phase sub-modules and then fed into the Clair3-Trio model to call variants in the trio. (<bold>B</bold>) The architecture of the Clair3-Trio model.</p>
        </caption>
        <graphic xlink:href="bbac301f1" position="float"/>
      </fig>
    </sec>
    <sec id="sec6">
      <title>Data preprocessing</title>
      <p>For data preprocessing, first, we use the Clair3 pileup model to efficiently find all genetic variants that can be easily predicted with high confidence, and then, we use WhatsHap to obtain all phase variants and haptag reads, based on the called heterozygous single nucleotide polymorphisms (SNP) to get phased alignments for the Clair3-Trio model. With all individuals’ haptaged alignments available, we use a simple heuristic approach to identify candidate positions that might have any genetic variants in the family, as follows: (i) the Clair3 pileup model grasps all positions with supporting alternative allele frequency exceeding 0.08 and outputs all individual variant and non-variant calling with confidence scores [<xref rid="ref8" ref-type="bibr">8</xref>]. (ii) Next, all pileup variants called and 20% of low-quality pileup reference calls are collected from each individual as the individual’s potential variant candidate sites. (iii) Then, we unite all the potential variants of each individual in the family as the trio’s variant candidates. Thus, any variants identified in a sample can be treated as candidates in the Clair3-Trio model.</p>
    </sec>
    <sec id="sec7">
      <title>Clair3-trio model: a trio-to-trio deep neural network model</title>
      <p>The Clair3-Trio model is a Trio-to-Trio model that can input all alignments from the family trio and output all variants from the same trio. The inputs for the Clair3-Trio model are generated by merging phased full alignments from trios. For each individual, the full-alignment information is converted into eight different feature channels, as previously discussed for Clair3 [<xref rid="ref8" ref-type="bibr">8</xref>]. For each channel, we aggregate the same channel from each individual in the same family order as the input of the Clair3-Trio model (<xref rid="f1" ref-type="fig">Figure 1B</xref>).</p>
      <p>The neural network of the Clair3-Trio model consists of multiple layers: convolutional layers (Conv), residual convolutional layers (ResBlock), pyramid pooling layers and dense layers (<xref rid="f1" ref-type="fig">Figure 1B</xref>). Clair3-Trio uses independent dense layers to predict each individual’s genotype, zygosity and two insertion or deletion (INDEL) lengths in the last layer. All outputs from the model are then combined and converted to variant records for each individual.</p>
    </sec>
    <sec id="sec8">
      <title>Training a Clair3-trio model</title>
      <p>To train a Clair3-Trio model in family trio data, we applied (i) a label cleaning module (Representation Unification) to clean the training data, and (ii) a trio data filtering module (MCV filtering) to further filter Mendelian violation sites in the training data. The two modules were established based on experiments. We use the Representation Unification module from Clair3 to unify the true variants label with the alignment information in the training data. The Representation Unification model may include Mendelian conflict in the unification process. We added MCV filtering to discard a few candidate sites (0.05% of candidate sites) in training data that violated Mendelian inheritance constraints. After cleaning the data, we performed random downsampling to make the model increase its generalization at different levels of data coverage. We downsampled the data into a range of coverage of 10×, 30×, 60× and 80× for all samples, kept the child data at high coverage and downsampled only the parent samples for low coverage. After downsampling, we kept 30% of the data of each coverage combination to balance speed and performance, leading to 33 353 000 candidates (from the GIAB HG002 family) in our training dataset. With the training dataset available, Clair3-Trio was trained in a two-step procedure. First, we trained an initial model of Clair3-Trio via the focus loss function, and then, we fine-tuned the initial Clair3-Trio model with the addition of multiple task MCVLoss function. We also tried other training techniques, but they failed to improve Clair3-Trio. This is elaborated in Supplementary Notes (see Supplementary Data available online at <ext-link xlink:href="http://bib.oxfordjournals.org/" ext-link-type="uri">http://bib.oxfordjournals.org/</ext-link>).</p>
    </sec>
    <sec id="sec9">
      <title>Differences between Clair3-trio and the Clair3 full-alignment model</title>
      <p>Our approach differs from Clair3 mainly in the following ways:</p>
      <list list-type="simple">
        <list-item>
          <p>(i) Targeted for best accuracy, Clair3-Trio can call variants in all potential variant sites in a family, while Clair3 calls them in individuals. Clair3-Trio has much more relaxed candidate selection criteria for variant candidate selection than Clair3. Claire3-Trio has 100% of variants and 20% of reference sites, compared with 30 and 10%, respectively, in Clair3, so Clair3-Trio ends up with 2.2 times more candidates. On the other hand, the variant candidates in the Clair3-Trio model are the union of all trio members, resulting in 1.9 times more candidates than individual variants. Typically, Clair3-Trio calls 4.2 times more candidates, on average, than the default Clair3 for each sample.</p>
        </list-item>
        <list-item>
          <p>(ii) Clair3-Trio is a Trio-to-Trio model, which uses all data in the trio to predict all of the trio members’ variants directly and consistently, while Clair3 is a powerful individual variant caller, which can be treated as a One-to-One model. More information about the Trio-to-Trio and the One-to-One model is provided in <xref rid="sec15" ref-type="sec">Results</xref> section.</p>
        </list-item>
        <list-item>
          <p>(iii) The Clair3-Trio model uses the MCVLoss function for fine-tuning, adding penalties to the trio’s variant predictions that violate the Mendelian constraints, giving Clair3-Trio a comprehensive understanding of the family trio’s variant calling.</p>
        </list-item>
      </list>
      <p>With the Trio-to-Trio model’s architecture and MCVLoss function, our model is well-tailored for calling variants in a family, resulting in a substantial improvement in all the benchmark experiments (see <xref rid="sec15" ref-type="sec">Results</xref> section) using the same training data as in Clair3.</p>
    </sec>
    <sec id="sec10">
      <title>Modeling Mendelian inheritance with MCVLoss in deep neural networks</title>
      <p>The Trio-to-Trio model can predict the trio’s variants with trio’s information, but how to explicitly add the Mendelian inheritance information to the model remains an open question. In the following subsections, we discuss the MCVLoss function, which is designed to control the Mendelian inheritance violation rate in the model. We briefly describe the original loss function in Clair3 and then introduce the MCVLoss function.</p>
    </sec>
    <sec id="sec11">
      <title>Loss function for a single sample</title>
      <p>First, we detail the original loss function for an individual, inherited from Clair3, to better illustrate the basic components in the Clair3-Trio loss function. The output of Clair3 includes four variant tasks—genotype, zygosity and two INDEL length tasks—as previously described in Clair3 [<xref rid="ref8" ref-type="bibr">8</xref>]. The most important task in Clair3 is to predict the genotypes, which are classified into 21 genotypes. If X denotes the alignment from a single sample, the probability of each possible genotype from the 21 genotypes for each sample is<disp-formula id="deqn01"><label>(1)</label><tex-math notation="LaTeX" id="DmEquation1">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}\begin{equation*} {p}_i= softmax ({F}_{gt}\left({F}^{\prime }(X)\right),i\in \left\{g{t}_1,g{t}_2,\dots, g{t}_{21}\right\}, \end{equation*}\end{document}</tex-math></disp-formula>where <inline-formula><tex-math notation="LaTeX" id="ineq01">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${F}_{gt}$\end{document}</tex-math></inline-formula> represents the Clair3 model’s last layer—the 21-genotype outputting layer—and <inline-formula><tex-math notation="LaTeX" id="ineq02">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${F}^{\prime }$\end{document}</tex-math></inline-formula> represents all the other Clair3 layers, other than the last <inline-formula><tex-math notation="LaTeX" id="ineq03">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${F}_{gt}$\end{document}</tex-math></inline-formula> layer, as in <xref rid="f1" ref-type="fig">Figure 1B</xref>. Based on the probability of 21 genotypes, the loss function of Clair3 can be simplified as<disp-formula id="deqn02"><label>(2)</label><tex-math notation="LaTeX" id="DmEquation2">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}\begin{equation*} \mathrm{Loss}(F)=\mathrm{FocalLoss}\left({Y}_{gt},{P}_{gt}\right)+{L}_2(F), \end{equation*}\end{document}</tex-math></disp-formula>where <inline-formula><tex-math notation="LaTeX" id="ineq04">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${Y}_{gt}$\end{document}</tex-math></inline-formula> denotes the true 21-genotype label, <inline-formula><tex-math notation="LaTeX" id="ineq05">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${P}_{gt}$\end{document}</tex-math></inline-formula> denotes the predicted probability of each 21-genotype label and <inline-formula><tex-math notation="LaTeX" id="ineq06">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${L}_2$\end{document}</tex-math></inline-formula> denotes the L2 regularization terms of the model. We ignore the zygosity and INDEL length terms in this simplified formula for simplicity (their formulas are identical to the 21 genotypes task). For applications, the complete loss functions, including 21 genotypes, zygosity, INDEL length 1 and INDEL length 2, are described in the Clair3 paper [<xref rid="ref8" ref-type="bibr">8</xref>].</p>
    </sec>
    <sec id="sec12">
      <title>The output of Clair3-trio and the computation of the trio probability</title>
      <p>We extended the model output in Clair3 from the individual to compute trio genotypes in Clair3-Trio. The probability of the trio members is represented as<disp-formula id="deqn03"><tex-math notation="LaTeX" id="DmEquation3">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$$ {p}_{c,i}=\mathrm{softmax} ({F}_{gt,c}\left({F}^{\prime }(X)\right), $$\end{document}</tex-math></disp-formula><disp-formula id="deqn04"><label>(3)</label><tex-math notation="LaTeX" id="DmEquation4">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}\begin{equation*} \kern0.50em {p}_{p_1,j}=\mathrm{softmax} ({F}_{gt,{p}_1}\left({F}^{\prime }(X)\right), \end{equation*}\end{document}</tex-math></disp-formula><disp-formula id="deqn05"><tex-math notation="LaTeX" id="DmEquation5">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$$ {p}_{p_2,k}=\mathrm{softmax} ({F}_{gt,{p}_2}\left({F}^{\prime }(X)\right), $$\end{document}</tex-math></disp-formula>where the <inline-formula><tex-math notation="LaTeX" id="ineq07">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${F}^{\prime }$\end{document}</tex-math></inline-formula> represents all layers of Clair3-Trio except for the last layer and <inline-formula><tex-math notation="LaTeX" id="ineq08">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${F}_{gt,c},{F}_{gt,{p}_1},{F}_{gt,{p}_2}$\end{document}</tex-math></inline-formula>represents the last three fully connected layers for computing the 21 corresponding child, parent-1 and parent-2 genotypes, respectively. Parent-1 can be the mother or father in the trio, and parent-2 is the remaining parent. The probability of each trio genotype in the family is computed as<disp-formula id="deqn06"><label>(4)</label><tex-math notation="LaTeX" id="DmEquation6">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}\begin{equation*} {p}_{\mathrm{trio}\left(i,j,k\right)}={p}_{c,i}\cdotp{p}_{p_1,j}\cdotp{p}_{p_2,k}. \end{equation*}\end{document}</tex-math></disp-formula></p>
      <p>For each individual’s probability, we simply have the property that<disp-formula id="deqn07"><label>(5)</label><tex-math notation="LaTeX" id="DmEquation7">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}\begin{equation*} \sum_i\ {p}_{c,i}=1,\sum_j\ {p}_{p_1,j}=1,\sum_k\ {p}_{p_2,k}=1. \end{equation*}\end{document}</tex-math></disp-formula></p>
      <p>Combining formulas (<xref rid="deqn06" ref-type="disp-formula">4</xref>) and (<xref rid="deqn07" ref-type="disp-formula">5</xref>) for the trio genotype, we have a similar property for the trio’s probability<disp-formula id="deqn08"><label>(6)</label><tex-math notation="LaTeX" id="DmEquation8">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}\begin{equation*} \sum_{i,j,k}{p}_{\mathrm{trio}\left(i,j,k\right)}=1. \end{equation*}\end{document}</tex-math></disp-formula></p>
    </sec>
    <sec id="sec13">
      <title>The Mendelian constraint violation loss function: MCVLoss</title>
      <p>MCVLoss is based on the idea of penalizing the trio genotype that violates the Mendelian inheritance. For each trio genotype, we define a parameter <inline-formula><tex-math notation="LaTeX" id="ineq09">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\beta$\end{document}</tex-math></inline-formula>, representing the valid degree of the genotype<disp-formula id="deqn09"><label>(7)</label><tex-math notation="LaTeX" id="DmEquation9">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}\begin{equation*} {\beta}_{\mathrm{trio}\left(i,j,k\right)}=\left\{\begin{array}{@{}l}{\left(1-\mu \right)}^2,\mathrm{if}\ \mathrm{it}\ \mathrm{follows}\ \mathrm{the}\ \mathrm{Mendelian}\ \mathrm{inheritance}\ \left(\mathrm{no}\ \mathrm{MCV}\right),\\{}\mu, \mathrm{if}\ \mathrm{MCV},\mathrm{and}\ \mathrm{child}\ \mathrm{has}\ \mathrm{one}\ \mathrm{allele}\ \mathrm{mismatch},\\{}{\mu}^2,\mathrm{if}\ \mathrm{MCV},\mathrm{and}\ \mathrm{child}\ \mathrm{has}\ \mathrm{two}\ \mathrm{allele}\mathrm{s}\ \mathrm{mismatch}\ \end{array}\right.\kern-6pt, \end{equation*}\end{document}</tex-math></disp-formula>where <inline-formula><tex-math notation="LaTeX" id="ineq10">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mu$\end{document}</tex-math></inline-formula> is the mutation rate per generation, set as 1e−8 by default [<xref rid="ref18" ref-type="bibr">18</xref>]. Combining the probability of each trio genotype in the family and the corresponding valid degree, the sspredicted overall valid degree for trio prediction becomes<disp-formula id="deqn10"><label>(8)</label><tex-math notation="LaTeX" id="DmEquation10">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}\begin{equation*} {V}_{\mathrm{trio}}=\sum_{i,j,k}{\beta}_{\mathrm{trio}\left(i,j,k\right)}\cdotp{p}_{\mathrm{trio}\left(i,j,k\right)}=\sum_{i,j,k}{\beta}_{\mathrm{trio}\left(i,j,k\right)}\cdotp{p}_{c,i}\cdotp{p}_{p_1,j}\cdotp{p}_{p_2,k}. \end{equation*}\end{document}</tex-math></disp-formula></p>
      <p>Based on formulas (<xref rid="deqn08" ref-type="disp-formula">6</xref>)–(<xref rid="deqn10" ref-type="disp-formula">8</xref>), we know that <inline-formula><tex-math notation="LaTeX" id="ineq11">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${V}_{trio}\in (0,1)$\end{document}</tex-math></inline-formula>. With all this information, the MCVLoss is defined as<disp-formula id="deqn11"><tex-math notation="LaTeX" id="DmEquation11">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$$ \mathrm{MCVLoss}\left({P}_{\mathrm{trio}}\right)=-\alpha \cdotp \log \left({V}_{\mathrm{trio}}+\epsilon \right) $$\end{document}</tex-math></disp-formula><disp-formula id="deqn12"><label>(9)</label><tex-math notation="LaTeX" id="DmEquation12">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}\begin{equation*} =-\alpha \cdotp \log \left(\sum_{i,j,k}{\beta}_{\mathrm{trio}\left(i,j,k\right)}\cdotp{p}_{c,i}\cdotp{p}_{p_1,j}\cdotp{p}_{p_2,k}+\epsilon\ \right), \end{equation*}\end{document}</tex-math></disp-formula>where <inline-formula><tex-math notation="LaTeX" id="ineq12">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\alpha$\end{document}</tex-math></inline-formula> controls the importance of the Mendelian inheritance penalty in the model, and <inline-formula><tex-math notation="LaTeX" id="ineq13">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\epsilon$\end{document}</tex-math></inline-formula> is a small number (1e−9 by default) to cap the log function to avoid reaching infinity. <inline-formula><tex-math notation="LaTeX" id="ineq14">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\alpha$\end{document}</tex-math></inline-formula> is set as 1 by default, which was decided experimentally.</p>
      <p>With the MCVLoss available, the final Clair3-trio loss function is<disp-formula id="deqn13"><label>(10)</label><tex-math notation="LaTeX" id="DmEquation13">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}\begin{eqnarray*}&amp; \mathrm{Loss}(F)=\mathrm{FocalLoss}\left({Y}_{gt,c},{P}_{gt,c}\right)+\nonumber\\&amp;\mathrm{FocalLoss}\left({Y}_{gt,{p}_1},{P}_{gt,{p}_1}\right)+\nonumber\\&amp;\mathrm{FocalLoss}\left({Y}_{gt,{p}_2},{P}_{gt,{p}_2}\right)+\nonumber\\&amp;\mathrm{MCVLoss}\left({P}_{\mathrm{trio}}\right)+{L}_2(F), \end{eqnarray*}\end{document}</tex-math></disp-formula>where <inline-formula><tex-math notation="LaTeX" id="ineq15">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${Y}_{gt}$\end{document}</tex-math></inline-formula> denotes the true 21-genotype ground truth and <inline-formula><tex-math notation="LaTeX" id="ineq16">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${P}_{gt}$\end{document}</tex-math></inline-formula> denotes the predicted probability of each 21-genotype label.</p>
      <p>In this manner, MCVLoss introduced the Mendelian inheritance prior to model training. The detailed results of using MCVLoss are presented in <xref rid="sec15" ref-type="sec">Results</xref> section.</p>
    </sec>
    <sec id="sec14">
      <title>Benchmarking methods and metrics</title>
      <p>We use Precision, Recall and F1-score metrics to evaluate the family trio variant-calling performance in different configurations. The Precision, Recall and F1-score are computed via hap.py (v0.3.12) [<xref rid="ref19" ref-type="bibr">19</xref>]. We computed the number of Mendelian violation variants in trios using the following steps: (i) merging all trio variants results using BCFtools (v1.12) [<xref rid="ref20" ref-type="bibr">20</xref>] with the flag ‘-f PASS -0 -m all’ and (ii) computing the number of Mendelian violations via RTG tools (v3.12.1) [<xref rid="ref21" ref-type="bibr">21</xref>]. We also computed the number of <italic toggle="yes">de novo</italic> variants in the model’s prediction, where the <italic toggle="yes">de novo</italic> variants [<xref rid="ref15" ref-type="bibr">15</xref>] are defined as variants confidently genotyped as 0/1 in the child and as 0/0 or unknown in the parents. Note that the metrics of Precision, Recall, F1-score and number of <italic toggle="yes">de novo</italic> variants are constrained in the confidence region, while the number of the Mendelian violations is computed in all sites.</p>
    </sec>
  </sec>
  <sec id="sec15">
    <title>Results</title>
    <sec id="sec16">
      <title>Data description</title>
      <p>We conducted our experiments on the dataset collected in the Genome in a Bottle (GIAB) [<xref rid="ref16" ref-type="bibr">16</xref>] Ashkenazi Jewish trio (HG002-child, HG003-father, HG004-mother). We obtained the ONT sequencing data from the Human Pangenome Reference Consortium (HPRC) [<xref rid="ref22" ref-type="bibr">22</xref>], with high coverage in three samples, HG002 (~432×), HG003 (~85×) and HG004 (~88×), which were base-called via Guppy4.2.2. We trained models on the ONT data while holding out chromosome 20 in all training stages and preserving it for testing. The truth variants for the trio were obtained from GIAB’s v4.2.1 small variant benchmark [<xref rid="ref16" ref-type="bibr">16</xref>]. We compared Clair3-Trio with Clair3 (v0.1-r6) and PEPPER-Margin-DeepVariant (r0.4) (PEPPER). For individual evaluation, the benchmark was constrained in the individual region provided in GIAB’s v4.2.1 small variant benchmark, while the computation of <italic toggle="yes">de novo</italic> variants was constrained in the trio’s overlapped high-confident bed regions.</p>
    </sec>
    <sec id="sec17">
      <title>Assessing variant-calling accuracy in individuals</title>
      <p>We compared the Clair3-Trio variant-calling performance against Clair3 and PEPPER at different coverage in individuals from the GIAB trio. The overall benchmark results are shown in <xref rid="f2" ref-type="fig">Figure 2</xref> (SNP + INDEL), with SNP and INDEL breakdowns in <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure 1</xref> (SNP, see Supplementary Data available online at <ext-link xlink:href="http://bib.oxfordjournals.org/" ext-link-type="uri">http://bib.oxfordjournals.org/</ext-link>) and <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure 2</xref> (INDEL, see Supplementary Data available online at <ext-link xlink:href="http://bib.oxfordjournals.org/" ext-link-type="uri">http://bib.oxfordjournals.org/</ext-link>) (‘90x’ means ‘up to 90x’ in both figures and tables). For all variants, we observed that Clair3-Trio had a better performance in the F1-score than Clair3 and PEPPER. The performance gain was especially profound in the lower coverage data. Clair3-Trio achieved an F1-score of 92.85 and 92.12% at 10× data from HG002 (child) and HG003 (parent), compared with 82.78 and 86.77% in Clair3 and 54.77 and 65.70% in PEPPER, respectively. More details are provided in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table 1</xref> (see Supplementary Data available online at <ext-link xlink:href="http://bib.oxfordjournals.org/" ext-link-type="uri">http://bib.oxfordjournals.org/</ext-link>).</p>
      <fig position="float" id="f2">
        <label>Figure 2</label>
        <caption>
          <p>Overall benchmarking results on the GIAB trio. The SNP + INDEL’s F1-score, Precision and Recall of different tools at coverage from 10× to 90× on HG002 (child, left) and HG003 (parent, right).</p>
        </caption>
        <graphic xlink:href="bbac301f2" position="float"/>
      </fig>
      <p>The SNP and INDEL performance breakdowns are shown in <xref rid="sup1" ref-type="supplementary-material">Supplementary Figures 1</xref> and <xref rid="sup1" ref-type="supplementary-material">2</xref> (see Supplementary Data available online at <ext-link xlink:href="http://bib.oxfordjournals.org/" ext-link-type="uri">http://bib.oxfordjournals.org/</ext-link>). We found that Clair3-Trio had higher performance in both SNP and INDEL than Clair3 and PEPPER. For SNP, Clair3-Trio performed better than Clair3 and PEPPER, especially below 40× coverage. For INDEL, Clair3-Trio showed consistently better results than Clair3 and PEPPER. For INDEL, Clair3-Trio achieved an F1-score of 78.07 and 77.40% at 60× HG002 (child) and HG003 (parent) data, respectively. This is much higher than 72.45 and 75.02% in Clair3 and 66.94 and 68.91% in PEPPER. These results verify the effectiveness of the Clair3-Trio model.</p>
      <p>Comparing performance gain among members of the family trio, we found that the performance gain in the child (HG002) was much more profound than that in the parents (HG003 and HG004). For INDEL, Clair3-Trio achieved a +5.62% increment in the F1-score in the child compared with Clair3 at 60×, while the improvement dropped to +2.38% in the parents (<xref rid="sup1" ref-type="supplementary-material">Supplementary Table 1</xref><bold>,</bold> see Supplementary Data available online at <ext-link xlink:href="http://bib.oxfordjournals.org/" ext-link-type="uri">http://bib.oxfordjournals.org/</ext-link>). The rationale is that for calling variants, the family trio provided more information about the child, which shares two haplotypes with parents, while each parent shares only one haplotype with the child.</p>
    </sec>
    <sec id="sec18">
      <title>Assessing variant-calling accuracy in a family trio</title>
      <p>Comprehensively evaluating variants across all family members using metrics such as the number of Mendelian violations is important when calling variants in a family trio. In Mendelian inheritance violations, Clair3-Trio showed an order of magnitude fewer violations than Clair3 and PEPPER at 10× to 30× coverage. As shown in <xref rid="f6" ref-type="fig">Figure 3</xref> and <xref rid="sup1" ref-type="supplementary-material">Supplementary Table 1</xref> (see Supplementary Data available online at <ext-link xlink:href="http://bib.oxfordjournals.org/" ext-link-type="uri">http://bib.oxfordjournals.org/</ext-link>), at 10× coverage, there were 7072 Mendelian violations called from Clair3-Trio, while the number were 48 345 and 131 509 in Clair3 and PEPPER, respectively. At 60×, in contrast, there were 8429 Mendelian violations called from Clair3-Trio, and 30 725 and 20 559 in Clair3 and PEPPER, respectively. Regarding the number of Mendelian violations found in Clair3-Trio at 60×, 70.3 and 29.7% of the calls were SNP and INDEL, respectively, indicating a large proportion of SNP and INDEL Mendelian violations recognized by Clair3-Trio. In contrast, for the number of <italic toggle="yes">de novo</italic> variants, Clair3-Trio has fewer false-positive (FP) <italic toggle="yes">de novo</italic> variants than other tools had. Clair3-Trio had 197 FPs at 60× data compared with 458 and 455 in Clair3 and PEPPER, respectively. However, Clair3-Trio found slightly fewer true-positive (TP) <italic toggle="yes">de novo</italic> variants, 33, compared with 35 in both Clair3 and PEPPER. We gathered all false-negative <italic toggle="yes">de novo</italic> variant cases of Clair3-Trio in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table 2</xref> (see Supplementary Data available online at <ext-link xlink:href="http://bib.oxfordjournals.org/" ext-link-type="uri">http://bib.oxfordjournals.org/</ext-link>) and present their alignment visualization in <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure 3</xref> (see Supplementary Data available online at <ext-link xlink:href="http://bib.oxfordjournals.org/" ext-link-type="uri">http://bib.oxfordjournals.org/</ext-link>). More discussion about the Mendelian violations and <italic toggle="yes">de novo</italic> variant calling for Clair3-Trio are presented in <xref rid="sec24" ref-type="sec">Discussion</xref> section.</p>
      <fig position="float" id="f6">
        <label>Figure 3</label>
        <caption>
          <p>Trio benchmarking results on the GIAB trio. (<bold>A</bold>) The number of Mendelian inheritance violations, <italic toggle="yes">de novo</italic> true positives and <italic toggle="yes">de novo</italic> false positives found in different tools. (<bold>B</bold>) The breakdown of Mendelian violation rate of 60× from Clair3-Trio.</p>
        </caption>
        <graphic xlink:href="bbac301f3" position="float"/>
      </fig>
      <p>We also benchmarked Clair3-Trio at the Chinese trio (HG005 trio) from GIAB. We obtained the ONT sequencing data (base-called via Guppy4.2.2 with a maximum trio coverage of 40×) from HPRC [<xref rid="ref22" ref-type="bibr">22</xref>] and the truth variants from GIAB’s v4.2.1 small variant [<xref rid="ref16" ref-type="bibr">16</xref>]. The results are available in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table 3</xref> (see Supplementary Data available online at <ext-link xlink:href="http://bib.oxfordjournals.org/" ext-link-type="uri">http://bib.oxfordjournals.org/</ext-link>). Clair3-Trio showed consistently better results than Clair3 and PEPPER in the HG005 trio. Clair3-Trio achieved an F1-score of 98.16 and 97.58% at 40× data from HG005 (child) and HG006 (parent), compared with 97.60 and 97.39% in Clair3 and 97.02 and 96.81% in PEPPER, respectively.</p>
      <p>After the initial release of Clair3-Trio, both Clair3 and PEPPER released their new version with models supporting Guppy5 data. We trained a new Clair3-Trio model with Guppy5 data and benchmarked the new model with Clair3 (v0.1-r11) and PEPPER (r0.8)’s Guppy5 models. We found that the performance trend of Clair3-Trio for Guppy5 remains the same as in Guppy 4. Results are available in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table 4</xref> (see Supplementary Data available online at <ext-link xlink:href="http://bib.oxfordjournals.org/" ext-link-type="uri">http://bib.oxfordjournals.org/</ext-link>).</p>
    </sec>
    <sec id="sec19">
      <title>Assessing the effect of varying parental coverage on variant-calling accuracy</title>
      <p>When calling variants from trios, it is common to see parents having halved or even lower coverage against the full of the coverage of the children to manage sequencing costs [<xref rid="ref23" ref-type="bibr">23</xref>]. To assess the effect of low parental coverage on variant calling, we set the child sample to coverage of 60× and downsampled the sequencing data of parents from 60× into test ranges of 10×, 20×, 30×, 40×, 50× and 60×. The test results are shown in <xref rid="f11" ref-type="fig">Figure 4</xref> (SNP + INDEL), and further details are provided in <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure 4</xref> (SNP, see Supplementary Data available online at <ext-link xlink:href="http://bib.oxfordjournals.org/" ext-link-type="uri">http://bib.oxfordjournals.org/</ext-link>), <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure 5</xref> (INDEL, see Supplementary Data available online at <ext-link xlink:href="http://bib.oxfordjournals.org/" ext-link-type="uri">http://bib.oxfordjournals.org/</ext-link>) and <xref rid="sup1" ref-type="supplementary-material">Supplementary Table 5</xref> (see Supplementary Data available online at <ext-link xlink:href="http://bib.oxfordjournals.org/" ext-link-type="uri">http://bib.oxfordjournals.org/</ext-link>). For the child sample, the performance of Clair3-Trio is similar to that of Clair3 when the parent has very low coverage (10×) overall, indicating that 20× or more for parents is required for trio calling to improve the variant calling for the child. When the parents have half the child’s coverage (child 60×, parents 30×), Clair3-Trio achieved an overall F1-score of 96.92%, compared with 96.50 and 95.98% for Clair3 and PEPPER, respectively. Separating the results from SNP and INDEL, we found that Clair3-Trio outperformed the other tools when parents had coverage higher than 10× for SNP calling and coverage higher than 30× for INDEL calling. Furthermore, in Clair3-Trio, there was a large improvement in the performance of low-coverage parent data when higher coverage for the child was provided (<xref rid="f11" ref-type="fig">Figure 4</xref>). Clair3-Trio achieved a +6.02% increment in the F1-score in HG003 (10× parent sample) compared with Clair3. Furthermore, when parents had half the child’s coverage (60× for child and 30× for parents), Clair3-Trio had an F1-score of 96.54% for HG003, which is also higher than 95.83% in Clair3 and 95.07% in PEPPER.</p>
      <fig position="float" id="f11">
        <label>Figure 4</label>
        <caption>
          <p>Overall benchmarking results on the GIAB trio when only the parent samples have diverse coverage. The SNP + INDEL’s F1-score, Precision and Recall of different tools at coverage from 10× to 60× on parent samples with the child’s coverage fixed at 60×.</p>
        </caption>
        <graphic xlink:href="bbac301f4" position="float"/>
      </fig>
      <p>We also tested Clair3-Trio in a scenario where only the child has lower coverage (with 10× for the child and 30× for parents). The scenario with higher coverage for parents is easier for trio calling compared with lower or equal coverage for parents in trio data. The results are available in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table 6</xref> (see Supplementary Data available online at <ext-link xlink:href="http://bib.oxfordjournals.org/" ext-link-type="uri">http://bib.oxfordjournals.org/</ext-link>). We found that Clair3-Trio remains to have a higher performance, with 93.69% of F1-score in 10× in the child, than 82.78% in Clair3 and 54.77% in PEPPER in this scenario.</p>
      <p>The improvement of Clair3-Trio on the trio data makes it useful for population genome projects in which better variant calling performance is expected for both parents and children.</p>
    </sec>
    <sec id="sec20">
      <title>Building the Clair3-trio model</title>
      <sec id="sec21">
        <title>Comparison of different architectures and model shape</title>
        <p>We first categorized different methods based on their input and output information to generalize different methods for variant calling from family child–mother–father trio data. The One-to-One model inputs single sample information and outputs single sample variants. Clair3, PEPPER and Medaka are typical One-to-One models. The Trio-to-One model inputs data from three samples into the model and outputs single sample variants. For example, DeepTrio, which works with Illumina and PacBio HiFi data, is a typical Trio-to-One model. Finally, the Trio-to-Trio model inputs data from three samples into the model and outputs the three samples’ variants simultaneously. In Clair3-Trio, we built the first Trio-to-Trio model.</p>
        <p>To compare the performance of different architectures, we ablated the input and output tensors of Clair3-Trio models accordingly to test as three architectures: One-to-One, Trio-to-One and Trio-to-Trio models. The One-to-One model has single sample input and predicts single sample variants, as in Clair3 and PEPPER. The Trio-to-One model has information of three samples in its input but predicts single sample variants in its model, as in DeepTrio. The Trio-to-Trio model is a native version of Clair3-Trio, which has three samples input and three samples output, but with deactivated MCVLoss and fine-tuning. We trained a single model for all architectures on chromosome 1 64× data from the GIAB HG002 trio and tested the performance on chromosome 20. For the Trio-to-One model, which is sample order specific, we trained two models separately to make predictions: a child model and a parent model. The benchmark results for the child as well as the number of Mendelian violations are in <xref rid="f16" ref-type="fig">Figure 5</xref>.</p>
        <fig position="float" id="f16">
          <label>Figure 5</label>
          <caption>
            <p>Comparison of different architectures and shapes for calling variants from trios. All results were trained on chr1 and tested on chr20. (<bold>A</bold>) The performance of different model architecture, including one-to-one (Model-A), trio-to-one (Model-B), trio-to-trio (Model-C) and Clair3-Trio (Model-D, fine-tuned with MCVLoss) architecture; (<bold>B</bold>) The schema of different trio-to-trio model shapes, and (<bold>C</bold>) Comparison of different model shapes.</p>
          </caption>
          <graphic xlink:href="bbac301f5" position="float"/>
        </fig>
        <p>We found that including trios information in the model efficiently improves the variant calling performance overall, especially in terms of Mendelian inheritance violations (<xref rid="f16" ref-type="fig">Figure 5</xref>). Switching from One-to-One to Trio-to-One alone can boost the F1-score in the child by about +0.23%. The performance increment is consistent with the DeepTrio results [<xref rid="ref15" ref-type="bibr">15</xref>]. The performance-boosting increased to +0.37% and +1.2% when the architecture was switched to Trio-to-Trio and Clair3-Trio (with MCVLoss and fine-tuning), respectively. For the child sample, the F1-score for Trio-to-Trio, One-to-One and Trio-to-One was 96.30, 95.93 and 96.16%, respectively. However, for the parent samples, Trio-to-Trio was only slightly better than One-to-One and Trio-to-One. We also found that the Trio-to-Trio architecture predicted many fewer Mendelian inheritance violation variants: 7872 in the Trio-to-Trio model, 29 753 in the One-to-One model and 20 016 in the Trio-to-One model.</p>
        <p>To further explore the best architecture for the Trio-to-Trio model, we also evaluated the effect of using different model shapes. With three inputs and three outputs available, we developed multiple candidates for model shape, as illustrated in <xref rid="f16" ref-type="fig">Figure 5</xref>: (i) Model-A, which inputs the information of all samples into Resblock and divides the last dense layer to give three outputs; (ii) Model-B, which inputs the information of all samples into Resblock divided at all dense layers; (iii) Model-C, which inputs single sample information into shared Resblock and divides the last dense layer to generate three outputs and (iv) Model-D, which shares multiple Resblock from a single input and divides the last dense layer to generate three outputs. We found that Model-A and Model-C achieved a similar F1-score (96.30% for Model-A and 96.26% for Model-C) in the child sample to that in Model-B (96.18%) and Model-D (96.25%), but Model-A had many fewer Mendelian violation predictions than the other models (7872 compared with 11 278, 10 053 and 10 370, respectively, in the other shapes). For this reason, we selected Model-A as the best shape for the Trio-to-Trio architecture.</p>
      </sec>
      <sec id="sec22">
        <title>Finetuning with MCVLoss</title>
        <p>The MCVLoss (Mendelian Inheritance Constraint Violation Loss) function is designed to improve variant calling in trios by leveraging the explicit encoding of the priors of the Mendelian inheritance in trios. We found that MCVLoss can effectively reduce Mendelian violation prediction in variant calling. However, the prediction is better accompanied with fine-tuning techniques, in which we train a Clair3-Trio model in two steps: (i) training Clair3-Trio without MCVLoss with the default learning rate (1e−3 in our setting) and (ii) fine-tuning the trained Clair3-Trio model with MCVLoss with a lower learning rate (1e−5 in our setting). When using the fine-tuning technique alone, the F1-score from HG002, HG003 and HG004 had a performance boost of +0.2% (<xref rid="TB1" ref-type="table">Table 1</xref>). We got the best results when combining fine-tuning and MCVLoss with the +0.2% F1-score increment and a Mendelian violations reduction from 7872 to 4352.</p>
        <table-wrap position="float" id="TB1">
          <label>Table 1</label>
          <caption>
            <p>Benchmarking results from fine-tuning with MCVLoss. All results were tested at 64× data. FT: fine-tune; ‘# of MCV’: number of Mendelian inheritance violations in predicted variants</p>
          </caption>
          <table frame="hsides" rules="groups">
            <colgroup span="1">
              <col align="left" span="1"/>
              <col align="left" span="1"/>
              <col align="left" span="1"/>
              <col align="left" span="1"/>
              <col align="left" span="1"/>
              <col align="left" span="1"/>
              <col align="left" span="1"/>
              <col align="left" span="1"/>
              <col align="left" span="1"/>
              <col align="left" span="1"/>
              <col align="left" span="1"/>
              <col align="left" span="1"/>
              <col align="left" span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th rowspan="2" align="left" colspan="1">FT</th>
                <th rowspan="2" align="left" colspan="1">MCV-Loss</th>
                <th rowspan="2" align="left" colspan="1">Sample</th>
                <th colspan="3" align="left" rowspan="1">Overall</th>
                <th colspan="3" align="left" rowspan="1">SNP</th>
                <th colspan="3" align="left" rowspan="1">Indel</th>
                <th rowspan="2" align="left" colspan="1"># of MCV</th>
              </tr>
              <tr>
                <th align="left" rowspan="1" colspan="1">Precision</th>
                <th align="left" rowspan="1" colspan="1">Recall</th>
                <th align="left" rowspan="1" colspan="1">F1-Score</th>
                <th align="left" rowspan="1" colspan="1">Precision</th>
                <th align="left" rowspan="1" colspan="1">Recall</th>
                <th align="left" rowspan="1" colspan="1">F1-Score</th>
                <th align="left" rowspan="1" colspan="1">Precision</th>
                <th align="left" rowspan="1" colspan="1">Recall</th>
                <th align="left" rowspan="1" colspan="1">F1-Score</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left" rowspan="3" colspan="1">N</td>
                <td align="left" rowspan="3" colspan="1">N</td>
                <td align="left" rowspan="1" colspan="1">HG002</td>
                <td rowspan="1" colspan="1">98.83%</td>
                <td rowspan="1" colspan="1">93.90%</td>
                <td rowspan="1" colspan="1">96.30%</td>
                <td rowspan="1" colspan="1">99.72%</td>
                <td rowspan="1" colspan="1">99.57%</td>
                <td rowspan="1" colspan="1">99.64%</td>
                <td rowspan="1" colspan="1">90.02%</td>
                <td rowspan="1" colspan="1">57.92%</td>
                <td rowspan="1" colspan="1">70.49%</td>
                <td align="left" rowspan="3" colspan="1">7872</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">HG003</td>
                <td rowspan="1" colspan="1">98.72%</td>
                <td rowspan="1" colspan="1">94.12%</td>
                <td rowspan="1" colspan="1">96.36%</td>
                <td rowspan="1" colspan="1">99.65%</td>
                <td rowspan="1" colspan="1">99.54%</td>
                <td rowspan="1" colspan="1">99.59%</td>
                <td rowspan="1" colspan="1">89.34%</td>
                <td rowspan="1" colspan="1">58.35%</td>
                <td rowspan="1" colspan="1">70.59%</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">HG004</td>
                <td rowspan="1" colspan="1">98.84%</td>
                <td rowspan="1" colspan="1">93.93%</td>
                <td rowspan="1" colspan="1">96.32%</td>
                <td rowspan="1" colspan="1">99.70%</td>
                <td rowspan="1" colspan="1">99.58%</td>
                <td rowspan="1" colspan="1">99.64%</td>
                <td rowspan="1" colspan="1">90.01%</td>
                <td rowspan="1" colspan="1">57.06%</td>
                <td rowspan="1" colspan="1">69.84%</td>
              </tr>
              <tr>
                <td align="left" rowspan="3" colspan="1">Y</td>
                <td align="left" rowspan="3" colspan="1">N</td>
                <td align="left" rowspan="1" colspan="1">HG002</td>
                <td rowspan="1" colspan="1">98.79%</td>
                <td rowspan="1" colspan="1">94.31%</td>
                <td rowspan="1" colspan="1">96.50%</td>
                <td rowspan="1" colspan="1">99.67%</td>
                <td rowspan="1" colspan="1">99.68%</td>
                <td rowspan="1" colspan="1">99.67%</td>
                <td rowspan="1" colspan="1">90.45%</td>
                <td rowspan="1" colspan="1">60.21%</td>
                <td rowspan="1" colspan="1">72.29%</td>
                <td align="left" rowspan="3" colspan="1">4885</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">HG003</td>
                <td rowspan="1" colspan="1">98.83%</td>
                <td rowspan="1" colspan="1">94.42%</td>
                <td rowspan="1" colspan="1">96.58%</td>
                <td rowspan="1" colspan="1">99.61%</td>
                <td rowspan="1" colspan="1">99.64%</td>
                <td rowspan="1" colspan="1">99.63%</td>
                <td rowspan="1" colspan="1">90.99%</td>
                <td rowspan="1" colspan="1">59.96%</td>
                <td rowspan="1" colspan="1">72.29%</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">HG004</td>
                <td rowspan="1" colspan="1">98.91%</td>
                <td rowspan="1" colspan="1">94.22%</td>
                <td rowspan="1" colspan="1">96.51%</td>
                <td rowspan="1" colspan="1">99.69%</td>
                <td rowspan="1" colspan="1">99.66%</td>
                <td rowspan="1" colspan="1">99.67%</td>
                <td rowspan="1" colspan="1">91.06%</td>
                <td rowspan="1" colspan="1">58.78%</td>
                <td rowspan="1" colspan="1">71.44%</td>
              </tr>
              <tr>
                <td align="left" rowspan="3" colspan="1">N</td>
                <td align="left" rowspan="3" colspan="1">Y</td>
                <td align="left" rowspan="1" colspan="1">HG002</td>
                <td rowspan="1" colspan="1">99.02%</td>
                <td rowspan="1" colspan="1">93.59%</td>
                <td rowspan="1" colspan="1">96.23%</td>
                <td rowspan="1" colspan="1">99.72%</td>
                <td rowspan="1" colspan="1">99.56%</td>
                <td rowspan="1" colspan="1">99.64%</td>
                <td rowspan="1" colspan="1">91.69%</td>
                <td rowspan="1" colspan="1">55.69%</td>
                <td rowspan="1" colspan="1">69.30%</td>
                <td align="left" rowspan="3" colspan="1">4754</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">HG003</td>
                <td rowspan="1" colspan="1">98.87%</td>
                <td rowspan="1" colspan="1">93.95%</td>
                <td rowspan="1" colspan="1">96.34%</td>
                <td rowspan="1" colspan="1">99.64%</td>
                <td rowspan="1" colspan="1">99.61%</td>
                <td rowspan="1" colspan="1">99.63%</td>
                <td rowspan="1" colspan="1">90.64%</td>
                <td rowspan="1" colspan="1">56.58%</td>
                <td rowspan="1" colspan="1">69.67%</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">HG004</td>
                <td rowspan="1" colspan="1">98.83%</td>
                <td rowspan="1" colspan="1">93.95%</td>
                <td rowspan="1" colspan="1">96.32%</td>
                <td rowspan="1" colspan="1">99.72%</td>
                <td rowspan="1" colspan="1">99.61%</td>
                <td rowspan="1" colspan="1">99.66%</td>
                <td rowspan="1" colspan="1">89.64%</td>
                <td rowspan="1" colspan="1">57.05%</td>
                <td rowspan="1" colspan="1">69.72%</td>
              </tr>
              <tr>
                <td align="left" rowspan="3" colspan="1">Y</td>
                <td align="left" rowspan="3" colspan="1">Y</td>
                <td align="left" rowspan="1" colspan="1">HG002</td>
                <td rowspan="1" colspan="1">98.72%</td>
                <td rowspan="1" colspan="1">94.37%</td>
                <td rowspan="1" colspan="1">96.50%</td>
                <td rowspan="1" colspan="1">99.67%</td>
                <td rowspan="1" colspan="1">99.68%</td>
                <td rowspan="1" colspan="1">99.68%</td>
                <td rowspan="1" colspan="1">89.75%</td>
                <td rowspan="1" colspan="1">60.70%</td>
                <td rowspan="1" colspan="1">72.42%</td>
                <td align="left" rowspan="3" colspan="1">4352</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">HG003</td>
                <td rowspan="1" colspan="1">98.77%</td>
                <td rowspan="1" colspan="1">94.46%</td>
                <td rowspan="1" colspan="1">96.57%</td>
                <td rowspan="1" colspan="1">99.61%</td>
                <td rowspan="1" colspan="1">99.63%</td>
                <td rowspan="1" colspan="1">99.62%</td>
                <td rowspan="1" colspan="1">90.47%</td>
                <td rowspan="1" colspan="1">60.31%</td>
                <td rowspan="1" colspan="1">72.37%</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">HG004</td>
                <td rowspan="1" colspan="1">98.88%</td>
                <td rowspan="1" colspan="1">94.27%</td>
                <td rowspan="1" colspan="1">96.52%</td>
                <td rowspan="1" colspan="1">99.69%</td>
                <td rowspan="1" colspan="1">99.66%</td>
                <td rowspan="1" colspan="1">99.67%</td>
                <td rowspan="1" colspan="1">90.83%</td>
                <td rowspan="1" colspan="1">59.14%</td>
                <td rowspan="1" colspan="1">71.64%</td>
              </tr>
            </tbody>
          </table>
        </table-wrap>
        <p>We also evaluated the effect of using a different <inline-formula><tex-math notation="LaTeX" id="ineq17">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\alpha$\end{document}</tex-math></inline-formula> rate in MCVLoss (<xref rid="TB2" ref-type="table">Table 2</xref>). The <inline-formula><tex-math notation="LaTeX" id="ineq18">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\alpha$\end{document}</tex-math></inline-formula> rate in MCVLoss controls the weighting in terms of loss function, as in formula (<xref rid="deqn12" ref-type="disp-formula">9</xref>). We observed that increasing the <inline-formula><tex-math notation="LaTeX" id="ineq19">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\alpha$\end{document}</tex-math></inline-formula> rate efficiently decreases the number of Mendelian inheritance violations but slightly decreases the overall performance based on the F1-score. We found the <inline-formula><tex-math notation="LaTeX" id="ineq20">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\alpha$\end{document}</tex-math></inline-formula> rate of 1 to be the best setting for MCVLoss, which balances the F1-score and the number of Mendelian inheritance violations metrics.</p>
        <table-wrap position="float" id="TB2">
          <label>Table 2</label>
          <caption>
            <p>Benchmarking results of different <inline-formula><tex-math notation="LaTeX" id="ineq21">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\alpha$\end{document}</tex-math></inline-formula> rate in MCVLoss. All results were tested at 64× data. ‘# of MCV’: number of Mendelian inheritance violations in predicted variants</p>
          </caption>
          <table frame="hsides" rules="groups">
            <colgroup span="1">
              <col align="left" span="1"/>
              <col align="left" span="1"/>
              <col align="left" span="1"/>
              <col align="left" span="1"/>
              <col align="left" span="1"/>
              <col align="left" span="1"/>
              <col align="left" span="1"/>
              <col align="left" span="1"/>
              <col align="left" span="1"/>
              <col align="left" span="1"/>
              <col align="left" span="1"/>
              <col align="left" span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th rowspan="2" align="left" colspan="1">α</th>
                <th rowspan="2" align="left" colspan="1">Sample</th>
                <th colspan="3" align="left" rowspan="1">Overall</th>
                <th colspan="3" align="left" rowspan="1">SNP</th>
                <th colspan="3" align="left" rowspan="1">Indel</th>
                <th rowspan="2" align="left" colspan="1"># of MCV</th>
              </tr>
              <tr>
                <th align="left" rowspan="1" colspan="1">Precision</th>
                <th align="left" rowspan="1" colspan="1">Recall</th>
                <th align="left" rowspan="1" colspan="1">F1-Score</th>
                <th align="left" rowspan="1" colspan="1">Precision</th>
                <th align="left" rowspan="1" colspan="1">Recall</th>
                <th align="left" rowspan="1" colspan="1">F1-Score</th>
                <th align="left" rowspan="1" colspan="1">Precision</th>
                <th align="left" rowspan="1" colspan="1">Recall</th>
                <th align="left" rowspan="1" colspan="1">F1-Score</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left" rowspan="3" colspan="1">0</td>
                <td align="left" rowspan="1" colspan="1">HG002</td>
                <td rowspan="1" colspan="1">98.79%</td>
                <td rowspan="1" colspan="1">94.31%</td>
                <td rowspan="1" colspan="1">96.50%</td>
                <td rowspan="1" colspan="1">99.67%</td>
                <td rowspan="1" colspan="1">99.68%</td>
                <td rowspan="1" colspan="1">99.67%</td>
                <td rowspan="1" colspan="1">90.45%</td>
                <td rowspan="1" colspan="1">60.21%</td>
                <td rowspan="1" colspan="1">72.29%</td>
                <td align="left" rowspan="3" colspan="1">4885</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">HG003</td>
                <td rowspan="1" colspan="1">98.83%</td>
                <td rowspan="1" colspan="1">94.42%</td>
                <td rowspan="1" colspan="1">96.58%</td>
                <td rowspan="1" colspan="1">99.61%</td>
                <td rowspan="1" colspan="1">99.64%</td>
                <td rowspan="1" colspan="1">99.63%</td>
                <td rowspan="1" colspan="1">90.99%</td>
                <td rowspan="1" colspan="1">59.96%</td>
                <td rowspan="1" colspan="1">72.29%</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">HG004</td>
                <td rowspan="1" colspan="1">98.91%</td>
                <td rowspan="1" colspan="1">94.22%</td>
                <td rowspan="1" colspan="1">96.51%</td>
                <td rowspan="1" colspan="1">99.69%</td>
                <td rowspan="1" colspan="1">99.66%</td>
                <td rowspan="1" colspan="1">99.67%</td>
                <td rowspan="1" colspan="1">91.06%</td>
                <td rowspan="1" colspan="1">58.78%</td>
                <td rowspan="1" colspan="1">71.44%</td>
              </tr>
              <tr>
                <td align="left" rowspan="3" colspan="1">0.1</td>
                <td align="left" rowspan="1" colspan="1">HG002</td>
                <td rowspan="1" colspan="1">98.77%</td>
                <td rowspan="1" colspan="1">94.33%</td>
                <td rowspan="1" colspan="1">96.50%</td>
                <td rowspan="1" colspan="1">99.67%</td>
                <td rowspan="1" colspan="1">99.68%</td>
                <td rowspan="1" colspan="1">99.68%</td>
                <td rowspan="1" colspan="1">90.19%</td>
                <td rowspan="1" colspan="1">60.38%</td>
                <td rowspan="1" colspan="1">72.33%</td>
                <td align="left" rowspan="3" colspan="1">4990</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">HG003</td>
                <td rowspan="1" colspan="1">98.83%</td>
                <td rowspan="1" colspan="1">94.42%</td>
                <td rowspan="1" colspan="1">96.57%</td>
                <td rowspan="1" colspan="1">99.62%</td>
                <td rowspan="1" colspan="1">99.63%</td>
                <td rowspan="1" colspan="1">99.63%</td>
                <td rowspan="1" colspan="1">90.91%</td>
                <td rowspan="1" colspan="1">59.97%</td>
                <td rowspan="1" colspan="1">72.27%</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">HG004</td>
                <td rowspan="1" colspan="1">99.12%</td>
                <td rowspan="1" colspan="1">94.06%</td>
                <td rowspan="1" colspan="1">96.52%</td>
                <td rowspan="1" colspan="1">99.71%</td>
                <td rowspan="1" colspan="1">99.65%</td>
                <td rowspan="1" colspan="1">99.68%</td>
                <td rowspan="1" colspan="1">92.93%</td>
                <td rowspan="1" colspan="1">57.61%</td>
                <td rowspan="1" colspan="1">71.13%</td>
              </tr>
              <tr>
                <td align="left" rowspan="3" colspan="1">1</td>
                <td align="left" rowspan="1" colspan="1">HG002</td>
                <td rowspan="1" colspan="1">98.72%</td>
                <td rowspan="1" colspan="1">94.37%</td>
                <td rowspan="1" colspan="1">96.50%</td>
                <td rowspan="1" colspan="1">99.67%</td>
                <td rowspan="1" colspan="1">99.68%</td>
                <td rowspan="1" colspan="1">99.68%</td>
                <td rowspan="1" colspan="1">89.75%</td>
                <td rowspan="1" colspan="1">60.70%</td>
                <td rowspan="1" colspan="1">72.42%</td>
                <td align="left" rowspan="3" colspan="1">4352</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">HG003</td>
                <td rowspan="1" colspan="1">98.77%</td>
                <td rowspan="1" colspan="1">94.46%</td>
                <td rowspan="1" colspan="1">96.57%</td>
                <td rowspan="1" colspan="1">99.61%</td>
                <td rowspan="1" colspan="1">99.63%</td>
                <td rowspan="1" colspan="1">99.62%</td>
                <td rowspan="1" colspan="1">90.47%</td>
                <td rowspan="1" colspan="1">60.31%</td>
                <td rowspan="1" colspan="1">72.37%</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">HG004</td>
                <td rowspan="1" colspan="1">98.88%</td>
                <td rowspan="1" colspan="1">94.27%</td>
                <td rowspan="1" colspan="1">96.52%</td>
                <td rowspan="1" colspan="1">99.69%</td>
                <td rowspan="1" colspan="1">99.66%</td>
                <td rowspan="1" colspan="1">99.67%</td>
                <td rowspan="1" colspan="1">90.83%</td>
                <td rowspan="1" colspan="1">59.14%</td>
                <td rowspan="1" colspan="1">71.64%</td>
              </tr>
              <tr>
                <td align="left" rowspan="3" colspan="1">10</td>
                <td align="left" rowspan="1" colspan="1">HG002</td>
                <td rowspan="1" colspan="1">98.87%</td>
                <td rowspan="1" colspan="1">94.17%</td>
                <td rowspan="1" colspan="1">96.46%</td>
                <td rowspan="1" colspan="1">99.69%</td>
                <td rowspan="1" colspan="1">99.64%</td>
                <td rowspan="1" colspan="1">99.66%</td>
                <td rowspan="1" colspan="1">90.90%</td>
                <td rowspan="1" colspan="1">59.47%</td>
                <td rowspan="1" colspan="1">71.90%</td>
                <td align="left" rowspan="3" colspan="1">3926</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">HG003</td>
                <td rowspan="1" colspan="1">98.63%</td>
                <td rowspan="1" colspan="1">94.49%</td>
                <td rowspan="1" colspan="1">96.51%</td>
                <td rowspan="1" colspan="1">99.59%</td>
                <td rowspan="1" colspan="1">99.63%</td>
                <td rowspan="1" colspan="1">99.61%</td>
                <td rowspan="1" colspan="1">89.30%</td>
                <td rowspan="1" colspan="1">60.53%</td>
                <td rowspan="1" colspan="1">72.15%</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">HG004</td>
                <td rowspan="1" colspan="1">98.96%</td>
                <td rowspan="1" colspan="1">94.19%</td>
                <td rowspan="1" colspan="1">96.51%</td>
                <td rowspan="1" colspan="1">99.68%</td>
                <td rowspan="1" colspan="1">99.66%</td>
                <td rowspan="1" colspan="1">99.67%</td>
                <td rowspan="1" colspan="1">91.66%</td>
                <td rowspan="1" colspan="1">58.47%</td>
                <td rowspan="1" colspan="1">71.39%</td>
              </tr>
            </tbody>
          </table>
        </table-wrap>
      </sec>
      <sec id="sec23">
        <title>Computational efficiency of Clair3-trio</title>
        <p>We inherited the highly optimized modules from Clair3 and created a Clair3-Trio workflow (<xref rid="f1" ref-type="fig">Figure 1A</xref>) with parallel computing features in each component to enable efficient variant calling from trio data. We benchmarked the efficiency of Clair3-Trio with Clair3, and PEPPER on a machine with two 12-core Intel Xeon Silver 4116 processors. Clair3-Trio was computationally efficient for trio variant calling. Clair3-Trio takes around 3.4 times than calling a single sample with Clair3. More information on runtime and memory usage of Clair3-Trio is available in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table 7</xref> (see Supplementary Data available online at <ext-link xlink:href="http://bib.oxfordjournals.org/" ext-link-type="uri">http://bib.oxfordjournals.org/</ext-link>).</p>
      </sec>
    </sec>
  </sec>
  <sec id="sec24">
    <title>Discussion</title>
    <p>Clair3-Trio outperformed single sample callers especially at lower coverages, making sequencing a family trio at a relatively lower coverage more favorable than sequencing only the child to a high coverage. As an example, in <xref rid="sup1" ref-type="supplementary-material">Supplement Figure 6</xref> (see Supplementary Data available online at <ext-link xlink:href="http://bib.oxfordjournals.org/" ext-link-type="uri">http://bib.oxfordjournals.org/</ext-link>), two genotypes 0/1 and 0/2 in the child had an equal number of read supports in 10× data. Clair3 and PEPPER failed to call the variant base only on the child’s data. Clair3-Trio called the child genotype as 0/1 correctly with information from the parents at the same site.</p>
    <p>We found that most of the Mendelian violation cases from Clair3-Trio (68.6%) for parent-1, parent-2 and child, respectively, are: (0/0, 1/1, 0/0), (0/0, 1/1, 1/1), (0/0, 0/0, 0/1) and (0/0, 0/0, 1/1) (<xref rid="f6" ref-type="fig">Figure 3B</xref>). All these violations are prone to be found when there is a switch between heterozygosity and homozygosity in a single trio sample at a site. For example, in the case of Mendelian violations (0/0, 1/1, 0/0), the switch between heterozygous and homozygous in any member’s calling changes the variant calling to a non-Mendelian inheritance violation call. As all members have a chance of being miscalled, these cases remain a challenge even when trio data are available.</p>
    <p>Clair3-Trio has high performance overall, but it has fewer <italic toggle="yes">de novo</italic> variants predicted than Clair3 and PEPPER. The drop in TP of <italic toggle="yes">de novo</italic> variants is expected, as Clair3-Trio is designed to predict variants by leveraging information from family trios that favor having fewer Mendelian violations in their prediction. For detecting <italic toggle="yes">de novo</italic> variants that do not follow Mendelian inheritance, One-to-One model-based methods such as Clair3 and PEPPER can be used to supplement Clair3-Trio.</p>
    <p>There are some challenges and future works needed regarding trio variant calling from ONT data. Experiments show that Clair3-Trio’s improvement over state-of-the-art methods is profound when the trio data have similar coverage among family members, but it only marginally improves with calling variants from different data coverage (such as child coverage of 60× and parent coverage of 10×). These results leave room for further improvement in trio calling in diverse coverage applications. The current model is trained with multiple coverage down-sampled from the full coverage, but only with the coverage of the child kept equal to or larger than that of the parents, and not the cartesian product of the down-sampled coverage of the three samples. This is a practical decision to reduce the amount of training data and since the coverage of the child in a trio is usually higher than that of the parents. However, this may also challenge Clair3-Trio when the coverage of parents exceeds that of the child. An improved training scheme is expected to handle the large amount of training data when all coverage combinations are used. On the other hand, there is a research gap in applying variant calling in the human sex chromosome region. The current training and testing was constrained to the autosome region, which assumes that the variants are diplotypes and inherited from one of the parents. However, on the sex chromosome, the assumption is unheld when calling variants in the child’s Y chromosome, which is a haplotype and is obtained only from the father’s side. Currently, there are no tools available for calling variants in the sex chromosome region with the family information from ONT data. We need a new design for calling variants from the sex chromosome region to fill this research gap. In the future, we would like to design a heuristic approach to solve the question: if the child is female, use Clair3-Trio directly at the sex chromosome; if the child is male, use Clair3-Trio to call variants in the pseudoautosomal regions (PAR1 and PAR2) of the sex chromosome and build a tailored haplotype model to call variants in the remaining regions.</p>
  </sec>
  <sec id="sec27">
    <title>Conclusion</title>
    <p>In conclusion, we introduced Clair3-Trio, a high-performance Nanopore long-read variant caller in family trios with a Trio-to-Trio deep neural network. Clair3-Trio is the first family trio variant caller tailored for Nanopore long-read data with a Trio-to-Trio deep neural network model and MCVLoss. In our experiments, Clair3-Trio outperformed current state-of-the-art methods on trio variant calling in terms of F1-score and the number of Mendelian inheritance violations in all three samples from a trio. We also demonstrated that the architecture of the Trio-to-Trio model is much more accurate than the One-to-One and Trio-to-One model. The source code and the results of this study are publicly available on GitHub.</p>
  </sec>
  <sec id="sec27a">
    <title>Authors’ contributions</title>
    <p>R.L. conceived the study. J.S. and R.L. designed the algorithms, implemented Clair3-Trio and wrote the paper. All authors evaluated the results and revised the manuscript.</p>
    <boxed-text id="box01" position="float">
      <sec id="sec29y">
        <title>Key Points</title>
        <list list-type="bullet">
          <list-item>
            <p>Developed a Trio-to-Trio model to predict trio variants in ONT data.</p>
          </list-item>
          <list-item>
            <p>Introduced a novel loss function, MCVLoss, to model Mendelian inheritance in trio data.</p>
          </list-item>
          <list-item>
            <p>Demonstrated that the Clair3-Trio model trained on GIAB data improves variant calling in trio data.</p>
          </list-item>
          <list-item>
            <p>Demonstrated that Trio-to-Trio models can efficiently decrease Mendelian inheritance violations compared with One-to-One and Trio-to-One models.</p>
          </list-item>
        </list>
      </sec>
    </boxed-text>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>supplementary-bib_bbac301</label>
      <media xlink:href="supplementary-bib_bbac301.docx">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <sec sec-type="data-availability" id="sec26">
    <title>Data availability</title>
    <p>Clair3-Trio is open-source software (BSD 3-Clause license), hosted by GitHub at <ext-link xlink:href="https://github.com/HKU-BAL/Clair3-Trio" ext-link-type="uri">https://github.com/HKU-BAL/Clair3-Trio</ext-link>. The (i) links to the reference genomes, true variants, benchmarking materials and ONT data, and (ii) commands and parameters used in this study are available in Supplementary Notes (see Supplementary Data available online at <ext-link xlink:href="http://bib.oxfordjournals.org/" ext-link-type="uri">http://bib.oxfordjournals.org/</ext-link>). All analysis outputs, including the VCFs and running logs, are available at <ext-link xlink:href="http://www.bio8.cs.hku.hk/clair3_trio/analysis_result" ext-link-type="uri">http://www.bio8.cs.hku.hk/clair3_trio/analysis_result</ext-link>.</p>
  </sec>
  <sec id="sec30">
    <title>Funding</title>
    <p>GRF (17113721 to R.L.) of the HKSAR Government; Oxford Nanopore Technologies (to R.L.); General Program (JCYJ20210324134405015) of the Shenzhen Municipal Government; URC fund at HKU.</p>
  </sec>
  <notes id="bio3">
    <title>Author Biographies</title>
    <p><bold>Junhao Su</bold> is a Ph.D. student in the Department of Computer Science, The University of Hong Kong.</p>
    <sec sec-type="author-bio" id="sec27z">
      <p><bold>Zhenxian Zheng</bold> is a Ph.D. student in the Department of Computer Science, The University of Hong Kong.</p>
    </sec>
    <sec sec-type="author-bio" id="sec28a">
      <p><bold>Syed Shakeel Ahmed</bold> is a postdoctoral fellow in the Department of Computer Science, The University of Hong Kong.</p>
    </sec>
    <sec sec-type="author-bio" id="sec29a">
      <p><bold>Tak-Wah Lam</bold> is a professor and Head of Department in the Department of Computer Science, The University of Hong Kong. His research ranges from theoretical analysis of algorithms to big data analytics for health informatics.</p>
    </sec>
    <sec sec-type="author-bio" id="sec30a">
      <p><bold>Ruibang Luo</bold> is an assistant professor in the Department of Computer Science, The University of Hong Kong. His research interests include bioinformatics algorithm, precision medicine, metagenomics, and literature mining.</p>
    </sec>
  </notes>
  <ref-list id="bib1">
    <title>References</title>
    <ref id="ref1">
      <label>1.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Amberger</surname><given-names>JS</given-names></string-name>, <string-name><surname>Bocchini</surname><given-names>CA</given-names></string-name>, <string-name><surname>Schiettecatte</surname><given-names>F</given-names></string-name>, <etal>et al.</etal></person-group><article-title>OMIM. Org: online Mendelian inheritance in man (OMIM®), an online catalog of human genes and genetic disorders</article-title>. <source>Nucleic Acids Res</source><year>2015</year>;<volume>43</volume>:<fpage>D789</fpage>–<lpage>98</lpage>.<pub-id pub-id-type="pmid">25428349</pub-id></mixed-citation>
    </ref>
    <ref id="ref2">
      <label>2.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Mendel</surname><given-names>G</given-names></string-name></person-group>. <part-title>Über einige aus künstlicher Befruchtung gewonnenen Hieraciumbastarde</part-title>. <source>Verhandlungen des. naturforschenden Vereines Br. ünn</source> 1870;<volume>8</volume>:26–31.</mixed-citation>
    </ref>
    <ref id="ref3">
      <label>3.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Koboldt</surname><given-names>DC</given-names></string-name></person-group>. <article-title>Best practices for variant calling in clinical sequencing</article-title>. <source>Genome Med</source><year>2020</year>;<volume>12</volume>:<fpage>1</fpage>–<lpage>13</lpage>.</mixed-citation>
    </ref>
    <ref id="ref4">
      <label>4.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Luo</surname><given-names>R</given-names></string-name>, <string-name><surname>Sedlazeck</surname><given-names>FJ</given-names></string-name>, <string-name><surname>Lam</surname><given-names>T-W</given-names></string-name>, <etal>et al.</etal></person-group><article-title>A multi-task convolutional deep neural network for variant calling in single molecule sequencing</article-title>. <source>Nat Commun</source><year>2019</year>;<volume>10</volume>:<fpage>1</fpage>–<lpage>11</lpage>.<pub-id pub-id-type="pmid">30602773</pub-id></mixed-citation>
    </ref>
    <ref id="ref5">
      <label>5.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Luo</surname><given-names>R</given-names></string-name>, <string-name><surname>Wong</surname><given-names>C-L</given-names></string-name>, <string-name><surname>Wong</surname><given-names>Y-S</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Exploring the limit of using a deep neural network on pileup data for germline variant calling</article-title>. <source>Nature Machine Intelligence</source><year>2020</year>;<volume>2</volume>:<fpage>220</fpage>–<lpage>7</lpage>.</mixed-citation>
    </ref>
    <ref id="ref6">
      <label>6.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ahsan</surname><given-names>MU</given-names></string-name>, <string-name><surname>Liu</surname><given-names>Q</given-names></string-name>, <string-name><surname>Fang</surname><given-names>L</given-names></string-name>, <etal>et al.</etal></person-group><article-title>NanoCaller for accurate detection of SNPs and indels in difficult-to-map regions from long-read sequencing by haplotype-aware deep neural networks</article-title>. <source>Genome Biol</source><year>2021</year>;<volume>22</volume>:<fpage>1</fpage>–<lpage>33</lpage>.<pub-id pub-id-type="pmid">33397451</pub-id></mixed-citation>
    </ref>
    <ref id="ref7">
      <label>7.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Shafin</surname><given-names>K</given-names></string-name>, <string-name><surname>Pesout</surname><given-names>T</given-names></string-name>, <string-name><surname>Chang</surname><given-names>P-C</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Haplotype-aware variant calling with PEPPER-margin-DeepVariant enables high accuracy in nanopore long-reads</article-title>. <source>Nat Methods</source><year>2021</year>;<volume>18</volume>:<fpage>1322</fpage>–<lpage>32</lpage>.<pub-id pub-id-type="pmid">34725481</pub-id></mixed-citation>
    </ref>
    <ref id="ref8">
      <label>8.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zheng</surname><given-names>Z</given-names></string-name>, <string-name><surname>Li</surname><given-names>S</given-names></string-name>, <string-name><surname>Su</surname><given-names>J</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Symphonizing pileup and full-alignment for deep learning-based long-read variant calling</article-title>. <source>bioRxiv</source><year>2021</year>:2021.2012.2029.474431.</mixed-citation>
    </ref>
    <ref id="ref9">
      <label>9.</label>
      <mixed-citation publication-type="other"><ext-link xlink:href="https://github.com/nanoporetech/medaka" ext-link-type="uri">https://github.com/nanoporetech/medaka</ext-link>.</mixed-citation>
    </ref>
    <ref id="ref10">
      <label>10.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Edge</surname><given-names>P</given-names></string-name>, <string-name><surname>Bansal</surname><given-names>V</given-names></string-name></person-group>. <article-title>Longshot enables accurate variant calling in diploid genomes from single-molecule long read sequencing</article-title>. <source>Nat Commun</source><year>2019</year>;<volume>10</volume>:<fpage>1</fpage>–<lpage>10</lpage>.<pub-id pub-id-type="pmid">30602773</pub-id></mixed-citation>
    </ref>
    <ref id="ref11">
      <label>11.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Poplin</surname><given-names>R</given-names></string-name>, <string-name><surname>Chang</surname><given-names>P-C</given-names></string-name>, <string-name><surname>Alexander</surname><given-names>D</given-names></string-name>, <etal>et al.</etal></person-group><article-title>A universal SNP and small-indel variant caller using deep neural networks</article-title>. <source>Nat Biotechnol</source><year>2018</year>;<volume>36</volume>:<fpage>983</fpage>–<lpage>7</lpage>.<pub-id pub-id-type="pmid">30247488</pub-id></mixed-citation>
    </ref>
    <ref id="ref12">
      <label>12.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ip</surname><given-names>EK</given-names></string-name>, <string-name><surname>Hadinata</surname><given-names>C</given-names></string-name>, <string-name><surname>Ho</surname><given-names>JW</given-names></string-name>, <etal>et al.</etal></person-group><article-title>dv-trio: a family-based variant calling pipeline using DeepVariant</article-title>. <source>Bioinformatics</source><year>2020</year>;<volume>36</volume>:<fpage>3549</fpage>–<lpage>51</lpage>.<pub-id pub-id-type="pmid">32315409</pub-id></mixed-citation>
    </ref>
    <ref id="ref13">
      <label>13.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>McKenna</surname><given-names>A</given-names></string-name>, <string-name><surname>Hanna</surname><given-names>M</given-names></string-name>, <string-name><surname>Banks</surname><given-names>E</given-names></string-name>, <etal>et al.</etal></person-group><article-title>The genome analysis toolkit: a MapReduce framework for analyzing next-generation DNA sequencing data</article-title>. <source>Genome Res</source><year>2010</year>;<volume>20</volume>:<fpage>1297</fpage>–<lpage>303</lpage>.<pub-id pub-id-type="pmid">20644199</pub-id></mixed-citation>
    </ref>
    <ref id="ref14">
      <label>14.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Peng</surname><given-names>G</given-names></string-name>, <string-name><surname>Fan</surname><given-names>Y</given-names></string-name>, <string-name><surname>Wang</surname><given-names>W</given-names></string-name></person-group>. <article-title>FamSeq: a variant calling program for family-based sequencing data using graphics processing units</article-title>. <source>PLoS Comput Biol</source><year>2014</year>;<volume>10</volume>:<fpage>e1003880</fpage>.<pub-id pub-id-type="pmid">25357123</pub-id></mixed-citation>
    </ref>
    <ref id="ref15">
      <label>15.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kolesnikov</surname><given-names>A</given-names></string-name>, <string-name><surname>Goel</surname><given-names>S</given-names></string-name>, <string-name><surname>Nattestad</surname><given-names>M</given-names></string-name>, <etal>et al.</etal></person-group><article-title>DeepTrio: variant calling in families using deep learning</article-title>. <source>bioRxiv</source><year>2021</year>:2021.2004.2005.438434.</mixed-citation>
    </ref>
    <ref id="ref16">
      <label>16.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wagner</surname><given-names>J</given-names></string-name>, <string-name><surname>Olson</surname><given-names>ND</given-names></string-name>, <string-name><surname>Harris</surname><given-names>L</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Benchmarking challenging small variants with linked and long reads</article-title>. <source>Cell Genomics</source><year>2022</year>;<volume>2</volume>:<fpage>100128</fpage>.</mixed-citation>
    </ref>
    <ref id="ref17">
      <label>17.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Patterson</surname><given-names>M</given-names></string-name>, <string-name><surname>Marschall</surname><given-names>T</given-names></string-name>, <string-name><surname>Pisanti</surname><given-names>N</given-names></string-name>, <etal>et al.</etal></person-group><article-title>WhatsHap: weighted haplotype assembly for future-generation sequencing reads</article-title>. <source>J Comput Biol</source><year>2015</year>;<volume>22</volume>:<fpage>498</fpage>–<lpage>509</lpage>.<pub-id pub-id-type="pmid">25658651</pub-id></mixed-citation>
    </ref>
    <ref id="ref18">
      <label>18.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Francioli</surname><given-names>LC</given-names></string-name>, <string-name><surname>Cretu-Stancu</surname><given-names>M</given-names></string-name>, <string-name><surname>Garimella</surname><given-names>KV</given-names></string-name>, <etal>et al.</etal></person-group><article-title>A framework for the detection of de novo mutations in family-based sequencing data</article-title>. <source>Eur J Hum Genet</source><year>2017</year>;<volume>25</volume>:<fpage>227</fpage>–<lpage>33</lpage>.<pub-id pub-id-type="pmid">27876817</pub-id></mixed-citation>
    </ref>
    <ref id="ref19">
      <label>19.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Krusche</surname><given-names>P</given-names></string-name>, <string-name><surname>Trigg</surname><given-names>L</given-names></string-name>, <string-name><surname>Boutros</surname><given-names>PC</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Best practices for benchmarking germline small-variant calls in human genomes</article-title>. <source>Nat Biotechnol</source><year>2019</year>;<volume>37</volume>:<fpage>555</fpage>–<lpage>60</lpage>.<pub-id pub-id-type="pmid">30858580</pub-id></mixed-citation>
    </ref>
    <ref id="ref20">
      <label>20.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Danecek</surname><given-names>P</given-names></string-name>, <string-name><surname>Bonfield</surname><given-names>JK</given-names></string-name>, <string-name><surname>Liddle</surname><given-names>J</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Twelve years of SAMtools and BCFtools</article-title>. <source>Gigascience</source><year>2021</year>;<volume>10</volume>:<fpage>giab008</fpage>.<pub-id pub-id-type="pmid">33590861</pub-id></mixed-citation>
    </ref>
    <ref id="ref21">
      <label>21.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cleary</surname><given-names>JG</given-names></string-name>, <string-name><surname>Braithwaite</surname><given-names>R</given-names></string-name>, <string-name><surname>Gaastra</surname><given-names>K</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Comparing variant call files for performance benchmarking of next-generation sequencing variant calling pipelines</article-title>. <source>bioRxiv</source><year>2015</year>;<volume>023754</volume>.</mixed-citation>
    </ref>
    <ref id="ref22">
      <label>22.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Shafin</surname><given-names>K</given-names></string-name>, <string-name><surname>Pesout</surname><given-names>T</given-names></string-name>, <string-name><surname>Lorig-Roach</surname><given-names>R</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Nanopore sequencing and the Shasta toolkit enable efficient de novo assembly of eleven human genomes</article-title>. <source>Nat Biotechnol</source><year>2020</year>;<volume>38</volume>:<fpage>1044</fpage>–<lpage>53</lpage>.<pub-id pub-id-type="pmid">32686750</pub-id></mixed-citation>
    </ref>
    <ref id="ref23">
      <label>23.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hiatt</surname><given-names>SM</given-names></string-name>, <string-name><surname>Lawlor</surname><given-names>JMJ</given-names></string-name>, <string-name><surname>Handley</surname><given-names>LH</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Long-read genome sequencing for the molecular diagnosis of neurodevelopmental disorders</article-title>. <source>HGG Adv</source><year>2021</year>;<volume>2</volume>:<fpage>100023</fpage>.<pub-id pub-id-type="pmid">33937879</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v2.3 20070202//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName journalpublishing.dtd?>
<?SourceDTD.Version 2.3?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <?epub November-17-2014?>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Nucleic Acids Res</journal-id>
    <journal-id journal-id-type="iso-abbrev">Nucleic Acids Res</journal-id>
    <journal-id journal-id-type="hwp">nar</journal-id>
    <journal-id journal-id-type="publisher-id">nar</journal-id>
    <journal-title-group>
      <journal-title>Nucleic Acids Research</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">0305-1048</issn>
    <issn pub-type="epub">1362-4962</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">4333369</article-id>
    <article-id pub-id-type="pmid">25404127</article-id>
    <article-id pub-id-type="doi">10.1093/nar/gku1187</article-id>
    <article-categories>
      <subj-group subj-group-type="hwp-journal-coll">
        <subject>7</subject>
        <subject>15</subject>
      </subj-group>
      <subj-group subj-group-type="heading">
        <subject>Methods Online</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Reference-free detection of isolated SNPs</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Uricaru</surname>
          <given-names>Raluca</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>1</sup>
        </xref>
        <xref ref-type="aff" rid="AFF2">
          <sup>2</sup>
        </xref>
        <xref ref-type="aff" rid="AFF3">
          <sup>3</sup>
        </xref>
        <xref ref-type="corresp" rid="COR2">*</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Rizk</surname>
          <given-names>Guillaume</given-names>
        </name>
        <xref ref-type="aff" rid="AFF4">
          <sup>4</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Lacroix</surname>
          <given-names>Vincent</given-names>
        </name>
        <xref ref-type="aff" rid="AFF5">
          <sup>5</sup>
        </xref>
        <xref ref-type="aff" rid="AFF6">
          <sup>6</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Quillery</surname>
          <given-names>Elsa</given-names>
        </name>
        <xref ref-type="aff" rid="AFF7">
          <sup>7</sup>
        </xref>
        <xref ref-type="aff" rid="AFF8">
          <sup>8</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Plantard</surname>
          <given-names>Olivier</given-names>
        </name>
        <xref ref-type="aff" rid="AFF7">
          <sup>7</sup>
        </xref>
        <xref ref-type="aff" rid="AFF8">
          <sup>8</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Chikhi</surname>
          <given-names>Rayan</given-names>
        </name>
        <xref ref-type="aff" rid="AFF9">
          <sup>9</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Lemaitre</surname>
          <given-names>Claire</given-names>
        </name>
        <xref ref-type="aff" rid="AFF4">
          <sup>4</sup>
        </xref>
        <xref ref-type="corresp" rid="COR3">*</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Peterlongo</surname>
          <given-names>Pierre</given-names>
        </name>
        <xref ref-type="aff" rid="AFF4">
          <sup>4</sup>
        </xref>
        <xref ref-type="corresp" rid="COR1">*</xref>
      </contrib>
      <aff id="AFF1"><label>1</label>University of Bordeaux, CNRS/LaBRI, F-33405 Talence, France</aff>
      <aff id="AFF2"><label>2</label>University of Bordeaux, CBiB, F-33000 Bordeaux, France</aff>
      <aff id="AFF3"><label>3</label>INRA, UMR1349 IGEPP, Le Rheu, France</aff>
      <aff id="AFF4"><label>4</label>GenScale, INRIA Rennes Bretagne-Atlantique, IRISA, Rennes, France</aff>
      <aff id="AFF5"><label>5</label>BAMBOO, INRIA Grenoble Rhone-Alpes, Lyon, France</aff>
      <aff id="AFF6"><label>6</label>Laboratoire de Biométrie et Biologie Évolutive, Université Lyon 1 UMR CNRS 5558, Lyon, France</aff>
      <aff id="AFF7"><label>7</label>INRA, UMR1300 Biology, Epidemiology and Risk Analysis in Animal Health, Nantes, France</aff>
      <aff id="AFF8"><label>8</label>LUNAM University, Oniris, Nantes Atlantic College of Veterinary Medicine and Food Sciences and Engineering, UMR BioEpAR, Nantes, France</aff>
      <aff id="AFF9"><label>9</label>Department of Computer Science and Engineering, The Pennsylvania State University, University Park, PA, 16802, USA</aff>
    </contrib-group>
    <author-notes>
      <corresp id="COR1"><label>*</label>To whom correspondence should be addressed. Tel: +33(0)2 99 84 74 59; Fax: +33(0)2 99 84 71 71; Email: <email>pierre.peterlongo@inria.fr</email></corresp>
      <corresp id="COR2">Correspondence may also be addressed to Raluca Uricaru. Tel: +33 (0)5 40 00 60 95; Fax: +33(0)5 40 00 66 69; Email: <email>ruricaru@labri.fr</email></corresp>
      <corresp id="COR3">Correspondence may also be addressed to Claire Lemaitre. Tel: +33(0)2 99 84 71 16; Fax: +33(0)2 99 84 71 71; Email: <email>claire.lemaitre@inria.fr</email></corresp>
    </author-notes>
    <pub-date pub-type="ppub">
      <day>30</day>
      <month>1</month>
      <year>2015</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>17</day>
      <month>11</month>
      <year>2014</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>17</day>
      <month>11</month>
      <year>2014</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the
							<pub-date pub-type="epub"/>. -->
    <volume>43</volume>
    <issue>2</issue>
    <fpage>e11</fpage>
    <lpage>e11</lpage>
    <history>
      <date date-type="accepted">
        <day>03</day>
        <month>11</month>
        <year>2014</year>
      </date>
      <date date-type="rev-recd">
        <day>17</day>
        <month>10</month>
        <year>2014</year>
      </date>
      <date date-type="received">
        <day>14</day>
        <month>2</month>
        <year>2013</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2014. Published by Oxford University Press on behalf of Nucleic Acids Research.</copyright-statement>
      <copyright-year>2015</copyright-year>
      <license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:title="pdf" xlink:type="simple" xlink:href="gku1187.pdf"/>
    <abstract>
      <p>Detecting single nucleotide polymorphisms (SNPs) between genomes is becoming a routine task with next-generation sequencing. Generally, SNP detection methods use a reference genome. As non-model organisms are increasingly investigated, the need for reference-free methods has been amplified. Most of the existing reference-free methods have fundamental limitations: they can only call SNPs between exactly two datasets, and/or they require a prohibitive amount of computational resources. The method we propose, <sc>discoSnp</sc>, detects both heterozygous and homozygous <italic>isolated</italic> SNPs from any number of read datasets, without a reference genome, and with very low memory and time footprints (billions of reads can be analyzed with a standard desktop computer). To facilitate downstream genotyping analyses, <sc>discoSnp</sc> ranks predictions and outputs quality and coverage per allele. Compared to finding isolated SNPs using a state-of-the-art assembly and mapping approach, <sc>discoSnp</sc> requires significantly less computational resources, shows similar precision/recall values, and highly ranked predictions are less likely to be false positives. An experimental validation was conducted on an arthropod species (the tick <italic>Ixodes ricinus</italic>) on which <italic>de novo</italic> sequencing was performed. Among the predicted SNPs that were tested, 96% were successfully genotyped and truly exhibited polymorphism.</p>
    </abstract>
    <counts>
      <page-count count="11"/>
    </counts>
    <custom-meta-group>
      <custom-meta>
        <meta-name>cover-date</meta-name>
        <meta-value>30 January 2015</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec sec-type="intro" id="SEC1">
    <title>INTRODUCTION</title>
    <p>Assessing the genetic differences between individuals within a species or between chromosomes of an individual is a fundamental task in many aspects of biology. This is increasingly feasible with next-generation sequencing technologies, as individuals from virtually any species can be sequenced at a modest cost. Of specific interest, single nucleotide polymorphisms (SNPs) are variations of a single base, either between two homologous chromosomes within a single individual, or between two individuals. Finding biallelic or Mendelian SNPs is often done in many biological applications involving SNP genotyping, e.g. population genomics, health, ecology or agronomy research (<xref rid="B1" ref-type="bibr">1</xref>,<xref rid="B2" ref-type="bibr">2</xref>). To be easily amplified by polymerase chain reaction (PCR), such SNPs must not be surrounded by other polymorphism sources, i.e. other SNPs, indels or structural variants. We call such SNPs <italic>isolated</italic>. Formally, <italic>isolated</italic> SNPs must be distant to the left and to the right by at least <italic>k</italic> nucleotides from any other polymorphism, <italic>k</italic> being one of the main parameters of a SNP detection tool.</p>
    <p>State-of-the-art methods to detect SNPs between individuals or strains, generally map sequenced reads (GATK (<xref rid="B3" ref-type="bibr">3</xref>), SAMtools (<xref rid="B4" ref-type="bibr">4</xref>)) or partial assemblies (<sc>DiscoVAR, fermi</sc> (<xref rid="B5" ref-type="bibr">5</xref>)) on a reference genome. These <italic>reference-based</italic> methods clearly cannot be applied when there is no reference genome. In fact, even when there exists a reference genome, the behavior of these methods is highly dependent on the quality of the assembly. The reality today is that with sequencing costs falling, sequencing efforts are no longer limited to the main species of interest (human and other primates, mouse, rat, drosophila, yeast, <italic>Escherichia coli</italic>, etc.). In fact, biologists are increasingly working on data for which they do not have any close reference genome. Unfortunately, while sequencing with NGS (Next Generation Sequencers) is becoming routine, assembling genomes remains a very complicated task, for which no single software performs consistently well (<xref rid="B6" ref-type="bibr">6</xref>), thus producing reference sequences of poor quality. For these reasons, there is a strong need for <italic>reference-free</italic> methods able to detect SNPs, in particular those which are isolated, without relying on a reference genome (reference-free methods).</p>
    <p>Reference-free methods that detect SNPs can be broadly divided into two categories. The first category methods perform <italic>de novo</italic> assembly to build a reference sequence. Then, these methods include, as a sub-module, a reference-based method to map back the reads of each individual to this reference sequence (<xref rid="B7" ref-type="bibr">7</xref>). We refer to such methods as <italic>hybrid</italic>, as they use both <italic>de novo</italic> assembly and mapping techniques to call SNPs.</p>
    <p>A major limitation of these methods is that they tend to cumulate problems raised in assembly and problems raised in mapping. An interesting alternative is to directly focus on the assembly of SNPs, without trying to assemble a full reference. We refer to such methods as <italic>de novo</italic>.</p>
    <p>Several methods that fall into the <italic>de novo</italic> category have been developed recently (<xref rid="B8" ref-type="bibr">8</xref>–<xref rid="B12" ref-type="bibr">12</xref>). These methods are based on a <italic>de Bruijn graph</italic>, i.e. a directed graph where the set of vertices corresponds to the set of words of length <italic>k</italic> (<italic>k</italic>-mers) contained in the reads, and there is an edge between two <italic>k</italic>-mers if they overlap on <italic>k</italic> − 1 nucleotides. <sc>KisSnp</sc> (<xref rid="B8" ref-type="bibr">8</xref>) is a software that takes as input two sets of reads, and detects SNPs using <italic>k</italic>-mers that are differentially abundant between the two datasets. <sc>Cortex_var</sc> (<xref rid="B9" ref-type="bibr">9</xref>) (here after called <sc>cortex</sc>) detects and genotypes SNPs (as well as indels and larger events), between <italic>n</italic> datasets. <sc>bubbleparse</sc> (<xref rid="B10" ref-type="bibr">10</xref>), which is based on the same graph structure as <sc>cortex</sc>, detects SNPs that it furthermore classifies into homozygous and heterozygous groups. <sc>niks</sc> (<xref rid="B11" ref-type="bibr">11</xref>) finds homozygous SNPs between two datasets by performing local <italic>de novo</italic> assembly around sample-specific <italic>k</italic>-mers. <sc>kSNP v2</sc> (<xref rid="B13" ref-type="bibr">13</xref>) proposes yet another approach that is rather dedicated to SNP phylogeny on microbial species. Even if the SNP detection is performed <italic>de-novo</italic>, this method is strongly based on a reference sequence (on which putative selected <italic>k</italic>-mers witnessing a SNP are mapped).</p>
    <p>These methods all entail unpractical computational costs (in particular in terms of memory) for large and complex genomes. Even with substantial computational resources, most of them still cannot detect variants in mammalian-size datasets. Therefore, there is still a strong need for robust tools that can detect isolated SNPs without a reference genome.</p>
    <p>For these reasons, we introduce a new <italic>de novo</italic> method called <sc>discoSnp</sc>. This method is designed to call isolated SNPs directly from sequenced reads, without a reference genome. As shown in this paper, <sc>discoSnp</sc> opens the way to the discovery of SNPs from large-scale studies, even on a standard desktop computer. <sc>discoSnp</sc> finds and ranks high quality isolated heterozygous or homozygous SNPs from any number of read sets, from 1 to <italic>n</italic>. It introduces new features to distinguish SNPs from sequencing errors or false positives due to approximate repeats. <sc>discoSnp</sc> can be used for finding high-quality isolated SNPs, either heterozygous, e.g. to build databases of high-quality markers within and across populations, or homozygous between individuals/strains, e.g. to create discriminant markers. The genotyping can be performed as a downstream analysis, based on the read coverage information it provides.</p>
    <p>Results presented in this paper show that <sc>discoSnp</sc> outperforms other reference-free SNP detection methods in terms of resources (faster and using at least two orders of magnitude less memory), type and number of input dataset(s) (ability to find both homozygous and heterozygous SNPs from more than two datasets), and quality of the ranking of predicted isolated SNPs. On two whole-genome mouse datasets, <sc>discoSnp</sc> detected 2 million isolated SNPs, of which 84% were also found by a manually tuned pipeline in a previous study. On a <italic>S. cerevisiae</italic> dataset <sc>discoSnp</sc> predicted 90% of the validated SNPs. On an arthropod dataset, <sc>discoSnp</sc> found 0.3 million isolated SNPs; furthermore, an experimental validation carried over a sample of these SNPs confirmed 96% of them. Finally, <sc>discoSnp</sc> is designed to reach a wide audience, as it aims to be easy to use, regardless of the size and the complexity of the input data.</p>
  </sec>
  <sec sec-type="materials|methods" id="SEC2">
    <title>MATERIALS AND METHODS</title>
    <sec id="SEC2-1">
      <title>Algorithms</title>
      <p>As depicted in Figure <xref ref-type="fig" rid="F1">1</xref>
<sc>discoSnp</sc> is composed of two modules, <sc>KisSnp2</sc> and <sc>KissReads</sc>. <sc>KisSnp2</sc> detects putative SNPs from one or more sets of reads. <sc>KissReads</sc> evaluates the coverage and base quality of the SNPs per read set and ranks them accordingly. These two modules are independent, however, a script automatically pipelines them, so their calls are transparent to the user.</p>
      <fig id="F1" position="float">
        <label>Figure 1.</label>
        <caption>
          <p><sc>discoSnp</sc> method diagram. <sc>discoSnp</sc> is composed of two modules, <sc>KisSnp2</sc> and <sc>KissReads</sc> that are called by the <italic>run_disco.sh</italic> script.</p>
        </caption>
        <graphic xlink:href="gku1187fig1"/>
      </fig>
      <sec id="SEC2-1-1">
        <title><sc>KisSnp2</sc> module</title>
        <p>Similarly to <sc>cortex</sc> and <sc>KisSnp</sc>, the <sc>KisSnp2</sc> module is based on a <italic>de Bruijn graph</italic>. A <italic>de Bruijn graph</italic> is a directed graph that contains all the <italic>k</italic>-mers present in the read dataset as vertices, and all the possible (<italic>k</italic> − 1)-overlaps between <italic>k</italic>-mers as edges. Such graphs have been widely used in <italic>de novo</italic> assembly (<xref rid="B14" ref-type="bibr">14</xref>). The idea is the following: if a dataset contains two sequences that are identical, except for one character, then these sequences generate a <italic>bubble</italic> in the graph (see an example in Figure <xref ref-type="fig" rid="F2">2</xref>). Formally, a <italic>bubble</italic> in a <italic>de Bruijn graph</italic> is composed of two distinct paths of <italic>k</italic> + 2 nodes, having the start and the end nodes in common. Precisely, <sc>KisSnp2</sc> detects couples of paths of length 2<italic>k</italic> − 1, denoted by <italic>p</italic><sub>1</sub> and <italic>p</italic><sub>2</sub>, that correspond to polymorphic sequences, i.e. sequences of bubbles excepting the two extreme nodes. Formally, these two paths can be written as <italic>p</italic><sub>1</sub> = <italic>p</italic>α<italic>q</italic> and <italic>p</italic><sub>2</sub> = <italic>p</italic>β<italic>q</italic>, with <italic>p, q</italic> being (<italic>k</italic> − 1)-mers, and α and β are single nucleotides such that α ≠ β.</p>
        <fig id="F2" position="float">
          <label>Figure 2.</label>
          <caption>
            <p>Toy example of a <italic>bubble</italic> in the <italic>de Bruijn Graph</italic> (<italic>k</italic> = 4). Bubble generated by a single nucleotide polymorphism. The two polymorphic sequences are …<italic>CTGACCT</italic>… and …<italic>CTGTCCT</italic>…</p>
          </caption>
          <graphic xlink:href="gku1187fig2"/>
        </fig>
        <p>In <sc>KisSnp2</sc>, this idea is exploited by generating the <italic>de Bruijn graph</italic> of all input dataset(s) pooled together, and by searching the previously described bubbles in the graph. To avoid <italic>k</italic>-mers generated by sequencing errors, only <italic>k</italic>-mers whose support (coverage) is above or equal to a user-defined threshold, <italic>c</italic>, are taken into account in the construction of the <italic>de Bruijn graph</italic>. The <italic>de Bruijn graph</italic> is built with the <sc>minia</sc> data structure (<xref rid="B15" ref-type="bibr">15</xref>,<xref rid="B16" ref-type="bibr">16</xref>). The nodes of the graph are stored in a cascade of Bloom filters. As the edges of the graph can be inferred from the nodes, they do not need to be stored. Overall, the graph representation requires around 1 byte per <italic>k</italic>-mer. This data structure supports efficient and exact enumeration of the neighbors of any node in the graph. Thus, it enables to efficiently traverse the <italic>de Bruijn graph</italic> starting from any node, on both forward and reverse strands.</p>
        <p>In the following, we say that a <italic>k</italic>-mer ω can be <italic>right extended</italic> with a nucleotide α if the <italic>k</italic>-mer obtained by concatenating the suffix of length <italic>k</italic> − 1 of ω with α, exists in the data structure. Symmetrically, we say that a <italic>k</italic>-mer ω can be <italic>left extended</italic> with a nucleotide α, if the concatenation of α with the prefix of length <italic>k</italic> − 1 of ω forms a <italic>k</italic>-mer that can be found in data structure.</p>
        <p>The <sc>KisSnp2</sc> algorithm detects all <italic>k</italic>-mers that can be right extended with at least two distinct nucleotides. Such <italic>k</italic>-mers are the starting nodes of the bubbles they generate, as in the example depicted in Figure <xref ref-type="fig" rid="F2">2</xref>, where the <italic>k</italic>-mers obtained after the extension are <italic>CTGA</italic> and <italic>CTGT</italic>. Then, for each such couple of <italic>k</italic>-mers starting with the same <italic>k</italic> − 1 length prefix, <sc>KisSnp2</sc> tries to complete the bubble by performing successively <italic>k</italic> − 1 right extensions on both paths with the same nucleotide (using successively nucleotides <italic>C, C</italic> and <italic>T</italic> for the example in Figure <xref ref-type="fig" rid="F2">2</xref>). If, at one step, both paths cannot be right extended with the same nucleotide, then the bubble is discarded. Based on this pattern, only <italic>isolated</italic> SNPs can be detected, thus avoiding SNPs that are closer than <italic>k</italic> bases to other polymorphisms.</p>
        <sec id="SEC2-1-1-1">
          <title>Branching bubbles</title>
          <p>High copy number repeats in genomes typically yield complex bubbles, which may combinatorially increase the number of false positives. To limit this effect, a classic filter consists in removing bubbles that contain at least one branching node; this is the default behavior of <sc>discoSnp</sc> (−b 0). The counterpart of this filter is that it may discard true bubbles that contain branchings only due to repeats or to some isolated non-filtered sequencing errors. To achieve a better compromise between false positive and false negative rates, especially in complex genomes, we introduce a novel concept of symmetrically branching bubbles.</p>
          <p>More precisely, a bubble is called <italic>non-branching</italic> if during its construction, for every extension step, there is only one <italic>k</italic>-mer that can be used (only one possible extension for each of the two paths). On the other hand, if at some point during the extension of the bubble, there is a choice between two <italic>k</italic>-mers (for at least one of the paths), the bubble is said to be <italic>branching</italic>. Now, if at some point during the extension, both paths can be extended with the same (at least) two nucleotides, then the bubble is called <italic>symmetrically branching</italic> (see examples in Figure <xref ref-type="fig" rid="F3">3</xref>). Finally, bubbles that are branching, but not symmetrically branching, are called <italic>simply branching</italic>. Note that branchings are checked in both directions (left and right).</p>
          <fig id="F3" position="float">
            <label>Figure 3.</label>
            <caption>
              <p>Examples of non-symmetrically branching bubbles (<bold>a</bold> and <bold>b</bold>) and symmetrically branching bubbles (<bold>c</bold> and <bold>d</bold>). Path divergences in bubbles a and b create branching bubbles, but the branching is not symmetric. Divergence is only present in one path (<bold>a</bold>) or in both paths but with distinct (circled) characters (<bold>b</bold>). Path divergences in bubbles c and d create symmetrically branching bubbles. Both paths of these bubbles can be right extended (<bold>c</bold>) or left extended (<bold>d</bold>) with the same two (circled) characters. With option <italic>−</italic>b 0 (default), none of these bubbles would be considered as a SNP, with option −b 1 bubbles <bold>a</bold> and <bold>b</bold> would have been considered as SNP while with option −b 2 all of them would have been output.</p>
            </caption>
            <graphic xlink:href="gku1187fig3"/>
          </fig>
          <p>The rationale for keeping simply branching bubbles is that they may correspond to true SNPs, where the branching is simply due to a sequencing error that accidentally passed the coverage filter. As shown in the ‘Results’ section, this enables to increase the recall especially in complex genomes, with high copy number repeats, while being highly efficient in removing the numerous false positive branching bubbles. <sc>discoSnp</sc> can be run with any of these three filtering strategies: filtering out all branching bubbles (default behavior, option −b 0), or filtering out symmetrically branching bubbles only (−b 1), or no filtering based on the branching criteria (−b 2).</p>
        </sec>
        <sec id="SEC2-1-1-2">
          <title>Retrieving sequence contexts</title>
          <p>Each sequence in the multi-fasta file output by <sc>KisSnp2</sc> is composed of the 2<italic>k</italic> − 1 nucleotides, which correspond to the bubble, together with its left and right contigs that are extending the 2<italic>k</italic> − 1 sequences. For every such contig, the length of the longest unambiguous context (longest non-branching path in the graph starting from the bubble) is also indicated. Reconstructing these contexts is done with the <sc>Minia</sc> assembler (<xref rid="B15" ref-type="bibr">15</xref>) algorithm. Its contiging algorithm was evaluated within the Assemblathon2 challenge (<xref rid="B17" ref-type="bibr">17</xref>) (team ‘<italic>Symbiose</italic>’).</p>
        </sec>
      </sec>
      <sec id="SEC2-2-1">
        <title><sc>KissReads</sc> module</title>
        <p>One should note that it is not possible to compute read coverages, nor read quality information, based solely on a raw <italic>de Bruijn graph</italic>. Moreover, all <italic>de Bruijn graph</italic>-based methods may build chimeric sequences due to overlapping <italic>k</italic>-mers, which are never present in the same read. These sequences are said to be <italic>non-read-coherent</italic>. The <sc>KissReads</sc> module is meant to filter out bubbles composed of <italic>non-read-coherent</italic> sequences, to add coverage and quality information on the remaining ones, and finally to rank SNPs (see the section below).</p>
        <p>Given a sequence <italic>s</italic> and a set of reads <inline-formula><tex-math id="M1">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal {R}$\end{document}</tex-math></inline-formula> mapped on <italic>s</italic>, we say that <italic>s</italic> is <italic>read-coherent</italic> if, for each position of <italic>s</italic>, at least <italic>c</italic> reads are mapped, with <italic>c</italic> a user-defined threshold. Note that reads are mapped in a semi-global manner: mapped reads may have a prefix starting before the first position of <italic>s</italic> and/or may have a suffix ending after the last position of <italic>s</italic>. By default, one substitution is authorized which roughly corresponds to current error rates. Moreover, knowing that in the <sc>discoSnp</sc> framework the sequence <italic>s</italic> represents one of the two alleles of a SNP, no substitution is authorized on the polymorphic position during the mapping.</p>
        <p>Moreover, it may appear that a position of <italic>s</italic> is mapped only by the <italic>end</italic> of reads (last <italic>k</italic> positions), and/or only by the <italic>beginning</italic> of reads (first <italic>k</italic> positions). This reveals a situation where part of the sequence <italic>s</italic> was generated by <italic>k</italic>-mers not truly belonging to the mapped reads, i.e. due to a repeat of length bigger or equal to 2<italic>k</italic> and smaller than the read size. Such a sequence is thus chimeric. An example of this situation is illustrated in Figure <xref ref-type="fig" rid="F4">4</xref>. To overcome this problem, we define the <italic>k-read-coherency</italic>. Given a sequence <italic>s</italic> and a set of reads <inline-formula><tex-math id="M2">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal {R}$\end{document}</tex-math></inline-formula> that can be mapped on <italic>s</italic>, we consider <italic>s</italic> as <italic>k-read-coherent</italic> if, for each position <italic>i</italic> of <italic>s</italic> except the last <italic>k</italic> − 1 ones, there exists at least <italic>c</italic> reads that fully map on the <italic>k</italic>-mer starting on position <italic>i</italic>. Note that this condition is symmetrical, whether <italic>s</italic> is read on both forward or reverse complement strand.</p>
        <fig id="F4" position="float">
          <label>Figure 4.</label>
          <caption>
            <p>Read-coherency and <italic>k</italic>-read-coherency example. With coverage threshold = 2, schematic example where a sequence is <italic>read-coherent</italic> but not <italic>k-read-coherent</italic>. The leftmost represented <italic>k</italic>-mer (green) on the sequence is an example where the <italic>k</italic>-mer starting at this position is covered with three mapped reads. On the other hand, the rightmost represented <italic>k</italic>-mer (red) is covered by no read, thus illustrating why the sequence is not <italic>k-read-coherent</italic>.</p>
          </caption>
          <graphic xlink:href="gku1187fig4"/>
        </fig>
        <p>Given the set <inline-formula><tex-math id="M3">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal {S}$\end{document}</tex-math></inline-formula> of pairs of 2<italic>k</italic> − 1 sequences generated by <sc>KisSnp2</sc> and the initial sets of reads, the <sc>KissReads</sc> algorithm maps the reads (using a classic seed-and-extend approach) on the sequences of <inline-formula><tex-math id="M4">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal {S}$\end{document}</tex-math></inline-formula>. Once all reads are mapped on all sequences of <inline-formula><tex-math id="M5">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal {S}$\end{document}</tex-math></inline-formula>, the <italic>k-read-coherency</italic> is computed for each read set and for each sequence of <inline-formula><tex-math id="M6">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal {S}$\end{document}</tex-math></inline-formula>. Sequences of <inline-formula><tex-math id="M7">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal {S}$\end{document}</tex-math></inline-formula> for which at least one read set makes them <italic>k-read-coherent</italic>, are conserved. <sc>KissReads</sc> outputs such coherent sequences together with their read depth per read set and with the average <monospace>PHRED</monospace> quality of the polymorphic nucleotide per read set.</p>
      </sec>
    </sec>
    <sec id="SEC2-3">
      <title>Ranking SNPs</title>
      <p><sc>discoSnp</sc> scores each SNP according to the coverage repartition of its alternative paths between the conditions. The aim is to rank best the SNPs that are the most discriminant between the samples. For a given SNP, the score is the <italic>Phi coefficient</italic> of the table of read counts for each path and each dataset, computed as follows: <inline-formula><tex-math id="M8">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\sqrt{\frac{\chi ^2}{n}}$\end{document}</tex-math></inline-formula>. It can be seen as a normalized Chi-squared statistics that varies between 0 and 1. A high score, close to 1, is obtained if the frequencies of the paths are very different between datasets, the best case being for homozygous SNPs between two datasets, where each path is strictly specific to one dataset. Notably, this score ranks poorly bubbles that are due to sequencing errors or inexact repeats as they are likely to have similar repartitions in all datasets (small frequency for an error, and equal frequency for repeats). Moreover, the normalization prevents from over-scoring highly covered bubbles which are often due to repeats. Since this ranking favors SNPs for which one variant is enriched in one read set, it is not well suited to select SNPs that are heterozygous in all read sets. It is also not usable with only one dataset, one diploid individual or a pooled sample. As shown in the ‘Results’ section, other rankings can be used in these cases.</p>
    </sec>
    <sec id="SEC2-4">
      <title><sc>discoSnp</sc> input and output</title>
      <p>In summary, <sc>discoSnp</sc> takes as input any number of read sets, and has two main parameters <italic>k</italic> and <italic>c</italic>, respectively the <italic>k</italic>-mer size used to build the <italic>de Bruijn graph</italic> and the minimal coverage a <italic>k</italic>-mer should reach to be inserted in the graph. When applied to two read datasets or more, <sc>discoSnp</sc> is executed only once as all datasets are pooled together. All isolated SNPs shared by any number of samples are output as single calls.</p>
      <p>Finally, the <sc>discoSnp</sc> output is a sorted <italic>multi-fasta</italic> file, in which every consecutive couple of sequences corresponds to the two 2<italic>k</italic> − 1 paths of a SNP, surrounded by its left and right contigs. Headers of the sequences give information about read coverage and average PHRED quality for each input dataset, lengths of unambiguous left and right extensions, and Phi coefficient of each SNP.</p>
    </sec>
    <sec id="SEC2-5">
      <title>Simulated datasets and evaluation</title>
      <p>We propose here an overview of the evaluation approach. Supplementary details on the protocols for generating data and for evaluating the results are provided in Supplementary Additional File 1.</p>
      <p>All tools were run with at least <italic>k</italic> = 31 and a minimal coverage of 4 (<italic>k</italic>-mers that were seen less than four times were considered to be sequencing errors) or based on the developers’ advices. When several parameter sets were tested, presented results were obtained with those giving the best results. Full details on parameters and full results are proposed in the Supplementary Additional File 1.</p>
      <sec id="SEC2-5-1">
        <title>Simulation and evaluation for one or two diploids</title>
        <p>In order to evaluate the behavior of <sc>discoSnp</sc> on large, complex genome sequences, and to compare it to the other reference-free SNP discovery tools, we propose an experiment simulating the sequencing of two diploid, human chromosome 1 individuals.</p>
        <p>To obtain a realistic distribution of SNPs and genotypes, we used SNPs predicted from real human individuals. Two vcf files were retrieved from the ‘1000 genome project’ (phase 1 release), corresponding to the human chromosome 1 of two individuals: HG00096 and HG00100. We then generated the genome sequences for the two diploids, i.e. two sequences per individual, by placing the substitutions listed in the vcf files on the human reference sequence (GRCh37/hg19 reference assembly version). In the case of a homozygous SNP, the same nucleotide was placed on the two sequences, while for a heterozygous SNP, one sequence was randomly chosen for each of the two nucleotides.</p>
        <p>A total of 316 502 positions were mutated, with 131 263 positions that were mutated in the same time in both individuals (representing an average ratio of 0.5 SNPs by kb in each individual). 29 038 SNPs (9%) have a homozygous genotype in both individuals (homozygous-homozygous), 218 556 (69%) are heterozygous in only one individual (homozygous–heterozygous) and the remaining 68 908 (22%) are heterozygous in both individuals.</p>
        <p>We then simulated a 40x coverage sequencing of these two individuals, with 100-bp reads and 1% error rate, thus generating 89 753 907 reads. The sequencing procedure is further explained in Supplementary Additional File 1.</p>
        <p>Among the simulated SNPs, only those distant by more than <italic>k</italic> nucleotides from one another were selected (isolated SNPs) and were recorded as 2<italic>k</italic> − 1 bubbles in a reference file (same format as the output of <sc>discoSnp</sc>). This gave 150 348 heterozygous isolated SNPs for individual HG00096 (84% of all heterozygous mutations inserted in this individual) and 260 539 isolated SNPs when considering both individuals (82% of all simulated SNPs). We produced two SNP reference files, <inline-formula><tex-math id="M9">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$ref\_snps.fa$\end{document}</tex-math></inline-formula> (as described in ‘Precision and recall computation’, in Supplementary Additional File 1): one for the HG00096 individual, and a second one when considering the two individuals. Predicted SNPs were compared to one of these files (depending on the dataset(s) on which <sc>discoSnp</sc> was applied) in order to compute the number of true and false positives. A predicted SNP for which the two paths match exactly the two paths of a simulated SNP present in this reference file is a true positive (TP), else it is a false positive (FP). In the same way, a SNP from the reference file not matched by any predicted SNP is a false negative (FN). The recall is given by the number of TP divided by the number of TP plus the number of FN. The precision is given by the number of TP divided by the number of TP plus the number of FP. When allowing branching bubbles (option −b 1), precision was computed by considering as false positives only bubbles that do not correspond to any simulated SNP (isolated or not). Full details on the evaluation protocol can be found in the Supplementary Additional File 1. Isolated SNPs detected with other tools than <sc>discoSnp</sc> were transformed into the <sc>discoSnp</sc> output format, in order to be evaluated with the same protocol.</p>
      </sec>
      <sec id="SEC2-5-2">
        <title>Simulation and evaluation for two and more haploids</title>
        <p>We propose an experiment simulating more than two haploid bacterial individuals. For doing this, we created 30 copies (that we call <italic>individuals</italic>) of the <italic>E. coli</italic> K-12 MG1655 strain. We then simulated SNPs with a uniform distribution such that ≈4200 SNPs (≈0.1% of the genome length) are common to any pair of individuals, half this number is common to any trio of individuals, a third to any quadruplet, and so on. With this strategy, while considering all the 30 individuals together, 69 600 SNP sites were generated, covering ≈1.5% of the genome. Similarly to the diploid dataset, we simulated a 40x sequencing of each of the 30 individuals, with 100-bp reads and 0.1% error rate. Thus, 1 855 870 reads were generated per read set.</p>
        <p>Finally, we created a reference file containing the isolated-SNPs per subsets of individuals: the first two, the first three, and so on. For each of these subsets, a SNP was considered as isolated if no other SNPs were simulated in the <italic>k</italic> − 1 positions before and after the SNP's locus, inside this subset. In the presented results, for two individuals, 4164 simulated SNPs are isolated while 268 SNPs (≈6%) are not. For 30 individuals, 25 993 SNPs are isolated while 333 930 (≈92%) are not. For the isolated SNPs, the two corresponding sequences of length 2<italic>k</italic> − 1 were used as a reference to assess the precision/recall of all tested tools, based on the same protocol as the one used for two diploids.</p>
      </sec>
    </sec>
    <sec id="SEC2-6">
      <title>Mouse dataset</title>
      <p><sc>discoSnp</sc> was applied on a real dataset to compare two mouse inbred strains, <italic>FVB/NJ</italic> and <italic>C57BL/6NJ</italic>, the latter corresponding to the mouse reference genome (NCBIM37). Reads were retrieved from the European Nucleotide Archive (<ext-link ext-link-type="uri" xlink:href="http://www.ebi.ac.uk/ena/">www.ebi.ac.uk/ena/</ext-link>), 987 million reads for the <italic>C57BL/6NJ</italic> strain (ERP000041) and 1888 million reads for the <italic>FVB/NJ</italic> strain (ERP000687).</p>
      <p>To compare with <sc>discoSnp</sc> results, we retrieved the set of predicted SNPs obtained with the same data by Wong <italic>et al.</italic> (<xref rid="B18" ref-type="bibr">18</xref>) (<ext-link ext-link-type="uri" xlink:href="http://www.sanger.ac.uk/resources/mouse/genomes/">www.sanger.ac.uk/resources/mouse/genomes/</ext-link>, file mgp.v3.snps.rsIDdbSNPv137.vcf). We selected SNPs having distinct genotypes in <italic>FVB/NJ</italic> and <italic>C57BL/6NJ</italic> strains. This provided 5 020 489 SNPs, among which 2 472 456 (≈49.2%) are isolated. We evaluated the number of isolated SNPs found by the two methods and those found specifically by one method or the other, by comparing the <sc>discoSnp</sc> output to the Wong <italic>et al.</italic> one. The set of SNPs that was predicted by Wong <italic>et al.</italic> was transformed in <sc>discoSnp</sc> format, as for the other experiments, in order to allow the comparisons.</p>
    </sec>
    <sec id="SEC2-7">
      <title><italic>Saccharomyces cerevisiae</italic> dataset</title>
      <p><sc>discoSnp</sc> was applied on a real <italic>S. cerevisiae</italic> dataset, for which several SNPs have been biologically validated in a recent study (<xref rid="B19" ref-type="bibr">19</xref>). In this study, three glucose-limited, chemostat-evolved populations of haploid S288c, named E1, E2 and E3, were sequenced every ≈70 generations, giving eight samples per population. Using a reference-based mapping approach, 110 mutations were discovered, among which only 33 have a minor allele frequency (MAF) &gt;10% and were confirmed by Sanger sequencing. Among these 33 SNPs, 30 are isolated (with <italic>k</italic> = 31). Therefore, in order to assess the performance of <sc>discoSnp</sc> on this dataset in terms of recall, these 30 SNPs were used as a reference. The 24 read sets were downloaded from the NCBI Sequence Read Archive (with the accession number SRA054922), and processed to remove barcode and adapter sequences as in the initial study.</p>
      <p><sc>discoSnp</sc> was run independently on populations E1, E2 and E3. For each population, <sc>discoSnp</sc> was applied on the eight read sets corresponding to the eight time points, with the default parameters and <italic>c</italic> = 11.</p>
      <p>Details about datasets and applied commands are provided in Supplementary Additional File 1.</p>
    </sec>
    <sec id="SEC2-8">
      <title>Tick dataset</title>
      <p><sc>discoSnp</sc> was applied on real sets of reads as part of a population genetic study of the tick <italic>Ixodes ricinus</italic> (<xref rid="B2" ref-type="bibr">2</xref>). DNA was extracted from two tick pools, one composed of ten individuals from Gardouch (close to Toulouse), France, and another composed of 20 individuals from Malville (close to Nantes), France. A genomic reduction was applied on these two pools by selecting the piece of an agarose gel containing DNA fragments, with a length of 500–600 nucleotides within the smear obtained following the enzymatic digestion by Msel of genomic DNA. This reduction corresponded to 3.8% of the initial genome. The DNA was sequenced by 454 Roche pyrosequencing, leading to the generation of 1 389 201 reads in two libraries (730 482 for one and 658 719 for the second). After quality trimming (where reads or ends of reads with a PHRED quality score inferior to 20 or that did not contain the expected restriction site were deleted), a total of 996 508 reads (536 061 for the first pool and 460 447 for the second) with an average length of 529 bp were used for analysis with <sc>discoSnp</sc>.</p>
      <p>In order to be able to design efficient primers, detected SNPs were then selected for experimental validation using the following criteria : (i) SNPs with a coverage between 4 and 10 (126 567 SNPs) were selected to avoid sequencing errors and repeated sequences, highly frequent in ticks (66% of the genome is repeated (<xref rid="B20" ref-type="bibr">20</xref>)), (ii) SNPs had to be distant from homopolymers (the bubble sequences should not contain any window of 8 nucleotides with at least six identical nucleotides), and they must not be closely located (less than <italic>k</italic> bp) to any other variants such as indels or other SNPs (reads were mapped to the bubble sequences using <sc>gassst</sc> (<xref rid="B21" ref-type="bibr">21</xref>) with a similarity threshold set at 80%, bubbles with at least one read mapped with differences were excluded) and (iii) SNPs with PHRED sequence quality &lt;30 were filtered out. As in this study framework one is not interested by SNPs discriminating the two datasets, we did not use the Phi coefficient for selecting SNPs for experimental validation. Among the 1768 SNPs meeting these criteria, 384 were randomly picked for genotyping validation.</p>
      <p>Primers were designed for each selected SNP. To validate them, we performed a genotyping run using <italic>Fluidigm</italic> technology, where primers are combined with fluorochrome (VIC or FAM for each allele) (<xref rid="B22" ref-type="bibr">22</xref>). Reading the fluorescence allows to determine the genotype of the individual typed at each locus (homozygous XX or YY, heterozygous XY).</p>
    </sec>
  </sec>
  <sec sec-type="results" id="SEC3">
    <title>RESULTS</title>
    <p>We propose experiments that aim at (i) assessing the quality of <sc>discoSnp</sc> results on simulated datasets, in comparison with state-of-the-art reference-free SNP detection methods (including a <italic>hybrid</italic> approach); (ii) showing how <sc>discoSnp</sc> performs on real data, with biological validation. In addition, the computational resources (time and memory) required by <sc>discoSnp</sc> are compared with those required by the other tools.</p>
    <p>Results were obtained with <sc>discoSnp</sc>, version 1.2.1 available online, as well as with the latest versions of NIKS, <sc>bubbleparse</sc> (released on April 2013) and <sc>cortex</sc> (<sc>Cortex_var</sc> v1.0.5.21). The tests were performed on the <italic>GenOuest</italic> (<ext-link ext-link-type="uri" xlink:href="http://genouest.org">genouest.org</ext-link>) cluster, composed by Intel Xeon<sup>©</sup> core processors with speed varying between 2 and 2.8 GHz.</p>
    <sec id="SEC3-1">
      <title>Detection of isolated SNPs from two to 30 haploid datasets simulated from <italic>E. coli</italic></title>
      <p>We simulated 30 read sets from <italic>E. coli</italic> genomes, in which SNPs were inserted in order to mimic a realistic allele frequency spectrum of several individuals (see ‘Materials and Methods’ section for details). Below, we present the results obtained by different tools on (i) two haploids, and on (ii) three to 30 haploids, with respect to the set of isolated SNPs.</p>
      <sec id="SEC3-1-1">
        <title>Results on two haploids</title>
        <p>Results of <sc>discoSnp</sc> applied with default parameters on 2 of the 30 haploid genomes serve as proof of concept of the approach. Results reach high precision and recall: 98.81% of predicted SNPs are true positives, while 97.31% of simulated isolated SNPs were recovered. Moreover, these results were obtained in 3 min 49 s, and needed no more than 7MB of RAM memory. Results presented in Table <xref ref-type="table" rid="tbl1">1</xref> show that, on a simple dataset composed by two bacterial genomes, all tools give similar results in terms of precision/recall (except for <sc>kissnp</sc> and <sc>niks</sc>, all results have precision ≈99.19 ± 0.66% and recall ≈96.56 ± 1.41%). However, <sc>discoSnp</sc> runs faster than other tools while being by far the one needing the smallest amount of memory, by at least three orders of magnitude.</p>
        <table-wrap id="tbl1" position="float">
          <label>Table 1.</label>
          <caption>
            <title>Comparative results of several tools discovering SNPs between two haploid bacterial datasets</title>
          </caption>
          <table frame="hsides" rules="groups">
            <thead>
              <tr>
                <th align="left" rowspan="1" colspan="1">Tool</th>
                <th align="left" rowspan="1" colspan="1">Precision</th>
                <th align="left" rowspan="1" colspan="1">Recall</th>
                <th align="left" rowspan="1" colspan="1">Time (s)</th>
                <th align="left" rowspan="1" colspan="1">Memory (GB)</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="1" colspan="1">
                  <sc>kissnp</sc>
                </td>
                <td align="left" rowspan="1" colspan="1">98.03</td>
                <td align="left" rowspan="1" colspan="1">90.58</td>
                <td align="center" rowspan="1" colspan="1">1234</td>
                <td align="center" rowspan="1" colspan="1">50.6</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <sc>niks</sc>
                </td>
                <td align="left" rowspan="1" colspan="1">77.50</td>
                <td align="left" rowspan="1" colspan="1">72.11</td>
                <td align="center" rowspan="1" colspan="1">67217</td>
                <td align="left" rowspan="1" colspan="1">86</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <sc>bubbleparse</sc>
                </td>
                <td align="left" rowspan="1" colspan="1">98.53</td>
                <td align="left" rowspan="1" colspan="1">97.98</td>
                <td align="center" rowspan="1" colspan="1">980</td>
                <td align="center" rowspan="1" colspan="1">12.6</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <sc>cortex</sc>
                </td>
                <td align="left" rowspan="1" colspan="1">99.85</td>
                <td align="left" rowspan="1" colspan="1">95.15</td>
                <td align="center" rowspan="1" colspan="1">289</td>
                <td align="center" rowspan="1" colspan="1">9.5</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <sc>discoSnp</sc>
                </td>
                <td align="left" rowspan="1" colspan="1">98.81</td>
                <td align="left" rowspan="1" colspan="1">97.31</td>
                <td align="center" rowspan="1" colspan="1">229</td>
                <td align="center" rowspan="1" colspan="1">0.007</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1"><italic>hybrid</italic> assembly</td>
                <td align="left" rowspan="1" colspan="1">97.79</td>
                <td align="left" rowspan="1" colspan="1">98.36</td>
                <td align="center" rowspan="1" colspan="1">430</td>
                <td align="center" rowspan="1" colspan="1">6.3</td>
              </tr>
            </tbody>
          </table>
        </table-wrap>
      </sec>
      <sec id="SEC3-1-2">
        <title>Results on more than two haploids</title>
        <p>When applied on more than two datasets, <sc>discoSnp</sc> still produces high quality results, with precision reaching 99.83%, and recall decreasing only slightly (94.29%) for 30 individuals (Figure <xref ref-type="fig" rid="F5">5a</xref>). Notably this shows that <sc>discoSnp</sc> results remain constant regardless of the number of input datasets, unlike <sc>cortex</sc> whose recall and precision drop for more than two datasets. Except <sc>cortex</sc>, none of the other <italic>de novo</italic> tools could be run on more than two datasets. As shown in Figure <xref ref-type="fig" rid="F5">5b</xref>, <sc>discoSnp</sc> runs faster than <sc>cortex</sc>, while needing much less memory: applied on 30 individuals, <sc>cortex</sc> requires 3 h 38 s and 9658MB of memory while <sc>discoSnp</sc> runs in 37 min and requires 9MB. For all methods, running time grows linearly with respect to the number of read sets, but with a smaller coefficient for <sc>discoSnp</sc> (see Supplementary Figure S3 of Supplementary Additional File 1).</p>
        <fig id="F5" position="float">
          <label>Figure 5.</label>
          <caption>
            <p><sc>discoSnp, cortex</sc> and hybrid strategy (soap + gatk) results, depending on the number of input haploid individuals. Soap and gatk were launched with default parameters. For <sc>discoSnp</sc> and <sc>cortex</sc>, <italic>k</italic>-mers having three or fewer occurrences in all datasets were removed. (<bold>a</bold>) Precision and recall: filled symbols represent the precision and empty symbols represent the recall. (<bold>b</bold>) Time and memory performances for two (left part) and 30 (right part) individuals.</p>
          </caption>
          <graphic xlink:href="gku1187fig5"/>
        </fig>
        <p>Furthermore, in Figure <xref ref-type="fig" rid="F5">5a</xref> and in b, we present the results obtained by the hybrid approach when assembling one of the 30 read sets for creating a reference sequence (with SOAPdenovo2 (<xref rid="B23" ref-type="bibr">23</xref>)) and then mapping the read sets to this reference (with Bowtie 2 (<xref rid="B24" ref-type="bibr">24</xref>)). Finally, SNPs were called with GATK (<xref rid="B25" ref-type="bibr">25</xref>). The results are similar to <sc>discoSnp</sc> ones, with a slightly better recall and a slightly worse precision. In this particular case, for which the reference dataset is small, complete, well covered and easy to assemble, a hybrid method can be preferred to the <italic>de novo</italic> ones, as long as the time and the memory footprints are not limiting.</p>
      </sec>
    </sec>
    <sec id="SEC3-2">
      <title>Detection of isolated SNPs from diploids, simulated from human chromosome 1</title>
      <p>In this section, we present various results obtained by <sc>discoSnp</sc> on a more complex genome, namely diploid read datasets simulated from two human chromosome 1 individuals, to discover both heterozygous and homozygous SNPs. As expected, when the complexity and the repeat content of the input genome increase, <sc>discoSnp</sc> makes more erroneous calls and misses more real SNPs. Whereas precision remains reasonable, with &lt;3% of false positive calls, recall is more impacted with 72% of the isolated SNPs that are recovered.</p>
      <p>Among the 72 518 SNPs that are missed, 86% fall in repeated regions of human chromosome 1 (as masked by RepeatMasker from UCSC Genome Browser). In order to increase the recall and detect some of the SNPs located in repeated regions, we can change the filtering parameter that controls the branching features of the detected bubbles. By default, only clean bubbles without any branching are kept. Allowing all kinds of branching bubbles (option −b 2) would lead to recover almost all simulated SNPs but at a cost of millions of false positive calls and a precision close to zero. As a compromise, when allowing only some of the branching bubbles, those without any symmetrical branchings (option −b 1), recall reaches 79.22%, allowing to detect some of the SNPs that were simulated inside repeated regions of the chromosome. This shows that symmetrically branching bubbles are the most common type of branching bubbles and are mainly false positives. Interestingly, among the few symmetrically branching bubbles that correspond to real SNPs, 90% are located in highly repeated regions such as transposable elements, and specifically SINE elements (59%).</p>
      <p>The precision obtained when using the −b 1 parameter is slightly lower, 92.33%, with 17 153 false positives. We observed that a large majority (78.8%) of these false calls are inexact repeats of size at least 2<italic>k</italic> − 1 contained in the chromosome 1, with both paths of the bubble mapping exactly to the non-mutated chromosome. Consequently, these bubbles would appear in any individual and could be easily filtered out when comparing coverage values between individuals. This is, in fact, the purpose of the phi coefficient, to rank the predictions according to how discriminant their coverages are between individuals, leaving almost all false positives with the lowest ranks. As shown in Figure <xref ref-type="fig" rid="F6">6</xref>, 99.7% of SNPs ranked with a phi value &gt;0.2 are real SNPs. This filter will remove however most of the SNPs that are heterozygous in both individuals, but for SNPs that are discriminant between the individuals, i.e. for which at least one individual is homozygous, the recall stays high (above 77.8 % over such SNPs).</p>
      <fig id="F6" position="float">
        <label>Figure 6.</label>
        <caption>
          <p>Repartition of SNPs detected by <sc>discoSnp</sc> depending of their phi coefficient. FP are false positives and TP are true positives. Homo (resp. hetero) stands for homozygous (resp. heterozygous) SNPs. True positive SNPs are then classified according to their genotype in the two individuals.</p>
        </caption>
        <graphic xlink:href="gku1187fig6"/>
      </fig>
      <p>If the user is interested specifically in non discriminant polymorphisms, or in the case when only one individual is analyzed, we recommend to use an alternative filter based on the left and right unambiguous extension lengths (see ‘Materials and Methods’). Long unambiguous extensions reveal SNPs that are isolated from other polymorphisms, while short ones reveal repeated regions or regions with high densities of polymorphism. Consequently, false positives have smaller unambiguous extension sizes (median size of 24 bp versus 527 bp for true positives).</p>
      <p>In addition to state-of-the-art <italic>de novo</italic> SNP detection tools (<sc>cortex</sc> and <sc>bubbleparse</sc>), we compared <sc>discoSnp</sc> to a <italic>hybrid</italic> strategy consisting of three steps: <italic>de novo</italic> assembly using SOAPdenovo2 (<xref rid="B23" ref-type="bibr">23</xref>), mapping with Bowtie 2 (<xref rid="B24" ref-type="bibr">24</xref>) and SNP calling using GATK (<xref rid="B25" ref-type="bibr">25</xref>). Qualitatively, the precision and recall values remain comparable between all tested methods on this dataset. Table <xref ref-type="table" rid="tbl2">2</xref> shows that, with <italic>stringent</italic> parameters (<italic>d</italic> = 0 for <sc>bubbleparse</sc> and <italic>b</italic> = 0 for <sc>discoSnp</sc>), all tools have a precision of 96.50 ± 0.72% and a recall of 71.20 ± 1.50%. With more sensitive parameters (<italic>d</italic> = 1 for <sc>bubbleparse</sc> and <italic>b</italic> = 1 for <sc>discoSnp</sc>), <sc>discoSnp</sc> achieves the best precision/recall compromise, notably with the highest recall value (79.22%).</p>
      <table-wrap id="tbl2" position="float">
        <label>Table 2.</label>
        <caption>
          <title>Results obtained by several tools with several parameter configurations on two human chromosome 1 diploid datasets</title>
        </caption>
        <table frame="hsides" rules="groups">
          <thead>
            <tr>
              <th align="left" rowspan="1" colspan="1">Tool</th>
              <th align="left" rowspan="1" colspan="1">Precision (%)</th>
              <th align="left" rowspan="1" colspan="1">Recall (%)</th>
              <th align="left" rowspan="1" colspan="1">Time</th>
              <th align="left" rowspan="1" colspan="1">Memory (GB)</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1"><sc>discoSnp</sc><italic>b</italic>0</td>
              <td align="left" rowspan="1" colspan="1">96.98</td>
              <td align="left" rowspan="1" colspan="1">71.99</td>
              <td align="left" rowspan="1" colspan="1">
                <bold>4h24</bold>
              </td>
              <td align="center" rowspan="1" colspan="1">
                <bold>5</bold>
              </td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <sc>cortex</sc>
              </td>
              <td align="left" rowspan="1" colspan="1">
                <bold>97.22</bold>
              </td>
              <td align="left" rowspan="1" colspan="1">69.70</td>
              <td align="left" rowspan="1" colspan="1">10h09</td>
              <td align="center" rowspan="1" colspan="1">105</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"><sc>bubbleparse</sc><italic>d</italic>0</td>
              <td align="left" rowspan="1" colspan="1">95.78</td>
              <td align="left" rowspan="1" colspan="1">72.71</td>
              <td align="left" rowspan="1" colspan="1">11h24</td>
              <td align="center" rowspan="1" colspan="1">105</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"><sc>discoSnp</sc><italic>b</italic>1</td>
              <td align="left" rowspan="1" colspan="1">92.33</td>
              <td align="left" rowspan="1" colspan="1">
                <bold>79.22</bold>
              </td>
              <td align="left" rowspan="1" colspan="1">4h44</td>
              <td align="center" rowspan="1" colspan="1">
                <bold>5</bold>
              </td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"><sc>bubbleparse</sc><italic>d</italic>1</td>
              <td align="left" rowspan="1" colspan="1">91.66</td>
              <td align="left" rowspan="1" colspan="1">76.60</td>
              <td align="left" rowspan="1" colspan="1">11h00</td>
              <td align="center" rowspan="1" colspan="1">105</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"><italic>hybrid</italic> strategy</td>
              <td align="left" rowspan="1" colspan="1">96.18</td>
              <td align="left" rowspan="1" colspan="1">72.86</td>
              <td align="left" rowspan="1" colspan="1">10h34</td>
              <td align="center" rowspan="1" colspan="1">54</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <fn id="TFN001">
            <p>The upper part of the table shows results obtained by <italic>de novo</italic> tools with stringent parameters (no branching allowed in bubbles). Below are the results obtained with the same tools but with more sensitive parameters, namely allowing for some branchings in bubbles. The bottom line shows results obtained with a hybrid strategy (SOAPdenovo2 + Bowtie2 + GATK), filtering out low covered SNPs (with the same parameters as those applied for all the other tools, by removing SNPs whose both alleles have coverage below four). As presented in Supplementary Additional File 1, results are worse without this filter.</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
      <p>Figure <xref ref-type="fig" rid="F7">7</xref> shows a precision–recall curve for each software, according to its own ranking method. Unlike <sc>discoSnp</sc> and Bubbleparse, the hybrid approach gives high ranks to many false positive predictions. We therefore conclude that ranks are not a viable indicator to filter out the false positives for this method. The <sc>discoSnp</sc> ranking approach enables to reach a precision of ∼100% for a high (≈60%) recall range, slightly outperforming Bubbleparse.</p>
      <fig id="F7" position="float">
        <label>Figure 7.</label>
        <caption>
          <p>Comparative results of <sc>discoSnp, cortex, bubbleparse</sc> and the <italic>hybrid</italic> SOAPdenovo2 + Bowtie2 + GATK approaches on the two diploid human chromosome 1 dataset. Precision versus recall curves are obtained by ranking the predicted SNPs. Each data point is obtained at a given rank threshold, where precision and recall values are computed for all SNPs with better ranks than this threshold. In this framework <sc>cortex</sc> does not rank the predicted SNPs, its results are thus represented by a single point. Plain lines for <sc>discoSnp</sc> and <sc>bubbleparse</sc> were obtained while discarding all branching bubbles (options −b 0 and depth = 0 respectively), whereas dotted lines were obtained when allowing for some branchings (options −b 1 and depth = 1 respectively).</p>
        </caption>
        <graphic xlink:href="gku1187fig7"/>
      </fig>
      <p>As shown in Figure <xref ref-type="fig" rid="F8">8</xref>, an important benefit of <sc>discoSnp</sc> stands in the computational resources that are needed. <sc>discoSnp</sc> is at least twice faster than any other compared tool, while its memory needs are lower by several orders of magnitude than all other approaches.</p>
      <fig id="F8" position="float">
        <label>Figure 8.</label>
        <caption>
          <p>Comparative memory and time performances on the human chromosome 1 dataset. Time values are given with options <italic>depth</italic> = 1 for <sc>bubbleparse</sc> and −<italic>b</italic> 1 for <sc>discoSnp</sc>.</p>
        </caption>
        <graphic xlink:href="gku1187fig8"/>
      </fig>
      <p>Finally, it can be of interest to detect SNPs from one unique set of reads representing an individual or a pool of individuals, as this is the case, for instance, in the tick study presented below. Therefore, we performed similar tests while searching for heterozygous SNPs from one simulated set of reads sequenced from a single diploid individual. Conclusions of this study are similar to previous ones as, with the default and most stringent filtering parameters, 67% of isolated SNPs are recovered, with roughly the same amount of false positive calls (precision of 94.1%).</p>
    </sec>
    <sec id="SEC3-3">
      <title>Results on real data: detection of SNPs from two mouse strains</title>
      <p>To analyze the behavior of <sc>discoSnp</sc> on real data, we detected SNPs between two publicly available mouse datasets produced by an Illumina GA2 sequencer. Taken together, these datasets contain 2.88 billion of 100-bp reads. The first one was generated from the <italic>FVB/NJ</italic> mouse inbred strain, while the second one was generated from the <italic>C57BL/6NJ</italic> reference line. A previous study by Wong <italic>et al.</italic> (<xref rid="B18" ref-type="bibr">18</xref>) mapped the reads from the <italic>FVB/NJ</italic> strain to the <italic>C57BL/6J</italic> reference sequence, and detected ≈5 million homozygous SNPs, among which 2 472 456 are <italic>isolated</italic> SNPs. In the following, we refer to their set of isolated SNPs as <italic>IS</italic>.</p>
      <p><sc>discoSnp</sc> was run with <italic>k</italic> = 31 and <italic>c</italic> = 5 on the <italic>FVB/NJ</italic> and <italic>C57BL/6NJ</italic> read sets, and discovered 2 065 833 isolated SNPs. As presented in Figure <xref ref-type="fig" rid="F9">9</xref> (left), 84.3% of these SNPs are also present in <italic>IS</italic>, while 70.1% of the <italic>IS</italic> set is detected by <sc>discoSnp</sc>. As the study was performed on inbred strains, only homozygous SNPs are expected. Therefore, we can take advantage of the Phi coefficient to further filter <sc>discoSnp</sc> predictions. By removing SNPs for which the Phi coefficient is ≤0.2, the number of predicted SNPs drops to 1 794 515. As depicted in Figure <xref ref-type="fig" rid="F9">9</xref> (right), 96.3% of the filtered SNPs are also in <italic>IS</italic>, while roughly the same proportion of <italic>IS</italic> SNPs are found, compared to the unfiltered results (70.0%). Therefore, by keeping only SNPs with a Phi coefficient greater than 0.2, we discard almost exclusively SNPs that are found only by <sc>discoSnp</sc>, and which might be false positives.</p>
      <fig id="F9" position="float">
        <label>Figure 9.</label>
        <caption>
          <p>Venn diagrams of isolated SNPs detected by Wong <italic>et al.</italic> (<xref rid="B18" ref-type="bibr">18</xref>) (<italic>IS</italic> set) and by <sc>discoSnp</sc>. <bold>Left</bold>: Raw <sc>discoSnp</sc> results. <bold>Right</bold>: Filtered <sc>discoSnp</sc> results, i.e. SNPs with Phi ≥0.2.</p>
        </caption>
        <graphic xlink:href="gku1187fig9"/>
      </fig>
      <p>Note that in this experiment, we can not use the terms ‘precision’ and ‘recall’ for describing results quality. Indeed, the <italic>IS</italic> dataset was obtained via a mapping approach, and thus it can neither be considered as an exhaustive, nor a perfect list of isolated SNPs.</p>
      <p>It is worth stressing that the results of Wong <italic>et al.</italic> were obtained by running a complex pipeline, involving a high-quality reference genome, 6 distinct tools, followed by a filtering step composed of 14 non-automated filters (coverage, quality, genotype, etc.). On the other hand, <sc>discoSnp</sc> did not require any third-party tool, or any manual tuning.</p>
      <p>Finally, this experiment showed that <sc>discoSnp</sc> scales remarkably well to large amounts of data. The <sc>KisSnp2</sc> module required 34 h and 4.5GB of memory. The <sc>KissReads</sc> module, which assesses the average quality and coverage of the results, took 78.5 h and 5.7GB memory. In comparison, <sc>niks , KisSnp, cortex</sc> and <sc>bubbleparse</sc> exceeded the memory limit on a server with 512GB RAM.</p>
    </sec>
    <sec id="SEC3-4">
      <title>Evaluating <sc>discoSnp</sc> recall on a validated <italic>Saccharomyces cerevisiae</italic> SNP set</title>
      <p>Using a set of biologically validated SNPs predicted from an artificial evolution study on <italic>S. cerevisiae</italic> (<xref rid="B19" ref-type="bibr">19</xref>), <sc>discoSnp</sc> recall could be evaluated on real read datasets. Among the 30 reference validated isolated SNPs, 28 were predicted by <sc>discoSnp</sc>, thus giving an estimated recall of 93.3%.</p>
      <p>The two SNPs were correctly predicted by using the −b 2 <sc>discoSnp</sc> option that reports all bubbles including branching ones. This suggests that these SNPs may be located in complex regions of the yeast genome.</p>
      <p>Overall, this experiment demonstrates the good performances of <sc>discoSnp</sc> at discovering SNPs from pooled samples, even those with low allelic frequencies: most of the reference SNPs were reported in the initial study with a MAF &lt;20%. Note that no SNP with a MAF &lt;10% was experimentally validated, so we could not assess the recall on these very low frequency SNPs.</p>
    </sec>
    <sec id="SEC3-5">
      <title>Use case example with experimental validation on SNPs in the <italic>Ixodes ricinus</italic> genome</title>
      <p>We conducted a study on real data, including an experimental validation on SNPs selected from <sc>discoSnp</sc> predictions. This was part of a population genetic study on the tick species <italic>I. ricinus</italic>, the main vector species of human and animal vector-borne diseases in Europe. Given the stake of tick-borne diseases in public health (<xref rid="B26" ref-type="bibr">26</xref>,<xref rid="B27" ref-type="bibr">27</xref>), it is necessary to have an accurate description of the genetic variability within and among populations of ticks, with the aim of developing efficient control methods against this vector. To this end, highly resolutive genetic markers, like SNPs, provide particularly valuable information to estimate genetic variability and also to estimate the dispersal and genetic structure of tick populations.</p>
      <p>No genomic resources, nor a reference genome, were available until now for this species. This study fits a case in which <sc>discoSnp</sc> is useful as (i) sequenced material exists but no reference genome is available and (ii) one is interested in detecting a small set of highly confident heterozygous SNPs. Therefore, <sc>discoSnp</sc> was applied on a 454 read set obtained from pooling and sequencing of several tick individuals isolated from natural populations (<xref rid="B2" ref-type="bibr">2</xref>).</p>
      <p><sc>discoSnp</sc> detected 321 088 SNPs of which 384 were selected, according to their minimal and maximal coverage and context sequences for experimental validation (see ‘Materials and Methods’ section). Note that as in this context there is no need to discriminate SNPs between conditions, the Phi coefficient was not used. Primers were designed for each selected SNP and 464 individuals were then genotyped for these 384 SNPs using the <italic>Fluidigm</italic> technology. Among them, 368 SNPs (95.8%) were retrieved with a minor allele frequency varying between 0.04 and 0.5, with a mean value of 0.23. Of the remaining 16 SNPs, 5 SNPs were not amplified and 11 presented only one of the two alleles.</p>
    </sec>
  </sec>
  <sec sec-type="discussion" id="SEC4">
    <title>DISCUSSION</title>
    <p><sc>discoSnp</sc> is robust with respect to input parameters, and easy to use. The input of the software is an ordered list of any number of raw read dataset(s) (<monospace>fasta</monospace> or <monospace>fastq</monospace>, <monospace>gzip</monospace> compressed or not), and two parameters (<italic>k</italic>-mer size and minimal coverage threshold). These two parameters have limited impact on results quality (see Supplementary Additional File 1, Figures S1 and S2), as long as they are coherent with respect to the input data (read length and approximate coverage). The output is a <monospace>fasta</monospace> file composed of sequences containing ranked SNPs, together with their coverage and average <monospace>PHRED</monospace> quality.</p>
    <p>As there exists no exhaustive and perfect list of the isolated SNPs present in a real dataset, a large part of the results discussed in this paper were obtained on simulated data. However, we paid special attention to the simulations being realistic. The use of simulated data allowed us to evaluate the correctness of our method in a controlled environment, and to analyze false positive and false negative calls. This highlighted that the main source of wrong calls is the presence of repeated sequences in the genomes.</p>
    <p>Two distinct strategies may be adopted for distinguishing SNPs from approximate repeats. On complex genomes, which are repeat-prone, the choice of the strategy influences the results. Removing all branching bubbles (−b 0 option) is a good way to obtain high confident coverage (precision of ≈97% on human datasets) at the expense of missing some SNPs located into repeats. On the other hand, accepting simply branching bubbles, i.e. non-symmetrical (−b 1 option), enables to detect more SNPs that are located in repeated regions, but leads to an increase of the number of false positives and to the detection of non-isolated SNPs. Therefore, the choice between these two strategies is determined by the level of complexity of the genome and by the specific needs of the user.</p>
    <p>Importantly, SNPs can be ranked according to the Phi coefficient, enabling to highlight true SNPs that discriminate conditions and to discard putative false positives due to repeats. Such feature can be precious for many biological studies, where one is often interested in finding a subset of high confidence SNPs that have opposite or only different allele frequencies between individuals or pooled samples. This was the case, for instance, when comparing two inbred mouse strains. Moreover, our simulations on a human chromosome show that, by removing low-ranked SNPs, the recall of discriminant SNPs drops only by 1.3%, while the precision increases from 92.3 to 99.7%.</p>
    <p>A distinctive advantage of our method is its extremely low memory usage. For instance, in the mouse study cited above, nearly 3 billion reads (100 bp) were analyzed by <sc>discoSnp</sc>, using at most 5.7GB of memory. This is not at the expense of prohibitive running times, as <sc>discoSnp</sc> stays faster than all other known <italic>de novo</italic> SNP detection tools. <sc>discoSnp</sc> is usable on the standard desktop computer of any biological lab, enabling studies that were not possible with other available <italic>de novo</italic> SNP detection tools (that require at least two orders of magnitude more memory).</p>
    <p>One limitation of <sc>discoSnp</sc> is that it cannot find the genomic locations of SNPs. However, in numerous biological applications, the localization of the polymorphisms is not required. For instance, <sc>discoSnp</sc> can be applied to identify SNPs associated to some phenotypic traits or diseases. Another limitation of <sc>discoSnp</sc> is induced by the fact that it focuses on isolated SNPs. If this kind of SNPs are well suited for designing markers, they do not represent the full SNP diversity and thus, they cannot be used directly for statistical downstream studies as phylogeny reconstruction, or estimation/comparison of the genetic diversity among or between natural populations. However, sequences obtained around those SNPs of interest can be genotyped at larger population scales with standard genotyping technologies or used for diagnostic assays. This was actually the case for the tick study, where natural populations were genotyped to characterize their reproductive mode (level of inbreeding) and to estimate the gene flow within and among populations at various spatial scales. Moreover, SNPs discovered by <sc>discoSnp</sc> and selected with respect to primer hybridization features, are currently used to build a genetic map based on the analysis of the segregation of parental alleles in the offspring of several controlled crosses.</p>
    <p>A future development will consist in integrating <italic>de novo</italic> SNP, and possibly other polymorphisms such as indels and structural variants detection tools (<xref rid="B28" ref-type="bibr">28</xref>), with <italic>de novo</italic> assembly. This solution would unite the power of both approaches, facilitating the assembly by tackling the polymorphism problem and by conserving the recall and precision performances of methods such as <sc>discoSnp</sc>. This idea would lead to assembled genomes represented no more as ‘simple’ linear sequences but as graphs such as suggested by the <monospace>fastg</monospace> format <ext-link ext-link-type="uri" xlink:href="http://fastg.sourceforge.net/">http://fastg.sourceforge.net/</ext-link>, in which polymorphisms are conserved. Such a change would open the way to new possibilities of storage and use of polymorphisms.</p>
  </sec>
  <sec sec-type="conclusions" id="SEC5">
    <title>CONCLUSION</title>
    <p><sc>discoSnp</sc> is an integrated reference-free software designed to find SNPs that can be subsequently used as high-quality genetic markers. <sc>discoSnp</sc> combines several advantages: (i) robust detection and ranking of isolated SNPs, (ii) support for any number of read datasets, (iii) scaling to big data studies thanks to a highly memory efficient data structure, (iv) lower running times than other reference-free tools and (v) an easy to use software, capable of processing billions of reads from a mammalian genome with a single command.</p>
    <p>The experiments on a dataset composed of two simulated diploids show that <sc>discoSnp</sc> provides similar results, both in terms of precision and recall, to those of other state-of-the-art reference-free SNP detection methods, while being faster and needing at least two orders of magnitude less memory. Experiments on simulated haploids show that, when analyzing together more than two individuals, <sc>discoSnp</sc> outperforms the other tools, both in terms of computational resources and results quality. Applied on real datasets, results confirm the capacity of <sc>discoSnp</sc> to scale-up to large volumes of data (less than 6GB memory on 3 billion Illumina reads), as well as its high precision, i.e. an experimental validation conducted on an arthropod species (the tick <italic>I. ricinus</italic>) on which <italic>de novo</italic> sequencing was performed, confirmed 96% of the predicted SNPs that were tested.</p>
    <p>The <sc>discoSnp</sc> source code, available under CeCILL license, can be downloaded from <ext-link ext-link-type="uri" xlink:href="http://colibread.inria.fr/discoSnp/">http://colibread.inria.fr/discoSnp/</ext-link>. Moreover, this web page shows how to integrate <sc>discoSnp</sc> in any Galaxy instance using the <italic>GenOuest Tool Shed</italic>.</p>
  </sec>
  <sec sec-type="supplementary-material" id="SEC6">
    <title>SUPPLEMENTARY DATA</title>
    <p><ext-link ext-link-type="uri" xlink:href="http://nar.oxfordjournals.org/lookup/suppl/doi:10.1093/nar/gku1187/-/DC1">Supplementary Data</ext-link> are available at NAR Online.</p>
    <supplementary-material id="PMC_1" content-type="local-data">
      <caption>
        <title>SUPPLEMENTARY DATA</title>
      </caption>
      <media mimetype="text" mime-subtype="html" xlink:href="supp_43_2_e11__index.html"/>
      <media xlink:role="associated-file" mimetype="application" mime-subtype="pdf" xlink:href="supp_gku1187_nar-01427-met-g-2014-File016.pdf"/>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack>
    <p>The authors warmly thank Zamin Iqbal and Richard Leggett for interesting discussions and valuable help on using <sc>cortex</sc> and <sc>bubbleparse</sc> tools. We also thank the <italic>GenOuest</italic> (<ext-link ext-link-type="uri" xlink:href="http://genouest.org">genouest.org</ext-link>) cluster team, as well as the <italic>Bordeaux Bioinformatics Center</italic> (<ext-link ext-link-type="uri" xlink:href="http://www.cbib.u-bordeaux2.fr/en">http://www.cbib.u-bordeaux2.fr/en</ext-link>) team, who allowed us to perform all the tests.</p>
  </ack>
  <sec id="SEC7">
    <title>FUNDING</title>
    <p>French ANR-12-BS02-0008 Colib'read project; SOFIPROTEOL under the FASO (Le Fonds dAction Stratégique des Oléoprotéagineux) project ‘PEAPOL’. Funding for open access charge: Inria.</p>
    <p><italic>Conflict of interest statement</italic>. None declared.</p>
  </sec>
  <ref-list>
    <title>REFERENCES</title>
    <ref id="B1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Xu</surname>
            <given-names>X.</given-names>
          </name>
          <name>
            <surname>Liu</surname>
            <given-names>X.</given-names>
          </name>
          <name>
            <surname>Ge</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Jensen</surname>
            <given-names>J. D.</given-names>
          </name>
          <name>
            <surname>Hu</surname>
            <given-names>F.</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>X.</given-names>
          </name>
          <name>
            <surname>Dong</surname>
            <given-names>Y.</given-names>
          </name>
          <name>
            <surname>Gutenkunst</surname>
            <given-names>R. N.</given-names>
          </name>
          <name>
            <surname>Fang</surname>
            <given-names>L.</given-names>
          </name>
          <name>
            <surname>Huang</surname>
            <given-names>L.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Resequencing 50 accessions of cultivated and wild rice yields markers for identifying agronomically important genes</article-title>
        <source>Nat. Biotechnol.</source>
        <year>2012</year>
        <volume>30</volume>
        <fpage>105</fpage>
        <lpage>111</lpage>
        <pub-id pub-id-type="pmid">22158310</pub-id>
      </element-citation>
    </ref>
    <ref id="B2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Quillery</surname>
            <given-names>E.</given-names>
          </name>
          <name>
            <surname>Quenez</surname>
            <given-names>O.</given-names>
          </name>
          <name>
            <surname>Peterlongo</surname>
            <given-names>P.</given-names>
          </name>
          <name>
            <surname>Plantard</surname>
            <given-names>O.</given-names>
          </name>
        </person-group>
        <article-title>Development of genomic resources for the tick Ixodes ricinus: isolation and characterization of single nucleotide polymorphisms</article-title>
        <source>Mol. Ecol. Resour.</source>
        <year>2014</year>
        <volume>14</volume>
        <fpage>393</fpage>
        <lpage>400</lpage>
        <pub-id pub-id-type="pmid">24119113</pub-id>
      </element-citation>
    </ref>
    <ref id="B3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>DePristo</surname>
            <given-names>M.A.</given-names>
          </name>
          <name>
            <surname>Banks</surname>
            <given-names>E.</given-names>
          </name>
          <name>
            <surname>Poplin</surname>
            <given-names>R.</given-names>
          </name>
          <name>
            <surname>Garimella</surname>
            <given-names>K.V.</given-names>
          </name>
          <name>
            <surname>Maguire</surname>
            <given-names>J.R.</given-names>
          </name>
          <name>
            <surname>Hartl</surname>
            <given-names>C.</given-names>
          </name>
          <name>
            <surname>Philippakis</surname>
            <given-names>A.A.</given-names>
          </name>
          <name>
            <surname>del Angel</surname>
            <given-names>G.</given-names>
          </name>
          <name>
            <surname>Rivas</surname>
            <given-names>M.A.</given-names>
          </name>
          <name>
            <surname>Hanna</surname>
            <given-names>M.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A framework for variation discovery and genotyping using next-generation DNA sequencing data</article-title>
        <source>Nat. Genet.</source>
        <year>2011</year>
        <volume>43</volume>
        <fpage>491</fpage>
        <lpage>498</lpage>
        <pub-id pub-id-type="pmid">21478889</pub-id>
      </element-citation>
    </ref>
    <ref id="B4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H.</given-names>
          </name>
          <name>
            <surname>Handsaker</surname>
            <given-names>B.</given-names>
          </name>
          <name>
            <surname>Wysoker</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Fennell</surname>
            <given-names>T.</given-names>
          </name>
          <name>
            <surname>Ruan</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Homer</surname>
            <given-names>N.</given-names>
          </name>
          <name>
            <surname>Marth</surname>
            <given-names>G.</given-names>
          </name>
          <name>
            <surname>Abecasis</surname>
            <given-names>G.</given-names>
          </name>
          <name>
            <surname>Durbin</surname>
            <given-names>R.</given-names>
          </name>
        </person-group>
        <article-title>The sequence alignment/map format and SAMtools</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <fpage>2078</fpage>
        <lpage>2079</lpage>
        <pub-id pub-id-type="pmid">19505943</pub-id>
      </element-citation>
    </ref>
    <ref id="B5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H.</given-names>
          </name>
        </person-group>
        <article-title>Exploring single-sample snp and indel calling with whole-genome de novo assembly</article-title>
        <source>Bioinformatics</source>
        <year>2012</year>
        <volume>28</volume>
        <fpage>1838</fpage>
        <lpage>1844</lpage>
        <pub-id pub-id-type="pmid">22569178</pub-id>
      </element-citation>
    </ref>
    <ref id="B6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bradnam</surname>
            <given-names>K.</given-names>
          </name>
          <name>
            <surname>Fass</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Alexandrov</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Baranay</surname>
            <given-names>P.</given-names>
          </name>
          <name>
            <surname>Bechner</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Birol</surname>
            <given-names>I.</given-names>
          </name>
          <name>
            <surname>Boisvert</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Chapman</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Chapuis</surname>
            <given-names>G.</given-names>
          </name>
          <name>
            <surname>Chikhi</surname>
            <given-names>R.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Assemblathon 2: evaluating de novo methods of genome assembly in three vertebrate species</article-title>
        <source>GigaScience</source>
        <year>2013</year>
        <volume>2</volume>
        <fpage>10</fpage>
        <pub-id pub-id-type="pmid">23870653</pub-id>
      </element-citation>
    </ref>
    <ref id="B7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Willing</surname>
            <given-names>E.-M.</given-names>
          </name>
          <name>
            <surname>Hoffmann</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Klein</surname>
            <given-names>J.D.</given-names>
          </name>
          <name>
            <surname>Weigel</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Dreyer</surname>
            <given-names>C.</given-names>
          </name>
        </person-group>
        <article-title>Paired-end RAD-seq for de novo assembly and marker design without available reference</article-title>
        <source>Bioinformatics</source>
        <year>2011</year>
        <volume>27</volume>
        <fpage>2187</fpage>
        <lpage>2193</lpage>
        <pub-id pub-id-type="pmid">21712251</pub-id>
      </element-citation>
    </ref>
    <ref id="B8">
      <label>8.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Peterlongo</surname>
            <given-names>P.</given-names>
          </name>
          <name>
            <surname>Schnel</surname>
            <given-names>N.</given-names>
          </name>
          <name>
            <surname>Pisanti</surname>
            <given-names>N.</given-names>
          </name>
          <name>
            <surname>Sagot</surname>
            <given-names>M.-F.</given-names>
          </name>
          <name>
            <surname>Lacroix</surname>
            <given-names>V.</given-names>
          </name>
        </person-group>
        <article-title>Identifying SNPs without a reference genome by comparing raw reads</article-title>
        <source>String Processing and Information Retrieval</source>
        <year>2010</year>
        <publisher-name>Springer</publisher-name>
        <fpage>147</fpage>
        <lpage>158</lpage>
      </element-citation>
    </ref>
    <ref id="B9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Iqbal</surname>
            <given-names>Z.</given-names>
          </name>
          <name>
            <surname>Caccamo</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Turner</surname>
            <given-names>I.</given-names>
          </name>
          <name>
            <surname>Flicek</surname>
            <given-names>P.</given-names>
          </name>
          <name>
            <surname>McVean</surname>
            <given-names>G.</given-names>
          </name>
        </person-group>
        <article-title>De novo assembly and genotyping of variants using colored de Bruijn graphs</article-title>
        <source>Nat. Genet.</source>
        <year>2012</year>
        <volume>44</volume>
        <fpage>226</fpage>
        <lpage>232</lpage>
        <pub-id pub-id-type="pmid">22231483</pub-id>
      </element-citation>
    </ref>
    <ref id="B10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Leggett</surname>
            <given-names>R.M.</given-names>
          </name>
          <name>
            <surname>Ramirez-Gonzalez</surname>
            <given-names>R.H.</given-names>
          </name>
          <name>
            <surname>Verweij</surname>
            <given-names>W.</given-names>
          </name>
          <name>
            <surname>Kawashima</surname>
            <given-names>C.G.</given-names>
          </name>
          <name>
            <surname>Iqbal</surname>
            <given-names>Z.</given-names>
          </name>
          <name>
            <surname>Jones</surname>
            <given-names>J.D.G.</given-names>
          </name>
          <name>
            <surname>Caccamo</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>MacLean</surname>
            <given-names>D.</given-names>
          </name>
        </person-group>
        <article-title>Identifying and classifying trait linked polymorphisms in non-reference species by walking coloured de Bruijn graphs</article-title>
        <source>PLoS ONE</source>
        <year>2013</year>
        <volume>8</volume>
        <fpage>e60058</fpage>
        <pub-id pub-id-type="pmid">23536903</pub-id>
      </element-citation>
    </ref>
    <ref id="B11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nordström</surname>
            <given-names>K.J.V.</given-names>
          </name>
          <name>
            <surname>Albani</surname>
            <given-names>M.C.</given-names>
          </name>
          <name>
            <surname>James</surname>
            <given-names>G.V.</given-names>
          </name>
          <name>
            <surname>Gutjahr</surname>
            <given-names>C.</given-names>
          </name>
          <name>
            <surname>Hartwig</surname>
            <given-names>B.</given-names>
          </name>
          <name>
            <surname>Turck</surname>
            <given-names>F.</given-names>
          </name>
          <name>
            <surname>Paszkowski</surname>
            <given-names>U.</given-names>
          </name>
          <name>
            <surname>Coupland</surname>
            <given-names>G.</given-names>
          </name>
          <name>
            <surname>Schneeberger</surname>
            <given-names>K.</given-names>
          </name>
        </person-group>
        <article-title>Mutation identification by direct comparison of whole-genome sequencing data from mutant and wild-type individuals using k-mers</article-title>
        <source>Nat. Biotechnol.</source>
        <year>2013</year>
        <volume>31</volume>
        <fpage>325</fpage>
        <lpage>330</lpage>
        <pub-id pub-id-type="pmid">23475072</pub-id>
      </element-citation>
    </ref>
    <ref id="B12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sacomoto</surname>
            <given-names>G.A.</given-names>
          </name>
          <name>
            <surname>Kielbassa</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Chikhi</surname>
            <given-names>R.</given-names>
          </name>
          <name>
            <surname>Uricaru</surname>
            <given-names>R.</given-names>
          </name>
          <name>
            <surname>Antoniou</surname>
            <given-names>P.</given-names>
          </name>
          <name>
            <surname>Sagot</surname>
            <given-names>M.-F.</given-names>
          </name>
          <name>
            <surname>Peterlongo</surname>
            <given-names>P.</given-names>
          </name>
          <name>
            <surname>Lacroix</surname>
            <given-names>V.</given-names>
          </name>
        </person-group>
        <article-title>KISSPLICE: de-novo calling alternative splicing events from RNA-seq data</article-title>
        <source>BMC Bioinformatics</source>
        <year>2012</year>
        <volume>13</volume>
        <fpage>S5</fpage>
        <pub-id pub-id-type="pmid">22537044</pub-id>
      </element-citation>
    </ref>
    <ref id="B13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gardner</surname>
            <given-names>S.N.</given-names>
          </name>
          <name>
            <surname>Hall</surname>
            <given-names>B.G.</given-names>
          </name>
        </person-group>
        <article-title>When whole-genome alignments just won't work: kSNP v2 software for alignment-free SNP discovery and phylogenetics of hundreds of microbial genomes</article-title>
        <source>PLoS ONE</source>
        <year>2013</year>
        <volume>8</volume>
        <fpage>e81760</fpage>
        <pub-id pub-id-type="pmid">24349125</pub-id>
      </element-citation>
    </ref>
    <ref id="B14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zerbino</surname>
            <given-names>D.R.</given-names>
          </name>
          <name>
            <surname>Birney</surname>
            <given-names>E.</given-names>
          </name>
        </person-group>
        <article-title>Velvet: algorithms for de novo short read assembly using de Bruijn graphs</article-title>
        <source>Genome Res.</source>
        <year>2008</year>
        <volume>18</volume>
        <fpage>821</fpage>
        <lpage>829</lpage>
        <pub-id pub-id-type="pmid">18349386</pub-id>
      </element-citation>
    </ref>
    <ref id="B15">
      <label>15.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Chikhi</surname>
            <given-names>R.</given-names>
          </name>
          <name>
            <surname>Rizk</surname>
            <given-names>G.</given-names>
          </name>
        </person-group>
        <article-title>Space-efficient and exact de Bruijn graph representation based on a Bloom filter</article-title>
        <source>Lecture Notes in Computer Science</source>
        <year>2012</year>
        <volume>7534</volume>
        <publisher-name>WABI</publisher-name>
        <fpage>236</fpage>
        <lpage>248</lpage>
      </element-citation>
    </ref>
    <ref id="B16">
      <label>16.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Salikhov</surname>
            <given-names>K.</given-names>
          </name>
          <name>
            <surname>Sacomoto</surname>
            <given-names>G.</given-names>
          </name>
          <name>
            <surname>Kucherov</surname>
            <given-names>G.</given-names>
          </name>
        </person-group>
        <article-title>Using cascading Bloom filters to improve the memory usage for de Brujin graphs</article-title>
        <source>Algorithms in Bioinformatics</source>
        <year>2013</year>
        <publisher-name>Springer</publisher-name>
        <fpage>364</fpage>
        <lpage>376</lpage>
      </element-citation>
    </ref>
    <ref id="B17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <collab>The Assemblathon 2 Consortium</collab>
        <article-title>Assemblathon 2: evaluating de novo methods of genome assembly in three vertebrate species</article-title>
        <source>GigaScience</source>
        <year>2013</year>
        <volume>2</volume>
        <fpage>10</fpage>
        <pub-id pub-id-type="pmid">23870653</pub-id>
      </element-citation>
    </ref>
    <ref id="B18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wong</surname>
            <given-names>K.</given-names>
          </name>
          <name>
            <surname>Bumpstead</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Van Der Weyden</surname>
            <given-names>L.</given-names>
          </name>
          <name>
            <surname>Reinholdt</surname>
            <given-names>L.G.</given-names>
          </name>
          <name>
            <surname>Wilming</surname>
            <given-names>L.G.</given-names>
          </name>
          <name>
            <surname>Adams</surname>
            <given-names>D.J.</given-names>
          </name>
          <name>
            <surname>Keane</surname>
            <given-names>T.M.</given-names>
          </name>
        </person-group>
        <article-title>Sequencing and characterization of the FVB/NJ mouse genome</article-title>
        <source>Genome Biol.</source>
        <year>2012</year>
        <volume>13</volume>
        <fpage>R72</fpage>
        <pub-id pub-id-type="pmid">22916792</pub-id>
      </element-citation>
    </ref>
    <ref id="B19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kvitek</surname>
            <given-names>D.J.</given-names>
          </name>
          <name>
            <surname>Sherlock</surname>
            <given-names>G.</given-names>
          </name>
        </person-group>
        <article-title>Whole genome, whole population sequencing reveals that loss of signaling networks is the major adaptive strategy in a constant environment</article-title>
        <source>PLoS Genet.</source>
        <year>2013</year>
        <volume>9</volume>
        <fpage>e1003972</fpage>
        <pub-id pub-id-type="pmid">24278038</pub-id>
      </element-citation>
    </ref>
    <ref id="B20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ullmann</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Lima</surname>
            <given-names>C.</given-names>
          </name>
          <name>
            <surname>Guerrero</surname>
            <given-names>F.</given-names>
          </name>
          <name>
            <surname>Piesman</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Black</surname>
            <given-names>W.</given-names>
          </name>
        </person-group>
        <article-title>Genome size and organization in the blacklegged tick, Ixodes scapularis and the Southern cattle tick, Boophilus microplus</article-title>
        <source>Insect Mol. Biol.</source>
        <year>2005</year>
        <volume>14</volume>
        <fpage>217</fpage>
        <lpage>222</lpage>
        <pub-id pub-id-type="pmid">15796755</pub-id>
      </element-citation>
    </ref>
    <ref id="B21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rizk</surname>
            <given-names>G.</given-names>
          </name>
          <name>
            <surname>Lavenier</surname>
            <given-names>D.</given-names>
          </name>
        </person-group>
        <article-title>GASSST: global alignment short sequence search tool</article-title>
        <source>Bioinformatics</source>
        <year>2010</year>
        <volume>26</volume>
        <fpage>2534</fpage>
        <lpage>2540</lpage>
        <pub-id pub-id-type="pmid">20739310</pub-id>
      </element-citation>
    </ref>
    <ref id="B22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wang</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Crenshaw</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Hutchinson</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Hicks</surname>
            <given-names>B.</given-names>
          </name>
          <name>
            <surname>Yeager</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Berndt</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Huang</surname>
            <given-names>W.-Y.</given-names>
          </name>
          <name>
            <surname>Hayes</surname>
            <given-names>R.</given-names>
          </name>
          <name>
            <surname>Chanock</surname>
            <given-names>S.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>High-throughput single nucleotide polymorphism genotyping using nanofluidic dynamic arrays</article-title>
        <source>BMC Genomics</source>
        <year>2009</year>
        <volume>10</volume>
        <fpage>561</fpage>
        <pub-id pub-id-type="pmid">19943955</pub-id>
      </element-citation>
    </ref>
    <ref id="B23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Luo</surname>
            <given-names>R.</given-names>
          </name>
          <name>
            <surname>Liu</surname>
            <given-names>B.</given-names>
          </name>
          <name>
            <surname>Xie</surname>
            <given-names>Y.</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>Z.</given-names>
          </name>
          <name>
            <surname>Huang</surname>
            <given-names>W.</given-names>
          </name>
          <name>
            <surname>Yuan</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>He</surname>
            <given-names>G.</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>Y.</given-names>
          </name>
          <name>
            <surname>Pan</surname>
            <given-names>Q.</given-names>
          </name>
          <name>
            <surname>Liu</surname>
            <given-names>Y.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>SOAPdenovo2: an empirically improved memory-efficient short-read de novo assembler</article-title>
        <source>GigaScience</source>
        <year>2012</year>
        <volume>1</volume>
        <fpage>18</fpage>
        <pub-id pub-id-type="pmid">23587118</pub-id>
      </element-citation>
    </ref>
    <ref id="B24">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Langmead</surname>
            <given-names>B.</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>S.L.</given-names>
          </name>
        </person-group>
        <article-title>Fast gapped-read alignment with Bowtie 2</article-title>
        <source>Nat. Methods</source>
        <year>2012</year>
        <volume>9</volume>
        <fpage>357</fpage>
        <lpage>359</lpage>
        <pub-id pub-id-type="pmid">22388286</pub-id>
      </element-citation>
    </ref>
    <ref id="B25">
      <label>25.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>McKenna</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Hanna</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Banks</surname>
            <given-names>E.</given-names>
          </name>
          <name>
            <surname>Sivachenko</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Cibulskis</surname>
            <given-names>K.</given-names>
          </name>
          <name>
            <surname>Kernytsky</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Garimella</surname>
            <given-names>K.</given-names>
          </name>
          <name>
            <surname>Altshuler</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Gabriel</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Daly</surname>
            <given-names>M.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The Genome Analysis Toolkit: a MapReduce framework for analyzing next-generation DNA sequencing data</article-title>
        <source>Genome Res.</source>
        <year>2010</year>
        <volume>20</volume>
        <fpage>1297</fpage>
        <lpage>1303</lpage>
        <pub-id pub-id-type="pmid">20644199</pub-id>
      </element-citation>
    </ref>
    <ref id="B26">
      <label>26.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gubler</surname>
            <given-names>D.J.</given-names>
          </name>
        </person-group>
        <article-title>Resurgent vector-borne diseases as a global health problem</article-title>
        <source>Emerg. infect. Dis.</source>
        <year>1998</year>
        <volume>4</volume>
        <fpage>442</fpage>
        <pub-id pub-id-type="pmid">9716967</pub-id>
      </element-citation>
    </ref>
    <ref id="B27">
      <label>27.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Parola</surname>
            <given-names>P.</given-names>
          </name>
          <name>
            <surname>Raoult</surname>
            <given-names>D.</given-names>
          </name>
        </person-group>
        <article-title>Tick-borne bacterial diseases emerging in Europe</article-title>
        <source>Clin. Microbiol. Infect.</source>
        <year>2001</year>
        <volume>7</volume>
        <fpage>80</fpage>
        <lpage>83</lpage>
        <pub-id pub-id-type="pmid">11298147</pub-id>
      </element-citation>
    </ref>
    <ref id="B28">
      <label>28.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Lemaitre</surname>
            <given-names>C.</given-names>
          </name>
          <name>
            <surname>Ciortuz</surname>
            <given-names>L.</given-names>
          </name>
          <name>
            <surname>Peterlongo</surname>
            <given-names>P.</given-names>
          </name>
        </person-group>
        <article-title>Mapping-free and assembly-free discovery of inversion breakpoints from raw NGS reads</article-title>
        <source>Lecture Notes in Computer Science</source>
        <year>2014</year>
        <volume>8542</volume>
        <publisher-name>AlCoB</publisher-name>
        <fpage>119</fpage>
        <lpage>130</lpage>
      </element-citation>
    </ref>
  </ref-list>
</back>

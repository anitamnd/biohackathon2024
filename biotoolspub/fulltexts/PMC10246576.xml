<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10246576</article-id>
    <article-id pub-id-type="pmid">37228014</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btad346</article-id>
    <article-id pub-id-type="publisher-id">btad346</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Applications Note</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Genome Analysis</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Pygenomics: manipulating genomic intervals and data files in Python</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-2931-1123</contrib-id>
        <name>
          <surname>Tamazian</surname>
          <given-names>Gaik</given-names>
        </name>
        <aff><institution>Institute for Translational Biomedicine, Saint Petersburg State University</institution>, St. Petersburg 199034, <country country="RU">Russia</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Cherkasov</surname>
          <given-names>Nikolay</given-names>
        </name>
        <aff><institution>Institute for Translational Biomedicine, Saint Petersburg State University</institution>, St. Petersburg 199034, <country country="RU">Russia</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Kanapin</surname>
          <given-names>Alexander</given-names>
        </name>
        <aff><institution>Institute for Translational Biomedicine, Saint Petersburg State University</institution>, St. Petersburg 199034, <country country="RU">Russia</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Samsonova</surname>
          <given-names>Anastasia</given-names>
        </name>
        <aff><institution>Institute for Translational Biomedicine, Saint Petersburg State University</institution>, St. Petersburg 199034, <country country="RU">Russia</country></aff>
        <xref rid="btad346-cor1" ref-type="corresp"/>
        <!--a.samsonova@spbu.ru-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Valencia</surname>
          <given-names>Alfonso</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="btad346-cor1">Corresponding author. Institute for Translational Biomedicine, Saint Petersburg State University, 7-9 Universitetskaya Embankment, St. Petersburg 199034, Russia. E-mail: <email>a.samsonova@spbu.ru</email> (A.S.)</corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <month>6</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2023-05-25">
      <day>25</day>
      <month>5</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>25</day>
      <month>5</month>
      <year>2023</year>
    </pub-date>
    <volume>39</volume>
    <issue>6</issue>
    <elocation-id>btad346</elocation-id>
    <history>
      <date date-type="received">
        <day>24</day>
        <month>6</month>
        <year>2022</year>
      </date>
      <date date-type="rev-recd">
        <day>17</day>
        <month>4</month>
        <year>2023</year>
      </date>
      <date date-type="editorial-decision">
        <day>21</day>
        <month>5</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>24</day>
        <month>5</month>
        <year>2023</year>
      </date>
      <date date-type="corrected-typeset">
        <day>07</day>
        <month>6</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2023. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2023</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btad346.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Summary</title>
        <p>We present pygenomics, a Python package for working with genomic intervals and bioinformatic data files. The package implements interval operations, provides both API and CLI, and supports reading and writing data in widely used bioinformatic formats, including BAM, BED, GFF3, and VCF. The source code of pygenomics is provided with in-source documentation and type annotations and adheres to the functional programming paradigm. These features facilitate seamless integration of pygenomics routines into scripts and pipelines. The package is implemented in pure Python using its standard library only and contains the property-based testing framework. Comparison of pygenomics with other Python bioinformatic packages with relation to features and performance is presented. The performance comparison covers operations with genomic intervals, read alignments, and genomic variants and demonstrates that pygenomics is suitable for computationally effective analysis.</p>
      </sec>
      <sec id="s2">
        <title>Availability and implementation</title>
        <p>The source code is available at <ext-link xlink:href="https://gitlab.com/gtamazian/pygenomics" ext-link-type="uri">https://gitlab.com/gtamazian/pygenomics</ext-link>.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Russian Science Foundation</institution>
            <institution-id institution-id-type="DOI">10.13039/501100006769</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>20-14-00072</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="3"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>A significant part of computational analyses in bioinformatics concerns transforming data between various formats and working with intervals in assembled genome sequences (further referred to as “genomic intervals”). The intervals may represent annotated genomic features such as genes, variants, and repeats. Moreover, a vast majority of the bioinformatic data formats is based on genomic intervals accompanied by additional information. For example, the SAM format (<xref rid="btad346-B8" ref-type="bibr">Li <italic toggle="yes">et al.</italic> 2009</xref>) specifies genomic intervals with aligned reads, while the VCF format (<xref rid="btad346-B6" ref-type="bibr">Danecek <italic toggle="yes">et al.</italic> 2011</xref>) stores intervals of genomic variants in a reference genome sequence with information about alternative alleles and variant calling error probabilities.</p>
    <p>We present pygenomics—a Python package that implements both parsing bioinformatic data and operations with intervals via red-black trees (<xref rid="btad346-B4" ref-type="bibr">Cormen <italic toggle="yes">et al.</italic> 1990</xref>). The package is written in pure Python, requires only its standard library, and can be run on any implementation of the language, including CPython and PyPy. The source code of pygenomics follows the functional programming paradigm: objects are immutable and functions produce no side effects except for routines related to input-output or raising exceptions. To validate the package routines, both static type checking and dynamic property-based tests are used. Pygenomics supports reading and writing for multiple bioinformatic data formats, including BAM, BED, GFF3, and VCF. We compare features and performance of pygenomics with four other bioinformatic packages implemented in Python: pysam (<xref rid="btad346-B7" ref-type="bibr">Heger <italic toggle="yes">et al.</italic> 2009</xref>), pybedtools (<xref rid="btad346-B5" ref-type="bibr">Dale <italic toggle="yes">et al.</italic> 2011</xref>), cyvcf2 (<xref rid="btad346-B11" ref-type="bibr">Pedersen and Quinlan 2017</xref>), and PyRanges (<xref rid="btad346-B14" ref-type="bibr">Stovner and Sætrom 2020</xref>). The pygenomics routines can be easily incorporated into Snakemake pipelines or other bioinformatic data processing workflows.</p>
  </sec>
  <sec>
    <title>2 Approach</title>
    <p>Pygenomics is an extensively documented deployable package with added type annotations and test suites. The software offers both application programming and command-line interfaces (i.e. API and CLI). The API supports calling the package routines in third-party software, in Snakemake pipelines, or in an interactive Python shell like IPython or Jupyter (<xref rid="btad346-B12" ref-type="bibr">Perez and Granger 2007</xref>). The CLI enables pygenomics usage as a stand-alone executable and allows to pass arguments to the package routines via command-line options (see <xref rid="sup1" ref-type="supplementary-material">Supplementary Data Section S3.2</xref>).</p>
    <sec>
      <title>2.1 Features</title>
      <p>Operations with genomic intervals in pygenomics are based on red-black trees described in <xref rid="btad346-B4" ref-type="bibr">Cormen <italic toggle="yes">et al.</italic> (1990)</xref>. We chose red-black trees for their simple yet effective implementation (<xref rid="btad346-B10" ref-type="bibr">Okasaki 1999</xref>) and for the fast construction procedure that requires fewer tree rebalancing operations as compared to other tree types (<xref rid="btad346-B13" ref-type="bibr">Pfaff 2004</xref>). The latter property is important for immutable objects that are reconstructed as opposed to being modified. The implemented operations include searching, intersecting, merging, subtracting, and getting complement intervals. Another structure for manipulating intervals is the nested containment list (<xref rid="btad346-B1" ref-type="bibr">Alekseyenko and Lee 2007</xref>), which implementation in C and Cython is used in the PyRanges package.</p>
      <p>Unlike general numeric intervals, the genomic intervals are associated with assembled genome sequences (chromosomes, scaffolds, or contigs) and the interval start and end positions are specified by non-negative integers bounded by sizes of the assembled genome sequences. These features allow to implement associated operations more effectively and robustly as compared to general-purpose numeric interval libraries (see <xref rid="sup1" ref-type="supplementary-material">Supplementary Data Section S2</xref>).</p>
      <p>Pygenomics implements reading and writing genomic intervals for multiple bioinformatic data formats, including BED, GTF, GFF3, WIG, VCF, SAM, and BAM (<xref rid="btad346-B2" ref-type="bibr">Bonfield <italic toggle="yes">et al.</italic> 2021</xref>). The package also provides routines for sequence input and output in the FASTA and FASTQ formats (<xref rid="btad346-B3" ref-type="bibr">Cock <italic toggle="yes">et al.</italic> 2010</xref>).</p>
    </sec>
    <sec>
      <title>2.2 Implementation</title>
      <p>The source code of pygenomics conforms to Python version 3.7, thus enabling its deployment with the latest versions of two widely used implementations of Python: CPython and PyPy. Compatibility with PyPy substantially increases performance of running pygenomics routines by taking full advantage of a large number of runtime optimizations. Details about the design principles and implementation of pygenomics and their comparison to other packages are given in <xref rid="sup1" ref-type="supplementary-material">Supplementary Data Section S1</xref>.</p>
    </sec>
    <sec>
      <title>2.3 Validation</title>
      <p>Pygenomics routines are validated through the static type checking and through the dynamic property-based testing. Since every object in the package has its type annotated, the compatibility between them in statements within the package routines is checked by the mypy static type checker. Mypy checks are exclusively based on the annotated and inferred types, i.e. without launching any routines from the package.</p>
      <p>Contrary to the type checking, the property-based testing procedure runs functions that verify correct behavior of the package source code entities by representing a specific property for one or several routines to be checked. For example, the function that converts a record to a string must be inverse to the function that parses the record from a string. The property-based testing is implemented using the Hypothesis library (<xref rid="btad346-B9" ref-type="bibr">MacIver <italic toggle="yes">et al.</italic> 2019</xref>), that generates random input arguments for the testing functions, and the pytest framework, that runs the test functions, checks conditions within them, and summarizes the testing results.</p>
    </sec>
  </sec>
  <sec>
    <title>3 Usage</title>
    <p>We highlight some of pygenomics features by means of the three use cases: estimating coverage of genomic repeats by aligned reads, summarizing the transition/transversion ratio distribution by populations and genome regions, and measuring performance of reading and merging genomic intervals. We also compare pygenomics to pybedtools, PyRanges, pysam, and cyvcf2 in terms of running time and memory usage. Both use cases and performance comparisons are implemented as Snakemake pipelines and are publicly available in the online repository on GitLab (see <xref rid="sup1" ref-type="supplementary-material">Supplementary Data Sections S3–S5</xref>).</p>
    <p>Neither pygenomics nor other packages outperform each other for all considered operations and input data sizes. We suppose that actual performance depends on multiple factors and real-world applications may require fine-tuning or optimization which may be easier to perform in pygenomics due to its design principles and pure Python implementation.</p>
  </sec>
  <sec>
    <title>4 Conclusion</title>
    <p>Pygenomics can be easily integrated into Snakemake pipelines using either API or CLI and facilitates generation of consistent results. The pure Python implementation of the package enables deployment of pygenomics-based pipelines on any system with the Python environment installed. Using pure Python code may reduce performance of pygenomics compared to packages that rely on external compiled libraries, but we assume that benefits of easy deployment outweigh the possible performance loss. The static type checking and property-based testing frameworks embedded in the package provide a reliable and convenient way to ensure integrity and portability of the package routines. The type annotations can be used by a developer to validate usage of pygenomics routines in their own source code. The consistent API, the functional programming paradigm, and stream-based input and output implemented in pygenomics, makes it a robust and reliable software solution for development of bioinformatic tools and for delivery of reproducible results.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>btad346_Supplementary_Data</label>
      <media xlink:href="btad346_supplementary_data.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <sec>
    <title>Supplementary data</title>
    <p><xref rid="sup1" ref-type="supplementary-material">Supplementary data</xref> is available at <italic toggle="yes">Bioinformatics</italic> online.</p>
  </sec>
  <sec sec-type="COI-statement">
    <title>Conflict of interest</title>
    <p>None declared.</p>
  </sec>
  <sec>
    <title>Funding</title>
    <p>This work was supported by the Russian Science Foundation [grant number 20-14-00072].</p>
  </sec>
  <sec sec-type="data-availability">
    <title>Data availability</title>
    <p>The source code of pygenomics is publicly available at the following GitLab repository: <ext-link xlink:href="https://gitlab.com/gtamazian/pygenomics" ext-link-type="uri">https://gitlab.com/gtamazian/pygenomics</ext-link>. Other data related to this article are listed in Supplementary Data Section S3.1.</p>
  </sec>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btad346-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Alekseyenko</surname><given-names>AV</given-names></string-name>, <string-name><surname>Lee</surname><given-names>CJ.</given-names></string-name></person-group><article-title>Nested Containment List (NCList): a new algorithm for accelerating interval query of genome alignment and interval databases</article-title>. <source>Bioinformatics</source><year>2007</year>;<volume>23</volume>:<fpage>1386</fpage>–<lpage>93</lpage>.<pub-id pub-id-type="pmid">17234640</pub-id></mixed-citation>
    </ref>
    <ref id="btad346-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bonfield</surname><given-names>JK</given-names></string-name>, <string-name><surname>Marshall</surname><given-names>J</given-names></string-name>, <string-name><surname>Danecek</surname><given-names>P</given-names></string-name></person-group><etal>et al</etal><article-title>HTSlib: C library for reading/writing high-throughput sequencing data</article-title>. <source>GigaScience</source><year>2021</year>;<volume>10</volume>:<fpage>giab007</fpage>.<pub-id pub-id-type="pmid">33594436</pub-id></mixed-citation>
    </ref>
    <ref id="btad346-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cock</surname><given-names>PJA</given-names></string-name>, <string-name><surname>Fields</surname><given-names>CJ</given-names></string-name>, <string-name><surname>Goto</surname><given-names>N</given-names></string-name></person-group><etal>et al</etal><article-title>The Sanger FASTQ file format for sequences with quality scores, and the Solexa/Illumina FASTQ variants</article-title>. <source>Nucleic Acids Res</source><year>2010</year>;<volume>38</volume>:<fpage>1767</fpage>–<lpage>71</lpage>.<pub-id pub-id-type="pmid">20015970</pub-id></mixed-citation>
    </ref>
    <ref id="btad346-B4">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Cormen</surname><given-names>TH</given-names></string-name>, <string-name><surname>Leiserson</surname><given-names>CE</given-names></string-name>, <string-name><surname>Rivest</surname><given-names>RL.</given-names></string-name></person-group><source>Introduction to Algorithms</source>. Cambridge, MA, USA: <publisher-name>MIT Press</publisher-name>, <year>1990</year>.</mixed-citation>
    </ref>
    <ref id="btad346-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Dale</surname><given-names>RK</given-names></string-name>, <string-name><surname>Pedersen</surname><given-names>BS</given-names></string-name>, <string-name><surname>Quinlan</surname><given-names>AR.</given-names></string-name></person-group><article-title>Pybedtools: a flexible Python library for manipulating genomic datasets and annotations</article-title>. <source>Bioinformatics</source><year>2011</year>;<volume>27</volume>:<fpage>3423</fpage>–<lpage>4</lpage>.<pub-id pub-id-type="pmid">21949271</pub-id></mixed-citation>
    </ref>
    <ref id="btad346-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Danecek</surname><given-names>P</given-names></string-name>, <string-name><surname>Auton</surname><given-names>A</given-names></string-name>, <string-name><surname>Abecasis</surname><given-names>G</given-names></string-name></person-group><etal>et al</etal>; <collab>1000 Genomes Project Analysis Group</collab>. <article-title>The variant call format and VCFtools</article-title>. <source>Bioinformatics</source><year>2011</year>;<volume>27</volume>:<fpage>2156</fpage>–<lpage>8</lpage>.<pub-id pub-id-type="pmid">21653522</pub-id></mixed-citation>
    </ref>
    <ref id="btad346-B7">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Heger</surname><given-names>A</given-names></string-name>, <string-name><surname>Jacobs</surname><given-names>K</given-names></string-name><collab>contributors</collab></person-group>. <italic toggle="yes">Pysam: HTSlib interface for Python</italic>, <year>2009</year>. <ext-link xlink:href="https://github.com/pysam-developers/pysam" ext-link-type="uri">https://github.com/pysam-developers/pysam</ext-link>.</mixed-citation>
    </ref>
    <ref id="btad346-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Li</surname><given-names>H</given-names></string-name>, <string-name><surname>Handsaker</surname><given-names>B</given-names></string-name>, <string-name><surname>Wysoker</surname><given-names>A</given-names></string-name></person-group><etal>et al</etal>; <collab>1000 Genome Project Data Processing Subgroup</collab>. <article-title>The Sequence Alignment/Map format and SAMtools</article-title>. <source>Bioinformatics</source><year>2009</year>;<volume>25</volume>:<fpage>2078</fpage>–<lpage>9</lpage>.<pub-id pub-id-type="pmid">19505943</pub-id></mixed-citation>
    </ref>
    <ref id="btad346-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>MacIver</surname><given-names>D</given-names></string-name>, <string-name><surname>Hatfield-Dodds</surname><given-names>Z</given-names></string-name>, <string-name><surname>Contributors</surname><given-names>M</given-names></string-name></person-group><etal>et al</etal><article-title>Hypothesis: a new approach to property-based testing</article-title>. <source>JOSS</source><year>2019</year>;<volume>4</volume>:<fpage>1891</fpage>.</mixed-citation>
    </ref>
    <ref id="btad346-B10">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Okasaki</surname><given-names>C.</given-names></string-name></person-group><source>Purely Functional Data Structures</source>. New York, NY, USA: <publisher-name>Cambridge University Press</publisher-name>, <year>1999</year>.</mixed-citation>
    </ref>
    <ref id="btad346-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Pedersen</surname><given-names>BS</given-names></string-name>, <string-name><surname>Quinlan</surname><given-names>AR.</given-names></string-name></person-group><article-title>cyvcf2: fast, flexible variant analysis with Python</article-title>. <source>Bioinformatics</source><year>2017</year>;<volume>33</volume>:<fpage>1867</fpage>–<lpage>9</lpage>.<pub-id pub-id-type="pmid">28165109</pub-id></mixed-citation>
    </ref>
    <ref id="btad346-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Perez</surname><given-names>F</given-names></string-name>, <string-name><surname>Granger</surname><given-names>BE.</given-names></string-name></person-group><article-title>IPython: a system for interactive scientific computing</article-title>. <source>Comput Sci Eng</source><year>2007</year>;<volume>9</volume>:<fpage>21</fpage>–<lpage>9</lpage>.</mixed-citation>
    </ref>
    <ref id="btad346-B13">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Pfaff</surname><given-names>B.</given-names></string-name></person-group><italic toggle="yes">An introduction to binary search trees and balanced trees</italic>. Boston, MA, USA: Free Software Foundation, <year>2004</year>.</mixed-citation>
    </ref>
    <ref id="btad346-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Stovner</surname><given-names>EB</given-names></string-name>, <string-name><surname>Sætrom</surname><given-names>P.</given-names></string-name></person-group><article-title>PyRanges: efficient comparison of genomic intervals in Python</article-title>. <source>Bioinformatics</source><year>2020</year>;<volume>36</volume>:<fpage>918</fpage>–<lpage>9</lpage>.<pub-id pub-id-type="pmid">31373614</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

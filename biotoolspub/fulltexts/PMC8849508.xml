<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1d3 20150301//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 39.96?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id>
    <journal-id journal-id-type="iso-abbrev">PLoS Comput Biol</journal-id>
    <journal-id journal-id-type="publisher-id">plos</journal-id>
    <journal-title-group>
      <journal-title>PLoS Computational Biology</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1553-734X</issn>
    <issn pub-type="epub">1553-7358</issn>
    <publisher>
      <publisher-name>Public Library of Science</publisher-name>
      <publisher-loc>San Francisco, CA USA</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">8849508</article-id>
    <article-id pub-id-type="pmid">35120119</article-id>
    <article-id pub-id-type="doi">10.1371/journal.pcbi.1009860</article-id>
    <article-id pub-id-type="publisher-id">PCOMPBIOL-D-21-01925</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research Article</subject>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Genetics</subject>
          <subj-group>
            <subject>Genomics</subject>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Research and Analysis Methods</subject>
        <subj-group>
          <subject>Database and Informatics Methods</subject>
          <subj-group>
            <subject>Bioinformatics</subject>
            <subj-group>
              <subject>Sequence Analysis</subject>
              <subj-group>
                <subject>Sequence Alignment</subject>
              </subj-group>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Research and Analysis Methods</subject>
        <subj-group>
          <subject>Animal Studies</subject>
          <subj-group>
            <subject>Experimental Organism Systems</subject>
            <subj-group>
              <subject>Model Organisms</subject>
              <subj-group>
                <subject>Arabidopsis Thaliana</subject>
              </subj-group>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Research and Analysis Methods</subject>
        <subj-group>
          <subject>Model Organisms</subject>
          <subj-group>
            <subject>Arabidopsis Thaliana</subject>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Organisms</subject>
          <subj-group>
            <subject>Eukaryota</subject>
            <subj-group>
              <subject>Plants</subject>
              <subj-group>
                <subject>Brassica</subject>
                <subj-group>
                  <subject>Arabidopsis Thaliana</subject>
                </subj-group>
              </subj-group>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Research and Analysis Methods</subject>
        <subj-group>
          <subject>Animal Studies</subject>
          <subj-group>
            <subject>Experimental Organism Systems</subject>
            <subj-group>
              <subject>Plant and Algal Models</subject>
              <subj-group>
                <subject>Arabidopsis Thaliana</subject>
              </subj-group>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Genetics</subject>
          <subj-group>
            <subject>Genomics</subject>
            <subj-group>
              <subject>Plant Genomics</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Bioengineering</subject>
          <subj-group>
            <subject>Biotechnology</subject>
            <subj-group>
              <subject>Plant Biotechnology</subject>
              <subj-group>
                <subject>Plant Genomics</subject>
              </subj-group>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Engineering and Technology</subject>
        <subj-group>
          <subject>Bioengineering</subject>
          <subj-group>
            <subject>Biotechnology</subject>
            <subj-group>
              <subject>Plant Biotechnology</subject>
              <subj-group>
                <subject>Plant Genomics</subject>
              </subj-group>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Plant Science</subject>
          <subj-group>
            <subject>Plant Biotechnology</subject>
            <subj-group>
              <subject>Plant Genomics</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Genetics</subject>
          <subj-group>
            <subject>Plant Genetics</subject>
            <subj-group>
              <subject>Plant Genomics</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Plant Science</subject>
          <subj-group>
            <subject>Plant Genetics</subject>
            <subj-group>
              <subject>Plant Genomics</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Genetics</subject>
          <subj-group>
            <subject>Genomics</subject>
            <subj-group>
              <subject>Human Genomics</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Genetics</subject>
          <subj-group>
            <subject>Genomics</subject>
            <subj-group>
              <subject>Animal Genomics</subject>
              <subj-group>
                <subject>Mammalian Genomics</subject>
              </subj-group>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Molecular Biology</subject>
          <subj-group>
            <subject>Molecular Biology Techniques</subject>
            <subj-group>
              <subject>Sequencing Techniques</subject>
              <subj-group>
                <subject>Genome Sequencing</subject>
              </subj-group>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Research and Analysis Methods</subject>
        <subj-group>
          <subject>Molecular Biology Techniques</subject>
          <subj-group>
            <subject>Sequencing Techniques</subject>
            <subj-group>
              <subject>Genome Sequencing</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Computer and Information Sciences</subject>
        <subj-group>
          <subject>Software Engineering</subject>
          <subj-group>
            <subject>Computer Software</subject>
            <subj-group>
              <subject>Open Source Software</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Engineering and Technology</subject>
        <subj-group>
          <subject>Software Engineering</subject>
          <subj-group>
            <subject>Computer Software</subject>
            <subj-group>
              <subject>Open Source Software</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Science Policy</subject>
        <subj-group>
          <subject>Open Science</subject>
          <subj-group>
            <subject>Open Source Software</subject>
          </subj-group>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>The SAMBA tool uses long reads to improve the contiguity of genome assemblies</article-title>
      <alt-title alt-title-type="running-head">The SAMBA tool uses long reads to improve the contiguity of genome assemblies</alt-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0001-5091-3092</contrib-id>
        <name>
          <surname>Zimin</surname>
          <given-names>Aleksey V.</given-names>
        </name>
        <role content-type="http://credit.niso.org/contributor-roles/conceptualization/">Conceptualization</role>
        <role content-type="http://credit.niso.org/contributor-roles/data-curation/">Data curation</role>
        <role content-type="http://credit.niso.org/contributor-roles/formal-analysis/">Formal analysis</role>
        <role content-type="http://credit.niso.org/contributor-roles/funding-acquisition/">Funding acquisition</role>
        <role content-type="http://credit.niso.org/contributor-roles/investigation/">Investigation</role>
        <role content-type="http://credit.niso.org/contributor-roles/methodology/">Methodology</role>
        <role content-type="http://credit.niso.org/contributor-roles/resources/">Resources</role>
        <role content-type="http://credit.niso.org/contributor-roles/software/">Software</role>
        <role content-type="http://credit.niso.org/contributor-roles/supervision/">Supervision</role>
        <role content-type="http://credit.niso.org/contributor-roles/validation/">Validation</role>
        <role content-type="http://credit.niso.org/contributor-roles/visualization/">Visualization</role>
        <role content-type="http://credit.niso.org/contributor-roles/writing-original-draft/">Writing – original draft</role>
        <role content-type="http://credit.niso.org/contributor-roles/writing-review-editing/">Writing – review &amp; editing</role>
        <xref rid="aff001" ref-type="aff">
          <sup>1</sup>
        </xref>
        <xref rid="aff002" ref-type="aff">
          <sup>2</sup>
        </xref>
        <xref rid="cor001" ref-type="corresp">*</xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0002-8859-7432</contrib-id>
        <name>
          <surname>Salzberg</surname>
          <given-names>Steven L.</given-names>
        </name>
        <role content-type="http://credit.niso.org/contributor-roles/conceptualization/">Conceptualization</role>
        <role content-type="http://credit.niso.org/contributor-roles/funding-acquisition/">Funding acquisition</role>
        <role content-type="http://credit.niso.org/contributor-roles/project-administration/">Project administration</role>
        <role content-type="http://credit.niso.org/contributor-roles/supervision/">Supervision</role>
        <role content-type="http://credit.niso.org/contributor-roles/validation/">Validation</role>
        <role content-type="http://credit.niso.org/contributor-roles/writing-original-draft/">Writing – original draft</role>
        <role content-type="http://credit.niso.org/contributor-roles/writing-review-editing/">Writing – review &amp; editing</role>
        <xref rid="aff001" ref-type="aff">
          <sup>1</sup>
        </xref>
        <xref rid="aff002" ref-type="aff">
          <sup>2</sup>
        </xref>
        <xref rid="aff003" ref-type="aff">
          <sup>3</sup>
        </xref>
        <xref rid="aff004" ref-type="aff">
          <sup>4</sup>
        </xref>
      </contrib>
    </contrib-group>
    <aff id="aff001">
      <label>1</label>
      <addr-line>Department of Biomedical Engineering, Johns Hopkins University, Baltimore, Maryland, United States of America</addr-line>
    </aff>
    <aff id="aff002">
      <label>2</label>
      <addr-line>Center for Computational Biology, Johns Hopkins University, Baltimore, Maryland, United States of America</addr-line>
    </aff>
    <aff id="aff003">
      <label>3</label>
      <addr-line>Department of Computer Science, Johns Hopkins University, Baltimore, Maryland, United States of America</addr-line>
    </aff>
    <aff id="aff004">
      <label>4</label>
      <addr-line>Department of Biostatistics, Johns Hopkins University, Baltimore, Maryland, United States of America</addr-line>
    </aff>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Shao</surname>
          <given-names>Mingfu</given-names>
        </name>
        <role>Editor</role>
        <xref rid="edit1" ref-type="aff"/>
      </contrib>
    </contrib-group>
    <aff id="edit1">
      <addr-line>Carnegie Mellon University, UNITED STATES</addr-line>
    </aff>
    <author-notes>
      <fn fn-type="COI-statement" id="coi001">
        <p>The authors have declared that no competing interests exist.</p>
      </fn>
      <corresp id="cor001">* E-mail: <email>aleksey.zimin@gmail.com</email></corresp>
    </author-notes>
    <pub-date pub-type="epub">
      <day>4</day>
      <month>2</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="collection">
      <month>2</month>
      <year>2022</year>
    </pub-date>
    <volume>18</volume>
    <issue>2</issue>
    <elocation-id>e1009860</elocation-id>
    <history>
      <date date-type="received">
        <day>22</day>
        <month>10</month>
        <year>2021</year>
      </date>
      <date date-type="accepted">
        <day>24</day>
        <month>1</month>
        <year>2022</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© 2022 Zimin, Salzberg</copyright-statement>
      <copyright-year>2022</copyright-year>
      <copyright-holder>Zimin, Salzberg</copyright-holder>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an open access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p>
      </license>
    </permissions>
    <self-uri content-type="pdf" xlink:href="pcbi.1009860.pdf"/>
    <abstract>
      <p>Third-generation sequencing technologies can generate very long reads with relatively high error rates. The lengths of the reads, which sometimes exceed one million bases, make them invaluable for resolving complex repeats that cannot be assembled using shorter reads. Many high-quality genome assemblies have already been produced, curated, and annotated using the previous generation of sequencing data, and full re-assembly of these genomes with long reads is not always practical or cost-effective. One strategy to upgrade existing assemblies is to generate additional coverage using long-read data, and add that to the previously assembled contigs. SAMBA is a tool that is designed to scaffold and gap-fill existing genome assemblies with additional long-read data, resulting in substantially greater contiguity. SAMBA is the only tool of its kind that also computes and fills in the sequence for all spanned gaps in the scaffolds, yielding much longer contigs. Here we compare SAMBA to several similar tools capable of re-scaffolding assemblies using long-read data, and we show that SAMBA yields better contiguity and introduces fewer errors than competing methods. SAMBA is open-source software that is distributed at <ext-link xlink:href="https://github.com/alekseyzimin/masurca" ext-link-type="uri">https://github.com/alekseyzimin/masurca</ext-link>.</p>
    </abstract>
    <abstract abstract-type="summary">
      <title>Author summary</title>
      <p>The DNA molecule that is in almost every cell in a living organism can be represented as sequence of four different nucleotides, or bases denoted by letters A,C,G, and T. The current sequencing technologies require breaking the DNA molecule into short fragments, sequencing them to find the corresponding sequence of letters, producing “reads”, and assembly, which recovered the DNA sequence from the reads. Repeats in the genome sequences typically prevented one from recovering full contiguous genome sequence because any repeat that is longer than the size of the read cannot be reliably resolved. Third-generation sequencing technologies can generate very long reads albeit with relatively high error rates. The lengths of the reads, which sometimes exceed one million bases, make them invaluable for resolving complex repeats that cannot be assembled using previous-generation reads. Many high-quality genome assemblies have already been produced, curated, and annotated using the previous generation of sequencing data, and full re-assembly of these genomes with long reads is not always practical or cost-effective. Here we introduce a tool called SAMBA that is designed to upgrade existing assemblies using additional coverage with long-read data, resulting in substantially greater contiguity. Here we compare SAMBA to several similar tools capable of re-scaffolding assemblies using long-read data, and we show that SAMBA yields better contiguity and introduces fewer errors than competing methods. SAMBA is open-source software that is distributed at <ext-link xlink:href="https://github.com/alekseyzimin/masurca" ext-link-type="uri">https://github.com/alekseyzimin/masurca</ext-link>.</p>
    </abstract>
    <funding-group>
      <award-group id="award001">
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="funder-id">http://dx.doi.org/10.13039/100005825</institution-id>
            <institution>National Institute of Food and Agriculture</institution>
          </institution-wrap>
        </funding-source>
        <award-id>2018-67015-28199</award-id>
        <principal-award-recipient>
          <contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0001-5091-3092</contrib-id>
          <name>
            <surname>Zimin</surname>
            <given-names>Aleksey V.</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
      <award-group id="award002">
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="funder-id">http://dx.doi.org/10.13039/100000001</institution-id>
            <institution>National Science Foundation</institution>
          </institution-wrap>
        </funding-source>
        <award-id>IOS-1744309</award-id>
        <principal-award-recipient>
          <contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0002-8859-7432</contrib-id>
          <name>
            <surname>Salzberg</surname>
            <given-names>Steven L.</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
      <award-group id="award003">
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="funder-id">http://dx.doi.org/10.13039/100000002</institution-id>
            <institution>National Institutes of Health</institution>
          </institution-wrap>
        </funding-source>
        <award-id>R01-HG006677</award-id>
        <principal-award-recipient>
          <contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0002-8859-7432</contrib-id>
          <name>
            <surname>Salzberg</surname>
            <given-names>Steven L.</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
      <award-group id="award004">
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="funder-id">http://dx.doi.org/10.13039/100000002</institution-id>
            <institution>National Institutes of Health</institution>
          </institution-wrap>
        </funding-source>
        <award-id>R35-GM130151</award-id>
        <principal-award-recipient>
          <contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0002-8859-7432</contrib-id>
          <name>
            <surname>Salzberg</surname>
            <given-names>Steven L.</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
      <funding-statement>This work was supported in part by the USDA National Institute of Food and Agriculture under grant 2018-67015-28199) to AVZ, by National Science Foundation grant IOS-1744309 to SLS, and by National Institutes of Health grants R01-HG006677 and R35-GM130151 to SLS. The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement>
    </funding-group>
    <counts>
      <fig-count count="3"/>
      <table-count count="3"/>
      <page-count count="11"/>
    </counts>
    <custom-meta-group>
      <custom-meta>
        <meta-name>PLOS Publication Stage</meta-name>
        <meta-value>vor-update-to-uncorrected-proof</meta-value>
      </custom-meta>
      <custom-meta>
        <meta-name>Publication Update</meta-name>
        <meta-value>2022-02-16</meta-value>
      </custom-meta>
      <custom-meta id="data-availability">
        <meta-name>Data Availability</meta-name>
        <meta-value>The Illumina and PacBio data for A. thaliana are available from NCBI SRA under accessions SRX533607, SRX533608 and from <ext-link xlink:href="http://schatzlab.cshl.edu/data/ectools/" ext-link-type="uri">http://schatzlab.cshl.edu/data/ectools/</ext-link>. The human CHM13 data is available from <ext-link xlink:href="https://github.com/marbl/CHM13" ext-link-type="uri">https://github.com/marbl/CHM13</ext-link>. The data for HG01243 genome were released by Shafin et al., and are available from <ext-link xlink:href="https://github.com/human-pangenomics/hpgp-data" ext-link-type="uri">https://github.com/human-pangenomics/hpgp-data</ext-link>. SAMBA is open-source software that is distributed at <ext-link xlink:href="https://github.com/alekseyzimin/masurca" ext-link-type="uri">https://github.com/alekseyzimin/masurca</ext-link>.</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
  <notes>
    <title>Data Availability</title>
    <p>The Illumina and PacBio data for A. thaliana are available from NCBI SRA under accessions SRX533607, SRX533608 and from <ext-link xlink:href="http://schatzlab.cshl.edu/data/ectools/" ext-link-type="uri">http://schatzlab.cshl.edu/data/ectools/</ext-link>. The human CHM13 data is available from <ext-link xlink:href="https://github.com/marbl/CHM13" ext-link-type="uri">https://github.com/marbl/CHM13</ext-link>. The data for HG01243 genome were released by Shafin et al., and are available from <ext-link xlink:href="https://github.com/human-pangenomics/hpgp-data" ext-link-type="uri">https://github.com/human-pangenomics/hpgp-data</ext-link>. SAMBA is open-source software that is distributed at <ext-link xlink:href="https://github.com/alekseyzimin/masurca" ext-link-type="uri">https://github.com/alekseyzimin/masurca</ext-link>.</p>
  </notes>
</front>
<body>
  <sec sec-type="intro" id="sec001">
    <title>Introduction</title>
    <p>The development of long-read sequencing technologies has revolutionized the genome assembly landscape. It is possible now, for example, to get reads that are up to a million bases long from Oxford Nanopore’s MinION and PromethION instruments [<xref rid="pcbi.1009860.ref001" ref-type="bibr">1</xref>]. These "ultralong" reads are extremely helpful for assembling genomic regions filled with long, complex repeats. However, the high error rates are still an obstacle to obtaining high-quality genome sequences from long reads alone. One effective strategy for creating assemblies with long reads is to generate both short and long reads, and then to assemble the “easy” parts of the genome with short reads and use the long reads to resolve the hard-to-assemble regions. However, for many genomes that have already been sequenced, existing assemblies already capture most of the non-repetitive sequence, obviating the need to generate additional short-read data. For these genome assemblies, adding long read data might provide a fast, cost-effective way to improve their contiguity.</p>
    <p>A hybrid approach for scaffolding genomes using long-read data was first proposed in [<xref rid="pcbi.1009860.ref002" ref-type="bibr">2</xref>]. The underlying algorithm is straightforward: first it maps long reads to contigs, then it uses the alignments to link the contigs into a graph, and finally it traverses the resulting graph to produce scaffolds, in which gap sizes are estimated from the linking information. In practice, implementing this approach may be quite complex, due to repetitive alignments that introduce loops and nested loops in the graph, and to erroneous links that result from spurious alignments of reads.</p>
    <p>In this paper we describe a novel tool called SAMBA (Scaffolding Assemblies with Multiple Big Alignments) that uses long reads to re-scaffold contigs from an existing genome assembly and to fill gaps in those scaffolds. The tool is designed to use 10-30x coverage in long read data with a set of existing contigs, although it can function with lower or higher coverage as well. Several previously developed tools also allow for scaffolding with long reads. These include AHA, which is part of the SMRT software analysis suite [<xref rid="pcbi.1009860.ref002" ref-type="bibr">2</xref>], SSPACE-LongRead [<xref rid="pcbi.1009860.ref003" ref-type="bibr">3</xref>], and LINKS [<xref rid="pcbi.1009860.ref004" ref-type="bibr">4</xref>], all of which were designed for bacteria and other small genomes. The SMIS scaffolder (<ext-link xlink:href="https://www.sanger.ac.uk/tool/smis/" ext-link-type="uri">https://www.sanger.ac.uk/tool/smis/</ext-link>) utilizes an approach of creating artificial “mate-pairs” from the long reads and using that mate-pair information to scaffold the contigs. The recently published LRScaf tool [<xref rid="pcbi.1009860.ref005" ref-type="bibr">5</xref>] is one of the very few tools besides SAMBA that can handle mammalian-sized genome data, but its algorithm is prone to creating artificial duplications of contigs. All tools except for SMIS attempt to merge contigs when negative gaps (overlaps between contigs within a scaffold) are detected, however none of these tools utilize the consensus of the long reads to fill gaps in the scaffolds as SAMBA does.</p>
    <p>The SAMBA tool described here is also a general-purpose assembly improvement tool. It has two modes or operation that are set by the “-d” parameter. It takes as input an assembly, which can be a set of contigs or scaffolds, plus either a set of long reads (“-d ont” for ONT reads, or “-d pbclr” for PacBio CLR or legacy reads) or another set contigs from the same or a closely related genome, or PacBio HiFi reads (“-d asm”). It then uses the reads or the other contigs to link and merge contigs of the input assembly. SAMBA is fast and memory efficient: it can scaffold and gap-fill a mammalian genome in only a few hours on a modern 24–32 core server, utilizing no more than 50Gb of RAM for a human-size genome. In this paper we present the results of running SAMBA on data sets from <italic toggle="yes">Arabidopsis thaliana</italic> and human, and we compare its accuracy and run times to other comparable recently published and currently maintained software.</p>
    <p>We note that in cases where the original assembly was built from only short-read data, full re-assembly of the genome using both long and short reads, with a hybrid assembler such as MaSuRCA [<xref rid="pcbi.1009860.ref006" ref-type="bibr">6</xref>,<xref rid="pcbi.1009860.ref007" ref-type="bibr">7</xref>] or Wengan [<xref rid="pcbi.1009860.ref008" ref-type="bibr">8</xref>], will likely offer better results than re-scaffolding with SAMBA. However, in many cases full re-assembly is not practical due to resource constraints or to the unavailability of the original data. Also for existing assemblies that already used some long read data, post-processing with even longer reads with SAMBA will yield improvements at a low computational cost.</p>
    <p>SAMBA is open source software, distributed with the MaSURCA assembler, included in version 4.0.5 and above.</p>
  </sec>
  <sec sec-type="results" id="sec002">
    <title>Results</title>
    <p>We compared the performance of SAMBA with three other long-read scaffolding algorithms: LRScaf version 1.1.11 [<xref rid="pcbi.1009860.ref005" ref-type="bibr">5</xref>], LINKS 1.8.7 [<xref rid="pcbi.1009860.ref004" ref-type="bibr">4</xref>], and SMIS v0.1-alpha (<ext-link xlink:href="https://www.sanger.ac.uk/tool/smis/" ext-link-type="uri">https://www.sanger.ac.uk/tool/smis/</ext-link>). Because AHA and SSPACE were designed for bacterial genomes, their memory (RAM) requirements make them impractical to use for large (mammalian-sized) genomes, so we did not include them in these experiments.</p>
    <p>For the experimental comparisons, we used data sets from two organisms, <italic toggle="yes">Arabidopsis thaliana</italic> Ler-0 and human, see <xref rid="pcbi.1009860.t001" ref-type="table">Table 1</xref>. The Illumina and PacBio data for Arabidopsis was described in [<xref rid="pcbi.1009860.ref009" ref-type="bibr">9</xref>], and the high-quality assembly of these data is available from [<xref rid="pcbi.1009860.ref010" ref-type="bibr">10</xref>]. See Data Availability section for more details, including the URLs and accession numbers.</p>
    <table-wrap position="float" id="pcbi.1009860.t001">
      <object-id pub-id-type="doi">10.1371/journal.pcbi.1009860.t001</object-id>
      <label>Table 1</label>
      <caption>
        <title>Data used for the scaffolding experiments, including short and long reads from the model plant <italic toggle="yes">Arabidopsis thaliana</italic>, and reads from two different individual humans.</title>
        <p>The Illumina reads were paired-end reads of a fixed length. N50 read length is computed by summing all read lengths, and determining the value N50 such that 50% of that total length is covered by reads of N50 or longer.</p>
      </caption>
      <alternatives>
        <graphic xlink:href="pcbi.1009860.t001" id="pcbi.1009860.t001g" position="float"/>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col align="left" valign="middle" span="1"/>
            <col align="left" valign="middle" span="1"/>
            <col align="left" valign="middle" span="1"/>
            <col align="left" valign="middle" span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th align="left" rowspan="1" colspan="1"/>
              <th align="center" rowspan="1" colspan="1">Number of reads</th>
              <th align="center" rowspan="1" colspan="1">Genome coverage</th>
              <th align="center" rowspan="1" colspan="1">N50 read length</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="4" rowspan="1">
                <bold><italic toggle="yes">A</italic>. <italic toggle="yes">thaliana</italic></bold>
              </td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">
                <bold>Illumina</bold>
              </td>
              <td align="center" rowspan="1" colspan="1">46,129,480</td>
              <td align="center" rowspan="1" colspan="1">115x</td>
              <td align="center" rowspan="1" colspan="1">300</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">
                <bold>PacBio P6-C4</bold>
              </td>
              <td align="center" rowspan="1" colspan="1">3,448,228</td>
              <td align="center" rowspan="1" colspan="1">118x</td>
              <td align="center" rowspan="1" colspan="1">7,205</td>
            </tr>
            <tr>
              <td align="left" colspan="4" rowspan="1">
                <bold><italic toggle="yes">H</italic>. <italic toggle="yes">sapiens</italic> CHM13</bold>
              </td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">
                <bold>Oxford Nanopore</bold>
              </td>
              <td align="center" rowspan="1" colspan="1">29,468,868</td>
              <td align="center" rowspan="1" colspan="1">118x</td>
              <td align="center" rowspan="1" colspan="1">56,695</td>
            </tr>
            <tr>
              <td align="left" colspan="4" rowspan="1">
                <bold><italic toggle="yes">H</italic>. <italic toggle="yes">sapiens</italic> HG01243</bold>
              </td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">
                <bold>Illumina paired-end</bold>
              </td>
              <td align="center" rowspan="1" colspan="1">1,307,137,030</td>
              <td align="center" rowspan="1" colspan="1">59x</td>
              <td align="center" rowspan="1" colspan="1">150</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">
                <bold>PacBio CLR</bold>
              </td>
              <td align="center" rowspan="1" colspan="1">23,672,554</td>
              <td align="center" rowspan="1" colspan="1">113x</td>
              <td align="center" rowspan="1" colspan="1">28,837</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">
                <bold>Oxford Nanopore</bold>
              </td>
              <td align="center" rowspan="1" colspan="1">16,239,849</td>
              <td align="center" rowspan="1" colspan="1">58x</td>
              <td align="center" rowspan="1" colspan="1">44,052</td>
            </tr>
          </tbody>
        </table>
      </alternatives>
    </table-wrap>
    <sec id="sec003">
      <title><italic toggle="yes">Arabidopsis thaliana</italic> evaluation</title>
      <p>We first assembled the genome of <italic toggle="yes">Arabidopsis thaliana</italic> from Illumina paired-end reads, without using PacBio data, using MaSuRCA 4.0.3 [<xref rid="pcbi.1009860.ref006" ref-type="bibr">6</xref>,<xref rid="pcbi.1009860.ref007" ref-type="bibr">7</xref>]. For clarity we will refer to this assembly as Athal-Illumina. The Athal-Illumina assembly contained a total of 118,048,454 bp of sequence in 4663 contigs, with an NG50 contig size of 172,147 bp; i.e., the size at which &gt;50% of the assembly is contained in contigs of this length or longer. The NG50 size was computed by Quast [<xref rid="pcbi.1009860.ref011" ref-type="bibr">11</xref>] using as reference the previously-published assembly of the same plant produced with the PacBio data [<xref rid="pcbi.1009860.ref010" ref-type="bibr">10</xref>], which we refer to as Athal-Berlin. We did not use the Arabidopsis reference genome for this comparison to avoid introducing noise due to possible structural differences between the reference plant and the plant used for sequencing and assembly of Athal-Berlin. NG50 differs from the standard N50 computation in that the genome size used for the computation is that of the reference (Athal-Berlin) rather than that of Athal-Illumina itself. Further evaluation of the Athal-Illumina assembly with Quast reported an NGA50 of 150,736 bp with 139 mis-assemblies. Quast computes NGA50 by splitting the query (Athal-Illumina) genome at mis-assemblies detected by aligning it to the reference (Athal-Berlin), and then re-running the NG50 computation.</p>
      <p>Note that in general, SAMBA is indifferent to the choice of the assembler used to produce the input contigs, as long as the contigs satisfy our size guidelines, including an N90 value larger than the minimum alignment length parameter.</p>
      <p>We then scaffolded Athal-Illumina using (1) additional PacBio reads and (2) the Athal-Berlin assembly. For the first re-scaffolding, we randomly chose multiple subsets of long PacBio reads, each representing 10-50x coverage, from the total of 118X coverage available (<xref rid="pcbi.1009860.t001" ref-type="table">Table 1</xref>). We then used these to re-scaffold the Athal-Illumina assembly, and then to evaluate the scaffolder’s performance as function of long-read coverage. We evaluated assembly quality with Quast before and after scaffolding, using the Athal-Berlin assembly as the reference. For both SAMBA and LRScaf we used similar scaffolding parameters, setting the minimum long-read alignment length to 2500 bp and the maximum overhang length to 1000 bp. We experimented with different values of minimum alignment length, and 2500 seemed to provide the best balance between the number of mis-assemblies and the size of output scaffolds for this data set. Decreasing that number led to more aggressive scaffolding (i.e., larger scaffolds) at the expense of a higher mis-assembly rate for both programs. LINKS and SMIS use different approaches to scaffolding and do not offer the user the ability to adjust these parameters, and thus we used the defaults for these programs.</p>
      <p>The scaffolding results for Arabidopsis as a function of long-read coverage depth are shown in <xref rid="pcbi.1009860.g001" ref-type="fig">Fig 1</xref>. SAMBA had the smallest number of scaffolding errors (<xref rid="pcbi.1009860.g001" ref-type="fig">Fig 1D</xref>), and it yielded the longest contigs (<xref rid="pcbi.1009860.g001" ref-type="fig">Fig 1A</xref>). LRScaf and SMIS created the longest scaffolds (<xref rid="pcbi.1009860.g001" ref-type="fig">Fig 1B</xref>). LRScaf had the highest number of errors in both contigs and scaffolds (<xref rid="pcbi.1009860.g001" ref-type="fig">Fig 1C and 1D</xref>). Improvements in contiguity obtained by all scaffolders saturated at about 30x coverage by long reads. We also noticed that the total amount of sequence in LRScaf’s output varied substantially for different inputs, ranging from 118–127 Mbp for this 120 Mbp genome. We traced that to a tendency for LRScaf to create erroneous duplicate copies of contigs on the ends of some scaffolds. (Note that we reported this as an issue on the LRScaf github site.)</p>
      <fig position="float" id="pcbi.1009860.g001">
        <object-id pub-id-type="doi">10.1371/journal.pcbi.1009860.g001</object-id>
        <label>Fig 1</label>
        <caption>
          <title>Scaffolding the Athal-Illumina assembly with LINKS, SMIS, LRScaf, and SAMBA.</title>
          <p>We compared performance as a function of long-read (PacBio) coverage, shown on the x-axis. Panels (a) and (b) show the NGA50 size for contigs and scaffolds after scaffolding with each tool. SAMBA outputs contigs, and thus its scaffold and contig results are the same. Panels (c) and (d) show the number of mis-assemblies introduced by the scaffolding process. The LINKS scaffolder required more than 512GB of RAM for PacBio coverage &gt;20x, and thus we did not run it with higher coverage. SMIS does not change contigs, so we did not include its statistics on panels (a) and (c).</p>
        </caption>
        <graphic xlink:href="pcbi.1009860.g001" position="float"/>
      </fig>
      <p>When we used the Athal-Berlin assembly [<xref rid="pcbi.1009860.ref010" ref-type="bibr">10</xref>] to scaffold the Athal-Illumina assembly, we were able to achieve an NGA50 of 1,173 Kbp, more than twice as large as the 567 Kbp that was the best NGA50 length when we re-scaffolded with long reads alone. Not surprisingly, assembly using Illumina and PacBio data was far superior to using Illumina data alone, so it would make more sense to simply use both data sets in the first place. However, if one is assembling a genome that is very closely related to a previously-assembled species, one can use this approach to improve an Illumina-only assembly. SAMBA introduced only one contig mis-assembly, compared to 30 or more mis-assemblies introduced when using the PacBio data with any of the scaffolding programs (<xref rid="pcbi.1009860.g001" ref-type="fig">Fig 1D</xref>). This shows the effectiveness of SAMBA in reconciling different assemblies of the same genome. Ideally, we would like to achieve the same contiguity as the reference when scaffolding with a better assembly of the same species, but contig mis-assemblies in the Athal-Illumina assembly prevented that here. Below we discuss further the issue of detecting contig mis-assemblies.</p>
      <p>We evaluated how the quality of consensus of the scaffolded assembly varied with the coverage by the additional long read data. For this evaluation we used the mismatches and insertion/deletion statistics computed by Quast before and after running SAMBA. We then computed the number of total bases added to the assembly in “patches” (gap-filling sequence) and computed the average error rate of the patches. The overall error rate for the Arabidopsis patches was ~5%, as shown in <xref rid="pcbi.1009860.t002" ref-type="table">Table 2</xref>. The PacBio data used for this experiment had error rate of about 17%, which we estimated by mapping the reads to the Athal-Berlin assembly with minimap2. The error rate in the patches only decreased very slightly as the coverage increased, primarily because higher coverage allowed SAMBA to span a larger number of gaps, but not necessarily with higher coverage of the patches.</p>
      <table-wrap position="float" id="pcbi.1009860.t002">
        <object-id pub-id-type="doi">10.1371/journal.pcbi.1009860.t002</object-id>
        <label>Table 2</label>
        <caption>
          <title>Evaluation of the completeness and the consensus quality of the Arabidopsis assemblies after scaffolding with PacBio data with SAMBA.</title>
          <p>We computed the average consensus quality of the gap-filling sequences for different levels of long-read coverage based on the number of mismatches, insertions and deletions reported by QUAST before and after scaffolding. Because more gaps were closed at higher coverage, the average error rate of the patches decreased only marginally.</p>
        </caption>
        <alternatives>
          <graphic xlink:href="pcbi.1009860.t002" id="pcbi.1009860.t002g" position="float"/>
          <table frame="hsides" rules="groups">
            <colgroup span="1">
              <col align="left" valign="middle" span="1"/>
              <col align="left" valign="middle" span="1"/>
              <col align="left" valign="middle" span="1"/>
              <col align="left" valign="middle" span="1"/>
              <col align="left" valign="middle" span="1"/>
              <col align="left" valign="middle" span="1"/>
            </colgroup>
            <tbody>
              <tr>
                <td align="left" rowspan="1" colspan="1">Additional long read coverage</td>
                <td align="center" rowspan="1" colspan="1">10x</td>
                <td align="center" rowspan="1" colspan="1">20x</td>
                <td align="center" rowspan="1" colspan="1">30x</td>
                <td align="center" rowspan="1" colspan="1">40x</td>
                <td align="center" rowspan="1" colspan="1">50x</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">Gaps filled</td>
                <td align="center" rowspan="1" colspan="1">741</td>
                <td align="center" rowspan="1" colspan="1">831</td>
                <td align="center" rowspan="1" colspan="1">874</td>
                <td align="center" rowspan="1" colspan="1">907</td>
                <td align="center" rowspan="1" colspan="1">910</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">Bases in patches that filled gaps</td>
                <td align="center" rowspan="1" colspan="1">312,587</td>
                <td align="center" rowspan="1" colspan="1">378,735</td>
                <td align="center" rowspan="1" colspan="1">425,150</td>
                <td align="center" rowspan="1" colspan="1">516,455</td>
                <td align="center" rowspan="1" colspan="1">548,622</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">Average error rate for the patches</td>
                <td align="center" rowspan="1" colspan="1">6%</td>
                <td align="center" rowspan="1" colspan="1">5%</td>
                <td align="center" rowspan="1" colspan="1">5%</td>
                <td align="center" rowspan="1" colspan="1">4.8%</td>
                <td align="center" rowspan="1" colspan="1">4.5%</td>
              </tr>
            </tbody>
          </table>
        </alternatives>
      </table-wrap>
      <p>Evaluation of the Athal-Illumina assembly with Merqury [<xref rid="pcbi.1009860.ref012" ref-type="bibr">12</xref>] yielded a quality value (QV) of 51, and the re-scaffolded assemblies output by SAMBA had QVs ranging from 42 to 43 for 10x-50x coverage of PacBio reads. SAMBA-scaffolded assemblies can be further polished, increasing the overall consensus quality substantially; for example, we polished the 30x re-assembly with POLCA [<xref rid="pcbi.1009860.ref013" ref-type="bibr">13</xref>] using the Illumina reads, and improved the QV to 57, corresponding to fewer than 5 errors per megabase.</p>
      <p>We observed that, due to the sequence added in the gaps, the completeness of the assemblies after scaffolding with SAMBA increased slightly, from 93.75% in the original Athal-Illumina assembly to 94% in the assembly scaffolded with SAMBA using 50x coverage in PacBio data.</p>
    </sec>
    <sec id="sec004">
      <title><italic toggle="yes">Homo sapiens</italic> evaluation</title>
      <p>Next, we examined the scaffolders’ performance on human data, which we evaluated on two different human data sets. The first data set is from CHM13, a haploid human cell line that was used to create the first-ever complete human genome assembly [<xref rid="pcbi.1009860.ref001" ref-type="bibr">1</xref>,<xref rid="pcbi.1009860.ref014" ref-type="bibr">14</xref>], and the second data set is diploid data from a Puerto Rican individual, HG01243, sequenced as part of the human pangenome project (see Data Availability section). Details of these datasets are listed in <xref rid="pcbi.1009860.t001" ref-type="table">Table 1</xref>. The Telomere-to-Telomere (T2T) consortium has produced a very high-quality, gap-free assembly of CHM13 called CHM13 v1.1 [<xref rid="pcbi.1009860.ref001" ref-type="bibr">1</xref>] which makes evaluations of assembly correctness for the CHM13 data straightforward. However, due to its pseudo-haploid nature, the CHM13 genome is considerably easier to assemble than a typical diploid human. Thus we also include in our comparison assemblies of the diploid human sample HG01243.</p>
      <p>For the first human comparison, we used a draft assembly of CHM13 produced by the Genome Institute at Washington University School of Medicine in 2015 (NCBI accession GCA_000983455.2). This assembly, which we refer to as CHM13-WashU, was produced with the Falcon assembler using 52x coverage in PacBio reads. Evaluation of this assembly with Quast yielded an NGA50 contig size of 9,287,872 bp, with 2,346 apparent mis-assemblies when compared to the CHM13 v1.1 assembly. To re-scaffold the CHM13-Washu assembly, we used the ONT reads from the CHM13hTERT cell line described in <xref rid="pcbi.1009860.t001" ref-type="table">Table 1</xref>.</p>
      <p>For the comparison on diploid human data, we produced an assembly of HG01243 from Illumina and PacBio data (<xref rid="pcbi.1009860.t001" ref-type="table">Table 1</xref>) using MaSuRCA, which we refer to as HG01243-IP. For comparisons, we used the recently-published complete genome of HG01243, called PR1 [<xref rid="pcbi.1009860.ref015" ref-type="bibr">15</xref>] as the reference in QUAST. Evaluation of the HG01243-IP assembly with yielded an NGA50 contig size of 5,839,185 bp with 1,183 apparent mis-assemblies when compared to PR1.</p>
      <p>We then used SAMBA, LINKS, SMIS and LRScaf to scaffold the CHM13-WashU and HG10243-IP assemblies using randomly chosen subsets of ultralong ONT reads representing 10x, 20x and 30x coverage. We set the minimum long read alignment to 5000 bp for both SAMBA and LRScaf. LINKS required more than 512 GB of computer memory even at the lowest level of ONT read coverage, and SMIS was unable to complete the scaffolding in 2 weeks on a 24-core server; therefore, we did not include the results from either of these tools in these comparisons. We evaluated contiguity and correctness with Quast using CHM13 v1.1 as the reference.</p>
      <p><xref rid="pcbi.1009860.g002" ref-type="fig">Fig 2</xref> compares the resulting scaffold sizes as a function of read coverage for both assemblies, using NGA50 size for CHM13 and HG01243. Panels (a) and (c) refer to HG01243 evaluations and panels (b) and (d) refer to CHM13 evaluations. For the CHM13 genome, LRScaf produced bigger scaffolds with more errors than SAMBA, while for the HG01243 assembly SAMBA contigs were as big as scaffolds produced by LRScaf, while having much fewer mis-assemblies.</p>
      <fig position="float" id="pcbi.1009860.g002">
        <object-id pub-id-type="doi">10.1371/journal.pcbi.1009860.g002</object-id>
        <label>Fig 2</label>
        <caption>
          <title>Contiguity and accuracy results for SAMBA and LRScaf on scaffolding of human assemblies CHM13 (CHM13-WashU) and HG01243 (HG01243-IP) using varied coverage of Oxford Nanopore Technologies (ONT) ultralong reads.</title>
          <p>The x-axis shows coverage in the ONT reads. All assemblies were evaluated by Quast using the CHM13 v1.1 assembly as the reference for CHM13, and the PR1 assembly (Zimin et al., 2021) for HG01243. Panels (a) and (b) compare NG50 sizes for the two different human assemblies, while (c) and (d) compare the number of mis-assemblies. Both scaffolders produced similar NG50 sizes for HG01243, while LRScaf produced bigger scaffolds for CHM13 data. SAMBA had fewer mis-assemblies in both genomes at all depths of coverage.</p>
        </caption>
        <graphic xlink:href="pcbi.1009860.g002" position="float"/>
      </fig>
      <p>In terms of cost-benefit analysis, we observe that scaffold sizes continued to increase as coverage in ONT reads rose from 20x to 30x, suggesting that even deeper coverage would yield some additional improvements.</p>
      <p>For the human experiments we used the ONT reads to create the final consensus of the gap-closing sequences, or patches. As mentioned above, the ONT reads in our experiments had a lower error rate than the PacBio reads. This difference resulted in a higher consensus quality for the patches, ranging from an average of 3.5% error for the CHM13 assembly with 10x in additional ONT coverage down to 2.6% with 30x ONT coverage.</p>
      <p>In all our experiments, SAMBA ran much faster than SMIS and LINKS, but somewhat slower than LRScaf. For example, at 30x coverage in the Arabidopsis experiment (<xref rid="pcbi.1009860.g001" ref-type="fig">Fig 1</xref>), SAMBA scaffolded the Athal-Illumina assembly in about 36 minutes, with 30 minutes spent on computing consensus on the sequence “patches” used for merging contigs. On the same data set, LINKS took nearly 10 hours and SMIS took about 28 hours (<xref rid="pcbi.1009860.t003" ref-type="table">Table 3</xref>). LRScaf was the fastest, completing the scaffolding in under 5 minutes, with most of the time (4 minutes) spent in alignment of the long reads with minimap2. SAMBA does extra work, as compared to LRScaf, in computing the consensus to fill the gaps. When the time spend computing the gap sequences is subtracted, LRScaf and SAMBA have very similar run times. On the human data (<xref rid="pcbi.1009860.g002" ref-type="fig">Fig 2</xref>), SAMBA completed scaffolding and gap filling with 30x Nanopore long reads in 12 hours, with 9 hours spent on initial read alignment by minimap2 and 3 hours spent on computing the consensus sequences to fill gaps. LRScaf finished the scaffolding in about 9 hours. The time spent on scaffolding (resolving the contig graph) was only a few minutes for both LRScaf and SAMBA. For all the timings reported here, we used a 24-core Intel(R) Xeon(R) 6248R server with 512 GB of RAM. SAMBA was quite memory -efficient, using at most 50GB of RAM for the highest long-read coverage human experiment, and less than 2GB or RAM for the Arabidopsis experiment with 50x long-read coverage.</p>
      <table-wrap position="float" id="pcbi.1009860.t003">
        <object-id pub-id-type="doi">10.1371/journal.pcbi.1009860.t003</object-id>
        <label>Table 3</label>
        <caption>
          <title>Total wall clock time (in hours) that each tool required for scaffolding the <italic toggle="yes">Arabidopsis</italic> and human assemblies with 30x coverage by long reads on a 24-core Intel(R) Xeon(R) 6248R server with 512 GB of RAM.</title>
          <p>In parentheses we list the time required for the alignment of the long reads for SAMBA and LRScaf.</p>
        </caption>
        <alternatives>
          <graphic xlink:href="pcbi.1009860.t003" id="pcbi.1009860.t003g" position="float"/>
          <table frame="hsides" rules="groups">
            <colgroup span="1">
              <col align="left" valign="middle" span="1"/>
              <col align="left" valign="middle" span="1"/>
              <col align="left" valign="middle" span="1"/>
              <col align="left" valign="middle" span="1"/>
              <col align="left" valign="middle" span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th align="left" rowspan="1" colspan="1"/>
                <th align="center" rowspan="1" colspan="1">SAMBA</th>
                <th align="center" rowspan="1" colspan="1">LRScaf</th>
                <th align="center" rowspan="1" colspan="1">LINKS</th>
                <th align="center" rowspan="1" colspan="1">SMIS</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left" rowspan="1" colspan="1"><italic toggle="yes">A</italic>. <italic toggle="yes">thaliana</italic></td>
                <td align="center" rowspan="1" colspan="1">0.6(0.07)</td>
                <td align="center" rowspan="1" colspan="1">0.1(0.07)</td>
                <td align="center" rowspan="1" colspan="1">10</td>
                <td align="center" rowspan="1" colspan="1">28</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">Human (CHM13)</td>
                <td align="center" rowspan="1" colspan="1">12(9)</td>
                <td align="center" rowspan="1" colspan="1">9(8.9)</td>
                <td align="center" rowspan="1" colspan="1">--</td>
                <td align="center" rowspan="1" colspan="1">--</td>
              </tr>
            </tbody>
          </table>
        </alternatives>
      </table-wrap>
    </sec>
  </sec>
  <sec sec-type="materials|methods" id="sec005">
    <title>Design and implementation</title>
    <p>The input to SAMBA comprises a set of input contigs C and a set of sequences used to join the contigs together, which we will designate as J. J can contain either long reads or contigs from another assembly of the same organism made, for example, using a different assembler. SAMBA starts off by aligning all sequences J<sub>i</sub> in J to the contigs C<sub>k</sub> in C using minimap2 [<xref rid="pcbi.1009860.ref016" ref-type="bibr">16</xref>]. We only use the best alignments that are longer than 5Kb (a parameter) that may overhang the end of the contig by no more than 1Kb (also a parameter), and we call these the "proper" alignments. An overhang occurs when an alignment of sequence C<sub>k</sub> to a sequence J<sub>i</sub> is such that the alignment stops before an end of C<sub>k</sub>, but J<sub>i</sub> continues beyond the end of C<sub>k</sub>. The reason why we allow for overhangs is that contigs may have local mis-assemblies on the ends, which frequently are the reason why an assembler could not extend the contig. SAMBA can sometimes fix these mis-assemblies while merging contigs with long reads. The requirement of a minimum alignment length ensures that short repeat-induced overlaps are filtered out. We only keep the proper alignments of sequences in J that align to two or more contigs in C, and discard all alignments where J<sub>i</sub> only aligns properly to a single contig. We note here that in practice SAMBA performs better on relatively contiguous input assemblies, with an N90 &gt;10 Kb; i.e., 90% of the assembled sequence is found in contigs of 10 Kb or longer.</p>
    <p>A proper alignment of a sequence J<sub>i</sub> to two contigs C<sub>i</sub> and C<sub>j</sub> in C creates a proper edge between C<sub>i</sub> and C<sub>j</sub>. If the set J consists of reads that represent relatively deep coverage, we require more than one proper edge between each pair of connected contigs. We then bundle the proper edges and produce consensus sequences for them using the Flye assembler’s consensus module [<xref rid="pcbi.1009860.ref017" ref-type="bibr">17</xref>]. This results in a set of linking sequences. If J represents another assembly of the same or a similar genome (as opposed to a set of long reads), then we skip the consensus step. We then re-align the linking sequences to the contigs in C with minimap2 and build a graph of contigs in C connected by the proper edges, where the edges are the proper alignments of the linking sequences. Each node (each contig) naturally has a beginning and an end with an arbitrary (randomly chosen) direction, and we designate all adjacent edges as either incoming or outgoing.</p>
    <p>The next step is to search for linear paths in the graph, defined as sequences of nodes that have exactly one incoming and one outgoing edge. We collapse such paths into super-nodes, as shown in <xref rid="pcbi.1009860.g003" ref-type="fig">Fig 3</xref>. Following this step, we search for "bubbles," which are paths that branch into two alternative paths and then re-merge. We call the nodes in the bubbles B<sub>1</sub>…B<sub>n</sub>, where n&gt; = 2, and all incoming edges to B<sub>1</sub>…B<sub>n</sub> are outgoing from the same node C<sub>i</sub> and all outgoing edges are incoming to the same node C<sub>j</sub>. For example, <xref rid="pcbi.1009860.g003" ref-type="fig">Fig 3</xref> shows a bubble beginning at node C<sub>2</sub>, which has two outgoing edges, and ending in node C<sub>3</sub>, with two incoming edges. A common source of these bubbles is a haplotype variant in the original diploid genome, which may lead to a contig graph where two haplotypes representing the same location on the genome were assembled into two different contigs. We “pop” the bubbles by choosing the path through the bubble that is the longest of all B<sub>n</sub> nodes. To resolve “bubbles within bubbles” we perform bubble popping iteratively until no bubbles are left to pop in the graph.</p>
    <fig position="float" id="pcbi.1009860.g003">
      <object-id pub-id-type="doi">10.1371/journal.pcbi.1009860.g003</object-id>
      <label>Fig 3</label>
      <caption>
        <title>Overview of the SAMBA scaffolding algorithm.</title>
        <p>The method resolves the initial graph into three final contigs, C1-C2-B1-B3-C3-C4 (S4), C5-R-C8 and C6-R-C7. The repeat contig R is duplicated in the final output. Note that if there were no proper edge between contigs C5 and C8, then the final output would contain C5 and C8 standalone instead of C5-R-C8.</p>
      </caption>
      <graphic xlink:href="pcbi.1009860.g003" position="float"/>
    </fig>
    <p>Following bubble popping, we look for repetitive contigs, indicated by nodes or super-nodes that have two or more incoming and two or more outgoing edges. In SAMBA we only aim to resolve repeats that are completely spanned by long reads in J that in turn have long overlaps with unique sequence surrounding the repeat. Therefore, we temporarily remove all repeat nodes from the graph, noting their edges, and re-compute the graph without them. This usually simplifies the graph, introducing breaks in places where there are not enough data to resolve repeats. We then examine all nodes in the resulting graph, and if a node has two or more incoming edges, we delete them both. We do the same if a node has two or more outgoing edges. Thus, for example, if a node has two outgoing edges and a single incoming edge, we keep the single incoming edge and delete the two outgoing edges. This breaks the graph into linear paths. Finally, we re-insert all repeat nodes (contigs) that we temporarily removed into the resulting linear paths according to their edges, duplicating the sequence if necessary. The final linear paths represent the scaffolded contigs. An example of the scaffolding process is depicted in <xref rid="pcbi.1009860.g003" ref-type="fig">Fig 3</xref>. Finally, we collapse the linear paths, and fill positive-sized gaps with the linking sequence obtained from the consensus of linking sequences in J.</p>
    <p>Following the scaffolding and gap filling steps, we extract all patch sequences that SAMBA used to fill gaps in the final scaffolds. We use minimap2 to align all contigs in C that are shorter than the maximum patch size to the patches. We then look for contigs that are uniquely contained in a patch, aligning with more than 95% identity over more than 95% of their length. We then replace the consensus of the patches by the consensus of the contigs based on the alignment coordinates, and remove the contigs that were merged from the final output. This improves the accuracy of the patch sequences and ensures that we do not spuriously retain short contigs that are duplicates of sequences that are now present in the patches.</p>
  </sec>
  <sec id="sec006">
    <title>Availability</title>
    <p>SAMBA is open-source software that is distributed with free open source MaSuRCA assembly and analysis package at <ext-link xlink:href="https://github.com/alekseyzimin/masurca" ext-link-type="uri">https://github.com/alekseyzimin/masurca</ext-link>.</p>
  </sec>
  <sec id="sec007">
    <title>Future directions</title>
    <p>We have shown here that SAMBA is a highly effective tool for improving the contiguity of genome assemblies with additional long read data. The primary limitation of SAMBA is determined by the contig lengths in the assembly being scaffolded. Since the default minimum overlap for long reads is 5000 bp, any contigs that are shorter than this minimum will not be scaffolded by SAMBA. We recommend applying SAMBA to assemblies where most of the sequence is in contigs that are longer than 5000 bp, which is not difficult to achieve with modern sequencing technologies and assembly software.</p>
    <p>Our future plans for SAMBA development include detection and correction of contig mis-assemblies in the input assembly. We may be able to use discordant alignments, such as cases where long reads map to the interiors of two different contigs, to detect and break mis-assembled contigs. This may allow SAMBA to produce a re-scaffolded genome that is not only more contiguous, but also more accurate than the original assembly.</p>
  </sec>
</body>
<back>
  <ref-list>
    <title>References</title>
    <ref id="pcbi.1009860.ref001">
      <label>1</label>
      <mixed-citation publication-type="journal"><name><surname>Nurk</surname><given-names>S</given-names></name>, <name><surname>Koren</surname><given-names>S</given-names></name>, <name><surname>Rhie</surname><given-names>A</given-names></name>, <name><surname>Rautiainen</surname><given-names>M</given-names></name>, <name><surname>Bzikadze</surname><given-names>A</given-names></name>, <etal>et al</etal>. <article-title>The complete sequence of a human genome</article-title>. <source>bioRxiv</source>. <year>2021</year><month>Jan</month><day>1</day>.</mixed-citation>
    </ref>
    <ref id="pcbi.1009860.ref002">
      <label>2</label>
      <mixed-citation publication-type="journal"><name><surname>Bashir</surname><given-names>A</given-names></name>, <name><surname>Klammer</surname></name>, <name><surname>Robins</surname><given-names>WP</given-names></name>, <name><surname>Chin</surname><given-names>CS</given-names></name>, <name><surname>Webster</surname><given-names>D</given-names></name>, <name><surname>Paxinos</surname><given-names>E</given-names></name>, <etal>et al</etal>. <article-title>A hybrid approach for the automated finishing of bacterial genomes</article-title>. <source>Nature Biotechnology</source>. <year>2012</year><month>Jul</month>;<volume>30</volume>(<issue>7</issue>):<fpage>701</fpage>–<lpage>7</lpage>. <comment>doi: </comment><pub-id pub-id-type="doi">10.1038/nbt.2288</pub-id><?supplied-pmid 22750883?><pub-id pub-id-type="pmid">22750883</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1009860.ref003">
      <label>3</label>
      <mixed-citation publication-type="journal"><name><surname>Boetzer</surname><given-names>M</given-names></name>, <name><surname>Pirovano</surname><given-names>W</given-names></name>. <article-title>SSPACE-LongRead: scaffolding bacterial draft genomes using long read sequence information</article-title>. <source>BMC Bioinformatics</source>. <year>2014</year><month>Dec</month>;<volume>15</volume>(<issue>1</issue>):<fpage>1</fpage>–<lpage>9</lpage>. <comment>doi: </comment><pub-id pub-id-type="doi">10.1186/1471-2105-15-211</pub-id><?supplied-pmid 24950923?><pub-id pub-id-type="pmid">24383880</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1009860.ref004">
      <label>4</label>
      <mixed-citation publication-type="journal"><name><surname>Warren</surname><given-names>RL</given-names></name>, <name><surname>Yang</surname><given-names>C</given-names></name>, <name><surname>Vandervalk</surname><given-names>BP</given-names></name>, <name><surname>Behsaz</surname><given-names>B</given-names></name>, <name><surname>Lagman</surname><given-names>A</given-names></name>, <name><surname>Jones</surname><given-names>SJ</given-names></name>, <name><surname>Birol</surname><given-names>I</given-names></name>. <article-title>LINKS: Scalable, alignment-free scaffolding of draft genomes with long reads</article-title>. <source>GigaScience</source>. <year>2015</year><month>Dec</month><day>1</day>;<volume>4</volume>(<issue>1</issue>):<fpage>s13742</fpage>–<lpage>015</lpage>. <comment>doi: </comment><pub-id pub-id-type="doi">10.1186/s13742-015-0076-3</pub-id><?supplied-pmid 26244089?><pub-id pub-id-type="pmid">26244089</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1009860.ref005">
      <label>5</label>
      <mixed-citation publication-type="journal"><name><surname>Qin</surname><given-names>M</given-names></name>, <name><surname>Wu</surname><given-names>S</given-names></name>, <name><surname>Li</surname><given-names>A</given-names></name>, <name><surname>Zhao</surname><given-names>F</given-names></name>, <name><surname>Feng</surname><given-names>H</given-names></name>, <name><surname>Ding</surname><given-names>L</given-names></name>, <name><surname>Ruan</surname><given-names>J</given-names></name>. <article-title>LRScaf: improving draft genomes using long noisy reads</article-title>. <source>BMC Genomics</source>. <year>2019</year><month>Dec</month>;<volume>20</volume>(<issue>1</issue>):<fpage>1</fpage>–<lpage>2</lpage>. <comment>doi: </comment><pub-id pub-id-type="doi">10.1186/s12864-018-5379-1</pub-id><?supplied-pmid 30606130?><pub-id pub-id-type="pmid">30606130</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1009860.ref006">
      <label>6</label>
      <mixed-citation publication-type="journal"><name><surname>Zimin</surname><given-names>AV</given-names></name>, <name><surname>Marçais</surname><given-names>G</given-names></name>, <name><surname>Puiu</surname><given-names>D</given-names></name>, <name><surname>Roberts</surname><given-names>M</given-names></name>, <name><surname>Salzberg</surname><given-names>SL</given-names></name>, <name><surname>Yorke</surname><given-names>JA</given-names></name>. <article-title>The MaSuRCA genome assembler</article-title>. <source>Bioinformatics</source>. <year>2013</year><month>Nov</month><day>1</day>;<volume>29</volume>(<issue>21</issue>):<fpage>2669</fpage>–<lpage>77</lpage>. <comment>doi: </comment><pub-id pub-id-type="doi">10.1093/bioinformatics/btt476</pub-id><?supplied-pmid 23990416?><pub-id pub-id-type="pmid">23990416</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1009860.ref007">
      <label>7</label>
      <mixed-citation publication-type="journal"><name><surname>Zimin</surname><given-names>AV</given-names></name>, <name><surname>Puiu</surname><given-names>D</given-names></name>, <name><surname>Luo</surname><given-names>MC</given-names></name>, <name><surname>Zhu</surname><given-names>T</given-names></name>, <name><surname>Koren</surname><given-names>S</given-names></name>, <name><surname>Marçais</surname><given-names>G</given-names></name>, <etal>et al</etal>. <article-title>Hybrid assembly of the large and highly repetitive genome of Aegilops tauschii, a progenitor of bread wheat, with the MaSuRCA mega-reads algorithm</article-title>. <source>Genome Research</source>. <year>2017</year><month>May</month><day>1</day>;<volume>27</volume>(<issue>5</issue>):<fpage>787</fpage>–<lpage>92</lpage>. <comment>doi: </comment><pub-id pub-id-type="doi">10.1101/gr.213405.116</pub-id><?supplied-pmid 28130360?><pub-id pub-id-type="pmid">28130360</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1009860.ref008">
      <label>8</label>
      <mixed-citation publication-type="journal"><name><surname>Di Genova</surname><given-names>A</given-names></name>, <name><surname>Buena-Atienza</surname><given-names>E</given-names></name>, <name><surname>Ossowski</surname><given-names>S</given-names></name>, <name><surname>Sagot</surname><given-names>MF</given-names></name>. <article-title>Efficient hybrid de novo assembly of human genomes with WENGAN</article-title>. <source>Nature Biotechnology</source>. <year>2021</year><month>Apr</month>;<volume>39</volume>(<issue>4</issue>):<fpage>422</fpage>–<lpage>30</lpage>. <comment>doi: </comment><pub-id pub-id-type="doi">10.1038/s41587-020-00747-w</pub-id><?supplied-pmid 33318652?><pub-id pub-id-type="pmid">33318652</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1009860.ref009">
      <label>9</label>
      <mixed-citation publication-type="journal"><name><surname>Lee</surname><given-names>H</given-names></name>, <name><surname>Gurtowski</surname><given-names>J</given-names></name>, <name><surname>Yoo</surname><given-names>S</given-names></name>, <name><surname>Marcus</surname><given-names>S</given-names></name>, <name><surname>McCombie</surname><given-names>WR</given-names></name>, <name><surname>Schatz</surname><given-names>M</given-names></name>. <article-title>Error correction and assembly complexity of single molecule sequencing reads</article-title>. <source>BioRxiv</source>. <year>2014</year><month>Jan</month><day>1</day>:<fpage>006395</fpage>.</mixed-citation>
    </ref>
    <ref id="pcbi.1009860.ref010">
      <label>10</label>
      <mixed-citation publication-type="journal"><name><surname>Berlin</surname><given-names>K</given-names></name>, <name><surname>Koren</surname><given-names>S</given-names></name>, <name><surname>Chin</surname><given-names>CS</given-names></name>, <name><surname>Drake</surname><given-names>JP</given-names></name>, <name><surname>Landolin</surname><given-names>JM</given-names></name>, <name><surname>Phillippy</surname><given-names>AM</given-names></name>. <article-title>Assembling large genomes with single-molecule sequencing and locality-sensitive hashing</article-title>. <source>Nature Biotechnology</source>. <year>2015</year><month>Jun</month>;<volume>33</volume>(<issue>6</issue>):<fpage>623</fpage>. <comment>doi: </comment><pub-id pub-id-type="doi">10.1038/nbt.3238</pub-id><?supplied-pmid 26006009?><pub-id pub-id-type="pmid">26006009</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1009860.ref011">
      <label>11</label>
      <mixed-citation publication-type="journal"><name><surname>Gurevich</surname><given-names>A</given-names></name>, <name><surname>Saveliev</surname><given-names>V</given-names></name>, <name><surname>Vyahhi</surname><given-names>N</given-names></name>, <name><surname>Tesler</surname><given-names>G</given-names></name>. <article-title>QUAST: quality assessment tool for genome assemblies</article-title>. <source>Bioinformatics</source>. <year>2013</year><month>Apr</month><day>15</day>;<volume>29</volume>(<issue>8</issue>):<fpage>1072</fpage>–<lpage>5</lpage>. <comment>doi: </comment><pub-id pub-id-type="doi">10.1093/bioinformatics/btt086</pub-id><?supplied-pmid 23422339?><pub-id pub-id-type="pmid">23422339</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1009860.ref012">
      <label>12</label>
      <mixed-citation publication-type="journal"><name><surname>Rhie</surname><given-names>A</given-names></name>, <name><surname>Walenz</surname><given-names>BP</given-names></name>, <name><surname>Koren</surname><given-names>S</given-names></name>, <name><surname>Phillippy</surname><given-names>AM</given-names></name>. <article-title>Merqury: reference-free quality, completeness, and phasing assessment for genome assemblies</article-title>. <source>Genome Biology</source>. <year>2020</year><month>Dec</month>;<volume>21</volume>(<issue>1</issue>):<fpage>1</fpage>–<lpage>27</lpage>.</mixed-citation>
    </ref>
    <ref id="pcbi.1009860.ref013">
      <label>13</label>
      <mixed-citation publication-type="journal"><name><surname>Zimin</surname><given-names>AV</given-names></name>, <name><surname>Salzberg</surname><given-names>SL</given-names></name>. <article-title>The genome polishing tool POLCA makes fast and accurate corrections in genome assemblies</article-title>. <source>PLoS computational biology</source>. <year>2020</year><month>Jun</month><day>26</day>;<volume>16</volume>(<issue>6</issue>):<fpage>e1007981</fpage>. <comment>doi: </comment><pub-id pub-id-type="doi">10.1371/journal.pcbi.1007981</pub-id><?supplied-pmid 32589667?><pub-id pub-id-type="pmid">32589667</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1009860.ref014">
      <label>14</label>
      <mixed-citation publication-type="journal"><name><surname>Miga</surname><given-names>KH</given-names></name>, <name><surname>Koren</surname><given-names>S</given-names></name>, <name><surname>Rhie</surname><given-names>A</given-names></name>, <name><surname>Vollger</surname><given-names>MR</given-names></name>, <name><surname>Gershman</surname><given-names>A</given-names></name>, <name><surname>Bzikadze</surname><given-names>A</given-names></name>, <etal>et al</etal>. <article-title>Telomere-to-telomere assembly of a complete human X chromosome</article-title>. <source>Nature</source>. <year>2020</year><month>Sep</month>;<volume>585</volume>(<issue>7823</issue>):<fpage>79</fpage>–<lpage>84</lpage>. <comment>doi: </comment><pub-id pub-id-type="doi">10.1038/s41586-020-2547-7</pub-id><?supplied-pmid 32663838?><pub-id pub-id-type="pmid">32663838</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1009860.ref015">
      <label>15</label>
      <mixed-citation publication-type="journal"><name><surname>Zimin</surname><given-names>AV</given-names></name>, <name><surname>Shumate</surname><given-names>A</given-names></name>, <name><surname>Shinder</surname><given-names>I</given-names></name>, <name><surname>Heinz</surname><given-names>J</given-names></name>, <name><surname>Puiu</surname><given-names>D</given-names></name>, <name><surname>Pertea</surname><given-names>M</given-names></name>, <name><surname>Salzberg</surname><given-names>SL</given-names></name>. <article-title>A reference-quality, fully annotated genome from a Puerto Rican individual</article-title>. <source>Genetics</source>. <year>2021</year>, <fpage>iyab227</fpage>, <comment>doi: </comment><pub-id pub-id-type="doi">10.1093/genetics/iyab227</pub-id><?supplied-pmid 34897437?><pub-id pub-id-type="pmid">34897437</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1009860.ref016">
      <label>16</label>
      <mixed-citation publication-type="journal"><name><surname>Li</surname><given-names>H.</given-names></name><article-title>Minimap2: pairwise alignment for nucleotide sequences</article-title>. <source>Bioinformatics</source>. <year>2018</year><month>Sep</month><day>15</day>;<volume>34</volume>(<issue>18</issue>):<fpage>3094</fpage>–<lpage>100</lpage>. <comment>doi: </comment><pub-id pub-id-type="doi">10.1093/bioinformatics/bty191</pub-id><?supplied-pmid 29750242?><pub-id pub-id-type="pmid">29750242</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1009860.ref017">
      <label>17</label>
      <mixed-citation publication-type="journal"><name><surname>Kolmogorov</surname><given-names>M</given-names></name>, <name><surname>Yuan</surname><given-names>J</given-names></name>, <name><surname>Lin</surname><given-names>Y</given-names></name>, <name><surname>Pevzner</surname><given-names>PA</given-names></name>. <article-title>Assembly of long, error-prone reads using repeat graphs</article-title>. <source>Nature Biotechnology</source>. <year>2019</year><month>May</month>;<volume>37</volume>(<issue>5</issue>):<fpage>540</fpage>–<lpage>6</lpage>. <comment>doi: </comment><pub-id pub-id-type="doi">10.1038/s41587-019-0072-8</pub-id><?supplied-pmid 30936562?><pub-id pub-id-type="pmid">30936562</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

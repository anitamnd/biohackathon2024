<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Gigascience</journal-id>
    <journal-id journal-id-type="iso-abbrev">Gigascience</journal-id>
    <journal-id journal-id-type="publisher-id">gigascience</journal-id>
    <journal-title-group>
      <journal-title>GigaScience</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2047-217X</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">9795473</article-id>
    <article-id pub-id-type="doi">10.1093/gigascience/giac122</article-id>
    <article-id pub-id-type="publisher-id">giac122</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Technical Note</subject>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI00960</subject>
        <subject>AcademicSubjects/SCI02254</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>LMAS: evaluating metagenomic short <italic toggle="yes">de novo</italic> assembly methods through defined communities</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-3090-7426</contrib-id>
        <name>
          <surname>Mendes</surname>
          <given-names>Catarina Inês</given-names>
        </name>
        <!--cimendes@medicina.ulisboa.pt-->
        <aff><institution>Instituto de Microbiologia, Instituto de Medicina Molecular, Faculdade de Medicina, Universidade de Lisboa</institution>, 1649-028 Lisboa, <country country="PT">Portugal</country></aff>
        <xref rid="cor1" ref-type="corresp"/>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-6121-8906</contrib-id>
        <name>
          <surname>Vila-Cerqueira</surname>
          <given-names>Pedro</given-names>
        </name>
        <aff><institution>Instituto de Microbiologia, Instituto de Medicina Molecular, Faculdade de Medicina, Universidade de Lisboa</institution>, 1649-028 Lisboa, <country country="PT">Portugal</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0003-1289-6919</contrib-id>
        <name>
          <surname>Motro</surname>
          <given-names>Yair</given-names>
        </name>
        <aff><institution>Faculty of Health Sciences, Ben-Gurion University of the Negev</institution>, 8410501 Beer-Sheva, <country country="IL">Israel</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-9134-050X</contrib-id>
        <name>
          <surname>Moran-Gilad</surname>
          <given-names>Jacob</given-names>
        </name>
        <aff><institution>Faculty of Health Sciences, Ben-Gurion University of the Negev</institution>, 8410501 Beer-Sheva, <country country="IL">Israel</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-5274-2722</contrib-id>
        <name>
          <surname>Carriço</surname>
          <given-names>João André</given-names>
        </name>
        <aff><institution>Instituto de Microbiologia, Instituto de Medicina Molecular, Faculdade de Medicina, Universidade de Lisboa</institution>, 1649-028 Lisboa, <country country="PT">Portugal</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-4084-6233</contrib-id>
        <name>
          <surname>Ramirez</surname>
          <given-names>Mário</given-names>
        </name>
        <aff><institution>Instituto de Microbiologia, Instituto de Medicina Molecular, Faculdade de Medicina, Universidade de Lisboa</institution>, 1649-028 Lisboa, <country country="PT">Portugal</country></aff>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="cor1"><bold>Correspondence address</bold>. Catarina I. Mendes, Instituto de Microbiologia, Instituto de Medicina Molecular, Faculdade de Medicina, Universidade de Lisboa, 1649-028 Lisboa, Portuga. E-mail: <email>cimendes@medicina.ulisboa.pt</email></corresp>
    </author-notes>
    <pub-date pub-type="epub" iso-8601-date="2022-12-28">
      <day>28</day>
      <month>12</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>28</day>
      <month>12</month>
      <year>2022</year>
    </pub-date>
    <volume>12</volume>
    <elocation-id>giac122</elocation-id>
    <history>
      <date date-type="received">
        <day>04</day>
        <month>5</month>
        <year>2022</year>
      </date>
      <date date-type="rev-recd">
        <day>26</day>
        <month>9</month>
        <year>2022</year>
      </date>
      <date date-type="accepted">
        <day>16</day>
        <month>11</month>
        <year>2022</year>
      </date>
      <date date-type="corrected-typeset">
        <day>28</day>
        <month>12</month>
        <year>2022</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2022. Published by Oxford University Press GigaScience.</copyright-statement>
      <copyright-year>2022</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="giac122.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="abs1">
        <title>Background</title>
        <p>The <italic toggle="yes">de novo</italic> assembly of raw sequence data is key in metagenomic analysis. It allows recovering draft genomes from a pool of mixed raw reads, yielding longer sequences that offer contextual information and provide a more complete picture of the microbial community.</p>
      </sec>
      <sec id="abs2">
        <title>Findings</title>
        <p>To better compare <italic toggle="yes">de novo</italic> assemblers for metagenomic analysis, LMAS (Last Metagenomic Assembler Standing) was developed as a flexible platform allowing users to evaluate assembler performance given known standard communities. Overall, in our test datasets, <italic toggle="yes">k</italic>-mer De Bruijn graph assemblers outperformed the alternative approaches but came with a greater computational cost. Furthermore, assemblers branded as metagenomic specific did not consistently outperform other genomic assemblers in metagenomic samples. Some assemblers still in use, such as ABySS, MetaHipmer2, minia, and VelvetOptimiser, perform relatively poorly and should be used with caution when assembling complex samples. Meaningful strain resolution at the single-nucleotide polymorphism level was not achieved, even by the best assemblers tested.</p>
      </sec>
      <sec id="abs3">
        <title>Conclusions</title>
        <p>The choice of a <italic toggle="yes">de novo</italic> assembler depends on the computational resources available, the replicon of interest, and the major goals of the analysis. No single assembler appeared an ideal choice for short-read metagenomic prokaryote replicon assembly, each showing specific strengths. The choice of metagenomic assembler should be guided by user requirements and characteristics of the sample of interest, and LMAS provides an interactive evaluation platform for this purpose. LMAS is open source, and the workflow and its documentation are available at <ext-link xlink:href="https://github.com/B-UMMI/LMAS" ext-link-type="uri">https://github.com/B-UMMI/LMAS</ext-link> and <ext-link xlink:href="https://lmas.readthedocs.io/" ext-link-type="uri">https://lmas.readthedocs.io/</ext-link>, respectively.</p>
      </sec>
    </abstract>
    <kwd-group kwd-group-type="keywords">
      <kwd>shotgun metagenomics</kwd>
      <kwd><italic toggle="yes">de novo</italic> assembly</kwd>
      <kwd>benchmark</kwd>
      <kwd>draft genome quality</kwd>
      <kwd>simulation</kwd>
    </kwd-group>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Fundação para a Ciência e Tecnologia</institution>
          </institution-wrap>
        </funding-source>
        <award-id>SFRH/BD/129483/2017</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="16"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec id="sec1">
    <title>Background</title>
    <p>Short-read shotgun metagenomics has the potential to offer comprehensive microbial detection and characterization of complex clinical or environmental samples. Despite becoming an increasingly used approach, it comes at the cost of producing massive amounts of data that require expert handling and processing, as well as adequate computational resources. The <italic toggle="yes">de novo</italic> assembly process is key when analyzing metagenomic data since it allows recovering contigs representing the replicons present in the sample, be it prokaryotic chromosomes, plasmids, or viruses, from a pool of mixed raw reads. These contigs are longer sequences that offer better contextual information than reads alone and provide a more complete picture of the microbial community than the species composition. Despite efforts for the development, standardization, and assessment of software for metagenomic analysis, both commercial and open source [<xref rid="bib1" ref-type="bibr">1–5</xref>], the <italic toggle="yes">de novo</italic> assembly process still represents a critical point in these analyses.</p>
    <p>The assembly of draft genomes has become a central step when analyzing pure bacterial cultures, for instance, allowing genomic comparisons through single-nucleotide polymorphisms (SNPs) or gene-by-gene methods, such as core-genome multilocus sequence typing (cgMLST). de Bruijn graph (dBg) algorithms are currently the most widely used approaches in modern assembly software. dBg handles unresolvable repeats by essentially fragmenting the sequence, that is, forming multiple contigs for each of the possibly contiguous sequences present in the sample. Additionally, the inherent heterogeneity of complex samples, potentially containing a multitude of replicons, could make traditional genome assemblers, implementing optimizations based on the assumption of having a single genome in the sample, not suitable for metagenomics [<xref rid="bib6" ref-type="bibr">6</xref>].</p>
    <p>Several dedicated metagenomic assembly tools for short-read data are available [<xref rid="bib6" ref-type="bibr">6</xref>]. These tools are generally assumed to perform better when dealing with complex samples having a combination of intragenomic and intergenomic repeats and uneven and low-coverage sequencing depths of some of the replicons [<xref rid="bib7" ref-type="bibr">7</xref>]. Not using dedicated metagenomic assemblers was suggested to come with the cost of generating artificial variation and chimeric contigs, especially in samples that contain closely related species [<xref rid="bib8" ref-type="bibr">8</xref>]. However, no formal comparison has looked at increased accuracy or gains in contiguity of assemblies obtained with metagenomic assemblers versus traditional assemblers.</p>
    <p>With an ever-increasing range of both traditional and metagenomic assemblers becoming available, choosing the best-performing tool can be an arduous and time-consuming task since the choice may vary depending on the purpose of the analysis, organism of interest, complexity of the sample, and computational infrastructure available. Additionally, the evaluation of the resulting contigs is not straightforward since one metric is not sufficient to classify an assembly, particularly with complex samples [<xref rid="bib7" ref-type="bibr">7</xref>, <xref rid="bib9" ref-type="bibr">9</xref>]. Despite several <italic toggle="yes">de novo</italic> assembly validation methods relying on features of the created contigs themselves, such as QUAST [<xref rid="bib10" ref-type="bibr">10</xref>], being useful in identifying inconsistencies indicative of potential assembly errors, the use of reference-based validation methods offers the possibility of a more complete evaluation of accuracy and is particularly important to benchmark attempts to reconstruct communities. MetaQUAST [<xref rid="bib11" ref-type="bibr">11</xref>], a modification of QUAST, extends the original software by performing assembly evaluation based on aligning contigs to a reference, which can be provided or inferred by the software, and reports, in addition to the standard metrics for single genomes reported by QUAST, the number of interspecies translocations and the number of possibly misassembled contigs.</p>
    <p>The use of mock communities, with known composition, abundance, and genomic information, provides a ground truth against which the success of the assembly of a complex sample can be evaluated. Furthermore, this can be done in circumstances in which the errors introduced by sample processing and the sequencing and associated methods used approximate, as much as possible, their effects in real samples. Such mock communities facilitate the identification of misassemblies, such as chimeric sequences generated from the improper combination of 2 distinct replicons, indels, or single-nucleotide variants improperly created by the assembler. On the other hand, the comparison of the performance of 2 assemblers is only possible if the input data are the same and if the same evaluation metrics are applied [<xref rid="bib3" ref-type="bibr">3</xref>].</p>
    <p>To tackle these challenges, we developed LMAS (Last Metagenomic Assembler Standing), an automated workflow to enable the benchmarking of traditional and metagenomic prokaryotic <italic toggle="yes">de novo</italic> assembly software using defined mock communities. The results of LMAS are presented in an interactive HTML report where selected global and reference replicon-specific performance metrics can be explored. The mock communities can be provided by the user to better reflect the samples of interest. New assemblers can be added with minimal changes to the pipeline so that LMAS can be expanded to include novel algorithms as they are developed. The portability and ease of use of LMAS are intended to provide users with a continuous benchmarking platform to easily evaluate the performance of assemblers, in mock communities mimicking as closely as possible their samples of interest.</p>
  </sec>
  <sec id="sec2">
    <title>The LMAS Workflow</title>
    <sec id="sec2-1">
      <title>Workflow overview</title>
      <p>LMAS is a user-friendly automated workflow enabling the benchmarking of traditional and metagenomic prokaryotic <italic toggle="yes">de novo</italic> assembly software using defined mock communities (Fig. <xref rid="fig1" ref-type="fig">1</xref>). LMAS was implemented in Nextflow [<xref rid="bib12" ref-type="bibr">12</xref>] to provide flexibility and ensure the transparency and reproducibility of the results. LMAS relies on the use of Docker [<xref rid="bib13" ref-type="bibr">13</xref>] containers for each assembler, allowing versions to be tracked and changed easily.</p>
      <fig position="float" id="fig1">
        <label>Figure 1:</label>
        <caption>
          <p>The LMAS workflow. The input sequencing data are assembled in parallel, resources permitting, by the set of assemblers included in LMAS. The resulting contigs are processed and the global quality assessment is performed. After filtering for the user-defined minimum contig size, the remaining sequences are mapped against the provided reference and the resulting information is processed to evaluate assembly quality by replicon in the reference file. All results, as well as optional text information describing the samples, are grouped in the LMAS report.</p>
        </caption>
        <graphic xlink:href="giac122fig1" position="float"/>
      </fig>
    </sec>
    <sec id="sec2-2">
      <title>Installation and usage</title>
      <p>LMAS can be installed through Bioconda [<xref rid="bib14" ref-type="bibr">14</xref>] or GitHub [<xref rid="bib15" ref-type="bibr">15</xref>], with detailed instructions available in the documentation [<xref rid="bib16" ref-type="bibr">16</xref>]. LMAS requires as inputs the complete reference replicons (genomes, plasmids, or any other replicons present) and short-read paired-end raw data. All complete references (linear replicons) should be provided in a single file. These raw data can be obtained <italic toggle="yes">in silico</italic> by creating simulated reads from the reference replicons or sequencing mock communities of known composition. Optionally, information on the input samples in a markdown file can be provided to be presented in the report.</p>
      <p>A step-by-step execution tutorial is available at [<xref rid="bib17" ref-type="bibr">17</xref>]. Users can customize the workflow execution either by using command-line options or by modifying the simple plain-text configuration files. To make the execution of the workflow as simple as possible, a set of default parameters and directives is provided. A complete description of each parameter is available in <xref rid="sup8" ref-type="supplementary-material">Supplementary Material</xref> (see <xref rid="sup8" ref-type="supplementary-material">Supplementary Material</xref>, Workflow parameters), as well as in the documentation [<xref rid="bib18" ref-type="bibr">18</xref>]. The results are presented in an interactive HTML report, stored in the “<italic toggle="yes">report</italic>” folder in the directory of LMAS’s execution. The output files of all assemblers and quality assessment processing scripts in the workflow are stored in the “<italic toggle="yes">results</italic>” folder, in the same location.</p>
    </sec>
    <sec id="sec2-3">
      <title>Supported assemblers and selection criteria</title>
      <p>A collection of <italic toggle="yes">de novo</italic> assembly tools was compiled, including OLC and dBg assembly algorithms, the latter including both single <italic toggle="yes">k</italic>-mer and multiple <italic toggle="yes">k</italic>-mer value approaches, and hybrid assemblers implementing both algorithms, including both genomic and metagenomic assemblers (<xref rid="sup8" ref-type="supplementary-material">Supplementary Table S1</xref>). Of these, 11 assemblers were selected based on the date of last update (at least 2015) and are implemented in LMAS: ABySS [<xref rid="bib19" ref-type="bibr">19</xref>] (version 2.3.1), GATB Minia Pipeline [<xref rid="bib20" ref-type="bibr">20</xref>] (commit hash 9d56f42), IDBA-UD [<xref rid="bib21" ref-type="bibr">21</xref>] (version 1.1.3), MEGAHIT [<xref rid="bib22" ref-type="bibr">22</xref>] (version 1.2.9), MetaHipMer2 [<xref rid="bib23" ref-type="bibr">23</xref>] (version 2.0.0.65-gaad446d-dirty-AddGtest), metaSPAdes [<xref rid="bib24" ref-type="bibr">24</xref>] (version 3.15.3), minia [<xref rid="bib25" ref-type="bibr">25</xref>] (version 3.2.6), SKESA [<xref rid="bib26" ref-type="bibr">26</xref>] (version 2.5.0), SPAdes [<xref rid="bib27" ref-type="bibr">27</xref>] (version 3.15.3), Unicycler [<xref rid="bib28" ref-type="bibr">28</xref>] (version 0.4.9), and VelvetOptimiser [<xref rid="bib29" ref-type="bibr">29</xref>] (commit hash 092bdee) (Table <xref rid="tbl1" ref-type="table">1</xref>). The execution commands for each assembler are available as <xref rid="sup8" ref-type="supplementary-material">Supplementary Material</xref> (see <xref rid="sup8" ref-type="supplementary-material">Supplementary Material</xref>, Short-read de novo assemblers) and in the documentation [<xref rid="bib30" ref-type="bibr">30</xref>].</p>
      <table-wrap position="float" id="tbl1">
        <label>Table 1:</label>
        <caption>
          <p>Prokaryotic <italic toggle="yes">de novo</italic> assemblers integrated into LMAS</p>
        </caption>
        <table frame="hsides" rules="groups">
          <thead>
            <tr>
              <th rowspan="1" colspan="1">Assembler</th>
              <th align="center" rowspan="1" colspan="1">Type</th>
              <th align="center" rowspan="1" colspan="1">Algorithm</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">
                <bold>GATBMiniaPipeline</bold>
              </td>
              <td rowspan="1" colspan="1">Metagenomic</td>
              <td rowspan="1" colspan="1">Multiple <italic toggle="yes">k</italic>-mer de Bruijn graph</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <bold>IDBA-UD</bold>
              </td>
              <td rowspan="1" colspan="1">Metagenomic</td>
              <td rowspan="1" colspan="1">Multiple <italic toggle="yes">k</italic>-mer de Bruijn graph</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <bold>MEGAHIT</bold>
              </td>
              <td rowspan="1" colspan="1">Metagenomic</td>
              <td rowspan="1" colspan="1">Multiple <italic toggle="yes">k</italic>-mer de Bruijn graph</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <bold>MetaHipMer2</bold>
              </td>
              <td rowspan="1" colspan="1">Metagenomic</td>
              <td rowspan="1" colspan="1">Multiple <italic toggle="yes">k</italic>-mer de Bruijn graph</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <bold>metaSPAdes</bold>
              </td>
              <td rowspan="1" colspan="1">Metagenomic</td>
              <td rowspan="1" colspan="1">Multiple <italic toggle="yes">k</italic>-mer de Bruijn graph</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <bold>ABySS</bold>
              </td>
              <td rowspan="1" colspan="1">Genomic</td>
              <td rowspan="1" colspan="1">Single <italic toggle="yes">k</italic>-mer de Bruijn graph</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <bold>MINIA</bold>
              </td>
              <td rowspan="1" colspan="1">Genomic</td>
              <td rowspan="1" colspan="1">Single <italic toggle="yes">k</italic>-mer de Bruijn graph</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <bold>SKESA</bold>
              </td>
              <td rowspan="1" colspan="1">Genomic</td>
              <td rowspan="1" colspan="1">Multiple <italic toggle="yes">k</italic>-mer de Bruijn graph</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <bold>SPAdes</bold>
              </td>
              <td rowspan="1" colspan="1">Genomic</td>
              <td rowspan="1" colspan="1">Multiple <italic toggle="yes">k</italic>-mer de Bruijn graph</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <bold>Unicycler</bold>
              </td>
              <td rowspan="1" colspan="1">Genomic</td>
              <td rowspan="1" colspan="1">Multiple <italic toggle="yes">k</italic>-mer de Bruijn graph</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <bold>VelvetOptimizer</bold>
              </td>
              <td rowspan="1" colspan="1">Genomic</td>
              <td rowspan="1" colspan="1">Single <italic toggle="yes">k</italic>-mer de Bruijn graph</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      <p>New assemblers can be added with minimal changes to the pipeline so that LMAS can be expanded as novel algorithms are developed. A template is available to facilitate their integration, and a step-by-step guide is included in the documentation [<xref rid="bib31" ref-type="bibr">31</xref>]. The only 2 requirements for the addition of a new assembler are the execution command for the assembler for paired-end short-read data and a Nextflow-compatible container with the assembler and any dependencies.</p>
    </sec>
    <sec id="sec2-4">
      <title>Assembly quality metrics</title>
      <p>The success of an assembly is evaluated in 2 steps: globally (see Global metrics) and relative to each of the replicons present in the sample (see Per reference metrics). In both, the tabular presentation in the reports allows the comparison of exact values between assemblers, and the interactive plots allow a more intuitive overview and easy exploration of results. In addition to the assembly success metrics, computational resource statistics are registered for each assembler (see <xref rid="sup8" ref-type="supplementary-material">Supplementary Material</xref>, LMAS metrics, Computational performance metrics).</p>
      <sec id="sec2-4-1">
        <title>Global metrics</title>
        <p>The computation of the global metrics is performed through statistics inherent to the complete set of contigs assembled per sample, independent of the species/sample of origin. The metrics are presented, in tabular form, for the complete set of contigs and those filtered for a minimum length, and also graphically for the contigs filtered for a minimum length. The statistics include information on contig number, size, and ambiguous bases and the proportion of reads mapping to the created contigs. Two statistics are a consolidation of per reference metrics: misassemblies (i.e., contigs that do not reflect the structural organization in the reference replicons) and the overall size of gaps in all reference replicons not covered by any contig. A more detailed description of all global metrics is available in <xref rid="sup8" ref-type="supplementary-material">Supplementary Material</xref> (see <xref rid="sup8" ref-type="supplementary-material">Supplementary Material</xref>, LMAS metrics, Global metrics).</p>
      </sec>
      <sec id="sec2-4-2">
        <title>Per reference metrics</title>
        <p>For the computation of the reference-based metrics, only the filtered set (FS) contigs are considered, for each reference replicon in the sample. These contigs are the ones exceeding the user-defined minimum sequence length, filtered using BBTools (version 38.44). After this initial step, the contigs are mapped to the reference replicons with minimap2 [<xref rid="bib32" ref-type="bibr">32</xref>] (version 2.22). The metrics are computed through custom Python code (see <xref rid="sup8" ref-type="supplementary-material">Supplementary Material</xref>, Assembly filtering and mapping) for each replicon in the file provided as input. A detailed description of all reference-based metrics is available in <xref rid="sup8" ref-type="supplementary-material">Supplementary Material</xref> (see <xref rid="sup8" ref-type="supplementary-material">Supplementary Material</xref>, LMAS metrics, Per reference metrics).</p>
        <p>In addition to the statistics shared with the global metrics, LMAS also calculates the number of mismatches relative to each reference, the COMPASS [<xref rid="bib9" ref-type="bibr">9</xref>] metrics, and 2 new metrics we propose: LSA and Pls.</p>
        <p>LSA represents the fraction of the longest single alignment between a contig and the reference, relative to the reference length. The Pls, or Phred-like score, is a scoring function based on the identity of each aligned contig to the reference replicon. Similarly to the Phred quality score [<xref rid="bib33" ref-type="bibr">33</xref>], a measure of the quality of the identification of the bases by sequencing, the Pls measures the quality of the assembly of a contig. The formula of Pls is similar to the Phred score formula but uses as the error function the identity of the base in the contig to that of the reference replicon. The formula to obtain the Pls metric per contig is Equation <xref rid="equ1" ref-type="disp-formula">1</xref>.
<disp-formula id="equ1"><label>(1)</label><tex-math id="TM0001" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$$\begin{eqnarray*}
Phred\,\,(E) = \left\{ \begin{array}{@{}*{1}{c}@{}} {- \log (E) \times 10\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\, {\rm if}\,\, 0\,\, &lt; E \le 1}\\ 60\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\ {\rm if\,\, E = 0} \end{array}\right.
\end{eqnarray*}$$\end{document}</tex-math></disp-formula> where <inline-formula><tex-math id="TM0002" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$E\ = \ 1 - Identity$\end{document}</tex-math></inline-formula>.</p>
      </sec>
    </sec>
    <sec id="sec2-5">
      <title>The LMAS report</title>
      <p>The LMAS results are presented in an interactive HTML (Fig. <xref rid="fig2" ref-type="fig">2</xref>). The LMAS report is composed of 2 main panels: a top summary panel with information on input samples (provided by the user) and the resources used during LMAS’s execution and a bottom panel where selected global and reference-specific assembly metrics can be explored for each sample. LMAS constructs the HTML file after workflow completion, storing it in the “reports” folder. The report data can be easily shared between users and requires only a browser for visualization.</p>
      <fig position="float" id="fig2">
        <label>Figure 2:</label>
        <caption>
          <p>The LMAS report. All results, as well as optional text information describing the samples, are grouped in the LMAS report, an interactive and responsive HTML file, for exploration in any browser. Links for LMAS source code and documentation are available in the top-right corner of the report. (1) The summary panel of the LMAS report contains information on the input reference sequences and raw sequencing data samples (provided by the user) and the overall computational performance of the assemblers in LMAS. (2) The LMAS metric panel contains the explorable global and reference-specific performance metrics per input raw sequencing data sample. The tabular presentation allows direct comparison of exact values between assemblies, and the interactive plots allow for an intuitive overview and easy exploration of results. (3) If an assembler fails to produce an assembly or fails to assemble sequences that map to the reference replicon, it is marked in the table with a red warning sign. (4) The global or reference replicon-specific metrics can be accessed for each sample in the drop-down menu.</p>
        </caption>
        <graphic xlink:href="giac122fig2" position="float"/>
      </fig>
      <sec id="sec2-5-1">
        <title>Summary panel</title>
        <p>The top panel of the report contains information on the input samples and overall performance of the assemblers in LMAS, divided into 3 tabs: Overview, Performance, and About us. On the top-right corner of the report, direct links to LMAS’s source repository and documentation are provided.</p>
        <list list-type="bullet">
          <list-item>
            <p><italic toggle="yes">Overview</italic>: This tab contains information on the input data, including the name and number of reads of the raw sequencing data, as well as the name of the reference file. Additional information provided by the user about the community used as input is also presented here.</p>
          </list-item>
          <list-item>
            <p><italic toggle="yes">Performance</italic>: This tab contains a table with information on the version, the containers used, and computational performance metrics for each assembler in LMAS.</p>
          </list-item>
          <list-item>
            <p><italic toggle="yes">About us</italic>: This tab contains information on the LMAS GitHub repositories and the LMAS development team.</p>
          </list-item>
        </list>
      </sec>
      <sec id="sec2-5-2">
        <title>Metrics panel</title>
        <p>The bottom portion of the report contains the explorable global and reference-specific performance metrics per input raw sequencing data sample. Each sample has its own tab, and the global or reference replicon-specific metrics can be accessed in the drop-down menu.</p>
        <sec id="sec2-5-2-1">
          <title>Global metrics</title>
          <p>A table displays the global assembly metrics computed for the complete and FS contigs. If an assembler fails to produce an assembly, it is marked on the table with a red warning sign. The global metric plots are interactive, allow zooming in on particular areas, and provide extra information as hover text boxes. The plots can be saved as PNG in whatever view the user selects.</p>
        </sec>
        <sec id="sec2-5-2-2">
          <title>Per reference metrics</title>
          <p>Similarly to the global assembly metrics, a table displays the computed set of reference-restricted metrics for the FS contigs. If an assembler fails to produce sequences that align to the reference, these are marked in the table with a red warning sign. Information on the expected reference replicon length and the GC content is calculated from the input files and reported above the table. The per reference metric plots are also interactive, allowing the same type of operations as the global metric plots.</p>
        </sec>
      </sec>
    </sec>
    <sec id="sec2-6">
      <title>Comparison with other assembly evaluation software programs</title>
      <p>The assessment and evaluation of genome assemblies has been a relevant field ever since the emergence of the assembly process itself, and therefore many solutions have been proposed [<xref rid="bib3" ref-type="bibr">3</xref>, <xref rid="bib7" ref-type="bibr">7</xref>, <xref rid="bib9" ref-type="bibr">9–11</xref>, <xref rid="bib34" ref-type="bibr">34–36</xref>]. The Critical Assessment of Metagenome Interpretation (CAMI) proposed a set of recommendations and best practices for benchmarking in microbiome research [<xref rid="bib37" ref-type="bibr">37</xref>]. These recommendations include the reporting of computational performance, which may condition the choice of software by the users, such as runtime, disk space, and memory consumption, also reported by LMAS (see <xref rid="sup8" ref-type="supplementary-material">Supplementary Material</xref>, LMAS metrics). As also suggested by CAMI, LMAS tracks the exact program version and command-line calls through its implementation in Nextflow. Moreover, using containerized assemblers and being easily installable through Bioconda, LMAS facilitates deployment in diverse user machines. Unlike the CAMI tutorial, in which users are asked to download and install the necessary tools, in LMAS, everything is provided in a one-stop reproducible workflow that effortlessly handles all preprocessing, assembly, postprocessing, traceability, and report production steps, freeing users to focus on providing relevant samples for analysis and interpreting the results in view of the intended applications.</p>
      <p>Concerning software for assembly quality assessment currently available, the most widely adopted is QUAST [<xref rid="bib10" ref-type="bibr">10</xref>] or, when dealing with metagenomic data, its extension metaQUAST [<xref rid="bib11" ref-type="bibr">11</xref>], which was also adopted by the CAMI challenges [<xref rid="bib3" ref-type="bibr">3</xref>, <xref rid="bib5" ref-type="bibr">5</xref>] and suggested in the CAMI Tutorial [<xref rid="bib37" ref-type="bibr">37</xref>]. Although several features of these tools overlap with LMAS’s quality assessment components, these differ from LMAS in the sense that they are not a single-step workflow allowing a traceable and reproducible assembly of mock communities. Unlike QUAST and metaQUAST, whose purpose is to evaluate assemblies, the purpose of LMAS is to allow users to evaluate assembler performance for a given sample of interest. <xref rid="sup8" ref-type="supplementary-material">Supplementary Table S2</xref> shows the comparison of the output and computed assembly quality metrics generated by LMAS, QUAST, and metaQUAST.</p>
    </sec>
  </sec>
  <sec sec-type="discussion|results" id="sec3">
    <title>Results and Discussion</title>
    <p>To illustrate the use of LMAS and evaluate the performance of the chosen assemblers, we initially used the 8 bacterial genomes and 4 plasmids of the ZymoBIOMICS Microbial Community Standards as reference. As input, we used the raw sequence reads of mock communities with an even and logarithmic distribution of species, from real sequencing runs [<xref rid="bib38" ref-type="bibr">38</xref>] and simulated read datasets, with and without error, matching the distribution of species in each sample [<xref rid="bib39" ref-type="bibr">39</xref>]. Our dataset is composed of samples ENN (<italic toggle="yes">in silico</italic> generated evenly distributed without error), EMS (<italic toggle="yes">in silico</italic> generated evenly distributed with Illumina MiSeq error model), ERR2984773 (evenly distributed real Illumina MiSeq sample), LNN (<italic toggle="yes">in silico</italic> generated logarithmically distributed without error), LHS (<italic toggle="yes">in silico</italic> generated logarithmically distributed with Illumina HiSeq error model), and ERR2935805 (logarithmically distributed real Illumina HiSeq sample) (see <xref rid="sup8" ref-type="supplementary-material">Supplementary Table S3</xref>). Detailed information about the generation of the input samples is available as <xref rid="sup8" ref-type="supplementary-material">Supplementary Material</xref> (see <xref rid="sup8" ref-type="supplementary-material">Supplementary Materials</xref>, ZymoBIOMICS Microbial Community Standards, <xref rid="sup8" ref-type="supplementary-material">Supplementary Table S4</xref>). To evaluate the reproducibility of an assembler performance, the LMAS workflow was run 3 times for all samples using default parameters, and the resulting data were processed for each sample (see <xref rid="sup8" ref-type="supplementary-material">Supplementary Materials</xref>, Assessment of assembly success). <xref rid="sup8" ref-type="supplementary-material">Supplementary Tables S5 to S10</xref> present an overview of the average global performance per assembler for each sample in LMAS.</p>
    <p>To test assembler performance with an even more complex dataset, we used the 12 strain BMock community standard (accession SRX4901583, real Illumina HiSeq 2500 sample) [<xref rid="bib40" ref-type="bibr">40</xref>]. This sample includes a noneven distribution of species, with the most abundant replicon having 3,093× coverage (<italic toggle="yes">Muricauda</italic> sp. ES.050) and the lowest only 0.1× coverage (<italic toggle="yes">Micromonospora coxensis</italic>) (<xref rid="sup8" ref-type="supplementary-material">Supplementary Table S24</xref>). For the sake of a less resource-intense evaluation, we downsampled to have 20% of the reads available in the original sample and further processed only these. The main challenges of this dataset are possibly to assemble the genomes of the 3 <italic toggle="yes">Micromonospora</italic>spp. and the 2 <italic toggle="yes">Halomonas</italic>spp. strains, which have an Average Nucleotide Identity through BLAST (ANIb) &gt;0.84 and 0.98, respectively (<xref rid="sup8" ref-type="supplementary-material">Supplementary Table S25</xref>). The 2 Marinobacter spp. have an ANIb of 0.78.</p>
    <p>To represent more realistic samples of a human microbiome study, the Gut-Mix-RR and Gut-Mix-HiLo standards, including 20 species known to be present in the human gut, were used as reference (accessions SRR11487941 and SRR11487935, respectively, both real Illumina MiSeq samples) [<xref rid="bib41" ref-type="bibr">41</xref>]. For the Gut-Mix-RR, the abundance of each bacterial genome is relatively even (maximum of 66×, an average of 22.32×, and a minimum of 5.99×; <xref rid="sup8" ref-type="supplementary-material">Supplementary Table S28</xref>). The Gut-Mix-HiLo has an uneven abundance of species (maximum of 115×, an average of 20.45×, and a minimum of 0.34×; <xref rid="sup8" ref-type="supplementary-material">Supplementary Table S28</xref>). The genomes in these mock communities are fairly diverse (average ANIb = 0.67, <xref rid="sup8" ref-type="supplementary-material">Supplementary Table S29</xref>), with the 2 subspecies of <italic toggle="yes">Bifidobacterium longum</italic> (ANIb = 0.95) possibly being the most challenging. It is worth noting that only draft genomes are available for 8 of the strains, including one of the <italic toggle="yes">B. longum</italic> subspecies (<xref rid="sup8" ref-type="supplementary-material">Supplementary Table S28</xref>). The <italic toggle="yes">Roseburia hominis</italic> and <italic toggle="yes">Roseburia intestinalis</italic> are the closest related closed replicons (ANIb &gt;0.77) in this sample.</p>
    <sec id="sec3-1">
      <title>Some assemblers perform poorly</title>
      <p>Of the 12 <italic toggle="yes">de novo</italic> prokaryotic assemblers included in LMAS, 4 stand out as having an overall poor performance in the ZymoBIOMICS Microbial Community Standards dataset: ABySS, MetaHipmer2, minia, and VelvetOptimiser. Both ABySS and MetaHipmer2 performed inconsistently with differing resource requirements for the same sample in different runs, namely, runtime and memory allocation (see <xref rid="sup8" ref-type="supplementary-material">Supplementary Materials</xref>, Resource requirements differ greatly, <xref rid="sup8" ref-type="supplementary-material">Supplementary Fig. S2</xref>). Moreover, ABySS failed to produce an assembly for sample ERR2984773 for 1 of the runs (see <xref rid="sup8" ref-type="supplementary-material">Supplementary Table S7</xref>) and for sample LHS in any of the 3 runs in the time limit of 3 days (see <xref rid="sup8" ref-type="supplementary-material">Supplementary Table S9</xref>), and MetaHipmer2 failed to produce an assembly for samples LNN and LHS in all 3 runs (see <xref rid="sup8" ref-type="supplementary-material">Supplementary Tables S8–S9</xref>). VelvetOptimiser generated the highest number of inconsistent contigs across the 3 LMAS runs (Fig. <xref rid="fig3" ref-type="fig">3</xref>, <xref rid="sup8" ref-type="supplementary-material">Supplementary Table S11</xref>), with 1.69% of the total contigs created present in only 1 or 2 runs. Although not as extreme as VelvetOptimiser, ABySS (0.52%), minia (0.14%), GATBMiniaPipeline (0.32%), MetaHipMer2 (0.11%), and IDBA-UD (0.08%) also showed inconsistencies in contig size.</p>
      <fig position="float" id="fig3">
        <label>Figure 3:</label>
        <caption>
          <p>Assembly reproducibility. Inconsistent contigs produced per assembler over 3 LMAS runs. The distribution of contig sizes, in base pairs, consistently present in all 3 LMAS runs are indicated in the gray boxplots for each assembler. If an assembler produced a contig only present in 2 of the runs (as determined by its size), its size is indicated in teal. If a contig is present in a single run, it is represented in red.</p>
        </caption>
        <graphic xlink:href="giac122fig3" position="float"/>
      </fig>
      <p>Regarding the quality assessment of the assemblies produced (Fig. <xref rid="fig4" ref-type="fig">4</xref>, <xref rid="sup8" ref-type="supplementary-material">Supplementary Table S12</xref>), ABySS and minia are the only single <italic toggle="yes">k</italic>-mer dBg assemblers in the collection and were found to mostly underperform relative to their multiple <italic toggle="yes">k</italic>-mer dBg counterparts as reported previously [<xref rid="bib3" ref-type="bibr">3</xref>, <xref rid="bib37" ref-type="bibr">37</xref>, <xref rid="bib42" ref-type="bibr">42</xref>, <xref rid="bib43" ref-type="bibr">43</xref>], generally resulting in more fragmented assemblies, although there were significant differences in performance across samples. Among multiple <italic toggle="yes">k</italic>-mer assemblers, VelvetOptimiser frequently produced a very high number of contigs of very small size (over 99% of the contigs not surpassing the minimum length of 1,000 bp) and therefore a low N50 (an average of 29,768 bp versus a global average of 84,114 bp) (<xref rid="sup8" ref-type="supplementary-material">Supplementary Tables S5–S10</xref>). Additionally, ABySS and VelvetOptimizer produced contigs with a very large number of <italic toggle="yes">N</italic>s, with an average of 1,019 and 3,035 uncalled bases per assembly, respectively. MetaHipMer2, although having overall average metrics in the 2 evenly distributed mock samples (ENN and EMS, <xref rid="sup8" ref-type="supplementary-material">Supplementary Tables S5–S6</xref>) where it was able to run successfully, severely underperformed in the real samples (ERR2984773 and ERR2935805, <xref rid="sup8" ref-type="supplementary-material">Supplementary Tables S7 and S10</xref>). Generally, the performance scores of the assemblers decreased considerably for the real samples in comparison with the simulated ones, either with or without error, underscoring the importance of using mock samples instead of simulated reads to evaluate assembler performance. High utilization of the reads in the dataset is observed for most assemblers, with on average at least 90% of the reads mapping back to the assembly, except for ABySS, MetaHipMer2, and VelvetOptimiser, whose values are in the range of 46% to 79%. Despite an overall good performance, SPAdes produced the highest number of misassembled contigs in the logarithmically distributed sample, with an average of 98 and a maximum of 572 (sample ERR2935805, <xref rid="sup8" ref-type="supplementary-material">Supplementary Table S10</xref>), in comparison to the global average of 11 misassembled contigs for all assemblers across all samples. However, this behavior was not consistent across samples, with the evenly distributed sample showing similar misassembled contigs between SPAdes and other assemblers, similarly to the other mock samples tested (see below).</p>
      <fig position="float" id="fig4">
        <label>Figure 4:</label>
        <caption>
          <p>Assembler performance for the ZymoBIOMICS Microbial Community Standards dataset. For each sample in the dataset, the best score of each assembler in the 3 LMAS runs was selected. The results for each global assembly metric were normalized, with 1 representing the best result and 0 the worst. For the original assembly, the following metrics are presented: number of contigs produced (in blue), number of base pairs produced (in teal), the size of the largest contig assembled (in green), N50 (in yellow), percentage of mapped reads to the assembly (in orange), and uncalled bases (in red). For the filtered assembly, the additional metrics are presented: number of misassembled contigs (in purple) and number of misassembly events (in brown).</p>
        </caption>
        <graphic xlink:href="giac122fig4" position="float"/>
      </fig>
      <p>Due to their poor performance discussed above, the following assemblers have not been included in subsequent analyses: ABySS, MetaHipmer2, minia, and VelvetOptimiser.</p>
    </sec>
    <sec id="sec3-2">
      <title>Metagenomic dedicated assemblers do not outperform genomic assemblers</title>
      <p>After excluding the poorly performing assemblers, LMAS includes 3 genomic (SKESA, SPAdes, and Unicycler) and 4 labeled as metagenomic-specific (GATBMiniaPipeline, IDBA-UD, MEGAHIT, and metaSPAdes) <italic toggle="yes">de novo</italic> prokaryotic assemblers, all implementing multiple <italic toggle="yes">k</italic>-mer dBg algorithms. As observed in Fig. <xref rid="fig5" ref-type="fig">5</xref>, <xref rid="sup8" ref-type="supplementary-material">Supplementary Table S13</xref>, and <xref rid="sup8" ref-type="supplementary-material">Supplementary Fig. S3</xref>, there were very significant differences between the best- and the worst-performing assemblers of each type for the ZymoBIOMICS Microbial Community Standards dataset, with this difference being more pronounced for metagenomic assemblers. The best-performing assemblers of each type behaved frequently quite similarly, and the differences between them tended to be attenuated after filtering for contigs &lt;1 kbp. Still, for the linearly distributed samples (ENN, EMS, and ERR2984773), the overall worst performers tended to be metagenomic assemblers. In contrast, for the logarithmically distributed samples (LNN, LHS, and ERR2935805), the opposite was observed, with genomic assemblers tending to be the worst performing (Fig. <xref rid="fig5" ref-type="fig">5</xref>). For the logarithmically distributed samples, the number of base pairs recovered is significantly lower than expected from their composition for both genomic and metagenomic assemblers, particularly after filtering (<xref rid="sup8" ref-type="supplementary-material">Supplementary Table S13</xref>), as contigs representing the less abundant species are not recovered by either type of assemblers (see assembler performance is influenced by replicon abundance in the sample). For this dataset, the fact that an assembler is branded as genomic or metagenomic does not translate into better or worse performance in dealing with these complex samples, but rather characteristics of the individual assemblers themselves determine their performance.</p>
      <fig position="float" id="fig5">
        <label>Figure 5:</label>
        <caption>
          <p>Performance of genomic and metagenomic assemblers for the ZymoBIOMICS Microbial Community Standards dataset. For each sample in the dataset and for the 3 runs, the best and worst scores for each assembler category were selected: genomic (in blue) and metagenomic (in red). The results for each global assembly metric were normalized, with 1 representing the best result and 0 the worst. For the original assembly, the following metrics are presented: number of contigs produced, number of base pairs produced, the size of the largest contig assembled, N50, percentage of mapped reads to the assembly, and uncalled bases. For the filtered assembly, the additional metrics are presented: number of misassembled contigs and number of misassembly events.</p>
        </caption>
        <graphic xlink:href="giac122fig5" position="float"/>
      </fig>
      <p>In the BMock standard, similarly to the ZymoBIOMICS standard, no significant difference was observed between the genomic and metagenomic assemblers, particularly after filtering for contigs &lt;1 kbp (<xref rid="sup8" ref-type="supplementary-material">Supplementary Table S26</xref>). Both <italic toggle="yes">Marinobacter</italic> replicons (2,615,840,697 and 2,616,644,829; 448× and 135× coverage, respectively) were successfully recovered by all genomic and metagenomic assemblers with &gt;0.87 breadth of coverage (<xref rid="sup8" ref-type="supplementary-material">Supplementary Table S27</xref>). The 2 most abundant <italic toggle="yes">Micromonospora</italic> replicons (2,623,620,557 and 2,623,620,567; 15× and 18× coverage, respectively) were also recovered to a breadth of coverage &gt;0.95 by most assemblers, except the genomic assemblers SKESA and Unicycler (<xref rid="sup8" ref-type="supplementary-material">Supplementary Table S27</xref>). All assemblers, with the exception of SKESA and GATBMiniaPipeline, recovered both <italic toggle="yes">Halomonas</italic> replicons (2,623,620,617 and 2,623,620,618) with a breadth of coverage of &gt;0.84 (<xref rid="sup8" ref-type="supplementary-material">Supplementary Table S27</xref>). When considering this set of closely related replicons, metagenomic assemblers also did not perform consistently better than genomic assemblers in the number of misassembled contigs or SNPs relative to the reference genome. Among the metagenomic assemblers, GATBMiniaPipeline and IDBA-UD performed particularly well but with values close to those of the 2 best genomic assemblers (SPAdes and Unicycler). IDBA-UB performed significantly worse with the <italic toggle="yes">Micromonospora</italic> replicons, possibly because of their lower coverage. As could have been expected, the number of SNPs in the lower-coverage <italic toggle="yes">Halomonas</italic> replicon was consistently higher than in the one with higher coverage (1.6-fold to 85.0-fold depending on the assembler), despite their relatively modest (12.6%) difference in estimated coverage in the sample and very significant depth of coverage (&gt;500×) (<xref rid="sup8" ref-type="supplementary-material">Supplementary Tables S24 and S27</xref>). However, when comparing the number of SNPs in the <italic toggle="yes">Marinobacter</italic> replicons, this relationship is reversed, with the replicon with higher coverage (448×) having more SNPs relative to the reference than the one with lower coverage (135×) (<xref rid="sup8" ref-type="supplementary-material">Supplementary Table S27</xref>). This indicates that other factors, such as characteristics of the replicon, the actual representation in the sample, and the closeness to other replicons in the sample, may influence the performance of assemblers. It is also interesting to see that the contigs generated by themselves do not allow the distinction of closely related strains, since the number of SNPs relative to the reference genomes (if the assembler is able to cover &gt;0.79 of the genome) is in the ranges of 315 to 9,915 and 9,773 to 70,196 for the higher and lower depth of coverage <italic toggle="yes">Halomonas</italic> replicons, respectively.</p>
      <p>For the Gut-Mix-RR and Gut-HiLo-RR mock communities, the same pattern was observed as with the other mock communities, with the differences between the metagenomic and genomic assemblers being attenuated after filtering for contigs &lt;1 kbp (<xref rid="sup8" ref-type="supplementary-material">Supplementary Table S30 and S31</xref>). Particularly for the evenly distributed Gut-Mix-RR sample, when considering the subset of <italic toggle="yes">Roseburia</italic>spp., the replicon with the lowest coverage (12× for <italic toggle="yes">R. intestinalis</italic> versus 18× for <italic toggle="yes">R. hominis</italic>) had a consistently higher number of SNPs, with the exception of the SKESA assemblies, where the opposite was observed. This is similar to what was observed for the <italic toggle="yes">Halomonas</italic> replicons in the BMock12 community standard.</p>
    </sec>
    <sec id="sec3-3">
      <title>Success is not straightforward</title>
      <p>Several factors contribute to suboptimal performance of the assembly process, including DNA isolation and library preparation protocol; sequencing technology, depth, and read length; and possible contamination and inherent characteristics of the sample composition.</p>
      <sec id="sec3-3-1">
        <title>Assembler performance is influenced by species</title>
        <p>For the 8 bacterial genomes present in the ZymoBIOMICS Microbial Community Standards dataset samples, even in those with an even distribution of the genomes (ENN, EMS, and ERR2984773), variations in the assembly metrics were observed (Fig. <xref rid="fig6" ref-type="fig">6</xref>, <xref rid="sup8" ref-type="supplementary-material">Supplementary Figures S4–S6</xref>, <xref rid="sup8" ref-type="supplementary-material">Supplementary Tables S14–S16</xref>). For all samples in the dataset, the genomes are recovered almost completely, with all replicons being &gt;90% represented in the resulting assemblies. <italic toggle="yes">Lactobacillus fermentum</italic> is the least represented genome (92.2%–94.9%). Most replicon sequences are recovered in &lt;100 contigs, except for <italic toggle="yes">Pseudomonas aeruginosa, Escherichia coli</italic>, and <italic toggle="yes">Salmonella enterica</italic>, and not considering IDBA-UB, which frequently produces a larger number of contigs when compared to other assemblers. However, in other mock samples, this worse performance of IDBA-UD in terms of number of contigs is not so clear. The absolute values of other metrics of assembly quality, such as LSA, misassembly events, or uncalled bases, are also different between bacterial genomes (<xref rid="sup8" ref-type="supplementary-material">Supplementary Tables S14–S16</xref>). The fact that <italic toggle="yes">S. enterica</italic> is a closely related species to <italic toggle="yes">E. coli</italic>, with high level of genetic similarity (ANIb &gt;0.8, <xref rid="sup8" ref-type="supplementary-material">Supplementary Table S23</xref>), could have created difficulties for resolving the assemblies in a mixed sample and led to the lower coverage observed, the higher number of contigs, and the increased number of misassembled contigs identified in these species in some samples. However, in the case of the larger number of contigs of <italic toggle="yes">P. aeruginosa</italic>, no related species are present in the sample, and these possibly reflect intrinsic properties of the replicon such as a high number of prophages integrated in the bacterial genome [<xref rid="bib44" ref-type="bibr">44</xref>]. Similarly, replicon characteristics could be behind the lower breadth of coverage consistently observed in <italic toggle="yes">L. fermentum</italic> assemblies.</p>
        <fig position="float" id="fig6">
          <label>Figure 6:</label>
          <caption>
            <p>Genome fragmentation for each reference replicon of the ZimoBIOMICS community standards dataset for the evenly distributed samples. Genome fragmentation for the 3 LMAS runs is represented by the number of contigs and breadth of coverage of the reference per assembler for the evenly distributed samples: ENN (evenly distributed without error model, identified by a circle), EMS (evenly distributed with Illumina MiSeq error model, identified by a square), and ERR2984773 (real Illumina MiSeq sample, identified by a diamond). Each assembler is identified with the following color scheme—dark blue, Unicycler; light blue, SPAdes; dark green, SKESA; light green, metaSPAdes; yellow, MEGAHIT; orange, IDBA-UD; red, GATBMiniaPipeline.</p>
          </caption>
          <graphic xlink:href="giac122fig6" position="float"/>
        </fig>
        <p>In the BMock12 and the Gut-Mix samples, which have pairs of much more similar replicons, it is true that the closely related replicons do have higher numbers of contigs. However, it is possible that the properties of the individual replicons also have an impact on the number of contigs generated by the assemblers (<xref rid="sup8" ref-type="supplementary-material">Supplementary Fig. S8</xref>). Another potential confounder that was not explored is the length of the reads, with Miseq samples having 300-bp reads and HiSeq samples having 150-bp reads.</p>
        <sec id="sec3-3-1-1">
          <title>Longer contigs have higher confidence</title>
          <p>The Pls metric, which measures the error rate of a contig relative to the reference, shows that for every replicon, longer contigs have higher Pls (Fig. <xref rid="fig7" ref-type="fig">7</xref>). This could justify the option of filtering an assembly by length, even beyond the 1,000-bp minimum contig size implemented by default in LMAS. Not only are we eliminating shorter, less informative contigs in terms of genetic context, but these are also the ones most likely to contain errors relative to the reference sequence.</p>
          <fig position="float" id="fig7">
            <label>Figure 7:</label>
            <caption>
              <p>Phred-like score (Pls) per contig for each reference replicon of the ZimoBIOMICS community standards datasets. The Pls score was calculated for each unique contig produced by each assembler in 3 LMAS runs and is represented in relation to its contig size. Each contig is colored according to the assembler with the following color scheme—dark blue, Unicycler; light blue, SPAdes; dark green, SKESA; light green, metaSPAdes; yellow, MEGAHIT; orange, IDBA-UD; red, GATBMiniaPipeline.</p>
            </caption>
            <graphic xlink:href="giac122fig7" position="float"/>
          </fig>
        </sec>
        <sec id="sec3-3-1-2">
          <title>Certain genomic regions are problematic for all assemblers</title>
          <p>Some genomic regions in several replicons are consistently a challenge for all assemblers. As observed in Fig. <xref rid="fig8" ref-type="fig">8</xref>, all genomes of the ZymoBIOMICS Microbial Community Standards dataset present certain regions that fail to assemble for all tools in all runs, even those generating high-quality draft assemblies. Of all 7 assemblers considered, only GATBMiniaPipeline, MEGAHIT, and IDBA-UD showed inconsistency in the gaps produced over the 3 LMAS runs (<xref rid="sup8" ref-type="supplementary-material">Supplementary Table S17</xref>), as expected from producing variable sets of contigs. The regions consistently missing for all assemblers in all runs are rich in repetitive elements, such as ribsomal RNA and transfer RNA coding sequences and mobile genetic elements (<xref rid="sup8" ref-type="supplementary-material">Supplementary Table S18</xref>), with larger gaps corresponding to tandem sets of these elements. This reflects an intrinsic limitation of short-read sequencing since the length of a read pair is not enough to bridge across the repetitive element, preventing the generation of contigs representing these regions. This is something that could be addressed by the use of long-read sequencing technologies. Despite this, some assemblers are able to produce contigs that represent some of these large tandem regions, such as MEGAHIT and SKESA for <italic toggle="yes">E. faecalis</italic> and IDBA-UD, MEGAHIT, and metaSPADES for <italic toggle="yes">L. monocytogenes</italic>, but such performance is not consistent for all reference replicons. For instance, SKESA fails to assemble 2 large regions of the <italic toggle="yes">S. enterica</italic> genome that all other assemblers successfully cover.</p>
          <fig position="float" id="fig8">
            <label>Figure 8:</label>
            <caption>
              <p>Location of gaps in comparison to the reference sequence, per assembler, for each reference replicon of the ZimoBIOMICS community standards datasets. The resulting plot contains the consistent gaps obtained from a 3-LMAS run for the evenly distributed dataset (ENN, EMS, and ERR2984773) for GATBMiniaPipeline, IDBA-UD, MEGAHIT, metaSPAdes, SKESA, SPAdes, and Unicycler assemblers.</p>
            </caption>
            <graphic xlink:href="giac122fig8" position="float"/>
          </fig>
          <p>For the BMock12 community standard, the same pattern of consistency of difficult regions across replicons can be observed for all replicons, with the exception of the lowest abundance replicons (see <xref rid="sup8" ref-type="supplementary-material">Supplementary Fig. S9</xref>). Interestingly, the 2 closely related <italic toggle="yes">Halomonas</italic> replicons present a very dissimilar gap pattern, with a high number of gaps (<italic toggle="yes">n</italic> = 2,789 and <italic toggle="yes">n</italic> = 2,702) distributed throughout the replicon sequence, which possibly reflects the difficulty of assembling closely related replicons in the same sample.</p>
        </sec>
      </sec>
      <sec id="sec3-3-2">
        <title>Assembler performance is influenced by replicon abundance in the sample</title>
        <p>The logarithmically distributed samples (LNN, LHS, and ERR2935805) of the ZymoBIOMICS community standard dataset showed greater variation in the assembly success metrics than the evenly distributed samples (<xref rid="sup8" ref-type="supplementary-material">Supplementary Tables S8–S10</xref>), reflecting the difficulty of recovering sequences of the lowest abundant replicons. For the 3 replicons with an estimated depth of coverage &gt;15×, a similar pattern is observed in logarithmically distributed samples as in evenly distributed samples, albeit with greater dispersion in the number of contigs generated and with a markedly decreased breath of coverage for some assemblers and samples in the logarithmically distributed samples (Fig. <xref rid="fig6" ref-type="fig">6</xref> and <xref rid="sup8" ref-type="supplementary-material">Supplementary Fig. S7</xref>). Almost no contigs &gt;1,000 bp were retrieved for replicons with an estimated depth of coverage of &lt;2×, resulting in a very low breadth of coverage (&lt;1%) (<xref rid="sup8" ref-type="supplementary-material">Supplementary Table S4</xref>, <xref rid="sup8" ref-type="supplementary-material">Supplementary Table S22</xref>). This leads to a severe underrepresentation of the diversity of the community in the generated contigs, particularly of plasmid sequences due to their smaller length and abundance as was described previously [<xref rid="bib3" ref-type="bibr">3</xref>, <xref rid="bib45" ref-type="bibr">45</xref>, <xref rid="bib46" ref-type="bibr">46</xref>]. This happens despite the greater sequencing depth of these samples versus those with an even distribution (&gt;5-fold difference in the number of reads).</p>
        <p>For the BMock12 community standard, the very low replicon abundance (<italic toggle="yes">Micromonospora coxensis</italic>, 2,623,620,609, 0.02× coverage) fails to assemble in all tools (<xref rid="sup8" ref-type="supplementary-material">Supplementary Fig. S9</xref>, <xref rid="sup8" ref-type="supplementary-material">Supplementary Table S24</xref>). The <italic toggle="yes">Micromonospora echinaurantiaca</italic> (2,623,620,557, 14.9× coverage) and <italic toggle="yes">Micromonospora echinofusca</italic> (2,623,620,567, 18.2× coverage) fail to assemble with SKESA and Unicycler, and the <italic toggle="yes">Propionibacteriaceae</italic> replicon (2,615,840,646, 31.9× coverage) fails to be assembled with SKESA. In the Gut-Mix-RR standards, there are several replicons with &lt;1× to 20× depth of coverage. Significant breath of coverage (&gt;0.7) was obtained with the contigs created by most assemblers, including successful assemblies of some of the replicons by SKESA and Unicycler that had failed with higher-coverage replicons in the BMock12 standard. Taking together these data and that of the ZymoBIOMICS standard, these suggest that it is hard to establish a universal breakpoint at which each of the assemblers is able to generate high breadth of coverage contigs, with the actual genome of interest and the composition of the sample possibly playing a role. Nevertheless, coverages &gt;15× result in high breadth of coverage contigs, albeit in the lower range with many contigs and a significant number of SNPs.</p>
      </sec>
    </sec>
  </sec>
  <sec sec-type="conclusions" id="sec4">
    <title>Conclusions</title>
    <p>The purpose of LMAS is to empower users to test assembler performance in meaningful conditions for their experimental setup and objectives. Suitable mock communities, reproducing the users’ samples of interest, can be used as a gold standard to evaluate assembler performance. To illustrate LMAS’s functionalities, we analyzed 3 well-known samples used in several studies. Although the 8-species ZymoBIOMICS Microbial Community Standards might not be representative of the metagenomic complexity of the samples of interest of most researchers, we hoped that its relative simplicity meant that the results shown would represent a best-case scenario, since as sample complexity increases, so do the challenges to assembler performance. However, the results of the BMock12 and Gut-Mix community standards suggest that the actual genome of interest and community composition play an important part in the results of individual assemblers.</p>
    <p>Our results showed significant differences in both global and reference-dependent assembly quality metrics generated by each <italic toggle="yes">de novo</italic> assembler. The performance of each assembler varied depending on the species of interest and its abundance in the sample, with less abundant species presenting a significant challenge for all assemblers. The fact that an assembler is branded as specific for metagenomics does not guarantee a better performance in metagenomic samples, with assemblers used for genomic assembly outperforming the worst metagenomic assembler tested. Even when considering communities with very similar replicons, the overall performance of metagenomic assemblers was not consistently better than that of genomic assemblers. The results also indicate that the recovery of assemblies allowing strain-level discrimination at the SNP level is highly unlikely based solely on the assembler-generated contigs. The following assemblers showed significant performance problems, and their usability may be limited, at least with the default parameters we used: ABySS, MetaHipmer2, minia, and VelvetOptimiser.</p>
    <p>The choice of <italic toggle="yes">de novo</italic> assembler depends greatly on the computational resources available, the species of interest, its representation in the sample, and, possibly, the composition of the community in the sample. In our testing with any of the mock communities, no assembler stood out as an undisputed all-purpose choice for short-read metagenomic prokaryotic genome assembly, with different assemblers showing specific strengths. Users would thus benefit from analyzing the results of sequencing mock communities (ideally) or of artificially generated reads simulating their samples of interest to guide their choice of assembler. LMAS was developed to be an easy-to-use and flexible tool for this purpose. From the results that we obtained with various mock communities, the following assemblers performed consistently well (presented in alphabetical order): MEGAHIT, metaSPAdes, SKESA, SPAdes, and Unicycler. From our assessment, we conclude that these assemblers are the most likely candidates to perform well in other complex samples.</p>
    <p>LMAS was built with modularity and containerization as keystones, leveraging the parallelization of processes and guaranteeing reproducibility across platforms. The modular design allows for new assemblers to be easily added and existing assemblers to be easily updated, allowing LMAS to function as a continuous benchmarking platform and ensuring its future relevance as improvements in assembly software are proposed. LMAS will also support evaluating the gains of any cumulative improvements to existing assemblers using the same benchmark set adapted to a specific project or goal. Such reproducibility, capacity to easily add assemblers of interest not included in the current version, and flexibility for future extensions are important principles in computational method benchmarking. Moreover, in addition, by lowering the barriers to perform comparisons between assemblers, LMAS will encourage users to compare software performance against mock communities of special interest, depending on their operational focus.</p>
    <p>The interactive report provides an intuitive platform for data exploration, allowing the user to easily sift through global and reference-specific performance metrics for each sample, as well as providing information on the assemblers executed to allow traceability of the results. Producing an extensive, metric-rich report allows users interested in different aspects of assembler performance to make informed decisions, particularly when choosing among the top-performing assemblers, which show only minor differences.</p>
    <p>LMAS applies several well-known assembly metrics and proposes 2 more: LSA, which represents the fraction of the longest single alignment between a contig and the reference, and Pls, a scoring function based on the identity of each aligned contig to the reference replicon. The entire set of assembly quality metrics used in LMAS allows not only the assessment of quality based on statistics inherent to a set of assembled contigs but also a comparison to a ground truth provided using samples of known composition and reference sequences. The LMAS report provides an interactive and intuitive platform for the exploration of these results, allowing users to easily test assemblers in mock samples with species composition and distribution relevant for their own studies.</p>
    <p>Although computationally intensive due to the complex nature of the <italic toggle="yes">de novo</italic> assembly process, LMAS is the only software-integrating assembly and its evaluation into a single pipeline, guaranteeing the same conditions are met for all tools. With LMAS, it is now possible to continuously evaluate which <italic toggle="yes">de novo</italic> assembler produces the most relevant results for a given community of interest. The LMAS workflow is open source, and its code and documentation are available at <ext-link xlink:href="https://github.com/B-UMMI/LMAS" ext-link-type="uri">https://github.com/B-UMMI/LMAS</ext-link> and <ext-link xlink:href="https://lmas.readthedocs.io/" ext-link-type="uri">https://lmas.readthedocs.io/</ext-link>, respectively.</p>
  </sec>
  <sec id="sec5">
    <title>Availability of Supporting Source Code and Requirements</title>
    <p><bold>Project name:</bold> LMAS</p>
    <p>
      <bold>Project home page:</bold>
      <ext-link xlink:href="https://github.com/B-UMMI/LMAS" ext-link-type="uri">https://github.com/B-UMMI/LMAS</ext-link>
    </p>
    <p><bold>Operating system(s):</bold> UNIX-like systems.</p>
    <p><bold>Programming languages:</bold> Nextflow, Python, Bash, Javascript</p>
    <p><bold>Other requirements:</bold> Java version 8 or highest. Docker/Singularity/Shifter</p>
    <p><bold>License:</bold> GNU GPL v3</p>
    <p><bold>RRID:</bold> SCR_022251</p>
  </sec>
  <sec sec-type="supplementary-material" id="sec6">
    <title>Additional Files</title>
    <p><bold>Supplementary Fig. S1</bold>. LMAS misassembly classification. Misassembled contigs are classified into 6 main categories: chimera, insertion, deletion, inversion, rearrangement, translocation, and duplication, according to the mapping orientation, the distance between blocks in the contig, and the mapping coordinates in the reference replicon. If a contig is classified as being chimeric, no further classification is performed. The other categories are classified independently of each other, with combinations being possible, to better reflect the differences in comparison to the reference. If a contig is broken into multiple sequence blocks but fails to be classified in any of the previous categories, it is reported as being inconsistent.</p>
    <p><bold>Supplementary Fig. S2</bold>. Computational resources used by each assembler for the evenly and logarithmically distributed samples. Each plot describes the distribution of resource consumption for 3 LMAS runs for the ZymoBIOMICS Microbial Community Standards dataset for the following metrics: (A) CPU/hour, (B) maximum memory in GB, (C) data written to disk in GB, (D) data read from dist in GB, and (E) runtime in hours. The mean for all samples and all assemblers is indicated in red. The samples are indicated as follows: ENN: dark blue, EMS: teal, ERR2984773: green, LNN: light green, LHS: yellow, ERR2935805: light orange.</p>
    <p><bold>Supplementary Fig. S3</bold>. Performance per reference of genomic and metagenomic assemblers for the evenly distributed samples in the ZymoBIOMICS Microbial Community Standards dataset. For each sample in the dataset and for the 3 runs, the best and worst scores for each assembler category were selected: genomic (in blue) and metagenomic (in red). The results for each global assembly metric were normalized, with 1 representing the best result and 0 the worst.</p>
    <p><bold>Supplementary Fig. S4</bold>. Assembler performance per reference for the ZymoBIOMICS Microbial Community Standards dataset for sample ENN. The best score for each assembler was selected for 3 LMAS runs. The results for each global assembly metric were normalized, with 1 representing the best result and 0 the worst. The following assemblers are represented: GATBMiniaPipeline: dark blue, IDBA-UD: light blue, MEGAHIT: dark green, metaSPAdes: light green, SKESA: yellow, SPAdes: orange, Unicycler: red.</p>
    <p><bold>Supplementary Fig. S5</bold>. Assembler performance per reference for the ZymoBIOMICS Microbial Community Standards dataset for sample EMS. The best score for each assembler was selected for 3 LMAS runs. The results for each global assembly metric were normalized, with 1 representing the best result and 0 the worst. The following assemblers are represented: GATBMiniaPipeline: dark blue, IDBA-UD: light blue, MEGAHIT: dark green, metaSPAdes: light green, SKESA: yellow, SPAdes: orange, Unicycler: red.</p>
    <p><bold>Supplementary Fig. S6</bold>. Assembler performance per reference for the ZymoBIOMICS Microbial Community Standards dataset for sample ERR2984773. The best score for each assembler was selected for 3 LMAS runs. The results for each global assembly metric were normalized, with 1 representing the best result and 0 the worst. The following assemblers are represented: GATBMiniaPipeline: dark blue, IDBA-UD: light blue, MEGAHIT: dark green, metaSPAdes: light green, SKESA: yellow, SPAdes: orange, Unicycler: red.</p>
    <p><bold>Supplementary Fig. S7</bold>. Genome fragmentation for each reference replicon of the ZimoBIOMICS community standards dataset for the logarithmically distributed samples. Genome fragmentation for the 3 LMAS runs is represented by the number of contigs and breadth of coverage of the reference per assembler for the logarithmically distributed samples: LNN (logarithmically distributed without error model, identified by a circle), LHS (logarithmically distributed with Illumina HiSeq error model, identified by a square), and ERR2935805 (real Illumina HiSeq sample, identified by a diamond). Each assembler is identified with the following color scheme—dark blue: Unicycler, light blue: SPAdes, dark green: SKESA, light green: metaSPAdes, yellow: MEGAHIT, orange: IDBA-UD, red: GATBMiniaPipeline.</p>
    <p><bold>Supplementary Fig. S8</bold>. Genome fragmentation for each reference replicon of the BMock12 community standards dataset sample. Genome fragmentation is represented by the number of contigs and breadth of coverage of the reference per assembler. Each assembler is identified with the following color scheme—dark blue: Unicycler, light blue: SPAdes, dark green: SKESA, light green: metaSPAdes, yellow: MEGAHIT, orange: IDBA-UD, red: GATBMiniaPipeline. Each reference replicon is identified by its IMG Taxon ID: 2615840527, <italic toggle="yes">Muricauda</italic> sp.; 2615840533, <italic toggle="yes">Thioclava</italic> sp.; 2615840601, <italic toggle="yes">Cohaesibacter</italic> sp.; 2615840646,<italic toggle="yes">Propionibacteriaceae</italic> bacterium; 2615840697, <italic toggle="yes">Marinobacter</italic> sp. LV10R510-8; 2616644829, <italic toggle="yes">Marinobacter</italic>. sp LV10MA510-1; 2617270709, <italic toggle="yes">Psychrobacter</italic> sp.; 2623620557, <italic toggle="yes">Micromonospora echinaurantiaca</italic>; 2623620567, <italic toggle="yes">Micromonospora echinofusca</italic>; 2623620609, <italic toggle="yes">Micromonospora coxensis</italic>; 2623620617, <italic toggle="yes">Halomonas</italic> sp. HL-4; and 2623620618, <italic toggle="yes">Halomonas</italic> sp. HL-93.</p>
    <p><bold>Supplementary Fig. S9</bold>. Location of gaps in comparison to the reference sequence, per assembler, for each reference replicon of the BMock12 community standards datasets. The resulting plot contains the gaps obtained for GATBMiniaPipeline, IDBA-UD, MEGAHIT, metaSPAdes, SKESA, SPAdes, and Unicycler assemblers.</p>
    <p><bold>Supplementary Table S1</bold>. Tools available for the <italic toggle="yes">de novo</italic> assembly of prokaryotic genomes. For each tool, its publication is indicated, if available, as well as the assembly algorithm implemented if it was developed explicitly to handle metagenomic datasets. The tools are ordered by the date of the last update, with the source code indicated when available. The tools incorporated in LMAS are indicated as such.</p>
    <p><bold>Supplementary Table S2</bold>. Comparison of metrics and features of LMAS with QUAST and MetaQUAST.</p>
    <p><bold>Supplementary Table S3</bold>. The ZymoBIOMICS Microbial Community Standards datasets. Set of raw sequence reads used as input in LMAS of mock communities with an even and logarithmic distribution of species, from real sequencing runs and simulated read datasets, with and without error, matching the intended distribution of species in ZymoBIOMICS Microbial Community Standards.</p>
    <p><bold>Supplementary Table S4</bold>. Microbial composition of the ZymoBIOMICS Microbial Community Standards dataset with even and logarithmic distribution of species. Theoretical microbial composition of the standards and the corresponding number of reads generated for each replicon.</p>
    <p><bold>Supplementary Table S5</bold>. Global quality metrics variation in 3 LMAS runs for sample ENN per assembler. The average calculated for all samples in the dataset for the 3 independent LMAS runs, followed by the minimum and maximum values obtained, is presented for each metric for each assembler.</p>
    <p><bold>Supplementary Table S6</bold>. Global quality metrics variation in 3 LMAS runs for sample EMS per assembler. The average calculated for all samples in the dataset for the 3 independent LMAS runs, followed by the minimum and maximum values obtained, is presented for each metric for each assembler.</p>
    <p><bold>Supplementary Table S7</bold>. Global quality metrics variation in 3 LMAS runs for sample ERR2984773 per assembler. The average calculated for all samples in the dataset for the 3 independent LMAS runs, followed by the minimum and maximum values obtained, is presented for each metric for each assembler.</p>
    <p><bold>Supplementary Table S8</bold>. Global quality metrics variation in 3 LMAS runs for sample LNN per assembler. The average calculated for all samples in the dataset for the 3 independent LMAS runs, followed by the minimum and maximum values obtained, is presented for each metric for each assembler.</p>
    <p><bold>Supplementary Table S9</bold>. Global quality metrics variation in 3 LMAS runs for sample LHS per assembler. The average calculated for all samples in the dataset for the 3 independent LMAS runs, followed by the minimum and maximum values obtained, is presented for each metric for each assembler.</p>
    <p><bold>Supplementary Table S10</bold>. Global quality metrics variation in 3 LMAS runs for sample ERR2935805 per assembler. The average calculated for all samples in the dataset for the 3 independent LMAS runs, followed by the minimum and maximum values obtained, is presented for each metric for each assembler.</p>
    <p><bold>Supplementary Table S11</bold>. Inconsistent contigs produced by the assemblers in 3 LMAS runs. For each assembler, the total number of contigs produced over the 3 runs of the LMAS workflow is indicated, as well as the contigs present in only 2 runs and a single run.</p>
    <p><bold>Supplementary Table S12</bold>. Global assembly metrics for single and multiple <italic toggle="yes">k</italic>-mer dBg assemblers. The median and the minimum and maximum values obtained are presented for each metric for all samples in 3 runs of LMAS. Single <italic toggle="yes">k</italic>-mer bBg assemblers: ABySS and minia. Multiple <italic toggle="yes">k</italic>-mer bBg assembler: GATBMiniaPipeline, IDBA-UD, MEGAHIT, MetaHipMer2, metaSPAdes, SKESA, SPAdes, Unicycler, and VelverOptimiser.</p>
    <p><bold>Supplementary Table S13</bold>. Global assembly metrics for genomic and metagenomic multiple <italic toggle="yes">k</italic>-mer dBg assemblers. The median and the minimum and maximum values obtained are presented for each metric for all samples in 3 runs of LMAS. Genomic assemblers: SKESA, SPAdes, and Unicycler. Metagenomic assemblers: GATBMiniaPipeline, IDBA-UD, MEGAHIT, and metaSPAdes.</p>
    <p><bold>Supplementary Table S14</bold>. Per reference quality metrics variation in 3 LMAS runs for sample ENN per assembler of the ZymoBIOMICS Microbial Community Standards dataset. The average calculated for all samples in the dataset for the 3 independent LMAS runs, followed by the minimum and maximum values obtained, is presented for each metric for each assembler.</p>
    <p><bold>Supplementary Table S15</bold>. Per reference quality metrics variation in 3 LMAS runs for sample EMS per assembler of the ZymoBIOMICS Microbial Community Standards dataset. The average calculated for all samples in the dataset for the 3 independent LMAS runs, followed by the minimum and maximum values obtained, is presented for each metric for each assembler.</p>
    <p><bold>Supplementary Table S16</bold>. Per reference quality metrics variation in 3 LMAS runs for sample ERR2984773 per assembler of the ZymoBIOMICS Microbial Community Standards dataset. The average calculated for all samples in the dataset for the 3 independent LMAS runs, followed by the minimum and maximum values obtained, is presented for each metric for each assembler.</p>
    <p><bold>Supplementary Table S17</bold>. Inconsistent gaps produced by the assemblers in 3 LMAS runs. For each assembler, the total number of gaps consistently produced in relation to the reference replicons over the 3 runs of the LMAS workflow is indicated, as well as gaps present in only 2 runs and a single run.</p>
    <p><bold>Supplementary Table S18</bold>. Annotation of consistent gaps produced by the assemblers in 3 LMAS runs.</p>
    <p><bold>Supplementary Table S19</bold>. Number of transfer RNA and ribosomal RNA coding sequencing, as well as mobile elements in ZymoBIOMICS Microbial Community Standards reference replicons. The average calculated for all samples in the dataset for the 3 independent LMAS runs, followed by the minimum and maximum values obtained, is presented for each metric for each assembler.</p>
    <p><bold>Supplementary Table S20</bold>. Taxonomic classification of the ZymoBIOMICS Microbial Community Standards dataset. The classification was performed with Kraken2, using the Standard Database. The results are presented as the percentage of classified reads for the 8 bacterial species in the community, as well as unclassified reads and the group of reads that are classified as species not contained in the community standard.</p>
    <p><bold>Supplementary Table S21</bold>. Global assembly metrics for dBg assemblers with single and multiple <italic toggle="yes">k</italic>-mer algorithms.</p>
    <p><bold>Supplementary Table S22</bold>. Reference-based quality metrics in 3 LMAS runs for the ZimoBIOMICS community standards dataset.</p>
    <p><bold>Supplementary Table S23</bold>. Pairwise comparisons of the ZymoBIOMICS Microbial Community Standards reference replicons. All pairwise comparisons among the set of genomes were conducted using Average Nucleotide Identity through BLAST as a proxy for DNA–DNA hybridization.</p>
    <p><bold>Supplementary Table S24</bold>. Microbial composition of the BMock12 microbial community standard dataset.</p>
    <p><bold>Supplementary Table S25</bold>. Pairwise comparisons of the BMock12 microbial community standard reference replicons.</p>
    <p><bold>Supplementary Table S26</bold>. Global quality metrics for the BMock12 sample SRX4901583 per assembler.</p>
    <p><bold>Supplementary Table S27</bold>. Per reference quality metrics for the BMock12 sample SRX4901583 per assembler.</p>
    <p><bold>Supplementary Table S28</bold>. Microbial composition of the Gut-Mix-RR microbial community standard dataset.</p>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>giac122_GIGA-D-22-00108_Original_Submission</label>
      <media xlink:href="giac122_giga-d-22-00108_original_submission.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material id="sup2" position="float" content-type="local-data">
      <label>giac122_GIGA-D-22-00108_Revision_1</label>
      <media xlink:href="giac122_giga-d-22-00108_revision_1.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material id="sup3" position="float" content-type="local-data">
      <label>giac122_Response_to_Reviewer_Comments_Original_Submission</label>
      <media xlink:href="giac122_response_to_reviewer_comments_original_submission.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material id="sup4" position="float" content-type="local-data">
      <label>giac122_Reviewer_1_Report_Original_Submission</label>
      <caption>
        <p>Adrian Fritz -- 6/7/2022 Reviewed</p>
      </caption>
      <media xlink:href="giac122_reviewer_1_report_original_submission.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material id="sup5" position="float" content-type="local-data">
      <label>giac122_Reviewer_1_Report_Revision_1</label>
      <caption>
        <p>Adrian Fritz -- 10/6/2022 Reviewed</p>
      </caption>
      <media xlink:href="giac122_reviewer_1_report_revision_1.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material id="sup6" position="float" content-type="local-data">
      <label>giac122_Reviewer_2_Report_Original_Submission</label>
      <caption>
        <p>Rayan Chikhi -- 6/10/2022 Reviewed</p>
      </caption>
      <media xlink:href="giac122_reviewer_2_report_original_submission.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material id="sup7" position="float" content-type="local-data">
      <label>giac122_Reviewer_2_Report_Revision_1</label>
      <caption>
        <p>Rayan Chikhi -- 10/25/2022 Reviewed</p>
      </caption>
      <media xlink:href="giac122_reviewer_2_report_revision_1.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material id="sup8" position="float" content-type="local-data">
      <label>giac122_Supplemental_Files</label>
      <media xlink:href="giac122_supplemental_files.zip">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
  <sec id="sec7">
    <title>Abbreviations</title>
    <p>bp: base pair; cgMLST: core-genome multilocus sequence typing; dBg: de Bruijn graphs; FS: filtered set; GB: gigabytes; HPC: high-performance computing cluster; LMAS: Last Metagenomic Assembler Standing; LSA: longest single alignment; OLC: overlap-layout-consensus; Pls: Phred-like score; SNP: single-nucleotide polymorphism.</p>
  </sec>
  <sec sec-type="data-availability" id="sec10">
    <title>Data Availability</title>
    <p>The datasets analyzed during the current study are available in the Zenodo repository, under [<xref rid="bib48" ref-type="bibr">48</xref>]. All supplemental material is available in the Zenodo repository, under [<xref rid="bib49" ref-type="bibr">49</xref>]. Likewise, all figures in the current manuscript are available in their original format in the Zenodo repository, under [<xref rid="bib50" ref-type="bibr">50</xref>]. Real sequencing data of the ZymoBIOMICS Microbial Community Standards are available under accessions ERR2984773 and ERR2935805 [<xref rid="bib38" ref-type="bibr">38</xref>]. All data generated or analyzed during this study are included in this published article, its supplementary information files, and the data analysis repository located at [<xref rid="bib47" ref-type="bibr">47</xref>]. Additionally, the reports for the ZymoBIOMICS Microbial Community Standards, BMock12 Community Standard, and NIBSC Gut DNA Reference are available at [<xref rid="bib51" ref-type="bibr">51</xref>], [<xref rid="bib52" ref-type="bibr">52</xref>], and [<xref rid="bib53" ref-type="bibr">53</xref>], respectively.</p>
    <p>An archival copy of the GitHub repository (<ext-link xlink:href="https://github.com/B-UMMI/LMAS" ext-link-type="uri">https://github.com/B-UMMI/LMAS</ext-link>) is also available via the <italic toggle="yes">GigaScience</italic> database, GigaDB [<xref rid="bib54" ref-type="bibr">54</xref>].</p>
  </sec>
  <sec id="sec11">
    <title>Competing Interests</title>
    <p>M.R. received honoraria for serving on the speakers' bureau of Pfizer and Merck Sharp and Dohme and for participating in expert panels of GlaxoSmithKline and Merck Sharp and Dohme. The other authors declare that they have no competing interests.</p>
  </sec>
  <sec id="sec12">
    <title>Funding</title>
    <p>Catarina Inês Mendes was supported by the Fundação para a Ciência e Tecnologia (grant SFRH/BD/129483/2017).</p>
  </sec>
  <sec id="sec13">
    <title>Authors' Contributions</title>
    <p>C.I.M. and M.R. designed the workflow. C.I.M. implemented and optimized the workflow, created the Docker containers, generated mock shotgun metagenomics data used to test and validate the workflow, contributed to the development of the HTML report, and analyzed the data. C.I.M. and M.R. wrote the manuscript. P.V.C. contributed to the development of the HTML report. M.R., J.A.C., Y.M., and J.M.G critically revised the manuscript. All authors read, commented on, and approved the final manuscript.</p>
  </sec>
</body>
<back>
  <ack id="ack1">
    <title>ACKNOWLEDGEMENTS</title>
    <p>The authors thank Rafael Mamede for his contribution to the implementation and commentary on the several interactive plots implemented throughout the LMAS report. The authors also thank Nabil Fareed-Alikan for his insightful commentary on the interpretation of the results reported in this manuscript and Anthony Underwood and Robert A. Petit III for their assistance in building the LMAS Nextflow workflow. The authors also thank Samuel Nicholls, Joshua Quick, Shuiquan Tang, and Nicholas Loman for publicly providing the sequencing data for the ZymoBIOMICS Microbial Community Standards. Likewise, the authors thank Volkan Sevim, Juna Lee, Robert Egan, Alicia Clum, Hope Hundley, Janey Lee, R. Craig Everroad, Angela M. Detweiler, Brad M. Bebout, Jennifer Pett-Ridge, Markus Göker, Alison E. Murray, Stephen R. Lindemann, Hans-Peter Klenk, Ronan O'Malley, Matthew Zane, Jan-Fang Cheng, Alex Copeland, Christopher Daum, Esther Singer, and Tanja Woyke for providing the sequencing data for the BMock12 Commynity Standard, and to Gregory C. A. Amos, Alastair Logan, Saba Anwar, Martin Fritzsche, Ryan Mate, Thomas Bleazard, and Sjoerd Rijpkema for providing the sequencing data of the NIBSC Gut DNA Reference Gut-Mix-RR and Gut-Mix-HiLo Community Standard.</p>
  </ack>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="bib1">
      <label>1.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Angers-Loustau</surname><given-names>A</given-names></string-name>, <string-name><surname>Petrillo</surname><given-names>M</given-names></string-name>, <string-name><surname>Bengtsson-Palme</surname><given-names>J</given-names></string-name>, <etal>et al.</etal></person-group><article-title>The challenges of designing a benchmark strategy for bioinformatics pipelines in the identification of antimicrobial resistance determinants using next generation sequencing technologies</article-title>. <source>F1000Research</source>. <year>2018</year>;<volume>7</volume>:<fpage>459</fpage>.</mixed-citation>
    </ref>
    <ref id="bib2">
      <label>2.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gruening</surname><given-names>B</given-names></string-name>, <string-name><surname>Sallou</surname><given-names>O</given-names></string-name>, <string-name><surname>Moreno</surname><given-names>P</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Recommendations for the packaging and containerizing of bioinformatics software</article-title>. <source>F1000Research</source>. <year>2019</year>;<volume>7</volume>:<fpage>742</fpage>.</mixed-citation>
    </ref>
    <ref id="bib3">
      <label>3.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sczyrba</surname><given-names>A</given-names></string-name>, <string-name><surname>Hofmann</surname><given-names>P</given-names></string-name>, <string-name><surname>Belmann</surname><given-names>P</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Critical assessment of metagenome interpretation—a benchmark of metagenomics software</article-title>. <source>Nat Methods</source>. <year>2017</year>;<volume>14</volume>(<issue>11</issue>):<fpage>1063</fpage>–<lpage>71</lpage>.<pub-id pub-id-type="pmid">28967888</pub-id></mixed-citation>
    </ref>
    <ref id="bib4">
      <label>4.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Couto</surname><given-names>N</given-names></string-name>, <string-name><surname>Schuele</surname><given-names>L</given-names></string-name>, <string-name><surname>Raangs</surname><given-names>EC</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Critical steps in clinical shotgun metagenomics for the concomitant detection and typing of microbial pathogens</article-title>. <source>Sci Rep</source>. <year>2018</year>;<volume>8</volume>(<issue>1</issue>):<fpage>13767</fpage>.<pub-id pub-id-type="pmid">30213965</pub-id></mixed-citation>
    </ref>
    <ref id="bib5">
      <label>5.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Meyer</surname><given-names>F</given-names></string-name>, <string-name><surname>Fritz</surname><given-names>A</given-names></string-name>, <string-name><surname>Deng</surname><given-names>Z-L</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Critical assessment of metagenome interpretation—the second round of challenges</article-title>. <source>Bioinformatics</source>. <year>2021</year>;<volume>19</volume>:<fpage>429</fpage>–<lpage>40</lpage>.</mixed-citation>
    </ref>
    <ref id="bib6">
      <label>6.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ayling</surname><given-names>M</given-names></string-name>, <string-name><surname>Clark</surname><given-names>MD</given-names></string-name>, <string-name><surname>Leggett</surname><given-names>RM</given-names></string-name></person-group>. <article-title>New approaches for metagenome assembly with short reads</article-title>. <source>Briefings Bioinf</source>. <year>2020</year>;<volume>21</volume>(<issue>2</issue>):<fpage>584</fpage>–<lpage>94</lpage>.</mixed-citation>
    </ref>
    <ref id="bib7">
      <label>7.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Olson</surname><given-names>ND</given-names></string-name>, <string-name><surname>Treangen</surname><given-names>TJ</given-names></string-name>, <string-name><surname>Hill</surname><given-names>CM</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Metagenomic assembly through the lens of validation: recent advances in assessing and improving the quality of genomes assembled from metagenomes</article-title>. <source>Briefings Bioinf</source>. <year>2019</year>;<volume>20</volume>(<issue>4</issue>):<fpage>1140</fpage>–<lpage>50</lpage>.</mixed-citation>
    </ref>
    <ref id="bib8">
      <label>8.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Teeling</surname><given-names>H</given-names></string-name>, <string-name><surname>Glockner</surname><given-names>FO</given-names></string-name></person-group>. <article-title>Current opportunities and challenges in microbial metagenome analysis—a bioinformatic perspective</article-title>. <source>Briefings Bioinf</source>. <year>2012</year>;<volume>13</volume>(<issue>6</issue>):<fpage>728</fpage>–<lpage>42</lpage>.</mixed-citation>
    </ref>
    <ref id="bib9">
      <label>9.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bradnam</surname><given-names>KR</given-names></string-name>, <string-name><surname>Fass</surname><given-names>JN</given-names></string-name>, <string-name><surname>Alexandrov</surname><given-names>A</given-names></string-name><etal>et al.</etal></person-group><article-title>Assemblathon 2: evaluating de novo methods of genome assembly in three vertebrate species</article-title>. <source>GigaScience</source>. <year>2013</year>;<volume>2</volume>(<issue>1</issue>). <pub-id pub-id-type="doi">10.1186/2047-217X-2-10</pub-id></mixed-citation>
    </ref>
    <ref id="bib10">
      <label>10.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gurevich</surname><given-names>A</given-names></string-name>, <string-name><surname>Saveliev</surname><given-names>V</given-names></string-name>, <string-name><surname>Vyahhi</surname><given-names>N</given-names></string-name>, <etal>et al.</etal></person-group><article-title>QUAST: quality assessment tool for genome assemblies</article-title>. <source>Bioinformatics</source>. <year>2013</year>;<volume>29</volume>(<issue>8</issue>):<fpage>1072</fpage>–<lpage>5</lpage>.<pub-id pub-id-type="pmid">23422339</pub-id></mixed-citation>
    </ref>
    <ref id="bib11">
      <label>11.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Mikheenko</surname><given-names>A</given-names></string-name>, <string-name><surname>Saveliev</surname><given-names>V</given-names></string-name>, <string-name><surname>Gurevich</surname><given-names>A</given-names></string-name></person-group>. <article-title>MetaQUAST: evaluation of metagenome assemblies</article-title>. <source>Bioinformatics</source>. <year>2016</year>;<volume>32</volume>(<issue>7</issue>):<fpage>1088</fpage>–<lpage>90</lpage>.<pub-id pub-id-type="pmid">26614127</pub-id></mixed-citation>
    </ref>
    <ref id="bib12">
      <label>12.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Di Tommaso</surname><given-names>P</given-names></string-name>, <string-name><surname>Chatzou</surname><given-names>M</given-names></string-name>, <string-name><surname>Floden</surname><given-names>EW</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Nextflow enables reproducible computational workflows</article-title>. <source>Nat Biotechnol</source>. <year>2017</year>;<volume>35</volume>(<issue>4</issue>):<fpage>316</fpage>–<lpage>9</lpage>.<pub-id pub-id-type="pmid">28398311</pub-id></mixed-citation>
    </ref>
    <ref id="bib13">
      <label>13.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Merkel</surname><given-names>D</given-names></string-name></person-group>. <article-title>Docker: lightweight Linux containers for consistent development and deployment</article-title>. <source>Linux J</source>. <year>2014</year>;<volume>2014</volume>(<issue>(239)</issue>):</mixed-citation>
    </ref>
    <ref id="bib14">
      <label>14.</label>
      <mixed-citation publication-type="journal"><comment>Lmas: Anaconda.org. <ext-link xlink:href="https://anaconda.org/bioconda/lmas" ext-link-type="uri">https://anaconda.org/bioconda/lmas</ext-link>. Accessed 2022 Apr 6</comment>.</mixed-citation>
    </ref>
    <ref id="bib15">
      <label>15.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Mendes</surname><given-names>I</given-names></string-name>, <string-name><surname>Vila-Cerqueira</surname><given-names>P</given-names></string-name>, <string-name><surname>Ramirez</surname><given-names>M</given-names></string-name></person-group>. <comment>LMAS: Last (Meta)genomic Assembler Standing</comment>. <year>2021</year>. <comment><ext-link xlink:href="https://github.com/B-UMMI/LMAS" ext-link-type="uri">https://github.com/B-UMMI/LMAS</ext-link>. Accessed 2022 Apr 4</comment>.</mixed-citation>
    </ref>
    <ref id="bib16">
      <label>16.</label>
      <mixed-citation publication-type="journal"><comment>LMAS's—LMAS 0.1 documentation. <ext-link xlink:href="https://lmas.readthedocs.io/en/latest/index.html" ext-link-type="uri">https://lmas.readthedocs.io/en/latest/index.html</ext-link>. Accessed 2022 Apr 4</comment>.</mixed-citation>
    </ref>
    <ref id="bib17">
      <label>17.</label>
      <mixed-citation publication-type="journal"><comment>Basic Usage—LMAS 0.1 documentation. <ext-link xlink:href="https://lmas.readthedocs.io/en/latest/user/basic_usage.html" ext-link-type="uri">https://lmas.readthedocs.io/en/latest/user/basic_usage.html</ext-link>. Accessed 2022 Apr 4</comment>.</mixed-citation>
    </ref>
    <ref id="bib18">
      <label>18.</label>
      <mixed-citation publication-type="journal"><comment>Parameters—LMAS 0.1 documentation. <ext-link xlink:href="https://lmas.readthedocs.io/en/latest/user/parameters.html" ext-link-type="uri">https://lmas.readthedocs.io/en/latest/user/parameters.html</ext-link>. Accessed 2022 Apr 4</comment>.</mixed-citation>
    </ref>
    <ref id="bib19">
      <label>19.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Jackman</surname><given-names>SD</given-names></string-name>, <string-name><surname>Vandervalk</surname><given-names>BP</given-names></string-name>, <string-name><surname>Mohamadi</surname><given-names>H</given-names></string-name>, <etal>et al.</etal></person-group><article-title>ABySS 2.0: resource-efficient assembly of large genomes using a Bloom filter</article-title>. <source>Genome Res</source>. <year>2017</year>;<volume>27</volume>(<issue>5</issue>):<fpage>768</fpage>–<lpage>77</lpage>.<pub-id pub-id-type="pmid">28232478</pub-id></mixed-citation>
    </ref>
    <ref id="bib20">
      <label>20.</label>
      <mixed-citation publication-type="journal"><comment>GATB/gatb-minia-pipeline</comment>. <year>2022</year>. <comment><ext-link xlink:href="https://github.com/GATB/gatb-minia-pipeline" ext-link-type="uri">https://github.com/GATB/gatb-minia-pipeline</ext-link>. Accessed 2022 Apr 4</comment>.</mixed-citation>
    </ref>
    <ref id="bib21">
      <label>21.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Peng</surname><given-names>Y</given-names></string-name>, <string-name><surname>Leung</surname><given-names>HCM</given-names></string-name>, <string-name><surname>Yiu</surname><given-names>SM</given-names></string-name>, <etal>et al.</etal></person-group><article-title>IDBA-UD: a de novo assembler for single-cell and metagenomic sequencing data with highly uneven depth</article-title>. <source>Bioinformatics</source>. <year>2012</year>;<volume>28</volume>(<issue>11</issue>):<fpage>1420</fpage>–<lpage>8</lpage>.<pub-id pub-id-type="pmid">22495754</pub-id></mixed-citation>
    </ref>
    <ref id="bib22">
      <label>22.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Li</surname><given-names>D</given-names></string-name>, <string-name><surname>Liu</surname><given-names>C-M</given-names></string-name>, <string-name><surname>Luo</surname><given-names>R</given-names></string-name>, <etal>et al.</etal></person-group><article-title>MEGAHIT: an ultra-fast single-node solution for large and complex metagenomics assembly via succinct de Bruijn graph</article-title>. <source>Bioinformatics</source>. <year>2015</year>;<volume>31</volume>:<issue>(10)</issue>:<fpage>1674</fpage>–<lpage>1676</lpage>.<pub-id pub-id-type="pmid">25609793</pub-id></mixed-citation>
    </ref>
    <ref id="bib23">
      <label>23.</label>
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Georganas</surname><given-names>E</given-names></string-name>, <string-name><surname>Egan</surname><given-names>R</given-names></string-name>, <string-name><surname>Hofmeyr</surname><given-names>S</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Extreme scale de novo metagenome assembly</article-title>. In: <source>SC18: International Conference for High Performance Computing, Networking, Storage and Analysis</source>. <publisher-loc>Dallas, TX</publisher-loc>: <publisher-name>IEEE</publisher-name>.</mixed-citation>
    </ref>
    <ref id="bib24">
      <label>24.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Nurk</surname><given-names>S</given-names></string-name>, <string-name><surname>Meleshko</surname><given-names>D</given-names></string-name>, <string-name><surname>Korobeynikov</surname><given-names>A</given-names></string-name>, <etal>et al.</etal></person-group><article-title>metaSPAdes: a new versatile metagenomic assembler</article-title>. <source>Genome Res</source>. <year>2017</year>;<volume>27</volume>(<issue>5</issue>):<fpage>824</fpage>–<lpage>34</lpage>.<pub-id pub-id-type="pmid">28298430</pub-id></mixed-citation>
    </ref>
    <ref id="bib25">
      <label>25.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chikhi</surname><given-names>R</given-names></string-name>, <string-name><surname>Rizk</surname><given-names>G</given-names></string-name></person-group>. <article-title>Space-efficient and exact de Bruijn graph representation based on a Bloom filter</article-title>. <source>Algorithms Mol Biol</source>. <year>2013</year>;<volume>8</volume>(<issue>1</issue>):<fpage>22</fpage>.<pub-id pub-id-type="pmid">24040893</pub-id></mixed-citation>
    </ref>
    <ref id="bib26">
      <label>26.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Souvorov</surname><given-names>A</given-names></string-name>, <string-name><surname>Agarwala</surname><given-names>R</given-names></string-name>, <string-name><surname>Lipman</surname><given-names>DJ</given-names></string-name></person-group>. <article-title>SKESA: strategic k-mer extension for scrupulous assemblies</article-title>. <source>Genome Biol</source>. <year>2018</year>;<volume>19</volume>(<issue>1</issue>):<fpage>153</fpage>.<pub-id pub-id-type="pmid">30286803</pub-id></mixed-citation>
    </ref>
    <ref id="bib27">
      <label>27.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bankevich</surname><given-names>A</given-names></string-name>, <string-name><surname>Nurk</surname><given-names>S</given-names></string-name>, <string-name><surname>Antipov</surname><given-names>D</given-names></string-name>, <etal>et al.</etal></person-group><article-title>SPAdes: a new genome assembly algorithm and its applications to single-cell sequencing</article-title>. <source>J Comput Biol</source>. <year>2012</year>;<volume>19</volume>(<issue>5</issue>):<fpage>455</fpage>–<lpage>77</lpage>.<pub-id pub-id-type="pmid">22506599</pub-id></mixed-citation>
    </ref>
    <ref id="bib28">
      <label>28.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wick</surname><given-names>RR</given-names></string-name>, <string-name><surname>Judd</surname><given-names>LM</given-names></string-name>, <string-name><surname>Gorrie</surname><given-names>CL</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Unicycler: resolving bacterial genome assemblies from short and long sequencing reads</article-title>. <source>PLoS Comput Biol</source>. <year>2017</year>;<volume>13</volume>(<issue>6</issue>):<fpage>e1005595</fpage>.<pub-id pub-id-type="pmid">28594827</pub-id></mixed-citation>
    </ref>
    <ref id="bib29">
      <label>29.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Seemann</surname><given-names>T</given-names></string-name></person-group>. <article-title>VelvetOptimiser: automate your Velvet assemblies</article-title>. <year>2021</year>. <comment><ext-link xlink:href="https://github.com/tseemann/VelvetOptimiser" ext-link-type="uri">https://github.com/tseemann/VelvetOptimiser</ext-link>. Accessed 2022 Apr 4</comment>.</mixed-citation>
    </ref>
    <ref id="bib30">
      <label>30.</label>
      <mixed-citation publication-type="journal">
        <comment>Short-Read (Meta)Genomic Assemblers—LMAS 0.1 documentation. <ext-link xlink:href="https://lmas.readthedocs.io/en/latest/user/assemblers.html" ext-link-type="uri">https://lmas.readthedocs.io/en/latest/user/assemblers.html</ext-link>. Accessed 2022 Apr 4.</comment>
      </mixed-citation>
    </ref>
    <ref id="bib31">
      <label>31.</label>
      <mixed-citation publication-type="journal"><comment>Add Assembler Process—LMAS 0.1 documentation. <ext-link xlink:href="https://lmas.readthedocs.io/en/latest/dev/add_process.html" ext-link-type="uri">https://lmas.readthedocs.io/en/latest/dev/add_process.html</ext-link>. Accessed 2022 Apr 4</comment>.</mixed-citation>
    </ref>
    <ref id="bib32">
      <label>32.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Li</surname><given-names>H</given-names></string-name></person-group>. <article-title>Minimap2: pairwise alignment for nucleotide sequences</article-title>. <source>Bioinformatics</source>. <year>2018</year>;<volume>34</volume>(<issue>18</issue>):<fpage>3094</fpage>–<lpage>100</lpage>.<pub-id pub-id-type="pmid">29750242</pub-id></mixed-citation>
    </ref>
    <ref id="bib33">
      <label>33.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ewing</surname><given-names>B</given-names></string-name>, <string-name><surname>Green</surname><given-names>P</given-names></string-name></person-group>. <article-title>Base-calling of automated sequencer traces using Phred. II. Error probabilities</article-title>. <source>Genome Res</source>. <year>1998</year>;<volume>8</volume>:<issue>(3)</issue>:<fpage>186</fpage>–<lpage>94</lpage>.<pub-id pub-id-type="pmid">9521922</pub-id></mixed-citation>
    </ref>
    <ref id="bib34">
      <label>34.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Manchanda</surname><given-names>N</given-names></string-name>, <string-name><surname>Portwood</surname><given-names>JL</given-names></string-name>, <string-name><surname>Woodhouse</surname><given-names>MR</given-names></string-name>, <etal>et al.</etal></person-group><article-title>GenomeQC: a quality assessment tool for genome assemblies and gene structure annotations</article-title>. <source>BMC Genomics</source>. <year>2020</year>;<volume>21</volume>(<issue>1</issue>):<fpage>193</fpage>.<pub-id pub-id-type="pmid">32122303</pub-id></mixed-citation>
    </ref>
    <ref id="bib35">
      <label>35.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Meader</surname><given-names>S</given-names></string-name>, <string-name><surname>Hillier</surname><given-names>LW</given-names></string-name>, <string-name><surname>Locke</surname><given-names>D</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Genome assembly quality: assessment and improvement using the neutral indel model</article-title>. <source>Genome Res</source>. <year>2010</year>;<volume>20</volume>(<issue>5</issue>):<fpage>675</fpage>–<lpage>84</lpage>.<pub-id pub-id-type="pmid">20305016</pub-id></mixed-citation>
    </ref>
    <ref id="bib36">
      <label>36.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Challis</surname><given-names>R</given-names></string-name>, <string-name><surname>Richards</surname><given-names>E</given-names></string-name>, <string-name><surname>Rajan</surname><given-names>J</given-names></string-name>, <etal>et al.</etal></person-group><article-title>BlobToolKit—interactive quality assessment of genome assemblies</article-title>. <source>G3 (Bethesda)</source>. <year>2020</year>;<volume>10</volume>(<issue>4</issue>):<fpage>1361</fpage>–<lpage>74</lpage>.<pub-id pub-id-type="pmid">32071071</pub-id></mixed-citation>
    </ref>
    <ref id="bib37">
      <label>37.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Meyer</surname><given-names>F</given-names></string-name>, <string-name><surname>Lesker</surname><given-names>T-R</given-names></string-name>, <string-name><surname>Koslicki</surname><given-names>D</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Tutorial: assessing metagenomics software with the CAMI benchmarking toolkit</article-title>. <source>Nat Protoc</source>. <year>2021</year>;<volume>16</volume>(<issue>4</issue>):<fpage>1785</fpage>–<lpage>801</lpage>.<pub-id pub-id-type="pmid">33649565</pub-id></mixed-citation>
    </ref>
    <ref id="bib38">
      <label>38.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Nicholls</surname><given-names>SM</given-names></string-name>, <string-name><surname>Quick</surname><given-names>JC</given-names></string-name>, <string-name><surname>Tang</surname><given-names>S</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Ultra-deep, long-read Nanopore sequencing of mock microbial community standards</article-title>. <source>GigaScience</source>. <year>2019</year>;<volume>8</volume>(<issue>5</issue>):<fpage>giz043</fpage>.<pub-id pub-id-type="pmid">31089679</pub-id></mixed-citation>
    </ref>
    <ref id="bib39">
      <label>39.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gourlé</surname><given-names>H</given-names></string-name>, <string-name><surname>Karlsson-Lindsjö</surname><given-names>O</given-names></string-name>, <string-name><surname>Hayer</surname><given-names>J</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Simulating Illumina metagenomic data with InSilicoSeq</article-title>. <source>Bioinformatics</source>. <year>2019</year>;<volume>35</volume>(<issue>3</issue>):<fpage>521</fpage>–<lpage>2</lpage>.<pub-id pub-id-type="pmid">30016412</pub-id></mixed-citation>
    </ref>
    <ref id="bib40">
      <label>40.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sevim</surname><given-names>V</given-names></string-name>, <string-name><surname>Lee</surname><given-names>J</given-names></string-name>, <string-name><surname>Egan</surname><given-names>R</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Shotgun metagenome data of a defined mock community using Oxford Nanopore, PacBio and Illumina technologies</article-title>. <source>Scientific Data</source>. <year>2019</year>;<volume>6</volume>(<issue>1</issue>):<fpage>285</fpage>.<pub-id pub-id-type="pmid">31772173</pub-id></mixed-citation>
    </ref>
    <ref id="bib41">
      <label>41.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Amos</surname><given-names>GCA</given-names></string-name>, <string-name><surname>Logan</surname><given-names>A</given-names></string-name>, <string-name><surname>Anwar</surname><given-names>S</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Developing standards for the microbiome field</article-title>. <source>Microbiome</source>. <year>2020</year>;<volume>8</volume>(<issue>1</issue>):<fpage>98</fpage>.<pub-id pub-id-type="pmid">32591016</pub-id></mixed-citation>
    </ref>
    <ref id="bib42">
      <label>42.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Xavier</surname><given-names>BB</given-names></string-name>, <string-name><surname>Sabirova</surname><given-names>J</given-names></string-name>, <string-name><surname>Pieter</surname><given-names>M</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Employing whole genome mapping for optimal de novo assembly of bacterial genomes</article-title>. <source>BMC Res Notes</source>. <year>2014</year>;<volume>7</volume>(<issue>1</issue>):<fpage>484</fpage>.<pub-id pub-id-type="pmid">25077983</pub-id></mixed-citation>
    </ref>
    <ref id="bib43">
      <label>43.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Mahadik</surname><given-names>K</given-names></string-name>, <string-name><surname>Wright</surname><given-names>C</given-names></string-name>, <string-name><surname>Kulkarni</surname><given-names>M</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Scalable genome assembly through parallel de Bruijn graph construction for multiple k-mers</article-title>. <source>Sci Rep</source>. <year>2019</year>;<volume>9</volume>(<issue>1</issue>):<fpage>14882</fpage>.<pub-id pub-id-type="pmid">31619717</pub-id></mixed-citation>
    </ref>
    <ref id="bib44">
      <label>44.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Johnson</surname><given-names>G</given-names></string-name>, <string-name><surname>Stark</surname><given-names>N</given-names></string-name>, <string-name><surname>Wolfe</surname><given-names>AJ</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Complete genome sequence of a Pseudomonas aeruginosa isolate from a kidney stone</article-title>. <source>Microbiol Resour Announc</source>. <year>2019</year>;<volume>8</volume>(<issue>38</issue>):<fpage>e01073</fpage>–<lpage>19</lpage>.<pub-id pub-id-type="pmid">31537684</pub-id></mixed-citation>
    </ref>
    <ref id="bib45">
      <label>45.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Meyer</surname><given-names>F</given-names></string-name>, <string-name><surname>Fritz</surname><given-names>A</given-names></string-name>, <string-name><surname>Deng</surname><given-names>Z-L</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Critical assessment of metagenome interpretation: the second round of challenges</article-title>. <source>Nat Methods</source>. <year>2022</year>;<volume>19</volume>(<issue>4</issue>):<fpage>429</fpage>–<lpage>40</lpage>.<pub-id pub-id-type="pmid">35396482</pub-id></mixed-citation>
    </ref>
    <ref id="bib46">
      <label>46.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Fritz</surname><given-names>A</given-names></string-name>, <string-name><surname>Hofmann</surname><given-names>P</given-names></string-name>, <string-name><surname>Majda</surname><given-names>S</given-names></string-name>, <etal>et al.</etal></person-group><article-title>CAMISIM: simulating metagenomes and microbial communities</article-title>. <source>Microbiome</source>. <year>2019</year>;<volume>7</volume>(<issue>1</issue>):<fpage>17</fpage>.<pub-id pub-id-type="pmid">30736849</pub-id></mixed-citation>
    </ref>
    <ref id="bib47">
      <label>47.</label>
      <mixed-citation publication-type="journal"><comment>LMAS Manuscript Analysis</comment>. <year>2022</year>. <comment><ext-link xlink:href="https://github.com/B-UMMI/LMAS_Manuscript_Analysis" ext-link-type="uri">https://github.com/B-UMMI/LMAS_Manuscript_Analysis</ext-link>. Accessed 2022 Apr 4</comment>.</mixed-citation>
    </ref>
    <ref id="bib48">
      <label>48.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Mendes</surname><given-names>CI.</given-names></string-name></person-group><year>2021</year>; <article-title>LMAS Test Dataset</article-title>. <source>Zenodo Repository</source>. <comment>[Accessed April 4 2022]</comment><pub-id pub-id-type="doi">10.5281/zenodo.4588969</pub-id></mixed-citation>
    </ref>
    <ref id="bib49">
      <label>49.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Mendes</surname><given-names>CI</given-names></string-name></person-group>. <year>2022</year>; <article-title>LMAS Supplemental Material [Data set]</article-title>. <source>Zenodo</source>. <pub-id pub-id-type="doi">10.5281/zenodo.7129554</pub-id></mixed-citation>
    </ref>
    <ref id="bib50">
      <label>50.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Mendes</surname><given-names>CI.</given-names></string-name></person-group><year>2022</year>; <article-title>LMAS Figures [Data set]</article-title>. <source>Zenodo</source>. <pub-id pub-id-type="doi">10.5281/zenodo.7007317</pub-id></mixed-citation>
    </ref>
    <ref id="bib51">
      <label>51.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><collab>LMAS Test Dataset</collab></person-group>. <article-title>ZymoBIOMICS Microbial Community Standards</article-title>. <source>Zenodo repository</source>. <pub-id pub-id-type="doi">10.5281/zenodo.7088960</pub-id></mixed-citation>
    </ref>
    <ref id="bib52">
      <label>52.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><collab>LMAS Test Dataset</collab></person-group>. <article-title>BMock12 Community Standards</article-title>. <source>Zenodo repository</source>. <pub-id pub-id-type="doi">10.5281/zenodo.7092431</pub-id></mixed-citation>
    </ref>
    <ref id="bib53">
      <label>53.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><collab>LMAS Test Dataset</collab></person-group>. <article-title>NIBSC Gut DNA Reference</article-title>. <source>Zenodo repository</source>. <pub-id pub-id-type="doi">10.5281/zenodo.7092693</pub-id></mixed-citation>
    </ref>
    <ref id="bib54">
      <label>54.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Mendes</surname><given-names>CI</given-names></string-name>, <string-name><surname>Vila-Cerqueira</surname><given-names>P</given-names></string-name>, <string-name><surname>Motro</surname><given-names>Y</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Supporting data for “LMAS: Evaluating metagenomic short de novo assembly methods through defined communities”</article-title>. <source>GigaScience Database</source>. <year>2022</year>. <pub-id pub-id-type="doi">10.5524/102335</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

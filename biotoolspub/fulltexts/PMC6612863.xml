<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6612863</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btz326</article-id>
    <article-id pub-id-type="publisher-id">btz326</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Ismb/Eccb 2019 Conference Proceedings</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Systems Biology and Networks</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Robust network inference using response logic</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Gross</surname>
          <given-names>Torsten</given-names>
        </name>
        <xref ref-type="aff" rid="btz326-aff1">1</xref>
        <xref ref-type="aff" rid="btz326-aff2">2</xref>
        <xref ref-type="aff" rid="btz326-aff3">3</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Wongchenko</surname>
          <given-names>Matthew J</given-names>
        </name>
        <xref ref-type="aff" rid="btz326-aff4">4</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Yan</surname>
          <given-names>Yibing</given-names>
        </name>
        <xref ref-type="aff" rid="btz326-aff4">4</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Blüthgen</surname>
          <given-names>Nils</given-names>
        </name>
        <xref ref-type="aff" rid="btz326-aff1">1</xref>
        <xref ref-type="aff" rid="btz326-aff2">2</xref>
        <xref ref-type="aff" rid="btz326-aff3">3</xref>
        <xref ref-type="corresp" rid="btz326-cor1"/>
        <!--<email>nils.bluethgen@charite.de</email>-->
      </contrib>
    </contrib-group>
    <aff id="btz326-aff1"><label>1</label>Institut für Pathologie, Charité—Universitätsmedizin, Berlin</aff>
    <aff id="btz326-aff2"><label>2</label>IRI Life Sciences, Humboldt Universität zu Berlin, Berlin</aff>
    <aff id="btz326-aff3"><label>3</label>Berlin Institute of Health, Berlin, Germany</aff>
    <aff id="btz326-aff4"><label>4</label>Oncology Biomarker Development, Genentech Inc., South San Francisco, CA, USA</aff>
    <author-notes>
      <corresp id="btz326-cor1">To whom correspondence should be addressed. <email>nils.bluethgen@charite.de</email></corresp>
    </author-notes>
    <pub-date pub-type="ppub">
      <month>7</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2019-07-05">
      <day>05</day>
      <month>7</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>05</day>
      <month>7</month>
      <year>2019</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. -->
    <volume>35</volume>
    <issue>14</issue>
    <fpage>i634</fpage>
    <lpage>i642</lpage>
    <permissions>
      <copyright-statement>© The Author(s) 2019. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2019</copyright-year>
      <license license-type="cc-by-nc" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">http://creativecommons.org/licenses/by-nc/4.0/</ext-link>), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.com</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btz326.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>A major challenge in molecular and cellular biology is to map out the regulatory networks of cells. As regulatory interactions can typically not be directly observed experimentally, various computational methods have been proposed to disentangling direct and indirect effects. Most of these rely on assumptions that are rarely met or cannot be adapted to a given context.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>We present a network inference method that is based on a simple response logic with minimal presumptions. It requires that we can experimentally observe whether or not some of the system’s components respond to perturbations of some other components, and then identifies the directed networks that most accurately account for the observed propagation of the signal. To cope with the intractable number of possible networks, we developed a logic programming approach that can infer networks of hundreds of nodes, while being robust to noisy, heterogeneous or missing data. This allows to directly integrate prior network knowledge and additional constraints such as sparsity. We systematically benchmark our method on KEGG pathways, and show that it outperforms existing approaches in DREAM3 and DREAM4 challenges. Applied to a novel perturbation dataset on PI3K and MAPK pathways in isogenic models of a colon cancer cell line, it generates plausible network hypotheses that explain distinct sensitivities toward various targeted inhibitors due to different PI3K mutants.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p>A Python/Answer Set Programming implementation can be accessed at <ext-link ext-link-type="uri" xlink:href="http://github.com/GrossTor/response-logic">github.com/GrossTor/response-logic</ext-link>. Data and analysis scripts are available at <ext-link ext-link-type="uri" xlink:href="http://github.com/GrossTor/response-logic-projects">github.com/GrossTor/response-logic-projects</ext-link>.</p>
      </sec>
      <sec id="s4">
        <title>Supplementary information</title>
        <p><xref ref-type="supplementary-material" rid="sup1">Supplementary data</xref> are available at <italic>Bioinformatics</italic> online.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">Berlin Institute of Health</named-content>
        </funding-source>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">German Research Foundation</named-content>
          <named-content content-type="funder-identifier">10.13039/501100001659</named-content>
        </funding-source>
        <award-id>GRK1772</award-id>
        <award-id>RTG2424</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="9"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Complex molecular networks control virtually all aspects of cellular physiology as they transduce signals and regulate the expression and activity of genes. Understanding those molecular networks requires an appropriate simplification of the stupefying complexity that we find in cells. A very successful and common abstraction in molecular cell biology is to define effective modules and map out their interactions (<xref rid="btz326-B22" ref-type="bibr">Ideker and Nussinov, 2017</xref>). But even though new experimental techniques can reveal and quantify countless cellular components in ever increasing level of detail, they typically cannot identify the relationships between them. This is why for more than two decades various methods were developed to infer gene regulatory networks, signalling pathways and genotype–phenotype maps (<xref rid="btz326-B12" ref-type="bibr">De Smet and Marchal, 2010</xref>). These methods vary widely in their notion of network (e.g. directed versus undirected, weighted versus unweighted links), their mathematical methodology (e.g. statistical measures versus model-based parameter fits) or their goals (e.g. interaction discovery versus network property characterization versus perturbation response prediction) (<xref rid="btz326-B4" ref-type="bibr">Basso <italic>et al.</italic>, 2005</xref>; <xref rid="btz326-B11" ref-type="bibr">de la Fuente <italic>et al.</italic>, 2004</xref>; <xref rid="btz326-B18" ref-type="bibr">Ghanbari <italic>et al.</italic>, 2015</xref>; <xref rid="btz326-B25" ref-type="bibr">Kholodenko <italic>et al.</italic>, 2002</xref>; <xref rid="btz326-B26" ref-type="bibr">Klamt <italic>et al.</italic>, 2006</xref>; <xref rid="btz326-B33" ref-type="bibr">Molinelli <italic>et al.</italic>, 2013</xref>; <xref rid="btz326-B34" ref-type="bibr">Natale <italic>et al.</italic>, 2017</xref>). Not surprisingly, different methods produce radically different results on same datasets (<xref rid="btz326-B31" ref-type="bibr">Marbach <italic>et al.</italic>, 2010</xref>; <xref rid="btz326-B32" ref-type="bibr">Meisig and Blüthgen, 2018</xref>). This makes for an intricate choice of method and guarantees a certain degree of arbitrariness in interpreting the inferred networks.</p>
    <p>One major goal of network inference for signalling and regulatory networks is to derive directed networks, that is, to infer information about causal relations within the studied system. This differs profoundly from the inference of undirected associations between node pairs, such as by correlation, as it requires to trace the flow of information through the network. A popular approach is to use time-series data, for which methods like convergent cross mapping (<xref rid="btz326-B8" ref-type="bibr">Čenys <italic>et al.</italic>, 1991</xref>; <xref rid="btz326-B40" ref-type="bibr">Sugihara <italic>et al.</italic>, 2012</xref>) or Granger causality (<xref rid="btz326-B19" ref-type="bibr">Granger, 1969</xref>) can distinguish correlation from causation, given sufficiently dense samples. But most often, experimental protocols or excessive expenditures preclude the observation of suitable temporal trajectories for many contexts in molecular biology. Thus, a complementary approach is to observe the system’s responses, for instance the steady-state response, to a set of localized perturbations (<xref rid="btz326-B7" ref-type="bibr">Bruggeman <italic>et al.</italic>, 2002</xref>; <xref rid="btz326-B37" ref-type="bibr">Sachs <italic>et al.</italic>, 2005</xref>; <xref rid="btz326-B43" ref-type="bibr">Wagner, 2001a</xref>). Depending on the specific system, these perturbations could, for example, be gene knockouts or kinase inhibitions. However, existing methods for such data rely on context-specific assumptions whose validity is hard or impossible to assess in practice, which makes it very difficult to interpret their results. Facing this challenge, we asked whether we could derive a more generally applicable scheme for the inference of directed networks—a method that is based on a principle which is accurate enough for most contexts while also sufficiently simple to allow for an intuitive understanding of how the network structure was resolved. Furthermore, we noticed that even though most network inference problems are embedded within very well-studied contexts, the vast majority of reverse-engineering methods predicts networks <italic>de novo</italic>. Therefore, we additionally aimed for a method that could readily incorporate prior knowledge about presence or absence of certain links or about other known network properties. This resulted in what we call the response logic approach.</p>
    <p>In the following, we describe the response logic approach in more detail and then benchmark it by (i) assessing the performance using synthetic data derived from KEGG pathways (<xref rid="btz326-B24" ref-type="bibr">Kanehisa <italic>et al.</italic>, 2017</xref>), and (ii) comparing its performance to competing methods using community-wide inference challenges (Dialogue for Reverse Engineering Assessments and Methods, DREAM) (<xref rid="btz326-B38" ref-type="bibr">Stolovitzky <italic>et al.</italic>, 2007</xref>). Finally, we use the approach to study RAS/MAPK/PI3K signalling in a colon cancer cell line, and predict differences in the signalling network topology due to different PI3K mutants, that manifests in differential sensitivity of a colon cancer cell to various targeted drugs.</p>
  </sec>
  <sec>
    <title>2 Materials and Methods</title>
    <p>We developed a method to infer directed network structures from perturbation data that we term response logic (see <xref ref-type="fig" rid="btz326-F1">Fig. 1</xref>). As an input, this method requires binary information about which nodes in the network respond to which perturbation, together with a rank of confidence of each data point. We refer to this set of experimental observations as the response pattern. Given this information, the response logic approach infers networks that agree to the following simple rule: a perturbation at a node is propagated along all outgoing edges to the set of connected nodes, and these responding nodes will in turn propagate the signal and so forth. Consequently, a perturbation of a node causes a response at all nodes to which it is connected by a path, and no response at all others. The information about which node can be reached from which other nodes is known as the network’s transitive closure. Thus, the central assumption of our response logic approach is that experimentally observed responses are in agreement with the transitive closure. This assumption then leads to the inverse problem of identifying the networks whose transitive closure actually matches the response pattern.
</p>
    <fig id="btz326-F1" orientation="portrait" position="float">
      <label>Fig. 1.</label>
      <caption>
        <p>The steps of the response logic approach. The response logic and all additional prior network knowledge are formulated as a logic program. It is first used to rectify the experimentally determined response pattern, and second, takes the resulting (potentially incomplete) transitive closure as input to infer either all individual conforming networks or the union thereof</p>
      </caption>
      <graphic xlink:href="btz326f1"/>
    </fig>
    <p>The algorithm to infer these networks consists of two main steps. Using a logic programming approach, it first modifies the experimental response pattern to match a transitive closure (rectification step) and then infers either all individual networks that comply to the given data or the union over all those conforming networks. We will describe the different steps in the following sections.</p>
    <sec>
      <title>2.1 Rectifying the response pattern</title>
      <p>The response logic approach interprets the measured response pattern as a noisy, incomplete transitive closure. But because of misclassification, a response pattern might not match any actual (incomplete) transitive closure. Consider for example a three-node network in which all nodes are observed to respond to a perturbation at node one. This implies two paths, from nodes one to two and nodes one to three. Therefore, if a perturbation at node two causes a response at node one, node three is expected to respond as well. But assume that this response at node three was not observed (misclassification). Then, there is no directed network with a transitive closure that would match this response pattern. We expect that such misclassification occurs rather often when working with experimental data because of experimental noise or because the system under consideration does not fully comply with the assumptions of the response logic. Thus, it is necessary to identify the most relevant subset of the response pattern that forms an (incomplete) transitive closure which can then be used to infer networks.</p>
      <p>Our rectification algorithm requires to rank the observations of the response pattern from most to least confident. Typically, such confidence levels are readily available since the response pattern is often derived from a binarization of continuous experimental readouts, in which case a confidence score could be the distance to the binarization threshold, or a score of statistical significance. The algorithm then iterates the elements of the response pattern from high to low confidence, and at each step, determines whether the so far collected elements form a transitive closure and also conform with additional constraints from prior knowledge. This is done using a logic program (see below), which determines if there is any network that is compatible with these elements of a transitive closure. If the new element is compatible, it is added to the collection of conforming data and otherwise discarded. The more data points enter the collection the more restrictions apply to the remaining elements of the response pattern. As high confidence observations are taken into account first they are thus less likely to be discarded, ensuring that we extract the most relevant subset of the response pattern that indeed forms an incomplete transitive closure that is in line with additional constraints. If confidence levels of different data points cannot be easily distinguished, it is recommendable to repeat the response logic analysis for alternative rankings and inspect how this impacts the set of compatible networks.</p>
      <p><xref ref-type="fig" rid="btz326-F2">Figure 2</xref> demonstrates this scheme for a toy network of five nodes, for which we assume that four nodes were perturbed (indicated as flashes in <xref ref-type="fig" rid="btz326-F2">Fig. 2A</xref>, top). The resulting response pattern then consists of a five-by-four matrix, and we assume that two data points are missing, and two elements of the response pattern do not match the transitive closure (compare heat maps in <xref ref-type="fig" rid="btz326-F2">Fig. 2A</xref>). In <xref ref-type="fig" rid="btz326-F2">Figure 2B</xref>, we exemplify how the response pattern is iteratively rectified. We assume that we know that a link from node two to node three exists and that there is no link between node one to node three (green stars). Given this prior knowledge, already the first (highest confidence) data point (yellow star in the leftmost panel) additionally implies that node three also responds to a perturbation of node one. Any subsequent data point that is in conflict with this information will be discarded. The middle panels of <xref ref-type="fig" rid="btz326-F2">Figure 2B</xref> show that the five most trusted data points constrain five other elements of the rectified response pattern. Among them are the two misclassified, as well as the two missing data points. Therefore, in this toy example, the high confidence data points automatically correct these false or missing pieces of information. The bottom panel of <xref ref-type="fig" rid="btz326-F2">Figure 2B</xref> shows how adding data points increasingly constrains the network structure. Once all data are considered, most of the links (but not all, as discussed later on) are known to be either present or absent from the network. Note, however, that the rectification process does not require to compute the shown union of conforming networks, but only requires to determine if for any network at all, all constraints are satisfiable, which is computationally far less expensive.
</p>
      <fig id="btz326-F2" orientation="portrait" position="float">
        <label>Fig. 2.</label>
        <caption>
          <p>Response logic inference of a toy network. (<bold>A</bold>) From top to bottom: an example network of five nodes, where flashes indicate which nodes were perturbed; the full transitive closure; the response pattern that captures parts of the network’s transitive closure, with missing or misclassified data and confidence scores. (<bold>B</bold>) Three instants during data rectification: data points are added sequentially from high to low confidence (stars in top row), and increasingly constrain the inferred network and the (rectified) response pattern (red and blue fields in top row). Bottom row shows the inferred network at the given instant during rectification</p>
        </caption>
        <graphic xlink:href="btz326f2"/>
      </fig>
    </sec>
    <sec>
      <title>2.2 Finding conforming networks with logic programming</title>
      <p>Mapping the response pattern to its corresponding set of conforming networks is a substantial computational challenge, as there are <inline-formula id="IE1"><mml:math id="IM1"><mml:mrow><mml:msup><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>N</mml:mi><mml:mo>·</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> possible directed networks (with <italic>N</italic> being the number of nodes), making it infeasible to enumerate all networks even for small sizes. We therefore solve the search problem with a logic programming approach, which is a form of declarative programming where the problem is represented via a set of logical rules. We chose to use the logic modelling language Answer Set Programming (ASP) (<xref rid="btz326-B3" ref-type="bibr">Baral, 2003</xref>), as implemented in the Potsdam Answer Set Solving Collection (<xref rid="btz326-B16" ref-type="bibr">Gebser <italic>et al.</italic>, 2011</xref>). For ASP solving, we apply the <italic>clingo</italic> (<xref rid="btz326-B17" ref-type="bibr">Gebser <italic>et al.</italic>, 2014</xref>) system.</p>
      <p>ASPs generate-define-test pattern (<xref rid="btz326-B30" ref-type="bibr">Lifschitz, 2002</xref>) allows for a convenient encoding of the response logic, which is detailed in <xref ref-type="supplementary-material" rid="sup1">Supplementary Material S1</xref>. In short, we generate the collection of answer sets, consisting of all possible network structures, then define auxiliary predicates, in our case the networks’ transitive closure, and then test whether this transitive closure agrees with the data and also whether the tested network complies to all other heuristic constraints. Then the ASP solver, <italic>clingo</italic>, allows to enumerate all conforming networks. Note that the computational effort needed to identify a conforming network heavily depends on network size and the provided heuristic constraints. But overall, the logic programming approach infers networks of up to 100 nodes within seconds, without any parallelization.</p>
      <p>The previously discussed data rectification sequentially checks the satisfiability of every data point and could therefore become a performance bottleneck for large systems. However, because this process only requires to decide whether any network at all is in agreement with the latest data, instead of having to provide the entire set of conforming networks, we can solve a much simpler logic program, which is detailed in <xref ref-type="supplementary-material" rid="sup1">Supplementary Material S1</xref>. It drastically improves performance because it does not require to define an answer set for each possible network structure.</p>
    </sec>
    <sec>
      <title>2.3 Identifiability and heuristic constraints</title>
      <p>While every directed network has a single transitive closure, a transitive closure can often be mapped to many different networks, even more so if the transitive closure is only partially known. Thus, we can usually not infer a unique directed network from a rectified response pattern alone. For example, any feedback loop creates a strongly connected network component, that is, a set of nodes for which any pair is connected by a path. Therefore the response pattern is independent on how exactly the nodes are connected to each other. Similarly, the response pattern does not change with any additional feed-forward loops that cuts short an existing path. To resolve such structures we need to resort to additional constraints that are derived from contextual knowledge about the studied system. A crucial advantage of the response logic approach is that it can easily integrate various kinds of such constraints. Here, we want to exemplify this and introduce those constraints that are used in the applications shown further below.</p>
      <p>Rarely will we analyze networks that have never been studied before. Therefore one can use prior knowledge to constrain networks, such as by requiring the presence of well-established links in the network, or by excluding links that are physically not feasible (such as interactions between molecules located in different compartments). This information can directly be integrated into the logic program by defining the presence or absence of links as additional constraints. In addition, the logic program can also accommodate more subtle constraints, such as to enforce bounds on the numbers of incoming and outgoing edges of (groups of) nodes, see the implementation in <xref ref-type="supplementary-material" rid="sup1">Supplementary Material S1</xref>. This allows, for example, to encode the information that a module of nodes signals to other parts of the network without having to explicitly state which of the module’s nodes has the outward link. The same idea holds for a module that is known to receive at least one input to any subset of its components. Note that these types of constraints directly limit the space of possible networks and in turn that of the transitive closures. They will thus influence how the response pattern can be rectified and must be taken into consideration during the process.</p>
      <p>But even these additional constraint might not sufficiently limit the number of conforming networks to consider them individually. Alternatively, an extension of the logic program, described in <xref ref-type="supplementary-material" rid="sup1">Supplementary Material S1</xref>, allows to efficiently find the union of all answer sets. This union reveals which links (or missing links) appear in all solutions and which are ambiguous. The latter is particularly informative to either guide the choice of additional perturbation experiments or to reveal effective strategies on how to further filter the set of solutions.</p>
      <p>One widely used strategy in this regard is to require an overall sparse architecture (<xref rid="btz326-B44" ref-type="bibr">Wagner, 2001b</xref>). We would thus want to identify the conforming networks with the fewest links. However, naïvely parsing all network solutions will be infeasible when the set of solutions is large. To overcome this problem we developed an algorithm that sequentially removes as many ambiguous links as possible, without violating any constraint. To do so, after every link removal the pruned network is tested for satisfiability. If it complies to the given constraints, the link remains removed and the procedure continues. Otherwise the link is considered necessary and the procedure continues without the removal of the link. This leads to what will be referred to as the <italic>sparsified network</italic>. Yet, such scheme is only reasonable if the order by which links are removed, reflects to some extent a knowledge about which links are more likely to be absent in the underlying network, and should therefore be tested for removal first. However if such information is not available, one can use yet another approach to filter for sparse networks, termed the <italic>parsimony constraint</italic>. This constraint asks whether a link from a conforming network can be removed without it changing the network’s transitive closure. If that is the case, the network is considered non-sparse and is removed from the solution set. The specific encoding is found in <xref ref-type="supplementary-material" rid="sup1">Supplementary Material S1</xref>. While this procedure does not generally single out a unique solution as before (multiple networks can be parsimonious), it was nevertheless observed to drastically reduce the solution space.</p>
      <p>Taken together, a response pattern will typically be compatible with a large number of network topologies, but various types of prior network information can be incorporated into the response logic approach to reveal a finer network structure than what would have been possible from the response pattern alone. At the same time, the approach states explicitly whether or not the presence or absence of a link can be inferred from the given data and constraints.</p>
    </sec>
    <sec>
      <title>2.4 Implementation and data acquisition</title>
      <p>The response logic approach is implemented in Python 3.6 as a package available at <ext-link ext-link-type="uri" xlink:href="http://github.com/GrossTor/response-logic">github.com/GrossTor/response-logic</ext-link>. Numerical computations, data handling and plotting was done using the <monospace>SciPy</monospace> libraries (<xref rid="btz326-B23" ref-type="bibr">Jones <italic>et al.</italic>, 2001</xref>) and <monospace>seaborn</monospace>. Additional functions were taken from the <monospace>networkx</monospace> package (<xref rid="btz326-B21" ref-type="bibr">Hagberg <italic>et al.</italic>, 2008</xref>). Clingo’s python API (version 5.2.2) (<xref rid="btz326-B17" ref-type="bibr">Gebser <italic>et al.</italic>, 2014</xref>) is used to ground and solve the Answer Set Programs.</p>
      <p>The repository contains all Answer Set Programs, which are accessed by the main <italic>response.py</italic> module. It includes the <italic>prepare_ASP_program</italic> function to set up a logic program according to the provided data and additional constraints, the <italic>conform_response_pattern</italic> function that rectifies the response pattern, as well as various functions to solve a logic program. Additionally, a projects repository available at <ext-link ext-link-type="uri" xlink:href="http://github.com/GrossTor/response-logic-projects">github.com/GrossTor/response-logic-projects</ext-link> includes all scripts and data that were used to obtain the results from the following sections.</p>
      <p>KEGG data (<xref rid="btz326-B24" ref-type="bibr">Kanehisa <italic>et al.</italic>, 2017</xref>) was retrieved via the <monospace>KEGG</monospace> package within the <monospace>biopython</monospace> library. The KEGG pathway maps database was parsed for human pathways and the retrieved KGML files were used to build network representations based on their ‘relation elements’.</p>
      <p>The data and evaluation scripts for the DREAM3 and DREAM4 challenge was retrieved with the official <monospace>DREAMTools</monospace> python package (<xref rid="btz326-B10" ref-type="bibr">Cokelaer <italic>et al.</italic>, 2016</xref>). Leaderboards were taken from <xref rid="btz326-B9" ref-type="bibr">Cokelaer and Costello (2015)</xref> and <xref ref-type="fig" rid="btz326-F3">Figure 3</xref> from <xref rid="btz326-B31" ref-type="bibr">Marbach <italic>et al.</italic> (2010)</xref>.
</p>
      <fig id="btz326-F3" orientation="portrait" position="float">
        <label>Fig. 3.</label>
        <caption>
          <p>The performance of the response logic approach on synthetic data generated from 270 human KEGG pathways (<xref rid="btz326-B24" ref-type="bibr">Kanehisa <italic>et al.</italic>, 2017</xref>). <italic>N</italic> denotes network size, ϵ<sub>M</sub> quantifies the fraction of missing and ϵ<sub>C</sub> the fraction of misclassified data points. (<bold>A</bold>) Data generation and scoring scheme. (<bold>B</bold>) Each dot per colour represents a different pathway, colours represent different parameters for misclassification (ϵ<sub>C</sub>) and missing data (ϵ<sub>M</sub>). (<bold>C</bold>) Precision and recall for three particular signalling pathways as a function of the fraction of misclassified or missing data</p>
        </caption>
        <graphic xlink:href="btz326f3"/>
      </fig>
      <p>The SW-48 perturbation data were generated using a SW-48 cell line, and two derived clones with mutations in PI3K. Cell lines were obtained from Horizon Discovery. All lines were maintained in RPMI (Invitrogen) with 10% FBS (Invitrogen). Cell growth was assessed using the Cell Titer 96 Aqueous One Solution Cell Proliferation Assay (Promega). Cells were treated with compound 24 h after plating and grown for 72 h. The cell growth was determined by correcting for the cell count at time zero (time of treatment) and plotting data as percent growth relative to vehicle (DMSO)-treated cells. Reverse-phase protein array (RPPA): cells were treated 24 h after plating and incubated with inhibitor (GDC0973, GDC0068, Erlotinib) or solvent control (DMSO) for 1 h, and then stimulated either with EGF, HGF and IGF or with control (BSA) for 30 min. Cells were lysed in T-PER (Thermo), 300 mM NaCl, cOmplete<sup>®</sup> protease inhibitor (Roche) and Phosphotase Inhibitor Cocktails 2, 3. RPPA measurements were carried out by Theranostics Health. All data can be accessed from the according data folder in the projects repository (<monospace><ext-link ext-link-type="uri" xlink:href="http://response-logic-projects/SW-48_analysis/data/">response-logic-projects/SW-48_analysis/data/</ext-link></monospace>).</p>
    </sec>
  </sec>
  <sec>
    <title>3 Results</title>
    <sec>
      <title>3.1 Performance assessment on KEGG pathways</title>
      <p>We first set out to systematically quantify how misclassification and missing data in the experimentally determined response pattern impacts the quality of the predicted network structure. To this end, we inferred network structures from synthetic datasets. As a relevant and representative collection of test networks, we extracted all 270 human gene regulation and signal transduction networks (maximally containing 100 nodes) from the KEGG pathway database (<xref rid="btz326-B24" ref-type="bibr">Kanehisa <italic>et al.</italic>, 2017</xref>). For each of these network structures we generated its transitive closure, which we considered as the immaculate response pattern. Then, we repeatedly generated a random confidence pattern, <italic>C</italic>, where each entry is drawn from a uniform distribution between 0 and 1. To evaluate the effect of missing data, we remove a fraction <italic>ϵ</italic><sub>M</sub> of data points from the perfect response pattern and to evaluate the effect of measurement error, we also misclassify a fraction ϵ<sub>C</sub> of the remaining data points. Missing or misclassified data points were chosen with a probability that was proportional to their confidence score <italic>C<sub>ij</sub></italic>. We then used the resulting response and confidence patterns to infer the sparsified network, as defined in the previous section, via the response logic approach and, comparing it to the original KEGG network, computed precision and recall as performance scores, see <xref ref-type="fig" rid="btz326-F3">Figure 3A</xref>.</p>
      <p>For each of the 270 KEGG networks the procedure was repeated 50 times for different choices of ϵ<sub>M</sub> and ϵ<sub>C</sub>, and the mean of the scores is shown in <xref ref-type="fig" rid="btz326-F3">Figure 3B</xref>. In the absence of misclassifications (ϵ<sub>C</sub> = 0, red and orange dots in <xref ref-type="fig" rid="btz326-F3">Fig. 3B</xref>), prediction errors stem exclusively from the previously discussed multitude of conforming network structures. Interestingly, for a vast set of biological pathways the resulting inference errors are rather mild, and highly accurate predictions can be made independent of network size. However, once misclassifications are present, the predictivity is markedly reduced. Interestingly, this effect increases with growing network size.</p>
      <p>We next examined the dependency on missing data and misclassification rates in more detail for the three signalling pathways: RAS, Wnt and TGF-β. We chose to scan the parameters from 0.0 to 0.5 and 0.0 to 0.25 for ϵ<sub>M</sub> and ϵ<sub>C</sub>, respectively, as a complete loss of information would either occur when all data were missing, ϵ<sub>M</sub> = 1, or half of the entries were misclassified, ϵ<sub>C</sub> = 0.5 (ϵ<sub>C</sub> = 1 would produce an inversion of the response pattern). For all pathways, we found that recall is more affected by missing data than precision (see <xref ref-type="fig" rid="btz326-F3">Fig. 3C</xref>). That is, with less data the predicted links remain rather accurate but fewer of them are predicted. We also confirmed our previous finding that misclassification reduces prediction scores much stronger than missing data. Interestingly, even when half the data were discarded, in many instances precision remained still close to one. This suggests that discarding low-confidence data points rather than risking to accept many misclassified data points might be a good strategy to improve predictions. We will re-examine this idea by the end of the next section.</p>
    </sec>
    <sec>
      <title>3.2 Response logic approach outperforms competing methods in DREAM challenges</title>
      <p>The DREAM (<xref rid="btz326-B38" ref-type="bibr">Stolovitzky <italic>et al.</italic>, 2007</xref>) provides community-wide reverse-engineering challenges that foster the development of new systems biology models. Particularly, the DREAM3 and DREAM4 <italic>in-silico</italic> challenges (<xref rid="btz326-B20" ref-type="bibr">Greenfield <italic>et al.</italic>, 2010</xref>; <xref rid="btz326-B31" ref-type="bibr">Marbach <italic>et al.</italic>, 2010</xref>) assessed the performance of various gene network-inference methods and have since become a standard benchmark to which we can compare the response logic approach. In these two challenges various biologically plausible <italic>in-silico</italic> gene networks of different sizes were simulated under stochastic conditions to emulate realistic transcription dynamics resulting from knockdowns and knockouts of each single gene. Participants were given the resulting time courses, the steady states and the wild-type level of each gene and asked to infer the directed network structure from them. A ranked list of predicted gene pair interactions was then compared against the gold standard from which the area under the precision–recall (PR) and the area under the receiver operating characteristic curve (ROC) are computed, see <xref ref-type="supplementary-material" rid="sup1">Supplementary Figures S1 and S2</xref>. Comparing these to a null model provides <italic>P</italic>-values for each of the given five networks per network size that then get combined into a single overall score (<xref rid="btz326-B39" ref-type="bibr">Stolovitzky <italic>et al.</italic>, 2009</xref>).</p>
      <p>To infer the DREAM networks with the response logic approach, we generated response patterns from the <italic>in-silico</italic> knockout experiments of these challenges only (not considering knockdown or time-series data). These were computed as follows. When <italic>K<sub>ij</sub></italic> denotes the level of gene <italic>i</italic> after knockout of gene <italic>j</italic>, and the wild-type levels are <bold>w</bold>, we defined the normalized global response matrix, <italic>R</italic>, as
<disp-formula id="E1"><mml:math id="M1"><mml:mrow><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mfrac><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>
with <italic>s<sub>i</sub></italic> being the standard deviation of the knockout levels of gene <italic>i</italic> (row <italic>i</italic> of <italic>K</italic>). We then defined gene <italic>i</italic> to be responding to a knockout of gene <italic>j</italic> if <italic>R<sub>ij</sub></italic> &gt; 1. The entries of the associated confidence matrix were defined as a normalized distance of knockout levels to this threshold, see <xref ref-type="supplementary-material" rid="sup1">Supplementary Material S2</xref>. We then applied our response logic approach to these matrices to infer sparsified networks, as defined earlier. The goal of the DREAM challenge is to provide a list of gene pairs that is ranked by their predicted likelihood to be interacting. We generated it by first listing the predicted interacting and then the non-interacting gene pairs, where within each group, the pair list was ordered according to the associated entries in the global response matrix (interaction <inline-formula id="IE2"><mml:math id="IM2"><mml:mrow><mml:mi>i</mml:mi><mml:mo>→</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:math></inline-formula> was ranked higher than <inline-formula id="IE3"><mml:math id="IM3"><mml:mrow><mml:mi>k</mml:mi><mml:mo>→</mml:mo><mml:mi>l</mml:mi></mml:mrow></mml:math></inline-formula> if <italic>R<sub>ij</sub></italic> &gt; <italic>R<sub>kl</sub></italic>). As comparison, we also created a ranked list by simply ranking gene pairs in the order of the global response matrix, without the grouping that was introduced by the response logic, which we termed ‘naïve approach’.</p>
      <p>These ranked lists were then scored using the official DREAMTools package (<xref rid="btz326-B10" ref-type="bibr">Cokelaer <italic>et al.</italic>, 2016</xref>) (with a minor modification for one network score at DREAM3 <italic>N</italic> = 100, see <xref ref-type="supplementary-material" rid="sup1">Supplementary Material S2</xref>). <xref ref-type="fig" rid="btz326-F4">Figure 4A</xref> shows the results of our method and that of the naïve approach in comparison to the 10 best performing participants at each network size and challenge that were provided with the full (knockout, knockdown, time-course) datasets. Except for the small networks with <italic>N </italic>=<italic> </italic>10, where the response logic approach ranks second and third, it outperforms all 29 competitors participating in DREAM3 (<xref rid="btz326-B31" ref-type="bibr">Marbach <italic>et al.</italic>, 2010</xref>), as well all 29 competitors participating in DREAM4 (<xref rid="btz326-B9" ref-type="bibr">Cokelaer and Costello, 2015</xref>). Note that the best performers for the small networks (<italic>N </italic>=<italic> </italic>10) that scored higher than the response logic (<xref rid="btz326-B28" ref-type="bibr">Küffner <italic>et al.</italic>, 2010</xref>; <xref rid="btz326-B45" ref-type="bibr">Yip <italic>et al.</italic>, 2010</xref>) also used the provided time-course data, which we did not use in our response logic approach.
</p>
      <fig id="btz326-F4" orientation="portrait" position="float">
        <label>Fig. 4.</label>
        <caption>
          <p>(<bold>A</bold>) Performance of the response logic approach for the gene-network reverse engineering challenges DREAM3 and DREAM4 (<xref rid="btz326-B20" ref-type="bibr">Greenfield <italic>et al.</italic>, 2010</xref>; <xref rid="btz326-B31" ref-type="bibr">Marbach <italic>et al.</italic>, 2010</xref>) (green bars), compared with a ‘naïve’ scoring approach (orange bars) and the 10 best approaches that took part in the respective challenges (grey bars). Scores are calculated as in the original challenge, with higher scores indicating better performance. (<bold>B</bold>) Relative changes in performance when excluding data points with confidence below a certain threshold. <italic>N</italic>: network size</p>
        </caption>
        <graphic xlink:href="btz326f4"/>
      </fig>
      <p>We also observed that the response logic always outperformed the naïve approach, confirming that non-trivial additional knowledge is gained when applying the response logic. Notably however, already the naïve approach scores comparatively well, which let the challenge’s organizers to conclude that ‘sophisticated methods that would in theory be expected to perform better than the naïve approach described above, were more strongly affected by inaccurate prior assumptions in practice’ (<xref rid="btz326-B31" ref-type="bibr">Marbach <italic>et al.</italic>, 2010</xref>). This observation affirms our initial motivation to design an approach with minimal assumptions on the data.</p>
      <p>Finally, the DREAM data also allowed us to test if disregarding low-confidence data points, as suggested by the KEGG pathway analysis, improves predictions. Thus, considering the confidence matrix with scaled entries between 0 and 1 (<xref ref-type="supplementary-material" rid="sup1">Supplementary Material S2</xref>), we removed data points with confidence scores below a threshold and re-engineered the networks from those smaller datasets. The resulting scores relative to the original scores, which were obtained from the full response patterns, are shown in <xref ref-type="fig" rid="btz326-F4">Figure 4B</xref>. With the exception of the <italic>N </italic>=<italic> </italic>10 networks, these numerical experiments confirmed that removing low-confidence data effectively improved network inference. Peak performance is reached when approximately 5% of the data are discarded.</p>
      <p>In summary, our benchmarks using the DREAM <italic>in-silico</italic> challenges provide a strong indication that the response logic approach is capable of reverse-engineering biological networks. Its simplicity not only makes its results comprehensible but the DREAM challenge showed that they are also more accurate than those of existing methods.</p>
    </sec>
    <sec>
      <title>3.3 Reverse engineering MAPK and PI3K signalling in a colon cancer cell line</title>
      <p>Having benchmarked the response logic formalism, we next used it to investigate signalling networks in cancer cells. In a first step, we decided to reverse engineer the Ras-mediated signalling network including MAPK and PI3K/AKT signalling in SW-48 colon cancer cells. We performed multiple perturbation experiments using either ligands or inhibitors that targeted EGFR, PDFR, ERK and AKT, and measured changes in phosphorylation using a reverse-phase protein assay (RPPA) platform. Ten of the antibody-based readouts passed a quality control and were relevant to the considered pathways, see details in <xref ref-type="supplementary-material" rid="sup1">Supplementary Material S3</xref>. Using replicate measurements of both unperturbed and perturbed conditions, we constructed the response pattern as well as the according confidence scores, which are shown in <xref ref-type="fig" rid="btz326-F5">Figure 5A</xref> (see <xref ref-type="supplementary-material" rid="sup1">Supplementary Material S3</xref> for details).
</p>
      <fig id="btz326-F5" orientation="portrait" position="float">
        <label>Fig. 5.</label>
        <caption>
          <p>(<bold>A</bold>) Response pattern of the SW-48 cell line of selected phospho-proteins after perturbations affecting EGFR, PDGFR, ERK1 and AKT. (<bold>B</bold>) Performance of response logic network inference under various (combinations of) heuristics, as explained in text, compared to a random classifier (shaded colours). (<bold>C</bold>) Literature network (filled arrows) and final network prediction (finer arrows, only links with consensus ratio ≥0.4 are shown)</p>
        </caption>
        <graphic xlink:href="btz326f5"/>
      </fig>
      <p>The RAS signalling network has been well studied, which allowed us to compile a literature network shown in <xref ref-type="fig" rid="btz326-F5">Figure 5C</xref> that can be used as a gold standard to measure prediction performance. We then applied our response logic framework to the response pattern, and evaluated predictions by means of the areas under the ROC-, as well as PR curves, as shown in <xref ref-type="fig" rid="btz326-F5">Figure 5B</xref>, see <xref ref-type="supplementary-material" rid="sup1">Supplementary Material S3</xref> for details. As it was computationally impossible to enumerate all networks, we determined the union of all conforming networks, as described earlier, and scored links based on whether they are found in all, in some and in no conforming networks. Doing so led to PR and ROC curves that were only marginally better than random (top row in <xref ref-type="fig" rid="btz326-F5">Fig. 5B</xref>). The apparent challenge concerning the network inference for this network is the substantial disparity between 10 readouts to only 4 perturbations, making the reverse engineering problem strongly underdetermined. A crucial benefit of the response logic analysis is that it allows for the incorporation of various additional insights about the structure of signalling networks to reduce the space of solutions. We therefore investigated how the inclusion of generic and indirect network knowledge rendered the analysis more meaningful. First, we enforced a hierarchy in the network (heuristic I). Signalling networks typically process signals received on the receptor level through a chain of intermediate kinases, before they are passed on to a set of targets. We therefore disallowed any direct connections between the receptor and the target level (according to the allocation shown in <xref ref-type="fig" rid="btz326-F5">Fig. 5C</xref>) (these ruled-out links were obviously not taken into account for the scoring procedure, which explains the different areas under the PR curve for the random classifier in <xref ref-type="fig" rid="btz326-F5">Fig. 5B</xref>). Furthermore, kinase interactions are highly specific, resulting in sparse signalling networks. Therefore, we found it reasonable to rid the network of redundant links and apply the parsimony constraint, as defined earlier (heuristic II). Lastly, we required that any node at receptor level must have at least one outgoing link (heuristic III).</p>
      <p>Adding these three heuristics, I–III in <xref ref-type="fig" rid="btz326-F5">Figure 5B</xref>, considerably improved the performance and reduced the solution space to 666 conforming networks. This makes it possible to enumerate them all and compute for each possible link the fraction of how many times it was present in all conforming networks (consensus ratio). We reasoned that a higher consensus ratio also implies a higher relevance, which we found confirmed when using the consensus ratio, rather than the union of networks to score the predictions (heuristic IV). From these results, we conclude that the response logic is indeed a valid assumption for the MAPK and PI3K pathway activity in the SW-48 cell line and that rather apparent additional information can effectively compensate for the small number of perturbations.</p>
    </sec>
    <sec>
      <title>3.4 Modelling the effects of PI3K mutations in a colon cancer cell line</title>
      <p>Having verified the validity of the response logic approach on the SW-48 cell data, we next used it to investigate how different mutations in the PI3K change signalling. To investigate this, we used clones of SW-48, in which two mutations that are commonly found in tumours were integrated, namely PIK3CA<sup>H1047R</sup> and PIK3CA<sup>E545K</sup>. We generated data using the same scheme as before, by perturbing the cells with ligands and inhibitors, and measuring the response using RPPA. Considering that the MAPK and PI3K pathways are very well studied, we assumed that the literature network depicted in <xref ref-type="fig" rid="btz326-F5">Figure 5C</xref> is valid for all three cell lines, except for those links that could be affected by the different PI3K mutations. Because PI3K is not among the readouts, we model PI3K mutations to potentially affect links from and to its next downstream target, which is AKT. Furthermore, the literature network does not include context-dependent feedbacks in the MAPK pathway (<xref rid="btz326-B29" ref-type="bibr">Lake <italic>et al.</italic>, 2016</xref>). As we observed mutant-dependent upregulation of EGFR as well as SHC upon MEK inhibition, see <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S4</xref>, we considered this option in the inference as well. Therefore, to model the different mutant response patterns shown in <xref ref-type="fig" rid="btz326-F6">Figure 6A</xref>, we used a heavily constrained response logic approach in which the presence or absence of network links is governed by the literature network, except for those links going in and out of AKT and those links going into EGFR. Not only did these constraints compensate for the few perturbations but also connect differences in the data to plausible alterations of the network. Furthermore, as the parsimony constraint has proven beneficial in the response logic validation on the parental cell line data, <xref ref-type="fig" rid="btz326-F5">Figure 5</xref>, it is used as well (with the constrained literature network, previous heuristics I and III no longer apply, and IV is not relevant as shown next).
</p>
      <fig id="btz326-F6" orientation="portrait" position="float">
        <label>Fig. 6.</label>
        <caption>
          <p>(<bold>A</bold>) Response pattern for two PI3K-mutant cell lines derived from SW-48, carrying either the E545K or H1047R mutations in PIK3CA, as in <xref ref-type="fig" rid="btz326-F5">Figure 5</xref>. (<bold>B</bold>) Mutant-specific networks derived from the response data arrows in blue (parental cell line), orange and green (two mutant cell lines), with links constrained due to literature knowledge shown with large arrows. (<bold>C</bold>) Dose–response curves for different inhibitors targeting the inferred networks in the parental cell line (blue) and the two clones with PI3K mutations (orange and green), and the area under the curve displayed as bar graphs</p>
        </caption>
        <graphic xlink:href="btz326f6"/>
      </fig>
      <p>This approach resulted in four, one and two conforming networks for the parental, the E545K and the H1047R cell line, respectively. For the two ambiguous cell lines, we decided to isolate the single, biologically most plausible network hypothesis. In the case of the parental cell line, the four conforming networks consist of the combined options of whether or not SHC feeds back to EGFR and whether EGFR signals directly to AKT or via SHC. SHC has been found to be an adapter protein that is recruited to the activated EGFR (but does not activate it) and is essential for the receptor’s signal relay (<xref rid="btz326-B35" ref-type="bibr">Ravichandran, 2001</xref>). We thus chose the parental network hypothesis that excludes the SHC to EGFR and the EGFR to AKT link. The two H1047R networks only differed in whether a feedback to EGFR originates from p90RSK or from ERK. Since the ERK to EGFR feedback is well described in the literature (<xref rid="btz326-B29" ref-type="bibr">Lake <italic>et al.</italic>, 2016</xref>), we decided for that option. With this, we could compare the mutant-specific network hypotheses, as shown in <xref ref-type="fig" rid="btz326-F6">Figure 6B</xref>, which led to two main observations. First, in contrast to the parental cell line, the mutant cell lines do not have a link from the EGFR receptor to the PI3K pathway. And second, the H1047R cell line is the only one bearing a feedback from ERK (or any node) to EGFR.</p>
      <p>We next aimed to explore if these different network topologies might explain phenotypic differences between these cell lines. We therefore evaluated the drug response of these cells for different targeted drugs, as shown in <xref ref-type="fig" rid="btz326-F6">Figure 6C</xref>. Some differences in drug response can be understood directly from the mutations that have been added to the cell lines: the PI3K and AKT inhibitors seem to be slightly more effective in the PI3K-mutant cell lines, which is not surprising as these cells have constitutively active PI3K signalling. Similarly, inhibition of IGFR was more effective in the wild-type cells, as the mutant cells are more self-sufficient in PI3K signalling and therefore potentially require less IGFR activity. The drug responses to the EGFR inhibitor, and the MEK inhibitor are more complex and can only be interpreted when considering the network rewiring. The PI3K<sup>H1047</sup> mutant cell line is rather resistant to the MEK inhibitor. This can be understood by the presence of the negative feedback from ERK to EGFR in this cell line, which is known to cause resistance by re-activating ERK and amplifying AKT signalling upon MEK inhibition (<xref rid="btz326-B27" ref-type="bibr">Klinger <italic>et al.</italic>, 2013</xref>). EGFR inhibition effects the cell line with the E545K mutant less, and the cell line with the H1047R mutant more strongly compared to the parental cell line. Both mutants decouple the EGF-receptor to the AKT pathway, so one would expect that they also show a less pronounced effect upon its inhibition. However, in the H1047R cell line there is a strong ERK-EGFR feedback that generally reduces the MAPK pathway activity, and one can speculate that additional EGFR inhibition can push the MAPK pathway activity to sub-critical levels.</p>
      <p>Taken together, the response logic modelling allows to reconstruct networks from complex perturbation data and provides network information that can be interpreted and linked to phenotypic behaviour. This example demonstrates how this approach allows to integrate noisy response data, prior network knowledge and generic signalling constraints to identify hypothesis on changes in networks due to mutations that can subsequently be studied experimentally.</p>
    </sec>
  </sec>
  <sec>
    <title>4 Discussion</title>
    <p>We developed the response logic approach as a method to infer directed networks from perturbation data. Its central idea is to assume that a perturbation of a node is propagated along the edges and thus causes a response at all nodes to which there is a directed path, starting from the perturbed node. This simple hypothesis is integrated in a logic program that allows to identify the networks whose transitive closure most closely matches that of the experimental data. The power of logic programming, and more generally declarative programming, has enabled its use in a wide range of topics in computational biology (<xref rid="btz326-B2" ref-type="bibr">Backofen and Gilbert, 2001</xref>; <xref rid="btz326-B5" ref-type="bibr">Becker <italic>et al.</italic>, 2018</xref>; <xref rid="btz326-B6" ref-type="bibr">Bockmayr and Courtois, 2002</xref>; <xref rid="btz326-B14" ref-type="bibr">Dunn <italic>et al.</italic>, 2014</xref>; <xref rid="btz326-B42" ref-type="bibr">Videla <italic>et al.</italic>, 2015</xref>; <xref rid="btz326-B46" ref-type="bibr">Yordanov <italic>et al.</italic>, 2016</xref>). In our approach, logic programming provides a way to efficiently scan the vast search space of all directed networks and to easily express and incorporate additional information and prior knowledge about the network.</p>
    <p>Many reverse-engineering methods involve tunable parameters, which can drastically affect the results. However, it is often far from obvious how these parameters should be set in a specific context. In contrast, our response logic approach is parameter free and strictly infers the networks that follow from the provided response pattern and any additional constraints provided.</p>
    <p>At first glance, it might seem wasteful to reduce the data to a binary information of responding versus non-responding, when many experimental techniques allow to quantify the magnitude of response of the observed components. However, data binarization renders inference more general and robust, and in many settings, technical issues such as measurement error, heterogeneous data sources or various normalization steps, make the interpretation of magnitudes difficult.</p>
    <p>The idea to map an experimentally observable response pattern onto a transitive closure has been proposed before. It was hypothesized that the sparsest directed acyclic graph whose transitive closure matches the observed response pattern describes the direct regulatory interactions in gene networks (<xref rid="btz326-B43" ref-type="bibr">Wagner, 2001a</xref>). Such a graph is also known as the transitive reduction and can be computed efficiently (<xref rid="btz326-B1" ref-type="bibr">Aho <italic>et al.</italic>, 1972</xref>). This approach was heuristically expanded to also allow for some cycles, and to refine the inferred network by incorporating double mutant perturbations and information about up- and downregulation (<xref rid="btz326-B41" ref-type="bibr">Tringe <italic>et al.</italic>, 2004</xref>). Yet, this procedure has several shortcomings: it cannot incorporate existing domain knowledge, it cannot handle missing data points, but simply considers an unknown or uncertain response behaviour as non-responding and it only finds a single, most parsimonious, network, which might not necessarily represent the underlying structure.</p>
    <p>This last point is a strategy to compensate for the fact that network inference is an inherently underdetermined problem, because the number of independent measurements generally falls short on the number of possible interactions (<xref rid="btz326-B12" ref-type="bibr">De Smet and Marchal, 2010</xref>). The response logic approach explicitly addresses this problem as it considers the entire ensemble of conforming networks rather than to single out a particular one, based on some fixed and potentially inaccurate assumption. It thereby reveals which parts of the network cannot be inferred from the information provided so far. This important insight can then be used to either guide additional experiments or to systematically reduce the solution space by adding constraints that are most warranted in the given context. We consider this as a crucial advantage over existing approaches, whose inferred networks can generally not be intuitively traced back to the data and thus tend to disguise if and how the inferred network is justified by the data.</p>
    <p>But while the response logic is based on a simple and intuitive concept, such simplicity comes at a price. As with any other assumption, it might not actually be representative of the studied system. Major problems might occur due to robustness, or saturation effects, all of which disrupt the presumed flow of signal but are an essential part of various biological systems (<xref rid="btz326-B15" ref-type="bibr">Fritsche-Guenther <italic>et al.</italic>, 2011</xref>). Also, from a Boolean perspective, the response logic treats nodes exclusively as OR gates, whereas certain systems require a more involved logic (<xref rid="btz326-B36" ref-type="bibr">Razzaq <italic>et al.</italic>, 2018</xref>). But again, the declarative nature of the ASP encoding allows to account for such effects. One could, for example, rather easily implement a maximal path length over which a perturbation gets attenuated, or explicitly state a Boolean function that governs the signal propagation of a certain node. Another important shortcoming for many questions is that it does not neither assign any weights nor signs to the inferred links. Yet, the inferred network can serve as an input for methods that are devised to quantify link strengths on a given input network (<xref rid="btz326-B13" ref-type="bibr">Dorel <italic>et al.</italic>, 2018</xref>).</p>
    <p>On the other hand, the response logic’s simplicity makes it suitable for various different fields of research. Because it is based on a formalization of an intuitive network behaviour, it can infer ecological, infection, or even social or transportation networks. Such generality would even permit to use the response logic to ask the inverse question: given a certain network structure and the observed perturbation responses, can I infer where a perturbation hit the network? This question could be particularly interesting in the analysis of man-made networks, for which the structure is typically known, but not the location of the perturbation. The inverted logic program would then identify where an electric connection malfunctioned, an intruder attacked or a disease originated from. All these possibilities show that the simplicity of the response logic does not limit its applicability.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="sup1">
      <label>btz326_Supplementary_Data</label>
      <media xlink:href="btz326_supplementary_data.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack id="ack1">
    <title>Acknowledgements</title>
    <p>The authors thank Dr Manuela Benary, Mathurin Dorel, Dr Bertram Klinger and Dr Johannes Meisig for their fruitful discussions.</p>
    <sec>
      <title>Funding</title>
      <p>This work was supported by a grant from the Berlin Institute of Health and by the German Research Foundation (DFG), through GRK1772 and RTG2424.</p>
      <p><italic>Conflict of Interest</italic>: none declared.</p>
    </sec>
  </ack>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btz326-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Aho</surname><given-names>A.</given-names></name></person-group><etal>et al</etal> (<year>1972</year>) 
<article-title>The transitive reduction of a directed graph</article-title>. <source>SIAM J. Comput</source>., <volume>1</volume>, <fpage>131</fpage>–<lpage>137</lpage>.</mixed-citation>
    </ref>
    <ref id="btz326-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Backofen</surname><given-names>R.</given-names></name>, <name name-style="western"><surname>Gilbert</surname><given-names>D.</given-names></name></person-group> (<year>2001</year>) 
<article-title>Bioinformatics and constraints</article-title>. <source>Constraints</source>, <volume>6</volume>, <fpage>141</fpage>–<lpage>156</lpage>.</mixed-citation>
    </ref>
    <ref id="btz326-B3">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Baral</surname><given-names>C.</given-names></name></person-group> (<year>2003</year>) <source>Knowledge Representation, Reasoning and Declarative Problem Solving</source>. 
<publisher-name>Cambridge University Press, Cambridge</publisher-name>.</mixed-citation>
    </ref>
    <ref id="btz326-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Basso</surname><given-names>K.</given-names></name></person-group><etal>et al</etal> (<year>2005</year>) 
<article-title>Reverse engineering of regulatory networks in human B cells</article-title>. <source>Nat. Genet</source>., <volume>37</volume>, <fpage>382</fpage>–<lpage>390</lpage>.<pub-id pub-id-type="pmid">15778709</pub-id></mixed-citation>
    </ref>
    <ref id="btz326-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Becker</surname><given-names>K.</given-names></name></person-group><etal>et al</etal> (<year>2018</year>) 
<article-title>Designing miRNA-based synthetic cell classifier circuits using Answer Set Programming</article-title>. <source>Front. Bioeng. Biotechnol</source>., <volume>6</volume>, <fpage>70</fpage>.<pub-id pub-id-type="pmid">29988359</pub-id></mixed-citation>
    </ref>
    <ref id="btz326-B6">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Bockmayr</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Courtois</surname><given-names>A.</given-names></name></person-group> (<year>2002</year>) <chapter-title>Using hybrid concurrent constraint programming to model dynamic biological systems</chapter-title> In: <person-group person-group-type="editor"><name name-style="western"><surname>Stuckey</surname><given-names>P.J.</given-names></name></person-group> (ed.), <source>Logic Programming, Lecture Notes in Computer Science</source>. 
<publisher-name>Springer</publisher-name>, 
<publisher-loc>Berlin Heidelberg</publisher-loc>, pp. <fpage>85</fpage>–<lpage>99</lpage>.</mixed-citation>
    </ref>
    <ref id="btz326-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Bruggeman</surname><given-names>F.J.</given-names></name></person-group><etal>et al</etal> (<year>2002</year>) 
<article-title>Modular response analysis of cellular regulatory networks</article-title>. <source>J. Theoret. Biol</source>., <volume>218</volume>, <fpage>507</fpage>–<lpage>520</lpage>.<pub-id pub-id-type="pmid">12384053</pub-id></mixed-citation>
    </ref>
    <ref id="btz326-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Čenys</surname><given-names>A.</given-names></name></person-group><etal>et al</etal> (<year>1991</year>) 
<article-title>Estimation of interrelation between chaotic observables</article-title>. <source>Physica D</source>, <volume>52</volume>, <fpage>332</fpage>–<lpage>337</lpage>.</mixed-citation>
    </ref>
    <ref id="btz326-B9">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Cokelaer</surname><given-names>T.</given-names></name>, <name name-style="western"><surname>Costello</surname><given-names>J.</given-names></name></person-group> (<year>2015</year>, July) Final leaderboards dream4 - in silico network challenge. <ext-link ext-link-type="uri" xlink:href="https://www.synapse.org/Synapse:syn3049712/wiki/74631">https://www.synapse.org/Synapse: syn3049712/wiki/74631</ext-link> (30 August 2018, date last accessed).</mixed-citation>
    </ref>
    <ref id="btz326-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Cokelaer</surname><given-names>T.</given-names></name></person-group><etal>et al</etal> (<year>2016</year>) 
<article-title>DREAMTools: a python package for scoring collaborative challenges [version 2; referees: 1 approved, 2 approved with reservations]</article-title>. <source>F1000Research</source>, <volume>4</volume>, <fpage>1030</fpage>.</mixed-citation>
    </ref>
    <ref id="btz326-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>de la Fuente</surname><given-names>A.</given-names></name></person-group><etal>et al</etal> (<year>2004</year>) 
<article-title>Discovery of meaningful associations in genomic data using partial correlation coefficients</article-title>. <source>Bioinformatics</source>, <volume>20</volume>, <fpage>3565</fpage>–<lpage>3574</lpage>.<pub-id pub-id-type="pmid">15284096</pub-id></mixed-citation>
    </ref>
    <ref id="btz326-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>De Smet</surname><given-names>R.</given-names></name>, <name name-style="western"><surname>Marchal</surname><given-names>K.</given-names></name></person-group> (<year>2010</year>) 
<article-title>Advantages and limitations of current network inference methods</article-title>. <source>Nat. Rev. Microbiol</source>., <volume>8</volume>, <fpage>717</fpage>–<lpage>729</lpage>.<pub-id pub-id-type="pmid">20805835</pub-id></mixed-citation>
    </ref>
    <ref id="btz326-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Dorel</surname><given-names>M.</given-names></name></person-group><etal>et al</etal> (<year>2018</year>) 
<article-title>Modelling signalling networks from perturbation data</article-title>. <source>Bioinformatics</source>, <volume>34</volume>, <fpage>4079</fpage>–<lpage>4086</lpage>.<pub-id pub-id-type="pmid">29931053</pub-id></mixed-citation>
    </ref>
    <ref id="btz326-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Dunn</surname><given-names>S.-J.</given-names></name></person-group><etal>et al</etal> (<year>2014</year>) 
<article-title>Defining an essential transcription factor program for naïve pluripotency</article-title>. <source>Science</source>, <volume>344</volume>, <fpage>1156</fpage>–<lpage>1160</lpage>.<pub-id pub-id-type="pmid">24904165</pub-id></mixed-citation>
    </ref>
    <ref id="btz326-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Fritsche-Guenther</surname><given-names>R.</given-names></name></person-group><etal>et al</etal> (<year>2011</year>) 
<article-title>Strong negative feedback from Erk to Raf confers robustness to MAPK signalling</article-title>. <source>Mole. Syst. Biol</source>., <volume>7</volume>, <fpage>489</fpage>.</mixed-citation>
    </ref>
    <ref id="btz326-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Gebser</surname><given-names>M.</given-names></name></person-group><etal>et al</etal> (<year>2011</year>) 
<article-title>Potassco: the Potsdam answer set solving collection</article-title>. <source>AI Commun</source>., <volume>24</volume>, <fpage>107</fpage>–<lpage>124</lpage>.</mixed-citation>
    </ref>
    <ref id="btz326-B17">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Gebser</surname><given-names>M.</given-names></name></person-group><etal>et al</etal> (<year>2014</year>) Clingo = ASP + control: preliminary report. <italic>CoRR</italic>, abs/1405.3694.</mixed-citation>
    </ref>
    <ref id="btz326-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Ghanbari</surname><given-names>M.</given-names></name></person-group><etal>et al</etal> (<year>2015</year>) 
<article-title>Reconstruction of gene networks using prior knowledge</article-title>. <source>BMC Syst. Biol</source>., <volume>9</volume>, <fpage>84.</fpage><pub-id pub-id-type="pmid">26589494</pub-id></mixed-citation>
    </ref>
    <ref id="btz326-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Granger</surname><given-names>C.W.</given-names></name></person-group> (<year>1969</year>) 
<article-title>Investigating causal relations by econometric models and cross-spectral methods</article-title>. <source>Econometrica</source>, <volume>37</volume>, <fpage>424</fpage>–<lpage>438</lpage>.</mixed-citation>
    </ref>
    <ref id="btz326-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Greenfield</surname><given-names>A.</given-names></name></person-group><etal>et al</etal> (<year>2010</year>) 
<article-title>DREAM4: combining genetic and dynamic information to identify biological networks and dynamical models</article-title>. <source>PLoS One</source>, <volume>5</volume>, <fpage>e13397.</fpage><pub-id pub-id-type="pmid">21049040</pub-id></mixed-citation>
    </ref>
    <ref id="btz326-B21">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Hagberg</surname><given-names>A.A.</given-names></name></person-group><etal>et al</etal> (<year>2008</year>) <chapter-title>Exploring network structure, dynamics, and function using networkx</chapter-title> In <person-group person-group-type="editor"><name name-style="western"><surname>Varoquaux</surname><given-names>G.</given-names></name>, <name name-style="western"><surname>Vaught</surname><given-names>T.</given-names></name>, <name name-style="western"><surname>Millman</surname><given-names>J.</given-names></name></person-group> (eds), <source>Proceedings of the 7th Python in Science Conference, Pasadena, CA</source>, pp. <fpage>11</fpage>–<lpage>15</lpage>.</mixed-citation>
    </ref>
    <ref id="btz326-B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Ideker</surname><given-names>T.</given-names></name>, <name name-style="western"><surname>Nussinov</surname><given-names>R.</given-names></name></person-group> (<year>2017</year>) 
<article-title>Network approaches and applications in biology</article-title>. <source>PLoS Comput. Biol</source>., <volume>13</volume>, <fpage>e1005771</fpage>.<pub-id pub-id-type="pmid">29023447</pub-id></mixed-citation>
    </ref>
    <ref id="btz326-B23">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Jones</surname><given-names>E.</given-names></name></person-group><etal>et al</etal> (<year>2001</year>) SciPy: open source scientific tools for Python. <ext-link ext-link-type="uri" xlink:href="http://www.scipy.org/">http://www.scipy.org/</ext-link> (25 January 2018, date last accessed).</mixed-citation>
    </ref>
    <ref id="btz326-B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Kanehisa</surname><given-names>M.</given-names></name></person-group><etal>et al</etal> (<year>2017</year>) 
<article-title>KEGG: new perspectives on genomes, pathways, diseases and drugs</article-title>. <source>Nucleic Acids Res</source>., <volume>45</volume>, <fpage>D353</fpage>–<lpage>D361</lpage>.<pub-id pub-id-type="pmid">27899662</pub-id></mixed-citation>
    </ref>
    <ref id="btz326-B25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Kholodenko</surname><given-names>B.N.</given-names></name></person-group><etal>et al</etal> (<year>2002</year>) 
<article-title>Untangling the wires: a strategy to trace functional interactions in signaling and gene networks</article-title>. <source>Proc. Natl. Acad. Sci. USA</source>, <volume>99</volume>, <fpage>12841</fpage>–<lpage>12846</lpage>.<pub-id pub-id-type="pmid">12242336</pub-id></mixed-citation>
    </ref>
    <ref id="btz326-B26">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Klamt</surname><given-names>S.</given-names></name></person-group><etal>et al</etal> (<year>2006</year>) 
<article-title>A methodology for the structural and functional analysis of signaling and regulatory networks</article-title>. <source>BMC Bioinformatics</source>, <volume>7</volume>, <fpage>56.</fpage><pub-id pub-id-type="pmid">16464248</pub-id></mixed-citation>
    </ref>
    <ref id="btz326-B27">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Klinger</surname><given-names>B.</given-names></name></person-group><etal>et al</etal> (<year>2013</year>) 
<article-title>Network quantification of EGFR signaling unveils potential for targeted combination therapy</article-title>. <source>Mole. Syst. Biol</source>., <volume>9</volume>, <fpage>673</fpage>.</mixed-citation>
    </ref>
    <ref id="btz326-B28">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Küffner</surname><given-names>R.</given-names></name></person-group><etal>et al</etal> (<year>2010</year>) 
<article-title>Petri nets with fuzzy logic (PNFL): reverse engineering and parametrization</article-title>. <source>PLoS One</source>, <volume>5</volume>, <fpage>e12807</fpage>.<pub-id pub-id-type="pmid">20862218</pub-id></mixed-citation>
    </ref>
    <ref id="btz326-B29">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Lake</surname><given-names>D.</given-names></name></person-group><etal>et al</etal> (<year>2016</year>) 
<article-title>Negative feedback regulation of the Erk1/2 MAPK pathway</article-title>. <source>Cell. Mol. Life Sci</source>., <volume>73</volume>, <fpage>4397</fpage>–<lpage>4413</lpage>.<pub-id pub-id-type="pmid">27342992</pub-id></mixed-citation>
    </ref>
    <ref id="btz326-B30">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Lifschitz</surname><given-names>V.</given-names></name></person-group> (<year>2002</year>) 
<article-title>Answer set programming and plan generation</article-title>. <source>Artif. Intell</source>., <volume>138</volume>, <fpage>39</fpage>–<lpage>54</lpage>.</mixed-citation>
    </ref>
    <ref id="btz326-B31">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Marbach</surname><given-names>D.</given-names></name></person-group><etal>et al</etal> (<year>2010</year>) 
<article-title>Revealing strengths and weaknesses of methods for gene network inference</article-title>. <source>Proc. Natl. Acad. Sci. USA</source>, <volume>107</volume>, <fpage>6286</fpage>–<lpage>6291</lpage>.<pub-id pub-id-type="pmid">20308593</pub-id></mixed-citation>
    </ref>
    <ref id="btz326-B32">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Meisig</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Blüthgen</surname><given-names>N.</given-names></name></person-group> (<year>2018</year>) 
<article-title>The gene regulatory network of mESC differentiation: a benchmark for reverse engineering methods</article-title>. <source>Philos. Trans. R. Soc. B</source>, <volume>373</volume>, <fpage>20170222.</fpage></mixed-citation>
    </ref>
    <ref id="btz326-B33">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Molinelli</surname><given-names>E.J.</given-names></name></person-group><etal>et al</etal> (<year>2013</year>) 
<article-title>Perturbation biology: inferring signaling networks in cellular systems</article-title>. <source>PLoS Comput. Biol</source>., <volume>9</volume>, <fpage>e1003290.</fpage><pub-id pub-id-type="pmid">24367245</pub-id></mixed-citation>
    </ref>
    <ref id="btz326-B34">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Natale</surname><given-names>J.L.</given-names></name></person-group><etal>et al</etal> (<year>2017</year>) Reverse-engineering biological networks from large data sets. arXiv: 1705.06370 [q-bio].</mixed-citation>
    </ref>
    <ref id="btz326-B35">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Ravichandran</surname><given-names>K.S.</given-names></name></person-group> (<year>2001</year>) 
<article-title>Signaling via Shc family adapter proteins</article-title>. <source>Oncogene</source>, <volume>20</volume>, <fpage>6322.</fpage><pub-id pub-id-type="pmid">11607835</pub-id></mixed-citation>
    </ref>
    <ref id="btz326-B36">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Razzaq</surname><given-names>M.</given-names></name></person-group><etal>et al</etal> (<year>2018</year>) 
<article-title>Computational discovery of dynamic cell line specific Boolean networks from multiplex time-course data</article-title>. <source>PLoS Comput. Biol</source>., <volume>14</volume>, <fpage>e1006538.</fpage><pub-id pub-id-type="pmid">30372442</pub-id></mixed-citation>
    </ref>
    <ref id="btz326-B37">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Sachs</surname><given-names>K.</given-names></name></person-group><etal>et al</etal> (<year>2005</year>) 
<article-title>Causal protein-signaling networks derived from multiparameter single-cell data</article-title>. <source>Science</source>, <volume>308</volume>, <fpage>523</fpage>–<lpage>529</lpage>.<pub-id pub-id-type="pmid">15845847</pub-id></mixed-citation>
    </ref>
    <ref id="btz326-B38">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Stolovitzky</surname><given-names>G.</given-names></name></person-group><etal>et al</etal> (<year>2007</year>) 
<article-title>Dialogue on reverse-engineering assessment and methods: the DREAM of high-throughput pathway inference</article-title>. <source>Ann. NY Acad. Sci</source>., <volume>1115</volume>, <fpage>1</fpage>–<lpage>22</lpage>.<pub-id pub-id-type="pmid">17925349</pub-id></mixed-citation>
    </ref>
    <ref id="btz326-B39">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Stolovitzky</surname><given-names>G.</given-names></name></person-group><etal>et al</etal> (<year>2009</year>) 
<article-title>Lessons from the DREAM2 Challenges</article-title>. <source>Ann. NY Acad. Sci</source>., <volume>1158</volume>, <fpage>159</fpage>–<lpage>195</lpage>.<pub-id pub-id-type="pmid">19348640</pub-id></mixed-citation>
    </ref>
    <ref id="btz326-B40">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Sugihara</surname><given-names>G.</given-names></name></person-group><etal>et al</etal> (<year>2012</year>) 
<article-title>Detecting causality in complex ecosystems</article-title>. <source>Science</source>, <volume>338</volume>, <fpage>496</fpage>–<lpage>500</lpage>.<pub-id pub-id-type="pmid">22997134</pub-id></mixed-citation>
    </ref>
    <ref id="btz326-B41">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Tringe</surname><given-names>S.G.</given-names></name></person-group><etal>et al</etal> (<year>2004</year>) 
<article-title>Enriching for direct regulatory targets in perturbed gene-expression profiles</article-title>. <source>Gen. Biol</source>., <volume>5</volume>, <fpage>R29.</fpage></mixed-citation>
    </ref>
    <ref id="btz326-B42">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Videla</surname><given-names>S.</given-names></name></person-group><etal>et al</etal> (<year>2015</year>) 
<article-title>Learning Boolean logic models of signaling networks with ASP</article-title>. <source>Theoret. Comp. Sci</source>., <volume>599</volume>, <fpage>79</fpage>–<lpage>101</lpage>.</mixed-citation>
    </ref>
    <ref id="btz326-B43">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wagner</surname><given-names>A.</given-names></name></person-group> (<year>2001a</year>) 
<article-title>How to reconstruct a large genetic network from n gene perturbations in fewer than n2 easy steps</article-title>. <source>Bioinformatics</source>, <volume>17</volume>, <fpage>1183</fpage>–<lpage>1197</lpage>.<pub-id pub-id-type="pmid">11751227</pub-id></mixed-citation>
    </ref>
    <ref id="btz326-B44">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wagner</surname><given-names>A.</given-names></name></person-group> (<year>2001b</year>) 
<article-title>The yeast protein interaction network evolves rapidly and contains few redundant duplicate genes</article-title>. <source>Mol. Biol. Evol</source>., <volume>18</volume>, <fpage>1283</fpage>–<lpage>1292</lpage>.<pub-id pub-id-type="pmid">11420367</pub-id></mixed-citation>
    </ref>
    <ref id="btz326-B45">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Yip</surname><given-names>K.Y.</given-names></name></person-group><etal>et al</etal> (<year>2010</year>) 
<article-title>Improved reconstruction of in silico gene regulatory networks by integrating knockout and perturbation data</article-title>. <source>PLoS One</source>, <volume>5</volume>, <fpage>e8121.</fpage><pub-id pub-id-type="pmid">20126643</pub-id></mixed-citation>
    </ref>
    <ref id="btz326-B46">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Yordanov</surname><given-names>B.</given-names></name></person-group><etal>et al</etal> (<year>2016</year>) 
<article-title>A method to identify and analyze biological programs through automated reasoning</article-title>. <source>NPJ Syst. Biol. Appl</source>., <volume>2</volume>, <fpage>16010</fpage>.<pub-id pub-id-type="pmid">27668090</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

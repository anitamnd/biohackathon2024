<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Nucleic Acids Res</journal-id>
    <journal-id journal-id-type="iso-abbrev">Nucleic Acids Res</journal-id>
    <journal-id journal-id-type="publisher-id">nar</journal-id>
    <journal-title-group>
      <journal-title>Nucleic Acids Research</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">0305-1048</issn>
    <issn pub-type="epub">1362-4962</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10954447</article-id>
    <article-id pub-id-type="pmid">38281191</article-id>
    <article-id pub-id-type="doi">10.1093/nar/gkae008</article-id>
    <article-id pub-id-type="publisher-id">gkae008</article-id>
    <article-categories>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI00010</subject>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>Narese/7</subject>
        <subject>Narese/24</subject>
      </subj-group>
      <subj-group subj-group-type="heading">
        <subject>Methods</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Smoother: on-the-fly processing of interactome data using prefix sums</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-5601-6349</contrib-id>
        <name>
          <surname>Schmidt</surname>
          <given-names>Markus R</given-names>
        </name>
        <!--markus.schmidt@lmu.de-->
        <aff><institution>Division of Experimental Parasitology, Faculty of Veterinary Medicine, Ludwig-Maximilians-Universität München</institution>, <addr-line>Munich</addr-line>, <country country="DE">Germany</country></aff>
        <aff><institution>Biomedical Center, Division of Physiological Chemistry, Faculty of Medicine, Ludwig-Maximilians-Universität München</institution>, <addr-line>Munich</addr-line>, <country country="DE">Germany</country></aff>
        <xref rid="COR2" ref-type="corresp"/>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0003-3487-1421</contrib-id>
        <name>
          <surname>Barcons-Simon</surname>
          <given-names>Anna</given-names>
        </name>
        <aff><institution>Division of Experimental Parasitology, Faculty of Veterinary Medicine, Ludwig-Maximilians-Universität München</institution>, <addr-line>Munich</addr-line>, <country country="DE">Germany</country></aff>
        <aff><institution>Biomedical Center, Division of Physiological Chemistry, Faculty of Medicine, Ludwig-Maximilians-Universität München</institution>, <addr-line>Munich</addr-line>, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-4943-4323</contrib-id>
        <name>
          <surname>Rabuffo</surname>
          <given-names>Claudia</given-names>
        </name>
        <aff><institution>Division of Experimental Parasitology, Faculty of Veterinary Medicine, Ludwig-Maximilians-Universität München</institution>, <addr-line>Munich</addr-line>, <country country="DE">Germany</country></aff>
        <aff><institution>Biomedical Center, Division of Physiological Chemistry, Faculty of Medicine, Ludwig-Maximilians-Universität München</institution>, <addr-line>Munich</addr-line>, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-1715-7907</contrib-id>
        <name>
          <surname>Siegel</surname>
          <given-names>T Nicolai</given-names>
        </name>
        <!--n.siegel@lmu.de-->
        <aff><institution>Division of Experimental Parasitology, Faculty of Veterinary Medicine, Ludwig-Maximilians-Universität München</institution>, <addr-line>Munich</addr-line>, <country country="DE">Germany</country></aff>
        <aff><institution>Biomedical Center, Division of Physiological Chemistry, Faculty of Medicine, Ludwig-Maximilians-Universität München</institution>, <addr-line>Munich</addr-line>, <country country="DE">Germany</country></aff>
        <xref rid="COR1" ref-type="corresp"/>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="COR1">To whom correspondence should be addressed. Tel: +49 89 2180 77098; Email: <email>n.siegel@lmu.de</email></corresp>
      <corresp id="COR2">Correspondence may also be addressed to Markus R. Schmidt. Tel: +49 89 2180 71635; Email: <email>markus.schmidt@lmu.de</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <day>21</day>
      <month>3</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2024-01-28">
      <day>28</day>
      <month>1</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>28</day>
      <month>1</month>
      <year>2024</year>
    </pub-date>
    <volume>52</volume>
    <issue>5</issue>
    <fpage>e23</fpage>
    <lpage>e23</lpage>
    <history>
      <date date-type="accepted">
        <day>08</day>
        <month>1</month>
        <year>2024</year>
      </date>
      <date date-type="rev-recd">
        <day>11</day>
        <month>12</month>
        <year>2023</year>
      </date>
      <date date-type="received">
        <day>03</day>
        <month>11</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2024. Published by Oxford University Press on behalf of Nucleic Acids Research.</copyright-statement>
      <copyright-year>2024</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="gkae008.pdf"/>
    <abstract>
      <title>Abstract</title>
      <p>Nucleic acid interactome data, such as chromosome conformation capture data and RNA–DNA interactome data, are currently analyzed via pipelines that must be rerun for each new parameter set. A more dynamic approach is desirable since the optimal parameter set is commonly unknown ahead of time and rerunning pipelines is a time-consuming process. We have developed an approach fast enough to process interactome data on-the-fly using a sparse prefix sum index. With this index, we created Smoother, a flexible, multifeatured visualization and analysis tool that allows interactive filtering, e.g. by mapping quality, almost instant comparisons between different normalization approaches, e.g. iterative correction, and ploidy correction. Further, Smoother can overlay other sequencing data or genomic annotations, compare different samples, and perform virtual 4C analysis. Smoother permits a novel way to interact with and explore interactome data, fostering comprehensive, high-quality data analysis. Smoother is available at <ext-link xlink:href="https://github.com/Siegel-Lab/BioSmoother" ext-link-type="uri">https://github.com/Siegel-Lab/BioSmoother</ext-link> under the MIT license.</p>
    </abstract>
    <abstract abstract-type="graphical">
      <title>Graphical Abstract</title>
      <p>
        <fig position="float" id="ga1">
          <label>Graphical Abstract</label>
          <graphic xlink:href="gkae008figgra1" position="float"/>
        </fig>
      </p>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>German Research Foundation</institution>
            <institution-id institution-id-type="DOI">10.13039/501100001659</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>CRC 1064/A33</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>German Research Foundation</institution>
            <institution-id institution-id-type="DOI">10.13039/501100001659</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>SI 1610/2-2</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>ERC Starting Grant</institution>
          </institution-wrap>
        </funding-source>
        <award-id>3D_Tryps 715466</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>ERC Consolidator Grant</institution>
          </institution-wrap>
        </funding-source>
        <award-id>101044320</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="13"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec sec-type="intro" id="SEC1">
    <title>Introduction</title>
    <p>Chromosome conformation capture (3C) methods, RNA–DNA and RNA–RNA interactome capture methods sequence pairs of nucleic acid fragments that are in spatial proximity. 3C methods include Hi-C (<xref rid="B1" ref-type="bibr">1</xref>), Micro-C (<xref rid="B2" ref-type="bibr">2</xref>), RCMC (<xref rid="B3" ref-type="bibr">3</xref>), Pore-C (<xref rid="B4" ref-type="bibr">4</xref>) and SPRITE (<xref rid="B5" ref-type="bibr">5</xref>), while methods like RADICL-seq (<xref rid="B6" ref-type="bibr">6</xref>), GRID-seq (<xref rid="B7" ref-type="bibr">7</xref>), RD-SPRITE (<xref rid="B8" ref-type="bibr">8</xref>) or RIC-seq (<xref rid="B9" ref-type="bibr">9</xref>) are commonly used to capture the RNA interactome. These sequenced fragment pairs are called ‘interactions’ and one fragment of the pair is an ‘interaction partner’. Population-level sequencing of such interactions, hence, reveals the average contact frequencies of genomic loci. Such contact frequencies are commonly processed into two-dimensional heatmaps by (i) mapping, (ii) filtering, (iii) binning, (iv) normalizing and (v) displaying (<xref rid="B10" ref-type="bibr">10–13</xref>): (i) An aligner is used to find one or many mapping loci for each interaction partner. Each locus is assigned a mapping quality, which expresses the aligner's confidence in the correctness of the locus. (ii) Unwanted interactions, such as those with low mapping qualities or those mapping to multiple loci are filtered out. (iii) Interactions are placed into bins of a given resolution. From this step on, the number of interactions within a bin is typically stored in favor of individual interactions. (iv) Subsequently, normalization strategies are applied to correct for different biases occurring during sample preparation or data processing, e.g. during PCR amplification, mapping or filtering. The normalization of choice depends on the data type and the analysis to be performed. Commonly, 3C data are normalized with Iterative Correction (IC) (<xref rid="B12" ref-type="bibr">12</xref>) or KR-balancing (<xref rid="B13" ref-type="bibr">13</xref>), while Binomial test (<xref rid="B6" ref-type="bibr">6</xref>) and Associated Slices normalization (<xref rid="B7" ref-type="bibr">7</xref>) are used for RNA–DNA interactome data. IC and KR-balancing equalize the visibility of a matrix by equalizing its column and row sums, while the Binomial test determines the statistical significance of each bin over the genome-wide coverage of the interacting RNA. Associated Slices normalizes each bin by the sum of <italic toggle="yes">trans</italic>, chromatin-associated interactions that share the bin's interacting RNA. (v) Normalized data are displayed as two-dimensional heatmaps either by conversion into images or inspection with interactive viewers (<xref rid="B14" ref-type="bibr">14–18</xref>). These viewers aggregate heatmaps of various resolutions into a single file to be able to display both high-resolution images for small subsections of the dataset and low-resolution images for overviews of the dataset. However, parameters such as the available resolutions, the type of normalization, or filter thresholds (mapping quality, annotation overlap) remain fixed at this point.</p>
    <p>In many cases, nucleic acid interactome data are used in an exploratory fashion, e.g. to gain a general overview of the DNA-DNA or RNA–DNA interactome. Even if there is a specific hypothesis, e.g. that the depletion of a protein will lead to a decrease in interactions between two specific genomic loci, optimal parameters for data analysis are commonly unknown in advance. Yet, pipeline-based approaches require the commitment to specific parameter values from the outset. This routinely requires the rerunning of pipelines until a suitable parameter set has been found. With runtimes of up to several hours per step, such pipeline rerunning is a time-consuming process.</p>
    <p>To address this challenge, we created Smoother, an interactome data analysis tool that allows changing analysis parameters by interaction with a graphical user interface. Here, the effects of these parameter changes are displayed as an updated heatmap within seconds. Interactive changes can be made for any of the filtering, binning, normalizing, and displaying steps. For example, reads with low mapping quality can be removed, the normalization strategy can be changed entirely or run with different parameters, and bin size can be modified. A naïve strategy to offer such interactivity would be to rerun the pipeline each time a parameter changes. However, such rerunning is not practicable, due to the large amount of time required to process interactome datasets. Alternatively, to eliminate the need of having to reprocess the datasets continuously, heatmaps for all possible parameter permutations could be precomputed. While such precomputed heatmaps could be displayed very efficiently, the large number of parameter permutations makes it impossible to precompute and store all possible heatmaps for a given dataset. To solve this problem, we developed a strategy to precompute and store an encoded and compressed version of the heatmaps for all possible parameter permutations using prefix sums (<xref rid="B17" ref-type="bibr">17</xref>,<xref rid="B18" ref-type="bibr">18</xref>).</p>
  </sec>
  <sec sec-type="materials|methods" id="SEC2">
    <title>Materials and methods</title>
    <sec id="SEC2-1">
      <title>Using prefix sums for counting the number of interactions in a bin</title>
      <p>With the large size of interactome datasets of &gt;<inline-formula><tex-math id="M0001" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${10}^7$\end{document}</tex-math></inline-formula> interactions per replicate, it was crucial to make the runtime of our approach independent of the dataset size. The same applies to large genome sizes (<italic toggle="yes">T. brucei</italic>’s genome assembly is 50 Mb long). With such large genomes, gaining an overview of the entire dataset requires computing large bins. Hence, no matter the number of interactions, the bin size and the genome size, processing a heatmap should always take the same amount of time.</p>
      <p>Such constant heatmap processing time can be achieved using prefix sums (<xref rid="B17" ref-type="bibr">17</xref>,<xref rid="B18" ref-type="bibr">18</xref>): We first introduce the one-dimensional case with an example. Let us consider a genome of size 8 and a set of interactions at the positions <inline-formula><tex-math id="M0001a" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\{ {1,\ 3,\ 3,\ 7} \}$\end{document}</tex-math></inline-formula>. We want to efficiently count the number of interactions in any given bin. For example, a bin with a range from 2 to 6 contains 2 interactions. To do so, we first compute the prefix sums for all positions on the genome. The prefix sum of a position is the number of interactions at or before this position. In our example, the prefix sum at position 6 would be 3, since 3 interactions (1, 3 and 3) lie at or before position 6. We compute these prefix sums once and store them in a file. Next, we use these prefix sums for counting the number of interactions in bins. This is done by subtracting the prefix sum for the start position of the bin from the prefix sum of its end position (e.g. for the bin starting at 2 and ending at 6: <inline-formula><tex-math id="M0002" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$3 - 1 = 2$\end{document}</tex-math></inline-formula>). Such subtraction yields the correct number of points since the prefix sum for the end position holds the number of interactions that lie at or before the end of the bin, while the prefix sum for the start position holds the number of interactions that lie at or before the start of the bin. Subtracting both numbers leaves us with the number of interactions within the bin. As intended, the effort required for counting the number of interactions in any bin using prefix sums is independent of the number of interactions, the genome size, and the bin size: for any bin and dataset, two prefix sums are looked up and subtracted. <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S1</xref> generalizes this approach to the <inline-formula><tex-math id="M0003" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$d$\end{document}</tex-math></inline-formula>-dimensional case.</p>
      <p>Alternative data structures to prefix sums could be R-trees or range trees. We opted to use prefix sums as they offer the fastest querying times by orders of magnitudes. <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S2</xref> compares these three data structures in more detail.</p>
    </sec>
    <sec id="SEC2-2">
      <title>Filtering interactions by mapping quality using an additional dimension</title>
      <p>Mapping quality expresses the aligner's confidence in the correctness of the alignment of a read. Therefore, a read that aligns equally well to two positions of the reference genome would produce two alignments with mapping quality zero, while a read that is completely distinct from all but one genomic locus would yield one alignment with a very high mapping quality (<xref rid="B19" ref-type="bibr">19</xref>).</p>
      <p>To filter out interactions with low mapping qualities on-the-fly, we moved from 2D to 3D prefix sums. Here, each interaction still has an <inline-formula><tex-math id="M0004" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$x$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math id="M0005" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$y$\end{document}</tex-math></inline-formula> position based on the alignments of the interaction partners. Additionally, we give each interaction a <italic toggle="yes">z</italic> position according to the alignments’ mapping qualities (we use the lower of the two mapping qualities). Then, instead of querying one rectangle for each bin of the heatmap, we query a cube. By varying the <italic toggle="yes">z</italic> position of the bottom face of these cubes, we filter out interactions with low mapping qualities (Figure <xref rid="F2" ref-type="fig">2A</xref>).</p>
      <p>A <inline-formula><tex-math id="M0006" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$d$\end{document}</tex-math></inline-formula>-dimensional index requires <inline-formula><tex-math id="M0007" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${2}^d$\end{document}</tex-math></inline-formula> lookups per counting operation, where each lookup corresponds to one corner of the queried <inline-formula><tex-math id="M0008" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$d$\end{document}</tex-math></inline-formula>-hyperrectangle (<xref rid="sup1" ref-type="supplementary-material">Supplementary Note S1</xref>). Hence, introducing a new dimension would slow our approach down by a factor of two. However, we know that the prefix sum of a position smaller than all interactions must be zero. Thus, points of a queried <inline-formula><tex-math id="M0009" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$d$\end{document}</tex-math></inline-formula>-hyperrectangle that lie below all interactions need no lookup, possibly reducing the query complexity. To make use of this reduced query time, we invert the <inline-formula><tex-math id="M00010" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$z$\end{document}</tex-math></inline-formula>-dimension of our index. This way, interactions with high mapping qualities lie at the bottom, while those with low mapping qualities are positioned at the top. We then filter out low mapping qualities by varying the height of the queried cubes’ top face (instead of the bottom face). Importantly, this way, the bottom face of all cubes is always located below the highest possible mapping quality. Hence, we know that all four corners of the bottom face have a prefix sum of zero and require no lookup. This reduces the number of lookups to four (instead of the eight usually required for cubes), making this filter have no query time penalty whatsoever.</p>
    </sec>
    <sec id="SEC2-3">
      <title>Rescuing multimapping interactions by counting rectangles instead of points</title>
      <p>As described above, we can use an additional dimension to filter out interactions that align equally well to multiple positions of the genome by filtering out interactions with mapping quality zero. However, we also offer a complementing feature to deal with such ambiguous alignments: an interaction that maps to multiple positions can lead to two separate situations, where either (i) alignments are distributed over several bins or (ii) all alignments are within the same bin. While displaying distributed alignments (case i) would lead to more noise in the heatmap, displaying confined alignments (case ii) does not. Case ii does not lead to noise, since, while we do not know the exact loci of a confined interaction, we do know that all possible loci of the interaction are within the same bin. Hence, we can safely count this interaction towards the bin. This is a simplified implementation of the approach of Zheng <italic toggle="yes">et al.</italic> (<xref rid="B20" ref-type="bibr">20</xref>).</p>
      <p>For implementing this feature, and so distinguishing cases (i) and (ii), we extended the prefix sum approach to storing and counting rectangles instead of points. These rectangles are generated by first determining all alignment loci of an interaction and then storing the smallest rectangle that encloses all these loci using prefix sums. We next filter out all distributed alignments (case i), by only counting rectangles that are fully enclosed by a bin (Figure <xref rid="F2" ref-type="fig">2B</xref>).</p>
      <p>First, we introduce the one-dimensional case, where fully enclosed intervals are counted (instead of rectangles): There, we count how many multimapper-intervals are fully enclosed in a given bin by subtracting the number of multimapper-intervals starting before the bin from the number of multimapper-intervals ending after the bin (see <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S3</xref>). This filters our intervals that overlap either edge of the bin. However, the approach cannot deal with intervals that fully enclose the bin (see <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S3</xref>). For filtering out such enclosing intervals we introduce an additional dimension. In this dimension intervals are placed at a position according to their width. We then filter out all intervals larger than the bin, and so any intervals that could potentially fully enclose the bin, by adjusting the bounds of the queried region in the filter dimension. For this additional dimension, no inversion of the axis is needed to improve runtime (as opposed to the mapping quality dimension), as we filter out large values to begin with. <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S3</xref> details how this approach can be generalized to the <inline-formula><tex-math id="M00011" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$d$\end{document}</tex-math></inline-formula>-dimensional case, storing <italic toggle="yes">d</italic>-dimensional hyperrectangles. Further, <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S3</xref> details how to count all overlapping instead of enclosed hyperrectangles.</p>
    </sec>
    <sec id="SEC2-4">
      <title>Filtering by annotation using two additional dimensions per annotation type</title>
      <p>RNA–DNA interactome data is often analyzed considering merely reads that originate from gene bodies. Since our goal is to make our index agnostic to the type of data that is stored, all analysis-related parameters shall be set during querying. Hence, we require a query time option to filter out reads that do not overlap gene bodies, or, more broadly, any chosen type of genomic annotation. For this, we introduced two filter dimensions per annotation type, where one dimension stores x- and the other y-axis overlaps. Interactions are then placed at position zero or one in each of these dimensions depending on whether they overlay the annotation type or not.</p>
      <p>Annotation overlap is checked individually for each locus of a multimapping interaction. The multimapper is then considered to overlap any annotation that at least one of its mapping loci overlaps.</p>
    </sec>
    <sec id="SEC2-5">
      <title>Annotation coordinates</title>
      <p>Some RNA interactome analyses do not show all reads, but merely those that fall within genes (<xref rid="B7" ref-type="bibr">7</xref>). Hence the bins of the heatmap do not lie consecutively on the genome (called ‘genomic coordinates’). Instead, each bin covers exactly one gene and the space between genes is not shown in the heatmap. We abstract from the specific type of annotation and allow the use of any type of annotation. We call this coordinate system ‘annotation coordinates’.</p>
      <p>To ensure that the render time of our approach is independent of the size of the rendered area, we need to ensure that the number of bins that are displayed is roughly constant. With genomic coordinates, we adjust bin width and height to keep the total number of displayed bins constant. For bins that follow annotation coordinates, we adjust the number of annotations that are displayed within a bin instead. Since prefix sums are stored using genomic coordinates in our index, we implemented a system to translate from annotation to genomic coordinates. For this, we store each annotation type as a sorted array, where each element keeps the genomic start and end position of one annotation instance. Using the first and last annotation contained in a bin, we translate the bin's annotation coordinates to its genomic coordinates for lookup in the index. Combining multiple annotations this way would also count interactions in the void space between the annotations. We hence make use of our annotation filter (described in the Materials and methods section ‘Filtering by annotation using two additional dimensions per annotation type’) to remove these unwanted interactions.</p>
    </sec>
    <sec id="SEC2-6">
      <title>Reducing file size and preprocessing time</title>
      <p>Storing or computing prefix sums for all possible loci in a data space, as suggested above, is not feasible since there are too many loci: We work with a relatively small (compared to human, for example), <inline-formula><tex-math id="M00012" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\sim 5*{10}^7$\end{document}</tex-math></inline-formula>nt long assembly of the organism <italic toggle="yes">T. brucei</italic>; Aligners can output 256 different mapping quality values; Rectangles can grow in width and height up to the size of the largest contig, hence <inline-formula><tex-math id="M00013" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\sim 5*{10}^6$\end{document}</tex-math></inline-formula> different values (for <italic toggle="yes">T. brucei</italic>); Finally, one prefix sum requires 32 bytes to store. Factoring up these numbers, we would require <inline-formula><tex-math id="M00014" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\sim {10}^{20}$\end{document}</tex-math></inline-formula> terabytes of storage for one index. Larger assemblies, such as the human genome, would require even more storage. Further, computing this many values would take an insurmountable amount of processing time and power.</p>
      <p>Conveniently, reducing the storage requirements and construction time of prefix sum indices has already been studied (<xref rid="B17" ref-type="bibr">17</xref>,<xref rid="B18" ref-type="bibr">18</xref>). We modified the sparse prefix sum approach of Shekelyan et al. (<xref rid="B17" ref-type="bibr">17</xref>) to our needs. They use one lookup table per dimension to translate the original data space into a sparse space. In this sparse space, all empty slices are removed. For example, if there is no point with a <inline-formula><tex-math id="M00015" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$y$\end{document}</tex-math></inline-formula> coordinate of 5, the entire slice <inline-formula><tex-math id="M00016" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$y = 5$\end{document}</tex-math></inline-formula> is removed in sparse space. These lookup tables span over the entire data space and store, for each position, the number preceding non-empty slices. Any data space coordinate can now be translated into sparse space by lookup in these tables. In sparse space, points are compressed while preserving their order of occurrence in any dimension. It is sufficient to store the prefix sums for all positions in sparse space, merely, since prefix sums cannot change in interaction-free slices.</p>
      <p>With an increasing number of datapoints, the efficiency of this compression diminishes. Hence, Shekelyan et al. divide the data space into an even grid of boxes, where each box has its individual sparse space and lookup tables. They pick the number of boxes to optimize the update complexity of the index. In our case, updates are not needed, allowing us to optimize the number of boxes to minimize index size instead. Index size is data-distribution-dependent and thus different for each dataset. We hence implemented an approach that heuristically predicts index size for any given number of boxes. Predicting index size for various numbers of boxes, we determine the minimal size and therefore the optimal number of boxes. Index size is predicted by picking 1000 boxes at random and determining their sparse space as well as the size of their lookup tables. Both values are determined by a binary search over all datapoints. (The datapoints are previously sorted ascendingly for each dimension.) We then extrapolate the average storage space of these boxes to the full index.</p>
      <p>To further reduce the required storage size, we divide the <inline-formula><tex-math id="M00017" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$x$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math id="M00018" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$y$\end{document}</tex-math></inline-formula> positions of all interactions by a constant dividend <inline-formula><tex-math id="M00019" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$d$\end{document}</tex-math></inline-formula>. This reduces the size of the abovementioned lookup tables. Further, interactions close to the 45<inline-formula><tex-math id="M00020" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$^\circ$\end{document}</tex-math></inline-formula> diagonal are often dense enough to make their divided positions concur, reducing the number of non-empty slices and therefore the size of the sparse space. The disadvantage of this approach is that the minimum bin size becomes limited to <inline-formula><tex-math id="M00021" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$d$\end{document}</tex-math></inline-formula>. We call <inline-formula><tex-math id="M00022" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$d$\end{document}</tex-math></inline-formula> the base resolution of the index.</p>
      <p>Finally, we also reduce storage size by storing each contig-pair as an individual matrix rather than concatenating them. This reduces index size since non-empty slices from dense contig-pairs (e.g. <italic toggle="yes">cis-</italic>contigs) do not affect sparse contig pairs when stored separately.</p>
    </sec>
    <sec id="SEC2-7">
      <title>Iterative correction and eigenvector decomposition for partial matrices</title>
      <p>State-of-the-art iterative correction (IC), as implemented in e.g. cooler (<xref rid="B21" ref-type="bibr">21</xref>), is designed to run on a complete and symmetric Hi-C matrix. However, our index-based approach gains its runtime advantage from merely processing the part of the matrix that is currently visible. Hence, we need to adapt IC to be used on partial matrices. This adaptation is composed of two separate tasks: First, IC needs to work on asymmetric matrices; second, IC needs to approximate the effect of the missing bins.</p>
      <p>For dealing with asymmetric matrices, we modified the IC approach to use two sets of biases, one for each dimension. This is necessary since even if the full matrix is symmetric, the currently visible region of that matrix might not be symmetric without the larger context. In <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S4</xref>, we show that our modification has no effect on symmetric matrices. This proves that the modification is valid.</p>
      <p>Second, we sample a subset of the missing bins. A large enough number of samples is expected to even out to the average background of the heatmap. Samples must preserve the rectangular shape of the heatmap and cannot leave empty bins for ICing to work. We hence place samples as evenly spaced concentric rings around the visible area. Here, each ring is one sample that decomposes into several bins to match the columns and rows of the heatmap and previous samples. The bin size of samples is even to the size of bins in the visible area. Sample bins that are outside of the genome are omitted. This way, each sample adds up to two rows and two columns to the heatmap. <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S4</xref> gives an example. In the results section, we analyze the number of samples necessary to minimize the noise this sampling-based approach introduces.</p>
    </sec>
    <sec id="SEC2-8">
      <title>Associated slices normalization for partial matrices</title>
      <p>RNA-DNA interactome data can be normalized using the approach of Li et al. (<xref rid="B7" ref-type="bibr">7</xref>). This normalization consists of two main steps: First, all interactions with an RNA partner that does not originate from within a chromatin-associated gene body are filtered out. Second, all bins are normalized by the sum of <italic toggle="yes">trans</italic> interactions of chromatin-associated gene bodies for the respective RNA locus.</p>
      <p>We now introduce how to compute this normalization without access to the full matrix. First, we determine chromatin-associated gene bodies. To avoid scanning the whole genome, we take evenly-spaced samples of gene bodies (or any type of genomic annotation). In the results section, we analyze which number of samples is necessary to minimize differences between our sampling-based and the global approach. We compute two properties for each sampled gene body: Its average RNA reads per kbp and its maximal DNA reads in a 1 kbp-binned genome. Average RNA reads per kbp are determined by querying the total amount of RNA reads for the gene body (this requires one query per contig, using a bin that spans the gene body on one dimension and the whole contig on the other dimension) and dividing by genome size. Computing the maximal number of DNA reads in a 1 kbp binned genome is not as trivial: Querying every 1 kbp region one by one is not efficient enough. Hence, we use a recursive divide-and-conquer approach: First, we query each complete contig as one ‘region’. We store the queried regions in a max heap, recursively picking out the region with the highest count, splitting it in half, and re-querying it. Once the largest region is of size 1 kbp, we have reached the correct result. Following Li et al.(<xref rid="B7" ref-type="bibr">7</xref>) we then proceed to designate chromatin-associated gene bodies by applying thresholds to the average RNA reads and maximal DNA reads.</p>
      <p>Next, we compute the RNA coverage of <italic toggle="yes">trans</italic> interactions in chromatin-associated gene bodies for the visible region of the heatmap. For this, we require one query per gene body and visible slice. Finally, we normalize the shown bins by this coverage. <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S5</xref> gives an example of this sampling approach. In the results section, we analyze the number of samples necessary to minimize the noise this sampling-based approach introduces.</p>
    </sec>
    <sec id="SEC2-9">
      <title>Binomial test normalization for partial matrices</title>
      <p>RNA-DNA interactome data can be normalized using the approach of Bonetti et al. (<xref rid="B6" ref-type="bibr">6</xref>). There, they apply a Binomial test to ascertain whether a bin is statistically significant or not. Following Bonetti et al. (<xref rid="B6" ref-type="bibr">6</xref>), we use a Binomial test and correct p-values using the Benjamini/Hochberg method. To approximate applying this normalization to the full matrix, we use a sampling-based approach. We place samples as additional rows above and below the heatmap, where bins in the samples preserve the columns of the heatmap. <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S6</xref> gives an example. In the results section, we analyze the number of samples necessary to minimize the noise this sampling-based approach introduces.</p>
    </sec>
    <sec id="SEC2-10">
      <title>Distance dependent decay normalization for partial matrices</title>
      <p>To be able to normalize our matrices by distance dependent decay (DDD), without computing the full matrix, we apply the following scheme: While computing the locations of all bins, we record their distance to the diagonal of the heatmap. Here, the distance can be positive or negative to differentiate the regions right and left of the diagonal (this becomes relevant in the case of asymmetric data). For each recorded distance from the diagonal on each contig-pair, we then sample evenly spaced bins. These sampled bins are of the same size as the displayed bins; They are placed at the recorded distance from the diagonal and spaced evenly in a parallel fashion to the diagonal. We then query the number of interactions in the sampled bins. To compute the DDD for each distance from the diagonal on each contig-pair, we exclude the <inline-formula><tex-math id="M00023" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$x$\end{document}</tex-math></inline-formula>th top and bottom percentile of sampled bins and average the number of interactions from the remainder. Excluding the top and bottom percentiles of sampled bins is necessary to remove the impact of loops and under-sampled regions, respectively. We compute the average number of interactions instead of the median to deal with sparse data, where most values are zero or one. Such a situation would yield a median that jumps between zero and one, and so, in turn, a noisy picture. <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S7</xref> gives an example of this sampling.</p>
    </sec>
    <sec id="SEC2-11">
      <title>Correcting for ploidy</title>
      <p>Typically, interactome data are mapped on a consensus haploid assembly and the analysis assumes that each chromosome is represented an equal number of times. However, organisms can display aneuploidy, where the physical chromosome number is not a multiple of the haploid set. In such cases, the chromosome number of the <italic toggle="yes">in silico</italic> genome assembly would not correspond to the number of physical chromosomes. As a result, some interactions may be over- or underestimated. The same misestimation can arise from chromosomes in the same chromosomal set that contain both homozygous regions, collapsed in the assembly, and heterozygous regions that are assembled as separate contigs. From now on, we will refer to contigs that <italic toggle="yes">in silico</italic> do not match their physical copy number as ‘misrepresented’ and we will call such physical copy number ‘<italic toggle="yes">n</italic>-ploidy’.</p>
      <p>To correct for aneuploidy, we implement a strategy that distributes interactions among misrepresented contig-pairs. In detail, we make <italic toggle="yes">n</italic>-ploid contigs appear as <italic toggle="yes">n</italic> ‘instances’ in the heatmap. Then, interactions in misrepresented contig-pairs are divided evenly among the instances of the contigs (Figure <xref rid="F2" ref-type="fig">2E</xref>). For example, an interaction between a diploid and a triploid contig would count with 1/6 towards each of the 6 (2*3) instances of the corrected contig-pair. An interaction between the same triploid contig and a haploid contig would contribute 1/3 to each of the 3 instances of this contig-pair.</p>
      <p>For intra-contig interactions, we assume that all interactions occur intra-instance-wise. Hence, an intra-contig interaction of the triploid contig (with instances A, B, and C) would count 1/3 towards the instance pair A-A, 1/3 towards B-B, and 1/3 towards C-C. The interaction would not count towards any of the other instance-pairs (A-B, B-A, A-C, …). While this assumption does not hold true in nature, it is closer to actual reality than splitting interactions up evenly among all instance pairs.</p>
      <p>Finally, we consider the case where chromosomes have varying zygosities. An example is <italic toggle="yes">T. brucei:</italic> Its genome is organized in diploid chromosomes, with homozygous core regions and heterozygous subtelomeric regions (<xref rid="B22" ref-type="bibr">22</xref>,<xref rid="B23" ref-type="bibr">23</xref>). In the genome assembly, such a chromosome (e.g. chromosome 1) is composed of five contigs: two contigs for the 3′ subtelomere (3′A<sub>chr1</sub> and 3′B<sub>chr1</sub>), one contig for the core (core<sub>chr1</sub>), and two contigs for the 5′ subtelomere (5′A<sub>chr1</sub> and 5′B<sub>chr1</sub>). In this case, ploidy correction works by defining the following two groups: 3′A<sub>chr1</sub>-coreA<sub>chr1</sub>-5′A<sub>chr1</sub>, 3′B<sub>chr1</sub>-coreB<sub>chr1</sub>-5′B<sub>chr1</sub>, where coreA<sub>chr1</sub> and coreB<sub>chr1</sub> are two instances of the core<sub>chr1</sub> contig. As with intra-contig interactions, we assume intra-group interactions to take prevalence. In detail, for every contig pair where at least one contig has multiple instances, interactions are split among the pair's instances that are within a group, if at least one pair-instance is within a group. Otherwise, interactions are split among all instances. Hence, interactions occurring between 5′A<sub>chr1</sub> and core<sub>chr1</sub> would be assigned to the 5′A<sub>chr1</sub>-coreA<sub>chr1</sub> instance and not to 5′A<sub>chr1</sub>-coreB<sub>chr1</sub>. Furthermore, interactions between core<sub>chr1</sub> and 5′A<sub>chr2</sub>, a heterozygous contig of chromosome 2, would be evenly distributed between coreA<sub>chr1</sub>-5′A<sub>chr2</sub> and coreB<sub>chr1</sub>-5′A<sub>chr2</sub>. <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S8</xref> gives an example.</p>
    </sec>
    <sec id="SEC2-12">
      <title>Virtual 4C</title>
      <p>Virtual 4C is an analysis technique where a range on the x- or y-axis of the heatmap is chosen as the viewpoint. The values of bins falling in the range of this viewpoint are then displayed as a one-dimensional graph on the opposite axis. We implement on-the-fly virtual 4C computation. Notably, using prefix sums enables us to place bins such that they span over the complete viewpoint, even for multi-bin-sized viewpoints, making virtual 4C analysis particularly efficient.</p>
    </sec>
    <sec id="SEC2-13">
      <title>Enhancing the reusability of Smoothers implementation</title>
      <p>To enhance the reusability of Smoother, we split our implementation into three different projects: libSps, libSmoother, and Smoother. libSps is a datatype agnostic <underline>s</underline>parse <underline>p</underline>refix <underline>s</underline>um <underline>lib</underline>rary that is available as a standalone C++17 library, compatible with Windows, Linux, and macOS. It implements multidimensional range count queries on a given set of datapoints or hyperrectangles. Our library can either load the entire index into main memory on startup or use stxxl's (<xref rid="B24" ref-type="bibr">24</xref>) cached vectors to load and unload components as required. Keeping the entire index in main memory allows for better runtimes but cannot be done if main memory is smaller than the index. Further, libSps relies on Pybind11, so that it can be imported as a Python 3 module.</p>
      <p>Secondly, libSmoother is a C++17 library (compatible with Windows, Linux, and macOS) that takes care of all tasks related to interactome data, such as normalizing, coloring the heatmap, and computing the locations of bins. It makes use of libSps for the computationally expensive task of counting and filtering interactions. To avoid computing values multiple times, libSmoother is implemented as a computational graph. Using this graph, each step is aware of which parameters are relevant to it. Upon a parameter change, only steps that depend on the changed parameter are recomputed. libSmoother also relies on Pybind11 to be importable as a Python 3 module.</p>
      <p>Finally, Smoother, our visualization tool, is implemented in Python 3. It makes use of libSmoother as a backend. Further, it uses Bokeh to offer a web browser-based interface, running under Google Chrome, Safari, and Firefox. By being browser-based, Smoother can be deployed both as a webpage or standalone tool.</p>
    </sec>
  </sec>
  <sec sec-type="results" id="SEC3">
    <title>Results</title>
    <sec id="SEC3-1">
      <title>Smoother processes interactome data on-the-fly using a prefix sum index</title>
      <p>To be able to process interactome data fast enough for an interactive workflow, we broke with the pipeline paradigm that state-of-the-art interactome data analyses follow (<xref rid="B10" ref-type="bibr">10–12</xref>) (Figure <xref rid="F1" ref-type="fig">1A</xref>). Instead, our approach precomputes an index in a parameter-independent manner. Using this index, heatmaps with arbitrary filter parameters, bin size, and normalization, are then generated within seconds (Figure <xref rid="F1" ref-type="fig">1B</xref>).</p>
      <fig position="float" id="F1">
        <label>Figure 1.</label>
        <caption>
          <p>Outline of pipeline-based and index-based data analyses. <bold>(A)</bold> The top path outlines state-of-the-art pipeline-based processing of interactome data. Components of such pipelines are parameterized (black arrows) and can take up to several hours to run. The bottom path outlines our proposed index-based analysis. We preprocess all data into an index in a parameter-independent fashion. Using this index, the actual parameterized data processing can then be done within seconds. <bold>(B)</bold> Parameters of every processing step have a significant impact on the resulting heatmaps. The left panel displays various filters: all interactions, interactions with high mapping quality, and interactions that overlap a gene on the x-axis. The central panel shows interactions binned at various resolutions: 10, 50, and 200 kbp. The right panel illustrates data normalized by various approaches: unnormalized, ICed, as well as both ICed and normalized by Distance Dependent Decay (DDD). All panels show Hi-C data (<xref rid="B22" ref-type="bibr">22</xref>) from the central region of chromosome 8 of <italic toggle="yes">Trypanosoma brucei</italic>.</p>
        </caption>
        <graphic xlink:href="gkae008fig1" position="float"/>
      </fig>
      <p>Our index uses prefix sums to allow for constant time range sum queries (<xref rid="B17" ref-type="bibr">17</xref>,<xref rid="B18" ref-type="bibr">18</xref>). A range sum query computes the number of data points that lie in a given range. Importantly, with constant time queries, the time it takes to perform the queries does not increase with variables such as larger bin size, the number of interactions stored in the index, or the size of the analyzed genome. Decoupling the processing time from these variables is what allows on-the-fly data analysis.</p>
    </sec>
    <sec id="SEC3-2">
      <title>A multidimensional prefix sum index enables various filters</title>
      <p>A two-dimensional prefix sum index allows querying the number of interactions in bins with arbitrary sizes and positions. However, it is common to filter these interactions by various criteria. Hence, we extended our prefix sum index to allow such filtering on-the-fly, while keeping the index's runtime properties.</p>
      <p>One of the most common ways to filter interactome data is to remove interactions with low mapping quality. For such quality filtering, we introduced a third dimension to our index, where we place interactions at a position according to their mapping qualities. We then adjust the bounds of the queried region in that dimension to exclude interactions with mapping qualities outside of a desired range (Figure <xref rid="F2" ref-type="fig">2A</xref>). As before, we use prefix sums, to ensure fast processing times. Interactions with low mapping quality may be multimappers. Multimappers are interactions where one or both of the interaction partners map to multiple loci on the genome. Such multimappers may or may not need to be considered during the analysis. Therefore, we developed a strategy that stores each multimapper as the smallest possible rectangle that encloses all of its mapping loci. Multimappers can then be counted towards a bin if their stored rectangles are fully enclosed by the bin (Figure <xref rid="F2" ref-type="fig">2B</xref>).</p>
      <fig position="float" id="F2">
        <label>Figure 2.</label>
        <caption>
          <p>An overview of the on-the-fly data processing that is possible with Smoother. Shown here is <italic toggle="yes">Mus musculus</italic> RADICL-seq data from Bonetti et al. (<xref rid="B6" ref-type="bibr">6</xref>) and <italic toggle="yes">T. brucei</italic> Hi-C data from Müller et al. (<xref rid="B22" ref-type="bibr">22</xref>). <bold>(A)</bold> Interactions are filtered by mapping quality using a third dimension in the index. <bold>(B)</bold> Multimapping interactions count towards a bin if they are fully enclosed by the bin. This is done dynamically, considering the current bin size. <bold>(C)</bold> Middle panel: Interactions are filtered by whether they overlap an annotation or not. In this example, only interactions that overlap a gene on the y-axis are kept. Bottom panel: Instead of spacing bins out evenly over the genome, each bin is placed on one annotation. In this example, each heatmap column corresponds to a gene. <bold>(D)</bold> Ploidy-corrected heatmaps can be generated. <bold>(E)</bold> A virtual 4C analysis summarizes a slice of the heatmap into a graph. <bold>(F)</bold> ChIP-seq data and genomic annotations are overlaid onto the heatmap. <bold>(G)</bold> Two datasets, e.g. wild type (WT) and H3.V double knockout (H3.V<sup>−/−</sup>) cells, are compared by subtraction.</p>
        </caption>
        <graphic xlink:href="gkae008fig2" position="float"/>
      </fig>
      <p>For RNA-DNA interactome data, it is common to filter out interactions that do not align to a gene with their RNA interaction partner (<xref rid="B7" ref-type="bibr">7</xref>). We thus introduced a fourth dimension to our index that allows filtering out such interactions. Generalizing from genes, we allow filtering by any type of genomic annotation, on either or both axes (Figure <xref rid="F2" ref-type="fig">2C</xref>). With all non-gene interactions filtered out, RNA-DNA interactome data is then displayed such that, on one axis, each bin corresponds to one gene (called annotation coordinates), while bins on the other axis are consecutive and cover the whole genome (called genomic coordinates) (Figure <xref rid="F2" ref-type="fig">2C</xref>). Combining this coordinate system with the annotation overlap filter, Smoother can display heatmaps in the GRID-seq (<xref rid="B7" ref-type="bibr">7</xref>) fashion.</p>
      <p>Some cell lines and some organisms display aneuploidy or have genomic regions that are highly heterozygous. Both cases result in a situation where the ratio of the genome assembly's contigs to the corresponding physical chromosomes varies. We designed a ploidy correction scheme that splits interactions evenly among such contigs (Figure <xref rid="F2" ref-type="fig">2D</xref>).</p>
      <p>For further downstream analyses, we extended Smoother with several features: First, virtual 4C graphs (Figure <xref rid="F2" ref-type="fig">2E</xref>) can be computed. Virtual 4C refers to an approach where a slice of the heatmap is displayed as a one-dimensional graph. Typically, it is used to highlight interactions from a specific genomic locus, called the ‘viewpoint’. Next, one-dimensional sequencing data as well as annotations can be overlaid on the heatmap (Figure <xref rid="F2" ref-type="fig">2F</xref>). Furthermore, two datasets can be compared by subtraction or division (Figure <xref rid="F2" ref-type="fig">2G</xref>). Finally, Smoother can export publication-quality vector graphics (as SVG files), raster graphics (as PNG files), and raw data (as TSV files).</p>
    </sec>
    <sec id="SEC3-3">
      <title>On-the-fly normalization of interactome data</title>
      <p>To normalize interactome data, we implemented several approaches. For Hi-C data, these include IC (<xref rid="B12" ref-type="bibr">12</xref>) and Distance Dependent Decay (DDD) normalization. For RNA-DNA interactome data, we implemented normalization by Associated Slices (<xref rid="B7" ref-type="bibr">7</xref>), and Binomial test (<xref rid="B6" ref-type="bibr">6</xref>).</p>
      <p>In pipeline-based approaches, all these normalizations run on full matrices. However, Smoother achieves its performance by keeping a constant number of bins for every computed heatmap. When visualizing larger sections of a genome, the bin number is kept constant by increasing the bin size. Further, when zooming in to look at smaller regions of a genome, a constant number of bins is maintained by omitting bins outside of these regions of interest. This omission of bins prevents the use of normalization techniques that are designed to work on a full matrix. To solve this problem, we extended normalizations with a sampling strategy that considers some bins outside of the visible area during normalization. We argue that normalizations will behave as if they were applied to the full matrix, given a large enough number of samples. To evaluate our approach, we subdivided matrices into evenly sized windows. We then normalized each of those windows separately and concatenated them back together before comparing them to a matrix that was normalized in its entirety. For all normalizations, we find that normalizing with an increasing number of samples approaches normalizing over the whole matrix (Figure <xref rid="F3" ref-type="fig">3A</xref> and <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S9</xref>). To quantify these results, we computed the mean deviation of bin values from heatmaps normalized in windows and globally. Next, we plotted the mean deviations as a function of the number of samples (Figure <xref rid="F3" ref-type="fig">3B</xref>). For all normalizations, we find the mean deviation to decrease with an increasing number of samples (Figure <xref rid="F3" ref-type="fig">3C</xref>). While IC, Associated Slices, and DDD reach a deviation of zero with <inline-formula><tex-math id="M00024" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$ \sim$\end{document}</tex-math></inline-formula>1000 samples, Binomial test approaches zero more slowly. While varying the bin and window size may shift deviation up or down, neither variable affects the general trend that is observed (Figure <xref rid="F3" ref-type="fig">3B</xref> and <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S9</xref>). To obtain a good balance between accurate normalization (large number of bins sampled outside the visible area) and fast processing speed (small number of bins sampled outside the visible area), we set the following number of samples as default: 300 samples for IC, 1000 samples for Associated Slices, 100 for Binomial test, and 200 for DDD normalization. However, the number of samples can be adjusted in Smoother on-the-fly.</p>
      <fig position="float" id="F3">
        <label>Figure 3.</label>
        <caption>
          <p>Analyzing sampling-based normalization. <bold>(A)</bold><italic toggle="yes">T. brucei</italic> Hi-C data from Müller et al.(<xref rid="B22" ref-type="bibr">22</xref>). The left panel shows unnormalized data, while the right panel shows data that is IC normalized over the entire genome. For the central 3 panels, the genome is split into 5 Mbp-sized windows, which are ICed separately. In addition to the bins within a window, bins of 10, 100, and 1000 sample loci are also considered for ICing. Shown are only the first 3 windows of the full heatmap. <bold>(B)</bold> Left: quantification of A). Mean deviation of heatmap bins is plotted as a function of the number of samples. Running experiments for three different bin and window sizes shows that behavior is consistent across conditions. Right: mean time required to compute one window using default parameters and IC normalization as a function of the number of samples. <bold>(C)</bold> IC and DDD normalization are tested on <italic toggle="yes">T. brucei</italic> Hi-C data from Müller et al. (<xref rid="B22" ref-type="bibr">22</xref>), while Associates Slices and Binomial test are tested on <italic toggle="yes">M. musculus</italic> RADICL-seq data from Bonetti et al. (<xref rid="B6" ref-type="bibr">6</xref>). Left: Mean deviation of heatmap bins is plotted as a function of the number of samples for various normalizations. A bin size of 100 kbp and a window size of 5 Mbp is used for all approaches. Right: time required to compute one heatmap window using default parameters is plotted as a function of the number of samples for various normalizations. A bin size of 100 kbp and a window size of 5 Mbp is used for all approaches.</p>
        </caption>
        <graphic xlink:href="gkae008fig3" position="float"/>
      </fig>
      <p>Further, for 3C normalizations, we extended the approaches to deal with asymmetric data. This extension is necessary since subsections of a symmetrical matrix that are not centered on the diagonal are asymmetrical, even with our sampling approach. Additional details on how normalizations are extended and how their sampling is implemented can be found in the Materials and methods section.</p>
    </sec>
    <sec id="SEC3-4">
      <title>Benchmarking of Smoother reveals processing times in the millisecond range</title>
      <p>We benchmarked Smoother, analyzing processing times, index size, and preprocessing times. To obtain an overview of our approach for different datasets, we varied the base resolution of our index, the number of interactions in the dataset, the reference genome, and the set of activated filters.</p>
      <p>To evaluate index file size, we first merged two wild-type <italic toggle="yes">T. brucei</italic> Hi-C datasets (genome size <inline-formula><tex-math id="M00025" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\sim$\end{document}</tex-math></inline-formula>50 Mbp, number of interactions: <inline-formula><tex-math id="M00026" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\sim$\end{document}</tex-math></inline-formula>50 million) (<xref rid="B22" ref-type="bibr">22</xref>,<xref rid="B23" ref-type="bibr">23</xref>). By subsampling from the merged dataset to 20%, 40%, 60%, and 80%, we show that index file size increases at a decreasing rate with the number of interactions in the dataset (Figure <xref rid="F4" ref-type="fig">4A</xref>). This slowdown continues until every bin contains at least one interaction. At this point, the index is saturated. Adding further interactions would merely increase the values of the prefix sums in the file but not introduce new bins that need to be stored. Hence, once saturation is reached file size does not increase any further. Indices can be built with varying base resolutions. The base resolution of an index is the highest resolution the index can be used to create heatmaps. In theory, base resolution can reach up to a single base pair; however, practically, higher base resolutions increase file size, so limiting the base resolution to for example 5 kbp is reasonable. Additionally, we showed that index preprocessing time is relative to the file size (<xref rid="sup1" ref-type="supplementary-material">Supplementary Note S10</xref>–<xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S14A</xref>).</p>
      <fig position="float" id="F4">
        <label>Figure 4.</label>
        <caption>
          <p>Benchmarking index size and speed. <bold>(A)</bold> Index file size as a function of the number of stored unique interactions. <bold>(B)</bold> Time required to compute one heatmap using default parameters as a function of the number of unique interactions in the index. <bold>(C)</bold> Index file size as a function of the genome size. <bold>(D)</bold> Index file size for different active and inactive filters.</p>
        </caption>
        <graphic xlink:href="gkae008fig4" position="float"/>
      </fig>
      <p>Next, we measured processing times for 1000 heatmaps with Smoother's default parameters. Here, we measured the time required to compute a heatmap. We show that, as expected using prefix sums, processing time stays constant when the number of stored interactions increases across various base resolutions (Figure <xref rid="F4" ref-type="fig">4B</xref> and <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S10</xref>–<xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S14B</xref>).</p>
      <p>To measure the effect of varying genome size, we obtained Hi-C data from <italic toggle="yes">Escherichia coli</italic> (<xref rid="B25" ref-type="bibr">25</xref>), <italic toggle="yes">Saccharomyces cerevisiae</italic> (<xref rid="B26" ref-type="bibr">26</xref>), <italic toggle="yes">T. brucei</italic> (<xref rid="B22" ref-type="bibr">22</xref>,<xref rid="B23" ref-type="bibr">23</xref>), and <italic toggle="yes">Drosophila melanogaster</italic> (<xref rid="B27" ref-type="bibr">27</xref>) and down-sampled the datasets to an even density of 1000 interactions per squared mega-base pair. Such even density is crucial to measure the effect of varying genome size exclusively instead of measuring a combined effect of genome size and number of interactions in the dataset. We then measured index file size for all datasets (Figure <xref rid="F4" ref-type="fig">4C</xref>) and find that file size grows linearly with genome size, except for very small genomes. This demonstrates the effectiveness of the applied index compression, as an uncompressed index would have a file size that scales with the square of the genome size (see the Methods section ‘Reducing file size and preprocessing time’). Again, we confirmed that preprocessing times correlate with file size (<xref rid="sup1" ref-type="supplementary-material">Supplementary Note S10</xref>–<xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S14C</xref>) and that processing speed is roughly constant (<xref rid="sup1" ref-type="supplementary-material">Supplementary Note S10</xref>–<xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S14D</xref>) for varying genome sizes.</p>
      <p>Finally, we measured the effect of our filters on the index file size, using the <italic toggle="yes">T. brucei</italic> dataset. For this purpose, we removed the information relevant to the filters from the dataset before generating the index. For example, for the mapping quality, we placed all interactions at a default value in the mapping quality dimension. Comparing an index with filters to one without filters, we observe a ∼10-fold file size (Figure <xref rid="F4" ref-type="fig">4D</xref>) and ∼3-fold preprocessing speed (<xref rid="sup1" ref-type="supplementary-material">Supplementary Note S10</xref>–<xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S14E</xref>) difference. Filters increase index size, as each interaction is placed at a position representing its value for the corresponding filter in the index. For inactive filters, however, interactions are placed at a default value, hence reducing the size of the area that is covered by the index. Accordingly, we see index size vary significantly; however, processing time increases only minimally (∼1.5-fold; <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S10</xref>–<xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S14F</xref>). <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S11</xref> gives an overview of the number of dimensions used for each filter.</p>
      <p>In summary, Smoother's processing time stays almost constant as the amount of data increases, regardless of whether the increase is in the number of interactions, genome size, number of filters, or base resolution. Instead, the computational overhead of increased data amount now affects the file size of the index. The most significant increase in file size is observed with increasing genome size and base resolution. Even though each filter has a significant impact on the file size, the overall effect is small because the number of filters is small. Further, large numbers of interactions can be tolerated better than large genome sizes. However, we obtained reasonable index file sizes for any datasets with genomes smaller than 150 Mbp thus making Smoother perfectly suited for the analysis of archaea, bacteria, most fungi, nematodes, and many protists.</p>
    </sec>
  </sec>
  <sec sec-type="discussion" id="SEC4">
    <title>Discussion</title>
    <p>Here, we developed Smoother, a tool to analyze and visualize nucleic acid interactome data on-the-fly. To our knowledge, Smoother is the first tool that offers ultrafast, on-the-fly analysis of interactome data. This analysis includes, among others, filtering interactions by their mapping quality, and by whether they overlap annotations. Further, Smoother rescues multimapping interactions, corrects for ploidy, normalizes with various methods, compares different datasets, and offers downstream analyses such as virtual 4C.</p>
    <p>Smoother is based on prefix sums. We chose this approach as it minimizes the runtime required to query interaction counts. In contrast, storing interactions as a count matrix, as is done for pipeline-based approaches (<xref rid="B20" ref-type="bibr">20</xref>,<xref rid="B21" ref-type="bibr">21</xref>,<xref rid="B28" ref-type="bibr">28</xref>), requires storing bins for each permutation of filter values. While querying bins, relevant permutations then have to be summed up, slowing down runtime based on the chosen filter thresholds. To maintain this theoretical runtime advantage of prefix sums in real-world applications, index compression must be chosen accordingly. For example, Shekelyan et al.’s (<xref rid="B17" ref-type="bibr">17</xref>) approach is suited for this, since they maintain linear query complexity. In contrast, sparse coordinate lists, the approach that is commonly used to store count matrices (<xref rid="B21" ref-type="bibr">21</xref>), increase the runtime complexity. While either compression could be applied to both prefix sum and count matrices, we chose Shekelyan et al.’s approach for its better runtime behavior despite its lower compression rate. In addition to the lower compression rate, index size is increased by prefix sums requiring more bins to be stored than count matrices (<xref rid="sup1" ref-type="supplementary-material">Supplementary Note S12</xref>). However, the improved runtime behavior by prefix sums and the chosen compression, combined, allows on-the-fly data analysis.</p>
    <p>Further, prefix sums remove the need to coarsen heatmaps to various resolutions as is done with count matrices (<xref rid="B21" ref-type="bibr">21</xref>). Prefix sums even supersede the abilities of coarsening and allow computing bins at any resolution and position, whereas coarsening limits the chosen resolutions and bin positions.</p>
    <p>Since our approach is optimized for runtime complexity (speed), the file size of our index becomes a limiting factor. For species with large genomes, such as the human genome, even indices with a low base resolution of 50 kbp are larger than 100 Gb. File size can be reduced significantly by deactivating filters; however, this will also lead to Smoother losing some of its on-the-fly analysis capabilities. Instead of deactivating filters, future research could try to optimize the number of dimensions used by the individual filters. There are several reasons analysis tools based on count matrices are better at handling large genomes than our prefix sums based approach. Primarily, count matrices’ can be compressed more strongly. In addition, fewer interactions are stored in count matrices, as filtering is done beforehand, removing some interactions from the file. Finally, less data is stored for each interaction. For example, mapping quality, annotation overlap, and multimapping loci are not tracked.</p>
    <p>In summary, Smoother is ideally suited to analyze interactome data of many invertebrate genomes, such as those from many unicellular parasites like <italic toggle="yes">Plasmodium falciparum</italic>, <italic toggle="yes">Toxoplasma gondii</italic>, <italic toggle="yes">Trypanosoma brucei</italic>, many yeast species, and bacteria, where optimal analysis parameters are uncertain (<xref rid="B25" ref-type="bibr">25</xref>,<xref rid="B26" ref-type="bibr">26</xref>,<xref rid="B29" ref-type="bibr">29</xref>,<xref rid="B30" ref-type="bibr">30</xref>). Due to the integrated ploidy correction, Smoother is further excellently suited to analyze aneuploid organisms such as <italic toggle="yes">Trypanosoma cruzi</italic> and <italic toggle="yes">Leishmania spp</italic>. The ability to quickly compare interaction maps containing all reads with those only containing uniquely mapping reads, to instantaneously visualize the effect of different normalization methods and the ability to rescue a large proportion of non-uniquely mapping reads opens new possibilities to evaluate interactome maps. We believe that these features are especially important for genomes containing many repeats that have complicated analyses in the past. While ideally suited for genomes &lt; 150 Mbp, Smoother can also be used for larger genomes if subsections of the genome are analyzed as with methods such as capture Hi-C (<xref rid="B31" ref-type="bibr">31</xref>), or Micro Capture-C (<xref rid="B3" ref-type="bibr">3</xref>), or if datasets contain fewer than 20 million interactions such as with some RNA-DNA interactome capture methods. Ongoing research aimed at improving the compression of prefix sums will open the possibility of using Smoother for genome-wide analyses of larger genomes.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>gkae008_Supplemental_File</label>
      <media xlink:href="gkae008_supplemental_file.pdf"/>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack id="ACK1">
    <title>Acknowledgements</title>
    <p>We would like to thank Michael Shekelyan, Nezar Abdennur, Anton Goloborodko, and all members of the Siegel Laboratory for their valuable remarks. We would also like to thank the Bioinformatics Core Facility from the Biomedical Center at the Ludwig-Maximilians-Universität Munich for access to the computing cluster.</p>
    <p><italic toggle="yes">Author contributions</italic>: MS, TNS, and ABS conceived the project. Unless indicated otherwise, MS devised all algorithmic schemes, with TNS, ABS, and CR contributing valuable remarks. CR and MS devised the ploidy correction approach. MS implemented all code and performed all benchmarking. MS and ABS debugged the code. MS wrote the manuscript, with the assistance of TNS, ABS, and CR. ABS and MS wrote the documentation of the software, with TNS and CR contributing valuable remarks. All authors read and approved the manuscript.</p>
  </ack>
  <sec sec-type="data-availability" id="SEC5">
    <title>Data availability</title>
    <p>No data was created for this project. The used interactome datasets are publicly available under the Sequence Read Archive accession codes: SRR5820092 (<italic toggle="yes">D. melanogaster</italic>), SRR6354577 (<italic toggle="yes">E. coli</italic>), SRR14469367 (<italic toggle="yes">S. cerevisiae</italic>), SRR7721317, SRR7721318 and SRR7721307 (<italic toggle="yes">T. brucei</italic>), as well as SRR9201799 and SRR9201800 (<italic toggle="yes">M. musculus</italic>). The used genome sequences and their annotations are publicly available on NCBI under the RefSeq assembly Ids: GCF_000001215.4 (<italic toggle="yes">D. melanogaster</italic>), GCF_000005845.2 (<italic toggle="yes">E. coli</italic>), GCF_000146045.2 (<italic toggle="yes">S. cerevisiae</italic>), and GCF_000001635.27 (<italic toggle="yes">M. musculus</italic>). The <italic toggle="yes">T. brucei</italic> genome sequence and its annotations are publicly available on TryTrypDB under <ext-link xlink:href="http://www.tritrypdb.org/common/downloads/Current_Release/TbruceiLister427_2018/" ext-link-type="uri">www.tritrypdb.org/common/downloads/Current_Release/TbruceiLister427_2018/</ext-link>. Smoother is available as a pip package using ‘pip install biosmoother’. Source code is available on GitHub at <ext-link xlink:href="http://www.github.com/Siegel-Lab/BioSmoother" ext-link-type="uri">www.github.com/Siegel-Lab/BioSmoother</ext-link>, <ext-link xlink:href="http://www.github.com/Siegel-Lab/libBioSmoother" ext-link-type="uri">www.github.com/Siegel-Lab/libBioSmoother</ext-link>, and <ext-link xlink:href="http://www.github.com/Siegel-Lab/libSps" ext-link-type="uri">www.github.com/Siegel-Lab/libSps</ext-link>, for Smoother, libSmoother, and libSps, respectively. Further, all code has been deposited on Zenodo: Smoother: <ext-link xlink:href="https://doi.org/10.5281/zenodo.8402173" ext-link-type="uri">https://doi.org/10.5281/zenodo.8402173</ext-link>, libSmoother: <ext-link xlink:href="https://doi.org/10.5281/zenodo.8402040" ext-link-type="uri">https://doi.org/10.5281/zenodo.8402040</ext-link>, and libSps: <ext-link xlink:href="https://doi.org/10.5281/zenodo.8386312" ext-link-type="uri">https://doi.org/10.5281/zenodo.8386312</ext-link>. All code is published using the MIT license. Benchmarking results can be reproduced using the scripts in the benchmarking directory of the libSmoother repository. Throughout the manuscript, Smoother version 1.0.0, libSmoother version 1.0.0, and libSps version 1.0.0 were used.</p>
  </sec>
  <sec id="SEC7">
    <title>Supplementary data</title>
    <p><ext-link xlink:href="https://academic.oup.com/nar/article-lookup/doi/10.1093/nar/gkae008#supplementary-data" ext-link-type="uri">Supplementary Data</ext-link> are available at NAR Online.</p>
  </sec>
  <sec id="SEC8">
    <title>Funding</title>
    <p>German Research Foundation [CRC 1064/A33]; German Research Foundation [SI 1610/2-2]; an ERC Starting Grant [3D_Tryps 715466]; ERC Consolidator Grant [SwitchDecoding 101044320 to T.N.S.]. Funding for open access charge: German Research Foundation [CRC 1064].</p>
    <p><italic toggle="yes">Conflict of interest statement</italic>. None declared.</p>
  </sec>
  <ref-list id="REF1">
    <title>References</title>
    <ref id="B1">
      <label>1.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Belton</surname>  <given-names>J.-M.</given-names></string-name>, <string-name><surname>McCord</surname>  <given-names>R.P.</given-names></string-name>, <string-name><surname>Gibcus</surname>  <given-names>J.H.</given-names></string-name>, <string-name><surname>Naumova</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Zhan</surname>  <given-names>Y.</given-names></string-name>, <string-name><surname>Dekker</surname>  <given-names>J.</given-names></string-name></person-group>  <article-title>Hi–C: a comprehensive technique to capture the conformation of genomes</article-title>. <source>Methods</source>. <year>2012</year>; <volume>58</volume>:<fpage>268</fpage>–<lpage>276</lpage>.<pub-id pub-id-type="pmid">22652625</pub-id>
</mixed-citation>
    </ref>
    <ref id="B2">
      <label>2.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hsieh</surname>  <given-names>T.-H.S.</given-names></string-name>, <string-name><surname>Weiner</surname>  <given-names>A.</given-names></string-name>, <string-name><surname>Lajoie</surname>  <given-names>B.</given-names></string-name>, <string-name><surname>Dekker</surname>  <given-names>J.</given-names></string-name>, <string-name><surname>Friedman</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Rando</surname>  <given-names>O.J.</given-names></string-name></person-group>  <article-title>Mapping nucleosome resolution chromosome folding in yeast by micro-C</article-title>. <source>Cell</source>. <year>2015</year>; <volume>162</volume>:<fpage>108</fpage>–<lpage>119</lpage>.<pub-id pub-id-type="pmid">26119342</pub-id>
</mixed-citation>
    </ref>
    <ref id="B3">
      <label>3.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Goel</surname>  <given-names>V.Y.</given-names></string-name>, <string-name><surname>Huseyin</surname>  <given-names>M.K.</given-names></string-name>, <string-name><surname>Hansen</surname>  <given-names>A.S.</given-names></string-name></person-group>  <article-title>Region Capture Micro-C reveals coalescence of enhancers and promoters into nested microcompartments</article-title>. <source>Nat. Genet.</source>  <year>2023</year>; <volume>55</volume>:<fpage>1048</fpage>–<lpage>1056</lpage>.<pub-id pub-id-type="pmid">37157000</pub-id>
</mixed-citation>
    </ref>
    <ref id="B4">
      <label>4.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Deshpande</surname>  <given-names>A.S.</given-names></string-name>, <string-name><surname>Ulahannan</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Pendleton</surname>  <given-names>M.</given-names></string-name>, <string-name><surname>Dai</surname>  <given-names>X.</given-names></string-name>, <string-name><surname>Ly</surname>  <given-names>L.</given-names></string-name>, <string-name><surname>Behr</surname>  <given-names>J.M.</given-names></string-name>, <string-name><surname>Schwenk</surname>  <given-names>S.</given-names></string-name>, <string-name><surname>Liao</surname>  <given-names>W.</given-names></string-name>, <string-name><surname>Augello</surname>  <given-names>M.A.</given-names></string-name>, <string-name><surname>Tyer</surname>  <given-names>C.</given-names></string-name>  <etal>et al</etal>.</person-group>  <article-title>Identifying synergistic high-order 3D chromatin conformations from genome-scale nanopore concatemer sequencing</article-title>. <source>Nat. Biotechnol.</source>  <year>2022</year>; <volume>40</volume>:<fpage>1488</fpage>–<lpage>1499</lpage>.<pub-id pub-id-type="pmid">35637420</pub-id>
</mixed-citation>
    </ref>
    <ref id="B5">
      <label>5.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Quinodoz</surname>  <given-names>S.A.</given-names></string-name>, <string-name><surname>Bhat</surname>  <given-names>P.</given-names></string-name>, <string-name><surname>Chovanec</surname>  <given-names>P.</given-names></string-name>, <string-name><surname>Jachowicz</surname>  <given-names>J.W.</given-names></string-name>, <string-name><surname>Ollikainen</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Detmar</surname>  <given-names>E.</given-names></string-name>, <string-name><surname>Soehalim</surname>  <given-names>E.</given-names></string-name>, <string-name><surname>Guttman</surname>  <given-names>M.</given-names></string-name></person-group>  <article-title>SPRITE: a genome-wide method for mapping higher-order 3D interactions in the nucleus using combinatorial split-and-pool barcoding</article-title>. <source>Nat. Protoc.</source>  <year>2022</year>; <volume>17</volume>:<fpage>36</fpage>–<lpage>75</lpage>.<pub-id pub-id-type="pmid">35013617</pub-id>
</mixed-citation>
    </ref>
    <ref id="B6">
      <label>6.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bonetti</surname>  <given-names>A.</given-names></string-name>, <string-name><surname>Agostini</surname>  <given-names>F.</given-names></string-name>, <string-name><surname>Suzuki</surname>  <given-names>A.M.</given-names></string-name>, <string-name><surname>Hashimoto</surname>  <given-names>K.</given-names></string-name>, <string-name><surname>Pascarella</surname>  <given-names>G.</given-names></string-name>, <string-name><surname>Gimenez</surname>  <given-names>J.</given-names></string-name>, <string-name><surname>Roos</surname>  <given-names>L.</given-names></string-name>, <string-name><surname>Nash</surname>  <given-names>A.J.</given-names></string-name>, <string-name><surname>Ghilotti</surname>  <given-names>M.</given-names></string-name>, <string-name><surname>Cameron</surname>  <given-names>C.J.F.</given-names></string-name>  <etal>et al</etal>.</person-group>  <article-title>RADICL-seq identifies general and cell type–specific principles of genome-wide RNA-chromatin interactions</article-title>. <source>Nat. Commun.</source>  <year>2020</year>; <volume>11</volume>:<fpage>1018</fpage>.<pub-id pub-id-type="pmid">32094342</pub-id>
</mixed-citation>
    </ref>
    <ref id="B7">
      <label>7.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Li</surname>  <given-names>X.</given-names></string-name>, <string-name><surname>Zhou</surname>  <given-names>B.</given-names></string-name>, <string-name><surname>Chen</surname>  <given-names>L.</given-names></string-name>, <string-name><surname>Gou</surname>  <given-names>L.-T.</given-names></string-name>, <string-name><surname>Li</surname>  <given-names>H.</given-names></string-name>, <string-name><surname>Fu</surname>  <given-names>X.-D.</given-names></string-name></person-group>  <article-title>GRID-seq reveals the global RNA–chromatin interactome</article-title>. <source>Nat. Biotechnol.</source>  <year>2017</year>; <volume>35</volume>:<fpage>940</fpage>–<lpage>950</lpage>.<pub-id pub-id-type="pmid">28922346</pub-id>
</mixed-citation>
    </ref>
    <ref id="B8">
      <label>8.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Quinodoz</surname>  <given-names>S.A.</given-names></string-name>, <string-name><surname>Jachowicz</surname>  <given-names>J.W.</given-names></string-name>, <string-name><surname>Bhat</surname>  <given-names>P.</given-names></string-name>, <string-name><surname>Ollikainen</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Banerjee</surname>  <given-names>A.K.</given-names></string-name>, <string-name><surname>Goronzy</surname>  <given-names>I.N.</given-names></string-name>, <string-name><surname>Blanco</surname>  <given-names>M.R.</given-names></string-name>, <string-name><surname>Chovanec</surname>  <given-names>P.</given-names></string-name>, <string-name><surname>Chow</surname>  <given-names>A.</given-names></string-name>, <string-name><surname>Markaki</surname>  <given-names>Y.</given-names></string-name>  <etal>et al</etal>.</person-group>  <article-title>RNA promotes the formation of spatial compartments in the nucleus</article-title>. <source>Cell</source>. <year>2021</year>; <volume>184</volume>:<fpage>5775</fpage>–<lpage>5790</lpage>.<pub-id pub-id-type="pmid">34739832</pub-id>
</mixed-citation>
    </ref>
    <ref id="B9">
      <label>9.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cai</surname>  <given-names>Z.</given-names></string-name>, <string-name><surname>Cao</surname>  <given-names>C.</given-names></string-name>, <string-name><surname>Ji</surname>  <given-names>L.</given-names></string-name>, <string-name><surname>Ye</surname>  <given-names>R.</given-names></string-name>, <string-name><surname>Wang</surname>  <given-names>D.</given-names></string-name>, <string-name><surname>Xia</surname>  <given-names>C.</given-names></string-name>, <string-name><surname>Wang</surname>  <given-names>S.</given-names></string-name>, <string-name><surname>Du</surname>  <given-names>Z.</given-names></string-name>, <string-name><surname>Hu</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Yu</surname>  <given-names>X.</given-names></string-name>  <etal>et al</etal>.</person-group>  <article-title>RIC-seq for global in situ profiling of RNA–RNA spatial interactions</article-title>. <source>Nature</source>. <year>2020</year>; <volume>582</volume>:<fpage>432</fpage>–<lpage>437</lpage>.<pub-id pub-id-type="pmid">32499643</pub-id>
</mixed-citation>
    </ref>
    <ref id="B10">
      <label>10.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><collab>Open2C</collab><string-name><surname>Abdennur</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Abraham</surname>  <given-names>S.</given-names></string-name>, <string-name><surname>Fudenberg</surname>  <given-names>G.</given-names></string-name>, <string-name><surname>Flyamer</surname>  <given-names>I.M.</given-names></string-name>, <string-name><surname>Galitsyna</surname>  <given-names>A.A.</given-names></string-name>, <string-name><surname>Goloborodko</surname>  <given-names>A.</given-names></string-name>, <string-name><surname>Imakaev</surname>  <given-names>M.</given-names></string-name>, <string-name><surname>Oksuz</surname>  <given-names>B.A.</given-names></string-name>, <string-name><surname>Venev</surname>  <given-names>S.V.</given-names></string-name></person-group>  <article-title>Cooltools: enabling high-resolution Hi-C analysis in Python</article-title>. <year>2022</year>; <comment>bioRxiv doi:</comment><comment>01 November 2022, preprint: not peer reviewed</comment><pub-id pub-id-type="doi">10.1101/2022.10.31.514564</pub-id>.</mixed-citation>
    </ref>
    <ref id="B11">
      <label>11.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Durand</surname>  <given-names>N.C.</given-names></string-name>, <string-name><surname>Shamim</surname>  <given-names>M.S.</given-names></string-name>, <string-name><surname>Machol</surname>  <given-names>I.</given-names></string-name>, <string-name><surname>Rao</surname>  <given-names>S.S.P.</given-names></string-name>, <string-name><surname>Huntley</surname>  <given-names>M.H.</given-names></string-name>, <string-name><surname>Lander</surname>  <given-names>E.S.</given-names></string-name>, <string-name><surname>Aiden</surname>  <given-names>E.L.</given-names></string-name></person-group>  <article-title>Juicer provides a one-click system for analyzing loop-resolution hi-C experiments</article-title>. <source>Cell Syst.</source>  <year>2016</year>; <volume>3</volume>:<fpage>95</fpage>–<lpage>98</lpage>.<pub-id pub-id-type="pmid">27467249</pub-id>
</mixed-citation>
    </ref>
    <ref id="B12">
      <label>12.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Imakaev</surname>  <given-names>M.</given-names></string-name>, <string-name><surname>Fudenberg</surname>  <given-names>G.</given-names></string-name>, <string-name><surname>McCord</surname>  <given-names>R.P.</given-names></string-name>, <string-name><surname>Naumova</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Goloborodko</surname>  <given-names>A.</given-names></string-name>, <string-name><surname>Lajoie</surname>  <given-names>B.R.</given-names></string-name>, <string-name><surname>Dekker</surname>  <given-names>J.</given-names></string-name>, <string-name><surname>Mirny</surname>  <given-names>L.A.</given-names></string-name></person-group>  <article-title>Iterative correction of hi-C data reveals hallmarks of chromosome organization</article-title>. <source>Nat. Methods</source>. <year>2012</year>; <volume>9</volume>:<fpage>999</fpage>–<lpage>1003</lpage>.<pub-id pub-id-type="pmid">22941365</pub-id>
</mixed-citation>
    </ref>
    <ref id="B13">
      <label>13.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Knight</surname>  <given-names>P.A.</given-names></string-name>, <string-name><surname>Ruiz</surname>  <given-names>D.</given-names></string-name></person-group>  <article-title>A fast algorithm for matrix balancing</article-title>. <source>IMA J. Numer. Anal.</source>  <year>2013</year>; <volume>33</volume>:<fpage>1029</fpage>–<lpage>1047</lpage>.</mixed-citation>
    </ref>
    <ref id="B14">
      <label>14.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Durand</surname>  <given-names>N.C.</given-names></string-name>, <string-name><surname>Robinson</surname>  <given-names>J.T.</given-names></string-name>, <string-name><surname>Shamim</surname>  <given-names>M.S.</given-names></string-name>, <string-name><surname>Machol</surname>  <given-names>I.</given-names></string-name>, <string-name><surname>Mesirov</surname>  <given-names>J.P.</given-names></string-name>, <string-name><surname>Lander</surname>  <given-names>E.S.</given-names></string-name>, <string-name><surname>Aiden</surname>  <given-names>E.L.</given-names></string-name></person-group>  <article-title>Juicebox provides a visualization system for hi-C contact maps with unlimited zoom</article-title>. <source>Cell Syst.</source>  <year>2016</year>; <volume>3</volume>:<fpage>99</fpage>–<lpage>101</lpage>.<pub-id pub-id-type="pmid">27467250</pub-id>
</mixed-citation>
    </ref>
    <ref id="B15">
      <label>15.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Yardımcı</surname>  <given-names>G.G.</given-names></string-name>, <string-name><surname>Noble</surname>  <given-names>W.S.</given-names></string-name></person-group>  <article-title>Software tools for visualizing hi-C data</article-title>. <source>Genome Biol.</source>  <year>2017</year>; <volume>18</volume>:<fpage>26</fpage>.<pub-id pub-id-type="pmid">28159004</pub-id>
</mixed-citation>
    </ref>
    <ref id="B16">
      <label>16.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kerpedjiev</surname>  <given-names>P.</given-names></string-name>, <string-name><surname>Abdennur</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Lekschas</surname>  <given-names>F.</given-names></string-name>, <string-name><surname>McCallum</surname>  <given-names>C.</given-names></string-name>, <string-name><surname>Dinkla</surname>  <given-names>K.</given-names></string-name>, <string-name><surname>Strobelt</surname>  <given-names>H.</given-names></string-name>, <string-name><surname>Luber</surname>  <given-names>J.M.</given-names></string-name>, <string-name><surname>Ouellette</surname>  <given-names>S.B.</given-names></string-name>, <string-name><surname>Azhir</surname>  <given-names>A.</given-names></string-name>, <string-name><surname>Kumar</surname>  <given-names>N.</given-names></string-name>  <etal>et al</etal>.</person-group>  <article-title>HiGlass: web-based visual exploration and analysis of genome interaction maps</article-title>. <source>Genome Biol.</source>  <year>2018</year>; <volume>19</volume>:<fpage>125</fpage>.<pub-id pub-id-type="pmid">30143029</pub-id>
</mixed-citation>
    </ref>
    <ref id="B17">
      <label>17.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Shekelyan</surname>  <given-names>M.</given-names></string-name>, <string-name><surname>Dignös</surname>  <given-names>A.</given-names></string-name>, <string-name><surname>Gamper</surname>  <given-names>J.</given-names></string-name></person-group>  <article-title>Sparse prefix sums: constant-time range sum queries over sparse multidimensional data cubes</article-title>. <source>Information Systems</source>. <year>2019</year>; <volume>82</volume>:<fpage>136</fpage>–<lpage>147</lpage>.</mixed-citation>
    </ref>
    <ref id="B18">
      <label>18.</label>
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Geffner</surname>  <given-names>S.</given-names></string-name>, <string-name><surname>Agrawal</surname>  <given-names>D.</given-names></string-name>, <string-name><surname>El Abbadi</surname>  <given-names>A.</given-names></string-name>, <string-name><surname>Smith</surname>  <given-names>T.</given-names></string-name></person-group>  <article-title>Relative prefix sums: an efficient approach for querying dynamic OLAP data cubes</article-title>. <source>Proceedings 15th International Conference on Data Engineering (Cat. No.99CB36337)</source>. <year>1999</year>; <fpage>328</fpage>–<lpage>335</lpage>.</mixed-citation>
    </ref>
    <ref id="B19">
      <label>19.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Schmidt</surname>  <given-names>M.</given-names></string-name>, <string-name><surname>Heese</surname>  <given-names>K.</given-names></string-name>, <string-name><surname>Kutzner</surname>  <given-names>A.</given-names></string-name></person-group>  <article-title>Accurate high throughput alignment via line sweep-based seed processing</article-title>. <source>Nat. Commun.</source>  <year>2019</year>; <volume>10</volume>:<fpage>1939</fpage>.<pub-id pub-id-type="pmid">31028275</pub-id>
</mixed-citation>
    </ref>
    <ref id="B20">
      <label>20.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zheng</surname>  <given-names>Y.</given-names></string-name>, <string-name><surname>Ay</surname>  <given-names>F.</given-names></string-name>, <string-name><surname>Keles</surname>  <given-names>S.</given-names></string-name></person-group>  <article-title>Generative modeling of multi-mapping reads with mHi-C advances analysis of hi-C studies</article-title>. <source>eLife</source>. <year>2019</year>; <volume>8</volume>:<fpage>e38070</fpage>.<pub-id pub-id-type="pmid">30702424</pub-id>
</mixed-citation>
    </ref>
    <ref id="B21">
      <label>21.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Abdennur</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Mirny</surname>  <given-names>L.A.</given-names></string-name></person-group>  <article-title>Cooler: scalable storage for Hi-C data and other genomically labeled arrays</article-title>. <source>Bioinformatics</source>. <year>2020</year>; <volume>36</volume>:<fpage>311</fpage>–<lpage>316</lpage>.<pub-id pub-id-type="pmid">31290943</pub-id>
</mixed-citation>
    </ref>
    <ref id="B22">
      <label>22.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Müller</surname>  <given-names>L.S.M.</given-names></string-name>, <string-name><surname>Cosentino</surname>  <given-names>R.O.</given-names></string-name>, <string-name><surname>Förstner</surname>  <given-names>K.U.</given-names></string-name>, <string-name><surname>Guizetti</surname>  <given-names>J.</given-names></string-name>, <string-name><surname>Wedel</surname>  <given-names>C.</given-names></string-name>, <string-name><surname>Kaplan</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Janzen</surname>  <given-names>C.J.</given-names></string-name>, <string-name><surname>Arampatzi</surname>  <given-names>P.</given-names></string-name>, <string-name><surname>Vogel</surname>  <given-names>J.</given-names></string-name>, <string-name><surname>Steinbiss</surname>  <given-names>S.</given-names></string-name>  <etal>et al</etal>.</person-group>  <article-title>Genome organization and DNA accessibility control antigenic variation in trypanosomes</article-title>. <source>Nature</source>. <year>2018</year>; <volume>563</volume>:<fpage>121</fpage>–<lpage>125</lpage>.<pub-id pub-id-type="pmid">30333624</pub-id>
</mixed-citation>
    </ref>
    <ref id="B23">
      <label>23.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cosentino</surname>  <given-names>R.O.</given-names></string-name>, <string-name><surname>Brink</surname>  <given-names>B.G.</given-names></string-name>, <string-name><surname>Siegel</surname>  <given-names>T.N.</given-names></string-name></person-group>  <article-title>Allele-specific assembly of a eukaryotic genome corrects apparent frameshifts and reveals a lack of nonsense-mediated mRNA decay</article-title>. <source>NAR Genomics and Bioinformatics</source>. <year>2021</year>; <volume>3</volume>:<fpage>lqab082</fpage>.<pub-id pub-id-type="pmid">34541528</pub-id>
</mixed-citation>
    </ref>
    <ref id="B24">
      <label>24.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Dementiev</surname>  <given-names>R.</given-names></string-name>, <string-name><surname>Kettner</surname>  <given-names>L.</given-names></string-name>, <string-name><surname>Sanders</surname>  <given-names>P.</given-names></string-name></person-group>  <article-title>STXXL: standard template library for XXL data sets</article-title>. <source>Software: Practice and Experience</source>. <year>2008</year>; <volume>38</volume>:<fpage>589</fpage>–<lpage>637</lpage>.</mixed-citation>
    </ref>
    <ref id="B25">
      <label>25.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lioy</surname>  <given-names>V.S.</given-names></string-name>, <string-name><surname>Cournac</surname>  <given-names>A.</given-names></string-name>, <string-name><surname>Marbouty</surname>  <given-names>M.</given-names></string-name>, <string-name><surname>Duigou</surname>  <given-names>S.</given-names></string-name>, <string-name><surname>Mozziconacci</surname>  <given-names>J.</given-names></string-name>, <string-name><surname>Espéli</surname>  <given-names>O.</given-names></string-name>, <string-name><surname>Boccard</surname>  <given-names>F.</given-names></string-name>, <string-name><surname>Koszul</surname>  <given-names>R.</given-names></string-name></person-group>  <article-title>Multiscale structuring of the E. coli chromosome by nucleoid-associated and condensin proteins</article-title>. <source>Cell</source>. <year>2018</year>; <volume>172</volume>:<fpage>771</fpage>–<lpage>783</lpage>.<pub-id pub-id-type="pmid">29358050</pub-id>
</mixed-citation>
    </ref>
    <ref id="B26">
      <label>26.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lledó</surname>  <given-names>J.I.L.</given-names></string-name>, <string-name><surname>Cáceres</surname>  <given-names>M.</given-names></string-name></person-group>  <article-title>On the power and the systematic biases of the detection of chromosomal inversions by paired-end genome sequencing</article-title>. <source>PLoS One</source>. <year>2013</year>; <volume>8</volume>:<fpage>e61292</fpage>.<pub-id pub-id-type="pmid">23637806</pub-id>
</mixed-citation>
    </ref>
    <ref id="B27">
      <label>27.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wang</surname>  <given-names>Q.</given-names></string-name>, <string-name><surname>Sun</surname>  <given-names>Q.</given-names></string-name>, <string-name><surname>Czajkowsky</surname>  <given-names>D.M.</given-names></string-name>, <string-name><surname>Shao</surname>  <given-names>Z.</given-names></string-name></person-group>  <article-title>Sub-kb hi-C in D. melanogaster reveals conserved characteristics of TADs between insect and mammalian cells</article-title>. <source>Nat. Commun.</source>  <year>2018</year>; <volume>9</volume>:<fpage>188</fpage>.<pub-id pub-id-type="pmid">29335463</pub-id>
</mixed-citation>
    </ref>
    <ref id="B28">
      <label>28.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Servant</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Varoquaux</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Lajoie</surname>  <given-names>B.R.</given-names></string-name>, <string-name><surname>Viara</surname>  <given-names>E.</given-names></string-name>, <string-name><surname>Chen</surname>  <given-names>C.-J.</given-names></string-name>, <string-name><surname>Vert</surname>  <given-names>J.-P.</given-names></string-name>, <string-name><surname>Heard</surname>  <given-names>E.</given-names></string-name>, <string-name><surname>Dekker</surname>  <given-names>J.</given-names></string-name>, <string-name><surname>Barillot</surname>  <given-names>E.</given-names></string-name></person-group>  <article-title>HiC-Pro: an optimized and flexible pipeline for Hi-C data processing</article-title>. <source>Genome Biol.</source>  <year>2015</year>; <volume>16</volume>:<fpage>259</fpage>.<pub-id pub-id-type="pmid">26619908</pub-id>
</mixed-citation>
    </ref>
    <ref id="B29">
      <label>29.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Barcons-Simon</surname>  <given-names>A.</given-names></string-name>, <string-name><surname>Carrington</surname>  <given-names>M.</given-names></string-name>, <string-name><surname>Siegel</surname>  <given-names>T.N.</given-names></string-name></person-group>  <article-title>Decoding the impact of nuclear organization on antigenic variation in parasites</article-title>. <source>Nat. Microbiol.</source>  <year>2023</year>; <volume>8</volume>:<fpage>1408</fpage>–<lpage>1418</lpage>.<pub-id pub-id-type="pmid">37524976</pub-id>
</mixed-citation>
    </ref>
    <ref id="B30">
      <label>30.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bunnik</surname>  <given-names>E.M.</given-names></string-name>, <string-name><surname>Venkat</surname>  <given-names>A.</given-names></string-name>, <string-name><surname>Shao</surname>  <given-names>J.</given-names></string-name>, <string-name><surname>McGovern</surname>  <given-names>K.E.</given-names></string-name>, <string-name><surname>Batugedara</surname>  <given-names>G.</given-names></string-name>, <string-name><surname>Worth</surname>  <given-names>D.</given-names></string-name>, <string-name><surname>Prudhomme</surname>  <given-names>J.</given-names></string-name>, <string-name><surname>Lapp</surname>  <given-names>S.A.</given-names></string-name>, <string-name><surname>Andolina</surname>  <given-names>C.</given-names></string-name>, <string-name><surname>Ross</surname>  <given-names>L.S.</given-names></string-name>  <etal>et al</etal>.</person-group>  <article-title>Comparative 3D genome organization in apicomplexan parasites</article-title>. <source>Proc. Natl. Acad. Sci. U.S.A.</source>  <year>2019</year>; <volume>116</volume>:<fpage>3183</fpage>–<lpage>3192</lpage>.<pub-id pub-id-type="pmid">30723152</pub-id>
</mixed-citation>
    </ref>
    <ref id="B31">
      <label>31.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Mifsud</surname>  <given-names>B.</given-names></string-name>, <string-name><surname>Tavares-Cadete</surname>  <given-names>F.</given-names></string-name>, <string-name><surname>Young</surname>  <given-names>A.N.</given-names></string-name>, <string-name><surname>Sugar</surname>  <given-names>R.</given-names></string-name>, <string-name><surname>Schoenfelder</surname>  <given-names>S.</given-names></string-name>, <string-name><surname>Ferreira</surname>  <given-names>L.</given-names></string-name>, <string-name><surname>Wingett</surname>  <given-names>S.W.</given-names></string-name>, <string-name><surname>Andrews</surname>  <given-names>S.</given-names></string-name>, <string-name><surname>Grey</surname>  <given-names>W.</given-names></string-name>, <string-name><surname>Ewels</surname>  <given-names>P.A.</given-names></string-name>  <etal>et al</etal>.</person-group>  <article-title>Mapping long-range promoter contacts in human cells with high-resolution capture hi-C</article-title>. <source>Nat. Genet.</source>  <year>2015</year>; <volume>47</volume>:<fpage>598</fpage>–<lpage>606</lpage>.<pub-id pub-id-type="pmid">25938943</pub-id>
</mixed-citation>
    </ref>
  </ref-list>
</back>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Nucleic Acids Res</journal-id>
    <journal-id journal-id-type="iso-abbrev">Nucleic Acids Res</journal-id>
    <journal-id journal-id-type="publisher-id">nar</journal-id>
    <journal-title-group>
      <journal-title>Nucleic Acids Research</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">0305-1048</issn>
    <issn pub-type="epub">1362-4962</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10954447</article-id>
    <article-id pub-id-type="pmid">38281191</article-id>
    <article-id pub-id-type="doi">10.1093/nar/gkae008</article-id>
    <article-id pub-id-type="publisher-id">gkae008</article-id>
    <article-categories>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI00010</subject>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>Narese/7</subject>
        <subject>Narese/24</subject>
      </subj-group>
      <subj-group subj-group-type="heading">
        <subject>Methods</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Smoother: on-the-fly processing of interactome data using prefix sums</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-5601-6349</contrib-id>
        <name>
          <surname>Schmidt</surname>
          <given-names>Markus R</given-names>
        </name>
        <!--markus.schmidt@lmu.de-->
        <aff><institution>Division of Experimental Parasitology, Faculty of Veterinary Medicine, Ludwig-Maximilians-Universität München</institution>, <addr-line>Munich</addr-line>, <country country="DE">Germany</country></aff>
        <aff><institution>Biomedical Center, Division of Physiological Chemistry, Faculty of Medicine, Ludwig-Maximilians-Universität München</institution>, <addr-line>Munich</addr-line>, <country country="DE">Germany</country></aff>
        <xref rid="COR2" ref-type="corresp"/>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0003-3487-1421</contrib-id>
        <name>
          <surname>Barcons-Simon</surname>
          <given-names>Anna</given-names>
        </name>
        <aff><institution>Division of Experimental Parasitology, Faculty of Veterinary Medicine, Ludwig-Maximilians-Universität München</institution>, <addr-line>Munich</addr-line>, <country country="DE">Germany</country></aff>
        <aff><institution>Biomedical Center, Division of Physiological Chemistry, Faculty of Medicine, Ludwig-Maximilians-Universität München</institution>, <addr-line>Munich</addr-line>, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-4943-4323</contrib-id>
        <name>
          <surname>Rabuffo</surname>
          <given-names>Claudia</given-names>
        </name>
        <aff><institution>Division of Experimental Parasitology, Faculty of Veterinary Medicine, Ludwig-Maximilians-Universität München</institution>, <addr-line>Munich</addr-line>, <country country="DE">Germany</country></aff>
        <aff><institution>Biomedical Center, Division of Physiological Chemistry, Faculty of Medicine, Ludwig-Maximilians-Universität München</institution>, <addr-line>Munich</addr-line>, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-1715-7907</contrib-id>
        <name>
          <surname>Siegel</surname>
          <given-names>T Nicolai</given-names>
        </name>
        <!--n.siegel@lmu.de-->
        <aff><institution>Division of Experimental Parasitology, Faculty of Veterinary Medicine, Ludwig-Maximilians-Universität München</institution>, <addr-line>Munich</addr-line>, <country country="DE">Germany</country></aff>
        <aff><institution>Biomedical Center, Division of Physiological Chemistry, Faculty of Medicine, Ludwig-Maximilians-Universität München</institution>, <addr-line>Munich</addr-line>, <country country="DE">Germany</country></aff>
        <xref rid="COR1" ref-type="corresp"/>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="COR1">To whom correspondence should be addressed. Tel: +49 89 2180 77098; Email: <email>n.siegel@lmu.de</email></corresp>
      <corresp id="COR2">Correspondence may also be addressed to Markus R. Schmidt. Tel: +49 89 2180 71635; Email: <email>markus.schmidt@lmu.de</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <day>21</day>
      <month>3</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2024-01-28">
      <day>28</day>
      <month>1</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>28</day>
      <month>1</month>
      <year>2024</year>
    </pub-date>
    <volume>52</volume>
    <issue>5</issue>
    <fpage>e23</fpage>
    <lpage>e23</lpage>
    <history>
      <date date-type="accepted">
        <day>08</day>
        <month>1</month>
        <year>2024</year>
      </date>
      <date date-type="rev-recd">
        <day>11</day>
        <month>12</month>
        <year>2023</year>
      </date>
      <date date-type="received">
        <day>03</day>
        <month>11</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2024. Published by Oxford University Press on behalf of Nucleic Acids Research.</copyright-statement>
      <copyright-year>2024</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="gkae008.pdf"/>
    <abstract>
      <title>Abstract</title>
      <p>Nucleic acid interactome data, such as chromosome conformation capture data and RNA–DNA interactome data, are currently analyzed via pipelines that must be rerun for each new parameter set. A more dynamic approach is desirable since the optimal parameter set is commonly unknown ahead of time and rerunning pipelines is a time-consuming process. We have developed an approach fast enough to process interactome data on-the-fly using a sparse prefix sum index. With this index, we created Smoother, a flexible, multifeatured visualization and analysis tool that allows interactive filtering, e.g. by mapping quality, almost instant comparisons between different normalization approaches, e.g. iterative correction, and ploidy correction. Further, Smoother can overlay other sequencing data or genomic annotations, compare different samples, and perform virtual 4C analysis. Smoother permits a novel way to interact with and explore interactome data, fostering comprehensive, high-quality data analysis. Smoother is available at <ext-link xlink:href="https://github.com/Siegel-Lab/BioSmoother" ext-link-type="uri">https://github.com/Siegel-Lab/BioSmoother</ext-link> under the MIT license.</p>
    </abstract>
    <abstract abstract-type="graphical">
      <title>Graphical Abstract</title>
      <p>
        <fig position="float" id="ga1">
          <label>Graphical Abstract</label>
          <graphic xlink:href="gkae008figgra1" position="float"/>
        </fig>
      </p>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>German Research Foundation</institution>
            <institution-id institution-id-type="DOI">10.13039/501100001659</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>CRC 1064/A33</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>German Research Foundation</institution>
            <institution-id institution-id-type="DOI">10.13039/501100001659</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>SI 1610/2-2</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>ERC Starting Grant</institution>
          </institution-wrap>
        </funding-source>
        <award-id>3D_Tryps 715466</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>ERC Consolidator Grant</institution>
          </institution-wrap>
        </funding-source>
        <award-id>101044320</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="13"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec sec-type="intro" id="SEC1">
    <title>Introduction</title>
    <p>Chromosome conformation capture (3C) methods, RNA–DNA and RNA–RNA interactome capture methods sequence pairs of nucleic acid fragments that are in spatial proximity. 3C methods include Hi-C (<xref rid="B1" ref-type="bibr">1</xref>), Micro-C (<xref rid="B2" ref-type="bibr">2</xref>), RCMC (<xref rid="B3" ref-type="bibr">3</xref>), Pore-C (<xref rid="B4" ref-type="bibr">4</xref>) and SPRITE (<xref rid="B5" ref-type="bibr">5</xref>), while methods like RADICL-seq (<xref rid="B6" ref-type="bibr">6</xref>), GRID-seq (<xref rid="B7" ref-type="bibr">7</xref>), RD-SPRITE (<xref rid="B8" ref-type="bibr">8</xref>) or RIC-seq (<xref rid="B9" ref-type="bibr">9</xref>) are commonly used to capture the RNA interactome. These sequenced fragment pairs are called ‘interactions’ and one fragment of the pair is an ‘interaction partner’. Population-level sequencing of such interactions, hence, reveals the average contact frequencies of genomic loci. Such contact frequencies are commonly processed into two-dimensional heatmaps by (i) mapping, (ii) filtering, (iii) binning, (iv) normalizing and (v) displaying (<xref rid="B10" ref-type="bibr">10–13</xref>): (i) An aligner is used to find one or many mapping loci for each interaction partner. Each locus is assigned a mapping quality, which expresses the aligner's confidence in the correctness of the locus. (ii) Unwanted interactions, such as those with low mapping qualities or those mapping to multiple loci are filtered out. (iii) Interactions are placed into bins of a given resolution. From this step on, the number of interactions within a bin is typically stored in favor of individual interactions. (iv) Subsequently, normalization strategies are applied to correct for different biases occurring during sample preparation or data processing, e.g. during PCR amplification, mapping or filtering. The normalization of choice depends on the data type and the analysis to be performed. Commonly, 3C data are normalized with Iterative Correction (IC) (<xref rid="B12" ref-type="bibr">12</xref>) or KR-balancing (<xref rid="B13" ref-type="bibr">13</xref>), while Binomial test (<xref rid="B6" ref-type="bibr">6</xref>) and Associated Slices normalization (<xref rid="B7" ref-type="bibr">7</xref>) are used for RNA–DNA interactome data. IC and KR-balancing equalize the visibility of a matrix by equalizing its column and row sums, while the Binomial test determines the statistical significance of each bin over the genome-wide coverage of the interacting RNA. Associated Slices normalizes each bin by the sum of <italic toggle="yes">trans</italic>, chromatin-associated interactions that share the bin's interacting RNA. (v) Normalized data are displayed as two-dimensional heatmaps either by conversion into images or inspection with interactive viewers (<xref rid="B14" ref-type="bibr">14–18</xref>). These viewers aggregate heatmaps of various resolutions into a single file to be able to display both high-resolution images for small subsections of the dataset and low-resolution images for overviews of the dataset. However, parameters such as the available resolutions, the type of normalization, or filter thresholds (mapping quality, annotation overlap) remain fixed at this point.</p>
    <p>In many cases, nucleic acid interactome data are used in an exploratory fashion, e.g. to gain a general overview of the DNA-DNA or RNA–DNA interactome. Even if there is a specific hypothesis, e.g. that the depletion of a protein will lead to a decrease in interactions between two specific genomic loci, optimal parameters for data analysis are commonly unknown in advance. Yet, pipeline-based approaches require the commitment to specific parameter values from the outset. This routinely requires the rerunning of pipelines until a suitable parameter set has been found. With runtimes of up to several hours per step, such pipeline rerunning is a time-consuming process.</p>
    <p>To address this challenge, we created Smoother, an interactome data analysis tool that allows changing analysis parameters by interaction with a graphical user interface. Here, the effects of these parameter changes are displayed as an updated heatmap within seconds. Interactive changes can be made for any of the filtering, binning, normalizing, and displaying steps. For example, reads with low mapping quality can be removed, the normalization strategy can be changed entirely or run with different parameters, and bin size can be modified. A naïve strategy to offer such interactivity would be to rerun the pipeline each time a parameter changes. However, such rerunning is not practicable, due to the large amount of time required to process interactome datasets. Alternatively, to eliminate the need of having to reprocess the datasets continuously, heatmaps for all possible parameter permutations could be precomputed. While such precomputed heatmaps could be displayed very efficiently, the large number of parameter permutations makes it impossible to precompute and store all possible heatmaps for a given dataset. To solve this problem, we developed a strategy to precompute and store an encoded and compressed version of the heatmaps for all possible parameter permutations using prefix sums (<xref rid="B17" ref-type="bibr">17</xref>,<xref rid="B18" ref-type="bibr">18</xref>).</p>
  </sec>
  <sec sec-type="materials|methods" id="SEC2">
    <title>Materials and methods</title>
    <sec id="SEC2-1">
      <title>Using prefix sums for counting the number of interactions in a bin</title>
      <p>With the large size of interactome datasets of &gt;<inline-formula><tex-math id="M0001" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${10}^7$\end{document}</tex-math></inline-formula> interactions per replicate, it was crucial to make the runtime of our approach independent of the dataset size. The same applies to large genome sizes (<italic toggle="yes">T. brucei</italic>’s genome assembly is 50 Mb long). With such large genomes, gaining an overview of the entire dataset requires computing large bins. Hence, no matter the number of interactions, the bin size and the genome size, processing a heatmap should always take the same amount of time.</p>
      <p>Such constant heatmap processing time can be achieved using prefix sums (<xref rid="B17" ref-type="bibr">17</xref>,<xref rid="B18" ref-type="bibr">18</xref>): We first introduce the one-dimensional case with an example. Let us consider a genome of size 8 and a set of interactions at the positions <inline-formula><tex-math id="M0001a" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\{ {1,\ 3,\ 3,\ 7} \}$\end{document}</tex-math></inline-formula>. We want to efficiently count the number of interactions in any given bin. For example, a bin with a range from 2 to 6 contains 2 interactions. To do so, we first compute the prefix sums for all positions on the genome. The prefix sum of a position is the number of interactions at or before this position. In our example, the prefix sum at position 6 would be 3, since 3 interactions (1, 3 and 3) lie at or before position 6. We compute these prefix sums once and store them in a file. Next, we use these prefix sums for counting the number of interactions in bins. This is done by subtracting the prefix sum for the start position of the bin from the prefix sum of its end position (e.g. for the bin starting at 2 and ending at 6: <inline-formula><tex-math id="M0002" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$3 - 1 = 2$\end{document}</tex-math></inline-formula>). Such subtraction yields the correct number of points since the prefix sum for the end position holds the number of interactions that lie at or before the end of the bin, while the prefix sum for the start position holds the number of interactions that lie at or before the start of the bin. Subtracting both numbers leaves us with the number of interactions within the bin. As intended, the effort required for counting the number of interactions in any bin using prefix sums is independent of the number of interactions, the genome size, and the bin size: for any bin and dataset, two prefix sums are looked up and subtracted. <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S1</xref> generalizes this approach to the <inline-formula><tex-math id="M0003" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$d$\end{document}</tex-math></inline-formula>-dimensional case.</p>
      <p>Alternative data structures to prefix sums could be R-trees or range trees. We opted to use prefix sums as they offer the fastest querying times by orders of magnitudes. <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S2</xref> compares these three data structures in more detail.</p>
    </sec>
    <sec id="SEC2-2">
      <title>Filtering interactions by mapping quality using an additional dimension</title>
      <p>Mapping quality expresses the aligner's confidence in the correctness of the alignment of a read. Therefore, a read that aligns equally well to two positions of the reference genome would produce two alignments with mapping quality zero, while a read that is completely distinct from all but one genomic locus would yield one alignment with a very high mapping quality (<xref rid="B19" ref-type="bibr">19</xref>).</p>
      <p>To filter out interactions with low mapping qualities on-the-fly, we moved from 2D to 3D prefix sums. Here, each interaction still has an <inline-formula><tex-math id="M0004" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$x$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math id="M0005" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$y$\end{document}</tex-math></inline-formula> position based on the alignments of the interaction partners. Additionally, we give each interaction a <italic toggle="yes">z</italic> position according to the alignments’ mapping qualities (we use the lower of the two mapping qualities). Then, instead of querying one rectangle for each bin of the heatmap, we query a cube. By varying the <italic toggle="yes">z</italic> position of the bottom face of these cubes, we filter out interactions with low mapping qualities (Figure <xref rid="F2" ref-type="fig">2A</xref>).</p>
      <p>A <inline-formula><tex-math id="M0006" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$d$\end{document}</tex-math></inline-formula>-dimensional index requires <inline-formula><tex-math id="M0007" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${2}^d$\end{document}</tex-math></inline-formula> lookups per counting operation, where each lookup corresponds to one corner of the queried <inline-formula><tex-math id="M0008" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$d$\end{document}</tex-math></inline-formula>-hyperrectangle (<xref rid="sup1" ref-type="supplementary-material">Supplementary Note S1</xref>). Hence, introducing a new dimension would slow our approach down by a factor of two. However, we know that the prefix sum of a position smaller than all interactions must be zero. Thus, points of a queried <inline-formula><tex-math id="M0009" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$d$\end{document}</tex-math></inline-formula>-hyperrectangle that lie below all interactions need no lookup, possibly reducing the query complexity. To make use of this reduced query time, we invert the <inline-formula><tex-math id="M00010" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$z$\end{document}</tex-math></inline-formula>-dimension of our index. This way, interactions with high mapping qualities lie at the bottom, while those with low mapping qualities are positioned at the top. We then filter out low mapping qualities by varying the height of the queried cubes’ top face (instead of the bottom face). Importantly, this way, the bottom face of all cubes is always located below the highest possible mapping quality. Hence, we know that all four corners of the bottom face have a prefix sum of zero and require no lookup. This reduces the number of lookups to four (instead of the eight usually required for cubes), making this filter have no query time penalty whatsoever.</p>
    </sec>
    <sec id="SEC2-3">
      <title>Rescuing multimapping interactions by counting rectangles instead of points</title>
      <p>As described above, we can use an additional dimension to filter out interactions that align equally well to multiple positions of the genome by filtering out interactions with mapping quality zero. However, we also offer a complementing feature to deal with such ambiguous alignments: an interaction that maps to multiple positions can lead to two separate situations, where either (i) alignments are distributed over several bins or (ii) all alignments are within the same bin. While displaying distributed alignments (case i) would lead to more noise in the heatmap, displaying confined alignments (case ii) does not. Case ii does not lead to noise, since, while we do not know the exact loci of a confined interaction, we do know that all possible loci of the interaction are within the same bin. Hence, we can safely count this interaction towards the bin. This is a simplified implementation of the approach of Zheng <italic toggle="yes">et al.</italic> (<xref rid="B20" ref-type="bibr">20</xref>).</p>
      <p>For implementing this feature, and so distinguishing cases (i) and (ii), we extended the prefix sum approach to storing and counting rectangles instead of points. These rectangles are generated by first determining all alignment loci of an interaction and then storing the smallest rectangle that encloses all these loci using prefix sums. We next filter out all distributed alignments (case i), by only counting rectangles that are fully enclosed by a bin (Figure <xref rid="F2" ref-type="fig">2B</xref>).</p>
      <p>First, we introduce the one-dimensional case, where fully enclosed intervals are counted (instead of rectangles): There, we count how many multimapper-intervals are fully enclosed in a given bin by subtracting the number of multimapper-intervals starting before the bin from the number of multimapper-intervals ending after the bin (see <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S3</xref>). This filters our intervals that overlap either edge of the bin. However, the approach cannot deal with intervals that fully enclose the bin (see <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S3</xref>). For filtering out such enclosing intervals we introduce an additional dimension. In this dimension intervals are placed at a position according to their width. We then filter out all intervals larger than the bin, and so any intervals that could potentially fully enclose the bin, by adjusting the bounds of the queried region in the filter dimension. For this additional dimension, no inversion of the axis is needed to improve runtime (as opposed to the mapping quality dimension), as we filter out large values to begin with. <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S3</xref> details how this approach can be generalized to the <inline-formula><tex-math id="M00011" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$d$\end{document}</tex-math></inline-formula>-dimensional case, storing <italic toggle="yes">d</italic>-dimensional hyperrectangles. Further, <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S3</xref> details how to count all overlapping instead of enclosed hyperrectangles.</p>
    </sec>
    <sec id="SEC2-4">
      <title>Filtering by annotation using two additional dimensions per annotation type</title>
      <p>RNA–DNA interactome data is often analyzed considering merely reads that originate from gene bodies. Since our goal is to make our index agnostic to the type of data that is stored, all analysis-related parameters shall be set during querying. Hence, we require a query time option to filter out reads that do not overlap gene bodies, or, more broadly, any chosen type of genomic annotation. For this, we introduced two filter dimensions per annotation type, where one dimension stores x- and the other y-axis overlaps. Interactions are then placed at position zero or one in each of these dimensions depending on whether they overlay the annotation type or not.</p>
      <p>Annotation overlap is checked individually for each locus of a multimapping interaction. The multimapper is then considered to overlap any annotation that at least one of its mapping loci overlaps.</p>
    </sec>
    <sec id="SEC2-5">
      <title>Annotation coordinates</title>
      <p>Some RNA interactome analyses do not show all reads, but merely those that fall within genes (<xref rid="B7" ref-type="bibr">7</xref>). Hence the bins of the heatmap do not lie consecutively on the genome (called ‘genomic coordinates’). Instead, each bin covers exactly one gene and the space between genes is not shown in the heatmap. We abstract from the specific type of annotation and allow the use of any type of annotation. We call this coordinate system ‘annotation coordinates’.</p>
      <p>To ensure that the render time of our approach is independent of the size of the rendered area, we need to ensure that the number of bins that are displayed is roughly constant. With genomic coordinates, we adjust bin width and height to keep the total number of displayed bins constant. For bins that follow annotation coordinates, we adjust the number of annotations that are displayed within a bin instead. Since prefix sums are stored using genomic coordinates in our index, we implemented a system to translate from annotation to genomic coordinates. For this, we store each annotation type as a sorted array, where each element keeps the genomic start and end position of one annotation instance. Using the first and last annotation contained in a bin, we translate the bin's annotation coordinates to its genomic coordinates for lookup in the index. Combining multiple annotations this way would also count interactions in the void space between the annotations. We hence make use of our annotation filter (described in the Materials and methods section ‘Filtering by annotation using two additional dimensions per annotation type’) to remove these unwanted interactions.</p>
    </sec>
    <sec id="SEC2-6">
      <title>Reducing file size and preprocessing time</title>
      <p>Storing or computing prefix sums for all possible loci in a data space, as suggested above, is not feasible since there are too many loci: We work with a relatively small (compared to human, for example), <inline-formula><tex-math id="M00012" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\sim 5*{10}^7$\end{document}</tex-math></inline-formula>nt long assembly of the organism <italic toggle="yes">T. brucei</italic>; Aligners can output 256 different mapping quality values; Rectangles can grow in width and height up to the size of the largest contig, hence <inline-formula><tex-math id="M00013" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\sim 5*{10}^6$\end{document}</tex-math></inline-formula> different values (for <italic toggle="yes">T. brucei</italic>); Finally, one prefix sum requires 32 bytes to store. Factoring up these numbers, we would require <inline-formula><tex-math id="M00014" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\sim {10}^{20}$\end{document}</tex-math></inline-formula> terabytes of storage for one index. Larger assemblies, such as the human genome, would require even more storage. Further, computing this many values would take an insurmountable amount of processing time and power.</p>
      <p>Conveniently, reducing the storage requirements and construction time of prefix sum indices has already been studied (<xref rid="B17" ref-type="bibr">17</xref>,<xref rid="B18" ref-type="bibr">18</xref>). We modified the sparse prefix sum approach of Shekelyan et al. (<xref rid="B17" ref-type="bibr">17</xref>) to our needs. They use one lookup table per dimension to translate the original data space into a sparse space. In this sparse space, all empty slices are removed. For example, if there is no point with a <inline-formula><tex-math id="M00015" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$y$\end{document}</tex-math></inline-formula> coordinate of 5, the entire slice <inline-formula><tex-math id="M00016" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$y = 5$\end{document}</tex-math></inline-formula> is removed in sparse space. These lookup tables span over the entire data space and store, for each position, the number preceding non-empty slices. Any data space coordinate can now be translated into sparse space by lookup in these tables. In sparse space, points are compressed while preserving their order of occurrence in any dimension. It is sufficient to store the prefix sums for all positions in sparse space, merely, since prefix sums cannot change in interaction-free slices.</p>
      <p>With an increasing number of datapoints, the efficiency of this compression diminishes. Hence, Shekelyan et al. divide the data space into an even grid of boxes, where each box has its individual sparse space and lookup tables. They pick the number of boxes to optimize the update complexity of the index. In our case, updates are not needed, allowing us to optimize the number of boxes to minimize index size instead. Index size is data-distribution-dependent and thus different for each dataset. We hence implemented an approach that heuristically predicts index size for any given number of boxes. Predicting index size for various numbers of boxes, we determine the minimal size and therefore the optimal number of boxes. Index size is predicted by picking 1000 boxes at random and determining their sparse space as well as the size of their lookup tables. Both values are determined by a binary search over all datapoints. (The datapoints are previously sorted ascendingly for each dimension.) We then extrapolate the average storage space of these boxes to the full index.</p>
      <p>To further reduce the required storage size, we divide the <inline-formula><tex-math id="M00017" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$x$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math id="M00018" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$y$\end{document}</tex-math></inline-formula> positions of all interactions by a constant dividend <inline-formula><tex-math id="M00019" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$d$\end{document}</tex-math></inline-formula>. This reduces the size of the abovementioned lookup tables. Further, interactions close to the 45<inline-formula><tex-math id="M00020" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$^\circ$\end{document}</tex-math></inline-formula> diagonal are often dense enough to make their divided positions concur, reducing the number of non-empty slices and therefore the size of the sparse space. The disadvantage of this approach is that the minimum bin size becomes limited to <inline-formula><tex-math id="M00021" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$d$\end{document}</tex-math></inline-formula>. We call <inline-formula><tex-math id="M00022" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$d$\end{document}</tex-math></inline-formula> the base resolution of the index.</p>
      <p>Finally, we also reduce storage size by storing each contig-pair as an individual matrix rather than concatenating them. This reduces index size since non-empty slices from dense contig-pairs (e.g. <italic toggle="yes">cis-</italic>contigs) do not affect sparse contig pairs when stored separately.</p>
    </sec>
    <sec id="SEC2-7">
      <title>Iterative correction and eigenvector decomposition for partial matrices</title>
      <p>State-of-the-art iterative correction (IC), as implemented in e.g. cooler (<xref rid="B21" ref-type="bibr">21</xref>), is designed to run on a complete and symmetric Hi-C matrix. However, our index-based approach gains its runtime advantage from merely processing the part of the matrix that is currently visible. Hence, we need to adapt IC to be used on partial matrices. This adaptation is composed of two separate tasks: First, IC needs to work on asymmetric matrices; second, IC needs to approximate the effect of the missing bins.</p>
      <p>For dealing with asymmetric matrices, we modified the IC approach to use two sets of biases, one for each dimension. This is necessary since even if the full matrix is symmetric, the currently visible region of that matrix might not be symmetric without the larger context. In <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S4</xref>, we show that our modification has no effect on symmetric matrices. This proves that the modification is valid.</p>
      <p>Second, we sample a subset of the missing bins. A large enough number of samples is expected to even out to the average background of the heatmap. Samples must preserve the rectangular shape of the heatmap and cannot leave empty bins for ICing to work. We hence place samples as evenly spaced concentric rings around the visible area. Here, each ring is one sample that decomposes into several bins to match the columns and rows of the heatmap and previous samples. The bin size of samples is even to the size of bins in the visible area. Sample bins that are outside of the genome are omitted. This way, each sample adds up to two rows and two columns to the heatmap. <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S4</xref> gives an example. In the results section, we analyze the number of samples necessary to minimize the noise this sampling-based approach introduces.</p>
    </sec>
    <sec id="SEC2-8">
      <title>Associated slices normalization for partial matrices</title>
      <p>RNA-DNA interactome data can be normalized using the approach of Li et al. (<xref rid="B7" ref-type="bibr">7</xref>). This normalization consists of two main steps: First, all interactions with an RNA partner that does not originate from within a chromatin-associated gene body are filtered out. Second, all bins are normalized by the sum of <italic toggle="yes">trans</italic> interactions of chromatin-associated gene bodies for the respective RNA locus.</p>
      <p>We now introduce how to compute this normalization without access to the full matrix. First, we determine chromatin-associated gene bodies. To avoid scanning the whole genome, we take evenly-spaced samples of gene bodies (or any type of genomic annotation). In the results section, we analyze which number of samples is necessary to minimize differences between our sampling-based and the global approach. We compute two properties for each sampled gene body: Its average RNA reads per kbp and its maximal DNA reads in a 1 kbp-binned genome. Average RNA reads per kbp are determined by querying the total amount of RNA reads for the gene body (this requires one query per contig, using a bin that spans the gene body on one dimension and the whole contig on the other dimension) and dividing by genome size. Computing the maximal number of DNA reads in a 1 kbp binned genome is not as trivial: Querying every 1 kbp region one by one is not efficient enough. Hence, we use a recursive divide-and-conquer approach: First, we query each complete contig as one ‘region’. We store the queried regions in a max heap, recursively picking out the region with the highest count, splitting it in half, and re-querying it. Once the largest region is of size 1 kbp, we have reached the correct result. Following Li et al.(<xref rid="B7" ref-type="bibr">7</xref>) we then proceed to designate chromatin-associated gene bodies by applying thresholds to the average RNA reads and maximal DNA reads.</p>
      <p>Next, we compute the RNA coverage of <italic toggle="yes">trans</italic> interactions in chromatin-associated gene bodies for the visible region of the heatmap. For this, we require one query per gene body and visible slice. Finally, we normalize the shown bins by this coverage. <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S5</xref> gives an example of this sampling approach. In the results section, we analyze the number of samples necessary to minimize the noise this sampling-based approach introduces.</p>
    </sec>
    <sec id="SEC2-9">
      <title>Binomial test normalization for partial matrices</title>
      <p>RNA-DNA interactome data can be normalized using the approach of Bonetti et al. (<xref rid="B6" ref-type="bibr">6</xref>). There, they apply a Binomial test to ascertain whether a bin is statistically significant or not. Following Bonetti et al. (<xref rid="B6" ref-type="bibr">6</xref>), we use a Binomial test and correct p-values using the Benjamini/Hochberg method. To approximate applying this normalization to the full matrix, we use a sampling-based approach. We place samples as additional rows above and below the heatmap, where bins in the samples preserve the columns of the heatmap. <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S6</xref> gives an example. In the results section, we analyze the number of samples necessary to minimize the noise this sampling-based approach introduces.</p>
    </sec>
    <sec id="SEC2-10">
      <title>Distance dependent decay normalization for partial matrices</title>
      <p>To be able to normalize our matrices by distance dependent decay (DDD), without computing the full matrix, we apply the following scheme: While computing the locations of all bins, we record their distance to the diagonal of the heatmap. Here, the distance can be positive or negative to differentiate the regions right and left of the diagonal (this becomes relevant in the case of asymmetric data). For each recorded distance from the diagonal on each contig-pair, we then sample evenly spaced bins. These sampled bins are of the same size as the displayed bins; They are placed at the recorded distance from the diagonal and spaced evenly in a parallel fashion to the diagonal. We then query the number of interactions in the sampled bins. To compute the DDD for each distance from the diagonal on each contig-pair, we exclude the <inline-formula><tex-math id="M00023" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$x$\end{document}</tex-math></inline-formula>th top and bottom percentile of sampled bins and average the number of interactions from the remainder. Excluding the top and bottom percentiles of sampled bins is necessary to remove the impact of loops and under-sampled regions, respectively. We compute the average number of interactions instead of the median to deal with sparse data, where most values are zero or one. Such a situation would yield a median that jumps between zero and one, and so, in turn, a noisy picture. <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S7</xref> gives an example of this sampling.</p>
    </sec>
    <sec id="SEC2-11">
      <title>Correcting for ploidy</title>
      <p>Typically, interactome data are mapped on a consensus haploid assembly and the analysis assumes that each chromosome is represented an equal number of times. However, organisms can display aneuploidy, where the physical chromosome number is not a multiple of the haploid set. In such cases, the chromosome number of the <italic toggle="yes">in silico</italic> genome assembly would not correspond to the number of physical chromosomes. As a result, some interactions may be over- or underestimated. The same misestimation can arise from chromosomes in the same chromosomal set that contain both homozygous regions, collapsed in the assembly, and heterozygous regions that are assembled as separate contigs. From now on, we will refer to contigs that <italic toggle="yes">in silico</italic> do not match their physical copy number as ‘misrepresented’ and we will call such physical copy number ‘<italic toggle="yes">n</italic>-ploidy’.</p>
      <p>To correct for aneuploidy, we implement a strategy that distributes interactions among misrepresented contig-pairs. In detail, we make <italic toggle="yes">n</italic>-ploid contigs appear as <italic toggle="yes">n</italic> ‘instances’ in the heatmap. Then, interactions in misrepresented contig-pairs are divided evenly among the instances of the contigs (Figure <xref rid="F2" ref-type="fig">2E</xref>). For example, an interaction between a diploid and a triploid contig would count with 1/6 towards each of the 6 (2*3) instances of the corrected contig-pair. An interaction between the same triploid contig and a haploid contig would contribute 1/3 to each of the 3 instances of this contig-pair.</p>
      <p>For intra-contig interactions, we assume that all interactions occur intra-instance-wise. Hence, an intra-contig interaction of the triploid contig (with instances A, B, and C) would count 1/3 towards the instance pair A-A, 1/3 towards B-B, and 1/3 towards C-C. The interaction would not count towards any of the other instance-pairs (A-B, B-A, A-C, …). While this assumption does not hold true in nature, it is closer to actual reality than splitting interactions up evenly among all instance pairs.</p>
      <p>Finally, we consider the case where chromosomes have varying zygosities. An example is <italic toggle="yes">T. brucei:</italic> Its genome is organized in diploid chromosomes, with homozygous core regions and heterozygous subtelomeric regions (<xref rid="B22" ref-type="bibr">22</xref>,<xref rid="B23" ref-type="bibr">23</xref>). In the genome assembly, such a chromosome (e.g. chromosome 1) is composed of five contigs: two contigs for the 3′ subtelomere (3′A<sub>chr1</sub> and 3′B<sub>chr1</sub>), one contig for the core (core<sub>chr1</sub>), and two contigs for the 5′ subtelomere (5′A<sub>chr1</sub> and 5′B<sub>chr1</sub>). In this case, ploidy correction works by defining the following two groups: 3′A<sub>chr1</sub>-coreA<sub>chr1</sub>-5′A<sub>chr1</sub>, 3′B<sub>chr1</sub>-coreB<sub>chr1</sub>-5′B<sub>chr1</sub>, where coreA<sub>chr1</sub> and coreB<sub>chr1</sub> are two instances of the core<sub>chr1</sub> contig. As with intra-contig interactions, we assume intra-group interactions to take prevalence. In detail, for every contig pair where at least one contig has multiple instances, interactions are split among the pair's instances that are within a group, if at least one pair-instance is within a group. Otherwise, interactions are split among all instances. Hence, interactions occurring between 5′A<sub>chr1</sub> and core<sub>chr1</sub> would be assigned to the 5′A<sub>chr1</sub>-coreA<sub>chr1</sub> instance and not to 5′A<sub>chr1</sub>-coreB<sub>chr1</sub>. Furthermore, interactions between core<sub>chr1</sub> and 5′A<sub>chr2</sub>, a heterozygous contig of chromosome 2, would be evenly distributed between coreA<sub>chr1</sub>-5′A<sub>chr2</sub> and coreB<sub>chr1</sub>-5′A<sub>chr2</sub>. <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S8</xref> gives an example.</p>
    </sec>
    <sec id="SEC2-12">
      <title>Virtual 4C</title>
      <p>Virtual 4C is an analysis technique where a range on the x- or y-axis of the heatmap is chosen as the viewpoint. The values of bins falling in the range of this viewpoint are then displayed as a one-dimensional graph on the opposite axis. We implement on-the-fly virtual 4C computation. Notably, using prefix sums enables us to place bins such that they span over the complete viewpoint, even for multi-bin-sized viewpoints, making virtual 4C analysis particularly efficient.</p>
    </sec>
    <sec id="SEC2-13">
      <title>Enhancing the reusability of Smoothers implementation</title>
      <p>To enhance the reusability of Smoother, we split our implementation into three different projects: libSps, libSmoother, and Smoother. libSps is a datatype agnostic <underline>s</underline>parse <underline>p</underline>refix <underline>s</underline>um <underline>lib</underline>rary that is available as a standalone C++17 library, compatible with Windows, Linux, and macOS. It implements multidimensional range count queries on a given set of datapoints or hyperrectangles. Our library can either load the entire index into main memory on startup or use stxxl's (<xref rid="B24" ref-type="bibr">24</xref>) cached vectors to load and unload components as required. Keeping the entire index in main memory allows for better runtimes but cannot be done if main memory is smaller than the index. Further, libSps relies on Pybind11, so that it can be imported as a Python 3 module.</p>
      <p>Secondly, libSmoother is a C++17 library (compatible with Windows, Linux, and macOS) that takes care of all tasks related to interactome data, such as normalizing, coloring the heatmap, and computing the locations of bins. It makes use of libSps for the computationally expensive task of counting and filtering interactions. To avoid computing values multiple times, libSmoother is implemented as a computational graph. Using this graph, each step is aware of which parameters are relevant to it. Upon a parameter change, only steps that depend on the changed parameter are recomputed. libSmoother also relies on Pybind11 to be importable as a Python 3 module.</p>
      <p>Finally, Smoother, our visualization tool, is implemented in Python 3. It makes use of libSmoother as a backend. Further, it uses Bokeh to offer a web browser-based interface, running under Google Chrome, Safari, and Firefox. By being browser-based, Smoother can be deployed both as a webpage or standalone tool.</p>
    </sec>
  </sec>
  <sec sec-type="results" id="SEC3">
    <title>Results</title>
    <sec id="SEC3-1">
      <title>Smoother processes interactome data on-the-fly using a prefix sum index</title>
      <p>To be able to process interactome data fast enough for an interactive workflow, we broke with the pipeline paradigm that state-of-the-art interactome data analyses follow (<xref rid="B10" ref-type="bibr">10–12</xref>) (Figure <xref rid="F1" ref-type="fig">1A</xref>). Instead, our approach precomputes an index in a parameter-independent manner. Using this index, heatmaps with arbitrary filter parameters, bin size, and normalization, are then generated within seconds (Figure <xref rid="F1" ref-type="fig">1B</xref>).</p>
      <fig position="float" id="F1">
        <label>Figure 1.</label>
        <caption>
          <p>Outline of pipeline-based and index-based data analyses. <bold>(A)</bold> The top path outlines state-of-the-art pipeline-based processing of interactome data. Components of such pipelines are parameterized (black arrows) and can take up to several hours to run. The bottom path outlines our proposed index-based analysis. We preprocess all data into an index in a parameter-independent fashion. Using this index, the actual parameterized data processing can then be done within seconds. <bold>(B)</bold> Parameters of every processing step have a significant impact on the resulting heatmaps. The left panel displays various filters: all interactions, interactions with high mapping quality, and interactions that overlap a gene on the x-axis. The central panel shows interactions binned at various resolutions: 10, 50, and 200 kbp. The right panel illustrates data normalized by various approaches: unnormalized, ICed, as well as both ICed and normalized by Distance Dependent Decay (DDD). All panels show Hi-C data (<xref rid="B22" ref-type="bibr">22</xref>) from the central region of chromosome 8 of <italic toggle="yes">Trypanosoma brucei</italic>.</p>
        </caption>
        <graphic xlink:href="gkae008fig1" position="float"/>
      </fig>
      <p>Our index uses prefix sums to allow for constant time range sum queries (<xref rid="B17" ref-type="bibr">17</xref>,<xref rid="B18" ref-type="bibr">18</xref>). A range sum query computes the number of data points that lie in a given range. Importantly, with constant time queries, the time it takes to perform the queries does not increase with variables such as larger bin size, the number of interactions stored in the index, or the size of the analyzed genome. Decoupling the processing time from these variables is what allows on-the-fly data analysis.</p>
    </sec>
    <sec id="SEC3-2">
      <title>A multidimensional prefix sum index enables various filters</title>
      <p>A two-dimensional prefix sum index allows querying the number of interactions in bins with arbitrary sizes and positions. However, it is common to filter these interactions by various criteria. Hence, we extended our prefix sum index to allow such filtering on-the-fly, while keeping the index's runtime properties.</p>
      <p>One of the most common ways to filter interactome data is to remove interactions with low mapping quality. For such quality filtering, we introduced a third dimension to our index, where we place interactions at a position according to their mapping qualities. We then adjust the bounds of the queried region in that dimension to exclude interactions with mapping qualities outside of a desired range (Figure <xref rid="F2" ref-type="fig">2A</xref>). As before, we use prefix sums, to ensure fast processing times. Interactions with low mapping quality may be multimappers. Multimappers are interactions where one or both of the interaction partners map to multiple loci on the genome. Such multimappers may or may not need to be considered during the analysis. Therefore, we developed a strategy that stores each multimapper as the smallest possible rectangle that encloses all of its mapping loci. Multimappers can then be counted towards a bin if their stored rectangles are fully enclosed by the bin (Figure <xref rid="F2" ref-type="fig">2B</xref>).</p>
      <fig position="float" id="F2">
        <label>Figure 2.</label>
        <caption>
          <p>An overview of the on-the-fly data processing that is possible with Smoother. Shown here is <italic toggle="yes">Mus musculus</italic> RADICL-seq data from Bonetti et al. (<xref rid="B6" ref-type="bibr">6</xref>) and <italic toggle="yes">T. brucei</italic> Hi-C data from Müller et al. (<xref rid="B22" ref-type="bibr">22</xref>). <bold>(A)</bold> Interactions are filtered by mapping quality using a third dimension in the index. <bold>(B)</bold> Multimapping interactions count towards a bin if they are fully enclosed by the bin. This is done dynamically, considering the current bin size. <bold>(C)</bold> Middle panel: Interactions are filtered by whether they overlap an annotation or not. In this example, only interactions that overlap a gene on the y-axis are kept. Bottom panel: Instead of spacing bins out evenly over the genome, each bin is placed on one annotation. In this example, each heatmap column corresponds to a gene. <bold>(D)</bold> Ploidy-corrected heatmaps can be generated. <bold>(E)</bold> A virtual 4C analysis summarizes a slice of the heatmap into a graph. <bold>(F)</bold> ChIP-seq data and genomic annotations are overlaid onto the heatmap. <bold>(G)</bold> Two datasets, e.g. wild type (WT) and H3.V double knockout (H3.V<sup>−/−</sup>) cells, are compared by subtraction.</p>
        </caption>
        <graphic xlink:href="gkae008fig2" position="float"/>
      </fig>
      <p>For RNA-DNA interactome data, it is common to filter out interactions that do not align to a gene with their RNA interaction partner (<xref rid="B7" ref-type="bibr">7</xref>). We thus introduced a fourth dimension to our index that allows filtering out such interactions. Generalizing from genes, we allow filtering by any type of genomic annotation, on either or both axes (Figure <xref rid="F2" ref-type="fig">2C</xref>). With all non-gene interactions filtered out, RNA-DNA interactome data is then displayed such that, on one axis, each bin corresponds to one gene (called annotation coordinates), while bins on the other axis are consecutive and cover the whole genome (called genomic coordinates) (Figure <xref rid="F2" ref-type="fig">2C</xref>). Combining this coordinate system with the annotation overlap filter, Smoother can display heatmaps in the GRID-seq (<xref rid="B7" ref-type="bibr">7</xref>) fashion.</p>
      <p>Some cell lines and some organisms display aneuploidy or have genomic regions that are highly heterozygous. Both cases result in a situation where the ratio of the genome assembly's contigs to the corresponding physical chromosomes varies. We designed a ploidy correction scheme that splits interactions evenly among such contigs (Figure <xref rid="F2" ref-type="fig">2D</xref>).</p>
      <p>For further downstream analyses, we extended Smoother with several features: First, virtual 4C graphs (Figure <xref rid="F2" ref-type="fig">2E</xref>) can be computed. Virtual 4C refers to an approach where a slice of the heatmap is displayed as a one-dimensional graph. Typically, it is used to highlight interactions from a specific genomic locus, called the ‘viewpoint’. Next, one-dimensional sequencing data as well as annotations can be overlaid on the heatmap (Figure <xref rid="F2" ref-type="fig">2F</xref>). Furthermore, two datasets can be compared by subtraction or division (Figure <xref rid="F2" ref-type="fig">2G</xref>). Finally, Smoother can export publication-quality vector graphics (as SVG files), raster graphics (as PNG files), and raw data (as TSV files).</p>
    </sec>
    <sec id="SEC3-3">
      <title>On-the-fly normalization of interactome data</title>
      <p>To normalize interactome data, we implemented several approaches. For Hi-C data, these include IC (<xref rid="B12" ref-type="bibr">12</xref>) and Distance Dependent Decay (DDD) normalization. For RNA-DNA interactome data, we implemented normalization by Associated Slices (<xref rid="B7" ref-type="bibr">7</xref>), and Binomial test (<xref rid="B6" ref-type="bibr">6</xref>).</p>
      <p>In pipeline-based approaches, all these normalizations run on full matrices. However, Smoother achieves its performance by keeping a constant number of bins for every computed heatmap. When visualizing larger sections of a genome, the bin number is kept constant by increasing the bin size. Further, when zooming in to look at smaller regions of a genome, a constant number of bins is maintained by omitting bins outside of these regions of interest. This omission of bins prevents the use of normalization techniques that are designed to work on a full matrix. To solve this problem, we extended normalizations with a sampling strategy that considers some bins outside of the visible area during normalization. We argue that normalizations will behave as if they were applied to the full matrix, given a large enough number of samples. To evaluate our approach, we subdivided matrices into evenly sized windows. We then normalized each of those windows separately and concatenated them back together before comparing them to a matrix that was normalized in its entirety. For all normalizations, we find that normalizing with an increasing number of samples approaches normalizing over the whole matrix (Figure <xref rid="F3" ref-type="fig">3A</xref> and <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S9</xref>). To quantify these results, we computed the mean deviation of bin values from heatmaps normalized in windows and globally. Next, we plotted the mean deviations as a function of the number of samples (Figure <xref rid="F3" ref-type="fig">3B</xref>). For all normalizations, we find the mean deviation to decrease with an increasing number of samples (Figure <xref rid="F3" ref-type="fig">3C</xref>). While IC, Associated Slices, and DDD reach a deviation of zero with <inline-formula><tex-math id="M00024" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$ \sim$\end{document}</tex-math></inline-formula>1000 samples, Binomial test approaches zero more slowly. While varying the bin and window size may shift deviation up or down, neither variable affects the general trend that is observed (Figure <xref rid="F3" ref-type="fig">3B</xref> and <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S9</xref>). To obtain a good balance between accurate normalization (large number of bins sampled outside the visible area) and fast processing speed (small number of bins sampled outside the visible area), we set the following number of samples as default: 300 samples for IC, 1000 samples for Associated Slices, 100 for Binomial test, and 200 for DDD normalization. However, the number of samples can be adjusted in Smoother on-the-fly.</p>
      <fig position="float" id="F3">
        <label>Figure 3.</label>
        <caption>
          <p>Analyzing sampling-based normalization. <bold>(A)</bold><italic toggle="yes">T. brucei</italic> Hi-C data from Müller et al.(<xref rid="B22" ref-type="bibr">22</xref>). The left panel shows unnormalized data, while the right panel shows data that is IC normalized over the entire genome. For the central 3 panels, the genome is split into 5 Mbp-sized windows, which are ICed separately. In addition to the bins within a window, bins of 10, 100, and 1000 sample loci are also considered for ICing. Shown are only the first 3 windows of the full heatmap. <bold>(B)</bold> Left: quantification of A). Mean deviation of heatmap bins is plotted as a function of the number of samples. Running experiments for three different bin and window sizes shows that behavior is consistent across conditions. Right: mean time required to compute one window using default parameters and IC normalization as a function of the number of samples. <bold>(C)</bold> IC and DDD normalization are tested on <italic toggle="yes">T. brucei</italic> Hi-C data from Müller et al. (<xref rid="B22" ref-type="bibr">22</xref>), while Associates Slices and Binomial test are tested on <italic toggle="yes">M. musculus</italic> RADICL-seq data from Bonetti et al. (<xref rid="B6" ref-type="bibr">6</xref>). Left: Mean deviation of heatmap bins is plotted as a function of the number of samples for various normalizations. A bin size of 100 kbp and a window size of 5 Mbp is used for all approaches. Right: time required to compute one heatmap window using default parameters is plotted as a function of the number of samples for various normalizations. A bin size of 100 kbp and a window size of 5 Mbp is used for all approaches.</p>
        </caption>
        <graphic xlink:href="gkae008fig3" position="float"/>
      </fig>
      <p>Further, for 3C normalizations, we extended the approaches to deal with asymmetric data. This extension is necessary since subsections of a symmetrical matrix that are not centered on the diagonal are asymmetrical, even with our sampling approach. Additional details on how normalizations are extended and how their sampling is implemented can be found in the Materials and methods section.</p>
    </sec>
    <sec id="SEC3-4">
      <title>Benchmarking of Smoother reveals processing times in the millisecond range</title>
      <p>We benchmarked Smoother, analyzing processing times, index size, and preprocessing times. To obtain an overview of our approach for different datasets, we varied the base resolution of our index, the number of interactions in the dataset, the reference genome, and the set of activated filters.</p>
      <p>To evaluate index file size, we first merged two wild-type <italic toggle="yes">T. brucei</italic> Hi-C datasets (genome size <inline-formula><tex-math id="M00025" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\sim$\end{document}</tex-math></inline-formula>50 Mbp, number of interactions: <inline-formula><tex-math id="M00026" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\sim$\end{document}</tex-math></inline-formula>50 million) (<xref rid="B22" ref-type="bibr">22</xref>,<xref rid="B23" ref-type="bibr">23</xref>). By subsampling from the merged dataset to 20%, 40%, 60%, and 80%, we show that index file size increases at a decreasing rate with the number of interactions in the dataset (Figure <xref rid="F4" ref-type="fig">4A</xref>). This slowdown continues until every bin contains at least one interaction. At this point, the index is saturated. Adding further interactions would merely increase the values of the prefix sums in the file but not introduce new bins that need to be stored. Hence, once saturation is reached file size does not increase any further. Indices can be built with varying base resolutions. The base resolution of an index is the highest resolution the index can be used to create heatmaps. In theory, base resolution can reach up to a single base pair; however, practically, higher base resolutions increase file size, so limiting the base resolution to for example 5 kbp is reasonable. Additionally, we showed that index preprocessing time is relative to the file size (<xref rid="sup1" ref-type="supplementary-material">Supplementary Note S10</xref>–<xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S14A</xref>).</p>
      <fig position="float" id="F4">
        <label>Figure 4.</label>
        <caption>
          <p>Benchmarking index size and speed. <bold>(A)</bold> Index file size as a function of the number of stored unique interactions. <bold>(B)</bold> Time required to compute one heatmap using default parameters as a function of the number of unique interactions in the index. <bold>(C)</bold> Index file size as a function of the genome size. <bold>(D)</bold> Index file size for different active and inactive filters.</p>
        </caption>
        <graphic xlink:href="gkae008fig4" position="float"/>
      </fig>
      <p>Next, we measured processing times for 1000 heatmaps with Smoother's default parameters. Here, we measured the time required to compute a heatmap. We show that, as expected using prefix sums, processing time stays constant when the number of stored interactions increases across various base resolutions (Figure <xref rid="F4" ref-type="fig">4B</xref> and <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S10</xref>–<xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S14B</xref>).</p>
      <p>To measure the effect of varying genome size, we obtained Hi-C data from <italic toggle="yes">Escherichia coli</italic> (<xref rid="B25" ref-type="bibr">25</xref>), <italic toggle="yes">Saccharomyces cerevisiae</italic> (<xref rid="B26" ref-type="bibr">26</xref>), <italic toggle="yes">T. brucei</italic> (<xref rid="B22" ref-type="bibr">22</xref>,<xref rid="B23" ref-type="bibr">23</xref>), and <italic toggle="yes">Drosophila melanogaster</italic> (<xref rid="B27" ref-type="bibr">27</xref>) and down-sampled the datasets to an even density of 1000 interactions per squared mega-base pair. Such even density is crucial to measure the effect of varying genome size exclusively instead of measuring a combined effect of genome size and number of interactions in the dataset. We then measured index file size for all datasets (Figure <xref rid="F4" ref-type="fig">4C</xref>) and find that file size grows linearly with genome size, except for very small genomes. This demonstrates the effectiveness of the applied index compression, as an uncompressed index would have a file size that scales with the square of the genome size (see the Methods section ‘Reducing file size and preprocessing time’). Again, we confirmed that preprocessing times correlate with file size (<xref rid="sup1" ref-type="supplementary-material">Supplementary Note S10</xref>–<xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S14C</xref>) and that processing speed is roughly constant (<xref rid="sup1" ref-type="supplementary-material">Supplementary Note S10</xref>–<xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S14D</xref>) for varying genome sizes.</p>
      <p>Finally, we measured the effect of our filters on the index file size, using the <italic toggle="yes">T. brucei</italic> dataset. For this purpose, we removed the information relevant to the filters from the dataset before generating the index. For example, for the mapping quality, we placed all interactions at a default value in the mapping quality dimension. Comparing an index with filters to one without filters, we observe a ∼10-fold file size (Figure <xref rid="F4" ref-type="fig">4D</xref>) and ∼3-fold preprocessing speed (<xref rid="sup1" ref-type="supplementary-material">Supplementary Note S10</xref>–<xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S14E</xref>) difference. Filters increase index size, as each interaction is placed at a position representing its value for the corresponding filter in the index. For inactive filters, however, interactions are placed at a default value, hence reducing the size of the area that is covered by the index. Accordingly, we see index size vary significantly; however, processing time increases only minimally (∼1.5-fold; <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S10</xref>–<xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S14F</xref>). <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S11</xref> gives an overview of the number of dimensions used for each filter.</p>
      <p>In summary, Smoother's processing time stays almost constant as the amount of data increases, regardless of whether the increase is in the number of interactions, genome size, number of filters, or base resolution. Instead, the computational overhead of increased data amount now affects the file size of the index. The most significant increase in file size is observed with increasing genome size and base resolution. Even though each filter has a significant impact on the file size, the overall effect is small because the number of filters is small. Further, large numbers of interactions can be tolerated better than large genome sizes. However, we obtained reasonable index file sizes for any datasets with genomes smaller than 150 Mbp thus making Smoother perfectly suited for the analysis of archaea, bacteria, most fungi, nematodes, and many protists.</p>
    </sec>
  </sec>
  <sec sec-type="discussion" id="SEC4">
    <title>Discussion</title>
    <p>Here, we developed Smoother, a tool to analyze and visualize nucleic acid interactome data on-the-fly. To our knowledge, Smoother is the first tool that offers ultrafast, on-the-fly analysis of interactome data. This analysis includes, among others, filtering interactions by their mapping quality, and by whether they overlap annotations. Further, Smoother rescues multimapping interactions, corrects for ploidy, normalizes with various methods, compares different datasets, and offers downstream analyses such as virtual 4C.</p>
    <p>Smoother is based on prefix sums. We chose this approach as it minimizes the runtime required to query interaction counts. In contrast, storing interactions as a count matrix, as is done for pipeline-based approaches (<xref rid="B20" ref-type="bibr">20</xref>,<xref rid="B21" ref-type="bibr">21</xref>,<xref rid="B28" ref-type="bibr">28</xref>), requires storing bins for each permutation of filter values. While querying bins, relevant permutations then have to be summed up, slowing down runtime based on the chosen filter thresholds. To maintain this theoretical runtime advantage of prefix sums in real-world applications, index compression must be chosen accordingly. For example, Shekelyan et al.’s (<xref rid="B17" ref-type="bibr">17</xref>) approach is suited for this, since they maintain linear query complexity. In contrast, sparse coordinate lists, the approach that is commonly used to store count matrices (<xref rid="B21" ref-type="bibr">21</xref>), increase the runtime complexity. While either compression could be applied to both prefix sum and count matrices, we chose Shekelyan et al.’s approach for its better runtime behavior despite its lower compression rate. In addition to the lower compression rate, index size is increased by prefix sums requiring more bins to be stored than count matrices (<xref rid="sup1" ref-type="supplementary-material">Supplementary Note S12</xref>). However, the improved runtime behavior by prefix sums and the chosen compression, combined, allows on-the-fly data analysis.</p>
    <p>Further, prefix sums remove the need to coarsen heatmaps to various resolutions as is done with count matrices (<xref rid="B21" ref-type="bibr">21</xref>). Prefix sums even supersede the abilities of coarsening and allow computing bins at any resolution and position, whereas coarsening limits the chosen resolutions and bin positions.</p>
    <p>Since our approach is optimized for runtime complexity (speed), the file size of our index becomes a limiting factor. For species with large genomes, such as the human genome, even indices with a low base resolution of 50 kbp are larger than 100 Gb. File size can be reduced significantly by deactivating filters; however, this will also lead to Smoother losing some of its on-the-fly analysis capabilities. Instead of deactivating filters, future research could try to optimize the number of dimensions used by the individual filters. There are several reasons analysis tools based on count matrices are better at handling large genomes than our prefix sums based approach. Primarily, count matrices’ can be compressed more strongly. In addition, fewer interactions are stored in count matrices, as filtering is done beforehand, removing some interactions from the file. Finally, less data is stored for each interaction. For example, mapping quality, annotation overlap, and multimapping loci are not tracked.</p>
    <p>In summary, Smoother is ideally suited to analyze interactome data of many invertebrate genomes, such as those from many unicellular parasites like <italic toggle="yes">Plasmodium falciparum</italic>, <italic toggle="yes">Toxoplasma gondii</italic>, <italic toggle="yes">Trypanosoma brucei</italic>, many yeast species, and bacteria, where optimal analysis parameters are uncertain (<xref rid="B25" ref-type="bibr">25</xref>,<xref rid="B26" ref-type="bibr">26</xref>,<xref rid="B29" ref-type="bibr">29</xref>,<xref rid="B30" ref-type="bibr">30</xref>). Due to the integrated ploidy correction, Smoother is further excellently suited to analyze aneuploid organisms such as <italic toggle="yes">Trypanosoma cruzi</italic> and <italic toggle="yes">Leishmania spp</italic>. The ability to quickly compare interaction maps containing all reads with those only containing uniquely mapping reads, to instantaneously visualize the effect of different normalization methods and the ability to rescue a large proportion of non-uniquely mapping reads opens new possibilities to evaluate interactome maps. We believe that these features are especially important for genomes containing many repeats that have complicated analyses in the past. While ideally suited for genomes &lt; 150 Mbp, Smoother can also be used for larger genomes if subsections of the genome are analyzed as with methods such as capture Hi-C (<xref rid="B31" ref-type="bibr">31</xref>), or Micro Capture-C (<xref rid="B3" ref-type="bibr">3</xref>), or if datasets contain fewer than 20 million interactions such as with some RNA-DNA interactome capture methods. Ongoing research aimed at improving the compression of prefix sums will open the possibility of using Smoother for genome-wide analyses of larger genomes.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>gkae008_Supplemental_File</label>
      <media xlink:href="gkae008_supplemental_file.pdf"/>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack id="ACK1">
    <title>Acknowledgements</title>
    <p>We would like to thank Michael Shekelyan, Nezar Abdennur, Anton Goloborodko, and all members of the Siegel Laboratory for their valuable remarks. We would also like to thank the Bioinformatics Core Facility from the Biomedical Center at the Ludwig-Maximilians-Universität Munich for access to the computing cluster.</p>
    <p><italic toggle="yes">Author contributions</italic>: MS, TNS, and ABS conceived the project. Unless indicated otherwise, MS devised all algorithmic schemes, with TNS, ABS, and CR contributing valuable remarks. CR and MS devised the ploidy correction approach. MS implemented all code and performed all benchmarking. MS and ABS debugged the code. MS wrote the manuscript, with the assistance of TNS, ABS, and CR. ABS and MS wrote the documentation of the software, with TNS and CR contributing valuable remarks. All authors read and approved the manuscript.</p>
  </ack>
  <sec sec-type="data-availability" id="SEC5">
    <title>Data availability</title>
    <p>No data was created for this project. The used interactome datasets are publicly available under the Sequence Read Archive accession codes: SRR5820092 (<italic toggle="yes">D. melanogaster</italic>), SRR6354577 (<italic toggle="yes">E. coli</italic>), SRR14469367 (<italic toggle="yes">S. cerevisiae</italic>), SRR7721317, SRR7721318 and SRR7721307 (<italic toggle="yes">T. brucei</italic>), as well as SRR9201799 and SRR9201800 (<italic toggle="yes">M. musculus</italic>). The used genome sequences and their annotations are publicly available on NCBI under the RefSeq assembly Ids: GCF_000001215.4 (<italic toggle="yes">D. melanogaster</italic>), GCF_000005845.2 (<italic toggle="yes">E. coli</italic>), GCF_000146045.2 (<italic toggle="yes">S. cerevisiae</italic>), and GCF_000001635.27 (<italic toggle="yes">M. musculus</italic>). The <italic toggle="yes">T. brucei</italic> genome sequence and its annotations are publicly available on TryTrypDB under <ext-link xlink:href="http://www.tritrypdb.org/common/downloads/Current_Release/TbruceiLister427_2018/" ext-link-type="uri">www.tritrypdb.org/common/downloads/Current_Release/TbruceiLister427_2018/</ext-link>. Smoother is available as a pip package using ‘pip install biosmoother’. Source code is available on GitHub at <ext-link xlink:href="http://www.github.com/Siegel-Lab/BioSmoother" ext-link-type="uri">www.github.com/Siegel-Lab/BioSmoother</ext-link>, <ext-link xlink:href="http://www.github.com/Siegel-Lab/libBioSmoother" ext-link-type="uri">www.github.com/Siegel-Lab/libBioSmoother</ext-link>, and <ext-link xlink:href="http://www.github.com/Siegel-Lab/libSps" ext-link-type="uri">www.github.com/Siegel-Lab/libSps</ext-link>, for Smoother, libSmoother, and libSps, respectively. Further, all code has been deposited on Zenodo: Smoother: <ext-link xlink:href="https://doi.org/10.5281/zenodo.8402173" ext-link-type="uri">https://doi.org/10.5281/zenodo.8402173</ext-link>, libSmoother: <ext-link xlink:href="https://doi.org/10.5281/zenodo.8402040" ext-link-type="uri">https://doi.org/10.5281/zenodo.8402040</ext-link>, and libSps: <ext-link xlink:href="https://doi.org/10.5281/zenodo.8386312" ext-link-type="uri">https://doi.org/10.5281/zenodo.8386312</ext-link>. All code is published using the MIT license. Benchmarking results can be reproduced using the scripts in the benchmarking directory of the libSmoother repository. Throughout the manuscript, Smoother version 1.0.0, libSmoother version 1.0.0, and libSps version 1.0.0 were used.</p>
  </sec>
  <sec id="SEC7">
    <title>Supplementary data</title>
    <p><ext-link xlink:href="https://academic.oup.com/nar/article-lookup/doi/10.1093/nar/gkae008#supplementary-data" ext-link-type="uri">Supplementary Data</ext-link> are available at NAR Online.</p>
  </sec>
  <sec id="SEC8">
    <title>Funding</title>
    <p>German Research Foundation [CRC 1064/A33]; German Research Foundation [SI 1610/2-2]; an ERC Starting Grant [3D_Tryps 715466]; ERC Consolidator Grant [SwitchDecoding 101044320 to T.N.S.]. Funding for open access charge: German Research Foundation [CRC 1064].</p>
    <p><italic toggle="yes">Conflict of interest statement</italic>. None declared.</p>
  </sec>
  <ref-list id="REF1">
    <title>References</title>
    <ref id="B1">
      <label>1.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Belton</surname>  <given-names>J.-M.</given-names></string-name>, <string-name><surname>McCord</surname>  <given-names>R.P.</given-names></string-name>, <string-name><surname>Gibcus</surname>  <given-names>J.H.</given-names></string-name>, <string-name><surname>Naumova</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Zhan</surname>  <given-names>Y.</given-names></string-name>, <string-name><surname>Dekker</surname>  <given-names>J.</given-names></string-name></person-group>  <article-title>Hi–C: a comprehensive technique to capture the conformation of genomes</article-title>. <source>Methods</source>. <year>2012</year>; <volume>58</volume>:<fpage>268</fpage>–<lpage>276</lpage>.<pub-id pub-id-type="pmid">22652625</pub-id>
</mixed-citation>
    </ref>
    <ref id="B2">
      <label>2.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hsieh</surname>  <given-names>T.-H.S.</given-names></string-name>, <string-name><surname>Weiner</surname>  <given-names>A.</given-names></string-name>, <string-name><surname>Lajoie</surname>  <given-names>B.</given-names></string-name>, <string-name><surname>Dekker</surname>  <given-names>J.</given-names></string-name>, <string-name><surname>Friedman</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Rando</surname>  <given-names>O.J.</given-names></string-name></person-group>  <article-title>Mapping nucleosome resolution chromosome folding in yeast by micro-C</article-title>. <source>Cell</source>. <year>2015</year>; <volume>162</volume>:<fpage>108</fpage>–<lpage>119</lpage>.<pub-id pub-id-type="pmid">26119342</pub-id>
</mixed-citation>
    </ref>
    <ref id="B3">
      <label>3.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Goel</surname>  <given-names>V.Y.</given-names></string-name>, <string-name><surname>Huseyin</surname>  <given-names>M.K.</given-names></string-name>, <string-name><surname>Hansen</surname>  <given-names>A.S.</given-names></string-name></person-group>  <article-title>Region Capture Micro-C reveals coalescence of enhancers and promoters into nested microcompartments</article-title>. <source>Nat. Genet.</source>  <year>2023</year>; <volume>55</volume>:<fpage>1048</fpage>–<lpage>1056</lpage>.<pub-id pub-id-type="pmid">37157000</pub-id>
</mixed-citation>
    </ref>
    <ref id="B4">
      <label>4.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Deshpande</surname>  <given-names>A.S.</given-names></string-name>, <string-name><surname>Ulahannan</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Pendleton</surname>  <given-names>M.</given-names></string-name>, <string-name><surname>Dai</surname>  <given-names>X.</given-names></string-name>, <string-name><surname>Ly</surname>  <given-names>L.</given-names></string-name>, <string-name><surname>Behr</surname>  <given-names>J.M.</given-names></string-name>, <string-name><surname>Schwenk</surname>  <given-names>S.</given-names></string-name>, <string-name><surname>Liao</surname>  <given-names>W.</given-names></string-name>, <string-name><surname>Augello</surname>  <given-names>M.A.</given-names></string-name>, <string-name><surname>Tyer</surname>  <given-names>C.</given-names></string-name>  <etal>et al</etal>.</person-group>  <article-title>Identifying synergistic high-order 3D chromatin conformations from genome-scale nanopore concatemer sequencing</article-title>. <source>Nat. Biotechnol.</source>  <year>2022</year>; <volume>40</volume>:<fpage>1488</fpage>–<lpage>1499</lpage>.<pub-id pub-id-type="pmid">35637420</pub-id>
</mixed-citation>
    </ref>
    <ref id="B5">
      <label>5.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Quinodoz</surname>  <given-names>S.A.</given-names></string-name>, <string-name><surname>Bhat</surname>  <given-names>P.</given-names></string-name>, <string-name><surname>Chovanec</surname>  <given-names>P.</given-names></string-name>, <string-name><surname>Jachowicz</surname>  <given-names>J.W.</given-names></string-name>, <string-name><surname>Ollikainen</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Detmar</surname>  <given-names>E.</given-names></string-name>, <string-name><surname>Soehalim</surname>  <given-names>E.</given-names></string-name>, <string-name><surname>Guttman</surname>  <given-names>M.</given-names></string-name></person-group>  <article-title>SPRITE: a genome-wide method for mapping higher-order 3D interactions in the nucleus using combinatorial split-and-pool barcoding</article-title>. <source>Nat. Protoc.</source>  <year>2022</year>; <volume>17</volume>:<fpage>36</fpage>–<lpage>75</lpage>.<pub-id pub-id-type="pmid">35013617</pub-id>
</mixed-citation>
    </ref>
    <ref id="B6">
      <label>6.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bonetti</surname>  <given-names>A.</given-names></string-name>, <string-name><surname>Agostini</surname>  <given-names>F.</given-names></string-name>, <string-name><surname>Suzuki</surname>  <given-names>A.M.</given-names></string-name>, <string-name><surname>Hashimoto</surname>  <given-names>K.</given-names></string-name>, <string-name><surname>Pascarella</surname>  <given-names>G.</given-names></string-name>, <string-name><surname>Gimenez</surname>  <given-names>J.</given-names></string-name>, <string-name><surname>Roos</surname>  <given-names>L.</given-names></string-name>, <string-name><surname>Nash</surname>  <given-names>A.J.</given-names></string-name>, <string-name><surname>Ghilotti</surname>  <given-names>M.</given-names></string-name>, <string-name><surname>Cameron</surname>  <given-names>C.J.F.</given-names></string-name>  <etal>et al</etal>.</person-group>  <article-title>RADICL-seq identifies general and cell type–specific principles of genome-wide RNA-chromatin interactions</article-title>. <source>Nat. Commun.</source>  <year>2020</year>; <volume>11</volume>:<fpage>1018</fpage>.<pub-id pub-id-type="pmid">32094342</pub-id>
</mixed-citation>
    </ref>
    <ref id="B7">
      <label>7.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Li</surname>  <given-names>X.</given-names></string-name>, <string-name><surname>Zhou</surname>  <given-names>B.</given-names></string-name>, <string-name><surname>Chen</surname>  <given-names>L.</given-names></string-name>, <string-name><surname>Gou</surname>  <given-names>L.-T.</given-names></string-name>, <string-name><surname>Li</surname>  <given-names>H.</given-names></string-name>, <string-name><surname>Fu</surname>  <given-names>X.-D.</given-names></string-name></person-group>  <article-title>GRID-seq reveals the global RNA–chromatin interactome</article-title>. <source>Nat. Biotechnol.</source>  <year>2017</year>; <volume>35</volume>:<fpage>940</fpage>–<lpage>950</lpage>.<pub-id pub-id-type="pmid">28922346</pub-id>
</mixed-citation>
    </ref>
    <ref id="B8">
      <label>8.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Quinodoz</surname>  <given-names>S.A.</given-names></string-name>, <string-name><surname>Jachowicz</surname>  <given-names>J.W.</given-names></string-name>, <string-name><surname>Bhat</surname>  <given-names>P.</given-names></string-name>, <string-name><surname>Ollikainen</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Banerjee</surname>  <given-names>A.K.</given-names></string-name>, <string-name><surname>Goronzy</surname>  <given-names>I.N.</given-names></string-name>, <string-name><surname>Blanco</surname>  <given-names>M.R.</given-names></string-name>, <string-name><surname>Chovanec</surname>  <given-names>P.</given-names></string-name>, <string-name><surname>Chow</surname>  <given-names>A.</given-names></string-name>, <string-name><surname>Markaki</surname>  <given-names>Y.</given-names></string-name>  <etal>et al</etal>.</person-group>  <article-title>RNA promotes the formation of spatial compartments in the nucleus</article-title>. <source>Cell</source>. <year>2021</year>; <volume>184</volume>:<fpage>5775</fpage>–<lpage>5790</lpage>.<pub-id pub-id-type="pmid">34739832</pub-id>
</mixed-citation>
    </ref>
    <ref id="B9">
      <label>9.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cai</surname>  <given-names>Z.</given-names></string-name>, <string-name><surname>Cao</surname>  <given-names>C.</given-names></string-name>, <string-name><surname>Ji</surname>  <given-names>L.</given-names></string-name>, <string-name><surname>Ye</surname>  <given-names>R.</given-names></string-name>, <string-name><surname>Wang</surname>  <given-names>D.</given-names></string-name>, <string-name><surname>Xia</surname>  <given-names>C.</given-names></string-name>, <string-name><surname>Wang</surname>  <given-names>S.</given-names></string-name>, <string-name><surname>Du</surname>  <given-names>Z.</given-names></string-name>, <string-name><surname>Hu</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Yu</surname>  <given-names>X.</given-names></string-name>  <etal>et al</etal>.</person-group>  <article-title>RIC-seq for global in situ profiling of RNA–RNA spatial interactions</article-title>. <source>Nature</source>. <year>2020</year>; <volume>582</volume>:<fpage>432</fpage>–<lpage>437</lpage>.<pub-id pub-id-type="pmid">32499643</pub-id>
</mixed-citation>
    </ref>
    <ref id="B10">
      <label>10.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><collab>Open2C</collab><string-name><surname>Abdennur</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Abraham</surname>  <given-names>S.</given-names></string-name>, <string-name><surname>Fudenberg</surname>  <given-names>G.</given-names></string-name>, <string-name><surname>Flyamer</surname>  <given-names>I.M.</given-names></string-name>, <string-name><surname>Galitsyna</surname>  <given-names>A.A.</given-names></string-name>, <string-name><surname>Goloborodko</surname>  <given-names>A.</given-names></string-name>, <string-name><surname>Imakaev</surname>  <given-names>M.</given-names></string-name>, <string-name><surname>Oksuz</surname>  <given-names>B.A.</given-names></string-name>, <string-name><surname>Venev</surname>  <given-names>S.V.</given-names></string-name></person-group>  <article-title>Cooltools: enabling high-resolution Hi-C analysis in Python</article-title>. <year>2022</year>; <comment>bioRxiv doi:</comment><comment>01 November 2022, preprint: not peer reviewed</comment><pub-id pub-id-type="doi">10.1101/2022.10.31.514564</pub-id>.</mixed-citation>
    </ref>
    <ref id="B11">
      <label>11.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Durand</surname>  <given-names>N.C.</given-names></string-name>, <string-name><surname>Shamim</surname>  <given-names>M.S.</given-names></string-name>, <string-name><surname>Machol</surname>  <given-names>I.</given-names></string-name>, <string-name><surname>Rao</surname>  <given-names>S.S.P.</given-names></string-name>, <string-name><surname>Huntley</surname>  <given-names>M.H.</given-names></string-name>, <string-name><surname>Lander</surname>  <given-names>E.S.</given-names></string-name>, <string-name><surname>Aiden</surname>  <given-names>E.L.</given-names></string-name></person-group>  <article-title>Juicer provides a one-click system for analyzing loop-resolution hi-C experiments</article-title>. <source>Cell Syst.</source>  <year>2016</year>; <volume>3</volume>:<fpage>95</fpage>–<lpage>98</lpage>.<pub-id pub-id-type="pmid">27467249</pub-id>
</mixed-citation>
    </ref>
    <ref id="B12">
      <label>12.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Imakaev</surname>  <given-names>M.</given-names></string-name>, <string-name><surname>Fudenberg</surname>  <given-names>G.</given-names></string-name>, <string-name><surname>McCord</surname>  <given-names>R.P.</given-names></string-name>, <string-name><surname>Naumova</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Goloborodko</surname>  <given-names>A.</given-names></string-name>, <string-name><surname>Lajoie</surname>  <given-names>B.R.</given-names></string-name>, <string-name><surname>Dekker</surname>  <given-names>J.</given-names></string-name>, <string-name><surname>Mirny</surname>  <given-names>L.A.</given-names></string-name></person-group>  <article-title>Iterative correction of hi-C data reveals hallmarks of chromosome organization</article-title>. <source>Nat. Methods</source>. <year>2012</year>; <volume>9</volume>:<fpage>999</fpage>–<lpage>1003</lpage>.<pub-id pub-id-type="pmid">22941365</pub-id>
</mixed-citation>
    </ref>
    <ref id="B13">
      <label>13.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Knight</surname>  <given-names>P.A.</given-names></string-name>, <string-name><surname>Ruiz</surname>  <given-names>D.</given-names></string-name></person-group>  <article-title>A fast algorithm for matrix balancing</article-title>. <source>IMA J. Numer. Anal.</source>  <year>2013</year>; <volume>33</volume>:<fpage>1029</fpage>–<lpage>1047</lpage>.</mixed-citation>
    </ref>
    <ref id="B14">
      <label>14.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Durand</surname>  <given-names>N.C.</given-names></string-name>, <string-name><surname>Robinson</surname>  <given-names>J.T.</given-names></string-name>, <string-name><surname>Shamim</surname>  <given-names>M.S.</given-names></string-name>, <string-name><surname>Machol</surname>  <given-names>I.</given-names></string-name>, <string-name><surname>Mesirov</surname>  <given-names>J.P.</given-names></string-name>, <string-name><surname>Lander</surname>  <given-names>E.S.</given-names></string-name>, <string-name><surname>Aiden</surname>  <given-names>E.L.</given-names></string-name></person-group>  <article-title>Juicebox provides a visualization system for hi-C contact maps with unlimited zoom</article-title>. <source>Cell Syst.</source>  <year>2016</year>; <volume>3</volume>:<fpage>99</fpage>–<lpage>101</lpage>.<pub-id pub-id-type="pmid">27467250</pub-id>
</mixed-citation>
    </ref>
    <ref id="B15">
      <label>15.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Yardımcı</surname>  <given-names>G.G.</given-names></string-name>, <string-name><surname>Noble</surname>  <given-names>W.S.</given-names></string-name></person-group>  <article-title>Software tools for visualizing hi-C data</article-title>. <source>Genome Biol.</source>  <year>2017</year>; <volume>18</volume>:<fpage>26</fpage>.<pub-id pub-id-type="pmid">28159004</pub-id>
</mixed-citation>
    </ref>
    <ref id="B16">
      <label>16.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kerpedjiev</surname>  <given-names>P.</given-names></string-name>, <string-name><surname>Abdennur</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Lekschas</surname>  <given-names>F.</given-names></string-name>, <string-name><surname>McCallum</surname>  <given-names>C.</given-names></string-name>, <string-name><surname>Dinkla</surname>  <given-names>K.</given-names></string-name>, <string-name><surname>Strobelt</surname>  <given-names>H.</given-names></string-name>, <string-name><surname>Luber</surname>  <given-names>J.M.</given-names></string-name>, <string-name><surname>Ouellette</surname>  <given-names>S.B.</given-names></string-name>, <string-name><surname>Azhir</surname>  <given-names>A.</given-names></string-name>, <string-name><surname>Kumar</surname>  <given-names>N.</given-names></string-name>  <etal>et al</etal>.</person-group>  <article-title>HiGlass: web-based visual exploration and analysis of genome interaction maps</article-title>. <source>Genome Biol.</source>  <year>2018</year>; <volume>19</volume>:<fpage>125</fpage>.<pub-id pub-id-type="pmid">30143029</pub-id>
</mixed-citation>
    </ref>
    <ref id="B17">
      <label>17.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Shekelyan</surname>  <given-names>M.</given-names></string-name>, <string-name><surname>Dignös</surname>  <given-names>A.</given-names></string-name>, <string-name><surname>Gamper</surname>  <given-names>J.</given-names></string-name></person-group>  <article-title>Sparse prefix sums: constant-time range sum queries over sparse multidimensional data cubes</article-title>. <source>Information Systems</source>. <year>2019</year>; <volume>82</volume>:<fpage>136</fpage>–<lpage>147</lpage>.</mixed-citation>
    </ref>
    <ref id="B18">
      <label>18.</label>
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Geffner</surname>  <given-names>S.</given-names></string-name>, <string-name><surname>Agrawal</surname>  <given-names>D.</given-names></string-name>, <string-name><surname>El Abbadi</surname>  <given-names>A.</given-names></string-name>, <string-name><surname>Smith</surname>  <given-names>T.</given-names></string-name></person-group>  <article-title>Relative prefix sums: an efficient approach for querying dynamic OLAP data cubes</article-title>. <source>Proceedings 15th International Conference on Data Engineering (Cat. No.99CB36337)</source>. <year>1999</year>; <fpage>328</fpage>–<lpage>335</lpage>.</mixed-citation>
    </ref>
    <ref id="B19">
      <label>19.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Schmidt</surname>  <given-names>M.</given-names></string-name>, <string-name><surname>Heese</surname>  <given-names>K.</given-names></string-name>, <string-name><surname>Kutzner</surname>  <given-names>A.</given-names></string-name></person-group>  <article-title>Accurate high throughput alignment via line sweep-based seed processing</article-title>. <source>Nat. Commun.</source>  <year>2019</year>; <volume>10</volume>:<fpage>1939</fpage>.<pub-id pub-id-type="pmid">31028275</pub-id>
</mixed-citation>
    </ref>
    <ref id="B20">
      <label>20.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zheng</surname>  <given-names>Y.</given-names></string-name>, <string-name><surname>Ay</surname>  <given-names>F.</given-names></string-name>, <string-name><surname>Keles</surname>  <given-names>S.</given-names></string-name></person-group>  <article-title>Generative modeling of multi-mapping reads with mHi-C advances analysis of hi-C studies</article-title>. <source>eLife</source>. <year>2019</year>; <volume>8</volume>:<fpage>e38070</fpage>.<pub-id pub-id-type="pmid">30702424</pub-id>
</mixed-citation>
    </ref>
    <ref id="B21">
      <label>21.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Abdennur</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Mirny</surname>  <given-names>L.A.</given-names></string-name></person-group>  <article-title>Cooler: scalable storage for Hi-C data and other genomically labeled arrays</article-title>. <source>Bioinformatics</source>. <year>2020</year>; <volume>36</volume>:<fpage>311</fpage>–<lpage>316</lpage>.<pub-id pub-id-type="pmid">31290943</pub-id>
</mixed-citation>
    </ref>
    <ref id="B22">
      <label>22.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Müller</surname>  <given-names>L.S.M.</given-names></string-name>, <string-name><surname>Cosentino</surname>  <given-names>R.O.</given-names></string-name>, <string-name><surname>Förstner</surname>  <given-names>K.U.</given-names></string-name>, <string-name><surname>Guizetti</surname>  <given-names>J.</given-names></string-name>, <string-name><surname>Wedel</surname>  <given-names>C.</given-names></string-name>, <string-name><surname>Kaplan</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Janzen</surname>  <given-names>C.J.</given-names></string-name>, <string-name><surname>Arampatzi</surname>  <given-names>P.</given-names></string-name>, <string-name><surname>Vogel</surname>  <given-names>J.</given-names></string-name>, <string-name><surname>Steinbiss</surname>  <given-names>S.</given-names></string-name>  <etal>et al</etal>.</person-group>  <article-title>Genome organization and DNA accessibility control antigenic variation in trypanosomes</article-title>. <source>Nature</source>. <year>2018</year>; <volume>563</volume>:<fpage>121</fpage>–<lpage>125</lpage>.<pub-id pub-id-type="pmid">30333624</pub-id>
</mixed-citation>
    </ref>
    <ref id="B23">
      <label>23.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cosentino</surname>  <given-names>R.O.</given-names></string-name>, <string-name><surname>Brink</surname>  <given-names>B.G.</given-names></string-name>, <string-name><surname>Siegel</surname>  <given-names>T.N.</given-names></string-name></person-group>  <article-title>Allele-specific assembly of a eukaryotic genome corrects apparent frameshifts and reveals a lack of nonsense-mediated mRNA decay</article-title>. <source>NAR Genomics and Bioinformatics</source>. <year>2021</year>; <volume>3</volume>:<fpage>lqab082</fpage>.<pub-id pub-id-type="pmid">34541528</pub-id>
</mixed-citation>
    </ref>
    <ref id="B24">
      <label>24.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Dementiev</surname>  <given-names>R.</given-names></string-name>, <string-name><surname>Kettner</surname>  <given-names>L.</given-names></string-name>, <string-name><surname>Sanders</surname>  <given-names>P.</given-names></string-name></person-group>  <article-title>STXXL: standard template library for XXL data sets</article-title>. <source>Software: Practice and Experience</source>. <year>2008</year>; <volume>38</volume>:<fpage>589</fpage>–<lpage>637</lpage>.</mixed-citation>
    </ref>
    <ref id="B25">
      <label>25.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lioy</surname>  <given-names>V.S.</given-names></string-name>, <string-name><surname>Cournac</surname>  <given-names>A.</given-names></string-name>, <string-name><surname>Marbouty</surname>  <given-names>M.</given-names></string-name>, <string-name><surname>Duigou</surname>  <given-names>S.</given-names></string-name>, <string-name><surname>Mozziconacci</surname>  <given-names>J.</given-names></string-name>, <string-name><surname>Espéli</surname>  <given-names>O.</given-names></string-name>, <string-name><surname>Boccard</surname>  <given-names>F.</given-names></string-name>, <string-name><surname>Koszul</surname>  <given-names>R.</given-names></string-name></person-group>  <article-title>Multiscale structuring of the E. coli chromosome by nucleoid-associated and condensin proteins</article-title>. <source>Cell</source>. <year>2018</year>; <volume>172</volume>:<fpage>771</fpage>–<lpage>783</lpage>.<pub-id pub-id-type="pmid">29358050</pub-id>
</mixed-citation>
    </ref>
    <ref id="B26">
      <label>26.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lledó</surname>  <given-names>J.I.L.</given-names></string-name>, <string-name><surname>Cáceres</surname>  <given-names>M.</given-names></string-name></person-group>  <article-title>On the power and the systematic biases of the detection of chromosomal inversions by paired-end genome sequencing</article-title>. <source>PLoS One</source>. <year>2013</year>; <volume>8</volume>:<fpage>e61292</fpage>.<pub-id pub-id-type="pmid">23637806</pub-id>
</mixed-citation>
    </ref>
    <ref id="B27">
      <label>27.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wang</surname>  <given-names>Q.</given-names></string-name>, <string-name><surname>Sun</surname>  <given-names>Q.</given-names></string-name>, <string-name><surname>Czajkowsky</surname>  <given-names>D.M.</given-names></string-name>, <string-name><surname>Shao</surname>  <given-names>Z.</given-names></string-name></person-group>  <article-title>Sub-kb hi-C in D. melanogaster reveals conserved characteristics of TADs between insect and mammalian cells</article-title>. <source>Nat. Commun.</source>  <year>2018</year>; <volume>9</volume>:<fpage>188</fpage>.<pub-id pub-id-type="pmid">29335463</pub-id>
</mixed-citation>
    </ref>
    <ref id="B28">
      <label>28.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Servant</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Varoquaux</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Lajoie</surname>  <given-names>B.R.</given-names></string-name>, <string-name><surname>Viara</surname>  <given-names>E.</given-names></string-name>, <string-name><surname>Chen</surname>  <given-names>C.-J.</given-names></string-name>, <string-name><surname>Vert</surname>  <given-names>J.-P.</given-names></string-name>, <string-name><surname>Heard</surname>  <given-names>E.</given-names></string-name>, <string-name><surname>Dekker</surname>  <given-names>J.</given-names></string-name>, <string-name><surname>Barillot</surname>  <given-names>E.</given-names></string-name></person-group>  <article-title>HiC-Pro: an optimized and flexible pipeline for Hi-C data processing</article-title>. <source>Genome Biol.</source>  <year>2015</year>; <volume>16</volume>:<fpage>259</fpage>.<pub-id pub-id-type="pmid">26619908</pub-id>
</mixed-citation>
    </ref>
    <ref id="B29">
      <label>29.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Barcons-Simon</surname>  <given-names>A.</given-names></string-name>, <string-name><surname>Carrington</surname>  <given-names>M.</given-names></string-name>, <string-name><surname>Siegel</surname>  <given-names>T.N.</given-names></string-name></person-group>  <article-title>Decoding the impact of nuclear organization on antigenic variation in parasites</article-title>. <source>Nat. Microbiol.</source>  <year>2023</year>; <volume>8</volume>:<fpage>1408</fpage>–<lpage>1418</lpage>.<pub-id pub-id-type="pmid">37524976</pub-id>
</mixed-citation>
    </ref>
    <ref id="B30">
      <label>30.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bunnik</surname>  <given-names>E.M.</given-names></string-name>, <string-name><surname>Venkat</surname>  <given-names>A.</given-names></string-name>, <string-name><surname>Shao</surname>  <given-names>J.</given-names></string-name>, <string-name><surname>McGovern</surname>  <given-names>K.E.</given-names></string-name>, <string-name><surname>Batugedara</surname>  <given-names>G.</given-names></string-name>, <string-name><surname>Worth</surname>  <given-names>D.</given-names></string-name>, <string-name><surname>Prudhomme</surname>  <given-names>J.</given-names></string-name>, <string-name><surname>Lapp</surname>  <given-names>S.A.</given-names></string-name>, <string-name><surname>Andolina</surname>  <given-names>C.</given-names></string-name>, <string-name><surname>Ross</surname>  <given-names>L.S.</given-names></string-name>  <etal>et al</etal>.</person-group>  <article-title>Comparative 3D genome organization in apicomplexan parasites</article-title>. <source>Proc. Natl. Acad. Sci. U.S.A.</source>  <year>2019</year>; <volume>116</volume>:<fpage>3183</fpage>–<lpage>3192</lpage>.<pub-id pub-id-type="pmid">30723152</pub-id>
</mixed-citation>
    </ref>
    <ref id="B31">
      <label>31.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Mifsud</surname>  <given-names>B.</given-names></string-name>, <string-name><surname>Tavares-Cadete</surname>  <given-names>F.</given-names></string-name>, <string-name><surname>Young</surname>  <given-names>A.N.</given-names></string-name>, <string-name><surname>Sugar</surname>  <given-names>R.</given-names></string-name>, <string-name><surname>Schoenfelder</surname>  <given-names>S.</given-names></string-name>, <string-name><surname>Ferreira</surname>  <given-names>L.</given-names></string-name>, <string-name><surname>Wingett</surname>  <given-names>S.W.</given-names></string-name>, <string-name><surname>Andrews</surname>  <given-names>S.</given-names></string-name>, <string-name><surname>Grey</surname>  <given-names>W.</given-names></string-name>, <string-name><surname>Ewels</surname>  <given-names>P.A.</given-names></string-name>  <etal>et al</etal>.</person-group>  <article-title>Mapping long-range promoter contacts in human cells with high-resolution capture hi-C</article-title>. <source>Nat. Genet.</source>  <year>2015</year>; <volume>47</volume>:<fpage>598</fpage>–<lpage>606</lpage>.<pub-id pub-id-type="pmid">25938943</pub-id>
</mixed-citation>
    </ref>
  </ref-list>
</back>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Nucleic Acids Res</journal-id>
    <journal-id journal-id-type="iso-abbrev">Nucleic Acids Res</journal-id>
    <journal-id journal-id-type="publisher-id">nar</journal-id>
    <journal-title-group>
      <journal-title>Nucleic Acids Research</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">0305-1048</issn>
    <issn pub-type="epub">1362-4962</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10954447</article-id>
    <article-id pub-id-type="pmid">38281191</article-id>
    <article-id pub-id-type="doi">10.1093/nar/gkae008</article-id>
    <article-id pub-id-type="publisher-id">gkae008</article-id>
    <article-categories>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI00010</subject>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>Narese/7</subject>
        <subject>Narese/24</subject>
      </subj-group>
      <subj-group subj-group-type="heading">
        <subject>Methods</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Smoother: on-the-fly processing of interactome data using prefix sums</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-5601-6349</contrib-id>
        <name>
          <surname>Schmidt</surname>
          <given-names>Markus R</given-names>
        </name>
        <!--markus.schmidt@lmu.de-->
        <aff><institution>Division of Experimental Parasitology, Faculty of Veterinary Medicine, Ludwig-Maximilians-Universität München</institution>, <addr-line>Munich</addr-line>, <country country="DE">Germany</country></aff>
        <aff><institution>Biomedical Center, Division of Physiological Chemistry, Faculty of Medicine, Ludwig-Maximilians-Universität München</institution>, <addr-line>Munich</addr-line>, <country country="DE">Germany</country></aff>
        <xref rid="COR2" ref-type="corresp"/>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0003-3487-1421</contrib-id>
        <name>
          <surname>Barcons-Simon</surname>
          <given-names>Anna</given-names>
        </name>
        <aff><institution>Division of Experimental Parasitology, Faculty of Veterinary Medicine, Ludwig-Maximilians-Universität München</institution>, <addr-line>Munich</addr-line>, <country country="DE">Germany</country></aff>
        <aff><institution>Biomedical Center, Division of Physiological Chemistry, Faculty of Medicine, Ludwig-Maximilians-Universität München</institution>, <addr-line>Munich</addr-line>, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-4943-4323</contrib-id>
        <name>
          <surname>Rabuffo</surname>
          <given-names>Claudia</given-names>
        </name>
        <aff><institution>Division of Experimental Parasitology, Faculty of Veterinary Medicine, Ludwig-Maximilians-Universität München</institution>, <addr-line>Munich</addr-line>, <country country="DE">Germany</country></aff>
        <aff><institution>Biomedical Center, Division of Physiological Chemistry, Faculty of Medicine, Ludwig-Maximilians-Universität München</institution>, <addr-line>Munich</addr-line>, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-1715-7907</contrib-id>
        <name>
          <surname>Siegel</surname>
          <given-names>T Nicolai</given-names>
        </name>
        <!--n.siegel@lmu.de-->
        <aff><institution>Division of Experimental Parasitology, Faculty of Veterinary Medicine, Ludwig-Maximilians-Universität München</institution>, <addr-line>Munich</addr-line>, <country country="DE">Germany</country></aff>
        <aff><institution>Biomedical Center, Division of Physiological Chemistry, Faculty of Medicine, Ludwig-Maximilians-Universität München</institution>, <addr-line>Munich</addr-line>, <country country="DE">Germany</country></aff>
        <xref rid="COR1" ref-type="corresp"/>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="COR1">To whom correspondence should be addressed. Tel: +49 89 2180 77098; Email: <email>n.siegel@lmu.de</email></corresp>
      <corresp id="COR2">Correspondence may also be addressed to Markus R. Schmidt. Tel: +49 89 2180 71635; Email: <email>markus.schmidt@lmu.de</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <day>21</day>
      <month>3</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2024-01-28">
      <day>28</day>
      <month>1</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>28</day>
      <month>1</month>
      <year>2024</year>
    </pub-date>
    <volume>52</volume>
    <issue>5</issue>
    <fpage>e23</fpage>
    <lpage>e23</lpage>
    <history>
      <date date-type="accepted">
        <day>08</day>
        <month>1</month>
        <year>2024</year>
      </date>
      <date date-type="rev-recd">
        <day>11</day>
        <month>12</month>
        <year>2023</year>
      </date>
      <date date-type="received">
        <day>03</day>
        <month>11</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2024. Published by Oxford University Press on behalf of Nucleic Acids Research.</copyright-statement>
      <copyright-year>2024</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="gkae008.pdf"/>
    <abstract>
      <title>Abstract</title>
      <p>Nucleic acid interactome data, such as chromosome conformation capture data and RNA–DNA interactome data, are currently analyzed via pipelines that must be rerun for each new parameter set. A more dynamic approach is desirable since the optimal parameter set is commonly unknown ahead of time and rerunning pipelines is a time-consuming process. We have developed an approach fast enough to process interactome data on-the-fly using a sparse prefix sum index. With this index, we created Smoother, a flexible, multifeatured visualization and analysis tool that allows interactive filtering, e.g. by mapping quality, almost instant comparisons between different normalization approaches, e.g. iterative correction, and ploidy correction. Further, Smoother can overlay other sequencing data or genomic annotations, compare different samples, and perform virtual 4C analysis. Smoother permits a novel way to interact with and explore interactome data, fostering comprehensive, high-quality data analysis. Smoother is available at <ext-link xlink:href="https://github.com/Siegel-Lab/BioSmoother" ext-link-type="uri">https://github.com/Siegel-Lab/BioSmoother</ext-link> under the MIT license.</p>
    </abstract>
    <abstract abstract-type="graphical">
      <title>Graphical Abstract</title>
      <p>
        <fig position="float" id="ga1">
          <label>Graphical Abstract</label>
          <graphic xlink:href="gkae008figgra1" position="float"/>
        </fig>
      </p>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>German Research Foundation</institution>
            <institution-id institution-id-type="DOI">10.13039/501100001659</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>CRC 1064/A33</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>German Research Foundation</institution>
            <institution-id institution-id-type="DOI">10.13039/501100001659</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>SI 1610/2-2</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>ERC Starting Grant</institution>
          </institution-wrap>
        </funding-source>
        <award-id>3D_Tryps 715466</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>ERC Consolidator Grant</institution>
          </institution-wrap>
        </funding-source>
        <award-id>101044320</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="13"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec sec-type="intro" id="SEC1">
    <title>Introduction</title>
    <p>Chromosome conformation capture (3C) methods, RNA–DNA and RNA–RNA interactome capture methods sequence pairs of nucleic acid fragments that are in spatial proximity. 3C methods include Hi-C (<xref rid="B1" ref-type="bibr">1</xref>), Micro-C (<xref rid="B2" ref-type="bibr">2</xref>), RCMC (<xref rid="B3" ref-type="bibr">3</xref>), Pore-C (<xref rid="B4" ref-type="bibr">4</xref>) and SPRITE (<xref rid="B5" ref-type="bibr">5</xref>), while methods like RADICL-seq (<xref rid="B6" ref-type="bibr">6</xref>), GRID-seq (<xref rid="B7" ref-type="bibr">7</xref>), RD-SPRITE (<xref rid="B8" ref-type="bibr">8</xref>) or RIC-seq (<xref rid="B9" ref-type="bibr">9</xref>) are commonly used to capture the RNA interactome. These sequenced fragment pairs are called ‘interactions’ and one fragment of the pair is an ‘interaction partner’. Population-level sequencing of such interactions, hence, reveals the average contact frequencies of genomic loci. Such contact frequencies are commonly processed into two-dimensional heatmaps by (i) mapping, (ii) filtering, (iii) binning, (iv) normalizing and (v) displaying (<xref rid="B10" ref-type="bibr">10–13</xref>): (i) An aligner is used to find one or many mapping loci for each interaction partner. Each locus is assigned a mapping quality, which expresses the aligner's confidence in the correctness of the locus. (ii) Unwanted interactions, such as those with low mapping qualities or those mapping to multiple loci are filtered out. (iii) Interactions are placed into bins of a given resolution. From this step on, the number of interactions within a bin is typically stored in favor of individual interactions. (iv) Subsequently, normalization strategies are applied to correct for different biases occurring during sample preparation or data processing, e.g. during PCR amplification, mapping or filtering. The normalization of choice depends on the data type and the analysis to be performed. Commonly, 3C data are normalized with Iterative Correction (IC) (<xref rid="B12" ref-type="bibr">12</xref>) or KR-balancing (<xref rid="B13" ref-type="bibr">13</xref>), while Binomial test (<xref rid="B6" ref-type="bibr">6</xref>) and Associated Slices normalization (<xref rid="B7" ref-type="bibr">7</xref>) are used for RNA–DNA interactome data. IC and KR-balancing equalize the visibility of a matrix by equalizing its column and row sums, while the Binomial test determines the statistical significance of each bin over the genome-wide coverage of the interacting RNA. Associated Slices normalizes each bin by the sum of <italic toggle="yes">trans</italic>, chromatin-associated interactions that share the bin's interacting RNA. (v) Normalized data are displayed as two-dimensional heatmaps either by conversion into images or inspection with interactive viewers (<xref rid="B14" ref-type="bibr">14–18</xref>). These viewers aggregate heatmaps of various resolutions into a single file to be able to display both high-resolution images for small subsections of the dataset and low-resolution images for overviews of the dataset. However, parameters such as the available resolutions, the type of normalization, or filter thresholds (mapping quality, annotation overlap) remain fixed at this point.</p>
    <p>In many cases, nucleic acid interactome data are used in an exploratory fashion, e.g. to gain a general overview of the DNA-DNA or RNA–DNA interactome. Even if there is a specific hypothesis, e.g. that the depletion of a protein will lead to a decrease in interactions between two specific genomic loci, optimal parameters for data analysis are commonly unknown in advance. Yet, pipeline-based approaches require the commitment to specific parameter values from the outset. This routinely requires the rerunning of pipelines until a suitable parameter set has been found. With runtimes of up to several hours per step, such pipeline rerunning is a time-consuming process.</p>
    <p>To address this challenge, we created Smoother, an interactome data analysis tool that allows changing analysis parameters by interaction with a graphical user interface. Here, the effects of these parameter changes are displayed as an updated heatmap within seconds. Interactive changes can be made for any of the filtering, binning, normalizing, and displaying steps. For example, reads with low mapping quality can be removed, the normalization strategy can be changed entirely or run with different parameters, and bin size can be modified. A naïve strategy to offer such interactivity would be to rerun the pipeline each time a parameter changes. However, such rerunning is not practicable, due to the large amount of time required to process interactome datasets. Alternatively, to eliminate the need of having to reprocess the datasets continuously, heatmaps for all possible parameter permutations could be precomputed. While such precomputed heatmaps could be displayed very efficiently, the large number of parameter permutations makes it impossible to precompute and store all possible heatmaps for a given dataset. To solve this problem, we developed a strategy to precompute and store an encoded and compressed version of the heatmaps for all possible parameter permutations using prefix sums (<xref rid="B17" ref-type="bibr">17</xref>,<xref rid="B18" ref-type="bibr">18</xref>).</p>
  </sec>
  <sec sec-type="materials|methods" id="SEC2">
    <title>Materials and methods</title>
    <sec id="SEC2-1">
      <title>Using prefix sums for counting the number of interactions in a bin</title>
      <p>With the large size of interactome datasets of &gt;<inline-formula><tex-math id="M0001" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${10}^7$\end{document}</tex-math></inline-formula> interactions per replicate, it was crucial to make the runtime of our approach independent of the dataset size. The same applies to large genome sizes (<italic toggle="yes">T. brucei</italic>’s genome assembly is 50 Mb long). With such large genomes, gaining an overview of the entire dataset requires computing large bins. Hence, no matter the number of interactions, the bin size and the genome size, processing a heatmap should always take the same amount of time.</p>
      <p>Such constant heatmap processing time can be achieved using prefix sums (<xref rid="B17" ref-type="bibr">17</xref>,<xref rid="B18" ref-type="bibr">18</xref>): We first introduce the one-dimensional case with an example. Let us consider a genome of size 8 and a set of interactions at the positions <inline-formula><tex-math id="M0001a" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\{ {1,\ 3,\ 3,\ 7} \}$\end{document}</tex-math></inline-formula>. We want to efficiently count the number of interactions in any given bin. For example, a bin with a range from 2 to 6 contains 2 interactions. To do so, we first compute the prefix sums for all positions on the genome. The prefix sum of a position is the number of interactions at or before this position. In our example, the prefix sum at position 6 would be 3, since 3 interactions (1, 3 and 3) lie at or before position 6. We compute these prefix sums once and store them in a file. Next, we use these prefix sums for counting the number of interactions in bins. This is done by subtracting the prefix sum for the start position of the bin from the prefix sum of its end position (e.g. for the bin starting at 2 and ending at 6: <inline-formula><tex-math id="M0002" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$3 - 1 = 2$\end{document}</tex-math></inline-formula>). Such subtraction yields the correct number of points since the prefix sum for the end position holds the number of interactions that lie at or before the end of the bin, while the prefix sum for the start position holds the number of interactions that lie at or before the start of the bin. Subtracting both numbers leaves us with the number of interactions within the bin. As intended, the effort required for counting the number of interactions in any bin using prefix sums is independent of the number of interactions, the genome size, and the bin size: for any bin and dataset, two prefix sums are looked up and subtracted. <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S1</xref> generalizes this approach to the <inline-formula><tex-math id="M0003" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$d$\end{document}</tex-math></inline-formula>-dimensional case.</p>
      <p>Alternative data structures to prefix sums could be R-trees or range trees. We opted to use prefix sums as they offer the fastest querying times by orders of magnitudes. <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S2</xref> compares these three data structures in more detail.</p>
    </sec>
    <sec id="SEC2-2">
      <title>Filtering interactions by mapping quality using an additional dimension</title>
      <p>Mapping quality expresses the aligner's confidence in the correctness of the alignment of a read. Therefore, a read that aligns equally well to two positions of the reference genome would produce two alignments with mapping quality zero, while a read that is completely distinct from all but one genomic locus would yield one alignment with a very high mapping quality (<xref rid="B19" ref-type="bibr">19</xref>).</p>
      <p>To filter out interactions with low mapping qualities on-the-fly, we moved from 2D to 3D prefix sums. Here, each interaction still has an <inline-formula><tex-math id="M0004" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$x$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math id="M0005" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$y$\end{document}</tex-math></inline-formula> position based on the alignments of the interaction partners. Additionally, we give each interaction a <italic toggle="yes">z</italic> position according to the alignments’ mapping qualities (we use the lower of the two mapping qualities). Then, instead of querying one rectangle for each bin of the heatmap, we query a cube. By varying the <italic toggle="yes">z</italic> position of the bottom face of these cubes, we filter out interactions with low mapping qualities (Figure <xref rid="F2" ref-type="fig">2A</xref>).</p>
      <p>A <inline-formula><tex-math id="M0006" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$d$\end{document}</tex-math></inline-formula>-dimensional index requires <inline-formula><tex-math id="M0007" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${2}^d$\end{document}</tex-math></inline-formula> lookups per counting operation, where each lookup corresponds to one corner of the queried <inline-formula><tex-math id="M0008" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$d$\end{document}</tex-math></inline-formula>-hyperrectangle (<xref rid="sup1" ref-type="supplementary-material">Supplementary Note S1</xref>). Hence, introducing a new dimension would slow our approach down by a factor of two. However, we know that the prefix sum of a position smaller than all interactions must be zero. Thus, points of a queried <inline-formula><tex-math id="M0009" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$d$\end{document}</tex-math></inline-formula>-hyperrectangle that lie below all interactions need no lookup, possibly reducing the query complexity. To make use of this reduced query time, we invert the <inline-formula><tex-math id="M00010" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$z$\end{document}</tex-math></inline-formula>-dimension of our index. This way, interactions with high mapping qualities lie at the bottom, while those with low mapping qualities are positioned at the top. We then filter out low mapping qualities by varying the height of the queried cubes’ top face (instead of the bottom face). Importantly, this way, the bottom face of all cubes is always located below the highest possible mapping quality. Hence, we know that all four corners of the bottom face have a prefix sum of zero and require no lookup. This reduces the number of lookups to four (instead of the eight usually required for cubes), making this filter have no query time penalty whatsoever.</p>
    </sec>
    <sec id="SEC2-3">
      <title>Rescuing multimapping interactions by counting rectangles instead of points</title>
      <p>As described above, we can use an additional dimension to filter out interactions that align equally well to multiple positions of the genome by filtering out interactions with mapping quality zero. However, we also offer a complementing feature to deal with such ambiguous alignments: an interaction that maps to multiple positions can lead to two separate situations, where either (i) alignments are distributed over several bins or (ii) all alignments are within the same bin. While displaying distributed alignments (case i) would lead to more noise in the heatmap, displaying confined alignments (case ii) does not. Case ii does not lead to noise, since, while we do not know the exact loci of a confined interaction, we do know that all possible loci of the interaction are within the same bin. Hence, we can safely count this interaction towards the bin. This is a simplified implementation of the approach of Zheng <italic toggle="yes">et al.</italic> (<xref rid="B20" ref-type="bibr">20</xref>).</p>
      <p>For implementing this feature, and so distinguishing cases (i) and (ii), we extended the prefix sum approach to storing and counting rectangles instead of points. These rectangles are generated by first determining all alignment loci of an interaction and then storing the smallest rectangle that encloses all these loci using prefix sums. We next filter out all distributed alignments (case i), by only counting rectangles that are fully enclosed by a bin (Figure <xref rid="F2" ref-type="fig">2B</xref>).</p>
      <p>First, we introduce the one-dimensional case, where fully enclosed intervals are counted (instead of rectangles): There, we count how many multimapper-intervals are fully enclosed in a given bin by subtracting the number of multimapper-intervals starting before the bin from the number of multimapper-intervals ending after the bin (see <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S3</xref>). This filters our intervals that overlap either edge of the bin. However, the approach cannot deal with intervals that fully enclose the bin (see <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S3</xref>). For filtering out such enclosing intervals we introduce an additional dimension. In this dimension intervals are placed at a position according to their width. We then filter out all intervals larger than the bin, and so any intervals that could potentially fully enclose the bin, by adjusting the bounds of the queried region in the filter dimension. For this additional dimension, no inversion of the axis is needed to improve runtime (as opposed to the mapping quality dimension), as we filter out large values to begin with. <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S3</xref> details how this approach can be generalized to the <inline-formula><tex-math id="M00011" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$d$\end{document}</tex-math></inline-formula>-dimensional case, storing <italic toggle="yes">d</italic>-dimensional hyperrectangles. Further, <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S3</xref> details how to count all overlapping instead of enclosed hyperrectangles.</p>
    </sec>
    <sec id="SEC2-4">
      <title>Filtering by annotation using two additional dimensions per annotation type</title>
      <p>RNA–DNA interactome data is often analyzed considering merely reads that originate from gene bodies. Since our goal is to make our index agnostic to the type of data that is stored, all analysis-related parameters shall be set during querying. Hence, we require a query time option to filter out reads that do not overlap gene bodies, or, more broadly, any chosen type of genomic annotation. For this, we introduced two filter dimensions per annotation type, where one dimension stores x- and the other y-axis overlaps. Interactions are then placed at position zero or one in each of these dimensions depending on whether they overlay the annotation type or not.</p>
      <p>Annotation overlap is checked individually for each locus of a multimapping interaction. The multimapper is then considered to overlap any annotation that at least one of its mapping loci overlaps.</p>
    </sec>
    <sec id="SEC2-5">
      <title>Annotation coordinates</title>
      <p>Some RNA interactome analyses do not show all reads, but merely those that fall within genes (<xref rid="B7" ref-type="bibr">7</xref>). Hence the bins of the heatmap do not lie consecutively on the genome (called ‘genomic coordinates’). Instead, each bin covers exactly one gene and the space between genes is not shown in the heatmap. We abstract from the specific type of annotation and allow the use of any type of annotation. We call this coordinate system ‘annotation coordinates’.</p>
      <p>To ensure that the render time of our approach is independent of the size of the rendered area, we need to ensure that the number of bins that are displayed is roughly constant. With genomic coordinates, we adjust bin width and height to keep the total number of displayed bins constant. For bins that follow annotation coordinates, we adjust the number of annotations that are displayed within a bin instead. Since prefix sums are stored using genomic coordinates in our index, we implemented a system to translate from annotation to genomic coordinates. For this, we store each annotation type as a sorted array, where each element keeps the genomic start and end position of one annotation instance. Using the first and last annotation contained in a bin, we translate the bin's annotation coordinates to its genomic coordinates for lookup in the index. Combining multiple annotations this way would also count interactions in the void space between the annotations. We hence make use of our annotation filter (described in the Materials and methods section ‘Filtering by annotation using two additional dimensions per annotation type’) to remove these unwanted interactions.</p>
    </sec>
    <sec id="SEC2-6">
      <title>Reducing file size and preprocessing time</title>
      <p>Storing or computing prefix sums for all possible loci in a data space, as suggested above, is not feasible since there are too many loci: We work with a relatively small (compared to human, for example), <inline-formula><tex-math id="M00012" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\sim 5*{10}^7$\end{document}</tex-math></inline-formula>nt long assembly of the organism <italic toggle="yes">T. brucei</italic>; Aligners can output 256 different mapping quality values; Rectangles can grow in width and height up to the size of the largest contig, hence <inline-formula><tex-math id="M00013" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\sim 5*{10}^6$\end{document}</tex-math></inline-formula> different values (for <italic toggle="yes">T. brucei</italic>); Finally, one prefix sum requires 32 bytes to store. Factoring up these numbers, we would require <inline-formula><tex-math id="M00014" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\sim {10}^{20}$\end{document}</tex-math></inline-formula> terabytes of storage for one index. Larger assemblies, such as the human genome, would require even more storage. Further, computing this many values would take an insurmountable amount of processing time and power.</p>
      <p>Conveniently, reducing the storage requirements and construction time of prefix sum indices has already been studied (<xref rid="B17" ref-type="bibr">17</xref>,<xref rid="B18" ref-type="bibr">18</xref>). We modified the sparse prefix sum approach of Shekelyan et al. (<xref rid="B17" ref-type="bibr">17</xref>) to our needs. They use one lookup table per dimension to translate the original data space into a sparse space. In this sparse space, all empty slices are removed. For example, if there is no point with a <inline-formula><tex-math id="M00015" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$y$\end{document}</tex-math></inline-formula> coordinate of 5, the entire slice <inline-formula><tex-math id="M00016" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$y = 5$\end{document}</tex-math></inline-formula> is removed in sparse space. These lookup tables span over the entire data space and store, for each position, the number preceding non-empty slices. Any data space coordinate can now be translated into sparse space by lookup in these tables. In sparse space, points are compressed while preserving their order of occurrence in any dimension. It is sufficient to store the prefix sums for all positions in sparse space, merely, since prefix sums cannot change in interaction-free slices.</p>
      <p>With an increasing number of datapoints, the efficiency of this compression diminishes. Hence, Shekelyan et al. divide the data space into an even grid of boxes, where each box has its individual sparse space and lookup tables. They pick the number of boxes to optimize the update complexity of the index. In our case, updates are not needed, allowing us to optimize the number of boxes to minimize index size instead. Index size is data-distribution-dependent and thus different for each dataset. We hence implemented an approach that heuristically predicts index size for any given number of boxes. Predicting index size for various numbers of boxes, we determine the minimal size and therefore the optimal number of boxes. Index size is predicted by picking 1000 boxes at random and determining their sparse space as well as the size of their lookup tables. Both values are determined by a binary search over all datapoints. (The datapoints are previously sorted ascendingly for each dimension.) We then extrapolate the average storage space of these boxes to the full index.</p>
      <p>To further reduce the required storage size, we divide the <inline-formula><tex-math id="M00017" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$x$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math id="M00018" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$y$\end{document}</tex-math></inline-formula> positions of all interactions by a constant dividend <inline-formula><tex-math id="M00019" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$d$\end{document}</tex-math></inline-formula>. This reduces the size of the abovementioned lookup tables. Further, interactions close to the 45<inline-formula><tex-math id="M00020" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$^\circ$\end{document}</tex-math></inline-formula> diagonal are often dense enough to make their divided positions concur, reducing the number of non-empty slices and therefore the size of the sparse space. The disadvantage of this approach is that the minimum bin size becomes limited to <inline-formula><tex-math id="M00021" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$d$\end{document}</tex-math></inline-formula>. We call <inline-formula><tex-math id="M00022" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$d$\end{document}</tex-math></inline-formula> the base resolution of the index.</p>
      <p>Finally, we also reduce storage size by storing each contig-pair as an individual matrix rather than concatenating them. This reduces index size since non-empty slices from dense contig-pairs (e.g. <italic toggle="yes">cis-</italic>contigs) do not affect sparse contig pairs when stored separately.</p>
    </sec>
    <sec id="SEC2-7">
      <title>Iterative correction and eigenvector decomposition for partial matrices</title>
      <p>State-of-the-art iterative correction (IC), as implemented in e.g. cooler (<xref rid="B21" ref-type="bibr">21</xref>), is designed to run on a complete and symmetric Hi-C matrix. However, our index-based approach gains its runtime advantage from merely processing the part of the matrix that is currently visible. Hence, we need to adapt IC to be used on partial matrices. This adaptation is composed of two separate tasks: First, IC needs to work on asymmetric matrices; second, IC needs to approximate the effect of the missing bins.</p>
      <p>For dealing with asymmetric matrices, we modified the IC approach to use two sets of biases, one for each dimension. This is necessary since even if the full matrix is symmetric, the currently visible region of that matrix might not be symmetric without the larger context. In <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S4</xref>, we show that our modification has no effect on symmetric matrices. This proves that the modification is valid.</p>
      <p>Second, we sample a subset of the missing bins. A large enough number of samples is expected to even out to the average background of the heatmap. Samples must preserve the rectangular shape of the heatmap and cannot leave empty bins for ICing to work. We hence place samples as evenly spaced concentric rings around the visible area. Here, each ring is one sample that decomposes into several bins to match the columns and rows of the heatmap and previous samples. The bin size of samples is even to the size of bins in the visible area. Sample bins that are outside of the genome are omitted. This way, each sample adds up to two rows and two columns to the heatmap. <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S4</xref> gives an example. In the results section, we analyze the number of samples necessary to minimize the noise this sampling-based approach introduces.</p>
    </sec>
    <sec id="SEC2-8">
      <title>Associated slices normalization for partial matrices</title>
      <p>RNA-DNA interactome data can be normalized using the approach of Li et al. (<xref rid="B7" ref-type="bibr">7</xref>). This normalization consists of two main steps: First, all interactions with an RNA partner that does not originate from within a chromatin-associated gene body are filtered out. Second, all bins are normalized by the sum of <italic toggle="yes">trans</italic> interactions of chromatin-associated gene bodies for the respective RNA locus.</p>
      <p>We now introduce how to compute this normalization without access to the full matrix. First, we determine chromatin-associated gene bodies. To avoid scanning the whole genome, we take evenly-spaced samples of gene bodies (or any type of genomic annotation). In the results section, we analyze which number of samples is necessary to minimize differences between our sampling-based and the global approach. We compute two properties for each sampled gene body: Its average RNA reads per kbp and its maximal DNA reads in a 1 kbp-binned genome. Average RNA reads per kbp are determined by querying the total amount of RNA reads for the gene body (this requires one query per contig, using a bin that spans the gene body on one dimension and the whole contig on the other dimension) and dividing by genome size. Computing the maximal number of DNA reads in a 1 kbp binned genome is not as trivial: Querying every 1 kbp region one by one is not efficient enough. Hence, we use a recursive divide-and-conquer approach: First, we query each complete contig as one ‘region’. We store the queried regions in a max heap, recursively picking out the region with the highest count, splitting it in half, and re-querying it. Once the largest region is of size 1 kbp, we have reached the correct result. Following Li et al.(<xref rid="B7" ref-type="bibr">7</xref>) we then proceed to designate chromatin-associated gene bodies by applying thresholds to the average RNA reads and maximal DNA reads.</p>
      <p>Next, we compute the RNA coverage of <italic toggle="yes">trans</italic> interactions in chromatin-associated gene bodies for the visible region of the heatmap. For this, we require one query per gene body and visible slice. Finally, we normalize the shown bins by this coverage. <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S5</xref> gives an example of this sampling approach. In the results section, we analyze the number of samples necessary to minimize the noise this sampling-based approach introduces.</p>
    </sec>
    <sec id="SEC2-9">
      <title>Binomial test normalization for partial matrices</title>
      <p>RNA-DNA interactome data can be normalized using the approach of Bonetti et al. (<xref rid="B6" ref-type="bibr">6</xref>). There, they apply a Binomial test to ascertain whether a bin is statistically significant or not. Following Bonetti et al. (<xref rid="B6" ref-type="bibr">6</xref>), we use a Binomial test and correct p-values using the Benjamini/Hochberg method. To approximate applying this normalization to the full matrix, we use a sampling-based approach. We place samples as additional rows above and below the heatmap, where bins in the samples preserve the columns of the heatmap. <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S6</xref> gives an example. In the results section, we analyze the number of samples necessary to minimize the noise this sampling-based approach introduces.</p>
    </sec>
    <sec id="SEC2-10">
      <title>Distance dependent decay normalization for partial matrices</title>
      <p>To be able to normalize our matrices by distance dependent decay (DDD), without computing the full matrix, we apply the following scheme: While computing the locations of all bins, we record their distance to the diagonal of the heatmap. Here, the distance can be positive or negative to differentiate the regions right and left of the diagonal (this becomes relevant in the case of asymmetric data). For each recorded distance from the diagonal on each contig-pair, we then sample evenly spaced bins. These sampled bins are of the same size as the displayed bins; They are placed at the recorded distance from the diagonal and spaced evenly in a parallel fashion to the diagonal. We then query the number of interactions in the sampled bins. To compute the DDD for each distance from the diagonal on each contig-pair, we exclude the <inline-formula><tex-math id="M00023" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$x$\end{document}</tex-math></inline-formula>th top and bottom percentile of sampled bins and average the number of interactions from the remainder. Excluding the top and bottom percentiles of sampled bins is necessary to remove the impact of loops and under-sampled regions, respectively. We compute the average number of interactions instead of the median to deal with sparse data, where most values are zero or one. Such a situation would yield a median that jumps between zero and one, and so, in turn, a noisy picture. <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S7</xref> gives an example of this sampling.</p>
    </sec>
    <sec id="SEC2-11">
      <title>Correcting for ploidy</title>
      <p>Typically, interactome data are mapped on a consensus haploid assembly and the analysis assumes that each chromosome is represented an equal number of times. However, organisms can display aneuploidy, where the physical chromosome number is not a multiple of the haploid set. In such cases, the chromosome number of the <italic toggle="yes">in silico</italic> genome assembly would not correspond to the number of physical chromosomes. As a result, some interactions may be over- or underestimated. The same misestimation can arise from chromosomes in the same chromosomal set that contain both homozygous regions, collapsed in the assembly, and heterozygous regions that are assembled as separate contigs. From now on, we will refer to contigs that <italic toggle="yes">in silico</italic> do not match their physical copy number as ‘misrepresented’ and we will call such physical copy number ‘<italic toggle="yes">n</italic>-ploidy’.</p>
      <p>To correct for aneuploidy, we implement a strategy that distributes interactions among misrepresented contig-pairs. In detail, we make <italic toggle="yes">n</italic>-ploid contigs appear as <italic toggle="yes">n</italic> ‘instances’ in the heatmap. Then, interactions in misrepresented contig-pairs are divided evenly among the instances of the contigs (Figure <xref rid="F2" ref-type="fig">2E</xref>). For example, an interaction between a diploid and a triploid contig would count with 1/6 towards each of the 6 (2*3) instances of the corrected contig-pair. An interaction between the same triploid contig and a haploid contig would contribute 1/3 to each of the 3 instances of this contig-pair.</p>
      <p>For intra-contig interactions, we assume that all interactions occur intra-instance-wise. Hence, an intra-contig interaction of the triploid contig (with instances A, B, and C) would count 1/3 towards the instance pair A-A, 1/3 towards B-B, and 1/3 towards C-C. The interaction would not count towards any of the other instance-pairs (A-B, B-A, A-C, …). While this assumption does not hold true in nature, it is closer to actual reality than splitting interactions up evenly among all instance pairs.</p>
      <p>Finally, we consider the case where chromosomes have varying zygosities. An example is <italic toggle="yes">T. brucei:</italic> Its genome is organized in diploid chromosomes, with homozygous core regions and heterozygous subtelomeric regions (<xref rid="B22" ref-type="bibr">22</xref>,<xref rid="B23" ref-type="bibr">23</xref>). In the genome assembly, such a chromosome (e.g. chromosome 1) is composed of five contigs: two contigs for the 3′ subtelomere (3′A<sub>chr1</sub> and 3′B<sub>chr1</sub>), one contig for the core (core<sub>chr1</sub>), and two contigs for the 5′ subtelomere (5′A<sub>chr1</sub> and 5′B<sub>chr1</sub>). In this case, ploidy correction works by defining the following two groups: 3′A<sub>chr1</sub>-coreA<sub>chr1</sub>-5′A<sub>chr1</sub>, 3′B<sub>chr1</sub>-coreB<sub>chr1</sub>-5′B<sub>chr1</sub>, where coreA<sub>chr1</sub> and coreB<sub>chr1</sub> are two instances of the core<sub>chr1</sub> contig. As with intra-contig interactions, we assume intra-group interactions to take prevalence. In detail, for every contig pair where at least one contig has multiple instances, interactions are split among the pair's instances that are within a group, if at least one pair-instance is within a group. Otherwise, interactions are split among all instances. Hence, interactions occurring between 5′A<sub>chr1</sub> and core<sub>chr1</sub> would be assigned to the 5′A<sub>chr1</sub>-coreA<sub>chr1</sub> instance and not to 5′A<sub>chr1</sub>-coreB<sub>chr1</sub>. Furthermore, interactions between core<sub>chr1</sub> and 5′A<sub>chr2</sub>, a heterozygous contig of chromosome 2, would be evenly distributed between coreA<sub>chr1</sub>-5′A<sub>chr2</sub> and coreB<sub>chr1</sub>-5′A<sub>chr2</sub>. <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S8</xref> gives an example.</p>
    </sec>
    <sec id="SEC2-12">
      <title>Virtual 4C</title>
      <p>Virtual 4C is an analysis technique where a range on the x- or y-axis of the heatmap is chosen as the viewpoint. The values of bins falling in the range of this viewpoint are then displayed as a one-dimensional graph on the opposite axis. We implement on-the-fly virtual 4C computation. Notably, using prefix sums enables us to place bins such that they span over the complete viewpoint, even for multi-bin-sized viewpoints, making virtual 4C analysis particularly efficient.</p>
    </sec>
    <sec id="SEC2-13">
      <title>Enhancing the reusability of Smoothers implementation</title>
      <p>To enhance the reusability of Smoother, we split our implementation into three different projects: libSps, libSmoother, and Smoother. libSps is a datatype agnostic <underline>s</underline>parse <underline>p</underline>refix <underline>s</underline>um <underline>lib</underline>rary that is available as a standalone C++17 library, compatible with Windows, Linux, and macOS. It implements multidimensional range count queries on a given set of datapoints or hyperrectangles. Our library can either load the entire index into main memory on startup or use stxxl's (<xref rid="B24" ref-type="bibr">24</xref>) cached vectors to load and unload components as required. Keeping the entire index in main memory allows for better runtimes but cannot be done if main memory is smaller than the index. Further, libSps relies on Pybind11, so that it can be imported as a Python 3 module.</p>
      <p>Secondly, libSmoother is a C++17 library (compatible with Windows, Linux, and macOS) that takes care of all tasks related to interactome data, such as normalizing, coloring the heatmap, and computing the locations of bins. It makes use of libSps for the computationally expensive task of counting and filtering interactions. To avoid computing values multiple times, libSmoother is implemented as a computational graph. Using this graph, each step is aware of which parameters are relevant to it. Upon a parameter change, only steps that depend on the changed parameter are recomputed. libSmoother also relies on Pybind11 to be importable as a Python 3 module.</p>
      <p>Finally, Smoother, our visualization tool, is implemented in Python 3. It makes use of libSmoother as a backend. Further, it uses Bokeh to offer a web browser-based interface, running under Google Chrome, Safari, and Firefox. By being browser-based, Smoother can be deployed both as a webpage or standalone tool.</p>
    </sec>
  </sec>
  <sec sec-type="results" id="SEC3">
    <title>Results</title>
    <sec id="SEC3-1">
      <title>Smoother processes interactome data on-the-fly using a prefix sum index</title>
      <p>To be able to process interactome data fast enough for an interactive workflow, we broke with the pipeline paradigm that state-of-the-art interactome data analyses follow (<xref rid="B10" ref-type="bibr">10–12</xref>) (Figure <xref rid="F1" ref-type="fig">1A</xref>). Instead, our approach precomputes an index in a parameter-independent manner. Using this index, heatmaps with arbitrary filter parameters, bin size, and normalization, are then generated within seconds (Figure <xref rid="F1" ref-type="fig">1B</xref>).</p>
      <fig position="float" id="F1">
        <label>Figure 1.</label>
        <caption>
          <p>Outline of pipeline-based and index-based data analyses. <bold>(A)</bold> The top path outlines state-of-the-art pipeline-based processing of interactome data. Components of such pipelines are parameterized (black arrows) and can take up to several hours to run. The bottom path outlines our proposed index-based analysis. We preprocess all data into an index in a parameter-independent fashion. Using this index, the actual parameterized data processing can then be done within seconds. <bold>(B)</bold> Parameters of every processing step have a significant impact on the resulting heatmaps. The left panel displays various filters: all interactions, interactions with high mapping quality, and interactions that overlap a gene on the x-axis. The central panel shows interactions binned at various resolutions: 10, 50, and 200 kbp. The right panel illustrates data normalized by various approaches: unnormalized, ICed, as well as both ICed and normalized by Distance Dependent Decay (DDD). All panels show Hi-C data (<xref rid="B22" ref-type="bibr">22</xref>) from the central region of chromosome 8 of <italic toggle="yes">Trypanosoma brucei</italic>.</p>
        </caption>
        <graphic xlink:href="gkae008fig1" position="float"/>
      </fig>
      <p>Our index uses prefix sums to allow for constant time range sum queries (<xref rid="B17" ref-type="bibr">17</xref>,<xref rid="B18" ref-type="bibr">18</xref>). A range sum query computes the number of data points that lie in a given range. Importantly, with constant time queries, the time it takes to perform the queries does not increase with variables such as larger bin size, the number of interactions stored in the index, or the size of the analyzed genome. Decoupling the processing time from these variables is what allows on-the-fly data analysis.</p>
    </sec>
    <sec id="SEC3-2">
      <title>A multidimensional prefix sum index enables various filters</title>
      <p>A two-dimensional prefix sum index allows querying the number of interactions in bins with arbitrary sizes and positions. However, it is common to filter these interactions by various criteria. Hence, we extended our prefix sum index to allow such filtering on-the-fly, while keeping the index's runtime properties.</p>
      <p>One of the most common ways to filter interactome data is to remove interactions with low mapping quality. For such quality filtering, we introduced a third dimension to our index, where we place interactions at a position according to their mapping qualities. We then adjust the bounds of the queried region in that dimension to exclude interactions with mapping qualities outside of a desired range (Figure <xref rid="F2" ref-type="fig">2A</xref>). As before, we use prefix sums, to ensure fast processing times. Interactions with low mapping quality may be multimappers. Multimappers are interactions where one or both of the interaction partners map to multiple loci on the genome. Such multimappers may or may not need to be considered during the analysis. Therefore, we developed a strategy that stores each multimapper as the smallest possible rectangle that encloses all of its mapping loci. Multimappers can then be counted towards a bin if their stored rectangles are fully enclosed by the bin (Figure <xref rid="F2" ref-type="fig">2B</xref>).</p>
      <fig position="float" id="F2">
        <label>Figure 2.</label>
        <caption>
          <p>An overview of the on-the-fly data processing that is possible with Smoother. Shown here is <italic toggle="yes">Mus musculus</italic> RADICL-seq data from Bonetti et al. (<xref rid="B6" ref-type="bibr">6</xref>) and <italic toggle="yes">T. brucei</italic> Hi-C data from Müller et al. (<xref rid="B22" ref-type="bibr">22</xref>). <bold>(A)</bold> Interactions are filtered by mapping quality using a third dimension in the index. <bold>(B)</bold> Multimapping interactions count towards a bin if they are fully enclosed by the bin. This is done dynamically, considering the current bin size. <bold>(C)</bold> Middle panel: Interactions are filtered by whether they overlap an annotation or not. In this example, only interactions that overlap a gene on the y-axis are kept. Bottom panel: Instead of spacing bins out evenly over the genome, each bin is placed on one annotation. In this example, each heatmap column corresponds to a gene. <bold>(D)</bold> Ploidy-corrected heatmaps can be generated. <bold>(E)</bold> A virtual 4C analysis summarizes a slice of the heatmap into a graph. <bold>(F)</bold> ChIP-seq data and genomic annotations are overlaid onto the heatmap. <bold>(G)</bold> Two datasets, e.g. wild type (WT) and H3.V double knockout (H3.V<sup>−/−</sup>) cells, are compared by subtraction.</p>
        </caption>
        <graphic xlink:href="gkae008fig2" position="float"/>
      </fig>
      <p>For RNA-DNA interactome data, it is common to filter out interactions that do not align to a gene with their RNA interaction partner (<xref rid="B7" ref-type="bibr">7</xref>). We thus introduced a fourth dimension to our index that allows filtering out such interactions. Generalizing from genes, we allow filtering by any type of genomic annotation, on either or both axes (Figure <xref rid="F2" ref-type="fig">2C</xref>). With all non-gene interactions filtered out, RNA-DNA interactome data is then displayed such that, on one axis, each bin corresponds to one gene (called annotation coordinates), while bins on the other axis are consecutive and cover the whole genome (called genomic coordinates) (Figure <xref rid="F2" ref-type="fig">2C</xref>). Combining this coordinate system with the annotation overlap filter, Smoother can display heatmaps in the GRID-seq (<xref rid="B7" ref-type="bibr">7</xref>) fashion.</p>
      <p>Some cell lines and some organisms display aneuploidy or have genomic regions that are highly heterozygous. Both cases result in a situation where the ratio of the genome assembly's contigs to the corresponding physical chromosomes varies. We designed a ploidy correction scheme that splits interactions evenly among such contigs (Figure <xref rid="F2" ref-type="fig">2D</xref>).</p>
      <p>For further downstream analyses, we extended Smoother with several features: First, virtual 4C graphs (Figure <xref rid="F2" ref-type="fig">2E</xref>) can be computed. Virtual 4C refers to an approach where a slice of the heatmap is displayed as a one-dimensional graph. Typically, it is used to highlight interactions from a specific genomic locus, called the ‘viewpoint’. Next, one-dimensional sequencing data as well as annotations can be overlaid on the heatmap (Figure <xref rid="F2" ref-type="fig">2F</xref>). Furthermore, two datasets can be compared by subtraction or division (Figure <xref rid="F2" ref-type="fig">2G</xref>). Finally, Smoother can export publication-quality vector graphics (as SVG files), raster graphics (as PNG files), and raw data (as TSV files).</p>
    </sec>
    <sec id="SEC3-3">
      <title>On-the-fly normalization of interactome data</title>
      <p>To normalize interactome data, we implemented several approaches. For Hi-C data, these include IC (<xref rid="B12" ref-type="bibr">12</xref>) and Distance Dependent Decay (DDD) normalization. For RNA-DNA interactome data, we implemented normalization by Associated Slices (<xref rid="B7" ref-type="bibr">7</xref>), and Binomial test (<xref rid="B6" ref-type="bibr">6</xref>).</p>
      <p>In pipeline-based approaches, all these normalizations run on full matrices. However, Smoother achieves its performance by keeping a constant number of bins for every computed heatmap. When visualizing larger sections of a genome, the bin number is kept constant by increasing the bin size. Further, when zooming in to look at smaller regions of a genome, a constant number of bins is maintained by omitting bins outside of these regions of interest. This omission of bins prevents the use of normalization techniques that are designed to work on a full matrix. To solve this problem, we extended normalizations with a sampling strategy that considers some bins outside of the visible area during normalization. We argue that normalizations will behave as if they were applied to the full matrix, given a large enough number of samples. To evaluate our approach, we subdivided matrices into evenly sized windows. We then normalized each of those windows separately and concatenated them back together before comparing them to a matrix that was normalized in its entirety. For all normalizations, we find that normalizing with an increasing number of samples approaches normalizing over the whole matrix (Figure <xref rid="F3" ref-type="fig">3A</xref> and <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S9</xref>). To quantify these results, we computed the mean deviation of bin values from heatmaps normalized in windows and globally. Next, we plotted the mean deviations as a function of the number of samples (Figure <xref rid="F3" ref-type="fig">3B</xref>). For all normalizations, we find the mean deviation to decrease with an increasing number of samples (Figure <xref rid="F3" ref-type="fig">3C</xref>). While IC, Associated Slices, and DDD reach a deviation of zero with <inline-formula><tex-math id="M00024" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$ \sim$\end{document}</tex-math></inline-formula>1000 samples, Binomial test approaches zero more slowly. While varying the bin and window size may shift deviation up or down, neither variable affects the general trend that is observed (Figure <xref rid="F3" ref-type="fig">3B</xref> and <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S9</xref>). To obtain a good balance between accurate normalization (large number of bins sampled outside the visible area) and fast processing speed (small number of bins sampled outside the visible area), we set the following number of samples as default: 300 samples for IC, 1000 samples for Associated Slices, 100 for Binomial test, and 200 for DDD normalization. However, the number of samples can be adjusted in Smoother on-the-fly.</p>
      <fig position="float" id="F3">
        <label>Figure 3.</label>
        <caption>
          <p>Analyzing sampling-based normalization. <bold>(A)</bold><italic toggle="yes">T. brucei</italic> Hi-C data from Müller et al.(<xref rid="B22" ref-type="bibr">22</xref>). The left panel shows unnormalized data, while the right panel shows data that is IC normalized over the entire genome. For the central 3 panels, the genome is split into 5 Mbp-sized windows, which are ICed separately. In addition to the bins within a window, bins of 10, 100, and 1000 sample loci are also considered for ICing. Shown are only the first 3 windows of the full heatmap. <bold>(B)</bold> Left: quantification of A). Mean deviation of heatmap bins is plotted as a function of the number of samples. Running experiments for three different bin and window sizes shows that behavior is consistent across conditions. Right: mean time required to compute one window using default parameters and IC normalization as a function of the number of samples. <bold>(C)</bold> IC and DDD normalization are tested on <italic toggle="yes">T. brucei</italic> Hi-C data from Müller et al. (<xref rid="B22" ref-type="bibr">22</xref>), while Associates Slices and Binomial test are tested on <italic toggle="yes">M. musculus</italic> RADICL-seq data from Bonetti et al. (<xref rid="B6" ref-type="bibr">6</xref>). Left: Mean deviation of heatmap bins is plotted as a function of the number of samples for various normalizations. A bin size of 100 kbp and a window size of 5 Mbp is used for all approaches. Right: time required to compute one heatmap window using default parameters is plotted as a function of the number of samples for various normalizations. A bin size of 100 kbp and a window size of 5 Mbp is used for all approaches.</p>
        </caption>
        <graphic xlink:href="gkae008fig3" position="float"/>
      </fig>
      <p>Further, for 3C normalizations, we extended the approaches to deal with asymmetric data. This extension is necessary since subsections of a symmetrical matrix that are not centered on the diagonal are asymmetrical, even with our sampling approach. Additional details on how normalizations are extended and how their sampling is implemented can be found in the Materials and methods section.</p>
    </sec>
    <sec id="SEC3-4">
      <title>Benchmarking of Smoother reveals processing times in the millisecond range</title>
      <p>We benchmarked Smoother, analyzing processing times, index size, and preprocessing times. To obtain an overview of our approach for different datasets, we varied the base resolution of our index, the number of interactions in the dataset, the reference genome, and the set of activated filters.</p>
      <p>To evaluate index file size, we first merged two wild-type <italic toggle="yes">T. brucei</italic> Hi-C datasets (genome size <inline-formula><tex-math id="M00025" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\sim$\end{document}</tex-math></inline-formula>50 Mbp, number of interactions: <inline-formula><tex-math id="M00026" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\sim$\end{document}</tex-math></inline-formula>50 million) (<xref rid="B22" ref-type="bibr">22</xref>,<xref rid="B23" ref-type="bibr">23</xref>). By subsampling from the merged dataset to 20%, 40%, 60%, and 80%, we show that index file size increases at a decreasing rate with the number of interactions in the dataset (Figure <xref rid="F4" ref-type="fig">4A</xref>). This slowdown continues until every bin contains at least one interaction. At this point, the index is saturated. Adding further interactions would merely increase the values of the prefix sums in the file but not introduce new bins that need to be stored. Hence, once saturation is reached file size does not increase any further. Indices can be built with varying base resolutions. The base resolution of an index is the highest resolution the index can be used to create heatmaps. In theory, base resolution can reach up to a single base pair; however, practically, higher base resolutions increase file size, so limiting the base resolution to for example 5 kbp is reasonable. Additionally, we showed that index preprocessing time is relative to the file size (<xref rid="sup1" ref-type="supplementary-material">Supplementary Note S10</xref>–<xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S14A</xref>).</p>
      <fig position="float" id="F4">
        <label>Figure 4.</label>
        <caption>
          <p>Benchmarking index size and speed. <bold>(A)</bold> Index file size as a function of the number of stored unique interactions. <bold>(B)</bold> Time required to compute one heatmap using default parameters as a function of the number of unique interactions in the index. <bold>(C)</bold> Index file size as a function of the genome size. <bold>(D)</bold> Index file size for different active and inactive filters.</p>
        </caption>
        <graphic xlink:href="gkae008fig4" position="float"/>
      </fig>
      <p>Next, we measured processing times for 1000 heatmaps with Smoother's default parameters. Here, we measured the time required to compute a heatmap. We show that, as expected using prefix sums, processing time stays constant when the number of stored interactions increases across various base resolutions (Figure <xref rid="F4" ref-type="fig">4B</xref> and <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S10</xref>–<xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S14B</xref>).</p>
      <p>To measure the effect of varying genome size, we obtained Hi-C data from <italic toggle="yes">Escherichia coli</italic> (<xref rid="B25" ref-type="bibr">25</xref>), <italic toggle="yes">Saccharomyces cerevisiae</italic> (<xref rid="B26" ref-type="bibr">26</xref>), <italic toggle="yes">T. brucei</italic> (<xref rid="B22" ref-type="bibr">22</xref>,<xref rid="B23" ref-type="bibr">23</xref>), and <italic toggle="yes">Drosophila melanogaster</italic> (<xref rid="B27" ref-type="bibr">27</xref>) and down-sampled the datasets to an even density of 1000 interactions per squared mega-base pair. Such even density is crucial to measure the effect of varying genome size exclusively instead of measuring a combined effect of genome size and number of interactions in the dataset. We then measured index file size for all datasets (Figure <xref rid="F4" ref-type="fig">4C</xref>) and find that file size grows linearly with genome size, except for very small genomes. This demonstrates the effectiveness of the applied index compression, as an uncompressed index would have a file size that scales with the square of the genome size (see the Methods section ‘Reducing file size and preprocessing time’). Again, we confirmed that preprocessing times correlate with file size (<xref rid="sup1" ref-type="supplementary-material">Supplementary Note S10</xref>–<xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S14C</xref>) and that processing speed is roughly constant (<xref rid="sup1" ref-type="supplementary-material">Supplementary Note S10</xref>–<xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S14D</xref>) for varying genome sizes.</p>
      <p>Finally, we measured the effect of our filters on the index file size, using the <italic toggle="yes">T. brucei</italic> dataset. For this purpose, we removed the information relevant to the filters from the dataset before generating the index. For example, for the mapping quality, we placed all interactions at a default value in the mapping quality dimension. Comparing an index with filters to one without filters, we observe a ∼10-fold file size (Figure <xref rid="F4" ref-type="fig">4D</xref>) and ∼3-fold preprocessing speed (<xref rid="sup1" ref-type="supplementary-material">Supplementary Note S10</xref>–<xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S14E</xref>) difference. Filters increase index size, as each interaction is placed at a position representing its value for the corresponding filter in the index. For inactive filters, however, interactions are placed at a default value, hence reducing the size of the area that is covered by the index. Accordingly, we see index size vary significantly; however, processing time increases only minimally (∼1.5-fold; <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S10</xref>–<xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S14F</xref>). <xref rid="sup1" ref-type="supplementary-material">Supplementary Note S11</xref> gives an overview of the number of dimensions used for each filter.</p>
      <p>In summary, Smoother's processing time stays almost constant as the amount of data increases, regardless of whether the increase is in the number of interactions, genome size, number of filters, or base resolution. Instead, the computational overhead of increased data amount now affects the file size of the index. The most significant increase in file size is observed with increasing genome size and base resolution. Even though each filter has a significant impact on the file size, the overall effect is small because the number of filters is small. Further, large numbers of interactions can be tolerated better than large genome sizes. However, we obtained reasonable index file sizes for any datasets with genomes smaller than 150 Mbp thus making Smoother perfectly suited for the analysis of archaea, bacteria, most fungi, nematodes, and many protists.</p>
    </sec>
  </sec>
  <sec sec-type="discussion" id="SEC4">
    <title>Discussion</title>
    <p>Here, we developed Smoother, a tool to analyze and visualize nucleic acid interactome data on-the-fly. To our knowledge, Smoother is the first tool that offers ultrafast, on-the-fly analysis of interactome data. This analysis includes, among others, filtering interactions by their mapping quality, and by whether they overlap annotations. Further, Smoother rescues multimapping interactions, corrects for ploidy, normalizes with various methods, compares different datasets, and offers downstream analyses such as virtual 4C.</p>
    <p>Smoother is based on prefix sums. We chose this approach as it minimizes the runtime required to query interaction counts. In contrast, storing interactions as a count matrix, as is done for pipeline-based approaches (<xref rid="B20" ref-type="bibr">20</xref>,<xref rid="B21" ref-type="bibr">21</xref>,<xref rid="B28" ref-type="bibr">28</xref>), requires storing bins for each permutation of filter values. While querying bins, relevant permutations then have to be summed up, slowing down runtime based on the chosen filter thresholds. To maintain this theoretical runtime advantage of prefix sums in real-world applications, index compression must be chosen accordingly. For example, Shekelyan et al.’s (<xref rid="B17" ref-type="bibr">17</xref>) approach is suited for this, since they maintain linear query complexity. In contrast, sparse coordinate lists, the approach that is commonly used to store count matrices (<xref rid="B21" ref-type="bibr">21</xref>), increase the runtime complexity. While either compression could be applied to both prefix sum and count matrices, we chose Shekelyan et al.’s approach for its better runtime behavior despite its lower compression rate. In addition to the lower compression rate, index size is increased by prefix sums requiring more bins to be stored than count matrices (<xref rid="sup1" ref-type="supplementary-material">Supplementary Note S12</xref>). However, the improved runtime behavior by prefix sums and the chosen compression, combined, allows on-the-fly data analysis.</p>
    <p>Further, prefix sums remove the need to coarsen heatmaps to various resolutions as is done with count matrices (<xref rid="B21" ref-type="bibr">21</xref>). Prefix sums even supersede the abilities of coarsening and allow computing bins at any resolution and position, whereas coarsening limits the chosen resolutions and bin positions.</p>
    <p>Since our approach is optimized for runtime complexity (speed), the file size of our index becomes a limiting factor. For species with large genomes, such as the human genome, even indices with a low base resolution of 50 kbp are larger than 100 Gb. File size can be reduced significantly by deactivating filters; however, this will also lead to Smoother losing some of its on-the-fly analysis capabilities. Instead of deactivating filters, future research could try to optimize the number of dimensions used by the individual filters. There are several reasons analysis tools based on count matrices are better at handling large genomes than our prefix sums based approach. Primarily, count matrices’ can be compressed more strongly. In addition, fewer interactions are stored in count matrices, as filtering is done beforehand, removing some interactions from the file. Finally, less data is stored for each interaction. For example, mapping quality, annotation overlap, and multimapping loci are not tracked.</p>
    <p>In summary, Smoother is ideally suited to analyze interactome data of many invertebrate genomes, such as those from many unicellular parasites like <italic toggle="yes">Plasmodium falciparum</italic>, <italic toggle="yes">Toxoplasma gondii</italic>, <italic toggle="yes">Trypanosoma brucei</italic>, many yeast species, and bacteria, where optimal analysis parameters are uncertain (<xref rid="B25" ref-type="bibr">25</xref>,<xref rid="B26" ref-type="bibr">26</xref>,<xref rid="B29" ref-type="bibr">29</xref>,<xref rid="B30" ref-type="bibr">30</xref>). Due to the integrated ploidy correction, Smoother is further excellently suited to analyze aneuploid organisms such as <italic toggle="yes">Trypanosoma cruzi</italic> and <italic toggle="yes">Leishmania spp</italic>. The ability to quickly compare interaction maps containing all reads with those only containing uniquely mapping reads, to instantaneously visualize the effect of different normalization methods and the ability to rescue a large proportion of non-uniquely mapping reads opens new possibilities to evaluate interactome maps. We believe that these features are especially important for genomes containing many repeats that have complicated analyses in the past. While ideally suited for genomes &lt; 150 Mbp, Smoother can also be used for larger genomes if subsections of the genome are analyzed as with methods such as capture Hi-C (<xref rid="B31" ref-type="bibr">31</xref>), or Micro Capture-C (<xref rid="B3" ref-type="bibr">3</xref>), or if datasets contain fewer than 20 million interactions such as with some RNA-DNA interactome capture methods. Ongoing research aimed at improving the compression of prefix sums will open the possibility of using Smoother for genome-wide analyses of larger genomes.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>gkae008_Supplemental_File</label>
      <media xlink:href="gkae008_supplemental_file.pdf"/>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack id="ACK1">
    <title>Acknowledgements</title>
    <p>We would like to thank Michael Shekelyan, Nezar Abdennur, Anton Goloborodko, and all members of the Siegel Laboratory for their valuable remarks. We would also like to thank the Bioinformatics Core Facility from the Biomedical Center at the Ludwig-Maximilians-Universität Munich for access to the computing cluster.</p>
    <p><italic toggle="yes">Author contributions</italic>: MS, TNS, and ABS conceived the project. Unless indicated otherwise, MS devised all algorithmic schemes, with TNS, ABS, and CR contributing valuable remarks. CR and MS devised the ploidy correction approach. MS implemented all code and performed all benchmarking. MS and ABS debugged the code. MS wrote the manuscript, with the assistance of TNS, ABS, and CR. ABS and MS wrote the documentation of the software, with TNS and CR contributing valuable remarks. All authors read and approved the manuscript.</p>
  </ack>
  <sec sec-type="data-availability" id="SEC5">
    <title>Data availability</title>
    <p>No data was created for this project. The used interactome datasets are publicly available under the Sequence Read Archive accession codes: SRR5820092 (<italic toggle="yes">D. melanogaster</italic>), SRR6354577 (<italic toggle="yes">E. coli</italic>), SRR14469367 (<italic toggle="yes">S. cerevisiae</italic>), SRR7721317, SRR7721318 and SRR7721307 (<italic toggle="yes">T. brucei</italic>), as well as SRR9201799 and SRR9201800 (<italic toggle="yes">M. musculus</italic>). The used genome sequences and their annotations are publicly available on NCBI under the RefSeq assembly Ids: GCF_000001215.4 (<italic toggle="yes">D. melanogaster</italic>), GCF_000005845.2 (<italic toggle="yes">E. coli</italic>), GCF_000146045.2 (<italic toggle="yes">S. cerevisiae</italic>), and GCF_000001635.27 (<italic toggle="yes">M. musculus</italic>). The <italic toggle="yes">T. brucei</italic> genome sequence and its annotations are publicly available on TryTrypDB under <ext-link xlink:href="http://www.tritrypdb.org/common/downloads/Current_Release/TbruceiLister427_2018/" ext-link-type="uri">www.tritrypdb.org/common/downloads/Current_Release/TbruceiLister427_2018/</ext-link>. Smoother is available as a pip package using ‘pip install biosmoother’. Source code is available on GitHub at <ext-link xlink:href="http://www.github.com/Siegel-Lab/BioSmoother" ext-link-type="uri">www.github.com/Siegel-Lab/BioSmoother</ext-link>, <ext-link xlink:href="http://www.github.com/Siegel-Lab/libBioSmoother" ext-link-type="uri">www.github.com/Siegel-Lab/libBioSmoother</ext-link>, and <ext-link xlink:href="http://www.github.com/Siegel-Lab/libSps" ext-link-type="uri">www.github.com/Siegel-Lab/libSps</ext-link>, for Smoother, libSmoother, and libSps, respectively. Further, all code has been deposited on Zenodo: Smoother: <ext-link xlink:href="https://doi.org/10.5281/zenodo.8402173" ext-link-type="uri">https://doi.org/10.5281/zenodo.8402173</ext-link>, libSmoother: <ext-link xlink:href="https://doi.org/10.5281/zenodo.8402040" ext-link-type="uri">https://doi.org/10.5281/zenodo.8402040</ext-link>, and libSps: <ext-link xlink:href="https://doi.org/10.5281/zenodo.8386312" ext-link-type="uri">https://doi.org/10.5281/zenodo.8386312</ext-link>. All code is published using the MIT license. Benchmarking results can be reproduced using the scripts in the benchmarking directory of the libSmoother repository. Throughout the manuscript, Smoother version 1.0.0, libSmoother version 1.0.0, and libSps version 1.0.0 were used.</p>
  </sec>
  <sec id="SEC7">
    <title>Supplementary data</title>
    <p><ext-link xlink:href="https://academic.oup.com/nar/article-lookup/doi/10.1093/nar/gkae008#supplementary-data" ext-link-type="uri">Supplementary Data</ext-link> are available at NAR Online.</p>
  </sec>
  <sec id="SEC8">
    <title>Funding</title>
    <p>German Research Foundation [CRC 1064/A33]; German Research Foundation [SI 1610/2-2]; an ERC Starting Grant [3D_Tryps 715466]; ERC Consolidator Grant [SwitchDecoding 101044320 to T.N.S.]. Funding for open access charge: German Research Foundation [CRC 1064].</p>
    <p><italic toggle="yes">Conflict of interest statement</italic>. None declared.</p>
  </sec>
  <ref-list id="REF1">
    <title>References</title>
    <ref id="B1">
      <label>1.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Belton</surname>  <given-names>J.-M.</given-names></string-name>, <string-name><surname>McCord</surname>  <given-names>R.P.</given-names></string-name>, <string-name><surname>Gibcus</surname>  <given-names>J.H.</given-names></string-name>, <string-name><surname>Naumova</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Zhan</surname>  <given-names>Y.</given-names></string-name>, <string-name><surname>Dekker</surname>  <given-names>J.</given-names></string-name></person-group>  <article-title>Hi–C: a comprehensive technique to capture the conformation of genomes</article-title>. <source>Methods</source>. <year>2012</year>; <volume>58</volume>:<fpage>268</fpage>–<lpage>276</lpage>.<pub-id pub-id-type="pmid">22652625</pub-id>
</mixed-citation>
    </ref>
    <ref id="B2">
      <label>2.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hsieh</surname>  <given-names>T.-H.S.</given-names></string-name>, <string-name><surname>Weiner</surname>  <given-names>A.</given-names></string-name>, <string-name><surname>Lajoie</surname>  <given-names>B.</given-names></string-name>, <string-name><surname>Dekker</surname>  <given-names>J.</given-names></string-name>, <string-name><surname>Friedman</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Rando</surname>  <given-names>O.J.</given-names></string-name></person-group>  <article-title>Mapping nucleosome resolution chromosome folding in yeast by micro-C</article-title>. <source>Cell</source>. <year>2015</year>; <volume>162</volume>:<fpage>108</fpage>–<lpage>119</lpage>.<pub-id pub-id-type="pmid">26119342</pub-id>
</mixed-citation>
    </ref>
    <ref id="B3">
      <label>3.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Goel</surname>  <given-names>V.Y.</given-names></string-name>, <string-name><surname>Huseyin</surname>  <given-names>M.K.</given-names></string-name>, <string-name><surname>Hansen</surname>  <given-names>A.S.</given-names></string-name></person-group>  <article-title>Region Capture Micro-C reveals coalescence of enhancers and promoters into nested microcompartments</article-title>. <source>Nat. Genet.</source>  <year>2023</year>; <volume>55</volume>:<fpage>1048</fpage>–<lpage>1056</lpage>.<pub-id pub-id-type="pmid">37157000</pub-id>
</mixed-citation>
    </ref>
    <ref id="B4">
      <label>4.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Deshpande</surname>  <given-names>A.S.</given-names></string-name>, <string-name><surname>Ulahannan</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Pendleton</surname>  <given-names>M.</given-names></string-name>, <string-name><surname>Dai</surname>  <given-names>X.</given-names></string-name>, <string-name><surname>Ly</surname>  <given-names>L.</given-names></string-name>, <string-name><surname>Behr</surname>  <given-names>J.M.</given-names></string-name>, <string-name><surname>Schwenk</surname>  <given-names>S.</given-names></string-name>, <string-name><surname>Liao</surname>  <given-names>W.</given-names></string-name>, <string-name><surname>Augello</surname>  <given-names>M.A.</given-names></string-name>, <string-name><surname>Tyer</surname>  <given-names>C.</given-names></string-name>  <etal>et al</etal>.</person-group>  <article-title>Identifying synergistic high-order 3D chromatin conformations from genome-scale nanopore concatemer sequencing</article-title>. <source>Nat. Biotechnol.</source>  <year>2022</year>; <volume>40</volume>:<fpage>1488</fpage>–<lpage>1499</lpage>.<pub-id pub-id-type="pmid">35637420</pub-id>
</mixed-citation>
    </ref>
    <ref id="B5">
      <label>5.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Quinodoz</surname>  <given-names>S.A.</given-names></string-name>, <string-name><surname>Bhat</surname>  <given-names>P.</given-names></string-name>, <string-name><surname>Chovanec</surname>  <given-names>P.</given-names></string-name>, <string-name><surname>Jachowicz</surname>  <given-names>J.W.</given-names></string-name>, <string-name><surname>Ollikainen</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Detmar</surname>  <given-names>E.</given-names></string-name>, <string-name><surname>Soehalim</surname>  <given-names>E.</given-names></string-name>, <string-name><surname>Guttman</surname>  <given-names>M.</given-names></string-name></person-group>  <article-title>SPRITE: a genome-wide method for mapping higher-order 3D interactions in the nucleus using combinatorial split-and-pool barcoding</article-title>. <source>Nat. Protoc.</source>  <year>2022</year>; <volume>17</volume>:<fpage>36</fpage>–<lpage>75</lpage>.<pub-id pub-id-type="pmid">35013617</pub-id>
</mixed-citation>
    </ref>
    <ref id="B6">
      <label>6.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bonetti</surname>  <given-names>A.</given-names></string-name>, <string-name><surname>Agostini</surname>  <given-names>F.</given-names></string-name>, <string-name><surname>Suzuki</surname>  <given-names>A.M.</given-names></string-name>, <string-name><surname>Hashimoto</surname>  <given-names>K.</given-names></string-name>, <string-name><surname>Pascarella</surname>  <given-names>G.</given-names></string-name>, <string-name><surname>Gimenez</surname>  <given-names>J.</given-names></string-name>, <string-name><surname>Roos</surname>  <given-names>L.</given-names></string-name>, <string-name><surname>Nash</surname>  <given-names>A.J.</given-names></string-name>, <string-name><surname>Ghilotti</surname>  <given-names>M.</given-names></string-name>, <string-name><surname>Cameron</surname>  <given-names>C.J.F.</given-names></string-name>  <etal>et al</etal>.</person-group>  <article-title>RADICL-seq identifies general and cell type–specific principles of genome-wide RNA-chromatin interactions</article-title>. <source>Nat. Commun.</source>  <year>2020</year>; <volume>11</volume>:<fpage>1018</fpage>.<pub-id pub-id-type="pmid">32094342</pub-id>
</mixed-citation>
    </ref>
    <ref id="B7">
      <label>7.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Li</surname>  <given-names>X.</given-names></string-name>, <string-name><surname>Zhou</surname>  <given-names>B.</given-names></string-name>, <string-name><surname>Chen</surname>  <given-names>L.</given-names></string-name>, <string-name><surname>Gou</surname>  <given-names>L.-T.</given-names></string-name>, <string-name><surname>Li</surname>  <given-names>H.</given-names></string-name>, <string-name><surname>Fu</surname>  <given-names>X.-D.</given-names></string-name></person-group>  <article-title>GRID-seq reveals the global RNA–chromatin interactome</article-title>. <source>Nat. Biotechnol.</source>  <year>2017</year>; <volume>35</volume>:<fpage>940</fpage>–<lpage>950</lpage>.<pub-id pub-id-type="pmid">28922346</pub-id>
</mixed-citation>
    </ref>
    <ref id="B8">
      <label>8.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Quinodoz</surname>  <given-names>S.A.</given-names></string-name>, <string-name><surname>Jachowicz</surname>  <given-names>J.W.</given-names></string-name>, <string-name><surname>Bhat</surname>  <given-names>P.</given-names></string-name>, <string-name><surname>Ollikainen</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Banerjee</surname>  <given-names>A.K.</given-names></string-name>, <string-name><surname>Goronzy</surname>  <given-names>I.N.</given-names></string-name>, <string-name><surname>Blanco</surname>  <given-names>M.R.</given-names></string-name>, <string-name><surname>Chovanec</surname>  <given-names>P.</given-names></string-name>, <string-name><surname>Chow</surname>  <given-names>A.</given-names></string-name>, <string-name><surname>Markaki</surname>  <given-names>Y.</given-names></string-name>  <etal>et al</etal>.</person-group>  <article-title>RNA promotes the formation of spatial compartments in the nucleus</article-title>. <source>Cell</source>. <year>2021</year>; <volume>184</volume>:<fpage>5775</fpage>–<lpage>5790</lpage>.<pub-id pub-id-type="pmid">34739832</pub-id>
</mixed-citation>
    </ref>
    <ref id="B9">
      <label>9.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cai</surname>  <given-names>Z.</given-names></string-name>, <string-name><surname>Cao</surname>  <given-names>C.</given-names></string-name>, <string-name><surname>Ji</surname>  <given-names>L.</given-names></string-name>, <string-name><surname>Ye</surname>  <given-names>R.</given-names></string-name>, <string-name><surname>Wang</surname>  <given-names>D.</given-names></string-name>, <string-name><surname>Xia</surname>  <given-names>C.</given-names></string-name>, <string-name><surname>Wang</surname>  <given-names>S.</given-names></string-name>, <string-name><surname>Du</surname>  <given-names>Z.</given-names></string-name>, <string-name><surname>Hu</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Yu</surname>  <given-names>X.</given-names></string-name>  <etal>et al</etal>.</person-group>  <article-title>RIC-seq for global in situ profiling of RNA–RNA spatial interactions</article-title>. <source>Nature</source>. <year>2020</year>; <volume>582</volume>:<fpage>432</fpage>–<lpage>437</lpage>.<pub-id pub-id-type="pmid">32499643</pub-id>
</mixed-citation>
    </ref>
    <ref id="B10">
      <label>10.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><collab>Open2C</collab><string-name><surname>Abdennur</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Abraham</surname>  <given-names>S.</given-names></string-name>, <string-name><surname>Fudenberg</surname>  <given-names>G.</given-names></string-name>, <string-name><surname>Flyamer</surname>  <given-names>I.M.</given-names></string-name>, <string-name><surname>Galitsyna</surname>  <given-names>A.A.</given-names></string-name>, <string-name><surname>Goloborodko</surname>  <given-names>A.</given-names></string-name>, <string-name><surname>Imakaev</surname>  <given-names>M.</given-names></string-name>, <string-name><surname>Oksuz</surname>  <given-names>B.A.</given-names></string-name>, <string-name><surname>Venev</surname>  <given-names>S.V.</given-names></string-name></person-group>  <article-title>Cooltools: enabling high-resolution Hi-C analysis in Python</article-title>. <year>2022</year>; <comment>bioRxiv doi:</comment><comment>01 November 2022, preprint: not peer reviewed</comment><pub-id pub-id-type="doi">10.1101/2022.10.31.514564</pub-id>.</mixed-citation>
    </ref>
    <ref id="B11">
      <label>11.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Durand</surname>  <given-names>N.C.</given-names></string-name>, <string-name><surname>Shamim</surname>  <given-names>M.S.</given-names></string-name>, <string-name><surname>Machol</surname>  <given-names>I.</given-names></string-name>, <string-name><surname>Rao</surname>  <given-names>S.S.P.</given-names></string-name>, <string-name><surname>Huntley</surname>  <given-names>M.H.</given-names></string-name>, <string-name><surname>Lander</surname>  <given-names>E.S.</given-names></string-name>, <string-name><surname>Aiden</surname>  <given-names>E.L.</given-names></string-name></person-group>  <article-title>Juicer provides a one-click system for analyzing loop-resolution hi-C experiments</article-title>. <source>Cell Syst.</source>  <year>2016</year>; <volume>3</volume>:<fpage>95</fpage>–<lpage>98</lpage>.<pub-id pub-id-type="pmid">27467249</pub-id>
</mixed-citation>
    </ref>
    <ref id="B12">
      <label>12.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Imakaev</surname>  <given-names>M.</given-names></string-name>, <string-name><surname>Fudenberg</surname>  <given-names>G.</given-names></string-name>, <string-name><surname>McCord</surname>  <given-names>R.P.</given-names></string-name>, <string-name><surname>Naumova</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Goloborodko</surname>  <given-names>A.</given-names></string-name>, <string-name><surname>Lajoie</surname>  <given-names>B.R.</given-names></string-name>, <string-name><surname>Dekker</surname>  <given-names>J.</given-names></string-name>, <string-name><surname>Mirny</surname>  <given-names>L.A.</given-names></string-name></person-group>  <article-title>Iterative correction of hi-C data reveals hallmarks of chromosome organization</article-title>. <source>Nat. Methods</source>. <year>2012</year>; <volume>9</volume>:<fpage>999</fpage>–<lpage>1003</lpage>.<pub-id pub-id-type="pmid">22941365</pub-id>
</mixed-citation>
    </ref>
    <ref id="B13">
      <label>13.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Knight</surname>  <given-names>P.A.</given-names></string-name>, <string-name><surname>Ruiz</surname>  <given-names>D.</given-names></string-name></person-group>  <article-title>A fast algorithm for matrix balancing</article-title>. <source>IMA J. Numer. Anal.</source>  <year>2013</year>; <volume>33</volume>:<fpage>1029</fpage>–<lpage>1047</lpage>.</mixed-citation>
    </ref>
    <ref id="B14">
      <label>14.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Durand</surname>  <given-names>N.C.</given-names></string-name>, <string-name><surname>Robinson</surname>  <given-names>J.T.</given-names></string-name>, <string-name><surname>Shamim</surname>  <given-names>M.S.</given-names></string-name>, <string-name><surname>Machol</surname>  <given-names>I.</given-names></string-name>, <string-name><surname>Mesirov</surname>  <given-names>J.P.</given-names></string-name>, <string-name><surname>Lander</surname>  <given-names>E.S.</given-names></string-name>, <string-name><surname>Aiden</surname>  <given-names>E.L.</given-names></string-name></person-group>  <article-title>Juicebox provides a visualization system for hi-C contact maps with unlimited zoom</article-title>. <source>Cell Syst.</source>  <year>2016</year>; <volume>3</volume>:<fpage>99</fpage>–<lpage>101</lpage>.<pub-id pub-id-type="pmid">27467250</pub-id>
</mixed-citation>
    </ref>
    <ref id="B15">
      <label>15.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Yardımcı</surname>  <given-names>G.G.</given-names></string-name>, <string-name><surname>Noble</surname>  <given-names>W.S.</given-names></string-name></person-group>  <article-title>Software tools for visualizing hi-C data</article-title>. <source>Genome Biol.</source>  <year>2017</year>; <volume>18</volume>:<fpage>26</fpage>.<pub-id pub-id-type="pmid">28159004</pub-id>
</mixed-citation>
    </ref>
    <ref id="B16">
      <label>16.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kerpedjiev</surname>  <given-names>P.</given-names></string-name>, <string-name><surname>Abdennur</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Lekschas</surname>  <given-names>F.</given-names></string-name>, <string-name><surname>McCallum</surname>  <given-names>C.</given-names></string-name>, <string-name><surname>Dinkla</surname>  <given-names>K.</given-names></string-name>, <string-name><surname>Strobelt</surname>  <given-names>H.</given-names></string-name>, <string-name><surname>Luber</surname>  <given-names>J.M.</given-names></string-name>, <string-name><surname>Ouellette</surname>  <given-names>S.B.</given-names></string-name>, <string-name><surname>Azhir</surname>  <given-names>A.</given-names></string-name>, <string-name><surname>Kumar</surname>  <given-names>N.</given-names></string-name>  <etal>et al</etal>.</person-group>  <article-title>HiGlass: web-based visual exploration and analysis of genome interaction maps</article-title>. <source>Genome Biol.</source>  <year>2018</year>; <volume>19</volume>:<fpage>125</fpage>.<pub-id pub-id-type="pmid">30143029</pub-id>
</mixed-citation>
    </ref>
    <ref id="B17">
      <label>17.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Shekelyan</surname>  <given-names>M.</given-names></string-name>, <string-name><surname>Dignös</surname>  <given-names>A.</given-names></string-name>, <string-name><surname>Gamper</surname>  <given-names>J.</given-names></string-name></person-group>  <article-title>Sparse prefix sums: constant-time range sum queries over sparse multidimensional data cubes</article-title>. <source>Information Systems</source>. <year>2019</year>; <volume>82</volume>:<fpage>136</fpage>–<lpage>147</lpage>.</mixed-citation>
    </ref>
    <ref id="B18">
      <label>18.</label>
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Geffner</surname>  <given-names>S.</given-names></string-name>, <string-name><surname>Agrawal</surname>  <given-names>D.</given-names></string-name>, <string-name><surname>El Abbadi</surname>  <given-names>A.</given-names></string-name>, <string-name><surname>Smith</surname>  <given-names>T.</given-names></string-name></person-group>  <article-title>Relative prefix sums: an efficient approach for querying dynamic OLAP data cubes</article-title>. <source>Proceedings 15th International Conference on Data Engineering (Cat. No.99CB36337)</source>. <year>1999</year>; <fpage>328</fpage>–<lpage>335</lpage>.</mixed-citation>
    </ref>
    <ref id="B19">
      <label>19.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Schmidt</surname>  <given-names>M.</given-names></string-name>, <string-name><surname>Heese</surname>  <given-names>K.</given-names></string-name>, <string-name><surname>Kutzner</surname>  <given-names>A.</given-names></string-name></person-group>  <article-title>Accurate high throughput alignment via line sweep-based seed processing</article-title>. <source>Nat. Commun.</source>  <year>2019</year>; <volume>10</volume>:<fpage>1939</fpage>.<pub-id pub-id-type="pmid">31028275</pub-id>
</mixed-citation>
    </ref>
    <ref id="B20">
      <label>20.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zheng</surname>  <given-names>Y.</given-names></string-name>, <string-name><surname>Ay</surname>  <given-names>F.</given-names></string-name>, <string-name><surname>Keles</surname>  <given-names>S.</given-names></string-name></person-group>  <article-title>Generative modeling of multi-mapping reads with mHi-C advances analysis of hi-C studies</article-title>. <source>eLife</source>. <year>2019</year>; <volume>8</volume>:<fpage>e38070</fpage>.<pub-id pub-id-type="pmid">30702424</pub-id>
</mixed-citation>
    </ref>
    <ref id="B21">
      <label>21.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Abdennur</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Mirny</surname>  <given-names>L.A.</given-names></string-name></person-group>  <article-title>Cooler: scalable storage for Hi-C data and other genomically labeled arrays</article-title>. <source>Bioinformatics</source>. <year>2020</year>; <volume>36</volume>:<fpage>311</fpage>–<lpage>316</lpage>.<pub-id pub-id-type="pmid">31290943</pub-id>
</mixed-citation>
    </ref>
    <ref id="B22">
      <label>22.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Müller</surname>  <given-names>L.S.M.</given-names></string-name>, <string-name><surname>Cosentino</surname>  <given-names>R.O.</given-names></string-name>, <string-name><surname>Förstner</surname>  <given-names>K.U.</given-names></string-name>, <string-name><surname>Guizetti</surname>  <given-names>J.</given-names></string-name>, <string-name><surname>Wedel</surname>  <given-names>C.</given-names></string-name>, <string-name><surname>Kaplan</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Janzen</surname>  <given-names>C.J.</given-names></string-name>, <string-name><surname>Arampatzi</surname>  <given-names>P.</given-names></string-name>, <string-name><surname>Vogel</surname>  <given-names>J.</given-names></string-name>, <string-name><surname>Steinbiss</surname>  <given-names>S.</given-names></string-name>  <etal>et al</etal>.</person-group>  <article-title>Genome organization and DNA accessibility control antigenic variation in trypanosomes</article-title>. <source>Nature</source>. <year>2018</year>; <volume>563</volume>:<fpage>121</fpage>–<lpage>125</lpage>.<pub-id pub-id-type="pmid">30333624</pub-id>
</mixed-citation>
    </ref>
    <ref id="B23">
      <label>23.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cosentino</surname>  <given-names>R.O.</given-names></string-name>, <string-name><surname>Brink</surname>  <given-names>B.G.</given-names></string-name>, <string-name><surname>Siegel</surname>  <given-names>T.N.</given-names></string-name></person-group>  <article-title>Allele-specific assembly of a eukaryotic genome corrects apparent frameshifts and reveals a lack of nonsense-mediated mRNA decay</article-title>. <source>NAR Genomics and Bioinformatics</source>. <year>2021</year>; <volume>3</volume>:<fpage>lqab082</fpage>.<pub-id pub-id-type="pmid">34541528</pub-id>
</mixed-citation>
    </ref>
    <ref id="B24">
      <label>24.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Dementiev</surname>  <given-names>R.</given-names></string-name>, <string-name><surname>Kettner</surname>  <given-names>L.</given-names></string-name>, <string-name><surname>Sanders</surname>  <given-names>P.</given-names></string-name></person-group>  <article-title>STXXL: standard template library for XXL data sets</article-title>. <source>Software: Practice and Experience</source>. <year>2008</year>; <volume>38</volume>:<fpage>589</fpage>–<lpage>637</lpage>.</mixed-citation>
    </ref>
    <ref id="B25">
      <label>25.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lioy</surname>  <given-names>V.S.</given-names></string-name>, <string-name><surname>Cournac</surname>  <given-names>A.</given-names></string-name>, <string-name><surname>Marbouty</surname>  <given-names>M.</given-names></string-name>, <string-name><surname>Duigou</surname>  <given-names>S.</given-names></string-name>, <string-name><surname>Mozziconacci</surname>  <given-names>J.</given-names></string-name>, <string-name><surname>Espéli</surname>  <given-names>O.</given-names></string-name>, <string-name><surname>Boccard</surname>  <given-names>F.</given-names></string-name>, <string-name><surname>Koszul</surname>  <given-names>R.</given-names></string-name></person-group>  <article-title>Multiscale structuring of the E. coli chromosome by nucleoid-associated and condensin proteins</article-title>. <source>Cell</source>. <year>2018</year>; <volume>172</volume>:<fpage>771</fpage>–<lpage>783</lpage>.<pub-id pub-id-type="pmid">29358050</pub-id>
</mixed-citation>
    </ref>
    <ref id="B26">
      <label>26.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lledó</surname>  <given-names>J.I.L.</given-names></string-name>, <string-name><surname>Cáceres</surname>  <given-names>M.</given-names></string-name></person-group>  <article-title>On the power and the systematic biases of the detection of chromosomal inversions by paired-end genome sequencing</article-title>. <source>PLoS One</source>. <year>2013</year>; <volume>8</volume>:<fpage>e61292</fpage>.<pub-id pub-id-type="pmid">23637806</pub-id>
</mixed-citation>
    </ref>
    <ref id="B27">
      <label>27.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wang</surname>  <given-names>Q.</given-names></string-name>, <string-name><surname>Sun</surname>  <given-names>Q.</given-names></string-name>, <string-name><surname>Czajkowsky</surname>  <given-names>D.M.</given-names></string-name>, <string-name><surname>Shao</surname>  <given-names>Z.</given-names></string-name></person-group>  <article-title>Sub-kb hi-C in D. melanogaster reveals conserved characteristics of TADs between insect and mammalian cells</article-title>. <source>Nat. Commun.</source>  <year>2018</year>; <volume>9</volume>:<fpage>188</fpage>.<pub-id pub-id-type="pmid">29335463</pub-id>
</mixed-citation>
    </ref>
    <ref id="B28">
      <label>28.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Servant</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Varoquaux</surname>  <given-names>N.</given-names></string-name>, <string-name><surname>Lajoie</surname>  <given-names>B.R.</given-names></string-name>, <string-name><surname>Viara</surname>  <given-names>E.</given-names></string-name>, <string-name><surname>Chen</surname>  <given-names>C.-J.</given-names></string-name>, <string-name><surname>Vert</surname>  <given-names>J.-P.</given-names></string-name>, <string-name><surname>Heard</surname>  <given-names>E.</given-names></string-name>, <string-name><surname>Dekker</surname>  <given-names>J.</given-names></string-name>, <string-name><surname>Barillot</surname>  <given-names>E.</given-names></string-name></person-group>  <article-title>HiC-Pro: an optimized and flexible pipeline for Hi-C data processing</article-title>. <source>Genome Biol.</source>  <year>2015</year>; <volume>16</volume>:<fpage>259</fpage>.<pub-id pub-id-type="pmid">26619908</pub-id>
</mixed-citation>
    </ref>
    <ref id="B29">
      <label>29.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Barcons-Simon</surname>  <given-names>A.</given-names></string-name>, <string-name><surname>Carrington</surname>  <given-names>M.</given-names></string-name>, <string-name><surname>Siegel</surname>  <given-names>T.N.</given-names></string-name></person-group>  <article-title>Decoding the impact of nuclear organization on antigenic variation in parasites</article-title>. <source>Nat. Microbiol.</source>  <year>2023</year>; <volume>8</volume>:<fpage>1408</fpage>–<lpage>1418</lpage>.<pub-id pub-id-type="pmid">37524976</pub-id>
</mixed-citation>
    </ref>
    <ref id="B30">
      <label>30.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bunnik</surname>  <given-names>E.M.</given-names></string-name>, <string-name><surname>Venkat</surname>  <given-names>A.</given-names></string-name>, <string-name><surname>Shao</surname>  <given-names>J.</given-names></string-name>, <string-name><surname>McGovern</surname>  <given-names>K.E.</given-names></string-name>, <string-name><surname>Batugedara</surname>  <given-names>G.</given-names></string-name>, <string-name><surname>Worth</surname>  <given-names>D.</given-names></string-name>, <string-name><surname>Prudhomme</surname>  <given-names>J.</given-names></string-name>, <string-name><surname>Lapp</surname>  <given-names>S.A.</given-names></string-name>, <string-name><surname>Andolina</surname>  <given-names>C.</given-names></string-name>, <string-name><surname>Ross</surname>  <given-names>L.S.</given-names></string-name>  <etal>et al</etal>.</person-group>  <article-title>Comparative 3D genome organization in apicomplexan parasites</article-title>. <source>Proc. Natl. Acad. Sci. U.S.A.</source>  <year>2019</year>; <volume>116</volume>:<fpage>3183</fpage>–<lpage>3192</lpage>.<pub-id pub-id-type="pmid">30723152</pub-id>
</mixed-citation>
    </ref>
    <ref id="B31">
      <label>31.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Mifsud</surname>  <given-names>B.</given-names></string-name>, <string-name><surname>Tavares-Cadete</surname>  <given-names>F.</given-names></string-name>, <string-name><surname>Young</surname>  <given-names>A.N.</given-names></string-name>, <string-name><surname>Sugar</surname>  <given-names>R.</given-names></string-name>, <string-name><surname>Schoenfelder</surname>  <given-names>S.</given-names></string-name>, <string-name><surname>Ferreira</surname>  <given-names>L.</given-names></string-name>, <string-name><surname>Wingett</surname>  <given-names>S.W.</given-names></string-name>, <string-name><surname>Andrews</surname>  <given-names>S.</given-names></string-name>, <string-name><surname>Grey</surname>  <given-names>W.</given-names></string-name>, <string-name><surname>Ewels</surname>  <given-names>P.A.</given-names></string-name>  <etal>et al</etal>.</person-group>  <article-title>Mapping long-range promoter contacts in human cells with high-resolution capture hi-C</article-title>. <source>Nat. Genet.</source>  <year>2015</year>; <volume>47</volume>:<fpage>598</fpage>–<lpage>606</lpage>.<pub-id pub-id-type="pmid">25938943</pub-id>
</mixed-citation>
    </ref>
  </ref-list>
</back>

<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Genomics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Genomics</journal-id>
    <journal-title-group>
      <journal-title>BMC Genomics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2164</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">5120557</article-id>
    <article-id pub-id-type="publisher-id">3278</article-id>
    <article-id pub-id-type="doi">10.1186/s12864-016-3278-x</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Plastid: nucleotide-resolution analysis of next-generation sequencing and genomics data</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Dunn</surname>
          <given-names>Joshua G.</given-names>
        </name>
        <address>
          <email>joshua.g.dunn@gmail.com</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
        <xref ref-type="aff" rid="Aff3">3</xref>
        <xref ref-type="aff" rid="Aff4">4</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Weissman</surname>
          <given-names>Jonathan S.</given-names>
        </name>
        <address>
          <email>jonathan.weissman@ucsf.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
        <xref ref-type="aff" rid="Aff3">3</xref>
        <xref ref-type="aff" rid="Aff4">4</xref>
      </contrib>
      <aff id="Aff1"><label>1</label>California Institute of Quantitative Biosciences, San Francisco, USA </aff>
      <aff id="Aff2"><label>2</label>Department of Cellular and Molecular Pharmacology, University of California San Francisco, San Francisco, CA USA </aff>
      <aff id="Aff3"><label>3</label>Howard Hughes Medical Institute, University of California San Francisco, San Francisco, CA USA </aff>
      <aff id="Aff4"><label>4</label>Center for RNA Systems Biology, Berkeley, CA USA </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>22</day>
      <month>11</month>
      <year>2016</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>22</day>
      <month>11</month>
      <year>2016</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2016</year>
    </pub-date>
    <volume>17</volume>
    <elocation-id>958</elocation-id>
    <history>
      <date date-type="received">
        <day>21</day>
        <month>6</month>
        <year>2016</year>
      </date>
      <date date-type="accepted">
        <day>9</day>
        <month>11</month>
        <year>2016</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s). 2016</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold>This article is distributed under the terms of the Creative Commons Attribution 4.0 International License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p>Next-generation sequencing (NGS) informs many biological questions with unprecedented depth and nucleotide resolution. These assays have created a need for analytical tools that enable users to manipulate data nucleotide-by-nucleotide robustly and easily. Furthermore, because many NGS assays encode information jointly within multiple properties of read alignments ― for example, in ribosome profiling, the locations of ribosomes are jointly encoded in alignment coordinates and length ― analytical tools are often required to extract the biological meaning from the alignments before analysis. Many assay-specific pipelines exist for this purpose, but there remains a need for user-friendly, generalized, nucleotide-resolution tools that are not limited to specific experimental regimes or analytical workflows.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>Plastid is a Python library designed specifically for nucleotide-resolution analysis of genomics and NGS data. As such, Plastid is designed to extract assay-specific information from read alignments while retaining generality and extensibility to novel NGS assays. Plastid represents NGS and other biological data as arrays of values associated with genomic or transcriptomic positions, and contains configurable tools to convert data from a variety of sources to such arrays.</p>
        <p>Plastid also includes numerous tools to manipulate even discontinuous genomic features, such as spliced transcripts, with nucleotide precision. Plastid automatically handles conversion between genomic and feature-centric coordinates, accounting for splicing and strand, freeing users of burdensome accounting. Finally, Plastid’s data models use consistent and familiar biological idioms, enabling even beginners to develop sophisticated analytical workflows with minimal effort.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p>Plastid is a versatile toolkit that has been used to analyze data from multiple NGS assays, including RNA-seq, ribosome profiling, and DMS-seq. It forms the genomic engine of our ORF annotation tool, ORF-RATER, and is readily adapted to novel NGS assays. Examples, tutorials, and extensive documentation can be found at <ext-link ext-link-type="uri" xlink:href="https://plastid.readthedocs.io">https://plastid.readthedocs.io</ext-link>.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Sequencing</kwd>
      <kwd>Genomics</kwd>
      <kwd>Bioinformatics</kwd>
      <kwd>Python</kwd>
      <kwd>Ribosome profiling</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000001</institution-id>
            <institution>National Science Foundation</institution>
          </institution-wrap>
        </funding-source>
        <award-id>Graduate Research Fellowship Program</award-id>
        <principal-award-recipient>
          <name>
            <surname>Dunn</surname>
            <given-names>Joshua G.</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000049</institution-id>
            <institution>National Institute on Aging</institution>
          </institution-wrap>
        </funding-source>
        <award-id>P01 AG010770</award-id>
        <principal-award-recipient>
          <name>
            <surname>Weissman</surname>
            <given-names>Jonathan S.</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000011</institution-id>
            <institution>Howard Hughes Medical Institute</institution>
          </institution-wrap>
        </funding-source>
      </award-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000057</institution-id>
            <institution>National Institute of General Medical Sciences</institution>
          </institution-wrap>
        </funding-source>
        <award-id>P50 GM102706</award-id>
        <principal-award-recipient>
          <name>
            <surname>Weissman</surname>
            <given-names>Jonathan S.</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2016</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1" sec-type="introduction">
    <title>Background</title>
    <p>Next generation sequencing (NGS) has transformed biology. Beyond enabling the rapid sequencing of genomes, increasingly sophisticated NGS assays have empowered biologists to probe a wide array of biological processes with unprecedented precision and depth, provided that the desired information can be encoded within a nucleic acid sequence. Many NGS assays encode nucleotide-resolution information within multiple properties of sequencing reads ― such as their alignment coordinates, lengths, or sites at which they mismatch a reference sequence ― and thus require analytical tools that decode biological data from such properties. One such assay is ribosome profiling, in which the positions of the ribosomal P-sites are jointly encoded by the lengths and positions of aligned sequencing reads [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR2">2</xref>]. Another example is bisulfite sequencing, in which the methylation status of cytosine residues is encoded in the genomic locations of C-to-T transitions within read alignments [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR4">4</xref>].</p>
    <p>Because decoding biological information from read alignments is not trivial, a wide array of software has been developed for this purpose. At one extreme are tools dedicated to specific, predefined analysis of data from a single assay, such as riboSeqR [<xref ref-type="bibr" rid="CR5">5</xref>], RiboTools [<xref ref-type="bibr" rid="CR6">6</xref>], and RiboGalaxy [<xref ref-type="bibr" rid="CR7">7</xref>] for ribosome profiling, or PROTEOFORMER [<xref ref-type="bibr" rid="CR8">8</xref>], ORFscore [<xref ref-type="bibr" rid="CR9">9</xref>], or ORF-RATER [<xref ref-type="bibr" rid="CR10">10</xref>] for de novo protein discovery and ORF annotation. Tools like these are user-friendly, but, as a consequence of their design, are difficult to adapt to novel purposes. At the other extreme are low-level, generalized tools, like SAMtools [<xref ref-type="bibr" rid="CR11">11</xref>] and BEDtools [<xref ref-type="bibr" rid="CR12">12</xref>], that are not designed for or limited to any specific assay or experimental setup. These tools are extremely powerful, but using them requires substantial expertise in programming and awareness of seemingly esoteric file formats. Between these extremes lie a number of user-friendly and general-purpose toolkits, such as HTSeq [<xref ref-type="bibr" rid="CR13">13</xref>], Metaseq [<xref ref-type="bibr" rid="CR14">14</xref>], bx-python [<xref ref-type="bibr" rid="CR15">15</xref>], and Bioconductor [<xref ref-type="bibr" rid="CR16">16</xref>]. But these, in their present forms, are limited in their abilities to decode information from raw read alignments, to manipulate (or, in some cases, even to represent) discontinuous genomic features such as multi-exon transcripts, or to perform nucleotide-resolution analysis. The situation is further complicated by the fact that many file formats have been invented to describe only a handful of data types in genomics (Table <xref rid="Tab1" ref-type="table">1</xref>), and that even synonymous file types can be treated inconsistently within toolkits.<table-wrap id="Tab1"><label>Table 1</label><caption><p>File formats used in genomics</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Data type</th><th>Format</th><th>Implementation</th></tr></thead><tbody><tr><td rowspan="5">Feature annotations (e.g. genes, transcripts, exons, origins of replication)</td><td>BED, extended BED*</td><td>Plastid</td></tr><tr><td>BigBed</td><td>Plastid + kentUtils [<xref ref-type="bibr" rid="CR46">46</xref>]</td></tr><tr><td>GTF2*</td><td>Plastid</td></tr><tr><td>GFF3*</td><td>Plastid</td></tr><tr><td>PSL*</td><td>Plastid</td></tr><tr><td rowspan="2">Read alignments</td><td>bowtie</td><td>Plastid</td></tr><tr><td>BAM</td><td>Plastid + Pysam [<xref ref-type="bibr" rid="CR27">27</xref>]</td></tr><tr><td rowspan="4">Reduced count data</td><td>bedGraph</td><td>Plastid</td></tr><tr><td>BigWig</td><td>Plastid + kentUtils [<xref ref-type="bibr" rid="CR46">46</xref>]</td></tr><tr><td>wiggle (fixedStep)</td><td>Plastid</td></tr><tr><td>wiggle (variableStep)</td><td>Plastid</td></tr><tr><td rowspan="2">Sequence</td><td>FASTA</td><td>via Biopython [<xref ref-type="bibr" rid="CR20">20</xref>]</td></tr><tr><td>twobit</td><td>via twobitreader [<xref ref-type="bibr" rid="CR21">21</xref>]</td></tr></tbody></table><table-wrap-foot><p>For each category of genomics data, many file formats exist. Plastid includes readers for each format that standardize the representation of data for each type, so that the meaning of each data type is separated from its format on disk. *tabix compression for these formats is supported via Pysam [<xref ref-type="bibr" rid="CR27">27</xref>]</p></table-wrap-foot></table-wrap>
</p>
    <p>Here we introduce Plastid, a Python library for nucleotide-resolution analysis of genomics data. Plastid is designed to retain the user-friendliness of pipeline tools designed for specific NGS assays, like RiboGalaxy, without sacrificing the generality and power of low-level tools, like BEDtools. Given its goals, Plastid’s design differs substantially from existing packages (Fig. <xref rid="Fig1" ref-type="fig">1</xref>):<fig id="Fig1"><label>Fig. 1</label><caption><p>Uses of Plastid in analysis workflows. Plastid (<italic>yellow box</italic>) contains tools for both exploratory data analysis (<italic>blue</italic>, <italic>center</italic>) and command-line scripts for specific tasks (<italic>green, right</italic>). Plastid standardizes representation of data across the variety of file formats used to represent genomics data (<italic>left</italic>). Quantitative data are represented as arrays of data over the genome. Read alignments may be transformed into arrays using a mapping function appropriate to a given assay. Transcripts are represented as chains of segments that automatically account for their discontinuities during analysis. Plastid integrates directly with the SciPy stack (blue, center). For exploratory analysis in other environments (blue, above) or further processing in external programs (<italic>right</italic>, <italic>green</italic>), Plastid imports and exports data in standardized formats</p></caption><graphic xlink:href="12864_2016_3278_Fig1_HTML" id="MO1"/></fig>
</p>
    <p>First, Plastid’s internal analysis pipeline introduces a stage in which <italic>mapping functions</italic> extract the relevant biological information from various properties of raw read alignments. Biological data are then exposed to users as vectors of information ― such as the number of ribosomal P-sites or C-to-T mismatches found at each nucleotide position ― rather than lists of read alignments or vectors of raw coverage. Because mapping functions can perform arbitrary transformations on properties of read alignments, they add substantial flexibility to Plastid’s design: a mapping function suited to a given NGS assay tailors Plastid’s tools to that assay (Fig. <xref rid="Fig2" ref-type="fig">2</xref>). Uniquely, Plastid’s mapping functions are configurable and replaceable rather than hard-coded. Thus, Plastid has been used to analyze data from numerous types of experiments, including ribosome profiling, RNA-seq, DMS-seq, and bisulfite sequencing, and can be used for other assays (e.g. ChIP-seq, CAGE-seq, pseudouridine profiling) simply by choosing appropriate parameters for existing mapping functions, or by implementing new ones.<fig id="Fig2"><label>Fig. 2</label><caption><p>Mapping functions extract biological data from read alignments. <bold>a</bold>. Mapping functions use various properties of a read alignment to determine the genomic position(s) at which it should be counted. <bold>b</bold>. Mapping functions for ribosome profiling use alignment coordinates and lengths to estimate ribosome positions, revealing features of translation, like a peak of density at the start codon (<italic>red circle</italic>) and three-nucleotide periodicity of ribosomal translocation (inset). <bold>c</bold>. For bisulfite sequencing, the fraction of C-to-T transitions at each cytosine are mapped, revealing a CpG island. <bold>d</bold>. A mapping function for DMS-seq differentiates structured from unstructured regions of a selenocysteine insertion element in the 3′ UTR of human <italic>SEPP1.</italic> DMS reactivity (blue bars) matches A and C residues predicted to be unstructured (<italic>yellow</italic>)</p></caption><graphic xlink:href="12864_2016_3278_Fig2_HTML" id="MO2"/></fig>
</p>
    <p>Second, Plastid introduces a novel data model, the <italic>SegmentChain,</italic> to describe multi-exon transcripts and other discontinuous features. SegmentChains are aware of their own discontinuity and use this awareness to encapsulate many nucleotide-wise operations that are absent from other toolkits, such as conversion of coordinates or vectorized data between genomic and transcript-centric spaces. SegmentChains automatically account for splicing and complementing, and thus reduce user error during many tasks common in position-wise analysis (Fig. <xref rid="Fig3" ref-type="fig">3</xref>).<fig id="Fig3"><label>Fig. 3</label><caption><p>SegmentChains automate many common tasks. <bold>a</bold>. SegmentChain and Transcript objects automatically convert coordinates between genomic and transcript-relative spaces. <bold>b</bold>. SegmentChains and Transcripts can therefore convert read alignments or quantitative data aligned to the genome to arrays of values at each position in the chain. <bold>c</bold>. Subsections (<italic>green, pink</italic>) of chains can be fetched using start and end points relative to the parental chains. SegmentChains automatically generate the corresponding genomic coordinates. <bold>d</bold>. Regions of a chain can be masked from computations without altering the chain coordinates</p></caption><graphic xlink:href="12864_2016_3278_Fig3_HTML" id="MO3"/></fig>
</p>
    <p>Third, Plastid provides consistent representations and behaviors for the various categories of genomic data, regardless of underlying file formats. Plastid’s tools thus enable users to focus on biological questions rather than data representation (Fig. <xref rid="Fig1" ref-type="fig">1</xref>, Table <xref rid="Tab1" ref-type="table">1</xref>).</p>
    <p>Finally, Plastid’s intended audience includes bench scientists and novices as well as seasoned bioinformaticians. For this reason, Plastid defines a minimal sets of data structures that, when possible, have human-readable names and are modeled on biological objects — such as spliced transcripts — rather than on more abstract notions. Users can thus leverage their biological knowledge when writing or reading code (Fig. <xref rid="Fig4" ref-type="fig">4</xref>).<fig id="Fig4"><label>Fig. 4</label><caption><p>Plastid streamlines analysis. <bold>a</bold>. The quality of a ribosome profiling dataset may be assayed by comparing the numbers of read counts in the first versus second half of each coding region. Plastid makes it possible to implement such analyses with few lines of easily readable code. <bold>b</bold>. Plastid readily integrates with the tools in the SciPy stack. Here, first- and second-half counts from (<bold>a</bold>) are plotted against each other using matplotlib, and a Pearson correlation coefficient calculated using SciPy</p></caption><graphic xlink:href="12864_2016_3278_Fig4_HTML" id="MO4"/></fig>
</p>
    <p>In addition to tools for nucleotide-resolution exploratory data analysis (EDA), Plastid includes command-line scripts that automate analysis workflows used for a number of common NGS assays, such as RNA-seq and ribosome profiling. Unlike similar implementations found in other toolkits, Plastid’s scripts leverage mapping functions, so that even common tasks, such as export of browser tracks for visualization of data, may be tailored to a specific biological question: for example, depending on the mapping function in use, Plastid’s <italic>make_wiggle</italic> script can export a browser track of mapped ribosomal P -sites, modified nucleotides, or any other data encoded within the read alignments, instead of simple read coverage. Like the rest of Plastid’s tools, these scripts can be generalized to novel assays with the implementation of new mapping functions.</p>
    <p>Together, Plastid’s features enable novice and advanced users to develop analytical workflows that are both concrete and sophisticated, using familiar idioms and few lines of code. To support our users’ efforts, we offer extensive documentation, step-by-step walkthroughs of various analysis tasks, and a demo dataset for those walkthroughs at <ext-link ext-link-type="uri" xlink:href="https://plastid.readthedocs.io">https://plastid.readthedocs.io</ext-link>.</p>
  </sec>
  <sec id="Sec2">
    <title>Implementation</title>
    <sec id="Sec3">
      <title>Representation of quantitative data</title>
      <p>Many NGS assays encode nucleotide resolution data, and effectively associate a quantitative value with each genomic or transcriptomic position. A natural representation for such data is a vector or array of values, each position in the array corresponding to a nucleotide within a region of interest.</p>
      <p>Plastid adopts this representation and represents quantitative data associated with genomic positions – such as the number of sequencing reads aligned to a given position, a phylogenetic conservation score, or local G/C content – using objects called <italic>GenomeArrays</italic>. Within GenomeArrays, data are indexed by chromosome, nucleotide position, and strand, and may be accessed via a Python dictionary-like interface using a SegmentChain as a key. GenomeArrays return data in an array format (NumPy array; [<xref ref-type="bibr" rid="CR17">17</xref>]) whose positions correspond to nucleotide positions in the given regions of interest. The use of NumPy arrays enables the data to be used by the vast library of scientific tools compatible with the SciPy (Scientific Python) stack [<xref ref-type="bibr" rid="CR18">18</xref>], and thus creates a useful bridge between genomics data and existing scientific infrastructure in Python.</p>
      <p>Plastid includes implementations of GenomeArrays tailored to a number of file formats, including bedGraph, BigWig, and fixed-step or variable-step wiggle (Table <xref rid="Tab1" ref-type="table">1</xref>). With the aid of mapping functions, GenomeArrays can also import read alignments in BAM or bowtie formats, performing transformations at runtime (for BAM files), or upon import (for bowtie files).</p>
    </sec>
    <sec id="Sec4">
      <title>Transformations of read alignments</title>
      <p>Plastid’s GenomeArrays are designed to perform transformations on read alignments transparently during analysis, in order to extract the relevant biology — such as a nucleotide modification or ribosomal P-site — from whichever read properties encode them. These transformations are implemented in configurable mapping functions that determine the genomic position(s) at which the biology encoded in each alignment should ultimately be counted (Fig. <xref rid="Fig2" ref-type="fig">2a</xref>). Concretely, mapping functions are modular components of GenomeArrays take as input a query region of the genome and a set of read alignments, and return as output an array of transformed data covering each nucleotide position in the query region. Because mapping functions can exploit any property of a read alignment — for example, its length or sequence — in addition to its aligned positions, they provide a high level of flexibility and enable reuse of Plastid’s central tools with data from a large variety of NGS assays.</p>
      <p>Mapping functions are particularly important to assays in which secondary properties of read alignments encode the biology of interest: for example, mapping functions for ribosome profiling assign counts to ribosomal P-sites, which occur at fixed offsets from the 5′ ends of read alignments, potentially varying as a function of read length [<xref ref-type="bibr" rid="CR1">1</xref>]. P-site mapping reveals phenomena that are obscured by raw read density, such peaks that occur at translation initiation sites, or the periodic stepping of the ribosome (Fig. <xref rid="Fig3" ref-type="fig">3b</xref>). In bisulfite sequencing, one might use a mapping function that selectively assigns counts to the genomic positions of C-to-T transitions within a read alignment, enabling CpG islands to be discerned (Fig. <xref rid="Fig2" ref-type="fig">2c</xref>). For DMS-seq assays — in which dimethylsulfonate (DMS) alkylates unpaired cytosine and adenine residues in RNA [<xref ref-type="bibr" rid="CR19">19</xref>] — one would use a mapping function that assigns counts to the alkylated residues, allowing inference of secondary RNA structure (Fig. <xref rid="Fig2" ref-type="fig">2d</xref>).</p>
      <p>Plastid includes configurable mapping functions applicable to RNA-seq, ribosome profiling, DMS-seq, and a number of other sequencing assays (Table <xref rid="Tab2" ref-type="table">2</xref>). When a novel assay is developed, users can readily implement a mapping function tailored to the experiment. Plastid can then use the new mapping function as a plug-in, enabling immediate application of extant tools to the novel assay. Examples and instructions for writing mapping functions are included in the mapping rules tutorial at <ext-link ext-link-type="uri" xlink:href="https://plastid.readthedocs.io">https://plastid.readthedocs.io</ext-link>.<table-wrap id="Tab2"><label>Table 2</label><caption><p>Plastid includes configurable mapping functions that cover many uses cases in sequencing analysis</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Method</th><th>Map reads</th><th>Sample use</th></tr></thead><tbody><tr><td>Fiveprime</td><td>At a fixed offset from their 5′ ends</td><td>Ribosome profiling with RNase I (e.g. yeast, human), RNA-seq</td></tr><tr><td>Threeprime</td><td>At a fixed offset from their 3′ ends</td><td>Ribosome profiling with RNase I, RNA-seq</td></tr><tr><td>Fiveprime, variable</td><td>At an offset from 5′ end determined by read length</td><td>Ribosome profiling with RNase I, RNA-seq</td></tr><tr><td>Fiveprime, variable and stratified by read length</td><td>At an offset from 5′ end determined by read length, partitioning reads of each length into separate arrays</td><td>ORF annotation from ribosome profiling data</td></tr><tr><td>Center-weighted</td><td>Fractionally over entire length, optionally trimming a fixed number of nucleotides from the 5′ and 3′ ends</td><td>Ribosome profiling with MNase (e.g. <italic>E. coli</italic> &amp; <italic>D. melanogaster</italic>), RNA-seq</td></tr></tbody></table></table-wrap>
</p>
    </sec>
    <sec id="Sec5">
      <title>Encapsulation of discontinuous genomic features</title>
      <p>A substantial shortcoming of many existing genomics toolkits is that discontinuous features, such as spliced transcripts, are represented as lists of independently behaving, continuous fragments. For many tasks, this design requires users to perform laborious and error-prone transformations to convert coordinates from the <italic>N</italic>
<sup><italic>th</italic></sup> position of a transcript, to the <italic>I</italic>
<sup><italic>th</italic></sup> position of the transcript’s <italic>J</italic>
<sup><italic>th</italic></sup> exon, and eventually, to the <italic>X</italic>
<sup><italic>th</italic></sup> position in the corresponding genome. Alternatively, users can sacrifice positional information and align their sequencing data to a continuous transcriptome, in this case presuming a priori knowledge of which transcript isoforms are present.</p>
      <p>A central difference between Plastid and other toolkits is that Plastid’s encapsulates transcripts and other discontinuous genomic features within single objects, called SegmentChains, that are aware of their own discontinuity (Fig. <xref rid="Fig3" ref-type="fig">3</xref>). This design obviates the need to separately track the potentially many exons that together constitute a transcript, and facilitates analysis of phenomena that are easily described in the context of a transcript, but discontinuous in the genome, such as a translational pause site in ribosome profiling data. Thus, users can take advantage of the additional information preserved by aligning reads to a genome, while retaining the convenience of aligning to a transcriptome.</p>
      <p>SegmentChains are also useful for analyses that simultaneously consider transcript isoforms that share genomic coordinates, such those implemented in ORF-RATER [<xref ref-type="bibr" rid="CR10">10</xref>], a tool we have developed to identify and determine translation rates of potentially overlapping open reading frames from ribosome profiling data. For analyses specifically devoted to transcripts, a subclass of SegmentChain, called <italic>Transcript</italic>, is provided. SegmentChains and Transcripts provide tools for many common operations, including:<list list-type="bullet"><list-item><p>mapping coordinates between various transcript isoforms and the genome (Fig. <xref rid="Fig3" ref-type="fig">3a</xref>)</p></list-item><list-item><p>fetching spliced arrays of genomic sequence, read alignments, or count data at any or each nucleotide position in the SegmentChain or Transcript (Fig. <xref rid="Fig3" ref-type="fig">3b</xref>)</p></list-item><list-item><p>fetching sub-regions of the chain, preserving their discontinuity (Fig. <xref rid="Fig3" ref-type="fig">3c</xref>)</p></list-item><list-item><p>masking sub-regions of the chain, such as repetitive regions, from analysis (Fig. <xref rid="Fig3" ref-type="fig">3d</xref>)</p></list-item><list-item><p>testing for equality, overlap, containment, or coverage of other SegmentChains</p></list-item><list-item><p>accessing and storing descriptive data, like gene names or IDs, GO terms, database cross references, or notes</p></list-item><list-item><p>exporting to BED, GTF2, or GFF3 formats, for use with other software packages or within a genome browser</p></list-item></list>
</p>
    </sec>
    <sec id="Sec6">
      <title>Simplified access to genomic data</title>
      <p>In genomics, there are primarily four categories of data — sequence data, feature annotations (e.g. transcript models, coding regions, origins of replication), quantitative values associated with genomic positions (such as conservation scores), and read alignments — yet numerous file formats have been developed to represent each of these data types. Furthermore, many existing packages treat data of a given type in a manner that depends upon the type of file in which it is stored. Becoming familiar with the diverse idiosyncrasies of these file types — for example, whether transcripts are represented one-exon-per-line and must subsequently linked by probing their IDs (GTF2, GFF3 files) or are captured wholly within single lines (BED, BigBed, PSL) — can be time-consuming and a significant impediment to research.</p>
      <p>Plastid provides a minimal set of consistently behaved object types for each category of data, and readers for commonly used file formats in each category (Table <xref rid="Tab1" ref-type="table">1</xref>), allowing investigators to focus on their data rather than its representation on disk (Fig. <xref rid="Fig1" ref-type="fig">1</xref>). In particular, Plastid provides readers that parse feature annotations in BED, extended BED, BigBed, GTF2, GFF3 and PSL formats into SegmentChains or Transcripts, optionally reconstructing transcripts from their components in GTF2 or GFF3 formats; quantitative data in bedGraph, wiggle, or BigWig formats into GenomeArrays; and read alignments in BAM or Bowtie’s legacy format into GenomeArrays, using mapping functions to transform the data. Because a number of excellent packages already exist for parsing nucleotide sequence, Plastid does not implement new readers for sequence data. However, its tools are compatible with any sequence reader that returns dictionary-like objects, such as those in Biopython (for data in FASTA, GenBank, EMBL, and many other formats; [<xref ref-type="bibr" rid="CR20">20</xref>]) and twobitreader (for 2bit files; [<xref ref-type="bibr" rid="CR21">21</xref>]).</p>
    </sec>
    <sec id="Sec7">
      <title>Command-line scripts</title>
      <p>In addition to the library it provides for EDA, Plastid includes a number of command-line scripts that implement sequencing workflows commonly used in genomics and NGS analysis (Table <xref rid="Tab3" ref-type="table">3</xref>). While similar implementations exist in other toolkits, Plastid’s scripts are distinct in their use of mapping functions, which allows them to generalize to many types of data and metrics. For example, Plastid’s <italic>make_wiggle</italic> script generates genome browser tracks from sequencing alignments, and, depending upon the mapping function in use, could export a track of ribosomal P-sites, modified nucleotides, unstructured regions of RNA, 5′ ends of read alignments, or whatever type of biology is accessed by the mapping function.<table-wrap id="Tab3"><label>Table 3</label><caption><p>Plastid’s command-line scripts automate common analysis tasks</p></caption><table frame="hsides" rules="groups"><tbody><tr><td colspan="2">Analysis of count and alignment data</td></tr><tr><td><italic>counts_in_region</italic></td><td>Count the number of read alignments covering arbitrary regions of interest in the genome, and calculate read densities (in reads per nucleotide and in RPKM) over these regions</td></tr><tr><td><italic>cs</italic></td><td>Count the number of read alignments and calculate read densities (in RPKM) specifically for genes and sub-regions (5′ UTR, CDS, 3′ UTR), correcting gene and sub-region boundaries for overlapping genes</td></tr><tr><td><italic>get_count_vectors</italic></td><td>Fetch vectors of counts at each nucleotide position in one or more regions of interest, saving each vector as its own line-delimited text file</td></tr><tr><td><italic>make_wiggle</italic></td><td>Create wiggle or bedGraph files from alignment files after applying a read mapping rule (e.g. to map ribosome-protected footprints at their P-sites), for visualization in a genome browser</td></tr><tr><td><italic>metagene</italic></td><td>Compute a metagene profile of read alignments, counts, or quantitative data over one or more regions of interest</td></tr><tr><td><italic>phase_by_size</italic></td><td>Estimate sub-codon phasing in ribosome profiling data</td></tr><tr><td><italic>psite</italic></td><td>Estimate position of ribosomal P-site within ribosome profiling read alignments as a function of read length</td></tr><tr><td colspan="2">Manipulation of genomic features</td></tr><tr><td><italic>crossmap</italic></td><td>Empirically annotate multimapping regions of a genome, given alignment criteria</td></tr><tr><td><italic>gff_parent_types</italic></td><td>Determine parent-child relationships of features in a GFF3 file</td></tr><tr><td><italic>reformat</italic>_<italic>transcripts</italic></td><td>Convert transcripts between BED, BigBed, GTF2, GFF3, and PSL formats</td></tr><tr><td><italic>findjuncs</italic></td><td>Find all unique splice junctions in one or more transcript annotations, and optionally export these in Tophat’s.juncs format</td></tr><tr><td><italic>slidejuncs</italic></td><td>Compare a set of splice junctions to a reference set, and, if possible with equal sequence support, slide discovered junctions to compatible known junctions</td></tr></tbody></table></table-wrap>
</p>
      <p>In addition, Plastid introduces algorithms and scripts for a number of tasks that are not implemented or are handled substantially differently elsewhere. We highlight a few of these below:</p>
    </sec>
    <sec id="Sec8">
      <title>Maximal spanning windows</title>
      <p>Many nucleotide-resolution analyses require prior knowledge of which transcript isoforms are present, but such knowledge is frequently unavailable. For this circumstance, Plastid introduces the use of <italic>maximal spanning windows</italic> (Fig. <xref rid="Fig5" ref-type="fig">5</xref>) as an approach to isoform-independent analysis. Briefly, a maximal spanning window is defined as a span of nucleotides surrounding a landmark (e.g. a start codon), in which each position relative to the landmark maps to the same genomic coordinate across every member of a group of transcripts (or other features). Thus, a gene’s maximal spanning window captures the range of feature positions whose distances to each other and to a landmark are independent of whatever transcript isoform(s) that may be expressed.<fig id="Fig5"><label>Fig. 5</label><caption><p>Maximal spanning windows enable isoform-independent analysis. A maximal spanning window over a set of transcripts (or other genomic features) is defined as the largest possible window surrounding a shared landmark (in this example, a start codon; vertical line), over which the <italic>N</italic>
<sup>th</sup> nucleotide from the landmark in each transcript corresponds to the same genomic position. Maximal spanning windows thus enable position-wise analysis over fractions of genes when isoform distributions are unknown. Plastid uses maximal spanning windows for metagene analysis, measuring sub-codon phasing in ribosome profiling, and estimating ribosomal P-site offsets</p></caption><graphic xlink:href="12864_2016_3278_Fig5_HTML" id="MO5"/></fig>
</p>
      <p>The use of maximal spanning windows provides a number of advantages over other strategies when isoform distributions are uncertain. A commonly used alternative strategy is to choose a single, “canonical” transcript isoform from each gene to include in analysis. This approximation is appropriate in some circumstances, but is variably inaccurate when comparing across cell lines or culture conditions. Another strategy is to treat all transcript isoforms as independent entities. But, in the absence of corrections downstream, this practice can yield double-counting of read alignments and regions when multiple isoforms overlap. Restricting analysis to each gene’s maximal spanning window minimizes the problems inherent in both of these strategies insofar the quality of a given genome annotation allows.</p>
      <p>Plastid contains tools that generate a maximal spanning window surrounding a landmark of interest (such as a start codon) for each gene (or, more generally, any user-specified group of features) in a genome annotation. To do so, Plastid makes use of <italic>landmark functions</italic> that identify a landmark of interest, if present, within a single transcript. The landmark function is applied to each of a gene’s transcripts, and, if the genomic positions of their landmarks are identical (e.g. all start codons match the same genomic coordinate, even if at different coordinates within each transcript), then Plastid’s window-generating toolkit bidirectionally examines each position on each transcript at increasing distance from the landmark until corresponding positions on all transcripts no longer map to the same genomic position. If all transcripts from a given gene do not share the same genomic landmark coordinate (contain different start codons), then the maximal spanning window surrounding that landmark is of zero-length, and excluded from analysis.</p>
      <p>Plastid includes landmark functions that identify start and stop codons, and includes instructions for writing functions to programmatically identify other landmarks, such as peaks in sequencing data or nucleotide motifs within a region of interest. Plastid can use maximal spanning windows for estimation of gene expression or for metagene analysis (described below) for any type of sequencing data, and, in the case of ribosome profiling, additionally uses maximal spanning windows for estimation of P-site offsets and sub codon phasing.</p>
    </sec>
    <sec id="Sec9">
      <title>Metagene analysis</title>
      <p>Noise can obscure important biological signals within individual samples, but such signals frequently appear in population averages. For nucleotide-resolution analysis of NGS data, one particularly useful average is a <italic>metagene profile,</italic> in which arrays of quantitative data, corresponding to each position of a gene or region of interest, are aligned at some landmark — such as a start codon [<xref ref-type="bibr" rid="CR1">1</xref>], or the beginning of a region encoding a signal peptide [<xref ref-type="bibr" rid="CR22">22</xref>] — and a position-wise average is taken over the aligned arrays (Fig. <xref rid="Fig6" ref-type="fig">6</xref>). Metagene profiles have been used to reveal numerous biological signals, such as peaks of ribosome density at start or stop codons [<xref ref-type="bibr" rid="CR1">1</xref>], ribosomal pauses over polybasic signals [<xref ref-type="bibr" rid="CR23">23</xref>], and sites of engagement of hydrophobic nascent chains by the signal recognition particle [<xref ref-type="bibr" rid="CR22">22</xref>].<fig id="Fig6"><label>Fig. 6</label><caption><p>Metagene profiles reveal genomic signals. Schematic of metagene analysis. Normalized arrays of quantitative data (e.g. ribosomal P-sites; top) are taken at each position in the maximal spanning windows of multiple genes. These arrays are aligned at a landmark of interest (here, a start codon), and the median value of each column (nucleotide position), is taken to be the average (bottom)</p></caption><graphic xlink:href="12864_2016_3278_Fig6_HTML" id="MO6"/></fig>
</p>
      <p>Plastid’s metagene toolkit is unique in its use of maximal spanning windows to obtain isoform-independent arrays of data for each individual gene. These arrays are then aligned at the position corresponding to the landmark and a column-wise median is taken at each position. Because users can modify or define both landmark functions and mapping functions, Plastid’s tools can be used to obtain position-wise averages of arbitrary types of data, surrounding virtually any landmark, in arbitrarily grouped sets of regions.</p>
    </sec>
    <sec id="Sec10">
      <title>Multimapping regions of the genome</title>
      <p>Specific regions of the genome ― such as transposable elements, pseudogenes, and paralogous coding regions ― can yield sequencing reads that <italic>multimap</italic>, or align equally well to multiple regions of the genome. It is frequently desirable to exclude such regions from analysis, as these introduce ambiguity into sequencing data. However, because a read’s ability to multimap is a function of both its length and the number of mismatches tolerated during alignment, specific experimental regimes require custom annotation of multimapping regions in the genome. Plastid includes a script called <italic>crossmap</italic> that empirically determines which regions of the genome yield multimapping reads of a given length at a permitted number of mismatches.</p>
      <p>Elaborating an approach developed in [<xref ref-type="bibr" rid="CR1">1</xref>], <italic>crossmap</italic> conceptually divides the genome into all possible sequencing reads of length <italic>k</italic>, and then aligns these back to the genome allowing <italic>n</italic> mismatches, where <italic>k</italic> and <italic>n</italic> are given by the user. When a read aligns equally well to multiple regions of the genome under these criteria, its point of origin is flagged as multimapping. <italic>crossmap</italic> exports all multimapping regions as a BED file, which can be subsequently used to mask such regions of the genome from analysis in any of Plastid’s command-line scripts or interactive tools.</p>
    </sec>
  </sec>
  <sec id="Sec11" sec-type="discussion">
    <title>Results and discussion</title>
    <sec id="Sec12">
      <title>Manipulation of data at nucleotide resolution</title>
      <p>In its earliest days, next-generation sequencing was used principally for reconstruction of genomes, and, with the advent of RNA-seq, for estimation of gene expression levels. In the first case, the sequences of reads captured the relevant biology, and in the second, the scalar number of read alignments covering an exon or transcript satisfied most experimental needs.</p>
      <p>At present, many NGS assays explore biological questions with nucleotide resolution. These assays have created a need for analytical tools that enable users to manipulate data nucleotide-by-nucleotide robustly and easily. Plastid introduces several data models tailored specifically to this way of working: First, mapping functions convert the relevant properties of read alignments into arrays of decoded information, and thus create an important bridge between NGS assays and the analytical tools offered by the SciPy stack [<xref ref-type="bibr" rid="CR18">18</xref>]. Second, SegmentChains and Transcripts enable users to manipulate quantitative data and feature annotations with nucleotide precision, in genomic or transcript-centric coordinates. Thus, patterns in data can easily be used to annotate new features, and features can be arbitrarily sub-divided, joined, or exported in standard formats, enabling their use in other pipelines and visualization in genome browsers. Finally, maximal spanning windows offer a novel and rigorous approach to uncertainties created when multiple transcript isoforms might be present, a common circumstance when studying higher eukaryotes.</p>
    </sec>
    <sec id="Sec13">
      <title>Ease of use</title>
      <p>One of Plastid’s design goals is to lower the barrier to entry for genomic analysis. To this end, Plastid’s design focuses on simplicity and, when possible, use of biological analogies. Plastid therefore introduces a minimal set of classes, and instead favors existing and commonly-used data structures (such as NumPy arrays) and file formats (e.g. BED and GTF2), whenever possible. Data that cannot be captured in standard formats are formatted as tab-delimited tables, which can readily be manipulated in Python (using Pandas [<xref ref-type="bibr" rid="CR24">24</xref>]), R, or even Excel.</p>
      <p>To facilitate reading, re-reading, or writing code, Plastid’s classes, methods, and functions are modeled upon biological idioms and, when possible, given human-readable names. This design enables users to leverage knowledge of biology when familiarizing themselves with Plastid, and also to write code that, using the concrete language of biology, is more easily interpreted by others.</p>
      <p>Finally, to enable users, we have written extensive documentation with tutorials and walkthroughs of various types of analysis, as well as a test dataset tailored to those walkthroughs. These are available at <ext-link ext-link-type="uri" xlink:href="https://plastid.readthedocs.io">https://plastid.readthedocs.io</ext-link>.</p>
    </sec>
    <sec id="Sec14">
      <title>Extensibility</title>
      <p>Plastid is designed to be both modular and easily extended, and includes well-defined and documented APIs. In addition, Plastid includes entrypoints to register new mapping functions and their command-line arguments with Plastid’s command-line scripts, enabling advanced users to share their extensions with others.</p>
      <p>Plastid also includes script writing tools for implementing new workflows. These include argument parsers that read data in supported file formats into Plastid’s standard objects, enabling developers, like users, to remain agnostic of file formats. Plastid also includes extensions to Python’s warning control system that give developers more finely-grained control over how to group and limit warnings displays, which can be numerous when operating on large genomics datasets.</p>
    </sec>
  </sec>
  <sec id="Sec15" sec-type="conclusion">
    <title>Conclusions</title>
    <p>Plastid is a genomics and NGS analysis toolkit that offers unique tools for decoding information from read alignments and manipulating data at nucleotide-resolution. Plastid’s design enables it to retain generality and flexibility across assays while remaining user friendly. Thus, we and others have used Plastid to analyze data from numerous NGS assays, including ribosome profiling, RNA-seq, DMS-seq, and bisulfite sequencing.</p>
    <p>Plastid’s utility derives not only from the introduction of mapping functions, SegmentChains, and maximal spanning windows, but also from a design intent that focuses on simplicity, consistency, and integration with other packages: biological data are represented through unified interfaces regardless of the underlying file format; these interfaces are modeled on biological idioms; and, importantly, these interfaces integrate seamlessly with the SciPy stack. Thus, both novice users and experienced bioinformaticians have found Plastid useful. Versions of Plastid have been used in a number of publications [<xref ref-type="bibr" rid="CR10">10</xref>, <xref ref-type="bibr" rid="CR25">25</xref>] and manuscripts in progress (personal communications from C.A. Gross, M. Schuldiner, and N. Bellletier &amp; E.A. Gavis), and is the genomic engine of our ORF annotation software, ORF-RATER [<xref ref-type="bibr" rid="CR10">10</xref>].</p>
  </sec>
  <sec id="Sec16">
    <title>Availability and requirements</title>
    <sec id="Sec17">
      <title>Source code</title>
      <p>Plastid is released under the BSD 3-Clause license. Official releases are available in the Python Package Index at <ext-link ext-link-type="uri" xlink:href="http://pypi.python.org/pypi/plastid">http://pypi.python.org/pypi/plastid</ext-link>. Development versions are available at the project’s home page, <ext-link ext-link-type="uri" xlink:href="https://github.com/joshuagryphon/plastid">https://github.com/joshuagryphon/plastid</ext-link>. Examples, user documentation, and technical information are available at <ext-link ext-link-type="uri" xlink:href="http://plastid.readthedocs.io/">http://plastid.readthedocs.io</ext-link>. The version discussed in this article is Plastid 0.4.6.</p>
    </sec>
    <sec id="Sec18">
      <title>Computing requirements</title>
      <p>Plastid is platform-independent and runs on Python 2.7 and Python 3.3 or greater. It depends on Cython [<xref ref-type="bibr" rid="CR26">26</xref>], numpy [<xref ref-type="bibr" rid="CR17">17</xref>], and Pysam [<xref ref-type="bibr" rid="CR27">27</xref>] for compilation, and additionally SciPy [<xref ref-type="bibr" rid="CR18">18</xref>], matplotlib [<xref ref-type="bibr" rid="CR28">28</xref>], pandas [<xref ref-type="bibr" rid="CR24">24</xref>], Biopython [<xref ref-type="bibr" rid="CR20">20</xref>], twobitreader [<xref ref-type="bibr" rid="CR21">21</xref>], and termcolor [<xref ref-type="bibr" rid="CR29">29</xref>] for runtime.</p>
      <p>Plastid runs well on laptops, but system requirements scale with the complexity of the genome annotation and the number of read alignments in a dataset. The minimum amount of RAM we recommend for <italic>S. cerevisiae</italic> and other small genomes is 1 GB; for mid-sized genomes like <italic>D. melanogaster,</italic> 4 GB; and 8 GB for vertebrate or plant genomes. Run times and memory usage for worst-case scenarios under a variety of scripts included in Plastid are shown in Table <xref rid="Tab4" ref-type="table">4</xref>.<table-wrap id="Tab4"><label>Table 4</label><caption><p>Computing requirements for genomes and datasets of varying size</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Test</th><th>Organism</th><th>Run time (hh:mm:ss)</th><th>Peak memory usage (MB)</th></tr></thead><tbody><tr><td>Read counting</td><td>Yeast</td><td>00:01:18 ± 00:00:01</td><td char="±" align="char">255 ± 0</td></tr><tr><td>Read counting</td><td>Fly</td><td>00:36:34 ± 00:00:03</td><td char="±" align="char">1138 ± 7</td></tr><tr><td>Read counting</td><td>Human</td><td>00:19:56 ± 00:00:01</td><td char="±" align="char">1053 ± 2</td></tr><tr><td>Manipulate annotations</td><td>Yeast</td><td>00:00:27 ± 00:00:02</td><td char="±" align="char">467 ± 0</td></tr><tr><td>Manipulate annotations</td><td>Fly</td><td>00:03:37 ± 00:00:03</td><td char="±" align="char">2620 ± 1</td></tr><tr><td>Manipulate annotations</td><td>Human</td><td>00:18:42 ± 00:01:49</td><td char="±" align="char">4419 ± 1</td></tr><tr><td>Export browser track</td><td>Yeast</td><td>00:00:58 ± 00:00:00</td><td char="±" align="char">281 ± 1</td></tr><tr><td>Export browser track</td><td>Fly</td><td>00:09:05 ± 00:00:40</td><td char="±" align="char">2452 ± 7</td></tr><tr><td>Export browser track</td><td>Human</td><td>00:06:11 ± 00:00:03</td><td char="±" align="char">537 ± 0</td></tr><tr><td>Build crossmap</td><td>Yeast</td><td>00:00:35 ± 00:00:00</td><td char="±" align="char">100 ± 0</td></tr><tr><td>Build crossmap</td><td>Fly</td><td>00:10:44 ± 00:00:10</td><td char="±" align="char">328 ± 7</td></tr><tr><td>Build crossmap</td><td>Human</td><td>04:11:51 ± 00:06:32</td><td char="±" align="char">130 ± 1</td></tr></tbody></table><table-wrap-foot><p>Four command-line scripts were executed on yeast, fly, and human datasets. Runtimes and peak memory usage are given as the mean ± standard deviation of three replicates. See methods for details</p></table-wrap-foot></table-wrap>
</p>
    </sec>
    <sec id="Sec19">
      <title>External datasets and software used in this study</title>
      <p>Sequencing datasets supporting the conclusions of this article are available in the the SRA [<xref ref-type="bibr" rid="CR30">30</xref>] under accession numbers SRR1562907 (ribosome profiling, [<xref ref-type="bibr" rid="CR22">22</xref>]); SRR019600-20 and SRR20276-20282 (bisulfite sequencing, [<xref ref-type="bibr" rid="CR31">31</xref>]); and SRR1057939 (DMS-seq, [<xref ref-type="bibr" rid="CR19">19</xref>]). Data were visualized in the Integrative Genomics Viewer [<xref ref-type="bibr" rid="CR32">32</xref>] and modified in Adobe Illustrator CS6. Code syntax was highlighted using Pygments version 2.2 [<xref ref-type="bibr" rid="CR33">33</xref>].</p>
      <p>For Fig. <xref rid="Fig2" ref-type="fig">2</xref>, ribosome profiling dataset SRR1562907 [<xref ref-type="bibr" rid="CR22">22</xref>] was stripped of 3′ cloning adaptors (CTGTAGGCACCATCAAT), and aligned to the yeast reference genome (SGD R64.1.1) using Tophat 2.1.0 [<xref ref-type="bibr" rid="CR34">34</xref>]. Ribosomal P-sites were assigned to be 15 nucleotides from the 3′ end of 25-35mers. Bisulfite sequencing data were pooled from SRA datasets SRR019600-20 and SRR20276-20282 [<xref ref-type="bibr" rid="CR31">31</xref>], stripped of 3′ cloning adaptors (AGATCGGAAGAGC) and aligned to the human reference genome (UCSC hg38p3; [<xref ref-type="bibr" rid="CR35">35</xref>]) using Bismark 0.14.4 [<xref ref-type="bibr" rid="CR36">36</xref>]. Methylation was determined from Bismark calls by parsing the <italic>XM</italic> flag of each alignment following the specification in [<xref ref-type="bibr" rid="CR36">36</xref>]. DMS-seq dataset SRR1057939 [<xref ref-type="bibr" rid="CR19">19</xref>] was downloaded and aligned to human genome sequence (Ensembl GrCh38.78; [<xref ref-type="bibr" rid="CR37">37</xref>]) using Tophat [<xref ref-type="bibr" rid="CR34">34</xref>]. Counts were assigned to alkylated residues, estimated to be 1 base 5′ of the read alignment, in the direction of the alignment. SECIS elements and their structure predictions were identified using SeciSearch 2.19 [<xref ref-type="bibr" rid="CR38">38</xref>].</p>
      <p>For Table <xref rid="Tab4" ref-type="table">4</xref>, all tests were run on a single 2.7 GHz Intel Core i7-5700 CPU on an MSI Apache Pro QE2 laptop, in a virtual machine running Ubuntu 14.04 with 10 Gb of RAM, except for <italic>Build crossmap</italic>, which used two cores. Runtimes and memory usage were monitored using Memory Profiler version 0.32 [<xref ref-type="bibr" rid="CR39">39</xref>]. For tests on yeast, we used the annotation and genome assembly from SGD R64.1.1 [<xref ref-type="bibr" rid="CR40">40</xref>], 5′ and 3′ UTR definitions from [<xref ref-type="bibr" rid="CR41">41</xref>] and [<xref ref-type="bibr" rid="CR42">42</xref>], and ribosome profiling dataset SRR1562907. For tests on the fly genome, we used the annotation and genome assembly from FlyBase r5.54 [<xref ref-type="bibr" rid="CR43">43</xref>] and merged ribosome profiling datasets from [<xref ref-type="bibr" rid="CR26">26</xref>] (SRA numbers SRR942868-77). For tests on the human genome, we used all APPRIS-scored [<xref ref-type="bibr" rid="CR44">44</xref>] transcripts from Ensembl annotation GrCh38.81 [<xref ref-type="bibr" rid="CR37">37</xref>], the hg38 genome assembly from UCSC [<xref ref-type="bibr" rid="CR35">35</xref>], and ribosome profiling dataset SRR1976443. All genome annotation files were converted to GTF2 format. Sequence was in FASTA format with the exception of hg38, which was kept as a 2bit file. Alignments of all sequencing reads were kept in BAM format. For tests that used read alignments, alignments were mapped as follows for each organism: 15 nucleotides from the 3′ end of the read for <italic>S. cerevisiae</italic> (modified from [<xref ref-type="bibr" rid="CR1">1</xref>]), center-weighted mapping for <italic>D. melanogaster</italic> [<xref ref-type="bibr" rid="CR25">25</xref>], and using a variable offset for <italic>H. sapiens</italic> [<xref ref-type="bibr" rid="CR2">2</xref>].</p>
      <p>For each organism dataset, a series of tests were conducted. In <italic>Manipulate annotations</italic>, all transcripts, genes, exons, and coding regions within a chromosome were compared and modified in multiple ways using Plastid’s <italic>cs</italic> script, executed as <italic>cs generate /tmp/foo --annotation_file gtf_file.gtf --sorted</italic>. In <italic>Read counting</italic>, read counts and densities were tabulated for all transcripts in a genome annotation using the <italic>counts_in_region</italic> script, executed as <italic>counts_in_region /tmp/foo --count_files bam_file.bam--annotation_files</italic>
<italic>gtf_file.gtf --sorted</italic> [<italic>--threeprime--offset 15</italic> for yeast | <italic>--fiveprime_variable p_off.txt</italic> for human | <italic>--center --nibble 12</italic> for fly]. In <italic>Build crossmap</italic>, an empirical annotation of which regions in a given genome give rise to multimapping reads was empirically determined by slicing the genome sequence into <italic>k</italic>-mers and counting the number of times each <italic>k</italic>-mer aligned to the genome using Plastid’s <italic>crossmap</italic> script, which internally used Bowtie version 1.1.2 [<xref ref-type="bibr" rid="CR45">45</xref>]. The <italic>crossmap</italic> script was executed as <italic>crossmap -k 26 --mismatches 0 -p 2 --sequence_file file.</italic>[<italic>fa</italic> | <italic>2bit</italic>] <italic>--sequence_format</italic> [<italic>FASTA</italic> | <italic>2bit</italic>] <italic>/path/to/bowtie/index /tmp/foo</italic>.</p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>CAGE-seq</term>
        <def>
          <p>Cap-analysis gene expression, for identification of 5′ ends of eukaryotic messenger RNAs</p>
        </def>
      </def-item>
      <def-item>
        <term>ChIP-seq</term>
        <def>
          <p>Chromatin immunoprecipitation sequencing, for probing sites of DNA::protein interaction</p>
        </def>
      </def-item>
      <def-item>
        <term>DMS-seq</term>
        <def>
          <p>Dimethylsulfonate sequencing, for probing RNA structure</p>
        </def>
      </def-item>
      <def-item>
        <term>EDA</term>
        <def>
          <p>Exploratory data analysis</p>
        </def>
      </def-item>
      <def-item>
        <term>GB</term>
        <def>
          <p>Gigabyte</p>
        </def>
      </def-item>
      <def-item>
        <term>hh:mm:ss</term>
        <def>
          <p>Time expressed as hours:minutes:seconds</p>
        </def>
      </def-item>
      <def-item>
        <term>MB</term>
        <def>
          <p>Megabyte</p>
        </def>
      </def-item>
      <def-item>
        <term>NGS</term>
        <def>
          <p>Next-generation sequencing</p>
        </def>
      </def-item>
      <def-item>
        <term>UTR</term>
        <def>
          <p>Untranslated region</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <ack>
    <title>Acknowledgements</title>
    <p>We are particularly grateful to Elizabeth Costa, Natalie Baggett, Naama Aviram, Edwin Rodriguez, and the members of the Weissman lab for testing and criticism of the software and documentation; to Alex Fields and John Hawkins for useful discussion of algorithms; and to Gloria Brar and all mentioned above for helpful comments on the manuscript.</p>
    <sec id="FPar1">
      <title>Funding</title>
      <p>JGD’s stipend and JSW’s laboratory were funded by an NSF graduate research fellowship, NIH/NIA grant P01 AG010770, NIH/NIGMS grant P50 GM102706, and the Howard Hughes Medical Institute. These organizations did not directly participate in design, implementation, or writing of the software or this manuscript.</p>
    </sec>
    <sec id="FPar2">
      <title>Authors’ contributions</title>
      <p>JGD designed, implemented, and tested the software. JGD and JSW wrote the manuscript. All authors read and approved the final manuscript.</p>
    </sec>
    <sec id="FPar3">
      <title>Competing interests</title>
      <p>The authors declare that they have no competing interests.</p>
    </sec>
    <sec id="FPar4">
      <title>Consent for publication</title>
      <p>Not applicable.</p>
    </sec>
    <sec id="FPar5">
      <title>Ethics approval and consent to participate</title>
      <p>Not applicable.</p>
    </sec>
  </ack>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ingolia</surname>
            <given-names>NT</given-names>
          </name>
          <name>
            <surname>Ghaemmaghami</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Newman</surname>
            <given-names>JRS</given-names>
          </name>
          <name>
            <surname>Weissman</surname>
            <given-names>JS</given-names>
          </name>
        </person-group>
        <article-title>Genome-wide analysis in vivo of translation with nucleotide resolution using ribosome profiling</article-title>
        <source>Science</source>
        <year>2009</year>
        <volume>324</volume>
        <fpage>218</fpage>
        <lpage>23</lpage>
        <pub-id pub-id-type="doi">10.1126/science.1168978</pub-id>
        <?supplied-pmid 19213877?>
        <pub-id pub-id-type="pmid">19213877</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ingolia</surname>
            <given-names>NT</given-names>
          </name>
          <name>
            <surname>Lareau</surname>
            <given-names>LF</given-names>
          </name>
          <name>
            <surname>Weissman</surname>
            <given-names>JS</given-names>
          </name>
        </person-group>
        <article-title>Ribosome profiling of mouse embryonic stem cells reveals the complexity and dynamics of mammalian proteomes</article-title>
        <source>Cell</source>
        <year>2011</year>
        <volume>147</volume>
        <fpage>789</fpage>
        <lpage>802</lpage>
        <pub-id pub-id-type="doi">10.1016/j.cell.2011.10.002</pub-id>
        <?supplied-pmid 22056041?>
        <pub-id pub-id-type="pmid">22056041</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Frommer</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>McDonald</surname>
            <given-names>LE</given-names>
          </name>
          <name>
            <surname>Millar</surname>
            <given-names>DS</given-names>
          </name>
          <name>
            <surname>Collis</surname>
            <given-names>CM</given-names>
          </name>
          <name>
            <surname>Watt</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Grigg</surname>
            <given-names>GW</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A genomic sequencing protocol that yields a positive display of 5-methylcytosine residues in individual DNA strands</article-title>
        <source>Proc Natl Acad Sci</source>
        <year>1992</year>
        <volume>89</volume>
        <fpage>1827</fpage>
        <lpage>31</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.89.5.1827</pub-id>
        <?supplied-pmid 1542678?>
        <pub-id pub-id-type="pmid">1542678</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Booth</surname>
            <given-names>MJ</given-names>
          </name>
          <name>
            <surname>Branco</surname>
            <given-names>MR</given-names>
          </name>
          <name>
            <surname>Ficz</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Oxley</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Krueger</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Reik</surname>
            <given-names>W</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Quantitative sequencing of 5-methylcytosine and 5-hydroxymethylcytosine at single-base resolution</article-title>
        <source>Science</source>
        <year>2012</year>
        <volume>336</volume>
        <fpage>934</fpage>
        <lpage>7</lpage>
        <pub-id pub-id-type="doi">10.1126/science.1220671</pub-id>
        <?supplied-pmid 22539555?>
        <pub-id pub-id-type="pmid">22539555</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <mixed-citation publication-type="other">Hardcastle TJ. riboSeqR: Analysis of sequencing data from ribosome profiling experiments. 2014; Available from: <ext-link ext-link-type="uri" xlink:href="http://bioconductor.org/packages/release/bioc/html/riboSeqR.html">http://bioconductor.org/packages/release/bioc/html/riboSeqR.html</ext-link>. Accessed 13 Nov 2016.</mixed-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Legendre</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Baudin-Baillieu</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Hatin</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Namy</surname>
            <given-names>O</given-names>
          </name>
        </person-group>
        <article-title>RiboTools: a Galaxy toolbox for qualitative ribosome profiling analysis</article-title>
        <source>Bioinformatics.</source>
        <year>2015</year>
        <volume>31</volume>
        <fpage>2586</fpage>
        <lpage>8</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btv174</pub-id>
        <?supplied-pmid 25812744?>
        <pub-id pub-id-type="pmid">25812744</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <mixed-citation publication-type="other">Michel AM, Mullan JPA, Velayudhan V, O’Connor PBF, Donohue CA, Baranov PV. RiboGalaxy: a browser based platform for the alignment, analysis and visualization of ribosome profiling data. RNA Biol. 2016;13(3):316-9. doi:10.1080/15476286.2016.1141862.</mixed-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Crappé</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Ndah</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Koch</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Steyaert</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Gawron</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>De Keulenaer</surname>
            <given-names>S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>PROTEOFORMER: deep proteome coverage through ribosome profiling and MS integration</article-title>
        <source>Nucleic Acids Res</source>
        <year>2015</year>
        <volume>43</volume>
        <fpage>e29</fpage>
        <pub-id pub-id-type="doi">10.1093/nar/gku1283</pub-id>
        <?supplied-pmid 25510491?>
        <pub-id pub-id-type="pmid">25510491</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bazzini</surname>
            <given-names>AA</given-names>
          </name>
          <name>
            <surname>Johnstone</surname>
            <given-names>TG</given-names>
          </name>
          <name>
            <surname>Christiano</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Mackowiak</surname>
            <given-names>SD</given-names>
          </name>
          <name>
            <surname>Obermayer</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Fleming</surname>
            <given-names>ES</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Identification of small ORFs in vertebrates using ribosome footprinting and evolutionary conservation</article-title>
        <source>EMBO J</source>
        <year>2014</year>
        <volume>33</volume>
        <fpage>981</fpage>
        <lpage>93</lpage>
        <pub-id pub-id-type="doi">10.1002/embj.201488411</pub-id>
        <?supplied-pmid 24705786?>
        <pub-id pub-id-type="pmid">24705786</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fields</surname>
            <given-names>AP</given-names>
          </name>
          <name>
            <surname>Rodriguez</surname>
            <given-names>EH</given-names>
          </name>
          <name>
            <surname>Jovanovic</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Stern-Ginossar</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Haas</surname>
            <given-names>BJ</given-names>
          </name>
          <name>
            <surname>Mertins</surname>
            <given-names>P</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A regression-based analysis of ribosome-profiling data reveals a conserved complexity to mammalian translation</article-title>
        <source>Mol Cell</source>
        <year>2015</year>
        <volume>60</volume>
        <fpage>816</fpage>
        <lpage>27</lpage>
        <pub-id pub-id-type="doi">10.1016/j.molcel.2015.11.013</pub-id>
        <?supplied-pmid 26638175?>
        <pub-id pub-id-type="pmid">26638175</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Handsaker</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Wysoker</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Fennell</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Ruan</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Homer</surname>
            <given-names>N</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The sequence alignment/Map format and SAMtools</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <fpage>2078</fpage>
        <lpage>9</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp352</pub-id>
        <?supplied-pmid 19505943?>
        <pub-id pub-id-type="pmid">19505943</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Quinlan</surname>
            <given-names>AR</given-names>
          </name>
          <name>
            <surname>Hall</surname>
            <given-names>IM</given-names>
          </name>
        </person-group>
        <article-title>BEDTools: a flexible suite of utilities for comparing genomic features</article-title>
        <source>Bioinformatics</source>
        <year>2010</year>
        <volume>26</volume>
        <fpage>841</fpage>
        <lpage>2</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btq033</pub-id>
        <?supplied-pmid 20110278?>
        <pub-id pub-id-type="pmid">20110278</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <mixed-citation publication-type="other">Anders S, others. HTSeq: Analysing high-throughput sequencing data with Python [Internet]. 2010. Available from: <ext-link ext-link-type="uri" xlink:href="http://www-huber.embl.de/HTSeq/doc/overview.html">http://www-huber.embl.de/HTSeq/doc/overview.html</ext-link>. Accessed 13 Nov 2016.</mixed-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dale</surname>
            <given-names>RK</given-names>
          </name>
          <name>
            <surname>Matzat</surname>
            <given-names>LH</given-names>
          </name>
          <name>
            <surname>Lei</surname>
            <given-names>EP</given-names>
          </name>
        </person-group>
        <article-title>Metaseq: a Python package for integrative genome-wide analysis reveals relationships between chromatin insulators and associated nuclear mRNA</article-title>
        <source>Nucleic Acids Res</source>
        <year>2014</year>
        <volume>42</volume>
        <fpage>9158</fpage>
        <lpage>70</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gku644</pub-id>
        <?supplied-pmid 25063299?>
        <pub-id pub-id-type="pmid">25063299</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <mixed-citation publication-type="other">bxlab/bx-python [Internet]. GitHub. [cited 2016 Sep 21]. Available from: <ext-link ext-link-type="uri" xlink:href="https://github.com/bxlab/bx-python">https://github.com/bxlab/bx-python</ext-link></mixed-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gentleman</surname>
            <given-names>RC</given-names>
          </name>
          <name>
            <surname>Carey</surname>
            <given-names>VJ</given-names>
          </name>
          <name>
            <surname>Bates</surname>
            <given-names>DM</given-names>
          </name>
        </person-group>
        <article-title>Bioconductor: open software development for computational biology and bioinformatics</article-title>
        <source>Genome Biol</source>
        <year>2004</year>
        <volume>5</volume>
        <fpage>R80</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2004-5-10-r80</pub-id>
        <?supplied-pmid 15461798?>
        <pub-id pub-id-type="pmid">15461798</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>van der Walt</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Colbert</surname>
            <given-names>SC</given-names>
          </name>
          <name>
            <surname>Varoquaux</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>The NumPy array: a structure for efficient numerical computation</article-title>
        <source>Comput Sci Eng</source>
        <year>2011</year>
        <volume>13</volume>
        <fpage>22</fpage>
        <lpage>30</lpage>
        <pub-id pub-id-type="doi">10.1109/MCSE.2011.37</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Jones</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Oliphant</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Peterson</surname>
            <given-names>P</given-names>
          </name>
          <etal/>
        </person-group>
        <source>SciPy: open source scientific tools for python [internet]</source>
        <year>2001</year>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rouskin</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Zubradt</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Washietl</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Kellis</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Weissman</surname>
            <given-names>JS</given-names>
          </name>
        </person-group>
        <article-title>Genome-wide probing of RNA structure reveals active unfolding of mRNA structures in vivo</article-title>
        <source>Nature</source>
        <year>2014</year>
        <volume>505</volume>
        <fpage>701</fpage>
        <lpage>5</lpage>
        <pub-id pub-id-type="doi">10.1038/nature12894</pub-id>
        <?supplied-pmid 24336214?>
        <pub-id pub-id-type="pmid">24336214</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cock</surname>
            <given-names>PJA</given-names>
          </name>
          <name>
            <surname>Antao</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Chang</surname>
            <given-names>JT</given-names>
          </name>
          <name>
            <surname>Chapman</surname>
            <given-names>BA</given-names>
          </name>
          <name>
            <surname>Cox</surname>
            <given-names>CJ</given-names>
          </name>
          <name>
            <surname>Dalke</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Biopython: freely available Python tools for computational molecular biology and bioinformatics</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <fpage>1422</fpage>
        <lpage>3</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp163</pub-id>
        <?supplied-pmid 19304878?>
        <pub-id pub-id-type="pmid">19304878</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <mixed-citation publication-type="other">Schiller BJ, contributors. twobitreader: a fast python package for reading .2bit files [Internet]. twobitreader. [cited 2015 Oct 26]. Available from: <ext-link ext-link-type="uri" xlink:href="https://pythonhosted.org/twobitreader/">https://pythonhosted.org/twobitreader/</ext-link></mixed-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jan</surname>
            <given-names>CH</given-names>
          </name>
          <name>
            <surname>Williams</surname>
            <given-names>CC</given-names>
          </name>
          <name>
            <surname>Weissman</surname>
            <given-names>JS</given-names>
          </name>
        </person-group>
        <article-title>Principles of ER cotranslational translocation revealed by proximity-specific ribosome profiling</article-title>
        <source>Science</source>
        <year>2014</year>
        <volume>346</volume>
        <fpage>1257521</fpage>
        <pub-id pub-id-type="doi">10.1126/science.1257521</pub-id>
        <?supplied-pmid 25378630?>
        <pub-id pub-id-type="pmid">25378630</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Brandman</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Stewart-Ornstein</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Wong</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Larson</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Williams</surname>
            <given-names>CC</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>G-W</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A ribosome-bound quality control complex triggers degradation of nascent peptides and signals translation stress</article-title>
        <source>Cell</source>
        <year>2012</year>
        <volume>151</volume>
        <fpage>1042</fpage>
        <lpage>54</lpage>
        <pub-id pub-id-type="doi">10.1016/j.cell.2012.10.044</pub-id>
        <?supplied-pmid 23178123?>
        <pub-id pub-id-type="pmid">23178123</pub-id>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <mixed-citation publication-type="other">McKinney W. Data Structures for Statistical Computing in Python. Proceedings of the 9th Python in Science Conference. 2010;51–6</mixed-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dunn</surname>
            <given-names>JG</given-names>
          </name>
          <name>
            <surname>Foo</surname>
            <given-names>CK</given-names>
          </name>
          <name>
            <surname>Belletier</surname>
            <given-names>NG</given-names>
          </name>
          <name>
            <surname>Gavis</surname>
            <given-names>ER</given-names>
          </name>
          <name>
            <surname>Weissman</surname>
            <given-names>JS</given-names>
          </name>
        </person-group>
        <article-title>Ribosome profiling reveals pervasive and regulated stop codon readthrough in Drosophila melanogaster</article-title>
        <source>Elife</source>
        <year>2013</year>
        <volume>2</volume>
        <fpage>e01179</fpage>
        <pub-id pub-id-type="doi">10.7554/eLife.01179</pub-id>
        <?supplied-pmid 24302569?>
        <pub-id pub-id-type="pmid">24302569</pub-id>
      </element-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <mixed-citation publication-type="other">Behnel S, Bradshaw R, Citro C, Dalcin L, Seljebotn DS, Smith K. Cython: The Best of Both Worlds. Computing in Science and Engineering. 2011;13:31–9.</mixed-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <mixed-citation publication-type="other">Heger A, contributors. pysam: htslib interface for python [Internet]. [cited 2015 Oct 26]. Available from: <ext-link ext-link-type="uri" xlink:href="https://github.com/pysam-developers/pysam">https://github.com/pysam-developers/pysam</ext-link></mixed-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <mixed-citation publication-type="other">Hunter JD. Matplotlib: A 2D graphics environment. Computing in Science &amp; Engineering. 2007;9:90–5.</mixed-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <mixed-citation publication-type="other">Lepa, Konstantin. termcolor 1.1.0 : ANSI Color formatting for output in terminal [Internet]. [cited 2016 Apr 26]. Available from: <ext-link ext-link-type="uri" xlink:href="https://pypi.python.org/pypi/termcolor">https://pypi.python.org/pypi/termcolor</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Leinonen</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Sugawara</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Shumway</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>The sequence read archive</article-title>
        <source>Nucleic Acids Res</source>
        <year>2011</year>
        <volume>39</volume>
        <fpage>D19</fpage>
        <lpage>21</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkq1019</pub-id>
        <?supplied-pmid 21062823?>
        <pub-id pub-id-type="pmid">21062823</pub-id>
      </element-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lister</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Pelizzola</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Dowen</surname>
            <given-names>RH</given-names>
          </name>
          <name>
            <surname>Hawkins</surname>
            <given-names>RD</given-names>
          </name>
          <name>
            <surname>Hon</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Tonti-Filippini</surname>
            <given-names>J</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Human DNA methylomes at base resolution show widespread epigenomic differences</article-title>
        <source>Nature</source>
        <year>2009</year>
        <volume>462</volume>
        <fpage>315</fpage>
        <lpage>22</lpage>
        <pub-id pub-id-type="doi">10.1038/nature08514</pub-id>
        <?supplied-pmid 19829295?>
        <pub-id pub-id-type="pmid">19829295</pub-id>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Thorvaldsdóttir</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Robinson</surname>
            <given-names>JT</given-names>
          </name>
          <name>
            <surname>Mesirov</surname>
            <given-names>JP</given-names>
          </name>
        </person-group>
        <article-title>Integrative Genomics Viewer (IGV): high-performance genomics data visualization and exploration</article-title>
        <source>Brief Bioinform</source>
        <year>2013</year>
        <volume>14</volume>
        <fpage>178</fpage>
        <lpage>92</lpage>
        <pub-id pub-id-type="doi">10.1093/bib/bbs017</pub-id>
        <?supplied-pmid 22517427?>
        <pub-id pub-id-type="pmid">22517427</pub-id>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <mixed-citation publication-type="other">Brandl, Georg, Ronacher, Armin, Hatch, Timothy, the Pocoo team. Pygments: Python syntax highlighter [Internet]. [cited 2016 Apr 26]. Available from: <ext-link ext-link-type="uri" xlink:href="http://pygments.org/">http://pygments.org/</ext-link></mixed-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kim</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Pertea</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Trapnell</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Pimentel</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Kelley</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>TopHat2: accurate alignment of transcriptomes in the presence of insertions, deletions and gene fusions</article-title>
        <source>Genome Biol</source>
        <year>2013</year>
        <volume>14</volume>
        <fpage>R36</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2013-14-4-r36</pub-id>
        <?supplied-pmid 23618408?>
        <pub-id pub-id-type="pmid">23618408</pub-id>
      </element-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lander</surname>
            <given-names>ES</given-names>
          </name>
          <name>
            <surname>Linton</surname>
            <given-names>LM</given-names>
          </name>
          <name>
            <surname>Birren</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Nusbaum</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Zody</surname>
            <given-names>MC</given-names>
          </name>
          <name>
            <surname>Baldwin</surname>
            <given-names>J</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Initial sequencing and analysis of the human genome</article-title>
        <source>Nature</source>
        <year>2001</year>
        <volume>409</volume>
        <fpage>860</fpage>
        <lpage>921</lpage>
        <pub-id pub-id-type="doi">10.1038/35057062</pub-id>
        <?supplied-pmid 11237011?>
        <pub-id pub-id-type="pmid">11237011</pub-id>
      </element-citation>
    </ref>
    <ref id="CR36">
      <label>36.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Krueger</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Andrews</surname>
            <given-names>SR</given-names>
          </name>
        </person-group>
        <article-title>Bismark: a flexible aligner and methylation caller for Bisulfite-Seq applications</article-title>
        <source>Bioinformatics</source>
        <year>2011</year>
        <volume>27</volume>
        <fpage>1571</fpage>
        <lpage>2</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btr167</pub-id>
        <?supplied-pmid 21493656?>
        <pub-id pub-id-type="pmid">21493656</pub-id>
      </element-citation>
    </ref>
    <ref id="CR37">
      <label>37.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cunningham</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Amode</surname>
            <given-names>MR</given-names>
          </name>
          <name>
            <surname>Barrell</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Beal</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Billis</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Brent</surname>
            <given-names>S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Ensembl 2015</article-title>
        <source>Nucleic Acids Res</source>
        <year>2015</year>
        <volume>43</volume>
        <fpage>D662</fpage>
        <lpage>9</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gku1010</pub-id>
        <?supplied-pmid 25352552?>
        <pub-id pub-id-type="pmid">25352552</pub-id>
      </element-citation>
    </ref>
    <ref id="CR38">
      <label>38.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kryukov</surname>
            <given-names>GV</given-names>
          </name>
          <name>
            <surname>Castellano</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Novoselov</surname>
            <given-names>SV</given-names>
          </name>
          <name>
            <surname>Lobanov</surname>
            <given-names>AV</given-names>
          </name>
          <name>
            <surname>Zehtab</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Guigó</surname>
            <given-names>R</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Characterization of mammalian selenoproteomes</article-title>
        <source>Science</source>
        <year>2003</year>
        <volume>300</volume>
        <fpage>1439</fpage>
        <lpage>43</lpage>
        <pub-id pub-id-type="doi">10.1126/science.1083516</pub-id>
        <?supplied-pmid 12775843?>
        <pub-id pub-id-type="pmid">12775843</pub-id>
      </element-citation>
    </ref>
    <ref id="CR39">
      <label>39.</label>
      <mixed-citation publication-type="other">Pedregosa, Fabian. Memory Profiler: a module for monitoring memory usage of a Python program [Internet]. [cited 2016 Apr 26]. Available from: <ext-link ext-link-type="uri" xlink:href="https://pypi.python.org/pypi/memory_profiler/">https://pypi.python.org/pypi/memory_profiler/</ext-link></mixed-citation>
    </ref>
    <ref id="CR40">
      <label>40.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cherry</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Hong</surname>
            <given-names>EL</given-names>
          </name>
          <name>
            <surname>Amundsen</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Balakrishnan</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Binkley</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Chan</surname>
            <given-names>ET</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Saccharomyces genome database: the genomics resource of budding yeast</article-title>
        <source>Nucleic Acids Res</source>
        <year>2012</year>
        <volume>40</volume>
        <fpage>D700</fpage>
        <lpage>5</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkr1029</pub-id>
        <?supplied-pmid 22110037?>
        <pub-id pub-id-type="pmid">22110037</pub-id>
      </element-citation>
    </ref>
    <ref id="CR41">
      <label>41.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nagalakshmi</surname>
            <given-names>U</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Waern</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Shou</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Raha</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Gerstein</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The transcriptional landscape of the yeast genome defined by RNA sequencing</article-title>
        <source>Science</source>
        <year>2008</year>
        <volume>320</volume>
        <fpage>1344</fpage>
        <lpage>9</lpage>
        <pub-id pub-id-type="doi">10.1126/science.1158441</pub-id>
        <?supplied-pmid 18451266?>
        <pub-id pub-id-type="pmid">18451266</pub-id>
      </element-citation>
    </ref>
    <ref id="CR42">
      <label>42.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yassour</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Kaplan</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Fraser</surname>
            <given-names>HB</given-names>
          </name>
          <name>
            <surname>Levin</surname>
            <given-names>JZ</given-names>
          </name>
          <name>
            <surname>Pfiffner</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Adiconis</surname>
            <given-names>X</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Ab initio construction of a eukaryotic transcriptome by massively parallel mRNA sequencing</article-title>
        <source>Proc Natl Acad Sci U S A</source>
        <year>2009</year>
        <volume>106</volume>
        <fpage>3264</fpage>
        <lpage>9</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.0812841106</pub-id>
        <?supplied-pmid 19208812?>
        <pub-id pub-id-type="pmid">19208812</pub-id>
      </element-citation>
    </ref>
    <ref id="CR43">
      <label>43.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Attrill</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Falls</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Goodman</surname>
            <given-names>JL</given-names>
          </name>
          <name>
            <surname>Millburn</surname>
            <given-names>GH</given-names>
          </name>
          <name>
            <surname>Antonazzo</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Rey</surname>
            <given-names>AJ</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>FlyBase: establishing a Gene Group resource for Drosophila melanogaster</article-title>
        <source>Nucleic Acids Res</source>
        <year>2016</year>
        <volume>44</volume>
        <fpage>D786</fpage>
        <lpage>92</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkv1046</pub-id>
        <?supplied-pmid 26467478?>
        <pub-id pub-id-type="pmid">26467478</pub-id>
      </element-citation>
    </ref>
    <ref id="CR44">
      <label>44.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rodriguez</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Maietta</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Ezkurdia</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Pietrelli</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Wesselink</surname>
            <given-names>J-J</given-names>
          </name>
          <name>
            <surname>Lopez</surname>
            <given-names>G</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>APPRIS: annotation of principal and alternative splice isoforms</article-title>
        <source>Nucleic Acids Res</source>
        <year>2013</year>
        <volume>41</volume>
        <fpage>D110</fpage>
        <lpage>7</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gks1058</pub-id>
        <?supplied-pmid 23161672?>
        <pub-id pub-id-type="pmid">23161672</pub-id>
      </element-citation>
    </ref>
    <ref id="CR45">
      <label>45.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Langmead</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Trapnell</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Pop</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Ultrafast and memory-efficient alignment of short DNA sequences to the human genome</article-title>
        <source>Genome Biol.</source>
        <year>2009</year>
        <volume>10</volume>
        <fpage>R25</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2009-10-3-r25</pub-id>
        <?supplied-pmid 19261174?>
        <pub-id pub-id-type="pmid">19261174</pub-id>
      </element-citation>
    </ref>
    <ref id="CR46">
      <label>46.</label>
      <mixed-citation publication-type="other">Kent, Jim, ENCODE DCC. kentUtils: Jim Kent command line bioinformatic utilities [Internet]. GitHub. [cited 2016 Apr 26]. Available from: <ext-link ext-link-type="uri" xlink:href="https://github.com/ENCODE-DCC/kentUtils">https://github.com/ENCODE-DCC/kentUtils</ext-link></mixed-citation>
    </ref>
  </ref-list>
</back>

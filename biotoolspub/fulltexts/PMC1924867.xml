<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-title>BMC Bioinformatics</journal-title>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">1924867</article-id>
    <article-id pub-id-type="publisher-id">1471-2105-8-209</article-id>
    <article-id pub-id-type="pmid">17577412</article-id>
    <article-id pub-id-type="doi">10.1186/1471-2105-8-209</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>CRISPR Recognition Tool (CRT): a tool for automatic detection of clustered regularly interspaced palindromic repeats</article-title>
    </title-group>
    <contrib-group>
      <contrib id="A1" corresp="yes" contrib-type="author">
        <name>
          <surname>Bland</surname>
          <given-names>Charles</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>charles.bland@jsums.edu</email>
      </contrib>
      <contrib id="A2" contrib-type="author">
        <name>
          <surname>Ramsey</surname>
          <given-names>Teresa L</given-names>
        </name>
        <xref ref-type="aff" rid="I3">3</xref>
        <email>tramsey@cse.unl.edu</email>
      </contrib>
      <contrib id="A3" contrib-type="author">
        <name>
          <surname>Sabree</surname>
          <given-names>Fareedah</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>fareedah.sabree@jsums.edu</email>
      </contrib>
      <contrib id="A4" contrib-type="author">
        <name>
          <surname>Lowe</surname>
          <given-names>Micheal</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>michael.l.lowe@jsums.edu</email>
      </contrib>
      <contrib id="A5" contrib-type="author">
        <name>
          <surname>Brown</surname>
          <given-names>Kyndall</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>kyndall.d.brown@jsums.edu</email>
      </contrib>
      <contrib id="A6" contrib-type="author">
        <name>
          <surname>Kyrpides</surname>
          <given-names>Nikos C</given-names>
        </name>
        <xref ref-type="aff" rid="I2">2</xref>
        <email>NCKyrpides@lbl.gov</email>
      </contrib>
      <contrib id="A7" contrib-type="author">
        <name>
          <surname>Hugenholtz</surname>
          <given-names>Philip</given-names>
        </name>
        <xref ref-type="aff" rid="I2">2</xref>
        <email>phugenholtz@lbl.gov</email>
      </contrib>
    </contrib-group>
    <aff id="I1"><label>1</label>Department of Computer Science, Jackson State University, Jackson, MS 39217, USA</aff>
    <aff id="I2"><label>2</label>DOE Joint Genome Institute, Walnut Creek, CA 94598, USA</aff>
    <aff id="I3"><label>3</label>Department of Computer Science and Engineering, University of Nebraska-Lincoln, Lincoln, NE 68504, USA</aff>
    <pub-date pub-type="collection">
      <year>2007</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>18</day>
      <month>6</month>
      <year>2007</year>
    </pub-date>
    <volume>8</volume>
    <fpage>209</fpage>
    <lpage>209</lpage>
    <ext-link ext-link-type="uri" xlink:href="http://www.biomedcentral.com/1471-2105/8/209"/>
    <history>
      <date date-type="received">
        <day>13</day>
        <month>10</month>
        <year>2006</year>
      </date>
      <date date-type="accepted">
        <day>18</day>
        <month>6</month>
        <year>2007</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright © 2007 Bland et al; licensee BioMed Central Ltd.</copyright-statement>
      <copyright-year>2007</copyright-year>
      <copyright-holder>Bland et al; licensee BioMed Central Ltd.</copyright-holder>
      <license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0">
        <p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0"/>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</p>
        <!--<rdf xmlns="http://web.resource.org/cc/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1" xmlns:dcterms="http://purl.org/dc/terms"><Work xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" rdf:about=""><license rdf:resource="http://creativecommons.org/licenses/by/2.0"/><dc:type rdf:resource="http://purl.org/dc/dcmitype/Text"/><dc:author>
               Bland
               Charles
               
               charles.bland@jsums.edu
            </dc:author><dc:title>
            CRISPR Recognition Tool (CRT): a tool for automatic detection of clustered regularly interspaced palindromic repeats
         </dc:title><dc:date>2007</dc:date><dcterms:bibliographicCitation>BMC Bioinformatics 8(1): 209-. (2007)</dcterms:bibliographicCitation><dc:identifier type="sici">1471-2105(2007)8:1&#x0003c;209&#x0003e;</dc:identifier><dcterms:isPartOf>urn:ISSN:1471-2105</dcterms:isPartOf><License rdf:about="http://creativecommons.org/licenses/by/2.0"><permits rdf:resource="http://web.resource.org/cc/Reproduction" xmlns=""/><permits rdf:resource="http://web.resource.org/cc/Distribution" xmlns=""/><requires rdf:resource="http://web.resource.org/cc/Notice" xmlns=""/><requires rdf:resource="http://web.resource.org/cc/Attribution" xmlns=""/><permits rdf:resource="http://web.resource.org/cc/DerivativeWorks" xmlns=""/></License></Work></rdf>-->
      </license>
    </permissions>
    <abstract>
      <sec>
        <title>Background</title>
        <p>Clustered Regularly Interspaced Palindromic Repeats (CRISPRs) are a novel type of direct repeat found in a wide range of bacteria and archaea. CRISPRs are beginning to attract attention because of their proposed mechanism; that is, defending their hosts against invading extrachromosomal elements such as viruses. Existing repeat detection tools do a poor job of identifying CRISPRs due to the presence of unique spacer sequences separating the repeats. In this study, a new tool, CRT, is introduced that rapidly and accurately identifies CRISPRs in large DNA strings, such as genomes and metagenomes.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>CRT was compared to CRISPR detection tools, Patscan and Pilercr. In terms of correctness, CRT was shown to be very reliable, demonstrating significant improvements over Patscan for measures precision, recall and quality. When compared to Pilercr, CRT showed improved performance for recall and quality. In terms of speed, CRT proved to be a huge improvement over Patscan. Both CRT and Pilercr were comparable in speed, however CRT was faster for genomes containing large numbers of repeats.</p>
      </sec>
      <sec>
        <title>Conclusion</title>
        <p>In this paper a new tool was introduced for the automatic detection of CRISPR elements. This tool, CRT, showed some important improvements over current techniques for CRISPR identification. CRT's approach to detecting repetitive sequences is straightforward. It uses a simple sequential scan of a DNA sequence and detects repeats directly without any major conversion or preprocessing of the input. This leads to a program that is easy to describe and understand; yet it is very accurate, fast and memory efficient, being O(<italic>n</italic>) in space and O(<italic>nm</italic>/<italic>l</italic>) in time.</p>
      </sec>
    </abstract>
  </article-meta>
</front>
<body>
  <sec>
    <title>Background</title>
    <p>Repetitive sequences are abundant in bacteria and archaea, accounting for close to 5% of the genome size in many organisms [<xref ref-type="bibr" rid="B1">1</xref>,<xref ref-type="bibr" rid="B2">2</xref>]. These repetitive sequences come in various forms/sizes and may be found dispersed throughout a genome, clustered in close proximity or arranged contiguously. The identification of repeats has proven to be of significance, as they provide insight into the functional and evolutionary roles of various organisms [<xref ref-type="bibr" rid="B3">3</xref>-<xref ref-type="bibr" rid="B7">7</xref>].</p>
    <p>This study centers on a recently recognized family of repeats known as Clustered Regularly Interspaced Palindromic Repeats (CRISPRs). Since their description by Mojica <italic>et al</italic>. [<xref ref-type="bibr" rid="B8">8</xref>], CRISPRs have attracted a great deal of interest [<xref ref-type="bibr" rid="B9">9</xref>-<xref ref-type="bibr" rid="B16">16</xref>]. CRISPRs have been found only in the genomes of prokaryotes and are composed of short direct repeats currently known to range in sizes from 21 – 47 base pairs. This family of repeats is unique in that they are interspaced by non-repeating sequences of similar size. CRISPRs were found in approximately 40% of bacterial genomes investigated [<xref ref-type="bibr" rid="B14">14</xref>]. Of those genomes with CRISPRs present, about one half contained multiple CRISPR loci. The average number of repeats per loci was found to be 27, with an average repeat length of 32 base pairs. Although knowledge of the characteristics of CRISPRs continues to grow, their complete function is still not yet known. One recently verified hypothesis, however, is that they defend against invading viruses [<xref ref-type="bibr" rid="B16">16</xref>].</p>
    <p>Several software applications are available for identifying various forms of repeats. However, because the focus on CRISPR elements is recent, only one CRISPR-specific tool has been published for their automatic detection [<xref ref-type="bibr" rid="B17">17</xref>]. Identification based on generic repeat searching applications such as Patscan [<xref ref-type="bibr" rid="B18">18</xref>] require considerable manual post-processing. In this study, a new tool for the automatic detection of CRISPR elements is presented. This software program, CRISPR Recognition Tool (CRT), uses a simple sequential search technique that detects repeats directly from a DNA sequence. Unlike most repeat detection techniques, the algorithm presented in this paper does not rely on the use of the suffix tree or alignment matrix as a central data structure. Instead, repeats are discovered directly from the DNA. As a result, this technique is very efficient in terms of memory usage, and it is much easier to understand and implement than most other methods. Despite its simplicity, the presented algorithm is able to achieved impressive execution speed when compared to other repeat detection tools.</p>
  </sec>
  <sec>
    <title>Implementation</title>
    <p>CRT's search for CRISPRs is based on finding a series of short exact repeats of length <italic>k </italic>that are separated by a similar distance and then extending these exact <italic>k</italic>-mer matches to the actual repeat length. The value of <italic>k </italic>should be small and less than the length of the shortest repeat to be detected. By making <italic>k </italic>small, string comparison is faster and the likelihood of finding exact matches between approximate repeats is increased. Once actual repeats are found, they are filtered to remove those that do not meet CRISPR specific requirements.</p>
    <sec>
      <title>Searching for exact <italic>k</italic>-mer matches</title>
      <p>The algorithm begins its search for repeats with a left-to-right scan of a sequence using a small sliding <italic>search window </italic>of length <italic>k</italic>. The value in the search window represents a candidate repeat, and each time the window reads a new <italic>k</italic>-mer, the algorithm searches forward for exact <italic>k</italic>-mer matches. When searching for each successive match, the search space can be restricted to a small range, called <italic>search range</italic>. Given a <italic>k</italic>-mer that begins at position <italic>i</italic>, any exact <italic>k</italic>-mer match, if one exists, should occur in the range:</p>
      <p>
        <disp-formula>[<italic>i </italic>+ <italic>minR </italic>+ <italic>minS </italic>.. <italic>i </italic>+ <italic>maxR </italic>+ <italic>maxS </italic>+ <italic>k</italic>]</disp-formula>
      </p>
      <p>Here, <italic>minR </italic>and <italic>maxR </italic>refer to the lengths of the smallest and largest repeats to be detected. The lengths of spacers, which are the similarly sized non-repeating regions between repeats, are referred to by <italic>minS </italic>and <italic>maxS </italic>(See Figure <xref ref-type="fig" rid="F1">1</xref>). Since CRISPRs are to some degree evenly spaced, the distance between the initial repeats can be used to approximate the spacing between subsequent exact <italic>k</italic>-mer matches. Thus the size of the search range can be reduced further, resulting in faster processing time.</p>
      <fig position="float" id="F1">
        <label>Figure 1</label>
        <caption>
          <p><bold>An occurrence of a CRISPR</bold>. Repetitive sequences are detected by reading a small search window and then scanning ahead for exact <italic>k</italic>-mer matches separated by a similar distance.</p>
        </caption>
        <graphic xlink:href="1471-2105-8-209-1"/>
      </fig>
      <p>The size of the search range has a direct effect on the processing time of the algorithm, with smaller ranges being more desirable. Thus, the algorithm runs fastest when there is little variation between the sizes of the smallest/largest repeats and the smallest/largest spacers.</p>
    </sec>
    <sec>
      <title>If exact <italic>k</italic>-mer matches are found</title>
      <p>The search described above detects a succession of similarly spaced repeats of length <italic>k</italic>. Since these repeats do not represent the true length of the repeating pattern, they must be extended (left and right) to the actual repeat length. Any method for extending repeats must consider that mutations occur in DNA sequences, so, repeats may not be exact. The approach taken is this paper is to read the characters to the left or right of all repeats and compute occurrence percentages for each base, ACGT. If there is a character that has an occurrence percentage greater than or equal to some preset value, <italic>p</italic>, the repeats are extended. For example, if extending left, a <italic>p </italic>value of 100% extends exact <italic>k</italic>-mer matches to exact (<italic>k</italic>+1)-mer matches only if the character to the left of all repeats within the CRISPR is the same. Thus, for <italic>p </italic>= 100%, exact repeats are detected, while lower values allow for the detection of approximate repeats. This method of extending repeats works well for CRISPRs, give an appropriate value for <italic>p </italic>(CRT uses a default value of 75%).</p>
    </sec>
    <sec>
      <title>If no exact <italic>k</italic>-mer matches are found</title>
      <p>If no exact <italic>k</italic>-mer matches are found, the search window advances forward and the process described above is repeated. The search window can actually advance forward in intervals greater than one without missing any repeats. The size of this interval is one of the major factors contributing to the speed of the presented algorithm.</p>
      <p>The key to being able to advance at greater intervals is guaranteeing that the search window will never skip any repetitive sequence during its traversal of the DNA sequence. That is, the interval at which the search window advances must be small enough that the entire window will (at some point) fall entirely within each repeat. The length of this interval is dependent on the size of the search window, <italic>k</italic>, and the length of the smallest repeats to be identified, <italic>minR</italic>. It can be computed as follows.</p>
      <p>
        <disp-formula><italic>interval </italic>= max {<italic>minR </italic>- (2<italic>k </italic>- 1), 1}</disp-formula>
      </p>
      <p>Longer repeats produce larger intervals, as do smaller search windows. Larger intervals result in significant improvements in speed because less data is analyzed. For example, for <italic>minR </italic>= 21 and <italic>k </italic>= 6, the search window can skip 10 positions each time it advances. Thus, processing a DNA sequence of length 1,000,000, for the most part, becomes equivalent to processing a sequence of length 1,000,000/10 (or 100,000).</p>
      <p>Although smaller search windows improve processing speed, if continuing to reduce their size, the speed of the algorithm may at some point worsen. This is because smaller search windows increase the likelihood of the program finding short repetitive sequences that are not really part of a true CRISPR element, but happen by chance. This will cause the program to spend more time processing repeats that are actually false positives. As an example, for a search window of length <italic>k </italic>= 3, there is a 1/4<sup>3 </sup>chance that any 3-mer will be a match to the search window. This assumes that all four bases are equally likely to appear at any position.</p>
    </sec>
    <sec>
      <title>Filtering</title>
      <p>Many of the candidate CRISPRs found from the process described above will either be contiguous repeats or repeats with incorrect starting and/or ending positions. To remove unwanted repetitive sequences, filters are applied. The first filter checks that the candidate CRISPR is composed of short repeats (between <italic>minR </italic>and <italic>maxR </italic>in length). If that condition is met, the spacers are checked for being non-repeating and similarly sized. Filtering is fast because most repetitive sequences do not make it deep into the process. Also, when testing for similarly sized/non-repeating spacers, it is only necessary to check the first few spacers of the CRISPR.</p>
      <p>The final part of program checks the left and right flanks of a CRISPR in case repeats were missed because of too many mismatches. The flank check is less strict than the initial search for repeats in that it does not look for short exact matches. Instead, the discovered repeats within the CRISPR are used for comparison (using hamming distance) to detect any nearby approximate repeats. The flank check is important for two reasons. The likelihood of missing repeats with mismatches increases when advancing the search window in intervals. Furthermore, according to Jansen <italic>et al</italic>. [<xref ref-type="bibr" rid="B10">10</xref>], the last or last few repeats of CRISPRs contain mutations in most organisms, and about one-third of CRISPRs have the last repeat truncated.</p>
    </sec>
    <sec>
      <title>Time and Space</title>
      <p>The CRT algorithm moves a <italic>search window </italic>through a sequence in intervals, at each step scanning the <italic>search range </italic>for the pattern in the search window. Searching for a pattern in a text can be done using any fast search algorithm. The Boyer-Moore [<xref ref-type="bibr" rid="B19">19</xref>] string-matching algorithm is used here. It is linear in time (on average, the algorithm has a sublinear behavior). Thus, the running time of the algorithm for finding CRISPRs as described in this paper is O(<italic>nm</italic>/<italic>l</italic>), where <italic>n </italic>is the length of the DNA sequence, <italic>m </italic>is the length of the search range and <italic>l </italic>is the interval at which the search window advances. (The actual behavior of the algorithm is linear and is supported by empirical evidence in the following section.) The algorithm is also linear in space, since repeats are detected directly from the input sequence with no additional major structures required.</p>
    </sec>
  </sec>
  <sec>
    <title>Results</title>
    <p>CRT (version 1.0), Pilercr (version 1.0) [<xref ref-type="bibr" rid="B17">17</xref>] and Patscan [<xref ref-type="bibr" rid="B18">18</xref>] were compared based on execution speed and ability to correctly identify CRISPRs. Patscan is a generic pattern discovery application that identifies repetitive sequences given a user-specified input pattern. The number of repeats that Patscan detects must be predefined, and the tool has no mechanism for distinguishing repeating and non-repeating regions of CRISPRs. Thus, considerable manual processing of the output is required in order to remove unwanted results and to extend repetitive sequences beyond the fixed size limit set by the input pattern. Pilercr is a recently developed tool designed specifically for the automatic detection of CRISPR elements. It is based on the Piler [<xref ref-type="bibr" rid="B20">20</xref>] program, which utilizes alignment matrices for detecting contiguous repeats.</p>
    <p>Both Patscan and Pilercr were implemented in the C programming language. CRT was developed using Java. All tools were tested on finished microbial genomes available in the IMG version 1.5 database [<xref ref-type="bibr" rid="B21">21</xref>]. Each was run under Cygwin version 1.5.21 on a PC having the following specifications: Windows XP operation system, Pentium 3.4 GHz processor, 1.0 GB RAM.</p>
    <sec>
      <title>Speed Evaluation</title>
      <p>Figures <xref ref-type="fig" rid="F2">2</xref>, <xref ref-type="fig" rid="F3">3</xref> and <xref ref-type="fig" rid="F4">4</xref> show the execution times of the three tools. The x-axis contains the accession number for the analyzed organisms followed by their approximate number of base pairs in millions (Mbp). As the number of repeats may affect execution time, only genomes with similar repeats counts were used (between 70 and 80). Figures <xref ref-type="fig" rid="F2">2</xref> and <xref ref-type="fig" rid="F3">3</xref> are based on a search with repeat size 21 – 37, spacer size 19 – 48, and minimum number of CRISPR repeats 3. CRT required an additional setting for search window length. It was tested for values 6 and 8. Figure <xref ref-type="fig" rid="F4">4</xref> shows results when searching for longer repeats of size 19 – 50 and spacer size 19 – 60 (this is beyond the range of any CRISPRs found in any previous work). Patscan is not included in this figure, or any subsequent figures, because it's extended running times flattens the other graph lines, making it difficult to compare the other tools (see Figure <xref ref-type="fig" rid="F2">2</xref>).</p>
      <fig position="float" id="F2">
        <label>Figure 2</label>
        <caption>
          <p><bold>Running time based on genome size, using repeat length 21–37 and spacer length 19–48</bold>. Running times for the three compared search tools, based on genome size (CRT is listed twice, once for windows size 6 and once for window size 8). The y-axis represents time in seconds. The x-axis lists the genome accession numbers, followed by their sizes in million base pairs (Mbp). As the size of the genomes increase, it can be seen that running times of the search tools increase at different rates. Below, the corresponding organism names are given. [IMG:AE015450] Mycoplasma gallisepticum (strain R(low)) [IMG:AE004439] Pasteurella multocida (strain Pm70) [IMG:AE017282] Methylococcus capsulatus (strain Bath/NCIMB 11132) [IMG:AP006627] Bacillus clausii (strain KSM-K16) [IMG:BX470251] Photorhabdus luminescens (subsp. laumondii, strain TT01).</p>
        </caption>
        <graphic xlink:href="1471-2105-8-209-2"/>
      </fig>
      <fig position="float" id="F3">
        <label>Figure 3</label>
        <caption>
          <p><bold>Running time based on genome size, excluding Patscan</bold>. Running times for the search tools, excluding Patscan. The parameter values and organisms are the same as that in Figure 2. However, by removing Patscan, a better comparison of the execution speeds of PilerCR and CRT can be achieved.</p>
        </caption>
        <graphic xlink:href="1471-2105-8-209-3"/>
      </fig>
      <fig position="float" id="F4">
        <label>Figure 4</label>
        <caption>
          <p><bold>Running time based on genome size, using repeat length 19–50 and spacer length is 19–60</bold>. Running times for two of the compared search tools, based on genome size (CRT is listed twice, once for windows size 6 and once for window size 8). This figure is the same as Figure 3, except the ranges of the repeat length and spacer length to be detected are increased.</p>
        </caption>
        <graphic xlink:href="1471-2105-8-209-4"/>
      </fig>
      <p>The speed of CRT and Pilercr is very impressive and a huge improvement over the previous technique of CRISPR detection using Patscan, as shown in Figures <xref ref-type="fig" rid="F2">2</xref> and <xref ref-type="fig" rid="F3">3</xref>. CRT achieves the best performance, being able to process a DNA sequence of nearly 6 million bases in about 3 seconds using a search window of size 8, CRT(8), and in about 2 seconds for a search window of size 6, CRT(6).</p>
      <p>Figure <xref ref-type="fig" rid="F4">4</xref> shows a slight decrease in the performance of CRT as the range in the size of repeats to be detected is increased (see the previous section). The performance of Pilercr, however, appears to be independent of the size range of repeats. For these settings, the speed of CRT(8) and Pilercr are about the same, with CRT(6) performing best.</p>
      <p>In the previous example, execution speed was analyzed based on increasing genome size. In Figure <xref ref-type="fig" rid="F5">5</xref>, speed is analyzed for increasing number of repeats. Only genomes of similar sizes were used (2.7 – 3.8 Mbp). The repeat size is 21 – 37 and spacer size is 19 – 48. The figures show that CRT performs better than Pilercr for larger number of repeats. Like Pilercr, whose speed appears to be independent of the size range of repeats, CRT's speed is independent of the number of repeats contained in a genome. Actually, CRT improves slightly in processing time as the number of repeats increases. This is because it is able to process sections of a sequence containing repeats very fast, as explained in the previous section.</p>
      <fig position="float" id="F5">
        <label>Figure 5</label>
        <caption>
          <p><bold>Running time based on number of repeats, using repeat length 21–37 and spacer length 19–48</bold>. Running times for two of the compared search tools based on number of repeats processed. CRT is listed twice, once for windows size 6 and once for window size 8. The y-axis represents time in seconds. The x-axis lists the genome accession numbers, followed by the number of repeats detected in the genome. As the size of the genomes increase, it can bee seen that running times of the search tools increase at different rates. Below, the corresponding organism names and the number of CRISPR loci are given. All genomes are close in size (2.7 – 3.8 Mbp). [IMG:BA000031] Vibrio parahaemolyticus (serovar O3:K6, strain RIMD 2210633) loci: 0 [IMG:CR628337] Legionella pneumophila (strain Lens) loci: 2 [IMG:AP006840] Symbiobacterium thermophilum (strain IAM 14863/T) loci: 3 [IMG:AE017180] Geobacter sulfurreducens (strain ATCC 51573/PCA) loci: 2 [IMG:AE008691] Thermoanaerobacter tengcongensis (strain MB4/JCM 11007) loci: 3 [IMG:AE006641] Sulfolobus solfataricus P2 loci: 7 [IMG:BA000023] Sulfolobus tokodaii str. 7 DNA loci: 7.</p>
        </caption>
        <graphic xlink:href="1471-2105-8-209-5"/>
      </fig>
    </sec>
    <sec>
      <title>Retrieval Evaluation</title>
      <p>In order to assist in determining the effectiveness of the three tools in identifying CRISPR elements, three evaluation measures were used: quality, precision and recall.</p>
    </sec>
    <sec>
      <title>Quality</title>
      <p>Detected CRISPRs are sometimes inconsistent with their actual form in a sequence. This generally results because DNA repeats are not always exact, and consequently are often difficult to correctly identify. Three common types of inconsistencies were identified in this study. <bold>Type I </bold>inconsistencies occur when a tool reports a CRISPR that is incomplete (that is, the CRISPR does not contain all of the repetitive sequences). <bold>Type II </bold>inconsistencies occur when repeats within a CRISPR do not begin and/or end at the correct position. For example, A CRISPR that actually begins with the sequence GTTTAC may be reported as beginning with TTTAC. In this case, it can be seen that the reporting tool is off by one position. <bold>Type III </bold>inconsistencies occur when a CRISPR is split. For example, a single CRISPR containing 10 repeats may be reported as two CRISPRS, each containing 5 repeats.</p>
      <p>Let quality represent the likelihood that a CRISPR reported by a search tool does not contain an inconsistency of Type I, Type II or Type III. Based on this definition, there is no distinction between a CRISPR with one inconsistency and a CRISPR with three inconsistencies. Given the set of CRISPRs resulting from a search, let <italic>a </italic>be the total number of CRISPRs reported and <italic>b </italic>be the total number of CRISPRs containing at least one inconsistency. Assuming <italic>a </italic>&gt; 0, quality (<italic>q</italic>) for a search tool can be computed as follows.</p>
      <p>
        <disp-formula>
          <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M1" name="1471-2105-8-209-i1" overflow="scroll">
            <mml:semantics definitionURL="" encoding="">
              <mml:mrow>
                <mml:mi>q</mml:mi>
                <mml:mo>=</mml:mo>
                <mml:mn>1</mml:mn>
                <mml:mo>−</mml:mo>
                <mml:mfrac>
                  <mml:mi>b</mml:mi>
                  <mml:mi>a</mml:mi>
                </mml:mfrac>
              </mml:mrow>
              <mml:annotation encoding="MathType-MTEF">
 MathType@MTEF@5@5@+=feaafiart1ev1aaatCvAUfKttLearuWrP9MDH5MBPbIqV92AaeXatLxBI9gBamXvP5wqSXMqHnxAJn0BKvguHDwzZbqegyvzYrwyUfgarqqtubsr4rNCHbGeaGqiA8vkIkVAFgIELiFeLkFeLk=iY=Hhbbf9v8qqaqFr0xc9pk0xbba9q8WqFfeaY=biLkVcLq=JHqVepeea0=as0db9vqpepesP0xe9Fve9Fve9GapdbaqaaeGacaGaaiaabeqaamqadiabaaGcbaGaemyCaeNaeyypa0JaeGymaeJaeyOeI0YaaSaaaeaacqWGIbGyaeaacqWGHbqyaaaaaa@43E1@</mml:annotation>
            </mml:semantics>
          </mml:math>
        </disp-formula>
      </p>
    </sec>
    <sec>
      <title>Precision and Recall</title>
      <p>Quality alone is insufficient for measuring performance, as it does not consider the cost of failing to retrieve relevant CRISPRs or the cost of mistakenly retrieving instances that are not CRISPRs. For evaluating inconsistencies of these types, precision and recall are used.</p>
      <p>Precision and recall are measures commonly used in the field of information retrieval (IR) when evaluating search algorithms. Their definitions are based on true positives, false positives and false negatives. The descriptions given here are expressed in terms of the tools evaluated in this study.</p>
      <p>True positive (TP): the number of instances retrieved that were CRISPRs, False positive (FP): the number of instances retrieved that were not CRISPRs, False negative (FN): the number of instances not retrieved that were CRISPRs.</p>
      <p>Determining FN can be problematic because it requires the total number of CRISPRs in the dataset to be known. As is often done in IR, in this study FN is estimated using the composite result sets from all of the available searches tools.</p>
      <p>Using the definitions above, precision (<italic>p</italic>) and recall (<italic>r</italic>) can be computed as follows.</p>
      <p>
        <disp-formula>
          <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M2" name="1471-2105-8-209-i2" overflow="scroll">
            <mml:semantics definitionURL="" encoding="">
              <mml:mrow>
                <mml:mtable>
                  <mml:mtr>
                    <mml:mtd>
                      <mml:mrow>
                        <mml:mi>p</mml:mi>
                        <mml:mo>=</mml:mo>
                        <mml:mfrac>
                          <mml:mrow>
                            <mml:mi>T</mml:mi>
                            <mml:mi>P</mml:mi>
                          </mml:mrow>
                          <mml:mrow>
                            <mml:mi>T</mml:mi>
                            <mml:mi>P</mml:mi>
                            <mml:mo>+</mml:mo>
                            <mml:mi>F</mml:mi>
                            <mml:mi>P</mml:mi>
                          </mml:mrow>
                        </mml:mfrac>
                      </mml:mrow>
                    </mml:mtd>
                    <mml:mtd>
                      <mml:mrow>
                        <mml:mi>r</mml:mi>
                        <mml:mo>=</mml:mo>
                        <mml:mfrac>
                          <mml:mrow>
                            <mml:mi>T</mml:mi>
                            <mml:mi>P</mml:mi>
                          </mml:mrow>
                          <mml:mrow>
                            <mml:mi>T</mml:mi>
                            <mml:mi>P</mml:mi>
                            <mml:mo>+</mml:mo>
                            <mml:mi>F</mml:mi>
                            <mml:mi>N</mml:mi>
                          </mml:mrow>
                        </mml:mfrac>
                      </mml:mrow>
                    </mml:mtd>
                  </mml:mtr>
                </mml:mtable>
              </mml:mrow>
              <mml:annotation encoding="MathType-MTEF">
 MathType@MTEF@5@5@+=feaafiart1ev1aaatCvAUfKttLearuWrP9MDH5MBPbIqV92AaeXatLxBI9gBaebbnrfifHhDYfgasaacH8akY=wiFfYdH8Gipec8Eeeu0xXdbba9frFj0=OqFfea0dXdd9vqai=hGuQ8kuc9pgc9s8qqaq=dirpe0xb9q8qiLsFr0=vr0=vr0dc8meaabaqaciaacaGaaeqabaqabeGadaaakeaafaqabeqacaaabaGaemiCaaNaeyypa0ZaaSaaaeaacqWGubavcqWGqbauaeaacqWGubavcqWGqbaucqGHRaWkcqWGgbGrcqWGqbauaaaabaGaemOCaiNaeyypa0ZaaSaaaeaacqWGubavcqWGqbauaeaacqWGubavcqWGqbaucqGHRaWkcqWGgbGrcqWGobGtaaaaaaaa@415F@</mml:annotation>
            </mml:semantics>
          </mml:math>
        </disp-formula>
      </p>
      <p>Precision is the ratio of the number of instances correctly identified to all the instances retrieved. Given an instance from the result set, it represents the likelihood of that instance being a CRISPR. Thus, precision can be used to answer the question, "Did the retrieval system identify a lot of junk (or instances that were not CRISPRs)?"</p>
      <p>Recall is the ratio of the number of instances correctly identified to the total number of instances that are CRISPRs (whether retrieved or missed). Thus, recall can be used to answer the question, "Were all of the CRISPRs retrieved?"</p>
      <p>In [<xref ref-type="bibr" rid="B14">14</xref>], Godde and Bickerton documented CRISPRs in 101 species with the use of Patscan. From that set, a random sample of size 27 was selected for comparison with results from CRT and Pilercr (using default parameter settings). Between Patscan, CRT and Pilercr, a total of 83 distinct CRISPRs were identified. Using the collective information, quality, precision and recall were computed for each tool. The results are presented in Table <xref ref-type="table" rid="T1">1</xref> under the heading CRISPRs with Cas genes. Note that precision is not applicable for Patscan, because false positives are removed during manual post-processing. Also, the results for CRT are based on a search window length of 8. A search window length of 6 would produce similar precision/recall results, but would have a slightly lower quality score, because the likelihood of Type III inaccuracies is slightly increased.</p>
      <table-wrap position="float" id="T1">
        <label>Table 1</label>
        <caption>
          <p>Performance evaluation measures for the examined tools.</p>
        </caption>
        <table frame="hsides" rules="groups">
          <thead>
            <tr>
              <td/>
              <td align="center" colspan="3">CRISPRs with Cas genes</td>
              <td align="center" colspan="3">CRISPRs with/without Cas genes</td>
            </tr>
            <tr>
              <td/>
              <td colspan="6">
                <hr/>
              </td>
            </tr>
            <tr>
              <td/>
              <td align="left">Quality</td>
              <td align="left">Precision</td>
              <td align="left">Recall</td>
              <td align="left">Quality</td>
              <td align="left">Precision</td>
              <td align="left">Recall</td>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">CRT</td>
              <td align="left">.95</td>
              <td align="left">.99</td>
              <td align="left">.99</td>
              <td align="left">.90</td>
              <td align="left">.89</td>
              <td align="left">1</td>
            </tr>
            <tr>
              <td align="left">Pilercr</td>
              <td align="left">.77</td>
              <td align="left">1</td>
              <td align="left">.95</td>
              <td align="left">.75</td>
              <td align="left">1</td>
              <td align="left">.86</td>
            </tr>
            <tr>
              <td align="left">Patscan</td>
              <td align="left">.74</td>
              <td align="left">n/a</td>
              <td align="left">.89</td>
              <td align="left">--</td>
              <td align="left">--</td>
              <td align="left">--</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <p>A comparison of the three search tools, based on measures quality, precision and recall. The higher scores for CRT and Pilercr show that automatic detection of CRISPRs can be very reliable, even more so than with the use manual post-processing as is done with Patscan. The results in the left half of the table are for CRISPRs containing Cas genes. Because the authors suspect that CRISPRs with Cas genes have fewer mutations, and are thus easier to detect, a second experiment was performed using randomly selected finished genomes. The results of this second experiment are shown in the right half of the table. As expected, slightly lower scores resulted, and they should better reflect the effectiveness of the tools.</p>
        </table-wrap-foot>
      </table-wrap>
      <p>The high scores for CRT and Pilercr show that automatic detection of CRISPRs can be very reliable, even more so than with the use of manual post-processing as is done with Patscan. However, it is not clear whether the lower scores for Patscan were mostly from the human involvement in the detection process or from the Patscan algorithm.</p>
      <p>The quality score was highest for CRT. The lower score for Patscan was due entirely to Type I inconsistencies. The categories of inconsistencies for Pilercr were evenly spread, with Type I and Type II inconsistencies usually missing by only small amounts. Precision was highest with Pilercr, while CRT had the best recall score. In this application of precision/recall, recall is more significant as it gives an indication of the number of CRISPRs that were missed by a search tool. Although precision is important, a more sensitive tool that detects most CRISPRs but also reports a few repetitive sequences that are not really CRISPRs is more desirable than a less sensitive tool that misses several CRISPRs but reports very few false positives.</p>
      <p>As mentioned above, in order to include Patscan in retrieval evaluations, results were used from Godde and Bickerton. However, they reported CRISPRs only for species that had CRISPR-associated (Cas) genes [<xref ref-type="bibr" rid="B10">10</xref>]. The authors of this study suspect that CRISPRs with Cas genes may have fewer mutations, thus they are easier for search tools to detect. As a result, the tools have higher evaluation scores. For this reason, a second experiment was undertaken using 80 randomly selected finished genomes from the IMG version 1.5 database. Using CRT and Pilercr, a total of 51 distinct CRISPR elements were identified within the 80 genomes. The evaluation scores are shown in Table <xref ref-type="table" rid="T1">1</xref> under the heading CRISPRs with/without Cas genes. These results should be more reflective of the performance of the tools for a typical search. Almost all measures show a reduction in performance. The most noticeable difference is a decrease in precision for CRT and a decrease in recall for Pilercr.</p>
    </sec>
  </sec>
  <sec>
    <title>Discussion</title>
    <p>The importance of identifying repetitive sequences is clear; however, the considerable size of many genomes makes fast and efficient repeat detection very challenging. Consequently, many detection techniques convert sequences to an alternative representation in an attempt to make analysis more efficient. A frequently used representation is the suffix tree [<xref ref-type="bibr" rid="B22">22</xref>]. Here, a DNA sequence is converted into a tree structure containing indices to all suffixes in the original sequence. By traversing the tree, an algorithm is able to find all occurrences of any pattern in time proportional to the size of the pattern. Because of the impressive speed of suffix trees, they have been widely used in DNA repeat detection [<xref ref-type="bibr" rid="B23">23</xref>-<xref ref-type="bibr" rid="B26">26</xref>]. The increased speed, however, comes at a cost. First, even before the search for repeats can begin, the suffix tree must be constructed from the sequence data. Second, after it is constructed, the tree can consume large amounts of memory.</p>
    <p>Another technique frequently used for detecting repeats involves computing alignment matrices from DNA sequences [<xref ref-type="bibr" rid="B27">27</xref>,<xref ref-type="bibr" rid="B28">28</xref>]. Once implemented, the matrix can be used to find repeated regions in the sequence using one of several algorithms [<xref ref-type="bibr" rid="B22">22</xref>,<xref ref-type="bibr" rid="B29">29</xref>-<xref ref-type="bibr" rid="B31">31</xref>]. These algorithms, however, can be problematic because of extended processing times.</p>
    <p>Unlike most repeat detection techniques, the algorithm presented in this paper does not rely on the use of the suffix tree or alignment matrix as a central data structure. No major conversion or preprocessing of the input is required. Instead, repeats are discovered directly from the DNA sequence using a simple left-to-right skip search technique with localized iterative extensions of identified repeat arrays in order to find exact boundaries. As a result, CRT is very efficient in terms of memory usage, at O(<italic>n</italic>), and O(<italic>nm</italic>/<italic>l</italic>) in time. Thus, a standard desktop machine is sufficient for processing large prokaryotic genomes, usually in a matter of seconds.</p>
    <p>Future research plans are to modify the presented algorithm so that it is also able to identify contiguous repeats. Because of the nature of the CRT algorithm, the tool would not be practical for detecting very short patterns of sizes 2 – 4 nucleotides, for example. CRT is fastest when identifying longer repeats, and when there is little variation between the sizes of the smallest and largest repeats to be detected. Also, the tool is fast when processing genomes with large numbers of repeats; so, CRT may be useful for detecting contiguous repeats in eukaryotes, which tend to have more repetitive sequences than prokaryotic genomics.</p>
  </sec>
  <sec>
    <title>Conclusion</title>
    <p>In this paper a new tool was introduced for the automatic detection of CRISPR elements. This tool, CRT, was shown to be a significant improvement over the current technique for CRISPR identification using Patscan. CRT's approach detects repeats directly from a DNA sequence. This leads to a program that is easy to describe and understand, yet it is very fast and memory efficient. In terms of retrieval performance, CRT was shown to be very reliable in detecting CRISPRs, based on measures quality, precision and recall. For performance measures tested, CRT outperformed Patscan in all cases. Additionally, when compared to a recently developed CRISPR detection program, Pilercr, CRT showed improved performance under some important conditions. However, using CRT and Pilercr for detecting CRISPRs is recommended, as both are fast and have complementary strengths for precision and recall.</p>
  </sec>
  <sec>
    <title>Availability and requirements</title>
    <p>Project name: CRISPR Recognition Tool (CRT)</p>
    <p>Project home page: <ext-link ext-link-type="uri" xlink:href="http://www.room220.com/crt"/></p>
    <p>Operating system(s): Platform independent</p>
    <p>Programming language: Java</p>
  </sec>
  <sec>
    <title>Authors' contributions</title>
    <p>CB implemented CRT and wrote the manuscript. NCK and PH guided the research and revised the manuscript. FS, TLR, ML and KDB participated in background research, data collection and tool comparison.</p>
  </sec>
</body>
<back>
  <ack>
    <sec>
      <title>Acknowledgements</title>
      <p>This work was performed under the auspices of the US Department of Energy's Office of Science, Biological and Environmental Research Program, and by the University of California, Lawrence Livermore National Laboratory under Contract No. W-7405-Eng-48, Lawrence Berkeley National Laboratory under contract No. DE-AC02-05CH11231 and Los Alamos National Laboratory under contract No. W-7405-ENG-36. Also, Lawrence Berkeley National Lab's CSEE and Jackson State University's LSMAMP programs are kindly acknowledged for their support.</p>
    </sec>
  </ack>
  <ref-list>
    <ref id="B1">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ussery</surname>
            <given-names>DW</given-names>
          </name>
          <name>
            <surname>Binnewies</surname>
            <given-names>TT</given-names>
          </name>
          <name>
            <surname>Gouveia-Oliveira</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Jarmer</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Hallin</surname>
            <given-names>PF</given-names>
          </name>
        </person-group>
        <article-title>Genome Update: DNA repeats in bacterial genomes</article-title>
        <source>Microbiology</source>
        <year>2004</year>
        <volume>150</volume>
        <fpage>3519</fpage>
        <lpage>3521</lpage>
        <pub-id pub-id-type="pmid">15528640</pub-id>
        <pub-id pub-id-type="doi">10.1099/mic.0.27628-0</pub-id>
      </citation>
    </ref>
    <ref id="B2">
      <citation citation-type="other">
        <person-group person-group-type="author">
          <name>
            <surname>Hofnung</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Shapiro</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <source>Research in Microbiology (special November-December double issue on bacterial repeats)</source>
        <year>1999</year>
        <fpage>150</fpage>
      </citation>
    </ref>
    <ref id="B3">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Achaz</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Coissac</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Netter</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Rocha</surname>
            <given-names>EP</given-names>
          </name>
        </person-group>
        <article-title>Associations between inverted repeats and the structural evolution of bacterial genomes</article-title>
        <source>Genetics</source>
        <year>2003</year>
        <volume>164</volume>
        <fpage>1279</fpage>
        <lpage>1289</lpage>
        <pub-id pub-id-type="pmid">12930739</pub-id>
      </citation>
    </ref>
    <ref id="B4">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rocha</surname>
            <given-names>EPC</given-names>
          </name>
          <name>
            <surname>Danchin</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Viari</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Functional and evolutionary roles of long repeats in prokaryotes</article-title>
        <source>Research in Microbiology [Res Microbiol]</source>
        <year>1999</year>
        <volume>150</volume>
        <fpage>725</fpage>
        <lpage>733</lpage>
      </citation>
    </ref>
    <ref id="B5">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Shapiro</surname>
            <given-names>JA</given-names>
          </name>
          <name>
            <surname>von Sternberg</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Why repetitive DNA is essential to genome function</article-title>
        <source>Biological Review</source>
        <year>2005</year>
        <volume>80</volume>
        <fpage>227</fpage>
        <lpage>250</lpage>
        <pub-id pub-id-type="doi">10.1017/S1464793104006517</pub-id>
      </citation>
    </ref>
    <ref id="B6">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>van Belkum</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Short sequence repeats in microbial pathogenesis and evolution</article-title>
        <source>Cell Mol Life Sci</source>
        <volume>56</volume>
        <fpage>729</fpage>
        <lpage>34</lpage>
        <comment>1999, Nov 30;</comment>
        <pub-id pub-id-type="pmid">11212332</pub-id>
      </citation>
    </ref>
    <ref id="B7">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>van Belkum</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Scherer</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>van Alphen</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Verbrugh</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Short-sequence DNA repeats in prokaryotic genomes</article-title>
        <source>Microbiology and Molecular Biology Reviews</source>
        <year>1998</year>
        <volume>62</volume>
        <fpage>275</fpage>
        <lpage>293</lpage>
        <pub-id pub-id-type="pmid">9618442</pub-id>
      </citation>
    </ref>
    <ref id="B8">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mojica</surname>
            <given-names>FJ</given-names>
          </name>
          <name>
            <surname>Diez-Villasenor</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Soria</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Juez</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>Biological significance of a family of regularly spaced repeats in the genomes of Archaea, Bacteria and mitochondria</article-title>
        <source>Mol Microbiol</source>
        <year>2000</year>
        <volume>36</volume>
        <fpage>244</fpage>
        <lpage>246</lpage>
        <pub-id pub-id-type="pmid">10760181</pub-id>
        <pub-id pub-id-type="doi">10.1046/j.1365-2958.2000.01838.x</pub-id>
      </citation>
    </ref>
    <ref id="B9">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mojica</surname>
            <given-names>FJ</given-names>
          </name>
          <name>
            <surname>Diez-Villasenor</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Garcia-Martinez</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Soria</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <article-title>Intervening sequences of regularly spaced prokaryotic repeats derive from foreign genetic elements</article-title>
        <source>J Mol Evol</source>
        <year>2005</year>
        <volume>60</volume>
        <fpage>174</fpage>
        <lpage>182</lpage>
        <pub-id pub-id-type="pmid">15791728</pub-id>
        <pub-id pub-id-type="doi">10.1007/s00239-004-0046-3</pub-id>
      </citation>
    </ref>
    <ref id="B10">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jansen</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Embden</surname>
            <given-names>JD</given-names>
          </name>
          <name>
            <surname>Gaastra</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Schouls</surname>
            <given-names>LM</given-names>
          </name>
        </person-group>
        <article-title>Identification of genes that are associated with DNA repeats in prokaryotes</article-title>
        <source>Mol Microbiol</source>
        <year>2002</year>
        <volume>43</volume>
        <fpage>1565</fpage>
        <lpage>1575</lpage>
        <pub-id pub-id-type="pmid">11952905</pub-id>
        <pub-id pub-id-type="doi">10.1046/j.1365-2958.2002.02839.x</pub-id>
      </citation>
    </ref>
    <ref id="B11">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pourcel</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Salvignol</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Vergnaud</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>CRISPR elements in Yersinia pestis acquire new repeats by preferential uptake of bacteriophage DNA, and provide additional tools for evolutionary studies</article-title>
        <source>Microbiology</source>
        <year>2005</year>
        <volume>151</volume>
        <fpage>653</fpage>
        <lpage>663</lpage>
        <pub-id pub-id-type="pmid">15758212</pub-id>
        <pub-id pub-id-type="doi">10.1099/mic.0.27437-0</pub-id>
      </citation>
    </ref>
    <ref id="B12">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Haft</surname>
            <given-names>DH</given-names>
          </name>
          <name>
            <surname>Selengut</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Mongodin</surname>
            <given-names>EF</given-names>
          </name>
          <name>
            <surname>Nelson</surname>
            <given-names>KE</given-names>
          </name>
        </person-group>
        <article-title>A guild of 45 CRISPR-associated (Cas) protein families and multiple CRISPR/Cas subtypes exist in prokaryotic genomes</article-title>
        <source>PLoS Comput Biol</source>
        <year>2005</year>
        <volume>1</volume>
        <fpage>e60</fpage>
        <pub-id pub-id-type="pmid">16292354</pub-id>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.0010060</pub-id>
      </citation>
    </ref>
    <ref id="B13">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bolotin</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Quinquis</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Sorokin</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Ehrlich</surname>
            <given-names>SD</given-names>
          </name>
        </person-group>
        <article-title>Clustered regularly interspaced short palindrome repeats (CRISPRs) have spacers of extrachromosomal origin</article-title>
        <source>Microbiology</source>
        <year>2005</year>
        <volume>151</volume>
        <fpage>2551</fpage>
        <lpage>2561</lpage>
        <pub-id pub-id-type="pmid">16079334</pub-id>
        <pub-id pub-id-type="doi">10.1099/mic.0.28048-0</pub-id>
      </citation>
    </ref>
    <ref id="B14">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Godde</surname>
            <given-names>JS</given-names>
          </name>
          <name>
            <surname>Bickerton</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>The repetitive DNA elements called CRISPRs and their associated genes: evidence of horizontal transfer among prokaryotes</article-title>
        <source>J Mol Evol</source>
        <year>2006</year>
        <volume>62</volume>
        <fpage>718</fpage>
        <lpage>29</lpage>
        <pub-id pub-id-type="pmid">16612537</pub-id>
        <pub-id pub-id-type="doi">10.1007/s00239-005-0223-z</pub-id>
      </citation>
    </ref>
    <ref id="B15">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Makarova</surname>
            <given-names>KS</given-names>
          </name>
          <name>
            <surname>Grishin</surname>
            <given-names>NV</given-names>
          </name>
          <name>
            <surname>Shabalina</surname>
            <given-names>SA</given-names>
          </name>
          <name>
            <surname>Wolf</surname>
            <given-names>YI</given-names>
          </name>
          <name>
            <surname>Koonin</surname>
            <given-names>EV</given-names>
          </name>
        </person-group>
        <article-title>A putative RNA-interference-based immune system in prokaryotes: computational analysis of the predicted enzymatic machinery, functional analogies with eukaryotic RNAi, and hypothetical mechanisms of action</article-title>
        <source>Biol Direct</source>
        <year>2006</year>
        <volume>1</volume>
        <fpage>7</fpage>
        <pub-id pub-id-type="pmid">16545108</pub-id>
        <pub-id pub-id-type="doi">10.1186/1745-6150-1-7</pub-id>
      </citation>
    </ref>
    <ref id="B16">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Barrangou</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Fremaux</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Deveau</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Richards</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Boyaval</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Moineau</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Romero</surname>
            <given-names>DA</given-names>
          </name>
          <name>
            <surname>Horvath</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>CRISPR Provides acquired resistance against viruses in prokaryotes</article-title>
        <source>Science</source>
        <volume>315</volume>
        <fpage>1709</fpage>
        <lpage>1712</lpage>
        <comment>2007, March 23;</comment>
        <pub-id pub-id-type="pmid">17379808</pub-id>
        <pub-id pub-id-type="doi">10.1126/science.1138140</pub-id>
      </citation>
    </ref>
    <ref id="B17">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Edgar</surname>
            <given-names>RC</given-names>
          </name>
        </person-group>
        <article-title>PILER-CR: Fast and accurate identification of CRISPR repeats</article-title>
        <source>BMC Bioinformatics</source>
        <volume>8</volume>
        <fpage>18</fpage>
        <comment>2007 Jan 20;</comment>
        <pub-id pub-id-type="pmid">17239253</pub-id>
        <pub-id pub-id-type="doi">10.1186/1471-2105-8-18</pub-id>
      </citation>
    </ref>
    <ref id="B18">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dsouza</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Larsen</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Overbeek</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Searching for patterns in genomic data</article-title>
        <source>Trends Genet</source>
        <year>1997</year>
        <volume>13</volume>
        <fpage>497</fpage>
        <lpage>8</lpage>
        <pub-id pub-id-type="pmid">9433140</pub-id>
        <pub-id pub-id-type="doi">10.1016/S0168-9525(97)01347-4</pub-id>
      </citation>
    </ref>
    <ref id="B19">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Boyer</surname>
            <given-names>RS</given-names>
          </name>
          <name>
            <surname>Moore</surname>
            <given-names>JS</given-names>
          </name>
        </person-group>
        <article-title>A fast string searching algorithm</article-title>
        <source>Communications of the ACM</source>
        <year>1977</year>
        <volume>20</volume>
        <fpage>762</fpage>
        <lpage>772</lpage>
        <pub-id pub-id-type="doi">10.1145/359842.359859</pub-id>
      </citation>
    </ref>
    <ref id="B20">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Edgar</surname>
            <given-names>RC</given-names>
          </name>
          <name>
            <surname>Myers</surname>
            <given-names>EW</given-names>
          </name>
        </person-group>
        <article-title>PILER: identification and classification of genomic repeats</article-title>
        <source>Bioinformatics</source>
        <volume>21</volume>
        <fpage>i152</fpage>
        <lpage>i158</lpage>
        <comment>2005, Jun 1;</comment>
        <pub-id pub-id-type="pmid">15961452</pub-id>
      </citation>
    </ref>
    <ref id="B21">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Markowitz</surname>
            <given-names>VM</given-names>
          </name>
          <name>
            <surname>Korzeniewski</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Palaniappan</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Szeto</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Werner</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Padki</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Zhao</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Dubchak</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Hugenholtz</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Anderson</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Lykidis</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Mavromatis</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Ivanova</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Kyrpides</surname>
            <given-names>NC</given-names>
          </name>
        </person-group>
        <article-title>The Integrated Microbial Genomes (IMG) system</article-title>
        <source>Nucleic Acids Research</source>
        <year>2006</year>
        <fpage>D344</fpage>
        <lpage>348</lpage>
        <pub-id pub-id-type="pmid">16381883</pub-id>
        <pub-id pub-id-type="doi">10.1093/nar/gkj024</pub-id>
      </citation>
    </ref>
    <ref id="B22">
      <citation citation-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Gusfield</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <source>Algorithms on Strings, Trees and Sequences: Computer Science and Computational Biology</source>
        <year>1997</year>
        <publisher-name>Cambridge University Press</publisher-name>
      </citation>
    </ref>
    <ref id="B23">
      <citation citation-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Sagot</surname>
            <given-names>M.-F</given-names>
          </name>
        </person-group>
        <article-title>Spelling approximate repeated or common motifs using a suffix tree</article-title>
        <source>Proc of the Third Latin American Symposium on Theoretical Informatics, LATIN 98; 1380 of LNCS:</source>
        <publisher-name>Berlin: Springer Verlag</publisher-name>
        <fpage>111</fpage>
        <lpage>127</lpage>
      </citation>
    </ref>
    <ref id="B24">
      <citation citation-type="other">
        <person-group person-group-type="author">
          <name>
            <surname>Brodal</surname>
            <given-names>GS</given-names>
          </name>
          <name>
            <surname>Lyngsø</surname>
            <given-names>RB</given-names>
          </name>
          <name>
            <surname>Pedersen</surname>
            <given-names>CNS</given-names>
          </name>
          <name>
            <surname>Stoye</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Finding maximal pairs with bounded gap</article-title>
        <source>Journal of Discrete Algorithms, Special Issue of Matching Patterns</source>
        <volume>1</volume>
        <fpage>77</fpage>
        <lpage>104</lpage>
      </citation>
    </ref>
    <ref id="B25">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gusfield</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Stoye</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Linear time algorithms for finding and representing all the tandem repeats in a string</article-title>
        <source>Journal of Computer and System Sciences</source>
        <year>2004</year>
        <volume>69</volume>
        <fpage>525</fpage>
        <lpage>546</lpage>
        <pub-id pub-id-type="doi">10.1016/j.jcss.2004.03.004</pub-id>
      </citation>
    </ref>
    <ref id="B26">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kurtz</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Choudhuri</surname>
            <given-names>JV</given-names>
          </name>
          <name>
            <surname>Ohlebusch</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Schleiermacher</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Stoye</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Giegerich</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>REPuter: the manifold applications of repeat analysis on a genomic scale</article-title>
        <source>Nucleic Acids Res</source>
        <year>2001</year>
        <volume>29</volume>
        <fpage>4633</fpage>
        <lpage>42</lpage>
        <pub-id pub-id-type="pmid">11713313</pub-id>
        <pub-id pub-id-type="doi">10.1093/nar/29.22.4633</pub-id>
      </citation>
    </ref>
    <ref id="B27">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Needleman</surname>
            <given-names>SB</given-names>
          </name>
          <name>
            <surname>Wunsch</surname>
            <given-names>CD</given-names>
          </name>
        </person-group>
        <article-title>A general method applicable to the search for similarities in the amino acid sequence of two proteins</article-title>
        <source>Journal of Molecular Biology</source>
        <year>1970</year>
        <volume>48</volume>
        <fpage>443</fpage>
        <lpage>53</lpage>
        <pub-id pub-id-type="pmid">5420325</pub-id>
        <pub-id pub-id-type="doi">10.1016/0022-2836(70)90057-4</pub-id>
      </citation>
    </ref>
    <ref id="B28">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Smith</surname>
            <given-names>TF</given-names>
          </name>
          <name>
            <surname>Waterman</surname>
            <given-names>MS</given-names>
          </name>
        </person-group>
        <article-title>Identification of common molecular subsequences</article-title>
        <source>Journal of Molecular Biology</source>
        <year>1981</year>
        <volume>147</volume>
        <fpage>195</fpage>
        <lpage>197</lpage>
        <pub-id pub-id-type="pmid">7265238</pub-id>
        <pub-id pub-id-type="doi">10.1016/0022-2836(81)90087-5</pub-id>
      </citation>
    </ref>
    <ref id="B29">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Benson</surname>
            <given-names>GA</given-names>
          </name>
        </person-group>
        <article-title>Space-efficient algorithm for finding best scoring non-overlapping alignments</article-title>
        <source>Theoretical Computer Science</source>
        <year>1995</year>
        <volume>145</volume>
        <fpage>357</fpage>
        <lpage>369</lpage>
        <pub-id pub-id-type="doi">10.1016/0304-3975(95)92848-R</pub-id>
      </citation>
    </ref>
    <ref id="B30">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Schmidt</surname>
            <given-names>JP</given-names>
          </name>
        </person-group>
        <article-title>All highest scoring paths in weighted grid graphs and their application to finding all approximate repeats in strings</article-title>
        <source>SIAM J Computing</source>
        <year>1998</year>
        <volume>27</volume>
        <fpage>972</fpage>
        <lpage>992</lpage>
        <pub-id pub-id-type="doi">10.1137/S0097539795288489</pub-id>
      </citation>
    </ref>
    <ref id="B31">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kannan</surname>
            <given-names>SK</given-names>
          </name>
          <name>
            <surname>Myers</surname>
            <given-names>EW</given-names>
          </name>
        </person-group>
        <article-title>An algorithm for locating nonoverlapping regions of maximum alignment score</article-title>
        <source>SIAM J Computing</source>
        <year>1996</year>
        <volume>25</volume>
        <fpage>648</fpage>
        <lpage>662</lpage>
        <pub-id pub-id-type="doi">10.1137/S0097539794262677</pub-id>
      </citation>
    </ref>
  </ref-list>
</back>

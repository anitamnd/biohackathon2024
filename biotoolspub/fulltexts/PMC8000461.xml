<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">PeerJ</journal-id>
    <journal-id journal-id-type="iso-abbrev">PeerJ</journal-id>
    <journal-id journal-id-type="pmc">PeerJ</journal-id>
    <journal-id journal-id-type="publisher-id">PeerJ</journal-id>
    <journal-title-group>
      <journal-title>PeerJ</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2167-8359</issn>
    <publisher>
      <publisher-name>PeerJ Inc.</publisher-name>
      <publisher-loc>San Diego, USA</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">8000461</article-id>
    <article-id pub-id-type="publisher-id">10906</article-id>
    <article-id pub-id-type="doi">10.7717/peerj.10906</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Bioinformatics</subject>
      </subj-group>
      <subj-group subj-group-type="heading">
        <subject>Computational Biology</subject>
      </subj-group>
      <subj-group subj-group-type="heading">
        <subject>Genomics</subject>
      </subj-group>
      <subj-group subj-group-type="heading">
        <subject>Taxonomy</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>LINflow: a computational pipeline that combines an alignment-free with an alignment-based method to accelerate generation of similarity matrices for prokaryotic genomes</article-title>
    </title-group>
    <contrib-group>
      <contrib id="author-1" contrib-type="author" equal-contrib="yes">
        <name>
          <surname>Tian</surname>
          <given-names>Long</given-names>
        </name>
        <xref ref-type="aff" rid="aff-1">1</xref>
      </contrib>
      <contrib id="author-2" contrib-type="author" equal-contrib="yes">
        <name>
          <surname>Mazloom</surname>
          <given-names>Reza</given-names>
        </name>
        <xref ref-type="aff" rid="aff-2">2</xref>
      </contrib>
      <contrib id="author-3" contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">http://orcid.org/0000-0003-1608-431X</contrib-id>
        <name>
          <surname>Heath</surname>
          <given-names>Lenwood S.</given-names>
        </name>
        <xref ref-type="aff" rid="aff-2">2</xref>
      </contrib>
      <contrib id="author-4" contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">http://orcid.org/0000-0003-4612-225X</contrib-id>
        <name>
          <surname>Vinatzer</surname>
          <given-names>Boris A.</given-names>
        </name>
        <xref ref-type="aff" rid="aff-1">1</xref>
        <email>vinatzer@vt.edu</email>
      </contrib>
      <aff id="aff-1"><label>1</label><institution>School of Plant and Environmental Sciences, Virginia Tech</institution>, <addr-line>Blacksburg, VA</addr-line>, <country>USA</country></aff>
      <aff id="aff-2"><label>2</label><institution>Department of Computer Science, Virginia Tech</institution>, <addr-line>Blacksburg, VA</addr-line>, <country>USA</country></aff>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Nakai</surname>
          <given-names>Kenta</given-names>
        </name>
      </contrib>
    </contrib-group>
    <pub-date pub-type="epub" date-type="pub" iso-8601-date="2021-03-24">
      <day>24</day>
      <month>3</month>
      <year iso-8601-date="2021">2021</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2021</year>
    </pub-date>
    <volume>9</volume>
    <elocation-id>e10906</elocation-id>
    <history>
      <date date-type="received" iso-8601-date="2020-07-24">
        <day>24</day>
        <month>7</month>
        <year iso-8601-date="2020">2020</year>
      </date>
      <date date-type="accepted" iso-8601-date="2021-01-14">
        <day>14</day>
        <month>1</month>
        <year iso-8601-date="2021">2021</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© 2021 Tian et al.</copyright-statement>
      <copyright-year>2021</copyright-year>
      <copyright-holder>Tian et al.</copyright-holder>
      <license xlink:href="https://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an open access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use, distribution, reproduction and adaptation in any medium and for any purpose provided that it is properly attributed. For attribution, the original author(s), title, publication source (PeerJ) and either DOI or URL of the article must be cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="https://peerj.com/articles/10906"/>
    <abstract>
      <sec>
        <title>Background</title>
        <p>Computing genomic similarity between strains is a prerequisite for genome-based prokaryotic classification and identification. Genomic similarity was first computed as Average Nucleotide Identity (ANI) values based on the alignment of genomic fragments. Since this is computationally expensive, faster and computationally cheaper alignment-free methods have been developed to estimate ANI. However, these methods do not reach the level of accuracy of alignment-based methods.</p>
      </sec>
      <sec>
        <title>Methods</title>
        <p>Here we introduce LINflow, a computational pipeline that infers pairwise genomic similarity in a set of genomes. LINflow takes advantage of the speed of the alignment-free sourmash tool to identify the genome in a dataset that is most similar to a query genome and the precision of the alignment-based pyani software to precisely compute ANI between the query genome and the most similar genome identified by sourmash. This is repeated for each new genome that is added to a dataset. The sequentially computed ANI values are stored as Life Identification Numbers (LINs), which are then used to infer all other pairwise ANI values in the set. We tested LINflow on four sets, 484 genomes in total, and compared the needed time and the generated similarity matrices with other tools.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>LINflow is up to 150 times faster than pyani and pairwise ANI values generated by LINflow are highly correlated with those computed by pyani. However, because LINflow infers most pairwise ANI values instead of computing them directly, ANI values occasionally depart from the ANI values computed by pyani. In conclusion, LINflow is a fast and memory-efficient pipeline to infer similarity among a large set of prokaryotic genomes. Its ability to quickly add new genome sequences to an already computed similarity matrix makes LINflow particularly useful for projects when new genome sequences need to be regularly added to an existing dataset.</p>
      </sec>
    </abstract>
    <kwd-group kwd-group-type="author">
      <kwd>Prokaryotes</kwd>
      <kwd>Genome-based taxonomy</kwd>
      <kwd>Average nucleotide identity</kwd>
      <kwd>Genomic similarity</kwd>
      <kwd>Comparative genomics</kwd>
      <kwd>Phylogenomics</kwd>
    </kwd-group>
    <funding-group>
      <award-group id="fund-1">
        <funding-source>National Science Foundation</funding-source>
        <award-id>IOS-1354215</award-id>
      </award-group>
      <award-group id="fund-2">
        <funding-source>College of Agriculture and Life Sciences at Virginia Polytechnic Institute and State University</funding-source>
      </award-group>
      <award-group id="fund-3">
        <funding-source>Virginia Agricultural Experiment Station and the Hatch Program of the National Institute of Food and Agriculture, US Department of Agriculture</funding-source>
      </award-group>
      <funding-statement>This study was supported by the National Science Foundation (IOS-1354215) and the College of Agriculture and Life Sciences at Virginia Polytechnic Institute and State University. Funding to Boris A. Vinatzer was also provided in part by the Virginia Agricultural Experiment Station and the Hatch Program of the National Institute of Food and Agriculture, US Department of Agriculture. There was no additional external funding received for this study. The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement>
    </funding-group>
  </article-meta>
</front>
<body>
  <sec sec-type="intro">
    <title>Introduction</title>
    <p>The number of prokaryotic genome assemblies available at the National Center for Biotechnology Institute (NCBI) is growing rapidly and has reached 615,000 in 2020. It can be anticipated that many more genome assemblies will be published in the near future because of continued improvements in next-generation DNA sequencing technologies concerning throughput and sequence quality and a concomitant drop in sequencing cost. The ever-growing collection of prokaryotic genomes provides the opportunity to explore evolutionary relationships among species, genomic boundaries of species and the genetic diversity within species.</p>
    <p>DNA–DNA hybridization (DDH) was the first method that incorporated genome content in prokaryotic classification and became the gold standard in the 1970s (<xref rid="ref-1" ref-type="bibr">Brenner, 1973</xref>). Two strains that have a reciprocal DDH value of over 70% are considered to belong to the same species (<xref rid="ref-1" ref-type="bibr">Brenner, 1973</xref>). However, the low resolution, laborious experimental procedures, and limited portability of results present serious limitations (<xref rid="ref-19" ref-type="bibr">Stackebrandt &amp; Goebel, 1994</xref>). After the advent of next-generation sequencing, DDH has largely been replaced by Average Nucleotide Identity (ANI). ANI is a measure of similarity between two genomes based on the comparison of whole genome sequences (<xref rid="ref-9" ref-type="bibr">Konstantinidis &amp; Tiedje, 2005a</xref>). In its original implementation, one genome is used as a query genome and is cut into consecutive 1,020 nt-long fragments. Each fragment is then aligned to the second genome, the subject genome, using BLAST (<xref rid="ref-9" ref-type="bibr">Konstantinidis &amp; Tiedje, 2005a</xref>). Alignments that result in over 30% coverage and 70% identity are retained and ANI is computed as the average identity of these alignments. An ANI between 95% and 96% has been found to correspond to 70% DDH (<xref rid="ref-5" ref-type="bibr">Goris et al., 2007</xref>). ANI even provides the resolution necessary to separate strains into different genome similarity groups within species (<xref rid="ref-17" ref-type="bibr">Rodriguez-R et al., 2018</xref>; <xref rid="ref-22" ref-type="bibr">Vinatzer et al., 2016</xref>).</p>
    <p>While computing ANI between a single pair of genome sequences using the alignment-based BLAST algorithm is reasonably efficient, computing all pairwise ANI values for thousands of genomes (thus requiring up to millions of pairwise comparisons) is slow. Therefore, various methods have been developed to infer ANI based on alignment-free algorithms. In 2015, Ondov and colleagues published the first implementation of MinHash (<xref rid="ref-2" ref-type="bibr">Broder, 1997</xref>) for prokaryotic genome comparisons, Mash (<xref rid="ref-14" ref-type="bibr">Ondov et al., 2016</xref>). Mash and similar tools, such as sourmash (<xref rid="ref-3" ref-type="bibr">Brown &amp; Irber, 2016</xref>; <xref rid="ref-15" ref-type="bibr">Pierce et al., 2019</xref>), produce a reduced representation of a genome as a sketch (also referred to as a signature). This is done by determining the presence of all k-mers in a genome sequence and using a hash function to translate these k-mers into hashes, of which a subset is used as the sketch. Mash and sourmash then compare genomes by calculating the Jaccard similarity between their sketches (<xref rid="ref-14" ref-type="bibr">Ondov et al., 2016</xref>). This results in an estimate of the Jaccard similarity between the entire k-mer sets of the two genomes. Not only was it possible with this approach to process and calculate the pairwise similarity of 54,118 microbial genomes from NCBI RefSeq release 70 in 33 CPU hours, but this approximate Jaccard similarity also correlates with ANI almost linearly for ANI values from approximately 90% to 99%. Therefore, Mash and sourmash can be used to precisely and quickly cluster genomes into species.</p>
    <p>The <italic>k</italic> value, that is, the k-mer length employed when a sketch is made, significantly impacts the computed Jaccard similarity. A smaller <italic>k</italic> value enables the detection of similarity between genomes of distantly related strains but loses resolution when the ANI between genomes is high. On the other hand, longer k-mers provide high resolution when ANI is high but they cannot detect any similarity between genomes of more distantly related strains (<xref rid="ref-3" ref-type="bibr">Brown &amp; Irber, 2016</xref>; <xref rid="ref-15" ref-type="bibr">Pierce et al., 2019</xref>).</p>
    <p>FastANI is another tool to determine how similar genome sequences are to each other (<xref rid="ref-7" ref-type="bibr">Jain et al., 2018b</xref>, <xref rid="ref-8" ref-type="bibr">2018c</xref>). However, instead of building a sketch of a whole-genome sequence, FastANI maintains the conceptual framework of BLAST-based ANI: it breaks the query genome into non-overlapping fragments and only in the next step replaces BLAST with an alignment-free k-mer approach, called MashMAP (<xref rid="ref-6" ref-type="bibr">Jain et al., 2018a</xref>). FastANI is 50–4,000 times faster than BLAST-based ANI, while inferring ANI accurately for ANI values as low as 80% (<xref rid="ref-7" ref-type="bibr">Jain et al., 2018b</xref>, <xref rid="ref-8" ref-type="bibr">2018c</xref>).</p>
    <p>The Life Identification Number (LIN) system is a genome similarity-based system to classify individual organisms based on reciprocal ANI (<xref rid="ref-12" ref-type="bibr">Marakeby et al., 2014</xref>; <xref rid="ref-21" ref-type="bibr">Vinatzer, Tian &amp; Heath, 2017</xref>; <xref rid="ref-22" ref-type="bibr">Vinatzer et al., 2016</xref>; <xref rid="ref-23" ref-type="bibr">Weisberg et al., 2015</xref>). A LIN consists of a series of positions, where each position indicates an ANI threshold, from low to high, starting from the leftmost position. The LIN of a genome is assigned based on the ANI to its most similar genome whose LIN has been already assigned. Therefore, the more similar two genomes are to each other, the longer their LINs are identical starting from the leftmost position. A group of strains sharing the same leading part of LINs is called a LINgroup, denoted by the shared part of their LINs. It has been shown that LINgroups can be used to circumscribe groups of prokaryotes from the genus level to the intraspecies level, almost reaching outbreak resolution (<xref rid="ref-22" ref-type="bibr">Vinatzer et al., 2016</xref>).</p>
    <p>To analyze the diversity of a collection of prokaryotic genomes, computing all pairwise comparisons cannot be avoided by any of the above methods and their implementations. However, when dealing with a large number of genomes, pairwise comparisons are computationally expensive. Furthermore, because of the ever-growing number of sequenced genomes and their frequent addition to existing datasets, re-analysis of datasets each time new genomes are added becomes necessary.</p>
    <p>Here we alleviate the bottleneck of pairwise ANI computations by developing LINflow, a pipeline that efficiently constructs highly resolved similarity matrices from 70% to 99.9% ANI by combining the speed of the MinHash-based sourmash tool (<xref rid="ref-3" ref-type="bibr">Brown &amp; Irber, 2016</xref>; <xref rid="ref-15" ref-type="bibr">Pierce et al., 2019</xref>) with the precision of the BLAST-based pyani tool (<xref rid="ref-16" ref-type="bibr">Pritchard, 2014</xref>) and the LIN concept (<xref rid="ref-23" ref-type="bibr">Weisberg et al., 2015</xref>). The obtained results can then provide the basis for genome-based classification of prokaryotes.</p>
  </sec>
  <sec sec-type="methods">
    <title>Methods</title>
    <sec>
      <title>Overview</title>
      <p>In short, to minimize the number of computationally expensive ANI computations when constructing a genomic similarity matrix, LINflow sequentially adds genomes to a dataset, at each step efficiently identifies the genome already in the dataset that is most similar to the newly added genome, precisely calculates the ANI value only between this pair of genomes, and assigns a LIN to the new genome based on this ANI value and the LIN of the most similar genome. The LINs are then used to further accelerate the identification of the most similar genome and, most importantly, to efficiently infer all remaining pairwise ANI values to construct the complete genome similarity matrix. In other words, the main purpose of LINs in LINflow is to reduce the number of necessary ANI computations to one per genome when computing a genome similarity matrix.</p>
      <p>The LINflow flowchart is shown in <xref ref-type="fig" rid="fig-1">Fig. 1</xref>. When a new genome is added to the dataset, LINflow identifies the genome that is most similar to this new genome among the genomes that were previously added using the computationally efficient alignment-free tool sourmash (<xref rid="ref-3" ref-type="bibr">Brown &amp; Irber, 2016</xref>; <xref rid="ref-15" ref-type="bibr">Pierce et al., 2019</xref>). This is accomplished via a two-step procedure, which consists of first identifying the LINgroup to which the new genome belongs and then identifying the most similar genome in this LINgroup. By default, LINflow uses the 95%-level LINgroup in this step, but this can be modified by the user based on the expected genomic similarities in a specific dataset. The precise ANI value between the two genomes is then computed using the more computationally expensive, but precise, pyani tool (<xref rid="ref-16" ref-type="bibr">Pritchard, 2014</xref>). LINflow uses this ANI value to assign a LIN to the new genome based on the LIN of its most similar genome (which LIN was previously assigned based on the ANI value to its most similar genome when that genome itself was previously added to the dataset). The assigned LINs can then be used to infer all-against-all ANI values even though only a single ANI computation is performed for each genome.</p>
      <fig id="fig-1" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.7717/peerj.10906/fig-1</object-id>
        <label>Figure 1</label>
        <caption>
          <title>Workflow of LINflow.</title>
          <p>The flowchart of the LIN assignment algorithm used in LINflow.</p>
        </caption>
        <graphic xlink:href="peerj-09-10906-g001"/>
      </fig>
      <p>To make the results reusable and easily accessible in terms of reading and writing, a relational database managed by MySQL (<uri xlink:href="https://dev.mysql.com/">https://dev.mysql.com/</uri>) is used to store data, with the schema shown in <xref ref-type="fig" rid="fig-2">Fig. 2</xref>. This relational database connects tables with primary and foreign keys, and the connections between tables are represented by arrows. The genome table stores the locations of the genome sequences. The taxonomy table stores the taxonomic information corresponding to each genome in the database. LIN schemes (i.e., the number of LIN positions and the corresponding ANI thresholds), based on which LINs are assigned, are kept in the Scheme table. Besides three default LIN schemes, new schemes can be added by users so that LINs can be assigned according to the users’ needs in resolution. LINs are assigned with the three default schemes and with one user-defined scheme if there is any.</p>
      <fig id="fig-2" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.7717/peerj.10906/fig-2</object-id>
        <label>Figure 2</label>
        <caption>
          <title>Database schema used by LINflow.</title>
          <p>The relational database connects tables with primary and foreign keys. Connections between tables are represented by arrows.</p>
        </caption>
        <graphic xlink:href="peerj-09-10906-g002"/>
      </fig>
      <p>The individual steps of the pipeline are described in detail below.</p>
    </sec>
    <sec>
      <title>Generation and storing of signatures</title>
      <p>LINflow uses sourmash version 2.0 (<xref rid="ref-15" ref-type="bibr">Pierce et al., 2019</xref>) to generate signatures for both <italic>k</italic> = 21 and <italic>k</italic> = 51 with <italic>n</italic> = 2,000 (i.e., each signature consists of 2,000 hashes) for all genomes and stores them as individual files. The first member of each 95%-level LINgroup is chosen as the representative genome and a copy of its signature file is saved in a second directory together with signature files of all other representative genomes.</p>
    </sec>
    <sec>
      <title>Choice of LIN scheme</title>
      <p>LINflow allows the user to choose from four default LIN schemes: (1) a 20-position LIN scheme that ranges from 70% ANI to 99.999% ANI to cope with genus to strain level differentiation and is currently used in LINbase (<xref rid="ref-20" ref-type="bibr">Tian et al., 2020</xref>) (<xref rid="table-1" ref-type="table">Table 1</xref>), (2) a 300-position scheme with positions starting at 70% and increasing by 0.1, and reaching 99.9% (used in this manuscript with the datasets listed below), (3) a 3,000-position scheme starting at 70% and reaching 99.99% at 0.01% intervals (recommended for constructing highly resolved similarity matrices for strains belonging to the same species), (4) a 300,000-position scheme starting at 70% and reaching 99.99999% at 0.00001% intervals. The user can also define any custom LIN scheme with any number of positions using any ANI value of choice (however, it is not advised to use ANI values below 70% since ANI does not reflect evolutionary relationships when ANI falls below 70%).</p>
      <table-wrap id="table-1" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.7717/peerj.10906/table-1</object-id>
        <label>Table 1</label>
        <caption>
          <title>The primary LIN assignment scheme of LINbase used to assign LINs by LINflow in this study.</title>
        </caption>
        <alternatives>
          <graphic xlink:href="peerj-09-10906-g006"/>
          <table frame="hsides" rules="groups" content-type="text">
            <colgroup span="1">
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th rowspan="1" colspan="1">ANI</th>
                <th rowspan="1" colspan="1">70</th>
                <th rowspan="1" colspan="1">75</th>
                <th rowspan="1" colspan="1">80</th>
                <th rowspan="1" colspan="1">85</th>
                <th rowspan="1" colspan="1">90</th>
                <th rowspan="1" colspan="1">95</th>
                <th rowspan="1" colspan="1">96</th>
                <th rowspan="1" colspan="1">97</th>
                <th rowspan="1" colspan="1">98</th>
                <th rowspan="1" colspan="1">98.5</th>
                <th rowspan="1" colspan="1">99</th>
                <th rowspan="1" colspan="1">99.25</th>
                <th rowspan="1" colspan="1">99.5</th>
                <th rowspan="1" colspan="1">99.75</th>
                <th rowspan="1" colspan="1">99.9</th>
                <th rowspan="1" colspan="1">99.925</th>
                <th rowspan="1" colspan="1">99.95</th>
                <th rowspan="1" colspan="1">99.975</th>
                <th rowspan="1" colspan="1">99.99</th>
                <th rowspan="1" colspan="1">99.999</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="1" colspan="1">
                  <bold>Position</bold>
                </td>
                <td rowspan="1" colspan="1">A</td>
                <td rowspan="1" colspan="1">B</td>
                <td rowspan="1" colspan="1">C</td>
                <td rowspan="1" colspan="1">D</td>
                <td rowspan="1" colspan="1">E</td>
                <td rowspan="1" colspan="1">F</td>
                <td rowspan="1" colspan="1">G</td>
                <td rowspan="1" colspan="1">H</td>
                <td rowspan="1" colspan="1">I</td>
                <td rowspan="1" colspan="1">J</td>
                <td rowspan="1" colspan="1">K</td>
                <td rowspan="1" colspan="1">L</td>
                <td rowspan="1" colspan="1">M</td>
                <td rowspan="1" colspan="1">N</td>
                <td rowspan="1" colspan="1">O</td>
                <td rowspan="1" colspan="1">P</td>
                <td rowspan="1" colspan="1">Q</td>
                <td rowspan="1" colspan="1">R</td>
                <td rowspan="1" colspan="1">S</td>
                <td rowspan="1" colspan="1">T</td>
              </tr>
            </tbody>
          </table>
        </alternatives>
      </table-wrap>
    </sec>
    <sec>
      <title>Initiation of LINflow</title>
      <p>LINflow, by default, includes the 20-position LIN scheme as one of the schemes during each run. An arbitrary genome will be selected to assign the first LIN with 0 in each position. Its signature will be generated and saved as the representative of the LINgroup 0<sub>A</sub>0<sub>B</sub>0<sub>C</sub>0<sub>D</sub>0<sub>E</sub>0<sub>F</sub> using the 20-position default scheme both in the directories for representative genomes and this LINgroup.</p>
    </sec>
    <sec>
      <title>LIN assignment</title>
      <p>The new genome’s (<italic>G</italic><sub>Query</sub>) signature <italic>S</italic><sub>Query</sub> will be first queried against the representative genomes of all existing 95%-level LINgroups (or F LINgroups) with <italic>k</italic> = 21, using sourmash. Based on the analysis of more than 6,000 bacterial genomes from different families with <italic>k</italic> = 21, the Jaccard similarity of 0.2475 was found to correspond to 95% ANI (data not shown). If the highest Jaccard similarity <italic>J</italic> to one of the representative genomes <italic>S</italic><sub>Query</sub> is above 0.2475, then the corresponding genome represents the 95%-level LINgroup (<italic>L</italic><sub>95%</sub>), belongs to. If 0.0025 &lt; <italic>J</italic> &lt;= 0.2475, then the corresponding genome is at least 70% similar to <italic>G</italic><sub>Query</sub>, which means they share at least the A position in the default LIN scheme. If <italic>J</italic> &lt;= 0.0025, the corresponding genome is less than 70% similar to <italic>G</italic><sub>Query</sub>.</p>
      <p>If <inline-formula id="ieqn-1"><alternatives><inline-graphic xlink:href="peerj-09-10906-i001.jpg"/><mml:math id="mml-ieqn-1"><mml:mi>J</mml:mi><mml:mspace width="thickmathspace"/><mml:mo>&gt;</mml:mo><mml:mspace width="thickmathspace"/><mml:mn>0.2475</mml:mn></mml:math></alternatives></inline-formula>, <italic>S</italic><sub>Query</sub> will be queried against all members of <italic>L</italic><sub>95%</sub> by sourmash with <italic>k</italic> = 51. The most similar genome <italic>G</italic><sub>Subject</sub> according to Jaccard similarity in <italic>L</italic><sub>95%</sub> is identified as the most similar genome to <italic>G</italic><sub>Query</sub> in the entire database.</p>
      <p>If <inline-formula id="ieqn-2"><alternatives><inline-graphic xlink:href="peerj-09-10906-i002.jpg"/><mml:math id="mml-ieqn-2"><mml:mn>0.0025</mml:mn><mml:mspace width="thickmathspace"/><mml:mo>&lt;</mml:mo><mml:mspace width="thickmathspace"/><mml:mi>J</mml:mi><mml:mspace width="thickmathspace"/><mml:mo>≤</mml:mo><mml:mspace width="thickmathspace"/><mml:mn>0.2475</mml:mn></mml:math></alternatives></inline-formula>, <italic>S</italic><sub>Query</sub> will be queried against all the members of <italic>L</italic><sub>95%</sub> by sourmash with <italic>k</italic> = 21. The most similar genome <italic>G</italic><sub>Subject</sub> according to Jaccard similarity in <italic>L</italic><sub>95%</sub> is identified as the most similar genome to <italic>G</italic><sub>Query</sub> in the entire database.</p>
      <p>For the above cases, ANI between <italic>G</italic><sub>Query</sub>, and <italic>G</italic><sub>Subject</sub>, ANI<sub>Query</sub>, will be calculated with pyani. To assign the LIN to the query genome, <italic>G</italic><sub>Subject</sub>’s LIN, LIN<sub>Subject</sub>, will be used as the reference from A to the last position that the ANI threshold is lower than or equal to ANI<sub>Query</sub>, the first position that ANI threshold is larger than ANI<sub>Query</sub> will be assigned a number that has not been used with the prefix in the database, and the rest of the positions will be filled with zeros. For example, ANI<sub>Query</sub> = 95.4575%, it is over 95% at the F position but lower than 96% at the G position, so it will use LIN<sub>Subject</sub> from A to F as LIN<sub>Query</sub>’s A to F. At LIN<sub>Query</sub>’s G position, a number that has never been used together with LIN<sub>Subject</sub>’s prefix from A to F will be assigned. Each of LIN<sub>Query</sub>’s H to T positions will be assigned 0.</p>
      <p>If <inline-formula id="ieqn-3"><alternatives><inline-graphic xlink:href="peerj-09-10906-i003.jpg"/><mml:math id="mml-ieqn-3"><mml:mi>J</mml:mi><mml:mo>≤</mml:mo><mml:mspace width="thickmathspace"/><mml:mn>0.0025</mml:mn></mml:math></alternatives></inline-formula>, no genome in the current database has over 70% ANI to <italic>G</italic><sub>Query</sub>, so that a new number that has never been used in the A position before will be assigned to LIN<sub>Query</sub>’s A position, and the rest of LIN<sub>Query</sub> will be filled with zeros.</p>
    </sec>
    <sec>
      <title>Update of database and signature file system</title>
      <p><italic>G</italic><sub>Query</sub>, <italic>G</italic><sub>Subject</sub>, ANI<sub>Query</sub> and LIN<sub>Query</sub> will all be written to the database. If LIN<sub>Query</sub> creates a new 95%-level LINgroup, a new directory for this LINgroup will be created and <italic>S</italic><sub>Query</sub> will be saved in this directory as a member and as a representative genome with other representative genomes, otherwise, <italic>S</italic><sub>Query</sub> will be only saved in the existing 95%-level LINgroup it belongs to.</p>
    </sec>
    <sec>
      <title>Datasets</title>
      <p>We compared the performance of LINflow with sourmash, pyani, and FastANI for four datasets of 484 genomes in total. Dataset A includes 248 genome sequences belonging to the genus <italic>Pseudomonas</italic>. Among the 248 genomes, 222 are from 46 named species. The remaining 26 genomes are from yet unnamed and undescribed <italic>Pseudomonas</italic> species. Dataset B consists of 43 <italic>Xanthomonas perforans</italic> genomes. Dataset C includes 140 genomes of the genus <italic>Lysinibacillus</italic>, whereby 96 of them belong to 27 named species. Dataset D includes 53 genomes from the species <italic>Xylella fastidiosa</italic> and two genomes from the species <italic>Xylella taiwanensis</italic>. A separate dataset E with the genome sequence of <italic>Pseudomonas caeni</italic> DSM 24390 was used to assess the computational speed of the above tools when adding a new genome to the already-analyzed dataset A. <xref ref-type="supplementary-material" rid="supp-5">Table S1</xref> lists the genomes included in each dataset and the actual genome sequences can be accessed directly in this repository: <uri xlink:href="https://code.vt.edu/linbaseproject/linflow_datasets">https://code.vt.edu/linbaseproject/linflow_datasets</uri>.</p>
    </sec>
    <sec>
      <title>Comparison of tools</title>
      <p>LINflow was compared with pyani (blast option), sourmash and FastANI in regard to speed, memory usage and accuracy. Parameters used when running these programs are listed in <xref rid="table-2" ref-type="table">Table 2</xref>. Note that for each pair of genomes A and B, pyani computes ANI by calculating both the ANI of A to B and the ANI of B to A. We used the average of the two pairwise ANI values. The calculations were executed on a 2.4 GHz CPU on Cascades, an Advanced Research Computing system at Virginia Tech and the execution time and memory usage were monitored by the job scheduler built in the system.</p>
      <table-wrap id="table-2" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.7717/peerj.10906/table-2</object-id>
        <label>Table 2</label>
        <caption>
          <title>Software, sub-commands and parameters used for pyani, sourmash, FastANI and LINflow.</title>
        </caption>
        <alternatives>
          <graphic xlink:href="peerj-09-10906-g007"/>
          <table frame="hsides" rules="groups" content-type="text">
            <colgroup span="1">
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th rowspan="1" colspan="1">Software</th>
                <th rowspan="1" colspan="1">Version</th>
                <th rowspan="1" colspan="1">Parameters</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="1" colspan="1">Pyani<xref ref-type="fn" rid="table-2fn1"><sup>1</sup></xref></td>
                <td rowspan="1" colspan="1">0.2.9</td>
                <td rowspan="1" colspan="1">-m ANIb -worker 100</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">sourmash</td>
                <td rowspan="1" colspan="1">2.0.0</td>
                <td rowspan="1" colspan="1">-k 21, 51 -n 2000</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">FastANI</td>
                <td rowspan="1" colspan="1">1.2</td>
                <td rowspan="1" colspan="1">-k 16 -t 1</td>
              </tr>
            </tbody>
          </table>
        </alternatives>
        <table-wrap-foot>
          <fn id="table-2fn">
            <p>
              <bold>Note:</bold>
            </p>
          </fn>
          <fn id="table-2fn1" fn-type="other">
            <label>1</label>
            <p>Multiprocessing was enabled.</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
      <p>Hierarchical clustering using the complete linkage method was applied to the similarity matrices of each dataset calculated by the four software suites using custom R scripts. Heatmaps were generated based on the hierarchical clustering results to investigate whether FastANI, LINflow and sourmash are able to classify bacteria into species as accurate as pyani. Rows and columns of the heatmaps were reordered to be in the same order as the heatmap generated by pyani.</p>
      <p>Finally, pairwise Mantel tests (<xref rid="ref-11" ref-type="bibr">Mantel, 1967</xref>) in combination with Pearson correlation coefficients were computed using custom R scripts to determine how well the similarity matrices (ANI for LINflow, FastANI and pyani and Jaccard similarity for sourmash) obtained with the different tools correlated with each other.</p>
    </sec>
  </sec>
  <sec sec-type="results">
    <title>Results</title>
    <sec>
      <title>Computational speed and memory usage</title>
      <p>The CPU time needed to analyze datasets A, B, C and D by each software is shown in <xref rid="table-3" ref-type="table">Table 3</xref>. For sourmash, two separate times are indicated since sourmash runs two separate commands: “sourmash compute”, which computes signatures and “sourmash compare”, which computes the pairwise Jaccard similarity between signatures. Although the FastANI workflow is also split into two phases, the indexing phase and the compute phase, the two phases cannot be executed separately. Therefore, only the total execution time is shown.</p>
      <table-wrap id="table-3" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.7717/peerj.10906/table-3</object-id>
        <label>Table 3</label>
        <caption>
          <title>Runtime of each software and sub-command used to analyze data sets A, B, C and D.</title>
        </caption>
        <alternatives>
          <graphic xlink:href="peerj-09-10906-g008"/>
          <table frame="hsides" rules="groups" content-type="text">
            <colgroup span="1">
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th rowspan="1" colspan="1">Data set</th>
                <th rowspan="1" colspan="1">No. of genomes</th>
                <th rowspan="1" colspan="1">pyani<xref ref-type="fn" rid="table-3fn1"><sup>1</sup></xref></th>
                <th rowspan="1" colspan="1">sourmash compute</th>
                <th rowspan="1" colspan="1">sourmash compare</th>
                <th rowspan="1" colspan="1">FastANI<xref ref-type="fn" rid="table-3fn1"><sup>1</sup></xref></th>
                <th rowspan="1" colspan="1">LINflow</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="1" colspan="1">A</td>
                <td rowspan="1" colspan="1">247</td>
                <td rowspan="1" colspan="1">60,862 min 6 s</td>
                <td rowspan="1" colspan="1">15 min 3 s</td>
                <td rowspan="1" colspan="1">14 s</td>
                <td rowspan="1" colspan="1">401 min 18 s</td>
                <td rowspan="1" colspan="1">829 min 39 s</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">B</td>
                <td rowspan="1" colspan="1">43</td>
                <td rowspan="1" colspan="1">2,107 min 18 s</td>
                <td rowspan="1" colspan="1">2 min 34 s</td>
                <td rowspan="1" colspan="1">2 s</td>
                <td rowspan="1" colspan="1">17 min 49 s</td>
                <td rowspan="1" colspan="1">105 min 50 s</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">C</td>
                <td rowspan="1" colspan="1">140</td>
                <td rowspan="1" colspan="1">7,274 min 18 s</td>
                <td rowspan="1" colspan="1">7 min 43 s</td>
                <td rowspan="1" colspan="1">8 s</td>
                <td rowspan="1" colspan="1">86 min 12 s</td>
                <td rowspan="1" colspan="1">171 min 38 s</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">D</td>
                <td rowspan="1" colspan="1">55</td>
                <td rowspan="1" colspan="1">3,292 min 37 s</td>
                <td rowspan="1" colspan="1">1 min 41 s</td>
                <td rowspan="1" colspan="1">3 s</td>
                <td rowspan="1" colspan="1">13 min 25 s</td>
                <td rowspan="1" colspan="1">22 min 58 s</td>
              </tr>
            </tbody>
          </table>
        </alternatives>
        <table-wrap-foot>
          <fn id="table-3fn">
            <p>
              <bold>Note:</bold>
            </p>
          </fn>
          <fn id="table-3fn1" fn-type="other">
            <label>1</label>
            <p>Total CPU time is listed for pyani and FastANI although multiprocessing was enabled.</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
      <p>Sourmash was the fastest out of the four tools, being 1,000–4,000 times faster than pyani, depending on the dataset. FastANI and LINflow took a similar time to execute compared to pyani, being 84–253 times and 20–150 times faster, respectively.</p>
      <p>The memory usage of LINflow was lower than pyani and lower than FastANI when analyzing datasets A and C, which have relatively larger numbers of genomes compared to datasets B and D (<xref rid="table-4" ref-type="table">Table 4</xref>). Furthermore, the time cost for adding a new genome to an existing dataset by LINflow did not increase as significantly as for pyani and FastANI. This can be seen by comparing the time cost for adding a new genome to dataset A (<xref rid="table-5" ref-type="table">Table 5</xref>) with the average processing time for each genome in dataset A (<xref rid="table-3" ref-type="table">Table 3</xref>).</p>
      <table-wrap id="table-4" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.7717/peerj.10906/table-4</object-id>
        <label>Table 4</label>
        <caption>
          <title>Memory usage (GB) of each software and sub-command used to analyze data sets A, B, C and D.</title>
        </caption>
        <alternatives>
          <graphic xlink:href="peerj-09-10906-g009"/>
          <table frame="hsides" rules="groups" content-type="text">
            <colgroup span="1">
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th rowspan="1" colspan="1">Data set</th>
                <th rowspan="1" colspan="1">pyani</th>
                <th rowspan="1" colspan="1">sourmash compute</th>
                <th rowspan="1" colspan="1">sourmash compare</th>
                <th rowspan="1" colspan="1">FastANI</th>
                <th rowspan="1" colspan="1">LINflow</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="1" colspan="1">A</td>
                <td rowspan="1" colspan="1">5.8</td>
                <td rowspan="1" colspan="1">0.05</td>
                <td rowspan="1" colspan="1">1.4</td>
                <td rowspan="1" colspan="1">4.6</td>
                <td rowspan="1" colspan="1">0.6</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">B</td>
                <td rowspan="1" colspan="1">1.2</td>
                <td rowspan="1" colspan="1">0.04</td>
                <td rowspan="1" colspan="1">0.1</td>
                <td rowspan="1" colspan="1">0.5</td>
                <td rowspan="1" colspan="1">0.3</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">C</td>
                <td rowspan="1" colspan="1">5.7</td>
                <td rowspan="1" colspan="1">0.05</td>
                <td rowspan="1" colspan="1">1.2</td>
                <td rowspan="1" colspan="1">2.2</td>
                <td rowspan="1" colspan="1">0.3</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">D</td>
                <td rowspan="1" colspan="1">1.3</td>
                <td rowspan="1" colspan="1">0.05</td>
                <td rowspan="1" colspan="1">0.1</td>
                <td rowspan="1" colspan="1">0.4</td>
                <td rowspan="1" colspan="1">0.3</td>
              </tr>
            </tbody>
          </table>
        </alternatives>
      </table-wrap>
      <table-wrap id="table-5" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.7717/peerj.10906/table-5</object-id>
        <label>Table 5</label>
        <caption>
          <title>Runtime of each software and sub-command used to add a single new genome to the analyzed data set A.</title>
        </caption>
        <alternatives>
          <graphic xlink:href="peerj-09-10906-g010"/>
          <table frame="hsides" rules="groups" content-type="text">
            <colgroup span="1">
              <col span="1"/>
              <col span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th rowspan="1" colspan="1">Software and sub-command</th>
                <th rowspan="1" colspan="1">CPU time</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="1" colspan="1">pyani</td>
                <td rowspan="1" colspan="1">258 min 23 s</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">sourmash compute</td>
                <td rowspan="1" colspan="1">0 min 4 s</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">sourmash search</td>
                <td rowspan="1" colspan="1">0 min 11 s</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">FastANI</td>
                <td rowspan="1" colspan="1">4 min 4 s</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">LINflow</td>
                <td rowspan="1" colspan="1">3 min 36 s</td>
              </tr>
            </tbody>
          </table>
        </alternatives>
      </table-wrap>
    </sec>
    <sec>
      <title>Accuracy</title>
      <p>Similarity matrices obtained with sourmash, FastANI and LINflow were compared to those obtained with pyani, which we considered the gold standard, since it is exclusively based on BLAST reflecting the original description of ANI (<xref rid="ref-9" ref-type="bibr">Konstantinidis &amp; Tiedje, 2005a</xref>, <xref rid="ref-10" ref-type="bibr">2005b</xref>). For sourmash, we determined its performance separately for <italic>k</italic> = 21 and <italic>k</italic> = 51. For LINflow, we used two of the four default schemes: the 20-position scheme used in LINbase (<xref rid="ref-20" ref-type="bibr">Tian et al., 2020</xref>) (see <xref rid="table-1" ref-type="table">Table 1</xref> for the LIN scheme and <xref ref-type="supplementary-material" rid="supp-5">Table S1</xref> for the result) and the 300-position scheme (with ANI values increasing from 70% at the left-most LIN position to 99.9% at the right-most LIN position with 0.1% intervals between neighboring positions). The LINbase scheme was used to assign LINs to the genomes and classify them as LINgroups. The 300-position scheme was used to determine the ANI similarity matrix. After similarity matrices were computed with all tools, heatmaps were generated to visualize the genomic relatedness among the analyzed genomes.</p>
      <p>Heatmaps derived from the ANI matrices obtained with pyani (<xref ref-type="fig" rid="fig-3">Fig. 3A</xref>), FastANI (<xref ref-type="fig" rid="fig-3">Fig. 3B</xref>) and LINflow (<xref ref-type="fig" rid="fig-3">Fig. 3C</xref>) show the same species level (ANI ≥ 95%) clustering of the 247 <italic>Pseudomonas</italic> genomes of dataset A visible as red blocks along the diagonal. Five major clusters are easily visible. Cluster 1 consists of genomes belonging to <italic>P. aeruginosa</italic>, cluster 2 represents the species <italic>P. chlororaphis</italic>, clusters 3, 4 and 5 constitute the <italic>P. syringae</italic> species complex and related genomes. Note that LINflow not only classified the genomes as species but also distinguished intraspecific groups as LINgroups. The LIN prefixes denote LINgroups and show both intergroup and intragroup relationships.</p>
      <fig id="fig-3" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.7717/peerj.10906/fig-3</object-id>
        <label>Figure 3</label>
        <caption>
          <title>Similarity matrices obtained by LINflow, FastANI, sourmash and pyani.</title>
          <p>Heatmaps based on hierarchical clustering using the complete linkage method using the similarity matrices obtained with pyani (A), FastANI (B), LINflow (C), sourmash <italic>k</italic> = 21 (D) and <italic>k</italic> = 51 (E) for dataset A. Cluster 1 corresponds to <italic>P. aeruginosa</italic>, cluster 2 represents <italic>P. chlororaphis</italic>, clusters 3, 4 and 5 are different phylogroups within the <italic>P. syringae</italic> species complex and related genomes. The same figure showing strain names is included as <xref ref-type="supplementary-material" rid="supp-1">Figs. S1</xref>–<xref ref-type="supplementary-material" rid="supp-1">S5</xref> (corresponding to (A) through (E)). See <xref ref-type="supplementary-material" rid="supp-2">Figs. S6</xref>–<xref ref-type="supplementary-material" rid="supp-2">S10</xref>, <xref ref-type="supplementary-material" rid="supp-3">S11</xref>–<xref ref-type="supplementary-material" rid="supp-3">S15</xref> and <xref ref-type="supplementary-material" rid="supp-4">S16</xref>–<xref ref-type="supplementary-material" rid="supp-4">S20</xref> for heatmaps of datasets B, C and D.</p>
        </caption>
        <graphic xlink:href="peerj-09-10906-g003"/>
      </fig>
      <p>Sourmash was able to perform species-level clustering with <italic>k</italic> values of both 21 (<xref ref-type="fig" rid="fig-3">Fig. 3D</xref>) and 51 (<xref ref-type="fig" rid="fig-3">Fig. 3E</xref>). The obtained results suggest that Jaccard similarity calculated with <italic>k</italic> = 51 only weakly correlates with ANI for low ANI values compared to <italic>k</italic> = 21, for example, clusters 2, 4 and 5. Instead of genomes that are highly similar to each other, for example, genomes in cluster 5, <italic>k</italic> = 51 provides higher resolution than <italic>k</italic> = 21.</p>
      <p>To further evaluate the accuracy of LINflow compared to the other tools, the complete similarity matrices obtained for all four datasets with all tools were compared with each other using the Mantel test (<xref rid="ref-11" ref-type="bibr">Mantel, 1967</xref>) using Pearson’s correlation coefficients. Results are reported in <xref ref-type="fig" rid="fig-4">Fig. 4</xref>. One can easily see how the results obtained with LINflow are highly correlated with those obtained with pyani for datasets A, C and D (Pearson correlation coefficient of 0.99 or 1) but not for dataset B, which has a Pearson correlation coefficient of only 0.78. Since many pairs of genomes in set B have ANI values above 99.8% and differ from each other by less than 0.1%, we computed ANI values for set B also using the 3,000-position and a 300,000-position LIN scheme hypothesizing that the lower correlation was due to rounding of ANI values to the first decimal place when using the 300-position LIN scheme. However, switching to the 3,000-position and 300,000-position LIN scheme only increased the correlation between LINflow and pyani slightly to a Pearson correlation coefficient of 0.82.</p>
      <fig id="fig-4" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.7717/peerj.10906/fig-4</object-id>
        <label>Figure 4</label>
        <caption>
          <title>Comparison of similarity matrices obtained by LINflow, FastANI, sourmash and pyani.</title>
          <p>Heatmaps showing Pearson correlation coefficients based on the Mantel test performed between the similarity matrices obtained with pyani, sourmash, FastANI, and LINflow for datasets A, B, C and D.</p>
        </caption>
        <graphic xlink:href="peerj-09-10906-g004"/>
      </fig>
      <p>When comparing Pearson Correlation coefficients for the FastANI vs. pyani comparison and the sourmash vs. pyani comparison with the LINflow vs. pyani comparison, LINflow shows the same or higher correlation with pyani for all datasets with the exception of dataset B, for which LINflow shows the lowest correlation with pyani.</p>
      <p>Finally, to determine how LINflow and FastANI correlate with pyani from low to high pairwise ANI values, we plotted all pairwise ANI results obtained with LINflow and FastANI against pyani results similar to what was done by <xref rid="ref-8" ref-type="bibr">Jain et al. (2018c)</xref>. <xref ref-type="fig" rid="fig-5">Figure 5</xref> shows how FastANI and LINflow both correlate very well with pyani for ANI values above 85% but deviate from pyani at ANI values from 85% to 70%. While ANI values computed with FastANI are higher than the corresponding pyani ANI values in this range, ANI values inferred by LINflow merge into a relatively small number of ANI values for many different pyani ANI values (see “Discussion” for an explanation of this phenomenon).</p>
      <fig id="fig-5" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.7717/peerj.10906/fig-5</object-id>
        <label>Figure 5</label>
        <caption>
          <title>Correlation between the ANI results obtained with LINflow and FastANI and the ANI results obtained with pyani (using the BLAST option) for datasets A through D.</title>
          <p>(A) Plot showing the ANI values computed by LINflow (in blue) and FastANI (in red) on the <italic>Y</italic> axis for ANI results obtained with pyani (<italic>X</italic> axis) for all pairwise genome comparisons in datasets A through D. Pearson correlation coefficients for FastANI vs. pyani and LINflow vs. pyani results and all other tool comparison results are shown in <xref ref-type="fig" rid="fig-4">Fig. 4</xref>. (B) Plot showing the differences between the ANI values computed by FastANI and LINflow compared to the pyani ANI values for all pairwise ANI values for datasets A though D.</p>
        </caption>
        <graphic xlink:href="peerj-09-10906-g005"/>
      </fig>
    </sec>
  </sec>
  <sec sec-type="discussion">
    <title>Discussion</title>
    <p>Here we developed a new tool, LINflow, to efficiently compute genome similarity matrices for genome-based classification of prokaryotes. We compared the performance of LINflow with that of sourmash, FastANI and pyani when analyzing four sets of genomes and when adding a new genome to an already-analyzed dataset.</p>
    <p>The execution time to compare each new genome to a growing dataset does not increase as significantly for LINflow as for the other tools. This is because, for each genome, the LINflow algorithm involves only a one-time sourmash signature generation, at most two sourmash signature comparisons and a one-time two-way ANI calculation with pyani between the new genome and its most similar genome identified by sourmash. We thus expect that, with larger datasets, LINflow will outperform FastANI in terms of speed and memory usage and that the relative increase in speed compared with pyani will be even more significant.</p>
    <p>The LIN approach had been shown previously to correlate well with core genome phylogenetic trees within the genus <italic>Pseudomonas</italic> (<xref rid="ref-22" ref-type="bibr">Vinatzer et al., 2016</xref>). Previous comparisons of FastANI (<xref rid="ref-8" ref-type="bibr">Jain et al., 2018c</xref>), sourmash (<xref rid="ref-15" ref-type="bibr">Pierce et al., 2019</xref>) and pyani (<xref rid="ref-16" ref-type="bibr">Pritchard, 2014</xref>) focused on accuracy in assigning strains to species around the 95% ANI species threshold. Here we performed a species level comparison and found LINflow to perform similarly well to sourmash, FastANI and pyani (<xref ref-type="fig" rid="fig-3">Fig. 3</xref>). However, we then went on and compared the relative performance of all four tools in creating complete similarity matrices from around 70% ANI to almost 100% ANI. We did this comparison using the Mantel test (<xref rid="ref-11" ref-type="bibr">Mantel, 1967</xref>) and computing Pearson correlation coefficients for all pairwise tool comparisons, similar to what was done by <xref rid="ref-8" ref-type="bibr">Jain et al. (2018c)</xref>, when comparing ANI values obtained by FastANI with ANI values obtained by BLAST. LINflow had the better correlation with pyani compared to sourmash and fastANI except for dataset B, which is composed of highly similar genomes. Even changing the LIN scheme to the 300,000-position LIN scheme did not improve performance of LINflow showing that this was independent of the resolution of the deployed LIN scheme. Moreover, for pairwise ANI values below 85%, we noticed how ANI values computed by LINflow for many different pairs of genomes merged into a few identical ANI values. This is a direct result of the way LINflow infers ANI values based on sequentially assigned LINs. For example, if a hypothetical group of genomes (group 1) contains genomes that are all over 99% similar to each other and all genomes in a second group of genomes (group 2) are all over 99% similar to each other but the first genome in group 1 that was assigned a LIN and the first genome in group 2 that was assigned a LIN have a pairwise ANI value of only 70.75%, then all pairwise ANI values between group 1 and group 2 genomes will be inferred to be 70.75% by LINflow. Because LINs are assigned sequentially, this is an inherent limitation of LINflow that users need to weigh against the time savings LINflow provides compared to pyani or FastANI.</p>
    <p>The comparison between tools also revealed that FastANI’s performance is affected by genomic diversity of the analyzed datasets. In fact, FastANI’s correlation with pyani was relatively low for datasets A and C, where for each dataset, the genomes are from different species; FastANI’s correlation with pyani was high for datasets B and D, where most of the genomes for each dataset are from the same species.</p>
    <p>Finally, LINflow stores data in a MySQL relational database that organizes genomic data and the corresponding metadata. MySQL is a relational database that can be accessed from its command-line interface, various application programming interfaces, and graphical user interfaces. Therefore, users can easily retrieve genome sequences for other analyses, for example, comparative genomics or customized reference databases, by querying the database with filters of taxonomic information and/or LINs.</p>
  </sec>
  <sec sec-type="conclusions">
    <title>Conclusions</title>
    <p>LINflow is a fast and memory-efficient pipeline to infer similarity among a large set of prokaryotic genomes and achieves accuracy that approximates, but does not reach, that of pyani. Its ability to quickly add new genome sequences to an already computed similarity matrix makes LINflow particularly useful for projects when new genome sequences need to be regularly added to an existing dataset. Further improvements to LINflow in regard to speed and resolution are underway.</p>
  </sec>
  <sec sec-type="supplementary-material" id="supplemental-information">
    <title>Supplemental Information</title>
    <supplementary-material content-type="local-data" id="supp-1">
      <object-id pub-id-type="doi">10.7717/peerj.10906/supp-1</object-id>
      <label>Supplemental Information 1</label>
      <caption>
        <title>Panels of Figure 3 with strain names.</title>
        <p>Figures 1 through 5 correspond to panels A through E in Fig. 3 but include strain names.</p>
      </caption>
      <media xlink:href="peerj-09-10906-s001.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="supp-2">
      <object-id pub-id-type="doi">10.7717/peerj.10906/supp-2</object-id>
      <label>Supplemental Information 2</label>
      <caption>
        <title>Similarity matrices obtained by LINflow, FastANI, sourmash and pyani for dataset B.</title>
        <p>Heatmaps based on hierarchical clustering using the complete linkage method using the similarity matrices obtained with pyani (SF. 6), FastANI (SF. 7), LINflow (SF. 8), Sourmash <italic>k</italic> = 21 (SF. 9) and <italic>k</italic> = 51 (SF. 10) for dataset B.</p>
      </caption>
      <media xlink:href="peerj-09-10906-s002.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="supp-3">
      <object-id pub-id-type="doi">10.7717/peerj.10906/supp-3</object-id>
      <label>Supplemental Information 3</label>
      <caption>
        <title>Similarity matrices obtained by LINflow, FastANI, sourmash and pyani for dataset C.</title>
        <p>Heatmaps based on hierarchical clustering using the complete linkage method using the similarity matrices obtained with pyani (SF. 11), FastANI (SF. 12), LINflow (SF. 13), Sourmash <italic>k</italic> = 21 (SF. 14) and <italic>k</italic> = 51 (SF. 15) for dataset C.</p>
      </caption>
      <media xlink:href="peerj-09-10906-s003.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="supp-4">
      <object-id pub-id-type="doi">10.7717/peerj.10906/supp-4</object-id>
      <label>Supplemental Information 4</label>
      <caption>
        <title>Similarity matrices obtained by LINflow, FastANI, sourmash and pyani for dataset D.</title>
        <p>Heatmaps based on hierarchical clustering using the complete linkage method using the similarity matrices obtained with pyani (SF. 16), FastANI (SF. 17), LINflow (SF. 18), Sourmash <italic>k</italic> = 21 (SF. 19) and <italic>k</italic> = 51 (SF. 20) for dataset D.</p>
      </caption>
      <media xlink:href="peerj-09-10906-s004.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="supp-5">
      <object-id pub-id-type="doi">10.7717/peerj.10906/supp-5</object-id>
      <label>Supplemental Information 5</label>
      <caption>
        <title>Genomes of data set A, B, C, D and E and their LINs assigned by LINflow and Cophenetic correlations of hierarchical clustering dendrograms based on similarity matrices generated by different software.</title>
        <p>Genomes of data set A, B, C, D and E and their LINs assigned by LINflow are listed in the <xref ref-type="supplementary-material" rid="supp-5">Table S1</xref> tab. Cophenetic correlations of hierarchical clustering dendrograms based on similarity matrices generated by different software are listed in the <xref ref-type="supplementary-material" rid="supp-5">Table S2</xref> tab.</p>
      </caption>
      <media xlink:href="peerj-09-10906-s005.xlsx">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack>
    <p>The authors acknowledge Advanced Research Computing (ARC) at Virginia Tech for providing computational resources and technical support that have contributed to the results reported within this paper.</p>
  </ack>
  <sec sec-type="additional-information">
    <title>Additional Information and Declarations</title>
    <fn-group content-type="competing-interests">
      <title>Competing Interests</title>
      <fn fn-type="COI-statement" id="conflict-1">
        <p>Life Identification Number and LIN are registered trademarks of This Genomic Life Inc. Lenwood S Heath and Boris A Vinatzer report in accordance with Virginia Tech policies and procedures and their ethical obligation as researchers, that they have a financial interest in This Genomic Life Inc that may be affected by the research reported in this manuscript. They have disclosed those interests fully to Virginia Tech, and they have in place an approved plan for managing any potential conflicts arising from this relationship.</p>
      </fn>
    </fn-group>
    <fn-group content-type="author-contributions">
      <title>Author Contributions</title>
      <fn fn-type="con" id="contribution-1">
        <p><xref ref-type="contrib" rid="author-1">Long Tian</xref> conceived and designed the experiments, performed the experiments, analyzed the data, prepared figures and/or tables, authored or reviewed drafts of the paper, and approved the final draft.</p>
      </fn>
      <fn fn-type="con" id="contribution-2">
        <p><xref ref-type="contrib" rid="author-2">Reza Mazloom</xref> conceived and designed the experiments, performed the experiments, analyzed the data, prepared figures and/or tables, authored or reviewed drafts of the paper, and approved the final draft.</p>
      </fn>
      <fn fn-type="con" id="contribution-3">
        <p><xref ref-type="contrib" rid="author-3">Lenwood S. Heath</xref> conceived and designed the experiments, authored or reviewed drafts of the paper, and approved the final draft.</p>
      </fn>
      <fn fn-type="con" id="contribution-4">
        <p><xref ref-type="contrib" rid="author-4">Boris A. Vinatzer</xref> conceived and designed the experiments, authored or reviewed drafts of the paper, and approved the final draft.</p>
      </fn>
    </fn-group>
    <fn-group content-type="other">
      <title>Data Availability</title>
      <fn id="addinfo-1">
        <p>The following information was supplied regarding data availability:</p>
        <p>Data is available at Virginia Tech: <uri xlink:href="https://code.vt.edu/linbaseproject/LINflow/">https://code.vt.edu/linbaseproject/LINflow/</uri></p>
      </fn>
    </fn-group>
  </sec>
  <ref-list content-type="authoryear">
    <title>References</title>
    <ref id="ref-1">
      <label>Brenner (1973)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Brenner</surname>
            <given-names>DJ</given-names>
          </name>
        </person-group>
        <article-title>Deoxyribonucleic acid reassociation in the taxonomy of enteric bacteria</article-title>
        <source>International Journal of Systematic and Evolutionary Microbiology</source>
        <year>1973</year>
        <volume>23</volume>
        <issue>4</issue>
        <fpage>298</fpage>
        <lpage>307</lpage>
        <pub-id pub-id-type="doi">10.1099/00207713-23-4-298</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-2">
      <label>Broder (1997)</label>
      <element-citation publication-type="confproc">
        <person-group person-group-type="author">
          <name>
            <surname>Broder</surname>
            <given-names>AZ</given-names>
          </name>
        </person-group>
        <article-title>On the resemblance and containment of documents</article-title>
        <year>1997</year>
        <conf-name>Proceedings Compression and Complexity of SEQUENCES, 1997 (Cat No97TB100171)</conf-name>
        <fpage>21</fpage>
        <lpage>29</lpage>
      </element-citation>
    </ref>
    <ref id="ref-3">
      <label>Brown &amp; Irber (2016)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Brown</surname>
            <given-names>CT</given-names>
          </name>
          <name>
            <surname>Irber</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>sourmash: a library for MinHash sketching of DNA</article-title>
        <source>Journal of Open Source Software</source>
        <year>2016</year>
        <volume>1</volume>
        <issue>5</issue>
        <fpage>27</fpage>
        <pub-id pub-id-type="doi">10.21105/joss.00027</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-5">
      <label>Goris et al. (2007)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Goris</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Konstantinidis</surname>
            <given-names>KT</given-names>
          </name>
          <name>
            <surname>Klappenbach</surname>
            <given-names>JA</given-names>
          </name>
          <name>
            <surname>Coenye</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Vandamme</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Tiedje</surname>
            <given-names>JM</given-names>
          </name>
        </person-group>
        <article-title>DNA–DNA hybridization values and their relationship to whole-genome sequence similarities</article-title>
        <source>International Journal of Systematic and Evolutionary Microbiology</source>
        <year>2007</year>
        <volume>57</volume>
        <issue>1</issue>
        <fpage>81</fpage>
        <lpage>91</lpage>
        <pub-id pub-id-type="doi">10.1099/ijs.0.64483-0</pub-id>
        <pub-id pub-id-type="pmid">17220447</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-6">
      <label>Jain et al. (2018a)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jain</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Dilthey</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Aluru</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>AM</given-names>
          </name>
        </person-group>
        <article-title>A fast approximate algorithm for mapping long reads to large reference databases</article-title>
        <source>Journal of Computational Biology: A Journal of Computational Molecular Cell Biology</source>
        <year>2018a</year>
        <volume>25</volume>
        <issue>7</issue>
        <fpage>766</fpage>
        <lpage>779</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2018.0036</pub-id>
        <pub-id pub-id-type="pmid">29708767</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-7">
      <label>Jain et al. (2018b)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jain</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Dilthey</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Aluru</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>A fast adaptive algorithm for computing whole-genome homology maps</article-title>
        <source>Bioinformatics</source>
        <year>2018b</year>
        <volume>34</volume>
        <issue>17</issue>
        <fpage>i748</fpage>
        <lpage>i756</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bty597</pub-id>
        <pub-id pub-id-type="pmid">30423094</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-8">
      <label>Jain et al. (2018c)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jain</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Rodriguez-R</surname>
            <given-names>LM</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Konstantinidis</surname>
            <given-names>KT</given-names>
          </name>
          <name>
            <surname>Aluru</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>High throughput ANI analysis of 90K prokaryotic genomes reveals clear species boundaries</article-title>
        <source>Nature Communications</source>
        <year>2018c</year>
        <volume>9</volume>
        <issue>1</issue>
        <fpage>5114</fpage>
        <pub-id pub-id-type="doi">10.1038/s41467-018-07641-9</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-9">
      <label>Konstantinidis &amp; Tiedje (2005a)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Konstantinidis</surname>
            <given-names>KT</given-names>
          </name>
          <name>
            <surname>Tiedje</surname>
            <given-names>JM</given-names>
          </name>
        </person-group>
        <article-title>Genomic insights that advance the species definition for prokaryotes</article-title>
        <source>Proceedings of the National Academy of Sciences of the United States of America</source>
        <year>2005a</year>
        <volume>102</volume>
        <fpage>2567</fpage>
        <lpage>2572</lpage>
        <pub-id pub-id-type="pmid">15701695</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-10">
      <label>Konstantinidis &amp; Tiedje (2005b)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Konstantinidis</surname>
            <given-names>KT</given-names>
          </name>
          <name>
            <surname>Tiedje</surname>
            <given-names>JM</given-names>
          </name>
        </person-group>
        <article-title>Towards a genome-based taxonomy for prokaryotes</article-title>
        <source>Journal of Bacteriology</source>
        <year>2005b</year>
        <volume>187</volume>
        <fpage>6258</fpage>
        <lpage>6264</lpage>
        <pub-id pub-id-type="doi">10.1128/JB.187.18.6258</pub-id>
        <pub-id pub-id-type="pmid">16159757</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-11">
      <label>Mantel (1967)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mantel</surname>
            <given-names>N</given-names>
          </name>
        </person-group>
        <article-title>The detection of disease clustering and a generalized regression approach</article-title>
        <source>Cancer Research</source>
        <year>1967</year>
        <volume>27</volume>
        <issue>2</issue>
        <fpage>209</fpage>
        <lpage>220</lpage>
        <pub-id pub-id-type="pmid">6018555</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-12">
      <label>Marakeby et al. (2014)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Marakeby</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Badr</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Torkey</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Song</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Leman</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Monteil</surname>
            <given-names>CL</given-names>
          </name>
          <name>
            <surname>Heath</surname>
            <given-names>LS</given-names>
          </name>
          <name>
            <surname>Vinatzer</surname>
            <given-names>BA</given-names>
          </name>
        </person-group>
        <article-title>A system to automatically classify and name any individual genome-sequenced organism independently of current biological classification and nomenclature</article-title>
        <source>PLOS ONE</source>
        <year>2014</year>
        <volume>9</volume>
        <issue>2</issue>
        <elocation-id>e89142</elocation-id>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0089142</pub-id>
        <pub-id pub-id-type="pmid">24586551</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-14">
      <label>Ondov et al. (2016)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ondov</surname>
            <given-names>BD</given-names>
          </name>
          <name>
            <surname>Treangen</surname>
            <given-names>TJ</given-names>
          </name>
          <name>
            <surname>Melsted</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Mallonee</surname>
            <given-names>AB</given-names>
          </name>
          <name>
            <surname>Bergman</surname>
            <given-names>NH</given-names>
          </name>
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>AM</given-names>
          </name>
        </person-group>
        <article-title>Mash: fast genome and metagenome distance estimation using MinHash</article-title>
        <source>Genome Biology</source>
        <year>2016</year>
        <volume>17</volume>
        <issue>1</issue>
        <fpage>132</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-016-0997-x</pub-id>
        <pub-id pub-id-type="pmid">27323842</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-15">
      <label>Pierce et al. (2019)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pierce</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Irber</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Reiter</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Brooks</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Brown</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>Large-scale sequence comparisons with sourmash [version 1; peer review: 2 approved]</article-title>
        <source>F1000Research</source>
        <year>2019</year>
        <volume>8</volume>
        <fpage>1006</fpage>
        <pub-id pub-id-type="doi">10.12688/f1000research.19675.1</pub-id>
        <pub-id pub-id-type="pmid">31508216</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-16">
      <label>Pritchard (2014)</label>
      <element-citation publication-type="other">
        <person-group person-group-type="author">
          <name>
            <surname>Pritchard</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>Pyani: python module for average nucleotide identity analyses</article-title>
        <year>2014</year>
        <uri xlink:href="https://github.com/widdowquinn/pyani">https://github.com/widdowquinn/pyani</uri>
      </element-citation>
    </ref>
    <ref id="ref-17">
      <label>Rodriguez-R et al. (2018)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rodriguez-R</surname>
            <given-names>LM</given-names>
          </name>
          <name>
            <surname>Gunturu</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Harvey</surname>
            <given-names>WT</given-names>
          </name>
          <name>
            <surname>Rosselló-Mora</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Tiedje</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Cole</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Konstantinidis</surname>
            <given-names>KT</given-names>
          </name>
        </person-group>
        <article-title>The microbial genomes atlas (MiGA) webserver: taxonomic and gene diversity analysis of Archaea and Bacteria at the whole genome level</article-title>
        <source>Nucleic Acids Research</source>
        <year>2018</year>
        <volume>46</volume>
        <issue>W1</issue>
        <fpage>W282</fpage>
        <lpage>W288</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gky467</pub-id>
        <pub-id pub-id-type="pmid">29905870</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-19">
      <label>Stackebrandt &amp; Goebel (1994)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Stackebrandt</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Goebel</surname>
            <given-names>BM</given-names>
          </name>
        </person-group>
        <article-title>Taxonomic note: a place for DNA–DNA reassociation and s rRNA sequence analysis in the present species definition in bacteriology</article-title>
        <source>International Journal of Systematic Bacteriolo</source>
        <year>1994</year>
        <volume>44</volume>
        <issue>4</issue>
        <fpage>846</fpage>
        <lpage>849</lpage>
      </element-citation>
    </ref>
    <ref id="ref-20">
      <label>Tian et al. (2020)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tian</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Huang</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Mazloom</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Heath</surname>
            <given-names>LS</given-names>
          </name>
          <name>
            <surname>Vinatzer</surname>
            <given-names>BA</given-names>
          </name>
        </person-group>
        <article-title>LINbase: a web server for genome-based identification of prokaryotes as members of crowdsourced taxa</article-title>
        <source>Nucleic Acids Research</source>
        <year>2020</year>
        <volume>48</volume>
        <issue>W1</issue>
        <fpage>W529</fpage>
        <lpage>W537</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkaa190</pub-id>
        <pub-id pub-id-type="pmid">32232369</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-21">
      <label>Vinatzer, Tian &amp; Heath (2017)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Vinatzer</surname>
            <given-names>BA</given-names>
          </name>
          <name>
            <surname>Tian</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Heath</surname>
            <given-names>LS</given-names>
          </name>
        </person-group>
        <article-title>A proposal for a portal to make earth’s microbial diversity easily accessible and searchable</article-title>
        <source>Antonie van Leeuwenhoek</source>
        <year>2017</year>
        <volume>110</volume>
        <issue>10</issue>
        <fpage>1271</fpage>
        <lpage>1279</lpage>
        <pub-id pub-id-type="doi">10.1007/s10482-017-0849-z</pub-id>
        <pub-id pub-id-type="pmid">28281028</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-22">
      <label>Vinatzer et al. (2016)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Vinatzer</surname>
            <given-names>BA</given-names>
          </name>
          <name>
            <surname>Weisberg</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Monteil</surname>
            <given-names>CL</given-names>
          </name>
          <name>
            <surname>Elmarakeby</surname>
            <given-names>HA</given-names>
          </name>
          <name>
            <surname>Sheppard</surname>
            <given-names>SK</given-names>
          </name>
          <name>
            <surname>Heath</surname>
            <given-names>LS</given-names>
          </name>
        </person-group>
        <article-title>A proposal for a genome similarity-based taxonomy for plant-pathogenic bacteria that is sufficiently precise to reflect phylogeny, host range, and outbreak affiliation applied to <italic>Pseudomonas syringae</italic> sensu lato as a proof of concept</article-title>
        <source>Phytopathology</source>
        <year>2016</year>
        <volume>107</volume>
        <issue>1</issue>
        <fpage>18</fpage>
        <lpage>28</lpage>
        <pub-id pub-id-type="doi">10.1094/PHYTO-07-16-0252-R</pub-id>
        <pub-id pub-id-type="pmid">27552324</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-23">
      <label>Weisberg et al. (2015)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Weisberg</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Elmarakeby</surname>
            <given-names>HA</given-names>
          </name>
          <name>
            <surname>Heath</surname>
            <given-names>LS</given-names>
          </name>
          <name>
            <surname>Vinatzer</surname>
            <given-names>BA</given-names>
          </name>
        </person-group>
        <article-title>Similarity-based codes sequentially assigned to ebolavirus genomes are informative of species membership, associated outbreaks, and transmission Chains</article-title>
        <source>Open Forum Infectious Diseases</source>
        <year>2015</year>
        <volume>2</volume>
        <issue>1</issue>
        <fpage>ofv024</fpage>
        <pub-id pub-id-type="doi">10.1093/ofid/ofv024</pub-id>
        <pub-id pub-id-type="pmid">26034773</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

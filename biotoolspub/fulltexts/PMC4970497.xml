<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v2.3 20070202//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName journalpublishing.dtd?>
<?SourceDTD.Version 2.3?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">J Appl Crystallogr</journal-id>
    <journal-id journal-id-type="iso-abbrev">J Appl Crystallogr</journal-id>
    <journal-id journal-id-type="publisher-id">J. Appl. Cryst.</journal-id>
    <journal-title-group>
      <journal-title>Journal of Applied Crystallography</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">0021-8898</issn>
    <issn pub-type="epub">1600-5767</issn>
    <publisher>
      <publisher-name>International Union of Crystallography</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">4970497</article-id>
    <article-id pub-id-type="publisher-id">zf5002</article-id>
    <article-id pub-id-type="doi">10.1107/S1600576716008165</article-id>
    <article-id pub-id-type="coden">JACGAR</article-id>
    <article-id pub-id-type="pii">S1600576716008165</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Computer Programs</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title><italic>Dragonfly</italic>: an implementation of the expand–maximize–compress algorithm for single-particle imaging<xref ref-type="fn" rid="fn1">1</xref></article-title>
      <alt-title>
        <italic>Dragonfly</italic>
      </alt-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Ayyer</surname>
          <given-names>Kartik</given-names>
        </name>
        <xref ref-type="aff" rid="a">a</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Lan</surname>
          <given-names>Ti-Yen</given-names>
        </name>
        <xref ref-type="aff" rid="b">b</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Elser</surname>
          <given-names>Veit</given-names>
        </name>
        <xref ref-type="aff" rid="b">b</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Loh</surname>
          <given-names>N. Duane</given-names>
        </name>
        <xref ref-type="aff" rid="c">c</xref>
        <xref ref-type="aff" rid="d">d</xref>
        <xref ref-type="aff" rid="e">e</xref>
        <xref ref-type="corresp" rid="cor">*</xref>
      </contrib>
      <aff id="a"><label>a</label>Center for Free-Electron Laser Science, Deutsches Elektronen-Synchrotron DESY, Notkestrasse 85, 22607 Hamburg, <country>Germany</country></aff>
      <aff id="b"><label>b</label>Laboratory of Atomic and Solid State Physics, Cornell University, Ithaca, NY 14853, <country>USA</country></aff>
      <aff id="c"><label>c</label>Centre for Bio-imaging Sciences, National University of Singapore, 14 Science Drive 4, 117557, <country>Singapore</country></aff>
      <aff id="d"><label>d</label>Department of Physics, National University of Singapore, 2 Science Drive 3, 117551, <country>Singapore</country></aff>
      <aff id="e"><label>e</label>Department of Biological Sciences, National University of Singapore, 14 Science Drive 4, 117557, <country>Singapore</country></aff>
    </contrib-group>
    <author-notes>
      <corresp id="cor">Correspondence e-mail: <email>duaneloh@nus.edu.sg</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <day>01</day>
      <month>8</month>
      <year>2016</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>20</day>
      <month>6</month>
      <year>2016</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>20</day>
      <month>6</month>
      <year>2016</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. -->
    <volume>49</volume>
    <issue>Pt 4</issue>
    <issue-id pub-id-type="publisher-id">j160400</issue-id>
    <fpage>1320</fpage>
    <lpage>1335</lpage>
    <history>
      <date date-type="received">
        <day>25</day>
        <month>1</month>
        <year>2016</year>
      </date>
      <date date-type="accepted">
        <day>19</day>
        <month>5</month>
        <year>2016</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© Kartik Ayyer et al. 2016</copyright-statement>
      <copyright-year>2016</copyright-year>
      <license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0/uk/">
        <license-p>This is an open-access article distributed under
the terms of the Creative Commons Attribution
Licence, which permits unrestricted use,
distribution, and reproduction in any medium,
provided the original authors and source are
cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:type="simple" xlink:href="http://dx.doi.org/10.1107/S1600576716008165">A full version of this
article is available from Crystallography Journals Online.</self-uri>
    <abstract abstract-type="toc">
      <p>A description is given of a single-particle X-ray imaging reconstruction and simulation package using the expand–maximize–compress algorithm, named <italic>Dragonfly</italic>.</p>
    </abstract>
    <abstract>
      <p>Single-particle imaging (SPI) with X-ray free-electron lasers has the potential to change fundamentally how biomacromolecules are imaged. The structure would be derived from millions of diffraction patterns, each from a different copy of the macromolecule before it is torn apart by radiation damage. The challenges posed by the resultant data stream are staggering: millions of incomplete, noisy and un-oriented patterns have to be computationally assembled into a three-dimensional intensity map and then phase reconstructed. In this paper, the <italic>Dragonfly</italic> software package is described, based on a parallel implementation of the expand–maximize–compress reconstruction algorithm that is well suited for this task. Auxiliary modules to simulate SPI data streams are also included to assess the feasibility of proposed SPI experiments at the Linac Coherent Light Source, Stanford, California, USA.</p>
    </abstract>
    <kwd-group>
      <kwd>single-particle imaging</kwd>
      <kwd>X-ray free-electron lasers</kwd>
      <kwd>XFELs</kwd>
      <kwd>expand–maximize–compress reconstruction algorithm</kwd>
    </kwd-group>
  </article-meta>
</front>
<body>
  <sec id="sec1">
    <label>1.</label>
    <title>Introduction   </title>
    <p>The Single-Particle Imaging Initiative (Aquila <italic>et al.</italic>, 2015<xref ref-type="bibr" rid="bb1"> ▸</xref>) at the Linac Coherent Light Source (LCLS; Stanford, California, USA) is working towards single-particle imaging (SPI) of large biomolecules to 3 Å resolution. To prepare for a future where SPI is routine, we are making available a software package that will make this new imaging modality accessible to a broad user base.</p>
    <p>The defining characteristics of an SPI experiment are now well known (Neutze <italic>et al.</italic>, 2000<xref ref-type="bibr" rid="bb21"> ▸</xref>): the aim is to collect individual noisy diffraction patterns from very many reasonably identical copies of a particle, injected with unknown orientations into a pulsed X-ray beam. The expand–maximize–compress (EMC) algorithm (Loh &amp; Elser, 2009<xref ref-type="bibr" rid="bb20"> ▸</xref>) was developed specifically for processing SPI data sets. It was designed to take advantage of all the available information in these experiments, while also scaling well computationally. To obtain a better sense of the information-processing advantages of EMC, we briefly contrast it with two alternative methods that have been proposed.</p>
    <p>Manifold embedding methods (Fung <italic>et al.</italic>, 2008<xref ref-type="bibr" rid="bb11"> ▸</xref>; Schwander <italic>et al.</italic>, 2012<xref ref-type="bibr" rid="bb25"> ▸</xref>) try to find a consistent set of particle orientations by identifying pairs of similar diffraction patterns that establish an adjacency network for embedding into the space of orientations. Nowhere does this method impose consistency between the many more pairs of diffraction patterns that are not similar. By contrast, EMC imposes consistency between each diffraction pattern and a three-dimensional intensity model built from a tentative orientation reconstruction of all the patterns.</p>
    <p>Intensity cross-correlation methods offer another approach for deriving structure from un-oriented particle ensembles (Kam, 1977<xref ref-type="bibr" rid="bb14"> ▸</xref>; Saldin <italic>et al.</italic>, 2010<xref ref-type="bibr" rid="bb24"> ▸</xref>; Donatelli <italic>et al.</italic>, 2015<xref ref-type="bibr" rid="bb7"> ▸</xref>). These methods work best when the X-ray flux passes through the fewest number of particles. However, in the single-particle limit these methods work at an enormous information deficit relative to EMC. This is because EMC uses the correlated arrangement of all 100–1000 photons in a typical diffraction pattern, rather than just the correlations between pairs.</p>
    <p>While EMC is just beginning to be used for SPI of bio­particles, it has been field-tested in a number of proof-of-principle experiments (Loh <italic>et al.</italic>, 2010<xref ref-type="bibr" rid="bb18"> ▸</xref>; Philipp <italic>et al.</italic>, 2012<xref ref-type="bibr" rid="bb22"> ▸</xref>; Ayyer <italic>et al.</italic>, 2014<xref ref-type="bibr" rid="bb3"> ▸</xref>; Ayyer, Philipp <italic>et al.</italic>, 2015<xref ref-type="bibr" rid="bb4"> ▸</xref>; Ekeberg <italic>et al.</italic>, 2015<xref ref-type="bibr" rid="bb8"> ▸</xref>; Wierman <italic>et al.</italic>, 2016<xref ref-type="bibr" rid="bb28"> ▸</xref>). The most significant feature of these experiments is the demonstration that EMC’s probabilistic modeling of the detector photon counts continues to be valid even when the counts per scattering pattern are extremely sparse. Recording highly sparse data, with the hope that they reveal structure, will require a leap of faith on the part of structural biologists. Our EMC-based software package comes with tools to make that leap less blind for new users.</p>
  </sec>
  <sec id="sec2">
    <label>2.</label>
    <title>Purpose and structure of <italic>Dragonfly</italic>   </title>
    <p>This software package was named <italic>Dragonfly</italic>, since the compound eyes of a dragonfly allow it a wide field of view and reputedly good vision for catching prey. It uses the EMC algorithm to reconstruct a three-dimensional diffraction volume from noisy randomly oriented SPI diffraction patterns. These patterns could be from simulations or actual SPI experiments. Although this package includes a data-stream generator that feeds simulated data into the EMC reconstruction algorithm, the algorithm can also take data from physical experiments, as long as the input/output formats specified here are used.</p>
    <sec id="sec2.1">
      <label>2.1.</label>
      <title>Key parameters in single-particle imaging   </title>
      <p>The key parameters of an SPI experiment are illustrated in Fig. 1<xref ref-type="fig" rid="fig1"> ▸</xref>. They include the photon wavelength λ and the maximum scattering angle φ<sub>max</sub>. These parameters determine the half-period resolution <italic>a</italic> of the reconstructed electron-density map. Together with the beam fluence, these parameters can help one decide if a candidate scatterer can yield enough diffraction signal to the desired resolution. These parameters are revisited in §2.5.1<xref ref-type="sec" rid="sec2.5.1"/>.</p>
      <p>Throughout this document, we adopt the crystallographers’ convention for the spatial frequency: <disp-formula id="fd1"><graphic xlink:href="j-49-01320-efd1.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>A corrective factor is applied to compensate for different solid angles subtended by different pixels on the detector (Appendix <italic>B</italic>
<xref ref-type="app" rid="appb"/>).</p>
    </sec>
    <sec id="sec2.2">
      <label>2.2.</label>
      <title>Reconstruction workflows in <italic>Dragonfly</italic>   </title>
      <p>Whether the diffraction patterns are derived from simulations (Fig. 2<xref ref-type="fig" rid="fig2"> ▸</xref>) or experiments (Fig. 3<xref ref-type="fig" rid="fig3"> ▸</xref>), the minimum inputs to <italic>Dragonfly</italic> are a configuration file, a file containing detector coordinates plus pixel status, and a sparse representation of the photon data from diffraction patterns.</p>
      <p>Modules and utilities within the <italic>Dragonfly</italic> package can be replaced by alternatives with compatible input and output data formats with other modules. In this package, binary files have extensions <monospace>*.bin</monospace> or <monospace>*.emc</monospace>; plain text files terminate with <monospace>*.log</monospace>, <monospace>*.dat</monospace> or <monospace>*.ini</monospace>.</p>
    </sec>
    <sec id="sec2.3">
      <label>2.3.</label>
      <title>Implementing the EMC algorithm   </title>
      <p>The EMC algorithm (Loh &amp; Elser, 2009<xref ref-type="bibr" rid="bb20"> ▸</xref>) is an iterative reconstruction algorithm. It is implemented here with hybrid MPI+OpenMP (message passing interface + open multi-processing), and hence is suitable for both shared and distributed memory systems. In this section, we describe this implementation and an extension to deal with high-signal data.</p>
      <p>In the current version, the code assumes a Poisson probability model for the number of photons in a pixel. Gaussian noise models have been used in situations with bright but noisy data (Loh <italic>et al.</italic>, 2010<xref ref-type="bibr" rid="bb18"> ▸</xref>; Ekeberg <italic>et al.</italic>, 2015<xref ref-type="bibr" rid="bb8"> ▸</xref>), but if single photons can be accurately counted, the noise model will be Poissonian.</p>
      <p>We consider the Poisson noise model for a set of three-dimensional intensities <italic>W</italic>. Let the number of photons at pixel number <italic>t</italic> in a two-dimensional data frame (interchangeably termed photon/diffraction pattern) <italic>d</italic> be <italic>K<sub>dt</sub></italic>, and for a given orientation <italic>r</italic> the predicted mean intensity at the same pixel be <italic>W<sub>rt</sub></italic>. Since an independent Poisson process occurs at each pixel, the probability of that pattern being generated by a tomogram <italic>W<sub>r</sub></italic> is <disp-formula id="fd2"><graphic xlink:href="j-49-01320-efd2.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>But, since the particle must have some orientation, the probability of frame <italic>d</italic> having orientation <italic>r</italic> is obtained by normalizing over all orientations:<disp-formula id="fd3"><graphic xlink:href="j-49-01320-efd3.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>With these probabilities, one can define the model log-likelihood as the expectation of the total log-likelihood of the data being generated by a new model <inline-formula><inline-graphic xlink:href="j-49-01320-efi1.jpg" mimetype="image" mime-subtype="gif"/></inline-formula>: <disp-formula id="fd4"><graphic xlink:href="j-49-01320-efd4.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>neglecting a model-independent constant. Maximizing <italic>Q</italic> with respect to the new model intensities <inline-formula><inline-graphic xlink:href="j-49-01320-efi1.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> gives us the update rule <disp-formula id="fd5"><graphic xlink:href="j-49-01320-efd5.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>The most time-consuming step of each iteration is the calculation of equation (2)<xref ref-type="disp-formula" rid="fd2"/>. This involves comparing all the tomograms with all the patterns for each pixel which has at least one photon. The code is parallelized over orientations, so each MPI and OpenMP rank performs the calculation for a subset of orientations. At the start of the iterations, each MPI rank gets a copy of the current three-dimensional intensity model <italic>W</italic>. Each MPI and OpenMP rank then calculates the relevant tomograms, <italic>W<sub>rt</sub></italic>, as needed and then computes <italic>R<sub>dr</sub></italic> for that orientation using equation (2)<xref ref-type="disp-formula" rid="fd2"/>. Subsequently, these <italic>R<sub>dr</sub></italic> are reduced synchronously across all ranks for the normalization operation of equation (3)<xref ref-type="disp-formula" rid="fd3"/>. The resultant normalized <italic>P<sub>dr</sub></italic> array is used to calculate updated tomograms for each <italic>r</italic>, and then merged to obtain an updated three-dimensional model for each MPI rank. These models are finally reduced to obtain an updated model <italic>W</italic>′.</p>
      <p>In many experimental situations, the incident fluence varies between X-ray pulses. Thus, the tomograms would be scaled differently for each pattern (Loh <italic>et al.</italic>, 2010<xref ref-type="bibr" rid="bb18"> ▸</xref>; Ekeberg <italic>et al.</italic>, 2015<xref ref-type="bibr" rid="bb8"> ▸</xref>). One can enable the recovery of these scale factors using the update rule described in Appendix <italic>C</italic>
<xref ref-type="app" rid="appc"/>.</p>
      <p>We also find that, if the signal on each pattern is too strong, and when the rotation group sampling is too fine or the data are too few, reconstructions can get stuck in a local maximum in which all frames are assigned to far too few orientations in reciprocal space. This effect is similar to what is observed if the background is too high (Ayyer, Geloni <italic>et al.</italic>, 2015<xref ref-type="bibr" rid="bb2"> ▸</xref>). However, such reconstructions are empirically stable around the true solution, <italic>W</italic>
<sup>true</sup>, and only get trapped when one starts from random initial guesses. This problem can be avoided by using the deterministic annealing variant of expectation maximization (Ueda &amp; Nakano, 1998<xref ref-type="bibr" rid="bb27"> ▸</xref>). In the EMC case, this is implemented by raising <italic>R<sub>dr</sub></italic> calculated in equation (2)<xref ref-type="disp-formula" rid="fd2"/> to a small power β and then normalizing as in equation (3)<xref ref-type="disp-formula" rid="fd3"/>: <italic>P<sub>dr</sub></italic> = <inline-formula><inline-graphic xlink:href="j-49-01320-efi3.jpg" mimetype="image" mime-subtype="gif"/></inline-formula>. Doing this has the effect of broadening the orientation distribution and results in a rotationally blurred but stable reconstruction. Once the intensities of a metastable model have been resolved, the power β can then be raised gradually in a manner similar to simulated annealing, to guide the reconstruction slowly to the true global maximum around <italic>W</italic>
<sup>true</sup>. An example of this is shown in §3.2.2<xref ref-type="sec" rid="sec3.2.2"/> and elaborated in Appendix <italic>F</italic>
<xref ref-type="app" rid="appf"/>.</p>
    </sec>
    <sec id="sec2.4">
      <label>2.4.</label>
      <title>Software modules and convenience utilities   </title>
      <p>The modules and utilities here are written in the programming languages C or Python (files with <monospace>*.py</monospace> extensions). For the system requirements to run the code, see §5<xref ref-type="sec" rid="sec5"/>.</p>
      <sec id="sec2.4.1">
        <label>2.4.1.</label>
        <title>Simulation modules of data-stream generator   </title>
        <p>Here we list the essential modules for simulating a data stream from an SPI experiment. By default, these modules use parameters listed in a single <monospace>config.ini</monospace> configuration file (detailed in §2.5.1<xref ref-type="sec" rid="sec2.5.1"/>), although different modules can use different configuration files as well. These modules can be either executed by the user or invoked by the convenience utilities described in §2.4.3<xref ref-type="sec" rid="sec2.4.3"/>. Users attempting the former are encouraged to study how these convenience utilities call the underlying modules.</p>
        <p>(i) <monospace>make_detector.py</monospace>. Creates a detector file using the experimental parameters specified in the configuration file. The format of this file is specified in §2.5.2<xref ref-type="sec" rid="sec2.5.2"/>.</p>
        <p>(ii) <monospace>make_densities.py</monospace>. Creates an electron-density map from an atomic model in the Protein Data Bank (PDB) format, given the resolution and field of view calculated from the configuration file. A low-pass filter is applied to this electron-density map to effect the intensity fall-off of atomic form factors.</p>
        <p>(ii) <monospace>make_intensities.py</monospace>. Creates a set of three-dimensional diffraction intensities from an electron-density map and the experimental parameters found in the configuration file.</p>
        <p>(iv) <monospace>make_data</monospace>. Simulates a sparse photon diffraction pattern using a three-dimensional diffraction volume (<italic>e.g.</italic> the one generated by <monospace>make_intensities.py</monospace>) and the configuration file. By default these photon data are saved as a binary file, <monospace>photons.emc</monospace>, detailed in §2.5.3<xref ref-type="sec" rid="sec2.5.3"/>. One can include a pattern-wise Gaussian spread in the incident fluence on the particle, as well as a uniform background.</p>
      </sec>
      <sec id="sec2.4.2">
        <label>2.4.2.</label>
        <title>The EMC executable   </title>
        <p>This executable reconstructs a three-dimensional diffraction volume from SPI data and is at the heart of the <italic>Dragonfly</italic> package. From Figs. 2<xref ref-type="fig" rid="fig2"> ▸</xref> and 3<xref ref-type="fig" rid="fig3"> ▸</xref>, we see that data from either simulation or experiment workflows all converge into this EMC executable.</p>
        <p>Internally, EMC creates a list of quasi-uniform rotation-group samples based on a refinement scheme of the 600 cell, detailed in Appendix <italic>C</italic> of Loh &amp; Elser (2009<xref ref-type="bibr" rid="bb20"> ▸</xref>). This level of refinement is defined by the <monospace>num_div</monospace> parameter in <monospace>config.ini</monospace>.</p>
        <p>This EMC executable is implemented in the programming language C, using both the MPI and OpenMP parallelization frameworks. This hybrid implementation means that the user could choose to activate either or both types of parallelization. For example, one could run five iterations of a single-threaded single-process reconstruction using the command <monospace>./emc -t 1 5</monospace>; omitting the <monospace>-t 1</monospace> option uses the maximum available number of threads under OpenMP, typically specified by the shell variable <monospace>OMP_NUM_THREADS</monospace>. For a pure MPI version with 16 processes on the same node, the command is <monospace>mpirun -np 16 ./emc -t 1 5</monospace>. Finally, to run a hybrid version with the maximum available number of threads on six nodes, the command is <monospace>mpirun -np 6 -H &lt;hostnames&gt; ./emc 5</monospace>, where <monospace>&lt;hostnames&gt;</monospace> is a comma-separated list of node names on which the MPI process would run. Note that with OpenMPI 1.7+ one should use the <monospace>--bind-to none</monospace> option to make sure all cores in a thread are used. Different bindings may be available on different architectures.</p>
      </sec>
      <sec id="sec2.4.3">
        <label>2.4.3.</label>
        <title>Convenience utilities   </title>
        <p>Several convenience utilities are included to help prepare the data for or to view the results from the EMC reconstruction algorithm. The functions of these utilities, which are non-essential for the reconstruction and can be easily substituted, are briefly described here.</p>
        <p>(i) <monospace>init_new_recon.py</monospace>. This Python utility compiles the C executables in the package, and makes them and the rest of the utilities available in a newly initialized reconstruction subdirectory. This utility calls the included <monospace>Makefile</monospace> that users can modify to customize this compilation.</p>
        <p>(ii) <monospace>sim_setup.py</monospace>. This Python utility simulates an SPI data stream and calls modules listed in §2.4.1<xref ref-type="sec" rid="sec2.4.1"/> – <monospace>make_densities.py</monospace>, <monospace>make_intensities.py</monospace> and <monospace>make_data.py</monospace> – subject to the configuration file parameters listed in §2.5.1<xref ref-type="sec" rid="sec2.5.1"/>.</p>
        <p>(iii) <monospace>make_powder.py</monospace>. Makes a virtual powder pattern from all the diffraction patterns stored in the sparse photon format described in §2.5.3<xref ref-type="sec" rid="sec2.5.3"/>.</p>
        <p>(iv) <monospace>run_emc.py</monospace>. Starts the EMC reconstruction by calling the EMC executable (see §2.4.2<xref ref-type="sec" rid="sec2.4.2"/>). Includes a few convenience operations, like increasing the sampling of the rotation group and/or continuing from a previous reconstruction.</p>
        <p>(v) <monospace>autoplot.py</monospace>. Renders the results of the EMC reconstruction, including the diagnostics it generates, with the option of automatically updating the plots when newer intensities become available.</p>
        <p>(vi) <monospace>frameviewer.py</monospace>. Viewer utility that plots the individual sparse photon files stored in the EMC format as they were measured on a planar detector (see §2.5.3<xref ref-type="sec" rid="sec2.5.3"/>).</p>
      </sec>
    </sec>
    <sec id="sec2.5">
      <label>2.5.</label>
      <title>Input and output to <italic>Dragonfly</italic>   </title>
      <p>Here we specify only the input and output for the experimental workflow outlined in Fig. 3<xref ref-type="fig" rid="fig3"> ▸</xref>. The formats for the data-stream generator workflow in Fig. 2<xref ref-type="fig" rid="fig2"> ▸</xref> are auxiliary to the reconstruction algorithm and are only detailed in the distributed software package.</p>
      <sec id="sec2.5.1">
        <label>2.5.1.</label>
        <title>Configuration file   </title>
        <p>The plain-text configuration file contains parameters and file names to be used by the EMC reconstruction as well as by the various modules/utilities. The file has the standard <monospace>key = value</monospace> format, with the parameters for different modules grouped by module names in square brackets. There is a global <monospace>[parameters]</monospace> section containing information about the experimental setup. A typical configuration file is shown in Fig. 4<xref ref-type="fig" rid="fig4"> ▸</xref>, which corresponds to the first simulation case in Table 1<xref ref-type="table" rid="table1"> ▸</xref>. This default file also shows the use of special keywords used to point to other configuration-file parameters (<italic>e.g.</italic>
<monospace>in_photons_file</monospace>). The <monospace>[parameters]</monospace> section is described below. For other sections, refer to the appropriate module in §2.4<xref ref-type="sec" rid="sec2.4"/>.</p>
        <p>The basic parameters of the experiment are as follows. Note that the fields with asterisks are only used in the data-stream simulator.</p>
        <p>(i) <monospace>detd</monospace>: detector distance in mm.</p>
        <p>(ii) <monospace>lambda</monospace>: wavelength in Å.</p>
        <p>(iii) <monospace>detsize<sup>*</sup></monospace>: detector size (assuming a square detector) in pixels.</p>
        <p>(iv) <monospace>pixsize</monospace>: pixel size in mm.</p>
        <p>(v) <monospace>stoprad<sup>*</sup></monospace>: radius of the beamstop in pixels.</p>
        <p>(vi) <monospace>polarization</monospace>: polarization direction of the X-ray pulses (can be <monospace>x</monospace>, <monospace>y</monospace> or <monospace>none</monospace>).</p>
      </sec>
      <sec id="sec2.5.2">
        <label>2.5.2.</label>
        <title>Detector file   </title>
        <p>The detector file is an ASCII (human readable) file which describes various properties of the detector. This file can be generated by <monospace>make_detector.py</monospace> as described in §2.4.1<xref ref-type="sec" rid="sec2.4.1"/>, or manually elsewhere.</p>
        <p>The first line of this detector file specifies the number of pixels. Subsequently, individual pixels are described by five columns of numbers, with one pixel per line. The first three columns give the three-dimensional coordinates of the detector pixel in voxel units, where the voxels refer to the three-dimensional grid containing the intensity model. The mapping of detector pixels to spatial frequencies is described in Appendix <italic>D</italic>
<xref ref-type="app" rid="appd"/>, and the pixel’s absolute size is specified by the <monospace>pixsize</monospace> field in the configuration file. The fourth column gives the product of the polarization (see <monospace>polarization</monospace> field in the configuration file) and solid-angle corrections for that pixel (Appendix <italic>B</italic>
<xref ref-type="app" rid="appb"/>). The last column is an eight-byte unsigned integer whose value is used by the EMC code and by other utilities to categorize the pixel. Currently, three pixel categories are implemented:</p>
        <p><monospace>[0]</monospace>: good pixels, used to determine the orientation of a given pattern and updated into the new intensity model.</p>
        <p><monospace>[1]</monospace>: these pixels will not be used to determine the orientation, but will still be merged into the three-dimensional grid using the orientations calculated from category 0 pixels. These are usually pixels in the corners of the detector.</p>
        <p><monospace>[2]</monospace>: bad pixels, which are either dead pixels or pixels within the beamstop. Their values will be used neither to determine the orientation nor to calculate the merged three-dimensional intensities.</p>
        <p>Multiplying a data frame by these pixel categories removes good pixels, thus ‘masking them out’. Pixel categorization provides flexibility to users. For example, the beamstop(s) or gaps in the planar detector could be entirely omitted in a detector file that only contains the locations of good pixels. Alternatively, beamstop/gap pixels could be labeled ‘bad’ (category 2) if one uses a packed rectilinear set of pixel positions. This second approach allows the user readily to revise the pixel categories in an existing detector file.</p>
        <p>Although the pixels from the data-stream simulation included here correspond to a dense planar detector (Fig. 1<xref ref-type="fig" rid="fig1"> ▸</xref>), these pixel locations can be arbitrary. However, a rule of thumb for SPI is that the locations of these pixels, though arbitrary, should evenly populate a contiguous range of scalar spatial frequencies up to the desired resolution. This way, sufficiently many patterns that are oriented uniformly in orientation space and measured on these pixels should densely fill the desired three-dimensional diffraction volume.</p>
        <p>Finally, we emphasize that the ‘spatial frequency lookup table’ format of this detector file is convenient for compound detectors with gaps or missing tiles, or comprising tiles placed at different distances from the sample. In these cases, a special geometry consideration becomes unnecessary once the pixels on these non-contiguous detectors have been mapped onto the Ewald sphere in the detector file. Mapping to spatial frequencies in <monospace>detector.dat</monospace> is straightforward if a pixel location lookup table similar to that used by Barty <italic>et al.</italic> (2014<xref ref-type="bibr" rid="bb5"> ▸</xref>) is available.</p>
      </sec>
      <sec id="sec2.5.3">
        <label>2.5.3.</label>
        <title>Photon file (EMC format)   </title>
        <p>Since the photon data in many high-resolution SPI experiments expect few photons per pattern, a sparse binary format is used to store the data. Hence, for each pattern we only store information about pixels that receive photons. Additionally, since most of the non-zero counts are ones, only their pixel locations are stored. For pixels receiving two or more photons, we store both their pixel location and their photon count.</p>
        <p>The data in the photon file are arranged in six blocks (Fig. 5<xref ref-type="fig" rid="fig5"> ▸</xref>). The file’s header resides in the first block, which is 1024 bytes long. This begins with two four-byte chunks: a 32-bit integer describing the number of patterns (<monospace>num_data</monospace>) contained in the file, followed by another 32-bit integer for the number of pixels in each pattern. These pixels include all three pixel categories stated in §2.5.2<xref ref-type="sec" rid="sec2.5.2"/>. The next 1016 bytes are currently unused and are filled with zeros.</p>
        <p>The second block contains <monospace>num_data</monospace> 32-bit integers giving the number of one-photon events in each pattern (<monospace>ones</monospace>). The third block contains <monospace>num_data</monospace> integers giving the number of multi-photon events (<monospace>multi</monospace>). The total number of single-photon events in all the patterns is the sum of all the numbers in the <monospace>ones</monospace> array (<italic>S</italic>
<sub>o</sub>). Similarly, let <italic>S</italic>
<sub>m</sub> be the total number of multiple-photon events. The fourth block contains <italic>S</italic>
<sub>o</sub> 32-bit integers giving the locations of the single-photon pixels. The fifth block has <italic>S</italic>
<sub>m</sub> integers with the locations of the multiple-photon pixels. Finally, the sixth block has <italic>S</italic>
<sub>m</sub> 32-bit integers giving the number of photons in each of those multiple-photon pixels.</p>
        <p>To become familiar with this EMC photon format, the reader is encouraged to examine the <monospace>frameviewer.py</monospace> utility in this package (listed in §2.4.3<xref ref-type="sec" rid="sec2.4.3"/>) and its output.</p>
      </sec>
      <sec id="sec2.5.4">
        <label>2.5.4.</label>
        <title>Output intensities   </title>
        <p>The output three-dimensional intensities from the EMC executable in the workflows of Figs. 2<xref ref-type="fig" rid="fig2"> ▸</xref> and 3<xref ref-type="fig" rid="fig3"> ▸</xref> are saved as dense row-major order binary native-endian files (64-bit floating point), numbered according to the iteration number in the reconstruction. When one restarts a previous EMC reconstruction, the EMC executable will assume that the last iteration was the largest numbering suffixed on the file names of these intensities.</p>
      </sec>
    </sec>
  </sec>
  <sec id="sec3">
    <label>3.</label>
    <title>Example reconstructions of simulated experiments   </title>
    <p>The use of the <italic>Dragonfly</italic> package is exemplified in three simulated SPI reconstructions using the specifications of the atomic, molecular and optical science (AMO) (Ferguson <italic>et al.</italic>, 2015<xref ref-type="bibr" rid="bb10"> ▸</xref>) and coherent X-ray imaging (CXI) (Liang <italic>et al.</italic>, 2015<xref ref-type="bibr" rid="bb15"> ▸</xref>) endstations at the LCLS (Emma <italic>et al.</italic>, 2010<xref ref-type="bibr" rid="bb9"> ▸</xref>). We chose to simulate SPI of the keyhole limpet haemocyanin 1 (KLH1) didecamer (Gatsogiannis &amp; Markl, 2009<xref ref-type="bibr" rid="bb12"> ▸</xref>) and four-layer tobacco mosaic virus (TMV) (Bhyravbhatla <italic>et al.</italic>, 1998<xref ref-type="bibr" rid="bb6"> ▸</xref>) on the AMO and CXI beamlines, respectively. It is notable that the choices in Table 1<xref ref-type="table" rid="table1"> ▸</xref> yield an average of about 100 photons per single-particle diffraction pattern (pixel categories 0 and 1). Pattern-to-pattern intensity scaling was turned off in both data simulations and reconstructions.</p>
    <p>The simulation parameters are shown in Table 1<xref ref-type="table" rid="table1"> ▸</xref>. The detectors here have 150 × 150 pixels, with the pixel sizes chosen to emulate a 1024 × 1024 pixel pnCCD (Strüder <italic>et al.</italic>, 2010<xref ref-type="bibr" rid="bb26"> ▸</xref>) and CSPAD (Philipp <italic>et al.</italic>, 2011<xref ref-type="bibr" rid="bb23"> ▸</xref>; Hart <italic>et al.</italic>, 2012<xref ref-type="bibr" rid="bb13"> ▸</xref>). We decreased the beam fluence to obtain mean photon counts <italic>N</italic> ≃ 90 (the sum of pixel categories 0 and 1) for the first two simulations, mimicking realistic losses from imperfect beam transmission, optics and cleanup apertures (Loh <italic>et al.</italic>, 2013<xref ref-type="bibr" rid="bb19"> ▸</xref>). The third simulation of Table 1<xref ref-type="table" rid="table1"> ▸</xref> was designed to demonstrate how deterministic annealing can deal with the convergence issues caused by a very high signal (see end of §2.3<xref ref-type="sec" rid="sec2.3"/> and Appendix <italic>F</italic>2)<xref ref-type="sec" rid="secf2"/>. In this case, most of the parameters were identical to the low-fluence AMO case, except the fluence was up-adjusted to receive 1 mJ X-ray pulses, which is within an order of magnitude of the design specifications (Emma <italic>et al.</italic>, 2010<xref ref-type="bibr" rid="bb9"> ▸</xref>).</p>
    <p>For data sufficiency we use the signal-to-noise ratio parameter defined in equation (37) of Loh &amp; Elser (2009<xref ref-type="bibr" rid="bb20"> ▸</xref>), <disp-formula id="fd6"><graphic xlink:href="j-49-01320-efd6.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>to estimate the required number of data frames <italic>M</italic>
<sub>data</sub> for <italic>S</italic> ≃ 50, where <italic>M</italic>
<sub>rot</sub> is the number of quasi-uniform rotation samples and <italic>N</italic> is the mean photon count per pattern. Assuming the diffraction patterns are uniformly distributed in orientation space, <italic>S</italic>
<sup>2</sup> can be interpreted as the average number of photons per orientation.</p>
    <sec id="sec3.1">
      <label>3.1.</label>
      <title>Diagnostics on simulated reconstructions   </title>
      <p>In this section, we describe useful diagnostics for monitoring the progress of each three-dimensional reconstruction. Figs. 6<xref ref-type="fig" rid="fig6"> ▸</xref>, 7<xref ref-type="fig" rid="fig7"> ▸</xref> and 8<xref ref-type="fig" rid="fig8"> ▸</xref> show orthogonal slices through the reconstructed intensities for the three parameter sets in Table 1<xref ref-type="table" rid="table1"> ▸</xref>. Below each figure is a set of plots generated by the <monospace>autoplot.py</monospace> utility, which helps to visualize these diagnostics.</p>
      <p>We discuss these diagnostics starting with the AMO reconstruction in Fig. 6<xref ref-type="fig" rid="fig6"> ▸</xref>, which consistently converges from random restarts. With each new reconstruction attempt, diffraction speckles converge readily, although each time at a different overall orientation.</p>
      <sec id="sec3.1.1">
        <label>3.1.1.</label>
        <title>R.m.s. change in the three-dimensional model   </title>
        <p>The root mean-squared (r.m.s.) change per voxel between the three-dimensional intensity models from successive iterations in Fig. 6<xref ref-type="fig" rid="fig6"> ▸</xref> is a straightforward indicator of convergence. Model changes decrease as the algorithm converges. Note that a converged model might not always be the solution (see Appendix <italic>F</italic>1<xref ref-type="sec" rid="secf1"/>).</p>
      </sec>
      <sec id="sec3.1.2">
        <label>3.1.2.</label>
        <title>Mutual information between model tomograms and data   </title>
        <p>An additional diagnostic is the ‘sharpness’ of the probability distribution over orientations <italic>P</italic>
<sub><italic>dr</italic></sub> calculated in equation (3)<xref ref-type="disp-formula" rid="fd3"/>, which one expects to increase as a reconstructed model converges. This sharpness can be monitored from the mutual information of the joint distribution of the data and the orientations, <italic>P</italic>(<italic>K</italic>, Ω) = <italic>P</italic>(Ω)<italic>P</italic>(<italic>K</italic> | Ω) = <italic>P<sub>r</sub></italic>
<italic>P<sub>dr</sub></italic>. Here, <italic>P<sub>r</sub></italic> is the prior probability of orientations <italic>r</italic> (assumed here to be uniform). The mutual information between the data and the tomogram of orientation Ω given the current model <italic>W</italic> is evaluated as <disp-formula id="fd7"><graphic xlink:href="j-49-01320-efd7.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>where <inline-formula><inline-graphic xlink:href="j-49-01320-efi4.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> is the average over data frames. Equation (7)<xref ref-type="disp-formula" rid="fd7"/> approaches the entropy of the rotation-group sampling when each pattern fits only one orientation, while it vanishes for a uniform distribution.</p>
        <p>The fact that this mutual information rises asymptotically in Fig. 6<xref ref-type="fig" rid="fig6"> ▸</xref> (center of bottom panel, top plot) is consistent with model convergence. Below it is a plot of the model log-likelihood defined in equation (4)<xref ref-type="disp-formula" rid="fd4"/>. This quantity should increase monotonically as the three-dimensional model eventually converges, although transiently high values may be consistent with EMC over-fitting patterns to low-likelihood early models (see Figs. 6<xref ref-type="fig" rid="fig6"> ▸</xref> and 7<xref ref-type="fig" rid="fig7"> ▸</xref>).</p>
      </sec>
      <sec id="sec3.1.3">
        <label>3.1.3.</label>
        <title>Average log-likelihood of patterns given a model   </title>
        <p>The previous two diagnostics largely indicate if a model’s reconstruction has converged and offer less information about whether the model is ‘likely’. Here we introduce a third diagnostic, the log-likelihood of all the data patterns given the current three-dimensional model, as computed in equation (4)<xref ref-type="disp-formula" rid="fd4"/>. This likelihood quantifies how an iterative reconstruction approaches a global likelihood maximum. This diagnostic is plotted in the bottom panel of the middle columns in Figs. 6<xref ref-type="fig" rid="fig6"> ▸</xref>, 7<xref ref-type="fig" rid="fig7"> ▸</xref> and 8<xref ref-type="fig" rid="fig8"> ▸</xref>. Again, note that a likely model might not always be the true solution (see Appendix <italic>F</italic>1<xref ref-type="sec" rid="secf1"/>).</p>
      </sec>
      <sec id="sec3.1.4">
        <label>3.1.4.</label>
        <title>Most likely orientations of each pattern   </title>
        <p>We describe the most detail-rich and possibly revealing diagnostic for monitoring convergence. Consider the matrix plot in the bottom rightmost panel of Fig. 6<xref ref-type="fig" rid="fig6"> ▸</xref>: its vertical axis labels the pattern number while the horizontal axis labels the iteration number. The color rendered represents the orientation number of the most likely orientation (maximum <italic>P<sub>dr</sub></italic>) for each pattern. In Fig. 6<xref ref-type="fig" rid="fig6"> ▸</xref> we sorted the patterns by the most likely quaternion in the final iteration of each block having the same rotation-group sampling. As a result, the colors at the right-hand end form a smooth spectrum and the pattern numbers differ between rotation-sampling blocks. The variation in color along a row indicates how the most likely orientation has changed for that pattern. The patterns settle into their most likely orientations when these colors become constant with iteration, which is a good indicator of convergence.</p>
        <p>This diagnostic is also useful for cases when the rotation-group sampling is increased steadily (<italic>i.e.</italic> Fig. 7<xref ref-type="fig" rid="fig7"> ▸</xref>). For each iteration block where the rotation-group sampling is fixed, we sort the patterns (rows in this orientation plot) such that the last iteration in the block has ascending orientation numbers. However, whereas the pattern index is constant within each block, they differ between rotation-group sampling blocks because each block is sorted separately.</p>
      </sec>
    </sec>
    <sec id="sec3.2">
      <label>3.2.</label>
      <title>Strategies for reconstruction   </title>
      <sec id="sec3.2.1">
        <label>3.2.1.</label>
        <title>Gradually increasing rotation-group sampling   </title>
        <p>For the CXI reconstruction (Fig. 7<xref ref-type="fig" rid="fig7"> ▸</xref>), owing to the size of the problem, the quaternion sampling number was increased in steps. If one chooses too coarse a rotation-group sampling, low-resolution speckles are reconstructed but higher-resolution features remain blurry. These higher-resolution speckles sharpen quickly when we increase the rotation-group sampling for reconstructions starting from this blurry model. Since the computation time scales as the number of rotation-group samples, it is faster to increase rotation-group sampling gradually such that only a few iterations are performed with the most time consuming but finest sampling. Red dashed lines in the bottom plots of Fig. 7<xref ref-type="fig" rid="fig7"> ▸</xref> indicate iterations where the rotation-group refinement level was increased gradually from ten to 16 (details in Table 1<xref ref-type="table" rid="table1"> ▸</xref>). Note that the mutual information does not increase much in the last rotation-group refinement, indicating that further refinement would not substantially improve the model likelihood. The Python utility <monospace>run_emc.py</monospace> listed in §2.4.3<xref ref-type="sec" rid="sec2.4.3"/> has a <monospace>-R</monospace> option for increasing the level of rotation-group sampling of a reconstruction by one. In general, we found good results when manually increasing this sampling, once the changes in speckle features have visibly converged.</p>
      </sec>
      <sec id="sec3.2.2">
        <label>3.2.2.</label>
        <title>Regularization <italic>via</italic> deterministic annealing   </title>
        <p>The high-fluence AMO reconstruction (Fig. 8<xref ref-type="fig" rid="fig8"> ▸</xref>) assembles patterns of very high signal-to-noise ratio. Hence, starting the algorithm from random initial models can cause the iterative reconstruction to behave erratically (see Appendix <italic>F</italic>
<xref ref-type="app" rid="appf"/>). This can be avoided by starting with a low β, as described in §2.3<xref ref-type="sec" rid="sec2.3"/>, which reduces the propensity for erratic updates between EMC iterations. In this particular case, β was 0.001 for the first ten iterations. Once this intermediate reconstruction converged, we gradually doubled β every ten iterations to restore the speckles to the highest contrast allowable by the data and likelihood model. The black dashed lines in Fig. 8<xref ref-type="fig" rid="fig8"> ▸</xref> represent the iterations when β was doubled. After 80 iterations, the rotation-group refinement level was increased from six to nine, and continued for another ten iterations (see §3.2.1<xref ref-type="sec" rid="sec3.2.1"/> for rotation-group refinement). It is evident in Fig. 8<xref ref-type="fig" rid="fig8"> ▸</xref> that the speckle features in the reconstructed intensities sharpen when β rises back near unity.</p>
        <p>In the software package, one can either increase β manually after a few iterations and restart the reconstruction, or use the hidden option <monospace>beta_schedule</monospace> in <monospace>config.ini</monospace>. This second option takes two whitespace-separated numbers, <monospace>beta_jump</monospace> and <monospace>beta_period</monospace>; β is multiplied by a factor of <monospace>beta_jump</monospace> every <monospace>beta_period</monospace> iterations.</p>
      </sec>
    </sec>
  </sec>
  <sec id="sec4">
    <label>4.</label>
    <title>Conclusions and future work   </title>
    <p>Future work can be divided broadly into the two main use cases, namely simulations and experimental data. For simulations, we plan to include support for non-uniform background distributions, both for data generation and to be used as <italic>a priori</italic> knowledge during the reconstruction. We also plan to include realistic distributions for incident fluence fluctuations. One significant challenge in single-molecule imaging is the heterogeneity of the particles between patterns. For particles with a few conformation classes, one can reconstruct multiple three-dimensional model intensities simultaneously by solving for both the orientation and the class index (Loh, 2012<xref ref-type="bibr" rid="bb16"> ▸</xref>). We plan to implement this for both the data-generation pipeline and the EMC code.</p>
    <p>To deal with experimental data, we will add utilities to convert current experimental data to the sparse <monospace>emc</monospace> format. Similar utilities will be provided to generate detector files from a variety of formats currently employed to describe the experimental geometry. The ability to deal with a known structured background, mentioned above, would also be valuable for experimental data: the user would be able to provide a measured ‘background file’ to the reconstruction code. There are also plans to incorporate single-particle reconstruction while learning and rejecting an initially unknown background (Loh, 2014<xref ref-type="bibr" rid="bb17"> ▸</xref>).</p>
  </sec>
  <sec id="sec5">
    <label>5.</label>
    <title>Access to EMC   </title>
    <p>The source code for this software package can be downloaded from <ext-link ext-link-type="uri" xlink:href="http://duaneloh.github.io/Dragonfly/">http://duaneloh.github.io/Dragonfly/</ext-link> and is distributed under the terms of the GNU General Public License (GPL, Version 3; <ext-link ext-link-type="uri" xlink:href="http://www.gnu.org/licenses/gpl">http://www.gnu.org/licenses/gpl</ext-link>). Instructions to run a basic simulation are available in the <monospace>README</monospace> file available with the repository. In addition, one can find detailed up-to-date documentation in the repository wiki accessible at <ext-link ext-link-type="uri" xlink:href="http://github.com/duaneloh/Dragonfly/wiki">http://github.com/duaneloh/Dragonfly/wiki</ext-link>. This wiki includes descriptions of all the options available for each of the modules and utilities supplied in the package.</p>
    <p>The modules and utilities are written in C and Python 2.7. The C files require the following libraries to compile: <italic>mpi</italic>, <italic>openmp</italic> and the GNU Scientific Library (<ext-link ext-link-type="uri" xlink:href="http://www.gnu.org/software/gsl">http://www.gnu.org/software/gsl</ext-link>). The Python files need Python version 2.7.x to run, and the non-standard libraries <italic>NumPy</italic> and <italic>SciPy</italic> (<ext-link ext-link-type="uri" xlink:href="http://www.scipy.org">http://www.scipy.org</ext-link>).</p>
  </sec>
</body>
<back>
  <fn-group>
    <fn id="fn1">
      <label>1</label>
      <p>This article will form part of a virtual special issue of the journal on free-electron laser software.</p>
    </fn>
  </fn-group>
  <ack>
    <p>The authors thank the referees for their careful reading of the manuscript and helpful suggestions. NDL is grateful for support from the Lee Kuan Yew Endowment Fund, for funding by Singapore’s Ministry of Education Tier-1 (grant No. R-154-000-606-112) and for support from the IT facility at the National University of Singapore’s Centre for Bio-Imaging Sciences. TYL and VE are grateful for support from US Department of Energy grant No. DE-SC0005827. KA acknowledges the support of the Helmholtz Association through project-oriented funds.</p>
  </ack>
  <app-group>
    <app id="appa">
      <label>Appendix A </label>
      <title>Computing speckle sampling on the detector</title>
      <p>We use a spherical approximation to estimate the size of diffraction speckles from a scatterer. A sphere of radius <italic>R<sub>p</sub></italic> produces diffraction intensities <disp-formula id="fd8"><graphic xlink:href="j-49-01320-efd8.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>with dimensionless spatial resolution <inline-formula><inline-graphic xlink:href="j-49-01320-efi16.jpg" mimetype="image" mime-subtype="gif"/></inline-formula>, where we define <inline-formula><inline-graphic xlink:href="j-49-01320-efi17.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> = 2sin(φ/2)/λ as the spatial frequency commonly used in structural biology. Here, φ and λ are the scattering angle and photon wavelength, respectively (see Fig. 1<xref ref-type="fig" rid="fig1"> ▸</xref>). The width of a diffraction speckle of this spherical approximation is the separation in <inline-formula><inline-graphic xlink:href="j-49-01320-efi18.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> between the zeros of equation (8)<xref ref-type="disp-formula" rid="fd8"/>. These zeros occur when <disp-formula id="fd9"><graphic xlink:href="j-49-01320-efd9.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>which approaches <inline-formula><inline-graphic xlink:href="j-49-01320-efi19.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> (2<italic>n</italic> + 1)π/2, where <inline-formula><inline-graphic xlink:href="j-49-01320-efi20.jpg" mimetype="image" mime-subtype="gif"/></inline-formula>, for large <inline-formula><inline-graphic xlink:href="j-49-01320-efi21.jpg" mimetype="image" mime-subtype="gif"/></inline-formula>. As a result, for large <inline-formula><inline-graphic xlink:href="j-49-01320-efi21.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> the separation between the zeros of equation (8)<xref ref-type="disp-formula" rid="fd8"/>
<inline-formula><inline-graphic xlink:href="j-49-01320-efi23.jpg" mimetype="image" mime-subtype="gif"/></inline-formula>, which results in a speckle width <disp-formula id="fd10"><graphic xlink:href="j-49-01320-efd10.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>Referring to Fig. 1<xref ref-type="fig" rid="fig1"> ▸</xref>, the coarsest spacings between the spatial frequency samples occur at small scattering angles and are inversely proportional to the field of view <italic>L</italic>, or <inline-formula><inline-graphic xlink:href="j-49-01320-efi24.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> ≃ 1/<italic>L</italic>.</p>
      <p>The sampling ratio of the diffraction speckle is defined as<disp-formula id="fd11"><graphic xlink:href="j-49-01320-efd11.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>where <italic>l</italic>
<sub>D</sub> is the width of the detector pixel and <italic>z</italic>
<sub>D</sub> is the separation between the detector and the interaction region (see Figs. 1<xref ref-type="fig" rid="fig1"> ▸</xref> or 9<xref ref-type="fig" rid="fig9"> ▸</xref>). While the ideal sampling ratio of the diffraction speckles should exceed two, the time and memory required for intensity reconstruction rises rapidly when this ratio becomes excessively large (<italic>e.g.</italic>
<inline-formula><inline-graphic xlink:href="j-49-01320-efi25.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> ≫ 5).</p>
    </app>
    <app id="appb">
      <label>Appendix B </label>
      <title>Solid-angle and polarization correction for square pixels on planar detectors</title>
      <sec id="secb1">
        <label>b1.</label>
        <title>Solid-angle correction   </title>
        <p>In this section we compute the solid angle ΔΩ subtended by a square pixel of area <italic>l</italic>
<sub>D</sub> × <italic>l</italic>
<sub>D</sub> about the point where a scatterer sits (see Fig. 9<xref ref-type="fig" rid="fig9"> ▸</xref>). To a first approximation, the solid angle ΔΩ ≃ cos(θ)ΔφΔθ. We use the following relations to estimate Δφ and Δθ. On a detector <italic>z</italic>
<sub>D</sub> from the interaction point, the spherical coordinate representation of a pixel at Cartesian coodinate {<italic>x</italic>, <italic>y</italic>, <italic>z</italic>
<sub>D</sub>} is <disp-formula id="fd12"><graphic xlink:href="j-49-01320-efd12.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>where ρ = (<italic>y</italic>
<sup>2</sup> + <inline-formula><inline-graphic xlink:href="j-49-01320-efi26.jpg" mimetype="image" mime-subtype="gif"/></inline-formula>)<sup>1/2</sup>. Differentiating sin(φ) with respect to φ gives <disp-formula id="fd13"><graphic xlink:href="j-49-01320-efd13.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>Repeating this for θ, where <disp-formula id="fd14"><graphic xlink:href="j-49-01320-efd14.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>with <italic>R</italic> = (<italic>x</italic>
<sup>2</sup> + <italic>y</italic>
<sup>2</sup> + <inline-formula><inline-graphic xlink:href="j-49-01320-efi27.jpg" mimetype="image" mime-subtype="gif"/></inline-formula>)<sup>1/2</sup>, leads to <disp-formula id="fd15"><graphic xlink:href="j-49-01320-efd15.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>Combining the two and simplifying, we obtain the solid angle subtended by the square pixel as <disp-formula id="fd16"><graphic xlink:href="j-49-01320-efd16.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>
</p>
      </sec>
      <sec id="secb2">
        <label>b2.</label>
        <title>Polarization correction   </title>
        <p>Consider the case where the incident beam is polarized along the <inline-formula><inline-graphic xlink:href="j-49-01320-efi28.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> = {1, 0, 0} direction in Fig. 9<xref ref-type="fig" rid="fig9"> ▸</xref>. This polarization reduces the scattered intensity by a factor <italic>P</italic> = 1 − |<inline-formula><inline-graphic xlink:href="j-49-01320-efi29.jpg" mimetype="image" mime-subtype="gif"/></inline-formula>(<italic>x</italic>, <italic>y</italic>, <italic>z</italic>
<sub>D</sub>)|<sup>2</sup>, where <inline-formula><inline-graphic xlink:href="j-49-01320-efi30.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> is the unit-norm vector from the scatterer (placed at {0, 0, 0}) to the pixel located at {<italic>x</italic>, <italic>y</italic>, <italic>z</italic>
<sub>D</sub>}. Notice that we can also write <italic>P</italic> = cos<sup>2</sup>θ, or entirely in the terms of the pixel’s coordinates<disp-formula id="fd17"><graphic xlink:href="j-49-01320-efd17.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>Similarly, when this polarization is along the <inline-formula><inline-graphic xlink:href="j-49-01320-efi31.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> direction, the intensity reduction due to polarization becomes <disp-formula id="fd18"><graphic xlink:href="j-49-01320-efd18.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>
</p>
      </sec>
    </app>
    <app id="appc">
      <label>Appendix C </label>
      <title>Pattern-wise intensity scale factor updates</title>
      <p>In many real-world applications, the incident fluence on each particle will be different. The original implementation of EMC in the paper by Loh &amp; Elser (2009<xref ref-type="bibr" rid="bb20"> ▸</xref>) assumes uniform incident fluence. Here, we derive the likelihood maximizing update rule employed in this package when the <monospace>need_scaling</monospace> option is turned on. The approach used is similar to that employed by Loh <italic>et al.</italic> (2010<xref ref-type="bibr" rid="bb18"> ▸</xref>), except here we use a Poisson rather than a Gaussian probability model. Let φ<sub><italic>d</italic></sub> be a scale factor which is proportional to the fluence incident on the particle in pattern <italic>d</italic>. Thus, equations (3)<xref ref-type="disp-formula" rid="fd3"/> and (2)<xref ref-type="disp-formula" rid="fd2"/> become <disp-formula id="fd19"><graphic xlink:href="j-49-01320-efd19.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>and<disp-formula id="fd20"><graphic xlink:href="j-49-01320-efd20.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>In expectation maximization, one updates the intensity tomograms, <italic>W</italic>′, and fluence, φ′, by maximizing the model log-likelihood: <disp-formula id="fd21"><graphic xlink:href="j-49-01320-efd21.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>Here, <italic>P<sub>dr</sub></italic> are the probabilities calculated using the current models <italic>W</italic> and φ. Unfortunately, an analytical update rule that simultaneously updates both these quantities is not available. Instead, we use the strategy of updating one while keeping the other constant. Setting partial derivatives with respect to <italic>W</italic>′ and φ′ equal to zero, we obtain <disp-formula id="fd22"><graphic xlink:href="j-49-01320-efd22.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>
<disp-formula id="fd23"><graphic xlink:href="j-49-01320-efd23.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>This modification to the update rule in equation (5)<xref ref-type="disp-formula" rid="fd5"/> is used when the user expects variable incident fluence on the particle.</p>
    </app>
    <app id="appd">
      <label>Appendix D </label>
      <title>Mapping the detector onto the Ewald sphere</title>
      <p>We outline how pixels depicted in Fig. 9<xref ref-type="fig" rid="fig9"> ▸</xref> are mapped onto the Ewald sphere during elastic scattering. Suppose the incident X-ray beam travels along the <inline-formula><inline-graphic xlink:href="j-49-01320-efi32.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> direction, comprising photons of wavelength λ. This direct unscattered beam has a reciprocal vector (crystallographers’ convention) <disp-formula id="fd24"><graphic xlink:href="j-49-01320-efd24.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>Now consider a pixel on the detector whose center is {<italic>x</italic>, <italic>y</italic>, <italic>z</italic>
<sub>D</sub>} away from the scatterer in the laboratory frame. When a photon is elastically scattered by the scatterer to this pixel, the photon has an approximate (because of the finite size of the pixel) reciprocal vector <disp-formula id="fd25"><graphic xlink:href="j-49-01320-efd25.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>Hence, this pixel measures the kinematic diffraction intensities of the scatterer at a spatial frequency <disp-formula id="fd26"><graphic xlink:href="j-49-01320-efd26.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>As a consequence of equation (26)<xref ref-type="disp-formula" rid="fd26"/>, pixels on a planar detector are mapped onto a curved surface known as the Ewald sphere, and this intersects the scatterer’s zero spatial frequency. The influence of this Ewald sphere curvature becomes more prominent as the sample-to-detector distance <italic>z</italic>
<sub>D</sub> is reduced.</p>
      <p>The mapping in equation (26)<xref ref-type="disp-formula" rid="fd26"/> applies to any arbitrary set of pixels, each with their own {<italic>x</italic>, <italic>y</italic>, <italic>z</italic>
<sub>D</sub>} values, even if they span several non-contiguous detector tiles with custom gaps or missing regions. In general, the EMC algorithm permits such an arbitrary collection of pixels as long as they are properly specified in the <monospace>detector.dat</monospace> file. Although three-dimensional iterative phase retrieval may suffer from these missing pixels in the desired spatial frequency range, they do not affect the intensity assembly <italic>via</italic> EMC.</p>
      <p>Finally, the highlighted pixel in Fig. 9<xref ref-type="fig" rid="fig9"> ▸</xref> could be a collection of pixels binned as an effective ‘super-pixel’. This provision is useful when working with experimental data collected with overly redundant speckle oversampling. Here, down-sampling or binning pixels to create larger ‘super-pixels’ can be computer- and memory-efficient for EMC. However, the user should be aware that over-binning can result in a blurred real-space contrast from phase retrieval.</p>
    </app>
    <app id="appe">
      <label>Appendix E </label>
      <title>Memory requirements</title>
      <p>In this section we estimate the amount of random access memory (RAM) needed for EMC reconstructions of various sizes and signal levels. Note that, because of implementation differences, the requirements of this software package differ from those originally described by Loh &amp; Elser (2009<xref ref-type="bibr" rid="bb20"> ▸</xref>).</p>
      <p>From Table 2<xref ref-type="table" rid="table2"> ▸</xref>, we see that the important size scales in a reconstruction can be expressed in powers of <inline-formula><inline-graphic xlink:href="j-49-01320-efi6.jpg" mimetype="image" mime-subtype="gif"/></inline-formula>, the dimensionless resolution of the recovered particle (defined in Appendix <italic>A</italic>
<xref ref-type="app" rid="appa"/>). Naturally, more memory is needed when reconstructing to higher dimensionless resolutions. Equivalently, the ‘speckle complexity’ of such reconstructions in reciprocal space also increases with resolution (compare Figs. 6<xref ref-type="fig" rid="fig6"> ▸</xref> and 7<xref ref-type="fig" rid="fig7"> ▸</xref>).</p>
      <p>From Table 2<xref ref-type="table" rid="table2"> ▸</xref>, note that the number of conditional probabilities computed by EMC scales like <italic>M</italic>
<sub>prob</sub> ≃ <inline-formula><inline-graphic xlink:href="j-49-01320-efi34.jpg" mimetype="image" mime-subtype="gif"/></inline-formula>, which grows the fastest of all the parameter size factors. In the examples listed in Tables 3<xref ref-type="table" rid="table3"> ▸</xref> and 4<xref ref-type="table" rid="table4"> ▸</xref>, the memory needed to store the sparse frames and the three-dimensional model <italic>W</italic> is many megabytes (MB) per MPI process. However, many gigabytes (GB) to terabytes (TB) of memory are needed to store the conditional probabilities <italic>P<sub>dr</sub></italic> computed by EMC. Currently, this package stores these probabilities in RAM, but future versions may write them to disk if necessary.</p>
    </app>
    <app id="appf">
      <label>Appendix F </label>
      <title>Orientation instability at high signal levels</title>
      <p>The EMC algorithm is capable of searching for three-dimensional diffraction volumes that maximize the likelihood of measuring a set of data frames. The performance of this algorithm is influenced by two considerations. The first is the ‘likelihood landscape’ of this problem: whether there are locally maximal false solutions that can trap the EMC search, and whether the family of true solutions are also global maxima. The second consideration is search dynamics: the time needed to reach these likelihood maxima, and the meta-stability of the local maxima. Although we cannot anticipate how these two considerations will affect all EMC reconstructions, this section gives a flavor of their importance.</p>
      <sec id="secf1">
        <label>f1.</label>
        <title>Overfitting from having too few high-signal patterns   </title>
        <p>Here we consider a case when the global maximum is not the true solution. Suppose only two high-signal two-dimensional patterns are measured, {<italic>A</italic>
<sub><italic>t</italic></sub>} and {<italic>B<sub>t</sub></italic>}, where the index <italic>t</italic> labels the <italic>M</italic>
<sub>pix</sub> detector pixels of each pattern. We further assume that each pattern is diffracted from separate copies of the three-dimensional object at exactly the same orientation in the laboratory frame. However, despite their identical orientations, these two patterns will be quantitatively different because they are different noisy realizations of the same two-dimensional pattern. Two types of converged outcome are possible:</p>
        <p>(i) place the two two-dimensional patterns at the same orientation and average over them, or</p>
        <p>(ii) place them at two distinct orientations, such that the patterns only intersect along a one-dimensional ‘common arc’ in the three-dimensional volume.</p>
        <p>To simplify case (i), we assume that both patterns adopt the same orientation. Hence, the log-likelihood of measuring {<italic>B<sub>t</sub></italic>}, given that the underlying pattern with <italic>M</italic>
<sub>pix</sub> pixels averages over {<italic>A<sub>t</sub></italic>} and {<italic>B<sub>t</sub></italic>} under a Poissonian noise model, is <disp-formula id="fd27"><graphic xlink:href="j-49-01320-efd27.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>where the inequality arises because of Stirling’s approximation (log<italic>n</italic>! ≃ <italic>n</italic>log<italic>n</italic> − <italic>n</italic>, if <italic>n</italic> ≫ 1, and also log<italic>n</italic>! ≥ <italic>n</italic>log<italic>n</italic> − <italic>n</italic>) and approaches equality when <italic>A<sub>t</sub></italic> ≫ 1 and <italic>B<sub>t</sub></italic> ≫ 1 at high fluence. The complementary likelihood of <inline-formula><inline-graphic xlink:href="j-49-01320-efi35.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> simply switches the <italic>A</italic> and <italic>B</italic> labels in equation (27)<xref ref-type="disp-formula" rid="fd27"/>, giving the combined log-likelihood of both patterns sharing the same orientation as <disp-formula id="fd28"><graphic xlink:href="j-49-01320-efd28.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>where α(<italic>A<sub>t</sub></italic>, <italic>B<sub>t</sub></italic>) denotes the expression inside curly brackets on the previous line. Using Gibbs’ inequality, <inline-formula><inline-graphic xlink:href="j-49-01320-efi36.jpg" mimetype="image" mime-subtype="gif"/></inline-formula>, where equality occurs when <italic>p<sub>t</sub></italic> = <italic>q<sub>t</sub></italic>, and averaging over all possible values of <italic>A</italic> and <italic>B</italic>, we expect <disp-formula id="fd29"><graphic xlink:href="j-49-01320-efd29.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>Hence, the combined likelihood <inline-formula><inline-graphic xlink:href="j-49-01320-efi37.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> in equation (28)<xref ref-type="disp-formula" rid="fd28"/> must be negative and scales with the number of pixels <italic>M</italic>
<sub>pix</sub>.</p>
        <p>Case (ii) has a similar calculation, except that the pixels are separated into two categories: those that lie on the common line between the two oriented patterns, <italic>M</italic>
<sub>com</sub>, and those that do not, denoted <italic>M</italic>
<sub>sep</sub> = <italic>M</italic>
<sub>pix</sub> − <italic>M</italic>
<sub>com</sub>. Ignoring corrections due to interpolating these patterns into the three-dimensional volume, it is straightforward to show that the log-likelihood of measuring patterns {<italic>A<sub>t</sub></italic>} and {<italic>B<sub>t</sub></italic>} when they are placed in different orientations is <disp-formula id="fd30"><graphic xlink:href="j-49-01320-efd30.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>From equations (28)<xref ref-type="disp-formula" rid="fd28"/>, (29)<xref ref-type="disp-formula" rid="fd29"/> and (30)<xref ref-type="disp-formula" rid="fd30"/> it is clear that, on average <disp-formula id="fd31"><graphic xlink:href="j-49-01320-efd31.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>and <disp-formula id="fd32"><graphic xlink:href="j-49-01320-efd32.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>where <italic>f</italic> increases monotonically with the average photon count on the pixels |<italic>A</italic>| and |<italic>B</italic>|. Evidently, the incorrect ‘apart’ solution maximizes the likelihood here and belongs to the family of three-dimensional models that over-fit limited measured data. (Any well separated pair of orientations could be a maximum likelihood result as are, trivially, global rotations of these.)</p>
      </sec>
      <sec id="secf2">
        <label>f2.</label>
        <title>Erratic EMC updates with many high-signal patterns   </title>
        <p>In this section, we describe why the iterative orientation discovery in EMC can be erratic when the signal levels from patterns are very high. This erratic behavior explains, in part, why the regularization routine in §3.2.2<xref ref-type="sec" rid="sec3.2.2"/> was invoked.</p>
        <p>The log-likelihood that a set of pixels on a pattern <italic>K</italic> was measured given a tomogram intensity <italic>W</italic>(Ω) can be decomposed into sums over zero and nonzero photon pixels:<disp-formula id="fd33"><graphic xlink:href="j-49-01320-efd33.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>This log-likelihood is never greater than zero. This is because 1 − <italic>x</italic> + log<italic>x</italic> ≤ 0, <italic>K<sub>t</sub></italic> ≥ 0 and <italic>W</italic>(Ω)<sub><italic>t</italic></sub> ≥ 0, since photon counts and the tomograms updated by equation (5)<xref ref-type="disp-formula" rid="fd5"/> are each always positive.</p>
        <p>For a pattern with a very high signal, the conditional probability distribution has a very narrow peak around the most likely orientation Ω<sup>best</sup>. From equation (33)<xref ref-type="disp-formula" rid="fd33"/>, the log-likelihood of <italic>K</italic> against a well matched orientation tomogram in the model, <italic>W</italic>(Ω), will yield modestly negative values for Σ<sub>0</sub> and Σ<sub>1</sub>. This is because their photon and intensity values, {<italic>K<sub>t</sub></italic>} and {<italic>W</italic>(Ω)<sub><italic>t</italic></sub>}, respectively, are also closely matched. However, when the signal levels on the data frames are high, a mismatched high-signal <italic>K</italic> and <italic>W</italic>(Ω) pair will give very negative log-likelihoods. As a result, the most likely <italic>K</italic> + <italic>W</italic>(Ω<sup>best</sup>) pair will be deemed very much more likely than pairings of <italic>K</italic> with any other <italic>W</italic>(Ω).</p>
        <p>While a narrow orientation distribution for data frames is generally desired, the difficulty starts when the entire three-dimensional model <italic>W</italic> is far away from the true three-dimensional model. This scenario usually occurs during the first few iterations of an EMC reconstruction starting from a random initial <italic>W</italic>. Despite the erroneousness of <italic>W</italic>, the conditional probability of each data frame over the orientations will still have a narrow peak, for reasons similar to those presented above. Hence, the re-orientation of data frames within <italic>W</italic> by an EMC iteration happens resolutely and, in its wake, causes low-intensity wedge-like volumes to appear in the updated <italic>W</italic>′ (see Fig. 10<xref ref-type="fig" rid="fig10"> ▸</xref>), purely due to random fluctuations.</p>
        <p>These low-intensity wedges form convergence traps for the algorithm. When <italic>W</italic> is far from the solution, its tomograms <italic>W</italic>(Ω) will be composed of randomly rotated and averaged subsets of the data frames. This results in very negative values of Σ<sub>0</sub> in <inline-formula><inline-graphic xlink:href="j-49-01320-efi38.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> for many frames <italic>K</italic>. Comparatively, any low-intensity wedges in the three-dimensional model contain sets of <italic>W</italic>(Ω<sup>dark</sup>) that yield much more positive Σ<sub>0</sub> and will cause the <italic>K</italic> frames to be resolutely re-assigned to these Ω<sup>dark</sup> orientations at the end of the EMC iteration. This resolute movement may in turn open up new low-intensity wedges in <italic>W</italic>. Further low-intensity wedges that do not resemble any <italic>K</italic> will ‘attract’ and result in yet another set of randomly rotated and averaged subsets of the data frames, paving the way for the next round of orientation re-assignment. This behavior results in erratic updates between EMC iterations, where low-intensity wedges will suddenly appear then disappear within a few iterations.</p>
        <p>Incidentally, this erratic behavior should not occur when <italic>W</italic> is near the true solution, because data frames <italic>K</italic> then have no incentive to move away from their correctly determined orientations or create low-intensity wedges in <italic>W</italic>. Also, when the signal is lower, the orientation distributions are broader in the first few iterations, avoiding these wedges.</p>
        <p>While enough random erratic updates may eventually yield the solution intensities, this iterative search can be relaxed using the β parameter in §3.2.2<xref ref-type="sec" rid="sec3.2.2"/>, which ‘spreads out’ these narrow peaks in the likelihood distributions. This way, low-intensity wedge-like volumes are less likely to appear in <italic>W</italic>′. Empirically, we note that this regularization can greatly improve the stability of the iterations towards the true intensities, even when the data frames have very high signal levels. Once <italic>W</italic> iteratively converges to the neighborhood of the true solution, then β can be raised back to 1.</p>
      </sec>
    </app>
  </app-group>
  <ref-list>
    <title>References</title>
    <ref id="bb1">
      <mixed-citation publication-type="other">Aquila, A. <italic>et al.</italic> (2015). <italic>Struct. Dyn.</italic>
<bold>2</bold>, 041701.</mixed-citation>
    </ref>
    <ref id="bb2">
      <mixed-citation publication-type="other">Ayyer, K., Geloni, G., Kocharyan, V., Saldin, E., Serkez, S., Yefanov, O. &amp; Zagorodnov, I. (2015). <italic>Struct. Dyn.</italic>
<bold>2</bold>, 041702.</mixed-citation>
    </ref>
    <ref id="bb3">
      <mixed-citation publication-type="other">Ayyer, K., Philipp, H. T., Tate, M. W., Elser, V. &amp; Gruner, S. M. (2014). <italic>Opt. Express</italic>, <bold>22</bold>, 2403–2413.</mixed-citation>
    </ref>
    <ref id="bb4">
      <mixed-citation publication-type="other">Ayyer, K., Philipp, H. T., Tate, M. W., Wierman, J. L., Elser, V. &amp; Gruner, S. M. (2015). <italic>IUCrJ</italic>, <bold>2</bold>, 29–34.</mixed-citation>
    </ref>
    <ref id="bb5">
      <mixed-citation publication-type="other">Barty, A., Kirian, R. A., Maia, F. R. N. C., Hantke, M., Yoon, C. H., White, T. A. &amp; Chapman, H. (2014). <italic>J. Appl. Cryst.</italic>
<bold>47</bold>, 1118–1131.</mixed-citation>
    </ref>
    <ref id="bb6">
      <mixed-citation publication-type="other">Bhyravbhatla, B., Watowich, S. J. &amp; Caspar, D. L. (1998). <italic>Biophys. J.</italic>
<bold>74</bold>, 604–615.</mixed-citation>
    </ref>
    <ref id="bb7">
      <mixed-citation publication-type="other">Donatelli, J. J., Zwart, P. H. &amp; Sethian, J. A. (2015). <italic>Proc. Natl Acad. Sci. USA</italic>, <bold>112</bold>, 10286–10291.</mixed-citation>
    </ref>
    <ref id="bb8">
      <mixed-citation publication-type="other">Ekeberg, T. <italic>et al.</italic> (2015). <italic>Phys. Rev. Lett.</italic>
<bold>114</bold>, 098102.</mixed-citation>
    </ref>
    <ref id="bb9">
      <mixed-citation publication-type="other">Emma, P. <italic>et al.</italic> (2010). <italic>Nat. Photonics</italic>, <bold>4</bold>, 641–647.</mixed-citation>
    </ref>
    <ref id="bb10">
      <mixed-citation publication-type="other">Ferguson, K. R. <italic>et al.</italic> (2015). <italic>J. Synchrotron Rad.</italic>
<bold>22</bold>, 492–497.</mixed-citation>
    </ref>
    <ref id="bb11">
      <mixed-citation publication-type="other">Fung, R., Shneerson, V., Saldin, D. K. &amp; Ourmazd, A. (2008). <italic>Nat. Phys.</italic>
<bold>5</bold>, 64–67.</mixed-citation>
    </ref>
    <ref id="bb12">
      <mixed-citation publication-type="other">Gatsogiannis, C. &amp; Markl, J. (2009). <italic>J. Mol. Biol.</italic>
<bold>385</bold>, 963–983.</mixed-citation>
    </ref>
    <ref id="bb13">
      <mixed-citation publication-type="other">Hart, P. <italic>et al.</italic> (2012). <italic>Proc. SPIE</italic>, <bold>8504</bold>, 85040C.</mixed-citation>
    </ref>
    <ref id="bb14">
      <mixed-citation publication-type="other">Kam, Z. (1977). <italic>Macromolecules</italic>, <bold>10</bold>, 927–934.</mixed-citation>
    </ref>
    <ref id="bb15">
      <mixed-citation publication-type="other">Liang, M. <italic>et al.</italic> (2015). <italic>J. Synchrotron Rad.</italic>
<bold>22</bold>, 514–519.</mixed-citation>
    </ref>
    <ref id="bb16">
      <mixed-citation publication-type="other">Loh, N. D. (2012). <italic>Proc. SPIE</italic>, <bold>8500</bold>, 85000K.</mixed-citation>
    </ref>
    <ref id="bb17">
      <mixed-citation publication-type="other">Loh, N. D. (2014). <italic>Philos. Trans. R. Soc. London Ser. B</italic>, <bold>369</bold>, 20130328.</mixed-citation>
    </ref>
    <ref id="bb18">
      <mixed-citation publication-type="other">Loh, N. D., Bogan, M. <italic>et al.</italic> (2010). <italic>Phys. Rev. Lett.</italic>
<bold>104</bold>, 225501.</mixed-citation>
    </ref>
    <ref id="bb20">
      <mixed-citation publication-type="other">Loh, N. D. &amp; Elser, V. (2009). <italic>Phys. Rev. E</italic>, <bold>80</bold>, 026705.</mixed-citation>
    </ref>
    <ref id="bb19">
      <mixed-citation publication-type="other">Loh, N. D., Starodub, D. <italic>et al.</italic> (2013). <italic>Opt. Express</italic>, <bold>21</bold>, 12385–12394.</mixed-citation>
    </ref>
    <ref id="bb21">
      <mixed-citation publication-type="other">Neutze, R., Wouts, R., van der Spoel, D., Weckert, E. &amp; Hajdu, J. (2000). <italic>Nature</italic>, <bold>406</bold>, 752–757.</mixed-citation>
    </ref>
    <ref id="bb22">
      <mixed-citation publication-type="other">Philipp, H. T., Ayyer, K., Tate, M. W., Elser, V. &amp; Gruner, S. M. (2012). <italic>Opt. Express</italic>, <bold>20</bold>, 13129–13137.</mixed-citation>
    </ref>
    <ref id="bb23">
      <mixed-citation publication-type="other">Philipp, H. T., Hromalik, M., Tate, M., Koerner, L. &amp; Gruner, S. M. (2011). <italic>Nucl. Instrum. Methods Phys. Res. Sect. A</italic>, <bold>649</bold>, 67–69.</mixed-citation>
    </ref>
    <ref id="bb24">
      <mixed-citation publication-type="other">Saldin, D. K., Poon, H. C., Shneerson, V. L., Howells, M., Chapman, H. N., Kirian, R. A., Schmidt, K. E. &amp; Spence, J. C. H. (2010). <italic>Phys. Rev. B</italic>, <bold>81</bold>, 174105.</mixed-citation>
    </ref>
    <ref id="bb25">
      <mixed-citation publication-type="other">Schwander, P., Giannakis, D., Yoon, C. H. &amp; Ourmazd, A. (2012). <italic>Opt. Express</italic>, <bold>20</bold>, 12827–12849.</mixed-citation>
    </ref>
    <ref id="bb26">
      <mixed-citation publication-type="other">Strüder, L. <italic>et al.</italic> (2010). <italic>Nucl. Instrum. Methods Phys. Res. Sect. A</italic>, <bold>614</bold>, 483–496.</mixed-citation>
    </ref>
    <ref id="bb27">
      <mixed-citation publication-type="other">Ueda, N. &amp; Nakano, R. (1998). <italic>Neural Netw.</italic>
<bold>11</bold>, 271–282.</mixed-citation>
    </ref>
    <ref id="bb28">
      <mixed-citation publication-type="other">Wierman, J. L., Lan, T.-Y., Tate, M. W., Philipp, H. T., Elser, V. &amp; Gruner, S. M. (2016). <italic>IUCrJ</italic>, <bold>3</bold>, 43–50.</mixed-citation>
    </ref>
  </ref-list>
</back>
<floats-group>
  <fig id="fig1" position="float">
    <label>Figure 1</label>
    <caption>
      <p>(<italic>a</italic>) The experimental geometry of single-particle imaging adopted in the data-stream simulator. (<italic>b</italic>) This simulator implements a planar square detector comprising <italic>d</italic> × <italic>d</italic> square pixels, each of area <inline-formula><inline-graphic xlink:href="j-49-01320-efi5.jpg" mimetype="image" mime-subtype="gif"/></inline-formula>. The detector is positioned at <italic>z</italic>
<sub>D</sub> from the X-ray interaction region, where (<italic>c</italic>) the scatterer (depicted here as a sphere of radius <italic>R<sub>p</sub></italic>) is typically an electron-density map sampled from a Protein Data Bank file. From these, one can compute the maximum scattering angle captured by the detector, subtended by grey triangles in part (<italic>a</italic>) to either the edge or corner of the detector. Here, we take this maximum angle φ<sub>max</sub> as the latter. Combined with the incident photon wavelength λ, this allows us to determine the half-period resolution, <italic>a</italic>, from the detector’s edge, which is equivalent to the length of the voxel (red) in the reconstructed electron-density map.</p>
    </caption>
    <graphic xlink:href="j-49-01320-fig1"/>
  </fig>
  <fig id="fig2" position="float">
    <label>Figure 2</label>
    <caption>
      <p><italic>Dragonfly</italic> flowchart to simulate a data set and perform a reconstruction starting from a sample PDB file and a configuration file, <monospace>config.ini</monospace>, with information about the experimental setup. Input and output are shown as text, and modules as blue boxes. The large white rectangle defines the data-stream simulator.</p>
    </caption>
    <graphic xlink:href="j-49-01320-fig2"/>
  </fig>
  <fig id="fig3" position="float">
    <label>Figure 3</label>
    <caption>
      <p><italic>Dragonfly</italic> flowchart to process experimental data in sparse format. Information about the experimental parameters is placed in the configuration file <monospace>config.ini</monospace> and the detector geometry is in <monospace>detector.dat</monospace>. The formats of all three input files are described in §2.5<xref ref-type="sec" rid="sec2.5"/>. Notice that the difference between this workflow and that shown in Fig. 2<xref ref-type="fig" rid="fig2"> ▸</xref> is in how the data are generated.</p>
    </caption>
    <graphic xlink:href="j-49-01320-fig3"/>
  </fig>
  <fig id="fig4" position="float">
    <label>Figure 4</label>
    <caption>
      <p>A typical configuration file, describing various parameters used to perform a basic simulation and reconstruction using the KLH1 (<monospace>4BED.pdb</monospace>) molecule on the AMO beamline. These parameters are to be compared with the numbers in Table 1<xref ref-type="table" rid="table1"> ▸</xref>.</p>
    </caption>
    <graphic xlink:href="j-49-01320-fig4"/>
  </fig>
  <fig id="fig5" position="float">
    <label>Figure 5</label>
    <caption>
      <p>Six blocks in the sparse binary data format for 50 patterns. The data are stored contiguously but shown here in row-major format (<italic>i.e.</italic> to be read from left to right, then down the rows). Each square represents a 32-bit integer. The two integers in the header block are the number of patterns, followed by the number of pixels in the detector. The colors in blocks three to six connect listings of the same pattern. Details given in §2.5.3<xref ref-type="sec" rid="sec2.5.3"/>.</p>
    </caption>
    <graphic xlink:href="j-49-01320-fig5"/>
  </fig>
  <fig id="fig6" position="float">
    <label>Figure 6</label>
    <caption>
      <p>Convergence of diffraction speckle features in a simulated AMO single-particle experiment (parameters listed in Table 1<xref ref-type="table" rid="table1"> ▸</xref>). In each row we render central slices of the three-dimensional diffraction intensities recovered from KLH1 during an EMC reconstruction, after one, ten, 20 and 50 iterations in ascending row order. (Bottom row) Additional diagnostics on the reconstructed three-dimensional diffraction model. (Left) The r.m.s. change in the three-dimensional model. (Middle) Mutual information and log-likelihood of the model. (Right) The most likely orientations of all the patterns.</p>
    </caption>
    <graphic xlink:href="j-49-01320-fig6"/>
  </fig>
  <fig id="fig7" position="float">
    <label>Figure 7</label>
    <caption>
      <p>Rotation-group refinement for a simulated reconstruction of TMV on the CXI endstation (see Table 1<xref ref-type="table" rid="table1"> ▸</xref>). Shown here are the central sections of the reconstructed three-dimensional diffraction volume of TMV after 55 iterations. With 90 Intel Xeon X7542 (2.67 GHz) cores, this full reconstruction took less than 6 h, taking 15 min for each of the slowest refinement iterations using 204 960 rotation-group samples. Red dashed lines in the r.m.s. model change mark when the refinement level of the rotation group was increased by one. In the bottom right-hand plot, rows are colored by each photon pattern’s most likely orientation number, which stabilizes after 20 iterations and thereafter quickly re-stabilizes when we increase the rotation-group refinement. The rows (pattern indices) are sorted according to the most likely orientation indices of the last iteration in each rotation-sampling block, which produces a smooth color spectrum along this final column. Since the number of quaternions (quat) increases with rotation refinement, blocks of higher refinement show a wider color spectrum. See §3.2.1<xref ref-type="sec" rid="sec3.2.1"/> for details.</p>
    </caption>
    <graphic xlink:href="j-49-01320-fig7"/>
  </fig>
  <fig id="fig8" position="float">
    <label>Figure 8</label>
    <caption>
      <p>Deterministic annealing in a simulated reconstruction on the AMO endstation with high photon fluence (see Table 1<xref ref-type="table" rid="table1"> ▸</xref>). This reconstruction was performed by doubling the β parameter (§3.2.2<xref ref-type="sec" rid="sec3.2.2"/>) every ten iterations, starting from β = 0.001. Doublings occur at the dashed black lines in the diagnostic plots in the bottom row, where the ten-iteration interval was chosen to allow the intermediate reconstructions to stabilize. This stabilization can be judged by the asymptotic saturation of the average mutual information in every β block. After 80 iterations (β = 0.256), this increase was stopped as there did not seem to be much further improvement in the average mutual information. After this, the rotational sampling rate was increased from six to the target of nine. As in the CXI reconstruction (Fig. 7<xref ref-type="fig" rid="fig7"> ▸</xref>), this was done in order to save computational time by doing fewer iterations at the highest sampling.</p>
    </caption>
    <graphic xlink:href="j-49-01320-fig8"/>
  </fig>
  <fig id="fig9" position="float">
    <label>Figure 9</label>
    <caption>
      <p>Setup for solid-angle correction. We compute the solid angle subtended by the square pixel (red) on the detector plane (grey). The scatterer (blue sphere) is set at the origin of this figure.</p>
    </caption>
    <graphic xlink:href="j-49-01320-fig9"/>
  </fig>
  <fig id="fig10" position="float">
    <label>Figure 10</label>
    <caption>
      <p>Low-intensity wedge-like volumes appear in the EMC-reconstructed volume with very high signal data frames (most frames contain more than 10<sup>4</sup> photons). The simulation parameters are listed in Table 1<xref ref-type="table" rid="table1"> ▸</xref> as AMO (high). We reconstructed with rotation-group refinement <italic>n</italic> = 5 and with β = 1 (annealing turned off). In descending order down the rows, the panels show the central sections of the updated model after one, five, ten and 100 iterations, and the lower panels show the diagnostics for 100 iterations (plots described in the caption to Fig. 6<xref ref-type="fig" rid="fig6"> ▸</xref>).</p>
    </caption>
    <graphic xlink:href="j-49-01320-fig10"/>
  </fig>
  <table-wrap id="table1" position="float">
    <label>Table 1</label>
    <caption>
      <title>Parameters for EMC reconstructions of simulated single-particle imaging</title>
    </caption>
    <table frame="hsides" rules="groups">
      <thead valign="bottom">
        <tr>
          <th style="border-bottom:1px solid black;" rowspan="1" colspan="1" align="left" valign="bottom"> </th>
          <th style="border-bottom:1px solid black;" rowspan="1" colspan="1" align="left" valign="bottom">AMO (low)</th>
          <th style="border-bottom:1px solid black;" rowspan="1" colspan="1" align="left" valign="bottom">CXI</th>
          <th style="border-bottom:1px solid black;" rowspan="1" colspan="1" align="left" valign="bottom">AMO (high)</th>
        </tr>
      </thead>
      <tbody valign="top">
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">Photon energy (keV)</td>
          <td rowspan="1" colspan="1" align="left" valign="top">2.0</td>
          <td rowspan="1" colspan="1" align="left" valign="top">7.0</td>
          <td rowspan="1" colspan="1" align="left" valign="top">2.0</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">λ, photon wavelength (Å)</td>
          <td rowspan="1" colspan="1" align="left" valign="top">6.2</td>
          <td rowspan="1" colspan="1" align="left" valign="top">1.77</td>
          <td rowspan="1" colspan="1" align="left" valign="top">6.2</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top"><italic>z</italic><sub>D</sub>, detector distance (mm)</td>
          <td rowspan="1" colspan="1" align="left" valign="top">300</td>
          <td rowspan="1" colspan="1" align="left" valign="top">350</td>
          <td rowspan="1" colspan="1" align="left" valign="top">290</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top"><italic>d</italic>, detector size (pixel)</td>
          <td rowspan="1" colspan="1" align="left" valign="top">150</td>
          <td rowspan="1" colspan="1" align="left" valign="top">150</td>
          <td rowspan="1" colspan="1" align="left" valign="top">150</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top"><italic>l</italic><sub>D</sub>, pixel side length (mm)</td>
          <td rowspan="1" colspan="1" align="left" valign="top">0.512</td>
          <td rowspan="1" colspan="1" align="left" valign="top">0.751</td>
          <td rowspan="1" colspan="1" align="left" valign="top">0.512</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top"><italic>L</italic>, full field of view (nm)</td>
          <td rowspan="1" colspan="1" align="left" valign="top">363</td>
          <td rowspan="1" colspan="1" align="left" valign="top">82.4</td>
          <td rowspan="1" colspan="1" align="left" valign="top">351</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">Beamstop radius (pixels)</td>
          <td rowspan="1" colspan="1" align="left" valign="top">10.0</td>
          <td rowspan="1" colspan="1" align="left" valign="top">8.0</td>
          <td rowspan="1" colspan="1" align="left" valign="top">10.0</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">Fluence (photons µm<sup>−2</sup>)</td>
          <td rowspan="1" colspan="1" align="left" valign="top">1 × 10<sup>10</sup>
<xref ref-type="table-fn" rid="tfn1">†</xref>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top">1 × 10<sup>12</sup>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top">
            <bold>3.1 × 10<sup>12</sup></bold>
          </td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top"><italic>a</italic>, half-period resolution<xref ref-type="table-fn" rid="tfn2">‡</xref> (nm)</td>
          <td rowspan="1" colspan="1" align="left" valign="top">2.45</td>
          <td rowspan="1" colspan="1" align="left" valign="top">0.56</td>
          <td rowspan="1" colspan="1" align="left" valign="top">2.5</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">Particle</td>
          <td rowspan="1" colspan="1" align="left" valign="top">KLH1<xref ref-type="table-fn" rid="tfn3">§</xref>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top">TMV<xref ref-type="table-fn" rid="tfn4">¶</xref>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top">KLH1<xref ref-type="table-fn" rid="tfn3">§</xref>
</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">Mass (MDa)</td>
          <td rowspan="1" colspan="1" align="left" valign="top">7.3</td>
          <td rowspan="1" colspan="1" align="left" valign="top">1.3</td>
          <td rowspan="1" colspan="1" align="left" valign="top">7.3</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top"><italic>R<sub>p</sub></italic>, particle radius (nm)</td>
          <td rowspan="1" colspan="1" align="left" valign="top">18.9</td>
          <td rowspan="1" colspan="1" align="left" valign="top">9.3</td>
          <td rowspan="1" colspan="1" align="left" valign="top">18.9</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top"><inline-formula><inline-graphic xlink:href="j-49-01320-efi6.jpg" mimetype="image" mime-subtype="gif"/></inline-formula><xref ref-type="table-fn" rid="tfn5">††</xref>, dimensionless radius</td>
          <td rowspan="1" colspan="1" align="left" valign="top">7.7</td>
          <td rowspan="1" colspan="1" align="left" valign="top">16.6</td>
          <td rowspan="1" colspan="1" align="left" valign="top">7.6</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">σ, speckle sampling<xref ref-type="table-fn" rid="tfn6">‡‡</xref>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top">9.6</td>
          <td rowspan="1" colspan="1" align="left" valign="top">4.45</td>
          <td rowspan="1" colspan="1" align="left" valign="top">9.2</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top"><italic>N</italic>, mean photons per frame</td>
          <td rowspan="1" colspan="1" align="left" valign="top">90</td>
          <td rowspan="1" colspan="1" align="left" valign="top">90</td>
          <td rowspan="1" colspan="1" align="left" valign="top">
            <bold>2.8 × 10<sup>4</sup></bold>
          </td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">No. of data frames</td>
          <td rowspan="1" colspan="1" align="left" valign="top">3 × 10<sup>5</sup>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top">5 × 10<sup>5</sup>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top">1 × 10<sup>5</sup>
</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">Max. quaternion sampling<xref ref-type="table-fn" rid="tfn7">§§</xref>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top">9</td>
          <td rowspan="1" colspan="1" align="left" valign="top">16 </td>
          <td rowspan="1" colspan="1" align="left" valign="top">9</td>
        </tr>
      </tbody>
    </table>
    <table-wrap-foot>
      <fn id="tfn1">
        <label>†</label>
        <p>Estimated from Fig. 4 in the paper by Loh <italic>et al.</italic> (2013<xref ref-type="bibr" rid="bb19"> ▸</xref>).</p>
      </fn>
      <fn id="tfn2">
        <label>‡</label>
        <p>Resolution defined from the detector edge.</p>
      </fn>
      <fn id="tfn3">
        <label>§</label>
        <p>Keyhole limpet haemocyanin 1.</p>
      </fn>
      <fn id="tfn4">
        <label>¶</label>
        <p>Four-layer tobacco mosaic virus.</p>
      </fn>
      <fn id="tfn5">
        <label>††</label>
        <p>Dimensionless radius, <italic>R<sub>p</sub></italic>/<italic>a</italic>.</p>
      </fn>
      <fn id="tfn6">
        <label>‡‡</label>
        <p>Defined as <inline-formula><inline-graphic xlink:href="j-49-01320-efi7.jpg" mimetype="image" mime-subtype="gif"/></inline-formula>. See Appendix <italic>A</italic>
<xref ref-type="app" rid="appa"/>.</p>
      </fn>
      <fn id="tfn7">
        <label>§§</label>
        <p>The sampling and criterion are defined in Appendix <italic>C</italic>
<xref ref-type="app" rid="appc"/> and Section VII of Loh &amp; Elser (2009<xref ref-type="bibr" rid="bb20"> ▸</xref>), respectively.</p>
      </fn>
    </table-wrap-foot>
  </table-wrap>
  <table-wrap id="table2" position="float">
    <label>Table 2</label>
    <caption>
      <title>How the sizes of parameters in reconstructions scale with a particle’s dimensionless resolution <inline-formula><inline-graphic xlink:href="j-49-01320-efi6.jpg" mimetype="image" mime-subtype="gif"/></inline-formula>
</title>
    </caption>
    <table frame="hsides" rules="groups">
      <thead valign="bottom">
        <tr>
          <th style="border-bottom:1px solid black;" rowspan="1" colspan="1" align="left" valign="bottom">Parameter</th>
          <th style="border-bottom:1px solid black;" rowspan="1" colspan="1" align="left" valign="bottom">Scales as</th>
        </tr>
      </thead>
      <tbody valign="top">
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">No. of detector pixels<xref ref-type="table-fn" rid="tfn8">†</xref>, <italic>M</italic>
<sub>tomo</sub>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top">
            <inline-formula>
              <inline-graphic xlink:href="j-49-01320-efi9.jpg" mimetype="image" mime-subtype="gif"/>
            </inline-formula>
          </td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">No. of rotation-group samples<xref ref-type="table-fn" rid="tfn9">‡</xref>, <italic>M</italic>
<sub>rot</sub>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top">
            <inline-formula>
              <inline-graphic xlink:href="j-49-01320-efi10.jpg" mimetype="image" mime-subtype="gif"/>
            </inline-formula>
          </td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">No. of data frames<xref ref-type="table-fn" rid="tfn10"/>, <italic>M</italic>
<sub>data</sub>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top"><italic>S</italic><sup>2</sup><italic>M</italic><sub>rot</sub>/<italic>N</italic> = <inline-formula><inline-graphic xlink:href="j-49-01320-efi11.jpg" mimetype="image" mime-subtype="gif"/></inline-formula>
</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">No. of conditional probabilities, <italic>M</italic>
<sub>prob</sub>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top"><italic>M</italic><sub>data</sub><italic>M</italic><sub>rot</sub> = <inline-formula><inline-graphic xlink:href="j-49-01320-efi12.jpg" mimetype="image" mime-subtype="gif"/></inline-formula>
</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">No. of model voxels per MPI process<xref ref-type="table-fn" rid="tfn11"/>, <italic>M<sub>W</sub></italic>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top">
            <inline-formula>
              <inline-graphic xlink:href="j-49-01320-efi13.jpg" mimetype="image" mime-subtype="gif"/>
            </inline-formula>
          </td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">No. of sparse data entries per MPI process<xref ref-type="table-fn" rid="tfn12"/>, <italic>M</italic>
<sub>sp</sub>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top">≤<italic>NM</italic>
<sub>data</sub>
</td>
        </tr>
      </tbody>
    </table>
    <table-wrap-foot>
      <fn id="tfn8">
        <label>†</label>
        <p>The speckle sampling, σ, is defined in Appendix <italic>A</italic>
<xref ref-type="app" rid="appa"/>.</p>
      </fn>
      <fn id="tfn9">
        <label>‡</label>
        <p>The sampling and criterion are defined in Appendix <italic>C</italic>
<xref ref-type="app" rid="appc"/> and Section VII of Loh &amp; Elser (2009<xref ref-type="bibr" rid="bb20"> ▸</xref>), respectively.</p>
      </fn>
      <fn id="tfn10">
        <label>§</label>
        <p>Signal-to-noise ratio, <italic>S</italic>, defined in equation (6)<xref ref-type="disp-formula" rid="fd6"/>.</p>
      </fn>
      <fn id="tfn11">
        <label>¶</label>
        <p>Model represented as a dense cubic array.</p>
      </fn>
      <fn id="tfn12">
        <label>††</label>
        <p>See sparse data format in §2.5.3<xref ref-type="sec" rid="sec2.5.3"/>.</p>
      </fn>
    </table-wrap-foot>
  </table-wrap>
  <table-wrap id="table3" position="float">
    <label>Table 3</label>
    <caption>
      <title>Memory requirements for modest-fidelity reconstruction: <italic>S</italic> = 10, <italic>N</italic> = 100 and σ = 5</title>
      <p>The different variables are explained in Table 2<xref ref-type="table" rid="table2"> ▸</xref>.</p>
    </caption>
    <table frame="hsides" rules="groups">
      <thead valign="bottom">
        <tr>
          <th style="border-bottom:1px solid black;" rowspan="1" colspan="1" align="left" valign="bottom">
            <inline-formula>
              <inline-graphic xlink:href="j-49-01320-efi6.jpg" mimetype="image" mime-subtype="gif"/>
            </inline-formula>
          </th>
          <th style="border-bottom:1px solid black;" rowspan="1" colspan="1" align="left" valign="bottom">
            <italic>M</italic>
            <sub>data</sub>
          </th>
          <th style="border-bottom:1px solid black;" rowspan="1" colspan="1" align="left" valign="bottom">
            <italic>M</italic>
            <sub>rot</sub>
          </th>
          <th style="border-bottom:1px solid black;" rowspan="1" colspan="1" align="left" valign="bottom"><italic>M</italic><sub>sp</sub> (MB)</th>
          <th style="border-bottom:1px solid black;" rowspan="1" colspan="1" align="left" valign="bottom"><italic>M</italic><sub><italic>W</italic></sub> (MB)</th>
          <th style="border-bottom:1px solid black;" rowspan="1" colspan="1" align="left" valign="bottom"><italic>M</italic><sub>prob</sub> (GB)</th>
        </tr>
      </thead>
      <tbody valign="top">
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">5</td>
          <td rowspan="1" colspan="1" align="left" valign="top">6300</td>
          <td rowspan="1" colspan="1" align="left" valign="top">6300</td>
          <td rowspan="1" colspan="1" align="left" valign="top">4.81</td>
          <td rowspan="1" colspan="1" align="left" valign="top">0.953</td>
          <td rowspan="1" colspan="1" align="left" valign="top">0.296</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">10</td>
          <td rowspan="1" colspan="1" align="left" valign="top">50100</td>
          <td rowspan="1" colspan="1" align="left" valign="top">50100</td>
          <td rowspan="1" colspan="1" align="left" valign="top">38.2</td>
          <td rowspan="1" colspan="1" align="left" valign="top">7.63</td>
          <td rowspan="1" colspan="1" align="left" valign="top">18.7</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">15</td>
          <td rowspan="1" colspan="1" align="left" valign="top">168900</td>
          <td rowspan="1" colspan="1" align="left" valign="top">168900</td>
          <td rowspan="1" colspan="1" align="left" valign="top">129</td>
          <td rowspan="1" colspan="1" align="left" valign="top">25.7</td>
          <td rowspan="1" colspan="1" align="left" valign="top">213</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">20</td>
          <td rowspan="1" colspan="1" align="left" valign="top">400200</td>
          <td rowspan="1" colspan="1" align="left" valign="top">400200</td>
          <td rowspan="1" colspan="1" align="left" valign="top">305</td>
          <td rowspan="1" colspan="1" align="left" valign="top">61.0</td>
          <td rowspan="1" colspan="1" align="left" valign="top">1193</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">25</td>
          <td rowspan="1" colspan="1" align="left" valign="top">781500</td>
          <td rowspan="1" colspan="1" align="left" valign="top">781500</td>
          <td rowspan="1" colspan="1" align="left" valign="top">596</td>
          <td rowspan="1" colspan="1" align="left" valign="top">119</td>
          <td rowspan="1" colspan="1" align="left" valign="top">4550</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">30</td>
          <td rowspan="1" colspan="1" align="left" valign="top">1.35 × 10<sup>6</sup>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top">1.35 × 10<sup>6</sup>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top">1030</td>
          <td rowspan="1" colspan="1" align="left" valign="top">206</td>
          <td rowspan="1" colspan="1" align="left" valign="top">13584</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">35</td>
          <td rowspan="1" colspan="1" align="left" valign="top">2.14 × 10<sup>6</sup>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top">2.14 × 10<sup>6</sup>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top">1635</td>
          <td rowspan="1" colspan="1" align="left" valign="top">327</td>
          <td rowspan="1" colspan="1" align="left" valign="top">34251</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">40</td>
          <td rowspan="1" colspan="1" align="left" valign="top">3.20 × 10<sup>6</sup>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top">3.20 × 10<sup>6</sup>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top">2441</td>
          <td rowspan="1" colspan="1" align="left" valign="top">488</td>
          <td rowspan="1" colspan="1" align="left" valign="top">76313</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">45</td>
          <td rowspan="1" colspan="1" align="left" valign="top">4.56 × 10<sup>6</sup>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top">4.56 × 10<sup>6</sup>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top">3476</td>
          <td rowspan="1" colspan="1" align="left" valign="top">695</td>
          <td rowspan="1" colspan="1" align="left" valign="top">154700</td>
        </tr>
      </tbody>
    </table>
  </table-wrap>
  <table-wrap id="table4" position="float">
    <label>Table 4</label>
    <caption>
      <title>Memory requirements for high-fidelity reconstruction: <italic>S</italic> = 50, <italic>N</italic> = 100 and σ = 5</title>
      <p>The different variables are explained in Table 2<xref ref-type="table" rid="table2"> ▸</xref>.</p>
    </caption>
    <table frame="hsides" rules="groups">
      <thead valign="bottom">
        <tr>
          <th style="border-bottom:1px solid black;" rowspan="1" colspan="1" align="left" valign="bottom">
            <inline-formula>
              <inline-graphic xlink:href="j-49-01320-efi6.jpg" mimetype="image" mime-subtype="gif"/>
            </inline-formula>
          </th>
          <th style="border-bottom:1px solid black;" rowspan="1" colspan="1" align="left" valign="bottom">
            <italic>M</italic>
            <sub>data</sub>
          </th>
          <th style="border-bottom:1px solid black;" rowspan="1" colspan="1" align="left" valign="bottom">
            <italic>M</italic>
            <sub>rot</sub>
          </th>
          <th style="border-bottom:1px solid black;" rowspan="1" colspan="1" align="left" valign="bottom"><italic>M</italic><sub>sp</sub> (MB)</th>
          <th style="border-bottom:1px solid black;" rowspan="1" colspan="1" align="left" valign="bottom"><italic>M</italic><sub><italic>W</italic></sub> (MB)</th>
          <th style="border-bottom:1px solid black;" rowspan="1" colspan="1" align="left" valign="bottom"><italic>M</italic><sub>prob</sub> (GB)</th>
        </tr>
      </thead>
      <tbody valign="top">
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">5</td>
          <td rowspan="1" colspan="1" align="left" valign="top">157500</td>
          <td rowspan="1" colspan="1" align="left" valign="top">6300</td>
          <td rowspan="1" colspan="1" align="left" valign="top">120</td>
          <td rowspan="1" colspan="1" align="left" valign="top">0.953</td>
          <td rowspan="1" colspan="1" align="left" valign="top">7.39</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">10</td>
          <td rowspan="1" colspan="1" align="left" valign="top">1.25 × 10<sup>6</sup>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top">50100</td>
          <td rowspan="1" colspan="1" align="left" valign="top">956</td>
          <td rowspan="1" colspan="1" align="left" valign="top">7.63</td>
          <td rowspan="1" colspan="1" align="left" valign="top">468</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">15</td>
          <td rowspan="1" colspan="1" align="left" valign="top">4.22 × 10<sup>6</sup>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top">168900</td>
          <td rowspan="1" colspan="1" align="left" valign="top">3220</td>
          <td rowspan="1" colspan="1" align="left" valign="top">25.7</td>
          <td rowspan="1" colspan="1" align="left" valign="top">5310</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">20</td>
          <td rowspan="1" colspan="1" align="left" valign="top">1.00 × 10<sup>7</sup>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top">400200</td>
          <td rowspan="1" colspan="1" align="left" valign="top">7630</td>
          <td rowspan="1" colspan="1" align="left" valign="top">61.0</td>
          <td rowspan="1" colspan="1" align="left" valign="top">29800</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">25</td>
          <td rowspan="1" colspan="1" align="left" valign="top">1.95 × 10<sup>7</sup>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top">781500</td>
          <td rowspan="1" colspan="1" align="left" valign="top">14900</td>
          <td rowspan="1" colspan="1" align="left" valign="top">119</td>
          <td rowspan="1" colspan="1" align="left" valign="top">114000</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">30</td>
          <td rowspan="1" colspan="1" align="left" valign="top">3.38 × 10<sup>7</sup>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top">1.35 × 10<sup>6</sup>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top">25800</td>
          <td rowspan="1" colspan="1" align="left" valign="top">205</td>
          <td rowspan="1" colspan="1" align="left" valign="top">340000</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">35</td>
          <td rowspan="1" colspan="1" align="left" valign="top">5.36 × 10<sup>7</sup>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top">2.14 × 10<sup>6</sup>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top">40900</td>
          <td rowspan="1" colspan="1" align="left" valign="top">327</td>
          <td rowspan="1" colspan="1" align="left" valign="top">856000</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">40</td>
          <td rowspan="1" colspan="1" align="left" valign="top">8.00 × 10<sup>7</sup>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top">3.20 × 10<sup>6</sup>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top">61000</td>
          <td rowspan="1" colspan="1" align="left" valign="top">488</td>
          <td rowspan="1" colspan="1" align="left" valign="top">1.91 × 10<sup>6</sup>
</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">45</td>
          <td rowspan="1" colspan="1" align="left" valign="top">1.14 × 10<sup>8</sup>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top">4.56 × 10<sup>6</sup>
</td>
          <td rowspan="1" colspan="1" align="left" valign="top">86900</td>
          <td rowspan="1" colspan="1" align="left" valign="top">695</td>
          <td rowspan="1" colspan="1" align="left" valign="top">3.87 × 10<sup>6</sup>
</td>
        </tr>
      </tbody>
    </table>
  </table-wrap>
</floats-group>

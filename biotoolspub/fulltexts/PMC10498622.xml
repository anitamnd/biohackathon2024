<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">J Cheminform</journal-id>
    <journal-id journal-id-type="iso-abbrev">J Cheminform</journal-id>
    <journal-title-group>
      <journal-title>Journal of Cheminformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1758-2946</issn>
    <publisher>
      <publisher-name>Springer International Publishing</publisher-name>
      <publisher-loc>Cham</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10498622</article-id>
    <article-id pub-id-type="pmid">37700347</article-id>
    <article-id pub-id-type="publisher-id">748</article-id>
    <article-id pub-id-type="doi">10.1186/s13321-023-00748-2</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>pyPept: a python library to generate atomistic 2D and 3D representations of peptides</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Ochoa</surname>
          <given-names>Rodrigo</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Brown</surname>
          <given-names>J. B.</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Fox</surname>
          <given-names>Thomas</given-names>
        </name>
        <address>
          <email>thomas.fox@boehringer-ingelheim.com</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <aff id="Aff1"><institution-wrap><institution-id institution-id-type="GRID">grid.420061.1</institution-id><institution-id institution-id-type="ISNI">0000 0001 2171 7500</institution-id><institution>Medicinal Chemistry, </institution><institution>Boehringer Ingelheim Pharma GmbH &amp; Co KG, </institution></institution-wrap>88397 Biberach/Riss, Germany </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>12</day>
      <month>9</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>12</day>
      <month>9</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2023</year>
    </pub-date>
    <volume>15</volume>
    <elocation-id>79</elocation-id>
    <history>
      <date date-type="received">
        <day>24</day>
        <month>4</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>23</day>
        <month>8</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2023</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <p id="Par1">We present pyPept, a set of executables and underlying python-language classes to easily create, manipulate, and analyze peptide molecules using the FASTA, HELM, or recently-developed BILN notations. The framework enables the analysis of both pure proteinogenic peptides as well as those with non-natural amino acids, including support to assemble a customizable monomer library, without requiring programming. From line notations, a peptide is transformed into a molecular graph for 2D depiction tasks, the calculation of physicochemical properties, and other systematic analyses or processing pipelines. The package includes a module to rapidly generate approximate peptide conformers by incorporating secondary structure restraints either given by the user or predicted via pyPept, and a wrapper tool is also provided to automate the generation and output of 2D and 3D representations of a peptide directly from the line notation. HELM and BILN notations that include circular, branched, or stapled peptides are fully supported, eliminating errors in structure creation that are prone during manual drawing and connecting. The framework and common workflows followed in pyPept are described together with illustrative examples. pyPept has been released at: <ext-link ext-link-type="uri" xlink:href="https://github.com/Boehringer-Ingelheim/pyPept">https://github.com/Boehringer-Ingelheim/pyPept</ext-link>.</p>
      <sec>
        <title>Graphical Abstract</title>
        <p id="Par2">
          <graphic position="anchor" xlink:href="13321_2023_748_Figa_HTML" id="MO1"/>
        </p>
      </sec>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s13321-023-00748-2.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Peptide</kwd>
      <kwd>Python</kwd>
      <kwd>Conformer</kwd>
      <kwd>BILN</kwd>
      <kwd>RDKit</kwd>
      <kwd>Cheminformatics</kwd>
      <kwd>Molecule depiction</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100008349</institution-id>
            <institution>Boehringer Ingelheim</institution>
          </institution-wrap>
        </funding-source>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© Springer Nature Switzerland AG 2023</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Introduction</title>
    <p id="Par3">Peptides as therapeutic or diagnostic agents are a modality with proven translational success in clinical applications; more than 80 drugs on the market are peptide molecules, with others actively in clinical trials [<xref ref-type="bibr" rid="CR1">1</xref>]. In an accompanying fashion, suitable in silico tools to represent, process, and analyze peptides have been steadily published [<xref ref-type="bibr" rid="CR2">2</xref>–<xref ref-type="bibr" rid="CR5">5</xref>].</p>
    <p id="Par4">Among the available open source tools, many are restricted to natural amino acids, but some also support enhancement by a selected set of non-natural amino acids (NNAAs). This is the case for packages available in the Rosetta Commons project [<xref ref-type="bibr" rid="CR6">6</xref>, <xref ref-type="bibr" rid="CR7">7</xref>], the PEPstrMOD webserver [<xref ref-type="bibr" rid="CR8">8</xref>], and the SwissSideChain database [<xref ref-type="bibr" rid="CR9">9</xref>]. Some tools, inspired by full proteins, can fail when dealing with more complex peptidic structures, including staples (e.g., a hydrocarbon chain attached to two amino acids in order to help maintain alpha-helical conformation), non-stapled cyclic peptides, or multi-chain branched peptides [<xref ref-type="bibr" rid="CR10">10</xref>].</p>
    <p id="Par5">For the representation of peptides, the FASTA format is widely used and can be employed, e.g., to calculate peptide properties based on experimentally available physicochemical properties of natural monomers [<xref ref-type="bibr" rid="CR11">11</xref>]. However, it is restricted to natural amino acids and simple peptides without extra bonds such as those involved in formation of cyclic peptides. For example, the natural hormone oxytocin can be represented in FASTA by its sequence CYIQNCPLG, but the ring formed by the disulfide bond between the first and sixth cysteine monomers is not accounted for.</p>
    <p id="Par6">For more complex macromolecular entities, line notations that go beyond the simple FASTA format have been developed. A prominent example is the Hierarchical Editing Language for Macromolecules (HELM) [<xref ref-type="bibr" rid="CR12">12</xref>, <xref ref-type="bibr" rid="CR13">13</xref>]. It relies on a monomer library that defines the individual monomers and their possible connection points. Together with the information on how these monomers are connected, this allows an unambiguous representation of even very complex biomolecular entities in a string. Recently, we described an intuitive line notation termed BILN (Boehringer Ingelheim Line Notation) [<xref ref-type="bibr" rid="CR14">14</xref>], where a simple but, critically, human-readable and robust format allows the representation and manipulation of complex multi-chain peptides including staples and cycles.</p>
    <p id="Par7">In principle, small molecule cheminformatics tools are also applicable to peptides [<xref ref-type="bibr" rid="CR15">15</xref>]. However, they look at the peptide as a whole and neglect its construction principle that it is an ordered sequence of monomers, something that potentially could be used for more efficient computations. In addition, even when these tools offer monomer support, this is usually limited to a hard-coded list of amino acids. RDKit, a widely used open-source package for cheminformatics tasks [<xref ref-type="bibr" rid="CR16">16</xref>], contains functions to process HELM inputs, but only for a set of 48 residues, consisting of the coding L-amino acids, their D-counterparts, and analogs of natural amino acids, specifically norleucine, selenomethionine, ornithine, norvaline, <sc>l</sc>- and <sc>d</sc>-alpha aminobutyric acid, pyroglutamic acid, and the acetyl capping group.</p>
    <p id="Par8">Another largely unsolved issue is the generation of suitable 3D conformations for peptides that can be used as starting points for MD simulations [<xref ref-type="bibr" rid="CR17">17</xref>], mutation pipeline analysis [<xref ref-type="bibr" rid="CR18">18</xref>], or structure-based modeling and drug design. Currently, most tools either focus on structure prediction for whole proteins or small molecules, but they do not cover the middle occupied by medium- to large-sized peptides [<xref ref-type="bibr" rid="CR5">5</xref>].</p>
    <p id="Par9">Finally, pharmaceutical companies generally require the all-atom representation of a molecule for its registration in various databases, and historically molecules have been drawn manually before registration. Even for short peptides such as the 9-mer oxytocin, manual drawing of these structures can be error-prone, and the rate of error grows as peptide molecules evolve to contain longer main chains, staples, cycles, or fatty-acid chains connected to a peptide main chain. There is a clear need for a platform that can take line formats of peptides, including arbitrary NNAAs, and generate correct atomistic representations with no manual intervention.</p>
    <p id="Par10">To fill the void of a toolkit for working with peptides containing arbitrary monomers, unusual connections between monomers, or branching, we developed the python-language toolbox pyPept for handling complex peptides. pyPept is internally based on BILN, but it also can accept FASTA or HELM representations as input. Using a monomer library and the information contained in the input string, atom-level logical connections are validated, and the molecule can optionally be converted into a molecule object. This object can then be used to run typical cheminformatics analyses and predict conformers according to structural restraints. Figure <xref rid="Fig1" ref-type="fig">1</xref> shows a general overview of the package.<fig id="Fig1"><label>Fig. 1</label><caption><p>Summary of pyPept architecture and interfaces. Each monomer is mapped to chemical structure through a monomer dictionary, and monomers are connected by bonds defined for each monomer’s R-groups to yield a sanitized <italic>Sequence</italic> object. Information from the <italic>Sequence</italic> is used to create a <italic>Molecule</italic> object, and two options for 2D depictions are provided. Further, one can predict <italic>Conformer</italic> objects using additional secondary structure restraints. An executable driver program (run_pyPept.py) encapsulates the sequence-to-structure conversion, offering a non-programmatic way to obtain conformers directly from line notations. The solid lines indicate the default run_pyPept.py execution, with supported options shown by dotted arrows</p></caption><graphic xlink:href="13321_2023_748_Fig1_HTML" id="MO2"/></fig></p>
    <p id="Par11">Briefly, the package works as follows. The pyPept <italic>Sequence</italic> class converts the input line notation into a <italic>Sequence</italic> object, which is an ordered list of monomers together with all of the connectivity information necessary to accurately build the molecule. The <italic>Molecule</italic> class takes this <italic>Sequence</italic> object and creates a molecule object with a sanitized 2D representation. The <italic>Conformer</italic> class leverages distance geometry functionality to generate a 3D conformer. Here we found it necessary to provide secondary structure constraints in the 3D generation to obtain conformations that can be close to a bioactive one. Therefore, we developed a method to predict peptide secondary structure elements, which we packaged into the <italic>SecStructPredictor</italic> class. In addition, we developed a helper class <italic>Converter</italic> which can be used to translate from HELM to BILN and back, or to convert a FASTA string into BILN. A wrapper script (run_pyPept.py) is also provided that automates the sequence-to-structure/conformer conversion of a general peptide, thus demonstrating how to connect the individual components, and providing a non-programmatic way to use pyPept by simple command line execution.</p>
  </sec>
  <sec id="Sec2">
    <title>Requirements</title>
    <p id="Par12">pyPept has been written in Python 3.9 using language-standard internal libraries in conjunction with the external packages RDKit [<xref ref-type="bibr" rid="CR16">16</xref>] and BioPython [<xref ref-type="bibr" rid="CR19">19</xref>], both available through a package installer such as Conda. Instructions on how to install pyPept using a setup.py script are provided in the code repository. Examples of execution and direct module calls are given in the repository README file and in a directory “examples” included in the software distribution.</p>
  </sec>
  <sec id="Sec3">
    <title>Methods</title>
    <sec id="Sec4">
      <title>Secondary structure prediction</title>
      <p id="Par13">From the BIOLIP database (version 04.2022) [<xref ref-type="bibr" rid="CR20">20</xref>], we extracted the 8112 bioactive peptides for which secondary structure annotations were returned by the DSSP software [<xref ref-type="bibr" rid="CR21">21</xref>]. The peptides, composed of natural amino acids, are unique sequences showing a diverse set of possible bound conformations, including 30% of helical peptides and 10% forming parallel or anti-parallel beta sheets, even for small peptides of five or six amino acids. They were used to develop a matching algorithm between a query sequence and the bioactive conformers.</p>
      <p id="Par14">Our method compares the query peptide by matching its amino acids to those contained in database sequences, where a substitution matrix generates the matching score [<xref ref-type="bibr" rid="CR22">22</xref>]. The selected matrix was fitted to capture the similarity between known protein structures and is available in the BioPython package [<xref ref-type="bibr" rid="CR19">19</xref>]. We chose to not allow alignment gaps, thus, the comparisons are made between fragments of the same length. Therefore, if the query sequence is shorter than the database sequence, we compare it with fragments of the database sequence. Inversely, when the database sequence is shorter than the query sequence, the query sequence is fragmented to obtain peptides of the same length.</p>
      <p id="Par15">In practical applications, we recommend a peptide query length in the range of 5–20 amino acids, given that the reference set of bound peptides from BIOLIP has a maximum length of 30 amino acids. For each comparison between sequences <italic>A</italic> and <italic>B</italic>, we calculate a similarity score using the selected substitution matrix and normalize it by:<disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_{AB}=\frac{score_{AB}}{\sqrt{score_{AA}*score_{BB}}}$$\end{document}</tex-math><mml:math id="M2" display="block"><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi mathvariant="italic">AB</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>s</mml:mi><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:msub><mml:mi>e</mml:mi><mml:mrow><mml:mi mathvariant="italic">AB</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:msqrt><mml:mrow><mml:mi>s</mml:mi><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:msub><mml:mi>e</mml:mi><mml:mrow><mml:mi mathvariant="italic">AA</mml:mi></mml:mrow></mml:msub><mml:mrow/><mml:mo>∗</mml:mo><mml:mi>s</mml:mi><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:msub><mml:mi>e</mml:mi><mml:mrow><mml:mi mathvariant="italic">BB</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msqrt></mml:mfrac></mml:mrow></mml:math><graphic xlink:href="13321_2023_748_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq1"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$score_{AB}$$\end{document}</tex-math><mml:math id="M4"><mml:mrow><mml:mi>s</mml:mi><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:msub><mml:mi>e</mml:mi><mml:mrow><mml:mi mathvariant="italic">AB</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq1.gif"/></alternatives></inline-formula> is the alignment score between the two peptides, and <inline-formula id="IEq2"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$score_{AA}$$\end{document}</tex-math><mml:math id="M6"><mml:mrow><mml:mi>s</mml:mi><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:msub><mml:mi>e</mml:mi><mml:mrow><mml:mi mathvariant="italic">AA</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq2.gif"/></alternatives></inline-formula> and <inline-formula id="IEq3"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$score_{BB}$$\end{document}</tex-math><mml:math id="M8"><mml:mrow><mml:mi>s</mml:mi><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:msub><mml:mi>e</mml:mi><mml:mrow><mml:mi mathvariant="italic">BB</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq3.gif"/></alternatives></inline-formula> are the alignment scores for each peptide with itself.</p>
      <p id="Par16">After finding matches above a similarity threshold, a profile with the hits is created, and each amino acid in the query sequence is assigned the most frequent secondary structure element. Using a set of experimental peptide structures with different secondary structure categories, we found a threshold for <inline-formula id="IEq4"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_{AB}$$\end{document}</tex-math><mml:math id="M10"><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi mathvariant="italic">AB</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq4.gif"/></alternatives></inline-formula> in the range of 0.6–0.7 to be suitable (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>).</p>
      <p id="Par17">We also compared the predictions of our method against various state-of-the-art tools such as PSIPRED [<xref ref-type="bibr" rid="CR23">23</xref>], ModPep [<xref ref-type="bibr" rid="CR24">24</xref>], and AlphaFold2 [<xref ref-type="bibr" rid="CR25">25</xref>]. Specifically, we selected a list of 38 peptides available in the PDB with lengths between 8 and 17 amino acids and a diverse set of secondary structure motifs to test the predictions (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S2). We found that the approach described here correctly predicts the secondary structure for most peptides, with 8 of 10 correct predictions for complex motifs based on co-occurring alpha-helix and beta-sheet conformations. This result was on par or better than the methods tested (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S3). Our method can be easily embedded with the rest of the pyPept functionalities. Still further, the user can include secondary structure restraints from any other method or simply by manually providing the expected conformation as exemplified in the “<xref rid="Sec12" ref-type="sec">Typical workflow</xref>” section.</p>
    </sec>
    <sec id="Sec5">
      <title>Monomer library</title>
      <p id="Par18">Allowing arbitrary monomers in a peptide sequence affords monomer definitions that connect the identifiers in the line notation with the underlying chemical structure. In pyPept, we use a dictionary which, for each monomer, contains the following information:<list list-type="bullet"><list-item><p id="Par19">chemical structure</p></list-item><list-item><p id="Par20">connection points</p></list-item><list-item><p id="Par21">possible leaving groups (that are removed when the respective connection points are used in a bond between monomers)</p></list-item><list-item><p id="Par22">the abbreviation to be used in the peptide line notation</p></list-item><list-item><p id="Par23">the natural analog of a monomer, if applicable</p></list-item><list-item><p id="Par24">additional information about a specific monomer such as its role, i.e., amino acid or capping group,</p></list-item><list-item><p id="Par25">its stereochemical SMILES representation, and finally,</p></list-item><list-item><p id="Par26">a corresponding PDB residue code.</p></list-item></list>As per the extensible definition of BILN [<xref ref-type="bibr" rid="CR14">14</xref>], these monomers can be any non-natural amino acid or non-amino acid with annotated leaving groups that will allow the formation of inter-monomer bonds. No assumptions on the type or nature of monomers, or their connections, are made. This allows the formation of additional bonds to describe branched peptides, as well as cyclic peptides using peptide, disulfide, or potentially other types of bonds (see examples in Table <xref rid="Tab1" ref-type="table">1</xref>).</p>
      <p id="Par27">The Pistoia Alliance maintains a dataset of 322 HELM monomers [<xref ref-type="bibr" rid="CR26">26</xref>]. This dataset closely follows the monomer entry (dictionary) format described above; thus, the 322 HELM monomers are adaptable for use in pyPept with only minor conversion effort. For convenience and to remove an entry barrier to apply pyPept, we provide a python script in the repository to convert the HELM monomer dataset into a format suitable for pyPept, as well as a structure definition file (SDF) with this modified monomer information. This can also be used to add proprietary monomers, as long as they are provided as a SDF file in the Pistoia monomer format. Specifically, the user can add the SDF format of the new monomer in the monomers.sdf file, which is located in the “data” folder of pyPept. The SDF requires some tags to allow the correct mapping into the dictionary, including the name of the monomer, the type of monomer (amino acid or capping group), the abbreviated symbol, if the monomer has a natural analog, and the corresponding leaving R-groups to bond other monomers. An example of a monomer entry using the SDF format is provided in the data folder with the name example_preProcessed_monomer.sdf.</p>
      <p id="Par28">We note that in the Pistoia monomer set, no PDB residue names are provided. We chose to use the names reported in the chemical component dictionary [<xref ref-type="bibr" rid="CR27">27</xref>]. If a monomer is not contained in this dictionary, a new random, though nonetheless unique, PDB code is created.</p>
    </sec>
  </sec>
  <sec id="Sec6">
    <title>pyPept design: key classes and examples</title>
    <sec id="Sec7">
      <title>Sequence class</title>
      <p id="Par29">This is the main class of the pyPept package. It converts the input BILN string (or HELM/FASTA transformed by the <italic>Converter</italic> class) into a <italic>Sequence</italic> object. In Table <xref rid="Tab1" ref-type="table">1</xref> we show some examples of peptides using the three input formats, where the FASTA format can be used only to represent natural amino acids, and it includes no information on branching or cyclization.<table-wrap id="Tab1"><label>Table 1</label><caption><p>Examples of peptides using the three input formats BILN [<xref ref-type="bibr" rid="CR14">14</xref>], HELM [<xref ref-type="bibr" rid="CR13">13</xref>], and FASTA</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">BILN</th><th align="left">HELM</th><th align="left">FASTA</th></tr></thead><tbody><tr><td align="left">P-E-P-T-I-D-E</td><td align="left">PEPTIDE1{P.E.P.T.I.D.E}$$$$V2.0</td><td align="left">PEPTIDE</td></tr><tr><td align="left">ac-D-T-H-F-E-I-A-am</td><td align="left">PEPTIDE1{[ac].D.T.H.F.E.I.A.[am]}$$$$V2.0</td><td align="left">None</td></tr><tr><td align="left">C(1,3)-A-A-A-C(1,3)</td><td align="left">PEPTIDE1{C.A.A.A.C} $PEPTIDE1,PEPTIDE1,1:R3-5:R3$$$V2.0</td><td align="left">CAAAC</td></tr><tr><td align="left">C(1,1)-A-A-A-C(1,2)</td><td align="left">PEPTIDE1{C.A.A.A.C} $PEPTIDE1,PEPTIDE1,1:R1-5:R2$$$V2.0</td><td align="left">CAAAC</td></tr><tr><td align="left">A-G-Q-A-A-K(1,3)-E-F-I-A-A.G-L-E-E(1,3)</td><td align="left">PEPTIDE1{A.G.Q.A.A.K.E.F.I.A.A}| PEPTIDE2{G.L.E.E} $PEPTIDE1,PEPTIDE2,6:R3-4:R3$$$V2.0</td><td align="left">None</td></tr><tr><td align="left">N-Iva-F-D-I-meT-N-A-L-W-Y-Aib-K</td><td align="left">PEPTIDE1{N.[Iva].F.D.I.[meT].N.A.L.W.Y.[Aib].K} $$$$V2.0</td><td align="left">None</td></tr></tbody></table><table-wrap-foot><p>BILN’s support for specification of R-groups in bond formation means that linkage types can be easily specified. The BILN notation uses the monomer format <italic>m(n,i)</italic> to indicate that monomer <italic>m</italic> is a part of the cycle or branch assigned ID number <italic>n</italic> and connects via R-group <italic>i</italic> to a paired monomer <italic>p(n,j)</italic>. <italic>i</italic> and <italic>j</italic> can be any R-groups involved in single bond linkage formation. Thus, the cyclization by cysteine linkage [C(1,3)] is by disulfide bond in the third example but by peptide bond [C(1,1), C(1,2)] in the fourth example</p></table-wrap-foot></table-wrap></p>
      <p id="Par30">The <italic>Sequence </italic>object holds a list of dictionaries, with each dictionary containing the necessary information for one monomer in the peptide sequence (see above, Monomer Library). In addition, a <italic>Sequence</italic> object stores the information about which monomers are connected and which atoms form these bonds. A <italic>Sequence</italic> object goes beyond a pair of bonds found in two adjacent amino acids of a linear FASTA sequence and also manages the information necessary for cycles, branches, staples, and other peptide-specific bond structure.</p>
      <p id="Par31">In all monomer structures, the R-groups at connection points that are not involved in bonds are replaced by their correct leaving group (e.g., the R2-group at the C-terminal end of the peptide is replaced by an OH forming the C-terminal carboxylic acid). During this procedure, checks guarantee that the input BILN string is not malformed, that the correct number of bond identifiers are present, and that it only contains monomers included in the monomer library.</p>
      <p id="Par32">As a final processing step, we change the names of the atoms that are part of an amino acid residue and those of the capping groups to follow the IUPAC convention which appends greek letters to the element symbol (e.g., C<inline-formula id="IEq6"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M12"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq6.gif"/></alternatives></inline-formula> as CA, C<inline-formula id="IEq7"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta$$\end{document}</tex-math><mml:math id="M14"><mml:mi>β</mml:mi></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq7.gif"/></alternatives></inline-formula> as CB, hydrogens HB2 and HB3 attached to C<inline-formula id="IEq8"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta$$\end{document}</tex-math><mml:math id="M16"><mml:mi>β</mml:mi></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq8.gif"/></alternatives></inline-formula>). To achieve these changes, the greekify method from the rdkit-to-params package [<xref ref-type="bibr" rid="CR28">28</xref>] was adapted for our needs.</p>
      <p id="Par33">A class method reads the monomer information and stores it in a Pandas DataFrame [<xref ref-type="bibr" rid="CR29">29</xref>] object to allow easy access for the various <italic>Sequence</italic> methods.</p>
    </sec>
    <sec id="Sec8">
      <title>Molecule class</title>
      <p id="Par34">The <italic>Molecule</italic> class contains methods to convert the <italic>Sequence</italic> object into an RDKit ROMol molecule object. To accomplish this, we sequentially take each monomer in the <italic>Sequence</italic> object, merge its RDKit representation with the growing peptide and then add, if applicable, the appropriate bond(s) between the new monomer and the peptide.</p>
      <p id="Par35">To obtain an extended conformation of the peptide without overlapping atoms, the rdDepictor module from RDKit is used [<xref ref-type="bibr" rid="CR30">30</xref>]. Alternatively, we have developed a procedure which changes the phi/psi angles in the protein backbone to obtain an extended 2D conformation and adjusts the torsion between C<inline-formula id="IEq9"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M18"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq9.gif"/></alternatives></inline-formula> and C<inline-formula id="IEq10"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta$$\end{document}</tex-math><mml:math id="M20"><mml:mi>β</mml:mi></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq10.gif"/></alternatives></inline-formula> to obtain an aesthetically pleasing 2D depiction of the peptide without overlapping atoms (see Fig. <xref rid="Fig1" ref-type="fig">1</xref> for an example).</p>
      <p id="Par36">At this point, the 2D peptide object can be exported by a <italic>Molecule</italic> object method to different molecular formats, such as SMILES or SDF.</p>
    </sec>
    <sec id="Sec9">
      <title>SecStructPredictor class</title>
      <p id="Par37">Initial tests showed that the inclusion of secondary structure information is necessary to have a chance of obtaining a 3D structure that is close to the experimental conformation and is suitable for 3D modeling tasks. As this experimental information is often unavailable, and the existing secondary structure prediction tools did not return results sufficiently accurate enough for our purposes when applied to short and medium-length peptides, we decided to develop a similarity-based tool to assign secondary structure motifs to the peptides based on a dataset of bioactive conformers available in the PDB (see Methods section).</p>
      <p id="Par38">The <italic>SecStructPredictor</italic> class collects the functionality to obtain, for a given peptide, a prediction of its secondary structure. Since experimental peptide structures are mostly of natural amino acids, in this protocol, non-natural amino acids are first mutated into their natural analogs, then this mutated peptide is compared with all sequences in the database. To assign the natural analog, pyPept checks first if the information about a natural analog was included in the dictionary. If not, a fingerprint-based similarity run is performed between the monomer of interest and the 20 standard natural residues. A potential natural analog is assigned based on the highest Tanimoto score above a threshold of 0.5. Otherwise, the non-natural amino acid is replaced by an alanine.</p>
      <p id="Par39">After this mapping and search for matching contexts, the secondary structure element for each residue in the original peptide is returned. The secondary structure categories are: B (beta bridge), H (alpha helix), E (beta strand), S (bend), T (turn), and G (3/10 helix). Of course, any other secondary structure prediction tool can be used to generate these annotations and use them to drive pyPept’s conformer generator.</p>
    </sec>
    <sec id="Sec10">
      <title>Conformer class</title>
      <p id="Par40">The <italic>Conformer</italic> class is used to generate a 3D conformer of the peptide. We employ the ETKDGv3 (Experimental-Torsion Knowledge Distance Geometry) method from RDKit followed by minimization of the structure [<xref ref-type="bibr" rid="CR31">31</xref>, <xref ref-type="bibr" rid="CR32">32</xref>].</p>
      <p id="Par41">Using distance geometry without any constraints usually leads to random coil 3D structures. To end up with peptide conformations that are helical, for example, one needs secondary structure information as constraints for the algorithm. As this information often is not available experimentally, we suggest to use a tool to predict the peptide secondary structure. This can be the <italic>SecStructPredictor</italic> class presented above, or any other method.</p>
      <p id="Par42">Based on the input secondary structure elements, fixed distances are assigned in the RDKit-defined distance bounds matrix to force the formation of <inline-formula id="IEq11"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M22"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq11.gif"/></alternatives></inline-formula>-helix or <inline-formula id="IEq12"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta$$\end{document}</tex-math><mml:math id="M24"><mml:mi>β</mml:mi></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq12.gif"/></alternatives></inline-formula>-sheet conformations, which is not a feature available in small molecule-oriented packages such as RDKit. The constraints are complemented by the ETKDGv3 knowledge-based potential to predict the peptide conformers. In the case of non-natural amino acids, the natural analogs (if available in the monomer dictionary) are used to assign the secondary structure element. If no natural analog is available, alanines are used instead. At the end of this processing pipeline, a PDB file can be generated with unique 3-letter residue codes and atom names conforming to the IUPAC rules.</p>
      <p id="Par43">In our experience, this procedure is suitable for sequences shorter than 20 amino acids; for longer sequences, many well-established protein modeling tools are available as well [<xref ref-type="bibr" rid="CR33">33</xref>].</p>
      <p id="Par44">We note that AlphaFold [<xref ref-type="bibr" rid="CR25">25</xref>, <xref ref-type="bibr" rid="CR34">34</xref>] can also predict the conformations of even short peptides, which are often surprisingly close to the experimental bound or free structure. However, this is again a tool that can only deal with natural amino acids. Thus, pre- and post-processing steps are necessary: first, replace the NNAA with a close natural analog; second, conduct the AlphaFold prediction; third, mutate the analog monomer back to the NNAA using the conformer obtained.</p>
    </sec>
    <sec id="Sec11">
      <title>Converter class</title>
      <p id="Par45">The native input format of the <italic>Sequence</italic> class is BILN. To allow one to start from a HELM or FASTA representation, we also provide a format conversion class [<xref ref-type="bibr" rid="CR14">14</xref>]. The <italic>Converter</italic> class allows a two-way conversion between HELM and BILN, and from FASTA to BILN.</p>
    </sec>
  </sec>
  <sec id="Sec12">
    <title>Typical workflows</title>
    <sec id="Sec13">
      <title>API-based workflow</title>
      <p id="Par46">We envision a typical use case in which one wishes to obtain a 2D representation stored in SDF format, starting from a BILN sequence. With the aforementioned pyPept classes, this could look as follows:<graphic position="anchor" xlink:href="13321_2023_748_Figb_HTML" id="MO3"/></p>
      <p id="Par47">From there, a few lines of additional code would then generate a PDB file with a 3D representation of the input peptide, based on the prediction or specified input of its secondary structure:<graphic position="anchor" xlink:href="13321_2023_748_Figc_HTML" id="MO4"/></p>
      <p id="Par48">A graphical summary of this workflow is shown in Fig. <xref rid="Fig2" ref-type="fig">2</xref>.<fig id="Fig2"><label>Fig. 2</label><caption><p>Detailed description of peptide 2D/3D generation from sequence. <bold>a</bold> Main components of the monomer dictionary used to define each BILN component and to allow the generation of peptide bonds between them. In addition, the monomer atoms are named according to the IUPAC convention. <bold>b</bold> Example of a peptide with a non-natural amino acid and the 2D depiction of the RDKit molecular object with modified peptide bond dihedrals to minimize overlapping atoms. <bold>c</bold> Scheme showing the prediction of the secondary structure of the example peptide in (<bold>b</bold>), the addition of restrained distances into the RDKit bound matrix, and the subsequent prediction of the most probable conformer using the ETKDGv3 method</p></caption><graphic xlink:href="13321_2023_748_Fig2_HTML" id="MO5"/></fig></p>
      <p id="Par49">The workflow above is a routine task. To automate this workflow and remove the need for one to implement it themselves, we provide a command line wrapper script which takes the peptide representation and additional options as command-line arguments:<graphic position="anchor" xlink:href="13321_2023_748_Figd_HTML" id="MO6"/></p>
    </sec>
    <sec id="Sec14">
      <title>All-in-one execution</title>
      <p id="Par50">The sequence-to-conformer protocol can be run all at once by executing the provided wrapper script. An example execution using a randomly-generated peptide sequence is as follows:<graphic position="anchor" xlink:href="13321_2023_748_Fige_HTML" id="MO7"/>where the capped peptide in BILN format is used as input (with quotation to avoid any mis-processing by the host operating system), and the RDKit built-in function is used to generate the 2D depiction. As examples, we ran the method with a set of peptides having different features, including the presence of non-natural amino acids, capping groups, and the presence of multiple chains (Fig. <xref rid="Fig3" ref-type="fig">3</xref>). In the second case (Fig. <xref rid="Fig3" ref-type="fig">3</xref>b), the peptide main chain is predicted as partly <inline-formula id="IEq13"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M26"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq13.gif"/></alternatives></inline-formula>-helical based on our conformer prediction method. In the third case (Fig. <xref rid="Fig3" ref-type="fig">3</xref>c), a branched peptide with a bond connection between a lysine and a glutamic acid is shown.<fig id="Fig3"><label>Fig. 3</label><caption><p>Example of peptides formatted with pyPept, sequences are shown in BILN format. <bold>a</bold> Capped peptide with acetyl group at the N-terminal part and an amino group at the C-terminal part. <bold>b</bold> A peptide with three non-natural amino acids highlighted in green (Iva: Isovaline), red (meT: <italic>N</italic>-Methyl-Threonine) and blue (Aib: Alpha-aminoisobutyric acid). In this case, the main peptide was predicted as an <inline-formula id="IEq14"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M28"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq14.gif"/></alternatives></inline-formula>-helix. <bold>c</bold> A peptide with a branch generated between a lysine and a glutamic acid through the third R-group located in their side chains. The bridge is identifiable in both the 2D and 3D representations</p></caption><graphic xlink:href="13321_2023_748_Fig3_HTML" id="MO8"/></fig></p>
    </sec>
  </sec>
  <sec id="Sec15">
    <title>Conclusions</title>
    <p id="Par51">With clinical precedent for their therapeutic benefit, peptides have been and will continue to be actively developed, with increasingly complex topologies, necessitating a complementary infrastructure for peptide information communication (e.g., BILN in presentations or patent applications), automated conversion of the human-communicable format into formats that can be directly submitted to compound registration systems, and for computational chemistry purposes. The pyPept package provides a publicly accessible collaborative effort to achieve these goals, with a low barrier to entry which enables less tech-savvy experimental and design research organizations to maximally benefit. pyPept facilitates the generation of 2D and 3D conformations of a peptide even in the presence of non-natural amino acids, non-amino-acid monomers, branches, and cyclic structures, which are certain to increase as peptide synthesis technologies have continued to improve.</p>
    <p id="Par52">For peptide design teams, they can easily convert a series of peptides stored in a spreadsheet with one monomer per column into matching BILNs. Then, it is straightforward to directly apply the pyPept 2D depiction pipeline and generate 2D representations for all peptides. Since 2D representation is still at the core of the compound registration process for many companies, use of pyPept for systematic representation generation avoids the error-prone manual drawing of peptide structures.</p>
    <p id="Par53">The 3D pipeline produces a peptide structure that can be used as a starting point for MD simulations, structure-based modeling efforts, or other methods to obtain low-energy conformations of the peptide [<xref ref-type="bibr" rid="CR35">35</xref>]. It remains to be clarified, admittedly, how well our procedure predicts the bioactive conformations of peptides. One of the issues is that all secondary structure predictors (as other peptide/protein conformer predictors, including AlphaFold) work based on natural amino acids. The introduction of NNAAs in a post-processing step may completely alter the local conformation and, thus, the overall structure of the peptide. We fully acknowledge the need for a more systematic analysis.</p>
    <p id="Par54">Despite such an aspect, we believe that pyPept is a framework that will facilitate the generation of 2D and 3D structures of complex peptides, reducing human error and accelerating not only drug discovery but all research fields involving peptides.
</p>
    <sec id="Sec16" sec-type="data-availability">
      <title>Data availability</title>
      <p id="Par55"><list list-type="bullet"><list-item><p id="Par56">Project name: pyPept (version 1.0)</p></list-item><list-item><p id="Par57">Project home page: <ext-link ext-link-type="uri" xlink:href="https://github.com/Boehringer-Ingelheim/pyPept">https://github.com/Boehringer-Ingelheim/pyPept</ext-link></p></list-item><list-item><p id="Par58">Operating system(s) tested: Linux</p></list-item><list-item><p id="Par59">Programming language: Python 3.9 or higher</p></list-item><list-item><p id="Par60">Other requirements: RDKit 2020 or later; Biopython 1.7.9 recommended.</p></list-item><list-item><p id="Par61">License: MIT</p></list-item></list>The code is available as a Github repository. Any questions related to the implementation can be directed to the authors’ email accounts.</p>
    </sec>
  </sec>
  <sec sec-type="supplementary-material">
    <sec id="Sec17">
      <title>Supplementary Information</title>
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="13321_2023_748_MOESM1_ESM.pdf">
            <caption>
              <p><bold>Additional file 1.</bold> Validation and assessment of the secondary structure predictor.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher's Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>We thank Alexander Weber, Nils Weskamp, Stefan Peters, and Peter Haebel for helpful discussions, valuable suggestions, and assistance during review of software code.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Author contributions</title>
    <p>RO, JB, and TF created, reviewed and implemented the code, wrote the documentation and the manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>All authors are full time employees at Boehringer Ingelheim Pharma GmbH &amp; Co KG.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar1" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par62">The authors declare that they have no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Muttenthaler</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>King</surname>
            <given-names>GF</given-names>
          </name>
          <name>
            <surname>Adams</surname>
            <given-names>DJ</given-names>
          </name>
          <name>
            <surname>Alewood</surname>
            <given-names>PF</given-names>
          </name>
        </person-group>
        <article-title>Trends in peptide drug discovery</article-title>
        <source>Nat Rev Drug Discov</source>
        <year>2021</year>
        <volume>20</volume>
        <issue>4</issue>
        <fpage>309</fpage>
        <lpage>325</lpage>
        <pub-id pub-id-type="doi">10.1038/s41573-020-00135-8</pub-id>
        <pub-id pub-id-type="pmid">33536635</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Vanhee</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>van der Sloot</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Verschueren</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Serrano</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Rousseau</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Schymkowitz</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Computational design of peptide ligands</article-title>
        <source>Trends Biotechnol</source>
        <year>2011</year>
        <volume>29</volume>
        <issue>5</issue>
        <fpage>231</fpage>
        <lpage>239</lpage>
        <pub-id pub-id-type="doi">10.1016/j.tibtech.2011.01.004</pub-id>
        <pub-id pub-id-type="pmid">21316780</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Uhlig</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Kyprianou</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Martinelli</surname>
            <given-names>FG</given-names>
          </name>
          <name>
            <surname>Oppici</surname>
            <given-names>CA</given-names>
          </name>
          <name>
            <surname>Heiligers</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Hills</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Calvo</surname>
            <given-names>XR</given-names>
          </name>
          <name>
            <surname>Verhaert</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>The emergence of peptides in the pharmaceutical business: from exploration to exploitation</article-title>
        <source>EuPA Open Proteom</source>
        <year>2014</year>
        <volume>4</volume>
        <fpage>58</fpage>
        <lpage>69</lpage>
        <pub-id pub-id-type="doi">10.1016/j.euprot.2014.05.003</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Milton</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Bellamy</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Swayze</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Hart</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Weisser</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Hecht</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Rotstein</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>HELM software for biopolymers</article-title>
        <source>J Chem Inf Model</source>
        <year>2017</year>
        <volume>57</volume>
        <issue>6</issue>
        <fpage>1233</fpage>
        <lpage>1239</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jcim.6b00442</pub-id>
        <pub-id pub-id-type="pmid">28471655</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ochoa</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Cossio</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>PepFun: open source protocols for peptide-related computational analysis</article-title>
        <source>Molecules</source>
        <year>2021</year>
        <volume>26</volume>
        <issue>6</issue>
        <fpage>1664</fpage>
        <pub-id pub-id-type="doi">10.3390/molecules26061664</pub-id>
        <pub-id pub-id-type="pmid">33809815</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mulligan</surname>
            <given-names>VK</given-names>
          </name>
          <name>
            <surname>Workman</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Sun</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Rettie</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Worrall</surname>
            <given-names>LJ</given-names>
          </name>
          <name>
            <surname>Craven</surname>
            <given-names>TW</given-names>
          </name>
          <name>
            <surname>King</surname>
            <given-names>DT</given-names>
          </name>
          <name>
            <surname>Hosseinzadeh</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Watkins</surname>
            <given-names>AM</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Computationally designed peptide macrocycle inhibitors of New Delhi metallo-<inline-formula id="IEq16"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta$$\end{document}</tex-math><mml:math id="M30"><mml:mi>β</mml:mi></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq16.gif"/></alternatives></inline-formula>-lactamase 1</article-title>
        <source>Proc Natl Acad Sci</source>
        <year>2021</year>
        <volume>118</volume>
        <issue>12</issue>
        <fpage>e2012800118</fpage>
        <pub-id pub-id-type="doi">10.1073/pnas.2012800118</pub-id>
        <pub-id pub-id-type="pmid">33723038</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Alam</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Goldstein</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Xia</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Porter</surname>
            <given-names>KA</given-names>
          </name>
          <name>
            <surname>Kozakov</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Schueler-Furman</surname>
            <given-names>O</given-names>
          </name>
        </person-group>
        <article-title>High-resolution global peptide-protein docking using fragments-based piper-flexpepdock</article-title>
        <source>PLoS Comput Biol</source>
        <year>2017</year>
        <volume>13</volume>
        <issue>12</issue>
        <fpage>1005905</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1005905</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Singh</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Singh</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Tuknait</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Chaudhary</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Singh</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Kumaran</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Raghava</surname>
            <given-names>GP</given-names>
          </name>
        </person-group>
        <article-title>Pepstrmod: structure prediction of peptides containing natural, non-natural and modified residues</article-title>
        <source>Biol Direct</source>
        <year>2015</year>
        <volume>10</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>19</lpage>
        <pub-id pub-id-type="doi">10.1186/s13062-015-0103-4</pub-id>
        <pub-id pub-id-type="pmid">25564011</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gfeller</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Michielin</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Zoete</surname>
            <given-names>V</given-names>
          </name>
        </person-group>
        <article-title>Swisssidechain: a molecular and structural database of non-natural sidechains</article-title>
        <source>Nucleic Acids Res</source>
        <year>2012</year>
        <volume>41</volume>
        <issue>D1</issue>
        <fpage>327</fpage>
        <lpage>332</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gks991</pub-id>
        <pub-id pub-id-type="pmid">23104426</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lenci</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Trabocchi</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Peptidomimetic toolbox for drug discovery</article-title>
        <source>Chem Soc Rev</source>
        <year>2020</year>
        <volume>49</volume>
        <issue>11</issue>
        <fpage>3262</fpage>
        <lpage>3277</lpage>
        <pub-id pub-id-type="doi">10.1039/D0CS00102C</pub-id>
        <pub-id pub-id-type="pmid">32255135</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kawashima</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Pokarowski</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Pokarowska</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Kolinski</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Katayama</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Kanehisa</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>AAindex: amino acid index database, progress report 2008</article-title>
        <source>Nucleic Acids Res</source>
        <year>2007</year>
        <volume>36</volume>
        <issue>suppl-1</issue>
        <fpage>202</fpage>
        <lpage>205</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkm998</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhang</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Xi</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Stanton</surname>
            <given-names>RV</given-names>
          </name>
          <name>
            <surname>Rotstein</surname>
            <given-names>SH</given-names>
          </name>
        </person-group>
        <article-title>HELM: a hierarchical notation language for complex biomolecule structure representation</article-title>
        <source>J Chem Inf Model</source>
        <year>2012</year>
        <volume>52</volume>
        <issue>10</issue>
        <fpage>2796</fpage>
        <lpage>2806</lpage>
        <pub-id pub-id-type="doi">10.1021/ci3001925</pub-id>
        <pub-id pub-id-type="pmid">22947017</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <mixed-citation publication-type="other">Pistoia HELM GitHub page. <ext-link ext-link-type="uri" xlink:href="https://github.com/PistoiaHELM">https://github.com/PistoiaHELM</ext-link>. Accessed 2023-01-19</mixed-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fox</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Bieler</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Haebel</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Ochoa</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Peters</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Weber</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>BILN: a human-readable line notation for complex peptides</article-title>
        <source>J Chem Inf Model</source>
        <year>2022</year>
        <volume>62</volume>
        <issue>17</issue>
        <fpage>3942</fpage>
        <lpage>3947</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jcim.2c00703</pub-id>
        <pub-id pub-id-type="pmid">35984937</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tu</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Cheng</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Lu</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Du</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Advancement and prospects of bioinformatics analysis for studying bioactive peptides from food-derived protein: sequence, structure, and functions</article-title>
        <source>TrAC Trends Anal Chem</source>
        <year>2018</year>
        <volume>105</volume>
        <fpage>7</fpage>
        <lpage>17</lpage>
        <pub-id pub-id-type="doi">10.1016/j.trac.2018.04.005</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <mixed-citation publication-type="other">Landrum G RDKit. <ext-link ext-link-type="uri" xlink:href="https://rdkit.org">https://rdkit.org</ext-link>. Accessed 2023-01-19</mixed-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kamenik</surname>
            <given-names>AS</given-names>
          </name>
          <name>
            <surname>Lessel</surname>
            <given-names>U</given-names>
          </name>
          <name>
            <surname>Fuchs</surname>
            <given-names>JE</given-names>
          </name>
          <name>
            <surname>Fox</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Liedl</surname>
            <given-names>KR</given-names>
          </name>
        </person-group>
        <article-title>Peptidic macrocycles—conformational sampling and thermodynamic characterization</article-title>
        <source>J Chem Inf Model</source>
        <year>2018</year>
        <volume>58</volume>
        <issue>5</issue>
        <fpage>982</fpage>
        <lpage>992</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jcim.8b00097</pub-id>
        <pub-id pub-id-type="pmid">29652495</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ochoa</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Soler</surname>
            <given-names>MA</given-names>
          </name>
          <name>
            <surname>Laio</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Cossio</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>PARCE: protocol for amino acid refinement through computational evolution</article-title>
        <source>Comput Phys Commun</source>
        <year>2021</year>
        <volume>260</volume>
        <fpage>107716</fpage>
        <pub-id pub-id-type="doi">10.1016/j.cpc.2020.107716</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cock</surname>
            <given-names>PJ</given-names>
          </name>
          <name>
            <surname>Antao</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Chang</surname>
            <given-names>JT</given-names>
          </name>
          <name>
            <surname>Chapman</surname>
            <given-names>BA</given-names>
          </name>
          <name>
            <surname>Cox</surname>
            <given-names>CJ</given-names>
          </name>
          <name>
            <surname>Dalke</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Friedberg</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Hamelryck</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Kauff</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Wilczynski</surname>
            <given-names>B</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Biopython: freely available python tools for computational molecular biology and bioinformatics</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <issue>11</issue>
        <fpage>1422</fpage>
        <lpage>1423</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp163</pub-id>
        <pub-id pub-id-type="pmid">19304878</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yang</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Roy</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>BioLiP: a semi-manually curated database for biologically relevant ligand–protein interactions</article-title>
        <source>Nucleic Acids Res</source>
        <year>2012</year>
        <volume>41</volume>
        <issue>D1</issue>
        <fpage>1096</fpage>
        <lpage>1103</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gks966</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Frishman</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Argos</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Knowledge-based protein secondary structure assignment</article-title>
        <source>Proteins Struct Funct Bioinform</source>
        <year>1995</year>
        <volume>23</volume>
        <issue>4</issue>
        <fpage>566</fpage>
        <lpage>579</lpage>
        <pub-id pub-id-type="doi">10.1002/prot.340230412</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Johnson</surname>
            <given-names>MS</given-names>
          </name>
          <name>
            <surname>Overington</surname>
            <given-names>JP</given-names>
          </name>
          <name>
            <surname>Blundell</surname>
            <given-names>TL</given-names>
          </name>
        </person-group>
        <article-title>Alignment and searching for common protein folds using a data bank of structural templates</article-title>
        <source>J Mol Biol</source>
        <year>1993</year>
        <volume>231</volume>
        <issue>3</issue>
        <fpage>735</fpage>
        <lpage>752</lpage>
        <pub-id pub-id-type="doi">10.1006/jmbi.1993.1323</pub-id>
        <pub-id pub-id-type="pmid">8515448</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Buchan</surname>
            <given-names>DW</given-names>
          </name>
          <name>
            <surname>Jones</surname>
            <given-names>DT</given-names>
          </name>
        </person-group>
        <article-title>The psipred protein analysis workbench: 20 years on</article-title>
        <source>Nucleic Acids Res</source>
        <year>2019</year>
        <volume>47</volume>
        <issue>W1</issue>
        <fpage>402</fpage>
        <lpage>407</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkz297</pub-id>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yan</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Huang</surname>
            <given-names>S-Y</given-names>
          </name>
        </person-group>
        <article-title>Efficient conformational ensemble generation of protein-bound peptides</article-title>
        <source>J Cheminform</source>
        <year>2017</year>
        <volume>9</volume>
        <issue>1</issue>
        <fpage>59</fpage>
        <pub-id pub-id-type="doi">10.1186/s13321-017-0246-7</pub-id>
        <pub-id pub-id-type="pmid">29168051</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jumper</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Evans</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Pritzel</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Green</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Figurnov</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Ronneberger</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Tunyasuvunakool</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Bates</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Žídek</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Potapenko</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Highly accurate protein structure prediction with AlphaFold</article-title>
        <source>Nature</source>
        <year>2021</year>
        <volume>596</volume>
        <issue>7873</issue>
        <fpage>583</fpage>
        <lpage>589</lpage>
        <pub-id pub-id-type="doi">10.1038/s41586-021-03819-2</pub-id>
        <pub-id pub-id-type="pmid">34265844</pub-id>
      </element-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <mixed-citation publication-type="other">Pistoia HELM monomer dataset. <ext-link ext-link-type="uri" xlink:href="https://github.com/PistoiaHELM/HELMMonomerSets">https://github.com/PistoiaHELM/HELMMonomerSets</ext-link>. Accessed 2023-01-19</mixed-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <mixed-citation publication-type="other">PDB component dictionary. <ext-link ext-link-type="uri" xlink:href="https://www.ebi.ac.uk/pdbe-srv/pdbechem/">https://www.ebi.ac.uk/pdbe-srv/pdbechem/</ext-link>. Accessed 2023-01-19</mixed-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <mixed-citation publication-type="other">RDKit to params. <ext-link ext-link-type="uri" xlink:href="https://github.com/matteoferla/rdkit_to_params">https://github.com/matteoferla/rdkit_to_params</ext-link>. Accessed 2023-01-19</mixed-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>McKinney</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <source>Python for data analysis: data wrangling with Pandas, NumPy, and IPython</source>
        <year>2012</year>
        <publisher-loc>Sebastopol</publisher-loc>
        <publisher-name>O’Reilly Media Inc.</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <mixed-citation publication-type="other">RDKit - rdDepictor documentation. <ext-link ext-link-type="uri" xlink:href="http://rdkit.org/docs/source/rdkit.Chem.rdDepictor.html">http://rdkit.org/docs/source/rdkit.Chem.rdDepictor.html</ext-link>. Accessed 2023-01-19</mixed-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Riniker</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Landrum</surname>
            <given-names>GA</given-names>
          </name>
        </person-group>
        <article-title>Better informed distance geometry: using what we know to improve conformation generation</article-title>
        <source>J Chem Inf Model</source>
        <year>2015</year>
        <volume>55</volume>
        <issue>12</issue>
        <fpage>2562</fpage>
        <lpage>2574</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jcim.5b00654</pub-id>
        <pub-id pub-id-type="pmid">26575315</pub-id>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wang</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Witek</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Landrum</surname>
            <given-names>GA</given-names>
          </name>
          <name>
            <surname>Riniker</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Improving conformer generation for small rings and macrocycles based on distance geometry and experimental torsional-angle preferences</article-title>
        <source>J Chem Inf Model</source>
        <year>2020</year>
        <volume>60</volume>
        <issue>4</issue>
        <fpage>2044</fpage>
        <lpage>2058</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jcim.0c00025</pub-id>
        <pub-id pub-id-type="pmid">32155061</pub-id>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Šali</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Potterton</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Yuan</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>van Vlijmen</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Karplus</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Evaluation of comparative protein modeling by MODELLER</article-title>
        <source>Proteins Struct Funct Bioinf</source>
        <year>1995</year>
        <volume>23</volume>
        <issue>3</issue>
        <fpage>318</fpage>
        <lpage>326</lpage>
        <pub-id pub-id-type="doi">10.1002/prot.340230306</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <mixed-citation publication-type="other">AlphaFold2 GitHub page. <ext-link ext-link-type="uri" xlink:href="https://github.com/deepmind/alphafold">https://github.com/deepmind/alphafold</ext-link>. Accessed 2023-01-19</mixed-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Villard</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Kilic</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Rothlisberger</surname>
            <given-names>U</given-names>
          </name>
        </person-group>
        <article-title>Surrogate based genetic algorithm method for efficient identification of low-energy peptide structures</article-title>
        <source>J Chem Theory Comput</source>
        <year>2023</year>
        <volume>19</volume>
        <issue>3</issue>
        <fpage>1080</fpage>
        <lpage>1097</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jctc.2c01078</pub-id>
        <pub-id pub-id-type="pmid">36692853</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>
<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">J Cheminform</journal-id>
    <journal-id journal-id-type="iso-abbrev">J Cheminform</journal-id>
    <journal-title-group>
      <journal-title>Journal of Cheminformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1758-2946</issn>
    <publisher>
      <publisher-name>Springer International Publishing</publisher-name>
      <publisher-loc>Cham</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10498622</article-id>
    <article-id pub-id-type="pmid">37700347</article-id>
    <article-id pub-id-type="publisher-id">748</article-id>
    <article-id pub-id-type="doi">10.1186/s13321-023-00748-2</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>pyPept: a python library to generate atomistic 2D and 3D representations of peptides</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Ochoa</surname>
          <given-names>Rodrigo</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Brown</surname>
          <given-names>J. B.</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Fox</surname>
          <given-names>Thomas</given-names>
        </name>
        <address>
          <email>thomas.fox@boehringer-ingelheim.com</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <aff id="Aff1"><institution-wrap><institution-id institution-id-type="GRID">grid.420061.1</institution-id><institution-id institution-id-type="ISNI">0000 0001 2171 7500</institution-id><institution>Medicinal Chemistry, </institution><institution>Boehringer Ingelheim Pharma GmbH &amp; Co KG, </institution></institution-wrap>88397 Biberach/Riss, Germany </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>12</day>
      <month>9</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>12</day>
      <month>9</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2023</year>
    </pub-date>
    <volume>15</volume>
    <elocation-id>79</elocation-id>
    <history>
      <date date-type="received">
        <day>24</day>
        <month>4</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>23</day>
        <month>8</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2023</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <p id="Par1">We present pyPept, a set of executables and underlying python-language classes to easily create, manipulate, and analyze peptide molecules using the FASTA, HELM, or recently-developed BILN notations. The framework enables the analysis of both pure proteinogenic peptides as well as those with non-natural amino acids, including support to assemble a customizable monomer library, without requiring programming. From line notations, a peptide is transformed into a molecular graph for 2D depiction tasks, the calculation of physicochemical properties, and other systematic analyses or processing pipelines. The package includes a module to rapidly generate approximate peptide conformers by incorporating secondary structure restraints either given by the user or predicted via pyPept, and a wrapper tool is also provided to automate the generation and output of 2D and 3D representations of a peptide directly from the line notation. HELM and BILN notations that include circular, branched, or stapled peptides are fully supported, eliminating errors in structure creation that are prone during manual drawing and connecting. The framework and common workflows followed in pyPept are described together with illustrative examples. pyPept has been released at: <ext-link ext-link-type="uri" xlink:href="https://github.com/Boehringer-Ingelheim/pyPept">https://github.com/Boehringer-Ingelheim/pyPept</ext-link>.</p>
      <sec>
        <title>Graphical Abstract</title>
        <p id="Par2">
          <graphic position="anchor" xlink:href="13321_2023_748_Figa_HTML" id="MO1"/>
        </p>
      </sec>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s13321-023-00748-2.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Peptide</kwd>
      <kwd>Python</kwd>
      <kwd>Conformer</kwd>
      <kwd>BILN</kwd>
      <kwd>RDKit</kwd>
      <kwd>Cheminformatics</kwd>
      <kwd>Molecule depiction</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100008349</institution-id>
            <institution>Boehringer Ingelheim</institution>
          </institution-wrap>
        </funding-source>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© Springer Nature Switzerland AG 2023</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Introduction</title>
    <p id="Par3">Peptides as therapeutic or diagnostic agents are a modality with proven translational success in clinical applications; more than 80 drugs on the market are peptide molecules, with others actively in clinical trials [<xref ref-type="bibr" rid="CR1">1</xref>]. In an accompanying fashion, suitable in silico tools to represent, process, and analyze peptides have been steadily published [<xref ref-type="bibr" rid="CR2">2</xref>–<xref ref-type="bibr" rid="CR5">5</xref>].</p>
    <p id="Par4">Among the available open source tools, many are restricted to natural amino acids, but some also support enhancement by a selected set of non-natural amino acids (NNAAs). This is the case for packages available in the Rosetta Commons project [<xref ref-type="bibr" rid="CR6">6</xref>, <xref ref-type="bibr" rid="CR7">7</xref>], the PEPstrMOD webserver [<xref ref-type="bibr" rid="CR8">8</xref>], and the SwissSideChain database [<xref ref-type="bibr" rid="CR9">9</xref>]. Some tools, inspired by full proteins, can fail when dealing with more complex peptidic structures, including staples (e.g., a hydrocarbon chain attached to two amino acids in order to help maintain alpha-helical conformation), non-stapled cyclic peptides, or multi-chain branched peptides [<xref ref-type="bibr" rid="CR10">10</xref>].</p>
    <p id="Par5">For the representation of peptides, the FASTA format is widely used and can be employed, e.g., to calculate peptide properties based on experimentally available physicochemical properties of natural monomers [<xref ref-type="bibr" rid="CR11">11</xref>]. However, it is restricted to natural amino acids and simple peptides without extra bonds such as those involved in formation of cyclic peptides. For example, the natural hormone oxytocin can be represented in FASTA by its sequence CYIQNCPLG, but the ring formed by the disulfide bond between the first and sixth cysteine monomers is not accounted for.</p>
    <p id="Par6">For more complex macromolecular entities, line notations that go beyond the simple FASTA format have been developed. A prominent example is the Hierarchical Editing Language for Macromolecules (HELM) [<xref ref-type="bibr" rid="CR12">12</xref>, <xref ref-type="bibr" rid="CR13">13</xref>]. It relies on a monomer library that defines the individual monomers and their possible connection points. Together with the information on how these monomers are connected, this allows an unambiguous representation of even very complex biomolecular entities in a string. Recently, we described an intuitive line notation termed BILN (Boehringer Ingelheim Line Notation) [<xref ref-type="bibr" rid="CR14">14</xref>], where a simple but, critically, human-readable and robust format allows the representation and manipulation of complex multi-chain peptides including staples and cycles.</p>
    <p id="Par7">In principle, small molecule cheminformatics tools are also applicable to peptides [<xref ref-type="bibr" rid="CR15">15</xref>]. However, they look at the peptide as a whole and neglect its construction principle that it is an ordered sequence of monomers, something that potentially could be used for more efficient computations. In addition, even when these tools offer monomer support, this is usually limited to a hard-coded list of amino acids. RDKit, a widely used open-source package for cheminformatics tasks [<xref ref-type="bibr" rid="CR16">16</xref>], contains functions to process HELM inputs, but only for a set of 48 residues, consisting of the coding L-amino acids, their D-counterparts, and analogs of natural amino acids, specifically norleucine, selenomethionine, ornithine, norvaline, <sc>l</sc>- and <sc>d</sc>-alpha aminobutyric acid, pyroglutamic acid, and the acetyl capping group.</p>
    <p id="Par8">Another largely unsolved issue is the generation of suitable 3D conformations for peptides that can be used as starting points for MD simulations [<xref ref-type="bibr" rid="CR17">17</xref>], mutation pipeline analysis [<xref ref-type="bibr" rid="CR18">18</xref>], or structure-based modeling and drug design. Currently, most tools either focus on structure prediction for whole proteins or small molecules, but they do not cover the middle occupied by medium- to large-sized peptides [<xref ref-type="bibr" rid="CR5">5</xref>].</p>
    <p id="Par9">Finally, pharmaceutical companies generally require the all-atom representation of a molecule for its registration in various databases, and historically molecules have been drawn manually before registration. Even for short peptides such as the 9-mer oxytocin, manual drawing of these structures can be error-prone, and the rate of error grows as peptide molecules evolve to contain longer main chains, staples, cycles, or fatty-acid chains connected to a peptide main chain. There is a clear need for a platform that can take line formats of peptides, including arbitrary NNAAs, and generate correct atomistic representations with no manual intervention.</p>
    <p id="Par10">To fill the void of a toolkit for working with peptides containing arbitrary monomers, unusual connections between monomers, or branching, we developed the python-language toolbox pyPept for handling complex peptides. pyPept is internally based on BILN, but it also can accept FASTA or HELM representations as input. Using a monomer library and the information contained in the input string, atom-level logical connections are validated, and the molecule can optionally be converted into a molecule object. This object can then be used to run typical cheminformatics analyses and predict conformers according to structural restraints. Figure <xref rid="Fig1" ref-type="fig">1</xref> shows a general overview of the package.<fig id="Fig1"><label>Fig. 1</label><caption><p>Summary of pyPept architecture and interfaces. Each monomer is mapped to chemical structure through a monomer dictionary, and monomers are connected by bonds defined for each monomer’s R-groups to yield a sanitized <italic>Sequence</italic> object. Information from the <italic>Sequence</italic> is used to create a <italic>Molecule</italic> object, and two options for 2D depictions are provided. Further, one can predict <italic>Conformer</italic> objects using additional secondary structure restraints. An executable driver program (run_pyPept.py) encapsulates the sequence-to-structure conversion, offering a non-programmatic way to obtain conformers directly from line notations. The solid lines indicate the default run_pyPept.py execution, with supported options shown by dotted arrows</p></caption><graphic xlink:href="13321_2023_748_Fig1_HTML" id="MO2"/></fig></p>
    <p id="Par11">Briefly, the package works as follows. The pyPept <italic>Sequence</italic> class converts the input line notation into a <italic>Sequence</italic> object, which is an ordered list of monomers together with all of the connectivity information necessary to accurately build the molecule. The <italic>Molecule</italic> class takes this <italic>Sequence</italic> object and creates a molecule object with a sanitized 2D representation. The <italic>Conformer</italic> class leverages distance geometry functionality to generate a 3D conformer. Here we found it necessary to provide secondary structure constraints in the 3D generation to obtain conformations that can be close to a bioactive one. Therefore, we developed a method to predict peptide secondary structure elements, which we packaged into the <italic>SecStructPredictor</italic> class. In addition, we developed a helper class <italic>Converter</italic> which can be used to translate from HELM to BILN and back, or to convert a FASTA string into BILN. A wrapper script (run_pyPept.py) is also provided that automates the sequence-to-structure/conformer conversion of a general peptide, thus demonstrating how to connect the individual components, and providing a non-programmatic way to use pyPept by simple command line execution.</p>
  </sec>
  <sec id="Sec2">
    <title>Requirements</title>
    <p id="Par12">pyPept has been written in Python 3.9 using language-standard internal libraries in conjunction with the external packages RDKit [<xref ref-type="bibr" rid="CR16">16</xref>] and BioPython [<xref ref-type="bibr" rid="CR19">19</xref>], both available through a package installer such as Conda. Instructions on how to install pyPept using a setup.py script are provided in the code repository. Examples of execution and direct module calls are given in the repository README file and in a directory “examples” included in the software distribution.</p>
  </sec>
  <sec id="Sec3">
    <title>Methods</title>
    <sec id="Sec4">
      <title>Secondary structure prediction</title>
      <p id="Par13">From the BIOLIP database (version 04.2022) [<xref ref-type="bibr" rid="CR20">20</xref>], we extracted the 8112 bioactive peptides for which secondary structure annotations were returned by the DSSP software [<xref ref-type="bibr" rid="CR21">21</xref>]. The peptides, composed of natural amino acids, are unique sequences showing a diverse set of possible bound conformations, including 30% of helical peptides and 10% forming parallel or anti-parallel beta sheets, even for small peptides of five or six amino acids. They were used to develop a matching algorithm between a query sequence and the bioactive conformers.</p>
      <p id="Par14">Our method compares the query peptide by matching its amino acids to those contained in database sequences, where a substitution matrix generates the matching score [<xref ref-type="bibr" rid="CR22">22</xref>]. The selected matrix was fitted to capture the similarity between known protein structures and is available in the BioPython package [<xref ref-type="bibr" rid="CR19">19</xref>]. We chose to not allow alignment gaps, thus, the comparisons are made between fragments of the same length. Therefore, if the query sequence is shorter than the database sequence, we compare it with fragments of the database sequence. Inversely, when the database sequence is shorter than the query sequence, the query sequence is fragmented to obtain peptides of the same length.</p>
      <p id="Par15">In practical applications, we recommend a peptide query length in the range of 5–20 amino acids, given that the reference set of bound peptides from BIOLIP has a maximum length of 30 amino acids. For each comparison between sequences <italic>A</italic> and <italic>B</italic>, we calculate a similarity score using the selected substitution matrix and normalize it by:<disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_{AB}=\frac{score_{AB}}{\sqrt{score_{AA}*score_{BB}}}$$\end{document}</tex-math><mml:math id="M2" display="block"><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi mathvariant="italic">AB</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>s</mml:mi><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:msub><mml:mi>e</mml:mi><mml:mrow><mml:mi mathvariant="italic">AB</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:msqrt><mml:mrow><mml:mi>s</mml:mi><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:msub><mml:mi>e</mml:mi><mml:mrow><mml:mi mathvariant="italic">AA</mml:mi></mml:mrow></mml:msub><mml:mrow/><mml:mo>∗</mml:mo><mml:mi>s</mml:mi><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:msub><mml:mi>e</mml:mi><mml:mrow><mml:mi mathvariant="italic">BB</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msqrt></mml:mfrac></mml:mrow></mml:math><graphic xlink:href="13321_2023_748_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq1"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$score_{AB}$$\end{document}</tex-math><mml:math id="M4"><mml:mrow><mml:mi>s</mml:mi><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:msub><mml:mi>e</mml:mi><mml:mrow><mml:mi mathvariant="italic">AB</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq1.gif"/></alternatives></inline-formula> is the alignment score between the two peptides, and <inline-formula id="IEq2"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$score_{AA}$$\end{document}</tex-math><mml:math id="M6"><mml:mrow><mml:mi>s</mml:mi><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:msub><mml:mi>e</mml:mi><mml:mrow><mml:mi mathvariant="italic">AA</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq2.gif"/></alternatives></inline-formula> and <inline-formula id="IEq3"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$score_{BB}$$\end{document}</tex-math><mml:math id="M8"><mml:mrow><mml:mi>s</mml:mi><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:msub><mml:mi>e</mml:mi><mml:mrow><mml:mi mathvariant="italic">BB</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq3.gif"/></alternatives></inline-formula> are the alignment scores for each peptide with itself.</p>
      <p id="Par16">After finding matches above a similarity threshold, a profile with the hits is created, and each amino acid in the query sequence is assigned the most frequent secondary structure element. Using a set of experimental peptide structures with different secondary structure categories, we found a threshold for <inline-formula id="IEq4"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_{AB}$$\end{document}</tex-math><mml:math id="M10"><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi mathvariant="italic">AB</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq4.gif"/></alternatives></inline-formula> in the range of 0.6–0.7 to be suitable (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>).</p>
      <p id="Par17">We also compared the predictions of our method against various state-of-the-art tools such as PSIPRED [<xref ref-type="bibr" rid="CR23">23</xref>], ModPep [<xref ref-type="bibr" rid="CR24">24</xref>], and AlphaFold2 [<xref ref-type="bibr" rid="CR25">25</xref>]. Specifically, we selected a list of 38 peptides available in the PDB with lengths between 8 and 17 amino acids and a diverse set of secondary structure motifs to test the predictions (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S2). We found that the approach described here correctly predicts the secondary structure for most peptides, with 8 of 10 correct predictions for complex motifs based on co-occurring alpha-helix and beta-sheet conformations. This result was on par or better than the methods tested (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S3). Our method can be easily embedded with the rest of the pyPept functionalities. Still further, the user can include secondary structure restraints from any other method or simply by manually providing the expected conformation as exemplified in the “<xref rid="Sec12" ref-type="sec">Typical workflow</xref>” section.</p>
    </sec>
    <sec id="Sec5">
      <title>Monomer library</title>
      <p id="Par18">Allowing arbitrary monomers in a peptide sequence affords monomer definitions that connect the identifiers in the line notation with the underlying chemical structure. In pyPept, we use a dictionary which, for each monomer, contains the following information:<list list-type="bullet"><list-item><p id="Par19">chemical structure</p></list-item><list-item><p id="Par20">connection points</p></list-item><list-item><p id="Par21">possible leaving groups (that are removed when the respective connection points are used in a bond between monomers)</p></list-item><list-item><p id="Par22">the abbreviation to be used in the peptide line notation</p></list-item><list-item><p id="Par23">the natural analog of a monomer, if applicable</p></list-item><list-item><p id="Par24">additional information about a specific monomer such as its role, i.e., amino acid or capping group,</p></list-item><list-item><p id="Par25">its stereochemical SMILES representation, and finally,</p></list-item><list-item><p id="Par26">a corresponding PDB residue code.</p></list-item></list>As per the extensible definition of BILN [<xref ref-type="bibr" rid="CR14">14</xref>], these monomers can be any non-natural amino acid or non-amino acid with annotated leaving groups that will allow the formation of inter-monomer bonds. No assumptions on the type or nature of monomers, or their connections, are made. This allows the formation of additional bonds to describe branched peptides, as well as cyclic peptides using peptide, disulfide, or potentially other types of bonds (see examples in Table <xref rid="Tab1" ref-type="table">1</xref>).</p>
      <p id="Par27">The Pistoia Alliance maintains a dataset of 322 HELM monomers [<xref ref-type="bibr" rid="CR26">26</xref>]. This dataset closely follows the monomer entry (dictionary) format described above; thus, the 322 HELM monomers are adaptable for use in pyPept with only minor conversion effort. For convenience and to remove an entry barrier to apply pyPept, we provide a python script in the repository to convert the HELM monomer dataset into a format suitable for pyPept, as well as a structure definition file (SDF) with this modified monomer information. This can also be used to add proprietary monomers, as long as they are provided as a SDF file in the Pistoia monomer format. Specifically, the user can add the SDF format of the new monomer in the monomers.sdf file, which is located in the “data” folder of pyPept. The SDF requires some tags to allow the correct mapping into the dictionary, including the name of the monomer, the type of monomer (amino acid or capping group), the abbreviated symbol, if the monomer has a natural analog, and the corresponding leaving R-groups to bond other monomers. An example of a monomer entry using the SDF format is provided in the data folder with the name example_preProcessed_monomer.sdf.</p>
      <p id="Par28">We note that in the Pistoia monomer set, no PDB residue names are provided. We chose to use the names reported in the chemical component dictionary [<xref ref-type="bibr" rid="CR27">27</xref>]. If a monomer is not contained in this dictionary, a new random, though nonetheless unique, PDB code is created.</p>
    </sec>
  </sec>
  <sec id="Sec6">
    <title>pyPept design: key classes and examples</title>
    <sec id="Sec7">
      <title>Sequence class</title>
      <p id="Par29">This is the main class of the pyPept package. It converts the input BILN string (or HELM/FASTA transformed by the <italic>Converter</italic> class) into a <italic>Sequence</italic> object. In Table <xref rid="Tab1" ref-type="table">1</xref> we show some examples of peptides using the three input formats, where the FASTA format can be used only to represent natural amino acids, and it includes no information on branching or cyclization.<table-wrap id="Tab1"><label>Table 1</label><caption><p>Examples of peptides using the three input formats BILN [<xref ref-type="bibr" rid="CR14">14</xref>], HELM [<xref ref-type="bibr" rid="CR13">13</xref>], and FASTA</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">BILN</th><th align="left">HELM</th><th align="left">FASTA</th></tr></thead><tbody><tr><td align="left">P-E-P-T-I-D-E</td><td align="left">PEPTIDE1{P.E.P.T.I.D.E}$$$$V2.0</td><td align="left">PEPTIDE</td></tr><tr><td align="left">ac-D-T-H-F-E-I-A-am</td><td align="left">PEPTIDE1{[ac].D.T.H.F.E.I.A.[am]}$$$$V2.0</td><td align="left">None</td></tr><tr><td align="left">C(1,3)-A-A-A-C(1,3)</td><td align="left">PEPTIDE1{C.A.A.A.C} $PEPTIDE1,PEPTIDE1,1:R3-5:R3$$$V2.0</td><td align="left">CAAAC</td></tr><tr><td align="left">C(1,1)-A-A-A-C(1,2)</td><td align="left">PEPTIDE1{C.A.A.A.C} $PEPTIDE1,PEPTIDE1,1:R1-5:R2$$$V2.0</td><td align="left">CAAAC</td></tr><tr><td align="left">A-G-Q-A-A-K(1,3)-E-F-I-A-A.G-L-E-E(1,3)</td><td align="left">PEPTIDE1{A.G.Q.A.A.K.E.F.I.A.A}| PEPTIDE2{G.L.E.E} $PEPTIDE1,PEPTIDE2,6:R3-4:R3$$$V2.0</td><td align="left">None</td></tr><tr><td align="left">N-Iva-F-D-I-meT-N-A-L-W-Y-Aib-K</td><td align="left">PEPTIDE1{N.[Iva].F.D.I.[meT].N.A.L.W.Y.[Aib].K} $$$$V2.0</td><td align="left">None</td></tr></tbody></table><table-wrap-foot><p>BILN’s support for specification of R-groups in bond formation means that linkage types can be easily specified. The BILN notation uses the monomer format <italic>m(n,i)</italic> to indicate that monomer <italic>m</italic> is a part of the cycle or branch assigned ID number <italic>n</italic> and connects via R-group <italic>i</italic> to a paired monomer <italic>p(n,j)</italic>. <italic>i</italic> and <italic>j</italic> can be any R-groups involved in single bond linkage formation. Thus, the cyclization by cysteine linkage [C(1,3)] is by disulfide bond in the third example but by peptide bond [C(1,1), C(1,2)] in the fourth example</p></table-wrap-foot></table-wrap></p>
      <p id="Par30">The <italic>Sequence </italic>object holds a list of dictionaries, with each dictionary containing the necessary information for one monomer in the peptide sequence (see above, Monomer Library). In addition, a <italic>Sequence</italic> object stores the information about which monomers are connected and which atoms form these bonds. A <italic>Sequence</italic> object goes beyond a pair of bonds found in two adjacent amino acids of a linear FASTA sequence and also manages the information necessary for cycles, branches, staples, and other peptide-specific bond structure.</p>
      <p id="Par31">In all monomer structures, the R-groups at connection points that are not involved in bonds are replaced by their correct leaving group (e.g., the R2-group at the C-terminal end of the peptide is replaced by an OH forming the C-terminal carboxylic acid). During this procedure, checks guarantee that the input BILN string is not malformed, that the correct number of bond identifiers are present, and that it only contains monomers included in the monomer library.</p>
      <p id="Par32">As a final processing step, we change the names of the atoms that are part of an amino acid residue and those of the capping groups to follow the IUPAC convention which appends greek letters to the element symbol (e.g., C<inline-formula id="IEq6"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M12"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq6.gif"/></alternatives></inline-formula> as CA, C<inline-formula id="IEq7"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta$$\end{document}</tex-math><mml:math id="M14"><mml:mi>β</mml:mi></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq7.gif"/></alternatives></inline-formula> as CB, hydrogens HB2 and HB3 attached to C<inline-formula id="IEq8"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta$$\end{document}</tex-math><mml:math id="M16"><mml:mi>β</mml:mi></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq8.gif"/></alternatives></inline-formula>). To achieve these changes, the greekify method from the rdkit-to-params package [<xref ref-type="bibr" rid="CR28">28</xref>] was adapted for our needs.</p>
      <p id="Par33">A class method reads the monomer information and stores it in a Pandas DataFrame [<xref ref-type="bibr" rid="CR29">29</xref>] object to allow easy access for the various <italic>Sequence</italic> methods.</p>
    </sec>
    <sec id="Sec8">
      <title>Molecule class</title>
      <p id="Par34">The <italic>Molecule</italic> class contains methods to convert the <italic>Sequence</italic> object into an RDKit ROMol molecule object. To accomplish this, we sequentially take each monomer in the <italic>Sequence</italic> object, merge its RDKit representation with the growing peptide and then add, if applicable, the appropriate bond(s) between the new monomer and the peptide.</p>
      <p id="Par35">To obtain an extended conformation of the peptide without overlapping atoms, the rdDepictor module from RDKit is used [<xref ref-type="bibr" rid="CR30">30</xref>]. Alternatively, we have developed a procedure which changes the phi/psi angles in the protein backbone to obtain an extended 2D conformation and adjusts the torsion between C<inline-formula id="IEq9"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M18"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq9.gif"/></alternatives></inline-formula> and C<inline-formula id="IEq10"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta$$\end{document}</tex-math><mml:math id="M20"><mml:mi>β</mml:mi></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq10.gif"/></alternatives></inline-formula> to obtain an aesthetically pleasing 2D depiction of the peptide without overlapping atoms (see Fig. <xref rid="Fig1" ref-type="fig">1</xref> for an example).</p>
      <p id="Par36">At this point, the 2D peptide object can be exported by a <italic>Molecule</italic> object method to different molecular formats, such as SMILES or SDF.</p>
    </sec>
    <sec id="Sec9">
      <title>SecStructPredictor class</title>
      <p id="Par37">Initial tests showed that the inclusion of secondary structure information is necessary to have a chance of obtaining a 3D structure that is close to the experimental conformation and is suitable for 3D modeling tasks. As this experimental information is often unavailable, and the existing secondary structure prediction tools did not return results sufficiently accurate enough for our purposes when applied to short and medium-length peptides, we decided to develop a similarity-based tool to assign secondary structure motifs to the peptides based on a dataset of bioactive conformers available in the PDB (see Methods section).</p>
      <p id="Par38">The <italic>SecStructPredictor</italic> class collects the functionality to obtain, for a given peptide, a prediction of its secondary structure. Since experimental peptide structures are mostly of natural amino acids, in this protocol, non-natural amino acids are first mutated into their natural analogs, then this mutated peptide is compared with all sequences in the database. To assign the natural analog, pyPept checks first if the information about a natural analog was included in the dictionary. If not, a fingerprint-based similarity run is performed between the monomer of interest and the 20 standard natural residues. A potential natural analog is assigned based on the highest Tanimoto score above a threshold of 0.5. Otherwise, the non-natural amino acid is replaced by an alanine.</p>
      <p id="Par39">After this mapping and search for matching contexts, the secondary structure element for each residue in the original peptide is returned. The secondary structure categories are: B (beta bridge), H (alpha helix), E (beta strand), S (bend), T (turn), and G (3/10 helix). Of course, any other secondary structure prediction tool can be used to generate these annotations and use them to drive pyPept’s conformer generator.</p>
    </sec>
    <sec id="Sec10">
      <title>Conformer class</title>
      <p id="Par40">The <italic>Conformer</italic> class is used to generate a 3D conformer of the peptide. We employ the ETKDGv3 (Experimental-Torsion Knowledge Distance Geometry) method from RDKit followed by minimization of the structure [<xref ref-type="bibr" rid="CR31">31</xref>, <xref ref-type="bibr" rid="CR32">32</xref>].</p>
      <p id="Par41">Using distance geometry without any constraints usually leads to random coil 3D structures. To end up with peptide conformations that are helical, for example, one needs secondary structure information as constraints for the algorithm. As this information often is not available experimentally, we suggest to use a tool to predict the peptide secondary structure. This can be the <italic>SecStructPredictor</italic> class presented above, or any other method.</p>
      <p id="Par42">Based on the input secondary structure elements, fixed distances are assigned in the RDKit-defined distance bounds matrix to force the formation of <inline-formula id="IEq11"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M22"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq11.gif"/></alternatives></inline-formula>-helix or <inline-formula id="IEq12"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta$$\end{document}</tex-math><mml:math id="M24"><mml:mi>β</mml:mi></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq12.gif"/></alternatives></inline-formula>-sheet conformations, which is not a feature available in small molecule-oriented packages such as RDKit. The constraints are complemented by the ETKDGv3 knowledge-based potential to predict the peptide conformers. In the case of non-natural amino acids, the natural analogs (if available in the monomer dictionary) are used to assign the secondary structure element. If no natural analog is available, alanines are used instead. At the end of this processing pipeline, a PDB file can be generated with unique 3-letter residue codes and atom names conforming to the IUPAC rules.</p>
      <p id="Par43">In our experience, this procedure is suitable for sequences shorter than 20 amino acids; for longer sequences, many well-established protein modeling tools are available as well [<xref ref-type="bibr" rid="CR33">33</xref>].</p>
      <p id="Par44">We note that AlphaFold [<xref ref-type="bibr" rid="CR25">25</xref>, <xref ref-type="bibr" rid="CR34">34</xref>] can also predict the conformations of even short peptides, which are often surprisingly close to the experimental bound or free structure. However, this is again a tool that can only deal with natural amino acids. Thus, pre- and post-processing steps are necessary: first, replace the NNAA with a close natural analog; second, conduct the AlphaFold prediction; third, mutate the analog monomer back to the NNAA using the conformer obtained.</p>
    </sec>
    <sec id="Sec11">
      <title>Converter class</title>
      <p id="Par45">The native input format of the <italic>Sequence</italic> class is BILN. To allow one to start from a HELM or FASTA representation, we also provide a format conversion class [<xref ref-type="bibr" rid="CR14">14</xref>]. The <italic>Converter</italic> class allows a two-way conversion between HELM and BILN, and from FASTA to BILN.</p>
    </sec>
  </sec>
  <sec id="Sec12">
    <title>Typical workflows</title>
    <sec id="Sec13">
      <title>API-based workflow</title>
      <p id="Par46">We envision a typical use case in which one wishes to obtain a 2D representation stored in SDF format, starting from a BILN sequence. With the aforementioned pyPept classes, this could look as follows:<graphic position="anchor" xlink:href="13321_2023_748_Figb_HTML" id="MO3"/></p>
      <p id="Par47">From there, a few lines of additional code would then generate a PDB file with a 3D representation of the input peptide, based on the prediction or specified input of its secondary structure:<graphic position="anchor" xlink:href="13321_2023_748_Figc_HTML" id="MO4"/></p>
      <p id="Par48">A graphical summary of this workflow is shown in Fig. <xref rid="Fig2" ref-type="fig">2</xref>.<fig id="Fig2"><label>Fig. 2</label><caption><p>Detailed description of peptide 2D/3D generation from sequence. <bold>a</bold> Main components of the monomer dictionary used to define each BILN component and to allow the generation of peptide bonds between them. In addition, the monomer atoms are named according to the IUPAC convention. <bold>b</bold> Example of a peptide with a non-natural amino acid and the 2D depiction of the RDKit molecular object with modified peptide bond dihedrals to minimize overlapping atoms. <bold>c</bold> Scheme showing the prediction of the secondary structure of the example peptide in (<bold>b</bold>), the addition of restrained distances into the RDKit bound matrix, and the subsequent prediction of the most probable conformer using the ETKDGv3 method</p></caption><graphic xlink:href="13321_2023_748_Fig2_HTML" id="MO5"/></fig></p>
      <p id="Par49">The workflow above is a routine task. To automate this workflow and remove the need for one to implement it themselves, we provide a command line wrapper script which takes the peptide representation and additional options as command-line arguments:<graphic position="anchor" xlink:href="13321_2023_748_Figd_HTML" id="MO6"/></p>
    </sec>
    <sec id="Sec14">
      <title>All-in-one execution</title>
      <p id="Par50">The sequence-to-conformer protocol can be run all at once by executing the provided wrapper script. An example execution using a randomly-generated peptide sequence is as follows:<graphic position="anchor" xlink:href="13321_2023_748_Fige_HTML" id="MO7"/>where the capped peptide in BILN format is used as input (with quotation to avoid any mis-processing by the host operating system), and the RDKit built-in function is used to generate the 2D depiction. As examples, we ran the method with a set of peptides having different features, including the presence of non-natural amino acids, capping groups, and the presence of multiple chains (Fig. <xref rid="Fig3" ref-type="fig">3</xref>). In the second case (Fig. <xref rid="Fig3" ref-type="fig">3</xref>b), the peptide main chain is predicted as partly <inline-formula id="IEq13"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M26"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq13.gif"/></alternatives></inline-formula>-helical based on our conformer prediction method. In the third case (Fig. <xref rid="Fig3" ref-type="fig">3</xref>c), a branched peptide with a bond connection between a lysine and a glutamic acid is shown.<fig id="Fig3"><label>Fig. 3</label><caption><p>Example of peptides formatted with pyPept, sequences are shown in BILN format. <bold>a</bold> Capped peptide with acetyl group at the N-terminal part and an amino group at the C-terminal part. <bold>b</bold> A peptide with three non-natural amino acids highlighted in green (Iva: Isovaline), red (meT: <italic>N</italic>-Methyl-Threonine) and blue (Aib: Alpha-aminoisobutyric acid). In this case, the main peptide was predicted as an <inline-formula id="IEq14"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M28"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq14.gif"/></alternatives></inline-formula>-helix. <bold>c</bold> A peptide with a branch generated between a lysine and a glutamic acid through the third R-group located in their side chains. The bridge is identifiable in both the 2D and 3D representations</p></caption><graphic xlink:href="13321_2023_748_Fig3_HTML" id="MO8"/></fig></p>
    </sec>
  </sec>
  <sec id="Sec15">
    <title>Conclusions</title>
    <p id="Par51">With clinical precedent for their therapeutic benefit, peptides have been and will continue to be actively developed, with increasingly complex topologies, necessitating a complementary infrastructure for peptide information communication (e.g., BILN in presentations or patent applications), automated conversion of the human-communicable format into formats that can be directly submitted to compound registration systems, and for computational chemistry purposes. The pyPept package provides a publicly accessible collaborative effort to achieve these goals, with a low barrier to entry which enables less tech-savvy experimental and design research organizations to maximally benefit. pyPept facilitates the generation of 2D and 3D conformations of a peptide even in the presence of non-natural amino acids, non-amino-acid monomers, branches, and cyclic structures, which are certain to increase as peptide synthesis technologies have continued to improve.</p>
    <p id="Par52">For peptide design teams, they can easily convert a series of peptides stored in a spreadsheet with one monomer per column into matching BILNs. Then, it is straightforward to directly apply the pyPept 2D depiction pipeline and generate 2D representations for all peptides. Since 2D representation is still at the core of the compound registration process for many companies, use of pyPept for systematic representation generation avoids the error-prone manual drawing of peptide structures.</p>
    <p id="Par53">The 3D pipeline produces a peptide structure that can be used as a starting point for MD simulations, structure-based modeling efforts, or other methods to obtain low-energy conformations of the peptide [<xref ref-type="bibr" rid="CR35">35</xref>]. It remains to be clarified, admittedly, how well our procedure predicts the bioactive conformations of peptides. One of the issues is that all secondary structure predictors (as other peptide/protein conformer predictors, including AlphaFold) work based on natural amino acids. The introduction of NNAAs in a post-processing step may completely alter the local conformation and, thus, the overall structure of the peptide. We fully acknowledge the need for a more systematic analysis.</p>
    <p id="Par54">Despite such an aspect, we believe that pyPept is a framework that will facilitate the generation of 2D and 3D structures of complex peptides, reducing human error and accelerating not only drug discovery but all research fields involving peptides.
</p>
    <sec id="Sec16" sec-type="data-availability">
      <title>Data availability</title>
      <p id="Par55"><list list-type="bullet"><list-item><p id="Par56">Project name: pyPept (version 1.0)</p></list-item><list-item><p id="Par57">Project home page: <ext-link ext-link-type="uri" xlink:href="https://github.com/Boehringer-Ingelheim/pyPept">https://github.com/Boehringer-Ingelheim/pyPept</ext-link></p></list-item><list-item><p id="Par58">Operating system(s) tested: Linux</p></list-item><list-item><p id="Par59">Programming language: Python 3.9 or higher</p></list-item><list-item><p id="Par60">Other requirements: RDKit 2020 or later; Biopython 1.7.9 recommended.</p></list-item><list-item><p id="Par61">License: MIT</p></list-item></list>The code is available as a Github repository. Any questions related to the implementation can be directed to the authors’ email accounts.</p>
    </sec>
  </sec>
  <sec sec-type="supplementary-material">
    <sec id="Sec17">
      <title>Supplementary Information</title>
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="13321_2023_748_MOESM1_ESM.pdf">
            <caption>
              <p><bold>Additional file 1.</bold> Validation and assessment of the secondary structure predictor.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher's Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>We thank Alexander Weber, Nils Weskamp, Stefan Peters, and Peter Haebel for helpful discussions, valuable suggestions, and assistance during review of software code.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Author contributions</title>
    <p>RO, JB, and TF created, reviewed and implemented the code, wrote the documentation and the manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>All authors are full time employees at Boehringer Ingelheim Pharma GmbH &amp; Co KG.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar1" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par62">The authors declare that they have no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Muttenthaler</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>King</surname>
            <given-names>GF</given-names>
          </name>
          <name>
            <surname>Adams</surname>
            <given-names>DJ</given-names>
          </name>
          <name>
            <surname>Alewood</surname>
            <given-names>PF</given-names>
          </name>
        </person-group>
        <article-title>Trends in peptide drug discovery</article-title>
        <source>Nat Rev Drug Discov</source>
        <year>2021</year>
        <volume>20</volume>
        <issue>4</issue>
        <fpage>309</fpage>
        <lpage>325</lpage>
        <pub-id pub-id-type="doi">10.1038/s41573-020-00135-8</pub-id>
        <pub-id pub-id-type="pmid">33536635</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Vanhee</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>van der Sloot</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Verschueren</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Serrano</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Rousseau</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Schymkowitz</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Computational design of peptide ligands</article-title>
        <source>Trends Biotechnol</source>
        <year>2011</year>
        <volume>29</volume>
        <issue>5</issue>
        <fpage>231</fpage>
        <lpage>239</lpage>
        <pub-id pub-id-type="doi">10.1016/j.tibtech.2011.01.004</pub-id>
        <pub-id pub-id-type="pmid">21316780</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Uhlig</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Kyprianou</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Martinelli</surname>
            <given-names>FG</given-names>
          </name>
          <name>
            <surname>Oppici</surname>
            <given-names>CA</given-names>
          </name>
          <name>
            <surname>Heiligers</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Hills</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Calvo</surname>
            <given-names>XR</given-names>
          </name>
          <name>
            <surname>Verhaert</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>The emergence of peptides in the pharmaceutical business: from exploration to exploitation</article-title>
        <source>EuPA Open Proteom</source>
        <year>2014</year>
        <volume>4</volume>
        <fpage>58</fpage>
        <lpage>69</lpage>
        <pub-id pub-id-type="doi">10.1016/j.euprot.2014.05.003</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Milton</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Bellamy</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Swayze</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Hart</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Weisser</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Hecht</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Rotstein</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>HELM software for biopolymers</article-title>
        <source>J Chem Inf Model</source>
        <year>2017</year>
        <volume>57</volume>
        <issue>6</issue>
        <fpage>1233</fpage>
        <lpage>1239</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jcim.6b00442</pub-id>
        <pub-id pub-id-type="pmid">28471655</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ochoa</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Cossio</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>PepFun: open source protocols for peptide-related computational analysis</article-title>
        <source>Molecules</source>
        <year>2021</year>
        <volume>26</volume>
        <issue>6</issue>
        <fpage>1664</fpage>
        <pub-id pub-id-type="doi">10.3390/molecules26061664</pub-id>
        <pub-id pub-id-type="pmid">33809815</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mulligan</surname>
            <given-names>VK</given-names>
          </name>
          <name>
            <surname>Workman</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Sun</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Rettie</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Worrall</surname>
            <given-names>LJ</given-names>
          </name>
          <name>
            <surname>Craven</surname>
            <given-names>TW</given-names>
          </name>
          <name>
            <surname>King</surname>
            <given-names>DT</given-names>
          </name>
          <name>
            <surname>Hosseinzadeh</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Watkins</surname>
            <given-names>AM</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Computationally designed peptide macrocycle inhibitors of New Delhi metallo-<inline-formula id="IEq16"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta$$\end{document}</tex-math><mml:math id="M30"><mml:mi>β</mml:mi></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq16.gif"/></alternatives></inline-formula>-lactamase 1</article-title>
        <source>Proc Natl Acad Sci</source>
        <year>2021</year>
        <volume>118</volume>
        <issue>12</issue>
        <fpage>e2012800118</fpage>
        <pub-id pub-id-type="doi">10.1073/pnas.2012800118</pub-id>
        <pub-id pub-id-type="pmid">33723038</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Alam</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Goldstein</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Xia</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Porter</surname>
            <given-names>KA</given-names>
          </name>
          <name>
            <surname>Kozakov</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Schueler-Furman</surname>
            <given-names>O</given-names>
          </name>
        </person-group>
        <article-title>High-resolution global peptide-protein docking using fragments-based piper-flexpepdock</article-title>
        <source>PLoS Comput Biol</source>
        <year>2017</year>
        <volume>13</volume>
        <issue>12</issue>
        <fpage>1005905</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1005905</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Singh</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Singh</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Tuknait</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Chaudhary</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Singh</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Kumaran</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Raghava</surname>
            <given-names>GP</given-names>
          </name>
        </person-group>
        <article-title>Pepstrmod: structure prediction of peptides containing natural, non-natural and modified residues</article-title>
        <source>Biol Direct</source>
        <year>2015</year>
        <volume>10</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>19</lpage>
        <pub-id pub-id-type="doi">10.1186/s13062-015-0103-4</pub-id>
        <pub-id pub-id-type="pmid">25564011</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gfeller</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Michielin</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Zoete</surname>
            <given-names>V</given-names>
          </name>
        </person-group>
        <article-title>Swisssidechain: a molecular and structural database of non-natural sidechains</article-title>
        <source>Nucleic Acids Res</source>
        <year>2012</year>
        <volume>41</volume>
        <issue>D1</issue>
        <fpage>327</fpage>
        <lpage>332</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gks991</pub-id>
        <pub-id pub-id-type="pmid">23104426</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lenci</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Trabocchi</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Peptidomimetic toolbox for drug discovery</article-title>
        <source>Chem Soc Rev</source>
        <year>2020</year>
        <volume>49</volume>
        <issue>11</issue>
        <fpage>3262</fpage>
        <lpage>3277</lpage>
        <pub-id pub-id-type="doi">10.1039/D0CS00102C</pub-id>
        <pub-id pub-id-type="pmid">32255135</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kawashima</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Pokarowski</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Pokarowska</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Kolinski</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Katayama</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Kanehisa</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>AAindex: amino acid index database, progress report 2008</article-title>
        <source>Nucleic Acids Res</source>
        <year>2007</year>
        <volume>36</volume>
        <issue>suppl-1</issue>
        <fpage>202</fpage>
        <lpage>205</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkm998</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhang</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Xi</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Stanton</surname>
            <given-names>RV</given-names>
          </name>
          <name>
            <surname>Rotstein</surname>
            <given-names>SH</given-names>
          </name>
        </person-group>
        <article-title>HELM: a hierarchical notation language for complex biomolecule structure representation</article-title>
        <source>J Chem Inf Model</source>
        <year>2012</year>
        <volume>52</volume>
        <issue>10</issue>
        <fpage>2796</fpage>
        <lpage>2806</lpage>
        <pub-id pub-id-type="doi">10.1021/ci3001925</pub-id>
        <pub-id pub-id-type="pmid">22947017</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <mixed-citation publication-type="other">Pistoia HELM GitHub page. <ext-link ext-link-type="uri" xlink:href="https://github.com/PistoiaHELM">https://github.com/PistoiaHELM</ext-link>. Accessed 2023-01-19</mixed-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fox</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Bieler</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Haebel</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Ochoa</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Peters</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Weber</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>BILN: a human-readable line notation for complex peptides</article-title>
        <source>J Chem Inf Model</source>
        <year>2022</year>
        <volume>62</volume>
        <issue>17</issue>
        <fpage>3942</fpage>
        <lpage>3947</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jcim.2c00703</pub-id>
        <pub-id pub-id-type="pmid">35984937</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tu</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Cheng</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Lu</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Du</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Advancement and prospects of bioinformatics analysis for studying bioactive peptides from food-derived protein: sequence, structure, and functions</article-title>
        <source>TrAC Trends Anal Chem</source>
        <year>2018</year>
        <volume>105</volume>
        <fpage>7</fpage>
        <lpage>17</lpage>
        <pub-id pub-id-type="doi">10.1016/j.trac.2018.04.005</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <mixed-citation publication-type="other">Landrum G RDKit. <ext-link ext-link-type="uri" xlink:href="https://rdkit.org">https://rdkit.org</ext-link>. Accessed 2023-01-19</mixed-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kamenik</surname>
            <given-names>AS</given-names>
          </name>
          <name>
            <surname>Lessel</surname>
            <given-names>U</given-names>
          </name>
          <name>
            <surname>Fuchs</surname>
            <given-names>JE</given-names>
          </name>
          <name>
            <surname>Fox</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Liedl</surname>
            <given-names>KR</given-names>
          </name>
        </person-group>
        <article-title>Peptidic macrocycles—conformational sampling and thermodynamic characterization</article-title>
        <source>J Chem Inf Model</source>
        <year>2018</year>
        <volume>58</volume>
        <issue>5</issue>
        <fpage>982</fpage>
        <lpage>992</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jcim.8b00097</pub-id>
        <pub-id pub-id-type="pmid">29652495</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ochoa</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Soler</surname>
            <given-names>MA</given-names>
          </name>
          <name>
            <surname>Laio</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Cossio</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>PARCE: protocol for amino acid refinement through computational evolution</article-title>
        <source>Comput Phys Commun</source>
        <year>2021</year>
        <volume>260</volume>
        <fpage>107716</fpage>
        <pub-id pub-id-type="doi">10.1016/j.cpc.2020.107716</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cock</surname>
            <given-names>PJ</given-names>
          </name>
          <name>
            <surname>Antao</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Chang</surname>
            <given-names>JT</given-names>
          </name>
          <name>
            <surname>Chapman</surname>
            <given-names>BA</given-names>
          </name>
          <name>
            <surname>Cox</surname>
            <given-names>CJ</given-names>
          </name>
          <name>
            <surname>Dalke</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Friedberg</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Hamelryck</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Kauff</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Wilczynski</surname>
            <given-names>B</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Biopython: freely available python tools for computational molecular biology and bioinformatics</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <issue>11</issue>
        <fpage>1422</fpage>
        <lpage>1423</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp163</pub-id>
        <pub-id pub-id-type="pmid">19304878</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yang</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Roy</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>BioLiP: a semi-manually curated database for biologically relevant ligand–protein interactions</article-title>
        <source>Nucleic Acids Res</source>
        <year>2012</year>
        <volume>41</volume>
        <issue>D1</issue>
        <fpage>1096</fpage>
        <lpage>1103</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gks966</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Frishman</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Argos</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Knowledge-based protein secondary structure assignment</article-title>
        <source>Proteins Struct Funct Bioinform</source>
        <year>1995</year>
        <volume>23</volume>
        <issue>4</issue>
        <fpage>566</fpage>
        <lpage>579</lpage>
        <pub-id pub-id-type="doi">10.1002/prot.340230412</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Johnson</surname>
            <given-names>MS</given-names>
          </name>
          <name>
            <surname>Overington</surname>
            <given-names>JP</given-names>
          </name>
          <name>
            <surname>Blundell</surname>
            <given-names>TL</given-names>
          </name>
        </person-group>
        <article-title>Alignment and searching for common protein folds using a data bank of structural templates</article-title>
        <source>J Mol Biol</source>
        <year>1993</year>
        <volume>231</volume>
        <issue>3</issue>
        <fpage>735</fpage>
        <lpage>752</lpage>
        <pub-id pub-id-type="doi">10.1006/jmbi.1993.1323</pub-id>
        <pub-id pub-id-type="pmid">8515448</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Buchan</surname>
            <given-names>DW</given-names>
          </name>
          <name>
            <surname>Jones</surname>
            <given-names>DT</given-names>
          </name>
        </person-group>
        <article-title>The psipred protein analysis workbench: 20 years on</article-title>
        <source>Nucleic Acids Res</source>
        <year>2019</year>
        <volume>47</volume>
        <issue>W1</issue>
        <fpage>402</fpage>
        <lpage>407</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkz297</pub-id>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yan</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Huang</surname>
            <given-names>S-Y</given-names>
          </name>
        </person-group>
        <article-title>Efficient conformational ensemble generation of protein-bound peptides</article-title>
        <source>J Cheminform</source>
        <year>2017</year>
        <volume>9</volume>
        <issue>1</issue>
        <fpage>59</fpage>
        <pub-id pub-id-type="doi">10.1186/s13321-017-0246-7</pub-id>
        <pub-id pub-id-type="pmid">29168051</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jumper</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Evans</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Pritzel</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Green</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Figurnov</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Ronneberger</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Tunyasuvunakool</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Bates</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Žídek</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Potapenko</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Highly accurate protein structure prediction with AlphaFold</article-title>
        <source>Nature</source>
        <year>2021</year>
        <volume>596</volume>
        <issue>7873</issue>
        <fpage>583</fpage>
        <lpage>589</lpage>
        <pub-id pub-id-type="doi">10.1038/s41586-021-03819-2</pub-id>
        <pub-id pub-id-type="pmid">34265844</pub-id>
      </element-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <mixed-citation publication-type="other">Pistoia HELM monomer dataset. <ext-link ext-link-type="uri" xlink:href="https://github.com/PistoiaHELM/HELMMonomerSets">https://github.com/PistoiaHELM/HELMMonomerSets</ext-link>. Accessed 2023-01-19</mixed-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <mixed-citation publication-type="other">PDB component dictionary. <ext-link ext-link-type="uri" xlink:href="https://www.ebi.ac.uk/pdbe-srv/pdbechem/">https://www.ebi.ac.uk/pdbe-srv/pdbechem/</ext-link>. Accessed 2023-01-19</mixed-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <mixed-citation publication-type="other">RDKit to params. <ext-link ext-link-type="uri" xlink:href="https://github.com/matteoferla/rdkit_to_params">https://github.com/matteoferla/rdkit_to_params</ext-link>. Accessed 2023-01-19</mixed-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>McKinney</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <source>Python for data analysis: data wrangling with Pandas, NumPy, and IPython</source>
        <year>2012</year>
        <publisher-loc>Sebastopol</publisher-loc>
        <publisher-name>O’Reilly Media Inc.</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <mixed-citation publication-type="other">RDKit - rdDepictor documentation. <ext-link ext-link-type="uri" xlink:href="http://rdkit.org/docs/source/rdkit.Chem.rdDepictor.html">http://rdkit.org/docs/source/rdkit.Chem.rdDepictor.html</ext-link>. Accessed 2023-01-19</mixed-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Riniker</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Landrum</surname>
            <given-names>GA</given-names>
          </name>
        </person-group>
        <article-title>Better informed distance geometry: using what we know to improve conformation generation</article-title>
        <source>J Chem Inf Model</source>
        <year>2015</year>
        <volume>55</volume>
        <issue>12</issue>
        <fpage>2562</fpage>
        <lpage>2574</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jcim.5b00654</pub-id>
        <pub-id pub-id-type="pmid">26575315</pub-id>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wang</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Witek</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Landrum</surname>
            <given-names>GA</given-names>
          </name>
          <name>
            <surname>Riniker</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Improving conformer generation for small rings and macrocycles based on distance geometry and experimental torsional-angle preferences</article-title>
        <source>J Chem Inf Model</source>
        <year>2020</year>
        <volume>60</volume>
        <issue>4</issue>
        <fpage>2044</fpage>
        <lpage>2058</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jcim.0c00025</pub-id>
        <pub-id pub-id-type="pmid">32155061</pub-id>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Šali</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Potterton</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Yuan</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>van Vlijmen</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Karplus</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Evaluation of comparative protein modeling by MODELLER</article-title>
        <source>Proteins Struct Funct Bioinf</source>
        <year>1995</year>
        <volume>23</volume>
        <issue>3</issue>
        <fpage>318</fpage>
        <lpage>326</lpage>
        <pub-id pub-id-type="doi">10.1002/prot.340230306</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <mixed-citation publication-type="other">AlphaFold2 GitHub page. <ext-link ext-link-type="uri" xlink:href="https://github.com/deepmind/alphafold">https://github.com/deepmind/alphafold</ext-link>. Accessed 2023-01-19</mixed-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Villard</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Kilic</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Rothlisberger</surname>
            <given-names>U</given-names>
          </name>
        </person-group>
        <article-title>Surrogate based genetic algorithm method for efficient identification of low-energy peptide structures</article-title>
        <source>J Chem Theory Comput</source>
        <year>2023</year>
        <volume>19</volume>
        <issue>3</issue>
        <fpage>1080</fpage>
        <lpage>1097</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jctc.2c01078</pub-id>
        <pub-id pub-id-type="pmid">36692853</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>
<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">J Cheminform</journal-id>
    <journal-id journal-id-type="iso-abbrev">J Cheminform</journal-id>
    <journal-title-group>
      <journal-title>Journal of Cheminformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1758-2946</issn>
    <publisher>
      <publisher-name>Springer International Publishing</publisher-name>
      <publisher-loc>Cham</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10498622</article-id>
    <article-id pub-id-type="pmid">37700347</article-id>
    <article-id pub-id-type="publisher-id">748</article-id>
    <article-id pub-id-type="doi">10.1186/s13321-023-00748-2</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>pyPept: a python library to generate atomistic 2D and 3D representations of peptides</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Ochoa</surname>
          <given-names>Rodrigo</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Brown</surname>
          <given-names>J. B.</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Fox</surname>
          <given-names>Thomas</given-names>
        </name>
        <address>
          <email>thomas.fox@boehringer-ingelheim.com</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <aff id="Aff1"><institution-wrap><institution-id institution-id-type="GRID">grid.420061.1</institution-id><institution-id institution-id-type="ISNI">0000 0001 2171 7500</institution-id><institution>Medicinal Chemistry, </institution><institution>Boehringer Ingelheim Pharma GmbH &amp; Co KG, </institution></institution-wrap>88397 Biberach/Riss, Germany </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>12</day>
      <month>9</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>12</day>
      <month>9</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2023</year>
    </pub-date>
    <volume>15</volume>
    <elocation-id>79</elocation-id>
    <history>
      <date date-type="received">
        <day>24</day>
        <month>4</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>23</day>
        <month>8</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2023</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <p id="Par1">We present pyPept, a set of executables and underlying python-language classes to easily create, manipulate, and analyze peptide molecules using the FASTA, HELM, or recently-developed BILN notations. The framework enables the analysis of both pure proteinogenic peptides as well as those with non-natural amino acids, including support to assemble a customizable monomer library, without requiring programming. From line notations, a peptide is transformed into a molecular graph for 2D depiction tasks, the calculation of physicochemical properties, and other systematic analyses or processing pipelines. The package includes a module to rapidly generate approximate peptide conformers by incorporating secondary structure restraints either given by the user or predicted via pyPept, and a wrapper tool is also provided to automate the generation and output of 2D and 3D representations of a peptide directly from the line notation. HELM and BILN notations that include circular, branched, or stapled peptides are fully supported, eliminating errors in structure creation that are prone during manual drawing and connecting. The framework and common workflows followed in pyPept are described together with illustrative examples. pyPept has been released at: <ext-link ext-link-type="uri" xlink:href="https://github.com/Boehringer-Ingelheim/pyPept">https://github.com/Boehringer-Ingelheim/pyPept</ext-link>.</p>
      <sec>
        <title>Graphical Abstract</title>
        <p id="Par2">
          <graphic position="anchor" xlink:href="13321_2023_748_Figa_HTML" id="MO1"/>
        </p>
      </sec>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s13321-023-00748-2.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Peptide</kwd>
      <kwd>Python</kwd>
      <kwd>Conformer</kwd>
      <kwd>BILN</kwd>
      <kwd>RDKit</kwd>
      <kwd>Cheminformatics</kwd>
      <kwd>Molecule depiction</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100008349</institution-id>
            <institution>Boehringer Ingelheim</institution>
          </institution-wrap>
        </funding-source>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© Springer Nature Switzerland AG 2023</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Introduction</title>
    <p id="Par3">Peptides as therapeutic or diagnostic agents are a modality with proven translational success in clinical applications; more than 80 drugs on the market are peptide molecules, with others actively in clinical trials [<xref ref-type="bibr" rid="CR1">1</xref>]. In an accompanying fashion, suitable in silico tools to represent, process, and analyze peptides have been steadily published [<xref ref-type="bibr" rid="CR2">2</xref>–<xref ref-type="bibr" rid="CR5">5</xref>].</p>
    <p id="Par4">Among the available open source tools, many are restricted to natural amino acids, but some also support enhancement by a selected set of non-natural amino acids (NNAAs). This is the case for packages available in the Rosetta Commons project [<xref ref-type="bibr" rid="CR6">6</xref>, <xref ref-type="bibr" rid="CR7">7</xref>], the PEPstrMOD webserver [<xref ref-type="bibr" rid="CR8">8</xref>], and the SwissSideChain database [<xref ref-type="bibr" rid="CR9">9</xref>]. Some tools, inspired by full proteins, can fail when dealing with more complex peptidic structures, including staples (e.g., a hydrocarbon chain attached to two amino acids in order to help maintain alpha-helical conformation), non-stapled cyclic peptides, or multi-chain branched peptides [<xref ref-type="bibr" rid="CR10">10</xref>].</p>
    <p id="Par5">For the representation of peptides, the FASTA format is widely used and can be employed, e.g., to calculate peptide properties based on experimentally available physicochemical properties of natural monomers [<xref ref-type="bibr" rid="CR11">11</xref>]. However, it is restricted to natural amino acids and simple peptides without extra bonds such as those involved in formation of cyclic peptides. For example, the natural hormone oxytocin can be represented in FASTA by its sequence CYIQNCPLG, but the ring formed by the disulfide bond between the first and sixth cysteine monomers is not accounted for.</p>
    <p id="Par6">For more complex macromolecular entities, line notations that go beyond the simple FASTA format have been developed. A prominent example is the Hierarchical Editing Language for Macromolecules (HELM) [<xref ref-type="bibr" rid="CR12">12</xref>, <xref ref-type="bibr" rid="CR13">13</xref>]. It relies on a monomer library that defines the individual monomers and their possible connection points. Together with the information on how these monomers are connected, this allows an unambiguous representation of even very complex biomolecular entities in a string. Recently, we described an intuitive line notation termed BILN (Boehringer Ingelheim Line Notation) [<xref ref-type="bibr" rid="CR14">14</xref>], where a simple but, critically, human-readable and robust format allows the representation and manipulation of complex multi-chain peptides including staples and cycles.</p>
    <p id="Par7">In principle, small molecule cheminformatics tools are also applicable to peptides [<xref ref-type="bibr" rid="CR15">15</xref>]. However, they look at the peptide as a whole and neglect its construction principle that it is an ordered sequence of monomers, something that potentially could be used for more efficient computations. In addition, even when these tools offer monomer support, this is usually limited to a hard-coded list of amino acids. RDKit, a widely used open-source package for cheminformatics tasks [<xref ref-type="bibr" rid="CR16">16</xref>], contains functions to process HELM inputs, but only for a set of 48 residues, consisting of the coding L-amino acids, their D-counterparts, and analogs of natural amino acids, specifically norleucine, selenomethionine, ornithine, norvaline, <sc>l</sc>- and <sc>d</sc>-alpha aminobutyric acid, pyroglutamic acid, and the acetyl capping group.</p>
    <p id="Par8">Another largely unsolved issue is the generation of suitable 3D conformations for peptides that can be used as starting points for MD simulations [<xref ref-type="bibr" rid="CR17">17</xref>], mutation pipeline analysis [<xref ref-type="bibr" rid="CR18">18</xref>], or structure-based modeling and drug design. Currently, most tools either focus on structure prediction for whole proteins or small molecules, but they do not cover the middle occupied by medium- to large-sized peptides [<xref ref-type="bibr" rid="CR5">5</xref>].</p>
    <p id="Par9">Finally, pharmaceutical companies generally require the all-atom representation of a molecule for its registration in various databases, and historically molecules have been drawn manually before registration. Even for short peptides such as the 9-mer oxytocin, manual drawing of these structures can be error-prone, and the rate of error grows as peptide molecules evolve to contain longer main chains, staples, cycles, or fatty-acid chains connected to a peptide main chain. There is a clear need for a platform that can take line formats of peptides, including arbitrary NNAAs, and generate correct atomistic representations with no manual intervention.</p>
    <p id="Par10">To fill the void of a toolkit for working with peptides containing arbitrary monomers, unusual connections between monomers, or branching, we developed the python-language toolbox pyPept for handling complex peptides. pyPept is internally based on BILN, but it also can accept FASTA or HELM representations as input. Using a monomer library and the information contained in the input string, atom-level logical connections are validated, and the molecule can optionally be converted into a molecule object. This object can then be used to run typical cheminformatics analyses and predict conformers according to structural restraints. Figure <xref rid="Fig1" ref-type="fig">1</xref> shows a general overview of the package.<fig id="Fig1"><label>Fig. 1</label><caption><p>Summary of pyPept architecture and interfaces. Each monomer is mapped to chemical structure through a monomer dictionary, and monomers are connected by bonds defined for each monomer’s R-groups to yield a sanitized <italic>Sequence</italic> object. Information from the <italic>Sequence</italic> is used to create a <italic>Molecule</italic> object, and two options for 2D depictions are provided. Further, one can predict <italic>Conformer</italic> objects using additional secondary structure restraints. An executable driver program (run_pyPept.py) encapsulates the sequence-to-structure conversion, offering a non-programmatic way to obtain conformers directly from line notations. The solid lines indicate the default run_pyPept.py execution, with supported options shown by dotted arrows</p></caption><graphic xlink:href="13321_2023_748_Fig1_HTML" id="MO2"/></fig></p>
    <p id="Par11">Briefly, the package works as follows. The pyPept <italic>Sequence</italic> class converts the input line notation into a <italic>Sequence</italic> object, which is an ordered list of monomers together with all of the connectivity information necessary to accurately build the molecule. The <italic>Molecule</italic> class takes this <italic>Sequence</italic> object and creates a molecule object with a sanitized 2D representation. The <italic>Conformer</italic> class leverages distance geometry functionality to generate a 3D conformer. Here we found it necessary to provide secondary structure constraints in the 3D generation to obtain conformations that can be close to a bioactive one. Therefore, we developed a method to predict peptide secondary structure elements, which we packaged into the <italic>SecStructPredictor</italic> class. In addition, we developed a helper class <italic>Converter</italic> which can be used to translate from HELM to BILN and back, or to convert a FASTA string into BILN. A wrapper script (run_pyPept.py) is also provided that automates the sequence-to-structure/conformer conversion of a general peptide, thus demonstrating how to connect the individual components, and providing a non-programmatic way to use pyPept by simple command line execution.</p>
  </sec>
  <sec id="Sec2">
    <title>Requirements</title>
    <p id="Par12">pyPept has been written in Python 3.9 using language-standard internal libraries in conjunction with the external packages RDKit [<xref ref-type="bibr" rid="CR16">16</xref>] and BioPython [<xref ref-type="bibr" rid="CR19">19</xref>], both available through a package installer such as Conda. Instructions on how to install pyPept using a setup.py script are provided in the code repository. Examples of execution and direct module calls are given in the repository README file and in a directory “examples” included in the software distribution.</p>
  </sec>
  <sec id="Sec3">
    <title>Methods</title>
    <sec id="Sec4">
      <title>Secondary structure prediction</title>
      <p id="Par13">From the BIOLIP database (version 04.2022) [<xref ref-type="bibr" rid="CR20">20</xref>], we extracted the 8112 bioactive peptides for which secondary structure annotations were returned by the DSSP software [<xref ref-type="bibr" rid="CR21">21</xref>]. The peptides, composed of natural amino acids, are unique sequences showing a diverse set of possible bound conformations, including 30% of helical peptides and 10% forming parallel or anti-parallel beta sheets, even for small peptides of five or six amino acids. They were used to develop a matching algorithm between a query sequence and the bioactive conformers.</p>
      <p id="Par14">Our method compares the query peptide by matching its amino acids to those contained in database sequences, where a substitution matrix generates the matching score [<xref ref-type="bibr" rid="CR22">22</xref>]. The selected matrix was fitted to capture the similarity between known protein structures and is available in the BioPython package [<xref ref-type="bibr" rid="CR19">19</xref>]. We chose to not allow alignment gaps, thus, the comparisons are made between fragments of the same length. Therefore, if the query sequence is shorter than the database sequence, we compare it with fragments of the database sequence. Inversely, when the database sequence is shorter than the query sequence, the query sequence is fragmented to obtain peptides of the same length.</p>
      <p id="Par15">In practical applications, we recommend a peptide query length in the range of 5–20 amino acids, given that the reference set of bound peptides from BIOLIP has a maximum length of 30 amino acids. For each comparison between sequences <italic>A</italic> and <italic>B</italic>, we calculate a similarity score using the selected substitution matrix and normalize it by:<disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_{AB}=\frac{score_{AB}}{\sqrt{score_{AA}*score_{BB}}}$$\end{document}</tex-math><mml:math id="M2" display="block"><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi mathvariant="italic">AB</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>s</mml:mi><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:msub><mml:mi>e</mml:mi><mml:mrow><mml:mi mathvariant="italic">AB</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:msqrt><mml:mrow><mml:mi>s</mml:mi><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:msub><mml:mi>e</mml:mi><mml:mrow><mml:mi mathvariant="italic">AA</mml:mi></mml:mrow></mml:msub><mml:mrow/><mml:mo>∗</mml:mo><mml:mi>s</mml:mi><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:msub><mml:mi>e</mml:mi><mml:mrow><mml:mi mathvariant="italic">BB</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msqrt></mml:mfrac></mml:mrow></mml:math><graphic xlink:href="13321_2023_748_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq1"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$score_{AB}$$\end{document}</tex-math><mml:math id="M4"><mml:mrow><mml:mi>s</mml:mi><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:msub><mml:mi>e</mml:mi><mml:mrow><mml:mi mathvariant="italic">AB</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq1.gif"/></alternatives></inline-formula> is the alignment score between the two peptides, and <inline-formula id="IEq2"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$score_{AA}$$\end{document}</tex-math><mml:math id="M6"><mml:mrow><mml:mi>s</mml:mi><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:msub><mml:mi>e</mml:mi><mml:mrow><mml:mi mathvariant="italic">AA</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq2.gif"/></alternatives></inline-formula> and <inline-formula id="IEq3"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$score_{BB}$$\end{document}</tex-math><mml:math id="M8"><mml:mrow><mml:mi>s</mml:mi><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:msub><mml:mi>e</mml:mi><mml:mrow><mml:mi mathvariant="italic">BB</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq3.gif"/></alternatives></inline-formula> are the alignment scores for each peptide with itself.</p>
      <p id="Par16">After finding matches above a similarity threshold, a profile with the hits is created, and each amino acid in the query sequence is assigned the most frequent secondary structure element. Using a set of experimental peptide structures with different secondary structure categories, we found a threshold for <inline-formula id="IEq4"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_{AB}$$\end{document}</tex-math><mml:math id="M10"><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi mathvariant="italic">AB</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq4.gif"/></alternatives></inline-formula> in the range of 0.6–0.7 to be suitable (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>).</p>
      <p id="Par17">We also compared the predictions of our method against various state-of-the-art tools such as PSIPRED [<xref ref-type="bibr" rid="CR23">23</xref>], ModPep [<xref ref-type="bibr" rid="CR24">24</xref>], and AlphaFold2 [<xref ref-type="bibr" rid="CR25">25</xref>]. Specifically, we selected a list of 38 peptides available in the PDB with lengths between 8 and 17 amino acids and a diverse set of secondary structure motifs to test the predictions (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S2). We found that the approach described here correctly predicts the secondary structure for most peptides, with 8 of 10 correct predictions for complex motifs based on co-occurring alpha-helix and beta-sheet conformations. This result was on par or better than the methods tested (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S3). Our method can be easily embedded with the rest of the pyPept functionalities. Still further, the user can include secondary structure restraints from any other method or simply by manually providing the expected conformation as exemplified in the “<xref rid="Sec12" ref-type="sec">Typical workflow</xref>” section.</p>
    </sec>
    <sec id="Sec5">
      <title>Monomer library</title>
      <p id="Par18">Allowing arbitrary monomers in a peptide sequence affords monomer definitions that connect the identifiers in the line notation with the underlying chemical structure. In pyPept, we use a dictionary which, for each monomer, contains the following information:<list list-type="bullet"><list-item><p id="Par19">chemical structure</p></list-item><list-item><p id="Par20">connection points</p></list-item><list-item><p id="Par21">possible leaving groups (that are removed when the respective connection points are used in a bond between monomers)</p></list-item><list-item><p id="Par22">the abbreviation to be used in the peptide line notation</p></list-item><list-item><p id="Par23">the natural analog of a monomer, if applicable</p></list-item><list-item><p id="Par24">additional information about a specific monomer such as its role, i.e., amino acid or capping group,</p></list-item><list-item><p id="Par25">its stereochemical SMILES representation, and finally,</p></list-item><list-item><p id="Par26">a corresponding PDB residue code.</p></list-item></list>As per the extensible definition of BILN [<xref ref-type="bibr" rid="CR14">14</xref>], these monomers can be any non-natural amino acid or non-amino acid with annotated leaving groups that will allow the formation of inter-monomer bonds. No assumptions on the type or nature of monomers, or their connections, are made. This allows the formation of additional bonds to describe branched peptides, as well as cyclic peptides using peptide, disulfide, or potentially other types of bonds (see examples in Table <xref rid="Tab1" ref-type="table">1</xref>).</p>
      <p id="Par27">The Pistoia Alliance maintains a dataset of 322 HELM monomers [<xref ref-type="bibr" rid="CR26">26</xref>]. This dataset closely follows the monomer entry (dictionary) format described above; thus, the 322 HELM monomers are adaptable for use in pyPept with only minor conversion effort. For convenience and to remove an entry barrier to apply pyPept, we provide a python script in the repository to convert the HELM monomer dataset into a format suitable for pyPept, as well as a structure definition file (SDF) with this modified monomer information. This can also be used to add proprietary monomers, as long as they are provided as a SDF file in the Pistoia monomer format. Specifically, the user can add the SDF format of the new monomer in the monomers.sdf file, which is located in the “data” folder of pyPept. The SDF requires some tags to allow the correct mapping into the dictionary, including the name of the monomer, the type of monomer (amino acid or capping group), the abbreviated symbol, if the monomer has a natural analog, and the corresponding leaving R-groups to bond other monomers. An example of a monomer entry using the SDF format is provided in the data folder with the name example_preProcessed_monomer.sdf.</p>
      <p id="Par28">We note that in the Pistoia monomer set, no PDB residue names are provided. We chose to use the names reported in the chemical component dictionary [<xref ref-type="bibr" rid="CR27">27</xref>]. If a monomer is not contained in this dictionary, a new random, though nonetheless unique, PDB code is created.</p>
    </sec>
  </sec>
  <sec id="Sec6">
    <title>pyPept design: key classes and examples</title>
    <sec id="Sec7">
      <title>Sequence class</title>
      <p id="Par29">This is the main class of the pyPept package. It converts the input BILN string (or HELM/FASTA transformed by the <italic>Converter</italic> class) into a <italic>Sequence</italic> object. In Table <xref rid="Tab1" ref-type="table">1</xref> we show some examples of peptides using the three input formats, where the FASTA format can be used only to represent natural amino acids, and it includes no information on branching or cyclization.<table-wrap id="Tab1"><label>Table 1</label><caption><p>Examples of peptides using the three input formats BILN [<xref ref-type="bibr" rid="CR14">14</xref>], HELM [<xref ref-type="bibr" rid="CR13">13</xref>], and FASTA</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">BILN</th><th align="left">HELM</th><th align="left">FASTA</th></tr></thead><tbody><tr><td align="left">P-E-P-T-I-D-E</td><td align="left">PEPTIDE1{P.E.P.T.I.D.E}$$$$V2.0</td><td align="left">PEPTIDE</td></tr><tr><td align="left">ac-D-T-H-F-E-I-A-am</td><td align="left">PEPTIDE1{[ac].D.T.H.F.E.I.A.[am]}$$$$V2.0</td><td align="left">None</td></tr><tr><td align="left">C(1,3)-A-A-A-C(1,3)</td><td align="left">PEPTIDE1{C.A.A.A.C} $PEPTIDE1,PEPTIDE1,1:R3-5:R3$$$V2.0</td><td align="left">CAAAC</td></tr><tr><td align="left">C(1,1)-A-A-A-C(1,2)</td><td align="left">PEPTIDE1{C.A.A.A.C} $PEPTIDE1,PEPTIDE1,1:R1-5:R2$$$V2.0</td><td align="left">CAAAC</td></tr><tr><td align="left">A-G-Q-A-A-K(1,3)-E-F-I-A-A.G-L-E-E(1,3)</td><td align="left">PEPTIDE1{A.G.Q.A.A.K.E.F.I.A.A}| PEPTIDE2{G.L.E.E} $PEPTIDE1,PEPTIDE2,6:R3-4:R3$$$V2.0</td><td align="left">None</td></tr><tr><td align="left">N-Iva-F-D-I-meT-N-A-L-W-Y-Aib-K</td><td align="left">PEPTIDE1{N.[Iva].F.D.I.[meT].N.A.L.W.Y.[Aib].K} $$$$V2.0</td><td align="left">None</td></tr></tbody></table><table-wrap-foot><p>BILN’s support for specification of R-groups in bond formation means that linkage types can be easily specified. The BILN notation uses the monomer format <italic>m(n,i)</italic> to indicate that monomer <italic>m</italic> is a part of the cycle or branch assigned ID number <italic>n</italic> and connects via R-group <italic>i</italic> to a paired monomer <italic>p(n,j)</italic>. <italic>i</italic> and <italic>j</italic> can be any R-groups involved in single bond linkage formation. Thus, the cyclization by cysteine linkage [C(1,3)] is by disulfide bond in the third example but by peptide bond [C(1,1), C(1,2)] in the fourth example</p></table-wrap-foot></table-wrap></p>
      <p id="Par30">The <italic>Sequence </italic>object holds a list of dictionaries, with each dictionary containing the necessary information for one monomer in the peptide sequence (see above, Monomer Library). In addition, a <italic>Sequence</italic> object stores the information about which monomers are connected and which atoms form these bonds. A <italic>Sequence</italic> object goes beyond a pair of bonds found in two adjacent amino acids of a linear FASTA sequence and also manages the information necessary for cycles, branches, staples, and other peptide-specific bond structure.</p>
      <p id="Par31">In all monomer structures, the R-groups at connection points that are not involved in bonds are replaced by their correct leaving group (e.g., the R2-group at the C-terminal end of the peptide is replaced by an OH forming the C-terminal carboxylic acid). During this procedure, checks guarantee that the input BILN string is not malformed, that the correct number of bond identifiers are present, and that it only contains monomers included in the monomer library.</p>
      <p id="Par32">As a final processing step, we change the names of the atoms that are part of an amino acid residue and those of the capping groups to follow the IUPAC convention which appends greek letters to the element symbol (e.g., C<inline-formula id="IEq6"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M12"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq6.gif"/></alternatives></inline-formula> as CA, C<inline-formula id="IEq7"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta$$\end{document}</tex-math><mml:math id="M14"><mml:mi>β</mml:mi></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq7.gif"/></alternatives></inline-formula> as CB, hydrogens HB2 and HB3 attached to C<inline-formula id="IEq8"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta$$\end{document}</tex-math><mml:math id="M16"><mml:mi>β</mml:mi></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq8.gif"/></alternatives></inline-formula>). To achieve these changes, the greekify method from the rdkit-to-params package [<xref ref-type="bibr" rid="CR28">28</xref>] was adapted for our needs.</p>
      <p id="Par33">A class method reads the monomer information and stores it in a Pandas DataFrame [<xref ref-type="bibr" rid="CR29">29</xref>] object to allow easy access for the various <italic>Sequence</italic> methods.</p>
    </sec>
    <sec id="Sec8">
      <title>Molecule class</title>
      <p id="Par34">The <italic>Molecule</italic> class contains methods to convert the <italic>Sequence</italic> object into an RDKit ROMol molecule object. To accomplish this, we sequentially take each monomer in the <italic>Sequence</italic> object, merge its RDKit representation with the growing peptide and then add, if applicable, the appropriate bond(s) between the new monomer and the peptide.</p>
      <p id="Par35">To obtain an extended conformation of the peptide without overlapping atoms, the rdDepictor module from RDKit is used [<xref ref-type="bibr" rid="CR30">30</xref>]. Alternatively, we have developed a procedure which changes the phi/psi angles in the protein backbone to obtain an extended 2D conformation and adjusts the torsion between C<inline-formula id="IEq9"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M18"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq9.gif"/></alternatives></inline-formula> and C<inline-formula id="IEq10"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta$$\end{document}</tex-math><mml:math id="M20"><mml:mi>β</mml:mi></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq10.gif"/></alternatives></inline-formula> to obtain an aesthetically pleasing 2D depiction of the peptide without overlapping atoms (see Fig. <xref rid="Fig1" ref-type="fig">1</xref> for an example).</p>
      <p id="Par36">At this point, the 2D peptide object can be exported by a <italic>Molecule</italic> object method to different molecular formats, such as SMILES or SDF.</p>
    </sec>
    <sec id="Sec9">
      <title>SecStructPredictor class</title>
      <p id="Par37">Initial tests showed that the inclusion of secondary structure information is necessary to have a chance of obtaining a 3D structure that is close to the experimental conformation and is suitable for 3D modeling tasks. As this experimental information is often unavailable, and the existing secondary structure prediction tools did not return results sufficiently accurate enough for our purposes when applied to short and medium-length peptides, we decided to develop a similarity-based tool to assign secondary structure motifs to the peptides based on a dataset of bioactive conformers available in the PDB (see Methods section).</p>
      <p id="Par38">The <italic>SecStructPredictor</italic> class collects the functionality to obtain, for a given peptide, a prediction of its secondary structure. Since experimental peptide structures are mostly of natural amino acids, in this protocol, non-natural amino acids are first mutated into their natural analogs, then this mutated peptide is compared with all sequences in the database. To assign the natural analog, pyPept checks first if the information about a natural analog was included in the dictionary. If not, a fingerprint-based similarity run is performed between the monomer of interest and the 20 standard natural residues. A potential natural analog is assigned based on the highest Tanimoto score above a threshold of 0.5. Otherwise, the non-natural amino acid is replaced by an alanine.</p>
      <p id="Par39">After this mapping and search for matching contexts, the secondary structure element for each residue in the original peptide is returned. The secondary structure categories are: B (beta bridge), H (alpha helix), E (beta strand), S (bend), T (turn), and G (3/10 helix). Of course, any other secondary structure prediction tool can be used to generate these annotations and use them to drive pyPept’s conformer generator.</p>
    </sec>
    <sec id="Sec10">
      <title>Conformer class</title>
      <p id="Par40">The <italic>Conformer</italic> class is used to generate a 3D conformer of the peptide. We employ the ETKDGv3 (Experimental-Torsion Knowledge Distance Geometry) method from RDKit followed by minimization of the structure [<xref ref-type="bibr" rid="CR31">31</xref>, <xref ref-type="bibr" rid="CR32">32</xref>].</p>
      <p id="Par41">Using distance geometry without any constraints usually leads to random coil 3D structures. To end up with peptide conformations that are helical, for example, one needs secondary structure information as constraints for the algorithm. As this information often is not available experimentally, we suggest to use a tool to predict the peptide secondary structure. This can be the <italic>SecStructPredictor</italic> class presented above, or any other method.</p>
      <p id="Par42">Based on the input secondary structure elements, fixed distances are assigned in the RDKit-defined distance bounds matrix to force the formation of <inline-formula id="IEq11"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M22"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq11.gif"/></alternatives></inline-formula>-helix or <inline-formula id="IEq12"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta$$\end{document}</tex-math><mml:math id="M24"><mml:mi>β</mml:mi></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq12.gif"/></alternatives></inline-formula>-sheet conformations, which is not a feature available in small molecule-oriented packages such as RDKit. The constraints are complemented by the ETKDGv3 knowledge-based potential to predict the peptide conformers. In the case of non-natural amino acids, the natural analogs (if available in the monomer dictionary) are used to assign the secondary structure element. If no natural analog is available, alanines are used instead. At the end of this processing pipeline, a PDB file can be generated with unique 3-letter residue codes and atom names conforming to the IUPAC rules.</p>
      <p id="Par43">In our experience, this procedure is suitable for sequences shorter than 20 amino acids; for longer sequences, many well-established protein modeling tools are available as well [<xref ref-type="bibr" rid="CR33">33</xref>].</p>
      <p id="Par44">We note that AlphaFold [<xref ref-type="bibr" rid="CR25">25</xref>, <xref ref-type="bibr" rid="CR34">34</xref>] can also predict the conformations of even short peptides, which are often surprisingly close to the experimental bound or free structure. However, this is again a tool that can only deal with natural amino acids. Thus, pre- and post-processing steps are necessary: first, replace the NNAA with a close natural analog; second, conduct the AlphaFold prediction; third, mutate the analog monomer back to the NNAA using the conformer obtained.</p>
    </sec>
    <sec id="Sec11">
      <title>Converter class</title>
      <p id="Par45">The native input format of the <italic>Sequence</italic> class is BILN. To allow one to start from a HELM or FASTA representation, we also provide a format conversion class [<xref ref-type="bibr" rid="CR14">14</xref>]. The <italic>Converter</italic> class allows a two-way conversion between HELM and BILN, and from FASTA to BILN.</p>
    </sec>
  </sec>
  <sec id="Sec12">
    <title>Typical workflows</title>
    <sec id="Sec13">
      <title>API-based workflow</title>
      <p id="Par46">We envision a typical use case in which one wishes to obtain a 2D representation stored in SDF format, starting from a BILN sequence. With the aforementioned pyPept classes, this could look as follows:<graphic position="anchor" xlink:href="13321_2023_748_Figb_HTML" id="MO3"/></p>
      <p id="Par47">From there, a few lines of additional code would then generate a PDB file with a 3D representation of the input peptide, based on the prediction or specified input of its secondary structure:<graphic position="anchor" xlink:href="13321_2023_748_Figc_HTML" id="MO4"/></p>
      <p id="Par48">A graphical summary of this workflow is shown in Fig. <xref rid="Fig2" ref-type="fig">2</xref>.<fig id="Fig2"><label>Fig. 2</label><caption><p>Detailed description of peptide 2D/3D generation from sequence. <bold>a</bold> Main components of the monomer dictionary used to define each BILN component and to allow the generation of peptide bonds between them. In addition, the monomer atoms are named according to the IUPAC convention. <bold>b</bold> Example of a peptide with a non-natural amino acid and the 2D depiction of the RDKit molecular object with modified peptide bond dihedrals to minimize overlapping atoms. <bold>c</bold> Scheme showing the prediction of the secondary structure of the example peptide in (<bold>b</bold>), the addition of restrained distances into the RDKit bound matrix, and the subsequent prediction of the most probable conformer using the ETKDGv3 method</p></caption><graphic xlink:href="13321_2023_748_Fig2_HTML" id="MO5"/></fig></p>
      <p id="Par49">The workflow above is a routine task. To automate this workflow and remove the need for one to implement it themselves, we provide a command line wrapper script which takes the peptide representation and additional options as command-line arguments:<graphic position="anchor" xlink:href="13321_2023_748_Figd_HTML" id="MO6"/></p>
    </sec>
    <sec id="Sec14">
      <title>All-in-one execution</title>
      <p id="Par50">The sequence-to-conformer protocol can be run all at once by executing the provided wrapper script. An example execution using a randomly-generated peptide sequence is as follows:<graphic position="anchor" xlink:href="13321_2023_748_Fige_HTML" id="MO7"/>where the capped peptide in BILN format is used as input (with quotation to avoid any mis-processing by the host operating system), and the RDKit built-in function is used to generate the 2D depiction. As examples, we ran the method with a set of peptides having different features, including the presence of non-natural amino acids, capping groups, and the presence of multiple chains (Fig. <xref rid="Fig3" ref-type="fig">3</xref>). In the second case (Fig. <xref rid="Fig3" ref-type="fig">3</xref>b), the peptide main chain is predicted as partly <inline-formula id="IEq13"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M26"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq13.gif"/></alternatives></inline-formula>-helical based on our conformer prediction method. In the third case (Fig. <xref rid="Fig3" ref-type="fig">3</xref>c), a branched peptide with a bond connection between a lysine and a glutamic acid is shown.<fig id="Fig3"><label>Fig. 3</label><caption><p>Example of peptides formatted with pyPept, sequences are shown in BILN format. <bold>a</bold> Capped peptide with acetyl group at the N-terminal part and an amino group at the C-terminal part. <bold>b</bold> A peptide with three non-natural amino acids highlighted in green (Iva: Isovaline), red (meT: <italic>N</italic>-Methyl-Threonine) and blue (Aib: Alpha-aminoisobutyric acid). In this case, the main peptide was predicted as an <inline-formula id="IEq14"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M28"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq14.gif"/></alternatives></inline-formula>-helix. <bold>c</bold> A peptide with a branch generated between a lysine and a glutamic acid through the third R-group located in their side chains. The bridge is identifiable in both the 2D and 3D representations</p></caption><graphic xlink:href="13321_2023_748_Fig3_HTML" id="MO8"/></fig></p>
    </sec>
  </sec>
  <sec id="Sec15">
    <title>Conclusions</title>
    <p id="Par51">With clinical precedent for their therapeutic benefit, peptides have been and will continue to be actively developed, with increasingly complex topologies, necessitating a complementary infrastructure for peptide information communication (e.g., BILN in presentations or patent applications), automated conversion of the human-communicable format into formats that can be directly submitted to compound registration systems, and for computational chemistry purposes. The pyPept package provides a publicly accessible collaborative effort to achieve these goals, with a low barrier to entry which enables less tech-savvy experimental and design research organizations to maximally benefit. pyPept facilitates the generation of 2D and 3D conformations of a peptide even in the presence of non-natural amino acids, non-amino-acid monomers, branches, and cyclic structures, which are certain to increase as peptide synthesis technologies have continued to improve.</p>
    <p id="Par52">For peptide design teams, they can easily convert a series of peptides stored in a spreadsheet with one monomer per column into matching BILNs. Then, it is straightforward to directly apply the pyPept 2D depiction pipeline and generate 2D representations for all peptides. Since 2D representation is still at the core of the compound registration process for many companies, use of pyPept for systematic representation generation avoids the error-prone manual drawing of peptide structures.</p>
    <p id="Par53">The 3D pipeline produces a peptide structure that can be used as a starting point for MD simulations, structure-based modeling efforts, or other methods to obtain low-energy conformations of the peptide [<xref ref-type="bibr" rid="CR35">35</xref>]. It remains to be clarified, admittedly, how well our procedure predicts the bioactive conformations of peptides. One of the issues is that all secondary structure predictors (as other peptide/protein conformer predictors, including AlphaFold) work based on natural amino acids. The introduction of NNAAs in a post-processing step may completely alter the local conformation and, thus, the overall structure of the peptide. We fully acknowledge the need for a more systematic analysis.</p>
    <p id="Par54">Despite such an aspect, we believe that pyPept is a framework that will facilitate the generation of 2D and 3D structures of complex peptides, reducing human error and accelerating not only drug discovery but all research fields involving peptides.
</p>
    <sec id="Sec16" sec-type="data-availability">
      <title>Data availability</title>
      <p id="Par55"><list list-type="bullet"><list-item><p id="Par56">Project name: pyPept (version 1.0)</p></list-item><list-item><p id="Par57">Project home page: <ext-link ext-link-type="uri" xlink:href="https://github.com/Boehringer-Ingelheim/pyPept">https://github.com/Boehringer-Ingelheim/pyPept</ext-link></p></list-item><list-item><p id="Par58">Operating system(s) tested: Linux</p></list-item><list-item><p id="Par59">Programming language: Python 3.9 or higher</p></list-item><list-item><p id="Par60">Other requirements: RDKit 2020 or later; Biopython 1.7.9 recommended.</p></list-item><list-item><p id="Par61">License: MIT</p></list-item></list>The code is available as a Github repository. Any questions related to the implementation can be directed to the authors’ email accounts.</p>
    </sec>
  </sec>
  <sec sec-type="supplementary-material">
    <sec id="Sec17">
      <title>Supplementary Information</title>
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="13321_2023_748_MOESM1_ESM.pdf">
            <caption>
              <p><bold>Additional file 1.</bold> Validation and assessment of the secondary structure predictor.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher's Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>We thank Alexander Weber, Nils Weskamp, Stefan Peters, and Peter Haebel for helpful discussions, valuable suggestions, and assistance during review of software code.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Author contributions</title>
    <p>RO, JB, and TF created, reviewed and implemented the code, wrote the documentation and the manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>All authors are full time employees at Boehringer Ingelheim Pharma GmbH &amp; Co KG.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar1" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par62">The authors declare that they have no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Muttenthaler</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>King</surname>
            <given-names>GF</given-names>
          </name>
          <name>
            <surname>Adams</surname>
            <given-names>DJ</given-names>
          </name>
          <name>
            <surname>Alewood</surname>
            <given-names>PF</given-names>
          </name>
        </person-group>
        <article-title>Trends in peptide drug discovery</article-title>
        <source>Nat Rev Drug Discov</source>
        <year>2021</year>
        <volume>20</volume>
        <issue>4</issue>
        <fpage>309</fpage>
        <lpage>325</lpage>
        <pub-id pub-id-type="doi">10.1038/s41573-020-00135-8</pub-id>
        <pub-id pub-id-type="pmid">33536635</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Vanhee</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>van der Sloot</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Verschueren</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Serrano</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Rousseau</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Schymkowitz</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Computational design of peptide ligands</article-title>
        <source>Trends Biotechnol</source>
        <year>2011</year>
        <volume>29</volume>
        <issue>5</issue>
        <fpage>231</fpage>
        <lpage>239</lpage>
        <pub-id pub-id-type="doi">10.1016/j.tibtech.2011.01.004</pub-id>
        <pub-id pub-id-type="pmid">21316780</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Uhlig</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Kyprianou</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Martinelli</surname>
            <given-names>FG</given-names>
          </name>
          <name>
            <surname>Oppici</surname>
            <given-names>CA</given-names>
          </name>
          <name>
            <surname>Heiligers</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Hills</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Calvo</surname>
            <given-names>XR</given-names>
          </name>
          <name>
            <surname>Verhaert</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>The emergence of peptides in the pharmaceutical business: from exploration to exploitation</article-title>
        <source>EuPA Open Proteom</source>
        <year>2014</year>
        <volume>4</volume>
        <fpage>58</fpage>
        <lpage>69</lpage>
        <pub-id pub-id-type="doi">10.1016/j.euprot.2014.05.003</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Milton</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Bellamy</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Swayze</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Hart</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Weisser</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Hecht</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Rotstein</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>HELM software for biopolymers</article-title>
        <source>J Chem Inf Model</source>
        <year>2017</year>
        <volume>57</volume>
        <issue>6</issue>
        <fpage>1233</fpage>
        <lpage>1239</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jcim.6b00442</pub-id>
        <pub-id pub-id-type="pmid">28471655</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ochoa</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Cossio</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>PepFun: open source protocols for peptide-related computational analysis</article-title>
        <source>Molecules</source>
        <year>2021</year>
        <volume>26</volume>
        <issue>6</issue>
        <fpage>1664</fpage>
        <pub-id pub-id-type="doi">10.3390/molecules26061664</pub-id>
        <pub-id pub-id-type="pmid">33809815</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mulligan</surname>
            <given-names>VK</given-names>
          </name>
          <name>
            <surname>Workman</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Sun</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Rettie</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Worrall</surname>
            <given-names>LJ</given-names>
          </name>
          <name>
            <surname>Craven</surname>
            <given-names>TW</given-names>
          </name>
          <name>
            <surname>King</surname>
            <given-names>DT</given-names>
          </name>
          <name>
            <surname>Hosseinzadeh</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Watkins</surname>
            <given-names>AM</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Computationally designed peptide macrocycle inhibitors of New Delhi metallo-<inline-formula id="IEq16"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta$$\end{document}</tex-math><mml:math id="M30"><mml:mi>β</mml:mi></mml:math><inline-graphic xlink:href="13321_2023_748_Article_IEq16.gif"/></alternatives></inline-formula>-lactamase 1</article-title>
        <source>Proc Natl Acad Sci</source>
        <year>2021</year>
        <volume>118</volume>
        <issue>12</issue>
        <fpage>e2012800118</fpage>
        <pub-id pub-id-type="doi">10.1073/pnas.2012800118</pub-id>
        <pub-id pub-id-type="pmid">33723038</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Alam</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Goldstein</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Xia</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Porter</surname>
            <given-names>KA</given-names>
          </name>
          <name>
            <surname>Kozakov</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Schueler-Furman</surname>
            <given-names>O</given-names>
          </name>
        </person-group>
        <article-title>High-resolution global peptide-protein docking using fragments-based piper-flexpepdock</article-title>
        <source>PLoS Comput Biol</source>
        <year>2017</year>
        <volume>13</volume>
        <issue>12</issue>
        <fpage>1005905</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1005905</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Singh</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Singh</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Tuknait</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Chaudhary</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Singh</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Kumaran</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Raghava</surname>
            <given-names>GP</given-names>
          </name>
        </person-group>
        <article-title>Pepstrmod: structure prediction of peptides containing natural, non-natural and modified residues</article-title>
        <source>Biol Direct</source>
        <year>2015</year>
        <volume>10</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>19</lpage>
        <pub-id pub-id-type="doi">10.1186/s13062-015-0103-4</pub-id>
        <pub-id pub-id-type="pmid">25564011</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gfeller</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Michielin</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Zoete</surname>
            <given-names>V</given-names>
          </name>
        </person-group>
        <article-title>Swisssidechain: a molecular and structural database of non-natural sidechains</article-title>
        <source>Nucleic Acids Res</source>
        <year>2012</year>
        <volume>41</volume>
        <issue>D1</issue>
        <fpage>327</fpage>
        <lpage>332</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gks991</pub-id>
        <pub-id pub-id-type="pmid">23104426</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lenci</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Trabocchi</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Peptidomimetic toolbox for drug discovery</article-title>
        <source>Chem Soc Rev</source>
        <year>2020</year>
        <volume>49</volume>
        <issue>11</issue>
        <fpage>3262</fpage>
        <lpage>3277</lpage>
        <pub-id pub-id-type="doi">10.1039/D0CS00102C</pub-id>
        <pub-id pub-id-type="pmid">32255135</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kawashima</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Pokarowski</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Pokarowska</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Kolinski</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Katayama</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Kanehisa</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>AAindex: amino acid index database, progress report 2008</article-title>
        <source>Nucleic Acids Res</source>
        <year>2007</year>
        <volume>36</volume>
        <issue>suppl-1</issue>
        <fpage>202</fpage>
        <lpage>205</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkm998</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhang</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Xi</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Stanton</surname>
            <given-names>RV</given-names>
          </name>
          <name>
            <surname>Rotstein</surname>
            <given-names>SH</given-names>
          </name>
        </person-group>
        <article-title>HELM: a hierarchical notation language for complex biomolecule structure representation</article-title>
        <source>J Chem Inf Model</source>
        <year>2012</year>
        <volume>52</volume>
        <issue>10</issue>
        <fpage>2796</fpage>
        <lpage>2806</lpage>
        <pub-id pub-id-type="doi">10.1021/ci3001925</pub-id>
        <pub-id pub-id-type="pmid">22947017</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <mixed-citation publication-type="other">Pistoia HELM GitHub page. <ext-link ext-link-type="uri" xlink:href="https://github.com/PistoiaHELM">https://github.com/PistoiaHELM</ext-link>. Accessed 2023-01-19</mixed-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fox</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Bieler</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Haebel</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Ochoa</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Peters</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Weber</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>BILN: a human-readable line notation for complex peptides</article-title>
        <source>J Chem Inf Model</source>
        <year>2022</year>
        <volume>62</volume>
        <issue>17</issue>
        <fpage>3942</fpage>
        <lpage>3947</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jcim.2c00703</pub-id>
        <pub-id pub-id-type="pmid">35984937</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tu</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Cheng</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Lu</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Du</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Advancement and prospects of bioinformatics analysis for studying bioactive peptides from food-derived protein: sequence, structure, and functions</article-title>
        <source>TrAC Trends Anal Chem</source>
        <year>2018</year>
        <volume>105</volume>
        <fpage>7</fpage>
        <lpage>17</lpage>
        <pub-id pub-id-type="doi">10.1016/j.trac.2018.04.005</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <mixed-citation publication-type="other">Landrum G RDKit. <ext-link ext-link-type="uri" xlink:href="https://rdkit.org">https://rdkit.org</ext-link>. Accessed 2023-01-19</mixed-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kamenik</surname>
            <given-names>AS</given-names>
          </name>
          <name>
            <surname>Lessel</surname>
            <given-names>U</given-names>
          </name>
          <name>
            <surname>Fuchs</surname>
            <given-names>JE</given-names>
          </name>
          <name>
            <surname>Fox</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Liedl</surname>
            <given-names>KR</given-names>
          </name>
        </person-group>
        <article-title>Peptidic macrocycles—conformational sampling and thermodynamic characterization</article-title>
        <source>J Chem Inf Model</source>
        <year>2018</year>
        <volume>58</volume>
        <issue>5</issue>
        <fpage>982</fpage>
        <lpage>992</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jcim.8b00097</pub-id>
        <pub-id pub-id-type="pmid">29652495</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ochoa</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Soler</surname>
            <given-names>MA</given-names>
          </name>
          <name>
            <surname>Laio</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Cossio</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>PARCE: protocol for amino acid refinement through computational evolution</article-title>
        <source>Comput Phys Commun</source>
        <year>2021</year>
        <volume>260</volume>
        <fpage>107716</fpage>
        <pub-id pub-id-type="doi">10.1016/j.cpc.2020.107716</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cock</surname>
            <given-names>PJ</given-names>
          </name>
          <name>
            <surname>Antao</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Chang</surname>
            <given-names>JT</given-names>
          </name>
          <name>
            <surname>Chapman</surname>
            <given-names>BA</given-names>
          </name>
          <name>
            <surname>Cox</surname>
            <given-names>CJ</given-names>
          </name>
          <name>
            <surname>Dalke</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Friedberg</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Hamelryck</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Kauff</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Wilczynski</surname>
            <given-names>B</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Biopython: freely available python tools for computational molecular biology and bioinformatics</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <issue>11</issue>
        <fpage>1422</fpage>
        <lpage>1423</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp163</pub-id>
        <pub-id pub-id-type="pmid">19304878</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yang</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Roy</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>BioLiP: a semi-manually curated database for biologically relevant ligand–protein interactions</article-title>
        <source>Nucleic Acids Res</source>
        <year>2012</year>
        <volume>41</volume>
        <issue>D1</issue>
        <fpage>1096</fpage>
        <lpage>1103</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gks966</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Frishman</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Argos</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Knowledge-based protein secondary structure assignment</article-title>
        <source>Proteins Struct Funct Bioinform</source>
        <year>1995</year>
        <volume>23</volume>
        <issue>4</issue>
        <fpage>566</fpage>
        <lpage>579</lpage>
        <pub-id pub-id-type="doi">10.1002/prot.340230412</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Johnson</surname>
            <given-names>MS</given-names>
          </name>
          <name>
            <surname>Overington</surname>
            <given-names>JP</given-names>
          </name>
          <name>
            <surname>Blundell</surname>
            <given-names>TL</given-names>
          </name>
        </person-group>
        <article-title>Alignment and searching for common protein folds using a data bank of structural templates</article-title>
        <source>J Mol Biol</source>
        <year>1993</year>
        <volume>231</volume>
        <issue>3</issue>
        <fpage>735</fpage>
        <lpage>752</lpage>
        <pub-id pub-id-type="doi">10.1006/jmbi.1993.1323</pub-id>
        <pub-id pub-id-type="pmid">8515448</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Buchan</surname>
            <given-names>DW</given-names>
          </name>
          <name>
            <surname>Jones</surname>
            <given-names>DT</given-names>
          </name>
        </person-group>
        <article-title>The psipred protein analysis workbench: 20 years on</article-title>
        <source>Nucleic Acids Res</source>
        <year>2019</year>
        <volume>47</volume>
        <issue>W1</issue>
        <fpage>402</fpage>
        <lpage>407</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkz297</pub-id>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yan</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Huang</surname>
            <given-names>S-Y</given-names>
          </name>
        </person-group>
        <article-title>Efficient conformational ensemble generation of protein-bound peptides</article-title>
        <source>J Cheminform</source>
        <year>2017</year>
        <volume>9</volume>
        <issue>1</issue>
        <fpage>59</fpage>
        <pub-id pub-id-type="doi">10.1186/s13321-017-0246-7</pub-id>
        <pub-id pub-id-type="pmid">29168051</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jumper</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Evans</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Pritzel</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Green</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Figurnov</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Ronneberger</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Tunyasuvunakool</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Bates</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Žídek</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Potapenko</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Highly accurate protein structure prediction with AlphaFold</article-title>
        <source>Nature</source>
        <year>2021</year>
        <volume>596</volume>
        <issue>7873</issue>
        <fpage>583</fpage>
        <lpage>589</lpage>
        <pub-id pub-id-type="doi">10.1038/s41586-021-03819-2</pub-id>
        <pub-id pub-id-type="pmid">34265844</pub-id>
      </element-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <mixed-citation publication-type="other">Pistoia HELM monomer dataset. <ext-link ext-link-type="uri" xlink:href="https://github.com/PistoiaHELM/HELMMonomerSets">https://github.com/PistoiaHELM/HELMMonomerSets</ext-link>. Accessed 2023-01-19</mixed-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <mixed-citation publication-type="other">PDB component dictionary. <ext-link ext-link-type="uri" xlink:href="https://www.ebi.ac.uk/pdbe-srv/pdbechem/">https://www.ebi.ac.uk/pdbe-srv/pdbechem/</ext-link>. Accessed 2023-01-19</mixed-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <mixed-citation publication-type="other">RDKit to params. <ext-link ext-link-type="uri" xlink:href="https://github.com/matteoferla/rdkit_to_params">https://github.com/matteoferla/rdkit_to_params</ext-link>. Accessed 2023-01-19</mixed-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>McKinney</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <source>Python for data analysis: data wrangling with Pandas, NumPy, and IPython</source>
        <year>2012</year>
        <publisher-loc>Sebastopol</publisher-loc>
        <publisher-name>O’Reilly Media Inc.</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <mixed-citation publication-type="other">RDKit - rdDepictor documentation. <ext-link ext-link-type="uri" xlink:href="http://rdkit.org/docs/source/rdkit.Chem.rdDepictor.html">http://rdkit.org/docs/source/rdkit.Chem.rdDepictor.html</ext-link>. Accessed 2023-01-19</mixed-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Riniker</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Landrum</surname>
            <given-names>GA</given-names>
          </name>
        </person-group>
        <article-title>Better informed distance geometry: using what we know to improve conformation generation</article-title>
        <source>J Chem Inf Model</source>
        <year>2015</year>
        <volume>55</volume>
        <issue>12</issue>
        <fpage>2562</fpage>
        <lpage>2574</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jcim.5b00654</pub-id>
        <pub-id pub-id-type="pmid">26575315</pub-id>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wang</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Witek</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Landrum</surname>
            <given-names>GA</given-names>
          </name>
          <name>
            <surname>Riniker</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Improving conformer generation for small rings and macrocycles based on distance geometry and experimental torsional-angle preferences</article-title>
        <source>J Chem Inf Model</source>
        <year>2020</year>
        <volume>60</volume>
        <issue>4</issue>
        <fpage>2044</fpage>
        <lpage>2058</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jcim.0c00025</pub-id>
        <pub-id pub-id-type="pmid">32155061</pub-id>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Šali</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Potterton</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Yuan</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>van Vlijmen</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Karplus</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Evaluation of comparative protein modeling by MODELLER</article-title>
        <source>Proteins Struct Funct Bioinf</source>
        <year>1995</year>
        <volume>23</volume>
        <issue>3</issue>
        <fpage>318</fpage>
        <lpage>326</lpage>
        <pub-id pub-id-type="doi">10.1002/prot.340230306</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <mixed-citation publication-type="other">AlphaFold2 GitHub page. <ext-link ext-link-type="uri" xlink:href="https://github.com/deepmind/alphafold">https://github.com/deepmind/alphafold</ext-link>. Accessed 2023-01-19</mixed-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Villard</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Kilic</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Rothlisberger</surname>
            <given-names>U</given-names>
          </name>
        </person-group>
        <article-title>Surrogate based genetic algorithm method for efficient identification of low-energy peptide structures</article-title>
        <source>J Chem Theory Comput</source>
        <year>2023</year>
        <volume>19</volume>
        <issue>3</issue>
        <fpage>1080</fpage>
        <lpage>1097</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jctc.2c01078</pub-id>
        <pub-id pub-id-type="pmid">36692853</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

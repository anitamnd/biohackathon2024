<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10709540</article-id>
    <article-id pub-id-type="pmid">37991849</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btad691</article-id>
    <article-id pub-id-type="publisher-id">btad691</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Applications Note</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Genetics and Population Analysis</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>ChromaX: a fast and scalable breeding program simulator</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0009-0004-2783-7932</contrib-id>
        <name>
          <surname>Younis</surname>
          <given-names>Omar G</given-names>
        </name>
        <aff><institution>Department of Computer Science, ETH Zurich</institution>, Zürich, 8092, <country country="CH">Switzerland</country></aff>
        <xref rid="btad691-cor1" ref-type="corresp"/>
        <!--omargallalaly.younis@inf.ethz.ch-->
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Turchetta</surname>
          <given-names>Matteo</given-names>
        </name>
        <aff><institution>Department of Computer Science, ETH Zurich</institution>, Zürich, 8092, <country country="CH">Switzerland</country></aff>
        <xref rid="btad691-cor1" ref-type="corresp"/>
        <!--matteo.turchetta@inf.ethz.ch-->
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Ariza Suarez</surname>
          <given-names>Daniel</given-names>
        </name>
        <aff><institution>Department of Environmental Systems Science, Molecular Plant Breeding</institution>, ETH Zurich, <country country="CH">Switzerland</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Yates</surname>
          <given-names>Steven</given-names>
        </name>
        <aff><institution>Department of Environmental Systems Science, Molecular Plant Breeding</institution>, ETH Zurich, <country country="CH">Switzerland</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Studer</surname>
          <given-names>Bruno</given-names>
        </name>
        <aff><institution>Department of Environmental Systems Science, Molecular Plant Breeding</institution>, ETH Zurich, <country country="CH">Switzerland</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Athanasiadis</surname>
          <given-names>Ioannis N</given-names>
        </name>
        <aff><institution>Department of Social Sciences, Wageningen University &amp; Research</institution>, Wageningen, 6708, <country country="NL">The Netherlands</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Krause</surname>
          <given-names>Andreas</given-names>
        </name>
        <aff><institution>Department of Computer Science, ETH Zurich</institution>, Zürich, 8092, <country country="CH">Switzerland</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Buhmann</surname>
          <given-names>Joachim M</given-names>
        </name>
        <aff><institution>Department of Computer Science, ETH Zurich</institution>, Zürich, 8092, <country country="CH">Switzerland</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-8549-8351</contrib-id>
        <name>
          <surname>Corinzia</surname>
          <given-names>Luca</given-names>
        </name>
        <aff><institution>Department of Computer Science, ETH Zurich</institution>, Zürich, 8092, <country country="CH">Switzerland</country></aff>
        <xref rid="btad691-cor1" ref-type="corresp"/>
        <!--luca.corinzia@inf.ethz.ch-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Schwartz</surname>
          <given-names>Russell</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="btad691-cor1">Corresponding authors. Department of Computer Science, ETH Zurich, OAT Y, Andreasstrasse 5, Zürich, 8092, Switzerland. E-mails: <email>omargallalaly.younis@inf.ethz.ch</email> (O.G.Y.), <email>luca.corinzia@inf.ethz.ch</email> (L.C.), and <email>matteo.turchetta@inf.ethz.ch</email> (M.T.)</corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <month>12</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2023-11-22">
      <day>22</day>
      <month>11</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>22</day>
      <month>11</month>
      <year>2023</year>
    </pub-date>
    <volume>39</volume>
    <issue>12</issue>
    <elocation-id>btad691</elocation-id>
    <history>
      <date date-type="received">
        <day>16</day>
        <month>6</month>
        <year>2023</year>
      </date>
      <date date-type="rev-recd">
        <day>08</day>
        <month>10</month>
        <year>2023</year>
      </date>
      <date date-type="editorial-decision">
        <day>07</day>
        <month>11</month>
        <year>2023</year>
      </date>
      <date date-type="corrected-typeset">
        <day>08</day>
        <month>12</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2023. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2023</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btad691.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Summary</title>
        <p>ChromaX is a Python library that enables the simulation of genetic recombination, genomic estimated breeding value calculations, and selection processes. By utilizing GPU processing, it can perform these simulations up to two orders of magnitude faster than existing tools with standard hardware. This offers breeders and scientists new opportunities to simulate genetic gain and optimize breeding schemes.</p>
      </sec>
      <sec id="s2">
        <title>Availability and implementation</title>
        <p>The documentation is available at <ext-link xlink:href="https://chromax.readthedocs.io" ext-link-type="uri">https://chromax.readthedocs.io</ext-link>. The code is available at <ext-link xlink:href="https://github.com/kora-labs/chromax" ext-link-type="uri">https://github.com/kora-labs/chromax</ext-link>.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Wageningen University and Research research</institution>
          </institution-wrap>
        </funding-source>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="4"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Livestock and plant breeding is crucial to sustainable agriculture (<xref rid="btad691-B22" ref-type="bibr">Schön and Simianer 2015</xref>) and to develop new breeds more suited for specific environments or market demands (<xref rid="btad691-B20" ref-type="bibr">Qaim 2020</xref>). Recently, the availability of genomic data and advanced statistical methods have revolutionized breeding programs (<xref rid="btad691-B10" ref-type="bibr">Kim <italic toggle="yes">et al.</italic> 2020</xref>). Notably, genomic selection allows a breeder to predict the performance of an individual based on genetic makeup, avoiding expensive phenotyping (<xref rid="btad691-B14" ref-type="bibr">Meuwissen <italic toggle="yes">et al.</italic> 2001</xref>, <xref rid="btad691-B5" ref-type="bibr">Crossa <italic toggle="yes">et al.</italic> 2017</xref>). These new methods unlock various design possibilities for breeding schemes, making it harder to optimize them. Moreover, a single breeding cycle can take many years, involving many design choices during the process. Thus, there is a growing interest in using simulations to optimize breeding programs. The existing tools for simulating crosses are implemented in R (<xref rid="btad691-B2" ref-type="bibr">Broman <italic toggle="yes">et al.</italic> 2003</xref>, <xref rid="btad691-B15" ref-type="bibr">Mohammadi <italic toggle="yes">et al.</italic> 2015</xref>, <xref rid="btad691-B8" ref-type="bibr">Gaynor <italic toggle="yes">et al.</italic> 2020</xref>, <xref rid="btad691-B19" ref-type="bibr">Pook <italic toggle="yes">et al.</italic> 2020</xref>) or Julia (<xref rid="btad691-B4" ref-type="bibr">Chen <italic toggle="yes">et al.</italic> 2022</xref>). While they provide an extensive set of features, they are not capable of exploiting parallelism in high-performance computers that may be necessary for large and complex breeding schemes. For example, simulating a full-diallel cross of ten individuals with ten offspring results in 450 offspring, while a similar diallel of 20 individuals generates 1900 offspring. With this rapid scaling, simulating a full diallel in a breeding program with thousands of individuals may be unfeasible; hence developing tools that can speed up simulations is desirable. The most attractive language for this purpose is Python. Python is one of the most used programming languages for numerical computing and data science, with many libraries available for optimization and machine learning (<xref rid="btad691-B17" ref-type="bibr">Pedregosa <italic toggle="yes">et al.</italic> 2011</xref>, <xref rid="btad691-B1" ref-type="bibr">Bradbury <italic toggle="yes">et al.</italic> 2018</xref>, <xref rid="btad691-B16" ref-type="bibr">Paszke <italic toggle="yes">et al.</italic> 2019</xref>, <xref rid="btad691-B9" ref-type="bibr">Harris <italic toggle="yes">et al.</italic> 2020</xref>, <xref rid="btad691-B23" ref-type="bibr">Virtanen <italic toggle="yes">et al.</italic> 2020</xref>). Some of them allow exploiting parallelization capabilities of specialized hardware devices, such as Graphics Processing units (GPUs) and Tensor Processing Units (TPUs). Thus, developing a parallelizable Python tool for simulating crosses can increase the throughput of simulations and opens new opportunities to improve breeding efficiency. In this paper, we introduce ChromaX, a fast and scalable Python library that enables the stochastic simulation of the most common features in a breeding program like genetic recombination, fixation of genomes by doubled haploid induction, and selection. It can further calculate the Genomic Estimated Breeding Value (GEBV), and simulate genotype-by-environment interactions. ChromaX has been designed and implemented with scalability in mind and exploits recent advances in that direction from the Python language.</p>
  </sec>
  <sec>
    <title>2 Software description</title>
    <p>ChromaX is based on the high-performance numerical computing library JAX (<xref rid="btad691-B1" ref-type="bibr">Bradbury <italic toggle="yes">et al.</italic> 2018</xref>). Using JAX, ChromaX functions are compiled in XLA (Accelerated Linear Algebra) (<xref rid="btad691-B21" ref-type="bibr">Sabne 2020</xref>), a compiler for linear algebra that accelerates function execution according to the domain and hardware available. This allows ChromaX to run seamlessly on various devices, such as CPUs, GPUs, and TPUs exploiting the parallelization offered by a variety of high-performance computing devices. ChromaX is available with the open-source license 3-Clause BSD. Source code is available on GitHub and is also distributed via the Python package installer “pip” as <italic toggle="yes">chromax</italic>. In the following sections, we describe the core functions available with ChromaX; for a complete list see the documentation.</p>
    <sec>
      <title>2.1 Simulator initialization</title>
      <p>The simulator is initialized by providing a genetic linkage map supplied as a Pandas DataFrame (<xref rid="btad691-B12" ref-type="bibr">McKinney <italic toggle="yes">et al.</italic> 2010</xref>) or a path to a spreadsheet. In the genetic linkage map, each row represents a marker and columns contain the chromosome identifier, the position of the marker in centimorgans, and a column for each trait containing linear marker effects. Instead of marker positions, it can include a column indicating the probability of recombination occurring after the marker and before the next. The argument <italic toggle="yes">trait_names</italic> can be used to specify a list of trait names; every element must match a column name in the genetic linkage map. A heritability value for each trait can also be specified.</p>
    </sec>
    <sec>
      <title>2.2 Population data</title>
      <p>ChromaX represents the genome of an individual as a NumPy array of shape <inline-formula id="IE1"><mml:math id="IM1" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, where <italic toggle="yes">m</italic> is the total number of markers and <italic toggle="yes">d</italic> is the ploidy. Thus, a population of <italic toggle="yes">n</italic> individuals is represented as an array of shape <inline-formula id="IE2"><mml:math id="IM2" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. Please note that this encoding requires that input genetic data is phased, which can be achieved using a program such as Beagle (<xref rid="btad691-B3" ref-type="bibr">Browning <italic toggle="yes">et al.</italic> 2021</xref>). The simulator allows the user to load population data from a file and save it at any point in the breeding program simulation.</p>
    </sec>
    <sec>
      <title>2.3 Genetic recombination</title>
      <p>ChromaX simulates the genetic recombinations that take place during meiosis to create new haplotypes. For simplicity, we assume diploid species and the Poisson model for crossover interference (<xref rid="btad691-B13" ref-type="bibr">McPeek and Speed 1995</xref>). The genetic recombination function receives as input an array of genetic markers of the <italic toggle="yes">k</italic> parent pairs. The function performs crosses between pairs of parents and produces <italic toggle="yes">k</italic> offspring. The use of a single genetic recombination function for all biparental crosses allows the function to be parallelized across several dimensions, namely the number of crosses <italic toggle="yes">k</italic>, the pair of parents, and the ploidy number. Generalizations to autopolyploid species and to other models for crossover interference are left for future developments.</p>
    </sec>
    <sec>
      <title>2.4 Differentiable genetic recombination</title>
      <p>In ChromaX, we further develop a novel genetic recombination function that generalizes the one that takes place in biparental crosses. This function computes the parents of a cross by taking the weighted average of a population. With a weight vector of dimension <inline-formula id="IE3"><mml:math id="IM3" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, it performs <italic toggle="yes">k</italic> crosses on a population of size <italic toggle="yes">n</italic>. Using the JAX <italic toggle="yes">grad</italic> functionality, the user can obtain the analytical gradient with respect to parents’ weights. This provides a continuous relaxation of the genetic recombination that can be used to optimize the crossing by gradient-based methods (<xref rid="btad691-B18" ref-type="bibr">Polak 2012</xref>).</p>
    </sec>
    <sec>
      <title>2.5 Doubled haploid lines</title>
      <p>ChromaX can simulate the fixation of genomes by doubled haploid induction. The user can specify the number of offspring per individual <italic toggle="yes">dh</italic>; ChromaX generates a line from each individual of the population. With an input population of shape <inline-formula id="IE4"><mml:math id="IM4" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, the generated population will be of shape <inline-formula id="IE5"><mml:math id="IM5" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>d</mml:mi><mml:mi>h</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. Like the genetic recombination function, the parallelization occurs over the number of lines <italic toggle="yes">n</italic>, ploidy <italic toggle="yes">d</italic>, and the number of individuals per line <italic toggle="yes">dh</italic>.</p>
    </sec>
    <sec>
      <title>2.6 Traits</title>
      <p>ChromaX computes the GEBV for additive traits of a population using the marker effects available in the genetic linkage map or drawn from a standard probability distribution (e.g. normal distribution). The marker effects are represented as an array of shape <inline-formula id="IE6"><mml:math id="IM6" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, where <italic toggle="yes">t</italic> is the number of traits and <italic toggle="yes">m</italic> is the number of markers. ChromaX computes the genomic value by performing a tensor contraction of the marker effect with the input population array of markers of shape <inline-formula id="IE7"><mml:math id="IM7" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. The arrays are multiplied along the <italic toggle="yes">m</italic>-axis and then sum reduced along the <italic toggle="yes">m</italic> and <italic toggle="yes">d</italic> axes. The result is an array of shape <inline-formula id="IE8"><mml:math id="IM8" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> containing the GEBV of the population for each trait. This operation is well-suited for GPUs due to their ability to efficiently perform multi-dimensional multiplication and sum reduction.</p>
      <p>ChromaX can further model phenotypes that have a genotype-by-environment interaction component, as described in <xref rid="btad691-B7" ref-type="bibr">Faux <italic toggle="yes">et al.</italic> (2016)</xref>. In genotype-by-environment interaction, an environment is simulated as a random variable drawn from a normal distribution; this value multiplies a random additive trait that we fix at the beginning of the simulation with the variance determined by the heritability.</p>
    </sec>
    <sec>
      <title>2.7 Selection</title>
      <p>ChromaX enables the user to select the best individuals from a population based on a user-defined score. The score function accepts population data as input and returns an array of <italic toggle="yes">n</italic> scores, where <italic toggle="yes">n</italic> is the number of individuals in the population. Examples of scoring functions included in the software are breeding values (<xref rid="btad691-B11" ref-type="bibr">Lande and Thompson 1990</xref>), optimal haploid value (<xref rid="btad691-B6" ref-type="bibr">Daetwyler <italic toggle="yes">et al.</italic> 2015</xref>), and phenotype.</p>
    </sec>
  </sec>
  <sec>
    <title>3 Performance</title>
    <p>The performance of ChromaX is compared to AlphaSimR (<xref rid="btad691-B8" ref-type="bibr">Gaynor <italic toggle="yes">et al.</italic> 2020</xref>), a popular breeding program simulator. We perform this comparison on two hardware settings representing typical simulation conditions: a computing cluster CPU (<italic toggle="yes">AMD EPYC 7742 64-Core</italic>), and a commonly available GPU (<italic toggle="yes">Quadro RTX 6000</italic>). <xref rid="btad691-T1" ref-type="table">Table 1</xref> shows the computation times when simulating 1k, 10k, and 100k biparental crosses from a population described by 1000 markers across ten chromosomes. We do not benchmark AlphaSimR on GPU as it cannot run on this hardware. On the CPU, the computation time scales linearly with the number of crosses for both simulators and ChromaX is around three times faster than AlphaSimR for the tested sizes. In contrast, on GPU the computation time scales sub-linearly (<inline-formula id="IE9"><mml:math id="IM9" display="inline" overflow="scroll"><mml:mrow><mml:mn>10</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> the computation time for <inline-formula id="IE10"><mml:math id="IM10" display="inline" overflow="scroll"><mml:mrow><mml:mn>100</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> more crosses), and ChromaX can be hundreds of times faster than AlphaSimR.</p>
    <table-wrap position="float" id="btad691-T1">
      <label>Table 1.</label>
      <caption>
        <p>User CPU time in milliseconds as a function of the numbers of crosses for AlphaSimR and ChromaX on different hardware settings (CPU, CPU computer cluster AMD EPYC 7742 64-Core; GPU, Quadro RTX 6000).<xref rid="tblfn1" ref-type="table-fn"><sup>a</sup></xref></p>
      </caption>
      <table frame="hsides" rules="groups">
        <colgroup span="1">
          <col valign="top" align="left" span="1"/>
          <col valign="top" align="char" char="±" span="1"/>
          <col valign="top" align="char" char="±" span="1"/>
          <col valign="top" align="char" char="±" span="1"/>
        </colgroup>
        <thead>
          <tr>
            <th rowspan="1" colspan="1"/>
            <th colspan="3" rowspan="1">Number of crosses<hr/></th>
          </tr>
          <tr>
            <th rowspan="1" colspan="1"/>
            <th rowspan="1" colspan="1">1k</th>
            <th rowspan="1" colspan="1">10k</th>
            <th rowspan="1" colspan="1">100k</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td rowspan="1" colspan="1">AlphaSimR CPU</td>
            <td rowspan="1" colspan="1">150 ± 5</td>
            <td rowspan="1" colspan="1">1352 ± 9</td>
            <td rowspan="1" colspan="1">14 821 ± 149</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">ChromaX CPU</td>
            <td rowspan="1" colspan="1">47 ± 1</td>
            <td rowspan="1" colspan="1">473 ± 9</td>
            <td rowspan="1" colspan="1">5149 ± 94</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">ChromaX GPU</td>
            <td rowspan="1" colspan="1">3 ± 0</td>
            <td rowspan="1" colspan="1">6 ± 1</td>
            <td rowspan="1" colspan="1">29 ± 2</td>
          </tr>
        </tbody>
      </table>
      <table-wrap-foot>
        <fn id="tblfn1">
          <label>a</label>
          <p>Reported are the mean ± standard deviation over 100 simulations.</p>
        </fn>
      </table-wrap-foot>
    </table-wrap>
    <p>As a further comparison, we implement the breeding program described in <xref rid="btad691-B8" ref-type="bibr">Gaynor <italic toggle="yes">et al.</italic> (2020)</xref> with both simulators and compare the results. This breeding program, typical for an inbred species, assumes an initial diallel <inline-formula id="IE11"><mml:math id="IM11" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> characterized by 100 QTL per chromosome and 21 chromosomes. <inline-formula id="IE12"><mml:math id="IM12" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is obtained by performing random biparental crosses from <inline-formula id="IE13"><mml:math id="IM13" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. Then, we obtain homozygous lines using the doubled haploid technique. To obtain the final cultivars, we simulate visual selection on head rows and preliminary, advanced, and elite yield trials, where individuals are evaluated with increasing accuracy for smaller population sizes. <xref rid="btad691-F1" ref-type="fig">Figure 1</xref> shows the evolution of the population breeding values during the program. While some differences are expected due to the stochasticity of the process, the values are similar for both simulators. <xref rid="btad691-T2" ref-type="table">Table 2</xref> reports the simulation times when the population sizes at the different generations are multiplied by various scaling factors. The results are similar to <xref rid="btad691-T1" ref-type="table">Table 1</xref> with ChromaX achieving around <inline-formula id="IE14"><mml:math id="IM14" display="inline" overflow="scroll"><mml:mrow><mml:mn>500</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> speed up on GPU compared to AlphaSimR. Finally, in <xref rid="btad691-T3" ref-type="table">Table 3</xref>, we present data regarding the peak memory usage on the device, measured in megabytes. Notably, ChromaX exhibits higher memory consumption, attributed to its functional design and the utilization of vectorization techniques. We aim to tackle this issue in forthcoming releases.</p>
    <fig position="float" id="btad691-F1">
      <label>Figure 1.</label>
      <caption>
        <p>Comparision between the genetic value simulated by ChromaX and AlphaSimR for the same breeding schema. The <italic toggle="yes">F</italic><sub>0</sub> population contains 50 lines and <italic toggle="yes">F</italic><sub>1</sub> is created by 200 random biparental crosses. From each line in <italic toggle="yes">F</italic><sub>1</sub>, 100 doubled haploids are obtained and evaluated in head rows (HDRW) using visual selection (low accuracy). Then plants are evaluated with increasing accuracy while reducing the population size. PYT, Preliminary Yield Trial; AYT, Advanced Yield Trial; EYT, Elite Yield Trial</p>
      </caption>
      <graphic xlink:href="btad691f1" position="float"/>
    </fig>
    <table-wrap position="float" id="btad691-T2">
      <label>Table 2.</label>
      <caption>
        <p>User CPU time in seconds for simulating the inbred schema from <xref rid="btad691-B8" ref-type="bibr">Gaynor <italic toggle="yes">et al</italic>. (2020)</xref> as a function of the population size on different hardware.<xref rid="tblfn2" ref-type="table-fn"><sup>a</sup></xref></p>
      </caption>
      <table frame="hsides" rules="groups">
        <colgroup span="1">
          <col valign="top" align="left" span="1"/>
          <col valign="top" align="char" char="±" span="1"/>
          <col valign="top" align="char" char="±" span="1"/>
          <col valign="top" align="char" char="±" span="1"/>
        </colgroup>
        <thead>
          <tr>
            <th rowspan="1" colspan="1"/>
            <th colspan="3" rowspan="1">Scaling factor<hr/></th>
          </tr>
          <tr>
            <th rowspan="1" colspan="1"/>
            <th rowspan="1" colspan="1">1×</th>
            <th rowspan="1" colspan="1">5×</th>
            <th rowspan="1" colspan="1">20×</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td rowspan="1" colspan="1">AlphaSimR CPU</td>
            <td rowspan="1" colspan="1">3.37 ± 0.18</td>
            <td rowspan="1" colspan="1">26.59 ± 0.34</td>
            <td rowspan="1" colspan="1">95.71 ± 0.44</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">ChromaX CPU</td>
            <td rowspan="1" colspan="1">1.28 ± 0.02</td>
            <td rowspan="1" colspan="1">6.36 ± 0.06</td>
            <td rowspan="1" colspan="1">24.08 ± 0.31</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">ChromaX GPU</td>
            <td rowspan="1" colspan="1">0.02 ± 0.00</td>
            <td rowspan="1" colspan="1">0.05 ± 0.00</td>
            <td rowspan="1" colspan="1">0.15 ± 0.00</td>
          </tr>
        </tbody>
      </table>
      <table-wrap-foot>
        <fn id="tblfn2">
          <label>a</label>
          <p>Mean values ± standard deviation over 100 simulations are reported.</p>
        </fn>
      </table-wrap-foot>
    </table-wrap>
    <table-wrap position="float" id="btad691-T3">
      <label>Table 3.</label>
      <caption>
        <p>Device peak memory usage in gigabytes for simulating the inbred schema from <xref rid="btad691-B8" ref-type="bibr">Gaynor <italic toggle="yes">et al</italic>. (2020)</xref> as a function of the population size on different hardware.<xref rid="tblfn3" ref-type="table-fn"><sup>a</sup></xref></p>
      </caption>
      <table frame="hsides" rules="groups">
        <colgroup span="1">
          <col valign="top" align="left" span="1"/>
          <col valign="top" align="char" char="." span="1"/>
          <col valign="top" align="char" char="." span="1"/>
          <col valign="top" align="char" char="." span="1"/>
        </colgroup>
        <thead>
          <tr>
            <th rowspan="1" colspan="1"/>
            <th colspan="3" rowspan="1">Scaling factor<hr/></th>
          </tr>
          <tr>
            <th rowspan="1" colspan="1"/>
            <th rowspan="1" colspan="1">1×</th>
            <th rowspan="1" colspan="1">5×</th>
            <th rowspan="1" colspan="1">20×</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td rowspan="1" colspan="1">AlphaSimR CPU</td>
            <td rowspan="1" colspan="1">0.14</td>
            <td rowspan="1" colspan="1">0.40</td>
            <td rowspan="1" colspan="1">2.14</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">ChromaX CPU</td>
            <td rowspan="1" colspan="1">0.21</td>
            <td rowspan="1" colspan="1">0.64</td>
            <td rowspan="1" colspan="1">14.97</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">ChromaX GPU</td>
            <td rowspan="1" colspan="1">1.38</td>
            <td rowspan="1" colspan="1">8.79</td>
            <td rowspan="1" colspan="1">24.71</td>
          </tr>
        </tbody>
      </table>
      <table-wrap-foot>
        <fn id="tblfn3">
          <label>a</label>
          <p>We report the mean across 10 runs. We do not report the standard deviation as it is below the reported resolution for every entry of the table.</p>
        </fn>
      </table-wrap-foot>
    </table-wrap>
  </sec>
  <sec>
    <title>4 Discussion</title>
    <p>Our benchmarking experiments show that ChromaX can utilize modern hardware and parallelism to run simulations many times faster than AlphaSimR, in some cases by orders of magnitude. Crucially, this will pave the way for the systematic exploration and optimization of complex designs in modern breeding programs.</p>
  </sec>
  <sec>
    <title>5 Limitations</title>
    <p>ChromaX can simulate standard breeding programs but has limitations. First, ChromaX requires a genetic linkage map with marker effects and genetic data of the populations to simulate breeding cycles. To circumvent these requirements, other programs can simulate these data <italic toggle="yes">in silico</italic> by making some assumptions about the genetic features of the species. Second, ChromaX models additive traits and genotype-by-environment effects to simulate population phenotypes. ChromaX does not yet implement other biological effects, such as dominance or epistasis. Finally, ChromaX is designed for breeding programs of self- or open-pollinated species; other systems, such as hybrid breeding from distant heterotic groups, or monoecious/dioecious reproductive systems are not supported. Addressing these limitations will enable widespread use in a wider community.</p>
  </sec>
</body>
<back>
  <ack id="ack1">
    <title>Acknowledgements</title>
    <p>The authors thank the anonymous reviewers for their valuable suggestions.</p>
  </ack>
  <sec sec-type="COI-statement">
    <title>Conflict of interest</title>
    <p>None declared.</p>
  </sec>
  <sec>
    <title>Funding</title>
    <p>This work was supported by the Wageningen University and Research research theme “Data Driven Discoveries in a Changing Climate”, reference 531/AQ5541.</p>
  </sec>
  <sec sec-type="data-availability">
    <title>Data availability</title>
    <p>No new data were generated or analysed in support of this research.</p>
  </sec>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btad691-B1">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Bradbury</surname><given-names>J</given-names></string-name>, <string-name><surname>Frostig</surname><given-names>R</given-names></string-name>, <string-name><surname>Hawkins</surname><given-names>P</given-names></string-name></person-group><etal>et al</etal><italic toggle="yes">JAX: Composable Transformations of Python+NumPy Programs</italic>. <year>2018</year>.</mixed-citation>
    </ref>
    <ref id="btad691-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Broman</surname><given-names>KW</given-names></string-name>, <string-name><surname>Wu</surname><given-names>H</given-names></string-name>, <string-name><surname>Sen</surname><given-names>Ś</given-names></string-name></person-group><etal>et al</etal><article-title>R/qtl: QTL mapping in experimental crosses</article-title>. <source>Bioinformatics</source><year>2003</year>;<volume>19</volume>:<fpage>889</fpage>–<lpage>90</lpage>.<pub-id pub-id-type="pmid">12724300</pub-id></mixed-citation>
    </ref>
    <ref id="btad691-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Browning</surname><given-names>BL</given-names></string-name>, <string-name><surname>Tian</surname><given-names>X</given-names></string-name>, <string-name><surname>Zhou</surname><given-names>Y</given-names></string-name></person-group><etal>et al</etal><article-title>Fast two-stage phasing of large-scale sequence data</article-title>. <source>Am J Hum Genet</source><year>2021</year>;<volume>108</volume>:<fpage>1880</fpage>–<lpage>90</lpage>.<pub-id pub-id-type="pmid">34478634</pub-id></mixed-citation>
    </ref>
    <ref id="btad691-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chen</surname><given-names>CJ</given-names></string-name>, <string-name><surname>Garrick</surname><given-names>D</given-names></string-name>, <string-name><surname>Fernando</surname><given-names>R</given-names></string-name></person-group><etal>et al</etal><article-title>XSim version 2: simulation of modern breeding programs</article-title>. <source>G3 Genes Genomes Genet</source><year>2022</year>;<volume>12</volume>:<fpage>jkac032</fpage>.</mixed-citation>
    </ref>
    <ref id="btad691-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Crossa</surname><given-names>J</given-names></string-name>, <string-name><surname>Pérez-Rodríguez</surname><given-names>P</given-names></string-name>, <string-name><surname>Cuevas</surname><given-names>J</given-names></string-name></person-group><etal>et al</etal><article-title>Genomic selection in plant breeding: methods, models, and perspectives</article-title>. <source>Trends Plant Sci</source><year>2017</year>;<volume>22</volume>:<fpage>961</fpage>–<lpage>75</lpage>.<pub-id pub-id-type="pmid">28965742</pub-id></mixed-citation>
    </ref>
    <ref id="btad691-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Daetwyler</surname><given-names>HD</given-names></string-name>, <string-name><surname>Hayden</surname><given-names>MJ</given-names></string-name>, <string-name><surname>Spangenberg</surname><given-names>GC</given-names></string-name></person-group><etal>et al</etal><article-title>Selection on optimal haploid value increases genetic gain and preserves more genetic diversity relative to genomic selection</article-title>. <source>Genetics</source><year>2015</year>;<volume>200</volume>:<fpage>1341</fpage>–<lpage>8</lpage>.<pub-id pub-id-type="pmid">26092719</pub-id></mixed-citation>
    </ref>
    <ref id="btad691-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Faux</surname><given-names>A-M</given-names></string-name>, <string-name><surname>Gorjanc</surname><given-names>G</given-names></string-name>, <string-name><surname>Gaynor</surname><given-names>RC</given-names></string-name></person-group><etal>et al</etal><article-title>Alphasim: software for breeding program simulation</article-title>. <source>Plant Genome</source><year>2016</year>;<volume>9</volume>:<fpage>0013</fpage>.</mixed-citation>
    </ref>
    <ref id="btad691-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gaynor</surname><given-names>RC</given-names></string-name>, <string-name><surname>Gorjanc</surname><given-names>G</given-names></string-name>, <string-name><surname>Hickey</surname><given-names>JM.</given-names></string-name></person-group><article-title>AlphaSimR: an R package for breeding program simulations</article-title>. <source>G3 Genes Genomes Genet</source><year>2020</year>;<volume>11</volume>:<fpage>jkaa017</fpage>.</mixed-citation>
    </ref>
    <ref id="btad691-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Harris</surname><given-names>CR</given-names></string-name>, <string-name><surname>Millman</surname><given-names>KJ</given-names></string-name>, <string-name><surname>van der Walt</surname><given-names>SJ</given-names></string-name></person-group><etal>et al</etal><article-title>Array programming with NumPy</article-title>. <source>Nature</source><year>2020</year>;<volume>585</volume>:<fpage>357</fpage>–<lpage>62</lpage>.<pub-id pub-id-type="pmid">32939066</pub-id></mixed-citation>
    </ref>
    <ref id="btad691-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kim</surname><given-names>KD</given-names></string-name>, <string-name><surname>Kang</surname><given-names>Y</given-names></string-name>, <string-name><surname>Kim</surname><given-names>C.</given-names></string-name></person-group><article-title>Application of genomic big data in plant breeding: past, present, and future</article-title>. <source>Plants</source><year>2020</year>;<volume>9</volume>:<fpage>1454</fpage>.<pub-id pub-id-type="pmid">33126607</pub-id></mixed-citation>
    </ref>
    <ref id="btad691-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lande</surname><given-names>R</given-names></string-name>, <string-name><surname>Thompson</surname><given-names>R.</given-names></string-name></person-group><article-title>Efficiency of marker-assisted selection in the improvement of quantitative traits</article-title>. <source>Genetics</source><year>1990</year>;<volume>124</volume>:<fpage>743</fpage>–<lpage>56</lpage>.<pub-id pub-id-type="pmid">1968875</pub-id></mixed-citation>
    </ref>
    <ref id="btad691-B12">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>McKinney</surname><given-names>W</given-names></string-name></person-group><etal>et al</etal><year>2010</year>. Data structures for statistical computing in python. In: <italic toggle="yes">Proceedings of the 9th Python in Science Conference</italic>, Vol. 445. Austin, TX, <fpage>51</fpage>–<lpage>6</lpage>.</mixed-citation>
    </ref>
    <ref id="btad691-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>McPeek</surname><given-names>MS</given-names></string-name>, <string-name><surname>Speed</surname><given-names>TP.</given-names></string-name></person-group><article-title>Modeling interference in genetic recombination</article-title>. <source>Genetics</source><year>1995</year>;<volume>139</volume>:<fpage>1031</fpage>–<lpage>44</lpage>.<pub-id pub-id-type="pmid">7713406</pub-id></mixed-citation>
    </ref>
    <ref id="btad691-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Meuwissen</surname><given-names>TH</given-names></string-name>, <string-name><surname>Hayes</surname><given-names>BJ</given-names></string-name>, <string-name><surname>Goddard</surname><given-names>ME.</given-names></string-name></person-group><article-title>Prediction of total genetic value using genome-wide dense marker maps</article-title>. <source>Genetics</source><year>2001</year>;<volume>157</volume>:<fpage>1819</fpage>–<lpage>29</lpage>.<pub-id pub-id-type="pmid">11290733</pub-id></mixed-citation>
    </ref>
    <ref id="btad691-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Mohammadi</surname><given-names>M</given-names></string-name>, <string-name><surname>Tiede</surname><given-names>T</given-names></string-name>, <string-name><surname>Smith</surname><given-names>KP.</given-names></string-name></person-group><article-title>Popvar: a genome-wide procedure for predicting genetic variance and correlated response in biparental breeding populations</article-title>. <source>Crop Sci</source><year>2015</year>;<volume>55</volume>:<fpage>2068</fpage>–<lpage>77</lpage>.</mixed-citation>
    </ref>
    <ref id="btad691-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Paszke</surname><given-names>A</given-names></string-name>, <string-name><surname>Gross</surname><given-names>S</given-names></string-name>, <string-name><surname>Massa</surname><given-names>F</given-names></string-name></person-group><etal>et al</etal><article-title>Pytorch: an imperative style, high-performance deep learning library</article-title>. <source>Adv Neural Inf Process Syst</source><year>2019</year>;<bold>32</bold>:<fpage>8024</fpage>–<lpage>35</lpage>.</mixed-citation>
    </ref>
    <ref id="btad691-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Pedregosa</surname><given-names>F</given-names></string-name>, <string-name><surname>Varoquaux</surname><given-names>G</given-names></string-name>, <string-name><surname>Gramfort</surname><given-names>A</given-names></string-name></person-group><etal>et al</etal><article-title>Scikit-learn: machine learning in python</article-title>. <source>J Mach Learn Res</source><year>2011</year>;<volume>12</volume>:<fpage>2825</fpage>–<lpage>30</lpage>.</mixed-citation>
    </ref>
    <ref id="btad691-B18">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Polak</surname><given-names>E.</given-names></string-name></person-group><source>Optimization: Algorithms and Consistent Approximations</source>, Vol. <volume>124</volume>. <publisher-name>New York</publisher-name>: Springer Science &amp; Business Media, <year>2012</year>.</mixed-citation>
    </ref>
    <ref id="btad691-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Pook</surname><given-names>T</given-names></string-name>, <string-name><surname>Schlather</surname><given-names>M</given-names></string-name>, <string-name><surname>Simianer</surname><given-names>H.</given-names></string-name></person-group><article-title>MoBPS – modular breeding program simulator</article-title>. <source>G3 (Bethesda)</source><year>2020</year>;<volume>10</volume>:<fpage>1915</fpage>–<lpage>8</lpage>.<pub-id pub-id-type="pmid">32229505</pub-id></mixed-citation>
    </ref>
    <ref id="btad691-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Qaim</surname><given-names>M.</given-names></string-name></person-group><article-title>Role of new plant breeding technologies for food security and sustainable agricultural development</article-title>. <source>Applied Eco Perspectives Pol</source><year>2020</year>;<volume>42</volume>:<fpage>129</fpage>–<lpage>50</lpage>.</mixed-citation>
    </ref>
    <ref id="btad691-B21">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Sabne</surname><given-names>A.</given-names></string-name></person-group><italic toggle="yes">XLA: Compiling Machine Learning for Peak Performance</italic>. <year>2020</year>.</mixed-citation>
    </ref>
    <ref id="btad691-B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Schön</surname><given-names>CC</given-names></string-name>, <string-name><surname>Simianer</surname><given-names>H.</given-names></string-name></person-group><article-title>Resemblance between two relatives – animal and plant breeding</article-title>. <source>J Anim Breed Genet</source><year>2015</year>;<volume>132</volume>:<fpage>1</fpage>–<lpage>2</lpage>.<pub-id pub-id-type="pmid">25619306</pub-id></mixed-citation>
    </ref>
    <ref id="btad691-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Virtanen</surname><given-names>P</given-names></string-name>, <string-name><surname>Gommers</surname><given-names>R</given-names></string-name>, <string-name><surname>Oliphant</surname><given-names>TE</given-names></string-name></person-group><etal>et al</etal>; <collab>SciPy 1.0 Contributors</collab>. <article-title>SciPy 1.0: fundamental algorithms for scientific computing in python</article-title>. <source>Nat Methods</source><year>2020</year>;<volume>17</volume>:<fpage>352</fpage>.<pub-id pub-id-type="pmid">32094914</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10709540</article-id>
    <article-id pub-id-type="pmid">37991849</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btad691</article-id>
    <article-id pub-id-type="publisher-id">btad691</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Applications Note</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Genetics and Population Analysis</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>ChromaX: a fast and scalable breeding program simulator</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0009-0004-2783-7932</contrib-id>
        <name>
          <surname>Younis</surname>
          <given-names>Omar G</given-names>
        </name>
        <aff><institution>Department of Computer Science, ETH Zurich</institution>, Zürich, 8092, <country country="CH">Switzerland</country></aff>
        <xref rid="btad691-cor1" ref-type="corresp"/>
        <!--omargallalaly.younis@inf.ethz.ch-->
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Turchetta</surname>
          <given-names>Matteo</given-names>
        </name>
        <aff><institution>Department of Computer Science, ETH Zurich</institution>, Zürich, 8092, <country country="CH">Switzerland</country></aff>
        <xref rid="btad691-cor1" ref-type="corresp"/>
        <!--matteo.turchetta@inf.ethz.ch-->
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Ariza Suarez</surname>
          <given-names>Daniel</given-names>
        </name>
        <aff><institution>Department of Environmental Systems Science, Molecular Plant Breeding</institution>, ETH Zurich, <country country="CH">Switzerland</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Yates</surname>
          <given-names>Steven</given-names>
        </name>
        <aff><institution>Department of Environmental Systems Science, Molecular Plant Breeding</institution>, ETH Zurich, <country country="CH">Switzerland</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Studer</surname>
          <given-names>Bruno</given-names>
        </name>
        <aff><institution>Department of Environmental Systems Science, Molecular Plant Breeding</institution>, ETH Zurich, <country country="CH">Switzerland</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Athanasiadis</surname>
          <given-names>Ioannis N</given-names>
        </name>
        <aff><institution>Department of Social Sciences, Wageningen University &amp; Research</institution>, Wageningen, 6708, <country country="NL">The Netherlands</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Krause</surname>
          <given-names>Andreas</given-names>
        </name>
        <aff><institution>Department of Computer Science, ETH Zurich</institution>, Zürich, 8092, <country country="CH">Switzerland</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Buhmann</surname>
          <given-names>Joachim M</given-names>
        </name>
        <aff><institution>Department of Computer Science, ETH Zurich</institution>, Zürich, 8092, <country country="CH">Switzerland</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-8549-8351</contrib-id>
        <name>
          <surname>Corinzia</surname>
          <given-names>Luca</given-names>
        </name>
        <aff><institution>Department of Computer Science, ETH Zurich</institution>, Zürich, 8092, <country country="CH">Switzerland</country></aff>
        <xref rid="btad691-cor1" ref-type="corresp"/>
        <!--luca.corinzia@inf.ethz.ch-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Schwartz</surname>
          <given-names>Russell</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="btad691-cor1">Corresponding authors. Department of Computer Science, ETH Zurich, OAT Y, Andreasstrasse 5, Zürich, 8092, Switzerland. E-mails: <email>omargallalaly.younis@inf.ethz.ch</email> (O.G.Y.), <email>luca.corinzia@inf.ethz.ch</email> (L.C.), and <email>matteo.turchetta@inf.ethz.ch</email> (M.T.)</corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <month>12</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2023-11-22">
      <day>22</day>
      <month>11</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>22</day>
      <month>11</month>
      <year>2023</year>
    </pub-date>
    <volume>39</volume>
    <issue>12</issue>
    <elocation-id>btad691</elocation-id>
    <history>
      <date date-type="received">
        <day>16</day>
        <month>6</month>
        <year>2023</year>
      </date>
      <date date-type="rev-recd">
        <day>08</day>
        <month>10</month>
        <year>2023</year>
      </date>
      <date date-type="editorial-decision">
        <day>07</day>
        <month>11</month>
        <year>2023</year>
      </date>
      <date date-type="corrected-typeset">
        <day>08</day>
        <month>12</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2023. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2023</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btad691.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Summary</title>
        <p>ChromaX is a Python library that enables the simulation of genetic recombination, genomic estimated breeding value calculations, and selection processes. By utilizing GPU processing, it can perform these simulations up to two orders of magnitude faster than existing tools with standard hardware. This offers breeders and scientists new opportunities to simulate genetic gain and optimize breeding schemes.</p>
      </sec>
      <sec id="s2">
        <title>Availability and implementation</title>
        <p>The documentation is available at <ext-link xlink:href="https://chromax.readthedocs.io" ext-link-type="uri">https://chromax.readthedocs.io</ext-link>. The code is available at <ext-link xlink:href="https://github.com/kora-labs/chromax" ext-link-type="uri">https://github.com/kora-labs/chromax</ext-link>.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Wageningen University and Research research</institution>
          </institution-wrap>
        </funding-source>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="4"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Livestock and plant breeding is crucial to sustainable agriculture (<xref rid="btad691-B22" ref-type="bibr">Schön and Simianer 2015</xref>) and to develop new breeds more suited for specific environments or market demands (<xref rid="btad691-B20" ref-type="bibr">Qaim 2020</xref>). Recently, the availability of genomic data and advanced statistical methods have revolutionized breeding programs (<xref rid="btad691-B10" ref-type="bibr">Kim <italic toggle="yes">et al.</italic> 2020</xref>). Notably, genomic selection allows a breeder to predict the performance of an individual based on genetic makeup, avoiding expensive phenotyping (<xref rid="btad691-B14" ref-type="bibr">Meuwissen <italic toggle="yes">et al.</italic> 2001</xref>, <xref rid="btad691-B5" ref-type="bibr">Crossa <italic toggle="yes">et al.</italic> 2017</xref>). These new methods unlock various design possibilities for breeding schemes, making it harder to optimize them. Moreover, a single breeding cycle can take many years, involving many design choices during the process. Thus, there is a growing interest in using simulations to optimize breeding programs. The existing tools for simulating crosses are implemented in R (<xref rid="btad691-B2" ref-type="bibr">Broman <italic toggle="yes">et al.</italic> 2003</xref>, <xref rid="btad691-B15" ref-type="bibr">Mohammadi <italic toggle="yes">et al.</italic> 2015</xref>, <xref rid="btad691-B8" ref-type="bibr">Gaynor <italic toggle="yes">et al.</italic> 2020</xref>, <xref rid="btad691-B19" ref-type="bibr">Pook <italic toggle="yes">et al.</italic> 2020</xref>) or Julia (<xref rid="btad691-B4" ref-type="bibr">Chen <italic toggle="yes">et al.</italic> 2022</xref>). While they provide an extensive set of features, they are not capable of exploiting parallelism in high-performance computers that may be necessary for large and complex breeding schemes. For example, simulating a full-diallel cross of ten individuals with ten offspring results in 450 offspring, while a similar diallel of 20 individuals generates 1900 offspring. With this rapid scaling, simulating a full diallel in a breeding program with thousands of individuals may be unfeasible; hence developing tools that can speed up simulations is desirable. The most attractive language for this purpose is Python. Python is one of the most used programming languages for numerical computing and data science, with many libraries available for optimization and machine learning (<xref rid="btad691-B17" ref-type="bibr">Pedregosa <italic toggle="yes">et al.</italic> 2011</xref>, <xref rid="btad691-B1" ref-type="bibr">Bradbury <italic toggle="yes">et al.</italic> 2018</xref>, <xref rid="btad691-B16" ref-type="bibr">Paszke <italic toggle="yes">et al.</italic> 2019</xref>, <xref rid="btad691-B9" ref-type="bibr">Harris <italic toggle="yes">et al.</italic> 2020</xref>, <xref rid="btad691-B23" ref-type="bibr">Virtanen <italic toggle="yes">et al.</italic> 2020</xref>). Some of them allow exploiting parallelization capabilities of specialized hardware devices, such as Graphics Processing units (GPUs) and Tensor Processing Units (TPUs). Thus, developing a parallelizable Python tool for simulating crosses can increase the throughput of simulations and opens new opportunities to improve breeding efficiency. In this paper, we introduce ChromaX, a fast and scalable Python library that enables the stochastic simulation of the most common features in a breeding program like genetic recombination, fixation of genomes by doubled haploid induction, and selection. It can further calculate the Genomic Estimated Breeding Value (GEBV), and simulate genotype-by-environment interactions. ChromaX has been designed and implemented with scalability in mind and exploits recent advances in that direction from the Python language.</p>
  </sec>
  <sec>
    <title>2 Software description</title>
    <p>ChromaX is based on the high-performance numerical computing library JAX (<xref rid="btad691-B1" ref-type="bibr">Bradbury <italic toggle="yes">et al.</italic> 2018</xref>). Using JAX, ChromaX functions are compiled in XLA (Accelerated Linear Algebra) (<xref rid="btad691-B21" ref-type="bibr">Sabne 2020</xref>), a compiler for linear algebra that accelerates function execution according to the domain and hardware available. This allows ChromaX to run seamlessly on various devices, such as CPUs, GPUs, and TPUs exploiting the parallelization offered by a variety of high-performance computing devices. ChromaX is available with the open-source license 3-Clause BSD. Source code is available on GitHub and is also distributed via the Python package installer “pip” as <italic toggle="yes">chromax</italic>. In the following sections, we describe the core functions available with ChromaX; for a complete list see the documentation.</p>
    <sec>
      <title>2.1 Simulator initialization</title>
      <p>The simulator is initialized by providing a genetic linkage map supplied as a Pandas DataFrame (<xref rid="btad691-B12" ref-type="bibr">McKinney <italic toggle="yes">et al.</italic> 2010</xref>) or a path to a spreadsheet. In the genetic linkage map, each row represents a marker and columns contain the chromosome identifier, the position of the marker in centimorgans, and a column for each trait containing linear marker effects. Instead of marker positions, it can include a column indicating the probability of recombination occurring after the marker and before the next. The argument <italic toggle="yes">trait_names</italic> can be used to specify a list of trait names; every element must match a column name in the genetic linkage map. A heritability value for each trait can also be specified.</p>
    </sec>
    <sec>
      <title>2.2 Population data</title>
      <p>ChromaX represents the genome of an individual as a NumPy array of shape <inline-formula id="IE1"><mml:math id="IM1" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, where <italic toggle="yes">m</italic> is the total number of markers and <italic toggle="yes">d</italic> is the ploidy. Thus, a population of <italic toggle="yes">n</italic> individuals is represented as an array of shape <inline-formula id="IE2"><mml:math id="IM2" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. Please note that this encoding requires that input genetic data is phased, which can be achieved using a program such as Beagle (<xref rid="btad691-B3" ref-type="bibr">Browning <italic toggle="yes">et al.</italic> 2021</xref>). The simulator allows the user to load population data from a file and save it at any point in the breeding program simulation.</p>
    </sec>
    <sec>
      <title>2.3 Genetic recombination</title>
      <p>ChromaX simulates the genetic recombinations that take place during meiosis to create new haplotypes. For simplicity, we assume diploid species and the Poisson model for crossover interference (<xref rid="btad691-B13" ref-type="bibr">McPeek and Speed 1995</xref>). The genetic recombination function receives as input an array of genetic markers of the <italic toggle="yes">k</italic> parent pairs. The function performs crosses between pairs of parents and produces <italic toggle="yes">k</italic> offspring. The use of a single genetic recombination function for all biparental crosses allows the function to be parallelized across several dimensions, namely the number of crosses <italic toggle="yes">k</italic>, the pair of parents, and the ploidy number. Generalizations to autopolyploid species and to other models for crossover interference are left for future developments.</p>
    </sec>
    <sec>
      <title>2.4 Differentiable genetic recombination</title>
      <p>In ChromaX, we further develop a novel genetic recombination function that generalizes the one that takes place in biparental crosses. This function computes the parents of a cross by taking the weighted average of a population. With a weight vector of dimension <inline-formula id="IE3"><mml:math id="IM3" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, it performs <italic toggle="yes">k</italic> crosses on a population of size <italic toggle="yes">n</italic>. Using the JAX <italic toggle="yes">grad</italic> functionality, the user can obtain the analytical gradient with respect to parents’ weights. This provides a continuous relaxation of the genetic recombination that can be used to optimize the crossing by gradient-based methods (<xref rid="btad691-B18" ref-type="bibr">Polak 2012</xref>).</p>
    </sec>
    <sec>
      <title>2.5 Doubled haploid lines</title>
      <p>ChromaX can simulate the fixation of genomes by doubled haploid induction. The user can specify the number of offspring per individual <italic toggle="yes">dh</italic>; ChromaX generates a line from each individual of the population. With an input population of shape <inline-formula id="IE4"><mml:math id="IM4" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, the generated population will be of shape <inline-formula id="IE5"><mml:math id="IM5" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>d</mml:mi><mml:mi>h</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. Like the genetic recombination function, the parallelization occurs over the number of lines <italic toggle="yes">n</italic>, ploidy <italic toggle="yes">d</italic>, and the number of individuals per line <italic toggle="yes">dh</italic>.</p>
    </sec>
    <sec>
      <title>2.6 Traits</title>
      <p>ChromaX computes the GEBV for additive traits of a population using the marker effects available in the genetic linkage map or drawn from a standard probability distribution (e.g. normal distribution). The marker effects are represented as an array of shape <inline-formula id="IE6"><mml:math id="IM6" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, where <italic toggle="yes">t</italic> is the number of traits and <italic toggle="yes">m</italic> is the number of markers. ChromaX computes the genomic value by performing a tensor contraction of the marker effect with the input population array of markers of shape <inline-formula id="IE7"><mml:math id="IM7" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. The arrays are multiplied along the <italic toggle="yes">m</italic>-axis and then sum reduced along the <italic toggle="yes">m</italic> and <italic toggle="yes">d</italic> axes. The result is an array of shape <inline-formula id="IE8"><mml:math id="IM8" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> containing the GEBV of the population for each trait. This operation is well-suited for GPUs due to their ability to efficiently perform multi-dimensional multiplication and sum reduction.</p>
      <p>ChromaX can further model phenotypes that have a genotype-by-environment interaction component, as described in <xref rid="btad691-B7" ref-type="bibr">Faux <italic toggle="yes">et al.</italic> (2016)</xref>. In genotype-by-environment interaction, an environment is simulated as a random variable drawn from a normal distribution; this value multiplies a random additive trait that we fix at the beginning of the simulation with the variance determined by the heritability.</p>
    </sec>
    <sec>
      <title>2.7 Selection</title>
      <p>ChromaX enables the user to select the best individuals from a population based on a user-defined score. The score function accepts population data as input and returns an array of <italic toggle="yes">n</italic> scores, where <italic toggle="yes">n</italic> is the number of individuals in the population. Examples of scoring functions included in the software are breeding values (<xref rid="btad691-B11" ref-type="bibr">Lande and Thompson 1990</xref>), optimal haploid value (<xref rid="btad691-B6" ref-type="bibr">Daetwyler <italic toggle="yes">et al.</italic> 2015</xref>), and phenotype.</p>
    </sec>
  </sec>
  <sec>
    <title>3 Performance</title>
    <p>The performance of ChromaX is compared to AlphaSimR (<xref rid="btad691-B8" ref-type="bibr">Gaynor <italic toggle="yes">et al.</italic> 2020</xref>), a popular breeding program simulator. We perform this comparison on two hardware settings representing typical simulation conditions: a computing cluster CPU (<italic toggle="yes">AMD EPYC 7742 64-Core</italic>), and a commonly available GPU (<italic toggle="yes">Quadro RTX 6000</italic>). <xref rid="btad691-T1" ref-type="table">Table 1</xref> shows the computation times when simulating 1k, 10k, and 100k biparental crosses from a population described by 1000 markers across ten chromosomes. We do not benchmark AlphaSimR on GPU as it cannot run on this hardware. On the CPU, the computation time scales linearly with the number of crosses for both simulators and ChromaX is around three times faster than AlphaSimR for the tested sizes. In contrast, on GPU the computation time scales sub-linearly (<inline-formula id="IE9"><mml:math id="IM9" display="inline" overflow="scroll"><mml:mrow><mml:mn>10</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> the computation time for <inline-formula id="IE10"><mml:math id="IM10" display="inline" overflow="scroll"><mml:mrow><mml:mn>100</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> more crosses), and ChromaX can be hundreds of times faster than AlphaSimR.</p>
    <table-wrap position="float" id="btad691-T1">
      <label>Table 1.</label>
      <caption>
        <p>User CPU time in milliseconds as a function of the numbers of crosses for AlphaSimR and ChromaX on different hardware settings (CPU, CPU computer cluster AMD EPYC 7742 64-Core; GPU, Quadro RTX 6000).<xref rid="tblfn1" ref-type="table-fn"><sup>a</sup></xref></p>
      </caption>
      <table frame="hsides" rules="groups">
        <colgroup span="1">
          <col valign="top" align="left" span="1"/>
          <col valign="top" align="char" char="±" span="1"/>
          <col valign="top" align="char" char="±" span="1"/>
          <col valign="top" align="char" char="±" span="1"/>
        </colgroup>
        <thead>
          <tr>
            <th rowspan="1" colspan="1"/>
            <th colspan="3" rowspan="1">Number of crosses<hr/></th>
          </tr>
          <tr>
            <th rowspan="1" colspan="1"/>
            <th rowspan="1" colspan="1">1k</th>
            <th rowspan="1" colspan="1">10k</th>
            <th rowspan="1" colspan="1">100k</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td rowspan="1" colspan="1">AlphaSimR CPU</td>
            <td rowspan="1" colspan="1">150 ± 5</td>
            <td rowspan="1" colspan="1">1352 ± 9</td>
            <td rowspan="1" colspan="1">14 821 ± 149</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">ChromaX CPU</td>
            <td rowspan="1" colspan="1">47 ± 1</td>
            <td rowspan="1" colspan="1">473 ± 9</td>
            <td rowspan="1" colspan="1">5149 ± 94</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">ChromaX GPU</td>
            <td rowspan="1" colspan="1">3 ± 0</td>
            <td rowspan="1" colspan="1">6 ± 1</td>
            <td rowspan="1" colspan="1">29 ± 2</td>
          </tr>
        </tbody>
      </table>
      <table-wrap-foot>
        <fn id="tblfn1">
          <label>a</label>
          <p>Reported are the mean ± standard deviation over 100 simulations.</p>
        </fn>
      </table-wrap-foot>
    </table-wrap>
    <p>As a further comparison, we implement the breeding program described in <xref rid="btad691-B8" ref-type="bibr">Gaynor <italic toggle="yes">et al.</italic> (2020)</xref> with both simulators and compare the results. This breeding program, typical for an inbred species, assumes an initial diallel <inline-formula id="IE11"><mml:math id="IM11" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> characterized by 100 QTL per chromosome and 21 chromosomes. <inline-formula id="IE12"><mml:math id="IM12" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is obtained by performing random biparental crosses from <inline-formula id="IE13"><mml:math id="IM13" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. Then, we obtain homozygous lines using the doubled haploid technique. To obtain the final cultivars, we simulate visual selection on head rows and preliminary, advanced, and elite yield trials, where individuals are evaluated with increasing accuracy for smaller population sizes. <xref rid="btad691-F1" ref-type="fig">Figure 1</xref> shows the evolution of the population breeding values during the program. While some differences are expected due to the stochasticity of the process, the values are similar for both simulators. <xref rid="btad691-T2" ref-type="table">Table 2</xref> reports the simulation times when the population sizes at the different generations are multiplied by various scaling factors. The results are similar to <xref rid="btad691-T1" ref-type="table">Table 1</xref> with ChromaX achieving around <inline-formula id="IE14"><mml:math id="IM14" display="inline" overflow="scroll"><mml:mrow><mml:mn>500</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> speed up on GPU compared to AlphaSimR. Finally, in <xref rid="btad691-T3" ref-type="table">Table 3</xref>, we present data regarding the peak memory usage on the device, measured in megabytes. Notably, ChromaX exhibits higher memory consumption, attributed to its functional design and the utilization of vectorization techniques. We aim to tackle this issue in forthcoming releases.</p>
    <fig position="float" id="btad691-F1">
      <label>Figure 1.</label>
      <caption>
        <p>Comparision between the genetic value simulated by ChromaX and AlphaSimR for the same breeding schema. The <italic toggle="yes">F</italic><sub>0</sub> population contains 50 lines and <italic toggle="yes">F</italic><sub>1</sub> is created by 200 random biparental crosses. From each line in <italic toggle="yes">F</italic><sub>1</sub>, 100 doubled haploids are obtained and evaluated in head rows (HDRW) using visual selection (low accuracy). Then plants are evaluated with increasing accuracy while reducing the population size. PYT, Preliminary Yield Trial; AYT, Advanced Yield Trial; EYT, Elite Yield Trial</p>
      </caption>
      <graphic xlink:href="btad691f1" position="float"/>
    </fig>
    <table-wrap position="float" id="btad691-T2">
      <label>Table 2.</label>
      <caption>
        <p>User CPU time in seconds for simulating the inbred schema from <xref rid="btad691-B8" ref-type="bibr">Gaynor <italic toggle="yes">et al</italic>. (2020)</xref> as a function of the population size on different hardware.<xref rid="tblfn2" ref-type="table-fn"><sup>a</sup></xref></p>
      </caption>
      <table frame="hsides" rules="groups">
        <colgroup span="1">
          <col valign="top" align="left" span="1"/>
          <col valign="top" align="char" char="±" span="1"/>
          <col valign="top" align="char" char="±" span="1"/>
          <col valign="top" align="char" char="±" span="1"/>
        </colgroup>
        <thead>
          <tr>
            <th rowspan="1" colspan="1"/>
            <th colspan="3" rowspan="1">Scaling factor<hr/></th>
          </tr>
          <tr>
            <th rowspan="1" colspan="1"/>
            <th rowspan="1" colspan="1">1×</th>
            <th rowspan="1" colspan="1">5×</th>
            <th rowspan="1" colspan="1">20×</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td rowspan="1" colspan="1">AlphaSimR CPU</td>
            <td rowspan="1" colspan="1">3.37 ± 0.18</td>
            <td rowspan="1" colspan="1">26.59 ± 0.34</td>
            <td rowspan="1" colspan="1">95.71 ± 0.44</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">ChromaX CPU</td>
            <td rowspan="1" colspan="1">1.28 ± 0.02</td>
            <td rowspan="1" colspan="1">6.36 ± 0.06</td>
            <td rowspan="1" colspan="1">24.08 ± 0.31</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">ChromaX GPU</td>
            <td rowspan="1" colspan="1">0.02 ± 0.00</td>
            <td rowspan="1" colspan="1">0.05 ± 0.00</td>
            <td rowspan="1" colspan="1">0.15 ± 0.00</td>
          </tr>
        </tbody>
      </table>
      <table-wrap-foot>
        <fn id="tblfn2">
          <label>a</label>
          <p>Mean values ± standard deviation over 100 simulations are reported.</p>
        </fn>
      </table-wrap-foot>
    </table-wrap>
    <table-wrap position="float" id="btad691-T3">
      <label>Table 3.</label>
      <caption>
        <p>Device peak memory usage in gigabytes for simulating the inbred schema from <xref rid="btad691-B8" ref-type="bibr">Gaynor <italic toggle="yes">et al</italic>. (2020)</xref> as a function of the population size on different hardware.<xref rid="tblfn3" ref-type="table-fn"><sup>a</sup></xref></p>
      </caption>
      <table frame="hsides" rules="groups">
        <colgroup span="1">
          <col valign="top" align="left" span="1"/>
          <col valign="top" align="char" char="." span="1"/>
          <col valign="top" align="char" char="." span="1"/>
          <col valign="top" align="char" char="." span="1"/>
        </colgroup>
        <thead>
          <tr>
            <th rowspan="1" colspan="1"/>
            <th colspan="3" rowspan="1">Scaling factor<hr/></th>
          </tr>
          <tr>
            <th rowspan="1" colspan="1"/>
            <th rowspan="1" colspan="1">1×</th>
            <th rowspan="1" colspan="1">5×</th>
            <th rowspan="1" colspan="1">20×</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td rowspan="1" colspan="1">AlphaSimR CPU</td>
            <td rowspan="1" colspan="1">0.14</td>
            <td rowspan="1" colspan="1">0.40</td>
            <td rowspan="1" colspan="1">2.14</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">ChromaX CPU</td>
            <td rowspan="1" colspan="1">0.21</td>
            <td rowspan="1" colspan="1">0.64</td>
            <td rowspan="1" colspan="1">14.97</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">ChromaX GPU</td>
            <td rowspan="1" colspan="1">1.38</td>
            <td rowspan="1" colspan="1">8.79</td>
            <td rowspan="1" colspan="1">24.71</td>
          </tr>
        </tbody>
      </table>
      <table-wrap-foot>
        <fn id="tblfn3">
          <label>a</label>
          <p>We report the mean across 10 runs. We do not report the standard deviation as it is below the reported resolution for every entry of the table.</p>
        </fn>
      </table-wrap-foot>
    </table-wrap>
  </sec>
  <sec>
    <title>4 Discussion</title>
    <p>Our benchmarking experiments show that ChromaX can utilize modern hardware and parallelism to run simulations many times faster than AlphaSimR, in some cases by orders of magnitude. Crucially, this will pave the way for the systematic exploration and optimization of complex designs in modern breeding programs.</p>
  </sec>
  <sec>
    <title>5 Limitations</title>
    <p>ChromaX can simulate standard breeding programs but has limitations. First, ChromaX requires a genetic linkage map with marker effects and genetic data of the populations to simulate breeding cycles. To circumvent these requirements, other programs can simulate these data <italic toggle="yes">in silico</italic> by making some assumptions about the genetic features of the species. Second, ChromaX models additive traits and genotype-by-environment effects to simulate population phenotypes. ChromaX does not yet implement other biological effects, such as dominance or epistasis. Finally, ChromaX is designed for breeding programs of self- or open-pollinated species; other systems, such as hybrid breeding from distant heterotic groups, or monoecious/dioecious reproductive systems are not supported. Addressing these limitations will enable widespread use in a wider community.</p>
  </sec>
</body>
<back>
  <ack id="ack1">
    <title>Acknowledgements</title>
    <p>The authors thank the anonymous reviewers for their valuable suggestions.</p>
  </ack>
  <sec sec-type="COI-statement">
    <title>Conflict of interest</title>
    <p>None declared.</p>
  </sec>
  <sec>
    <title>Funding</title>
    <p>This work was supported by the Wageningen University and Research research theme “Data Driven Discoveries in a Changing Climate”, reference 531/AQ5541.</p>
  </sec>
  <sec sec-type="data-availability">
    <title>Data availability</title>
    <p>No new data were generated or analysed in support of this research.</p>
  </sec>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btad691-B1">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Bradbury</surname><given-names>J</given-names></string-name>, <string-name><surname>Frostig</surname><given-names>R</given-names></string-name>, <string-name><surname>Hawkins</surname><given-names>P</given-names></string-name></person-group><etal>et al</etal><italic toggle="yes">JAX: Composable Transformations of Python+NumPy Programs</italic>. <year>2018</year>.</mixed-citation>
    </ref>
    <ref id="btad691-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Broman</surname><given-names>KW</given-names></string-name>, <string-name><surname>Wu</surname><given-names>H</given-names></string-name>, <string-name><surname>Sen</surname><given-names>Ś</given-names></string-name></person-group><etal>et al</etal><article-title>R/qtl: QTL mapping in experimental crosses</article-title>. <source>Bioinformatics</source><year>2003</year>;<volume>19</volume>:<fpage>889</fpage>–<lpage>90</lpage>.<pub-id pub-id-type="pmid">12724300</pub-id></mixed-citation>
    </ref>
    <ref id="btad691-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Browning</surname><given-names>BL</given-names></string-name>, <string-name><surname>Tian</surname><given-names>X</given-names></string-name>, <string-name><surname>Zhou</surname><given-names>Y</given-names></string-name></person-group><etal>et al</etal><article-title>Fast two-stage phasing of large-scale sequence data</article-title>. <source>Am J Hum Genet</source><year>2021</year>;<volume>108</volume>:<fpage>1880</fpage>–<lpage>90</lpage>.<pub-id pub-id-type="pmid">34478634</pub-id></mixed-citation>
    </ref>
    <ref id="btad691-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chen</surname><given-names>CJ</given-names></string-name>, <string-name><surname>Garrick</surname><given-names>D</given-names></string-name>, <string-name><surname>Fernando</surname><given-names>R</given-names></string-name></person-group><etal>et al</etal><article-title>XSim version 2: simulation of modern breeding programs</article-title>. <source>G3 Genes Genomes Genet</source><year>2022</year>;<volume>12</volume>:<fpage>jkac032</fpage>.</mixed-citation>
    </ref>
    <ref id="btad691-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Crossa</surname><given-names>J</given-names></string-name>, <string-name><surname>Pérez-Rodríguez</surname><given-names>P</given-names></string-name>, <string-name><surname>Cuevas</surname><given-names>J</given-names></string-name></person-group><etal>et al</etal><article-title>Genomic selection in plant breeding: methods, models, and perspectives</article-title>. <source>Trends Plant Sci</source><year>2017</year>;<volume>22</volume>:<fpage>961</fpage>–<lpage>75</lpage>.<pub-id pub-id-type="pmid">28965742</pub-id></mixed-citation>
    </ref>
    <ref id="btad691-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Daetwyler</surname><given-names>HD</given-names></string-name>, <string-name><surname>Hayden</surname><given-names>MJ</given-names></string-name>, <string-name><surname>Spangenberg</surname><given-names>GC</given-names></string-name></person-group><etal>et al</etal><article-title>Selection on optimal haploid value increases genetic gain and preserves more genetic diversity relative to genomic selection</article-title>. <source>Genetics</source><year>2015</year>;<volume>200</volume>:<fpage>1341</fpage>–<lpage>8</lpage>.<pub-id pub-id-type="pmid">26092719</pub-id></mixed-citation>
    </ref>
    <ref id="btad691-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Faux</surname><given-names>A-M</given-names></string-name>, <string-name><surname>Gorjanc</surname><given-names>G</given-names></string-name>, <string-name><surname>Gaynor</surname><given-names>RC</given-names></string-name></person-group><etal>et al</etal><article-title>Alphasim: software for breeding program simulation</article-title>. <source>Plant Genome</source><year>2016</year>;<volume>9</volume>:<fpage>0013</fpage>.</mixed-citation>
    </ref>
    <ref id="btad691-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gaynor</surname><given-names>RC</given-names></string-name>, <string-name><surname>Gorjanc</surname><given-names>G</given-names></string-name>, <string-name><surname>Hickey</surname><given-names>JM.</given-names></string-name></person-group><article-title>AlphaSimR: an R package for breeding program simulations</article-title>. <source>G3 Genes Genomes Genet</source><year>2020</year>;<volume>11</volume>:<fpage>jkaa017</fpage>.</mixed-citation>
    </ref>
    <ref id="btad691-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Harris</surname><given-names>CR</given-names></string-name>, <string-name><surname>Millman</surname><given-names>KJ</given-names></string-name>, <string-name><surname>van der Walt</surname><given-names>SJ</given-names></string-name></person-group><etal>et al</etal><article-title>Array programming with NumPy</article-title>. <source>Nature</source><year>2020</year>;<volume>585</volume>:<fpage>357</fpage>–<lpage>62</lpage>.<pub-id pub-id-type="pmid">32939066</pub-id></mixed-citation>
    </ref>
    <ref id="btad691-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kim</surname><given-names>KD</given-names></string-name>, <string-name><surname>Kang</surname><given-names>Y</given-names></string-name>, <string-name><surname>Kim</surname><given-names>C.</given-names></string-name></person-group><article-title>Application of genomic big data in plant breeding: past, present, and future</article-title>. <source>Plants</source><year>2020</year>;<volume>9</volume>:<fpage>1454</fpage>.<pub-id pub-id-type="pmid">33126607</pub-id></mixed-citation>
    </ref>
    <ref id="btad691-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lande</surname><given-names>R</given-names></string-name>, <string-name><surname>Thompson</surname><given-names>R.</given-names></string-name></person-group><article-title>Efficiency of marker-assisted selection in the improvement of quantitative traits</article-title>. <source>Genetics</source><year>1990</year>;<volume>124</volume>:<fpage>743</fpage>–<lpage>56</lpage>.<pub-id pub-id-type="pmid">1968875</pub-id></mixed-citation>
    </ref>
    <ref id="btad691-B12">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>McKinney</surname><given-names>W</given-names></string-name></person-group><etal>et al</etal><year>2010</year>. Data structures for statistical computing in python. In: <italic toggle="yes">Proceedings of the 9th Python in Science Conference</italic>, Vol. 445. Austin, TX, <fpage>51</fpage>–<lpage>6</lpage>.</mixed-citation>
    </ref>
    <ref id="btad691-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>McPeek</surname><given-names>MS</given-names></string-name>, <string-name><surname>Speed</surname><given-names>TP.</given-names></string-name></person-group><article-title>Modeling interference in genetic recombination</article-title>. <source>Genetics</source><year>1995</year>;<volume>139</volume>:<fpage>1031</fpage>–<lpage>44</lpage>.<pub-id pub-id-type="pmid">7713406</pub-id></mixed-citation>
    </ref>
    <ref id="btad691-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Meuwissen</surname><given-names>TH</given-names></string-name>, <string-name><surname>Hayes</surname><given-names>BJ</given-names></string-name>, <string-name><surname>Goddard</surname><given-names>ME.</given-names></string-name></person-group><article-title>Prediction of total genetic value using genome-wide dense marker maps</article-title>. <source>Genetics</source><year>2001</year>;<volume>157</volume>:<fpage>1819</fpage>–<lpage>29</lpage>.<pub-id pub-id-type="pmid">11290733</pub-id></mixed-citation>
    </ref>
    <ref id="btad691-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Mohammadi</surname><given-names>M</given-names></string-name>, <string-name><surname>Tiede</surname><given-names>T</given-names></string-name>, <string-name><surname>Smith</surname><given-names>KP.</given-names></string-name></person-group><article-title>Popvar: a genome-wide procedure for predicting genetic variance and correlated response in biparental breeding populations</article-title>. <source>Crop Sci</source><year>2015</year>;<volume>55</volume>:<fpage>2068</fpage>–<lpage>77</lpage>.</mixed-citation>
    </ref>
    <ref id="btad691-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Paszke</surname><given-names>A</given-names></string-name>, <string-name><surname>Gross</surname><given-names>S</given-names></string-name>, <string-name><surname>Massa</surname><given-names>F</given-names></string-name></person-group><etal>et al</etal><article-title>Pytorch: an imperative style, high-performance deep learning library</article-title>. <source>Adv Neural Inf Process Syst</source><year>2019</year>;<bold>32</bold>:<fpage>8024</fpage>–<lpage>35</lpage>.</mixed-citation>
    </ref>
    <ref id="btad691-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Pedregosa</surname><given-names>F</given-names></string-name>, <string-name><surname>Varoquaux</surname><given-names>G</given-names></string-name>, <string-name><surname>Gramfort</surname><given-names>A</given-names></string-name></person-group><etal>et al</etal><article-title>Scikit-learn: machine learning in python</article-title>. <source>J Mach Learn Res</source><year>2011</year>;<volume>12</volume>:<fpage>2825</fpage>–<lpage>30</lpage>.</mixed-citation>
    </ref>
    <ref id="btad691-B18">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Polak</surname><given-names>E.</given-names></string-name></person-group><source>Optimization: Algorithms and Consistent Approximations</source>, Vol. <volume>124</volume>. <publisher-name>New York</publisher-name>: Springer Science &amp; Business Media, <year>2012</year>.</mixed-citation>
    </ref>
    <ref id="btad691-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Pook</surname><given-names>T</given-names></string-name>, <string-name><surname>Schlather</surname><given-names>M</given-names></string-name>, <string-name><surname>Simianer</surname><given-names>H.</given-names></string-name></person-group><article-title>MoBPS – modular breeding program simulator</article-title>. <source>G3 (Bethesda)</source><year>2020</year>;<volume>10</volume>:<fpage>1915</fpage>–<lpage>8</lpage>.<pub-id pub-id-type="pmid">32229505</pub-id></mixed-citation>
    </ref>
    <ref id="btad691-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Qaim</surname><given-names>M.</given-names></string-name></person-group><article-title>Role of new plant breeding technologies for food security and sustainable agricultural development</article-title>. <source>Applied Eco Perspectives Pol</source><year>2020</year>;<volume>42</volume>:<fpage>129</fpage>–<lpage>50</lpage>.</mixed-citation>
    </ref>
    <ref id="btad691-B21">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Sabne</surname><given-names>A.</given-names></string-name></person-group><italic toggle="yes">XLA: Compiling Machine Learning for Peak Performance</italic>. <year>2020</year>.</mixed-citation>
    </ref>
    <ref id="btad691-B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Schön</surname><given-names>CC</given-names></string-name>, <string-name><surname>Simianer</surname><given-names>H.</given-names></string-name></person-group><article-title>Resemblance between two relatives – animal and plant breeding</article-title>. <source>J Anim Breed Genet</source><year>2015</year>;<volume>132</volume>:<fpage>1</fpage>–<lpage>2</lpage>.<pub-id pub-id-type="pmid">25619306</pub-id></mixed-citation>
    </ref>
    <ref id="btad691-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Virtanen</surname><given-names>P</given-names></string-name>, <string-name><surname>Gommers</surname><given-names>R</given-names></string-name>, <string-name><surname>Oliphant</surname><given-names>TE</given-names></string-name></person-group><etal>et al</etal>; <collab>SciPy 1.0 Contributors</collab>. <article-title>SciPy 1.0: fundamental algorithms for scientific computing in python</article-title>. <source>Nat Methods</source><year>2020</year>;<volume>17</volume>:<fpage>352</fpage>.<pub-id pub-id-type="pmid">32094914</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

<?DTDIdentifier.IdentifierValue article.dtd?>
<?DTDIdentifier.IdentifierType system?>
<?SourceDTD.DTDName article.dtd?>
<?SourceDTD.Version 1.0?>
<?ConverterInfo.XSLTName bmc2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Genome Biol</journal-id>
    <journal-id journal-id-type="iso-abbrev">Genome Biol</journal-id>
    <journal-title-group>
      <journal-title>Genome Biology</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1465-6906</issn>
    <issn pub-type="epub">1465-6914</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">3446303</article-id>
    <article-id pub-id-type="publisher-id">gb-2012-13-4-r29</article-id>
    <article-id pub-id-type="pmid">22531049</article-id>
    <article-id pub-id-type="doi">10.1186/gb-2012-13-4-r29</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>RedeR: R/Bioconductor package for representing modular structures, nested networks and multiple levels of hierarchical associations</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" id="A1">
        <name>
          <surname>Castro</surname>
          <given-names>Mauro AA</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>mauro.castro@cancer.org.uk</email>
      </contrib>
      <contrib contrib-type="author" id="A2">
        <name>
          <surname>Wang</surname>
          <given-names>Xin</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>xin.wang@cancer.org.uk</email>
      </contrib>
      <contrib contrib-type="author" id="A3">
        <name>
          <surname>Fletcher</surname>
          <given-names>Michael NC</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>mike.fletcher@cancer.org.uk</email>
      </contrib>
      <contrib contrib-type="author" id="A4">
        <name>
          <surname>Meyer</surname>
          <given-names>Kerstin B</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>kerstin.meyer@cancer.org.uk</email>
      </contrib>
      <contrib contrib-type="author" corresp="yes" id="A5">
        <name>
          <surname>Markowetz</surname>
          <given-names>Florian</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>florian.markowetz@cancer.org.uk</email>
      </contrib>
    </contrib-group>
    <aff id="I1"><label>1</label>Cancer Research UK Cambridge Research Institute and Department of Oncology, University of Cambridge, Robinson Way, Cambridge CB2 0RE, UK</aff>
    <pub-date pub-type="ppub">
      <year>2012</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>24</day>
      <month>4</month>
      <year>2012</year>
    </pub-date>
    <volume>13</volume>
    <issue>4</issue>
    <fpage>R29</fpage>
    <lpage>R29</lpage>
    <history>
      <date date-type="received">
        <day>6</day>
        <month>2</month>
        <year>2012</year>
      </date>
      <date date-type="rev-recd">
        <day>23</day>
        <month>3</month>
        <year>2012</year>
      </date>
      <date date-type="accepted">
        <day>24</day>
        <month>4</month>
        <year>2012</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright Â©2012 Castro et al.; licensee BioMed Central Ltd.</copyright-statement>
      <copyright-year>2012</copyright-year>
      <copyright-holder>Castro et al.; licensee BioMed Central Ltd.</copyright-holder>
      <license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0">
        <license-p>This is an open access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0">http://creativecommons.org/licenses/by/2.0</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="http://genomebiology.com/2012/13/4/R29"/>
    <abstract>
      <p>Visualization and analysis of molecular networks are both central to systems biology. However, there still exists a large technological gap between them, especially when assessing multiple network levels or hierarchies. Here we present RedeR, an R/Bioconductor package combined with a Java core engine for representing modular networks. The functionality of RedeR is demonstrated in two different scenarios: hierarchical and modular organization in gene co-expression networks and nested structures in time-course gene expression subnetworks. Our results demonstrate RedeR as a new framework to deal with the multiple network levels that are inherent to complex biological systems. RedeR is available from <ext-link ext-link-type="uri" xlink:href="http://bioconductor.org/packages/release/bioc/html/RedeR.html">http://bioconductor.org/packages/release/bioc/html/RedeR.html</ext-link>.</p>
    </abstract>
  </article-meta>
</front>
<body>
  <sec>
    <title>Rationale</title>
    <p>Biological networks contain modules of genes or proteins that may function in the same pathway [<xref ref-type="bibr" rid="B1">1</xref>]. As genes or proteins inside a module can be co-regulated, they are often represented by one single node in the network [<xref ref-type="bibr" rid="B2">2</xref>]. Such modules can be inferred by a number of statistical methods and the results are usually represented in graphs [<xref ref-type="bibr" rid="B3">3</xref>,<xref ref-type="bibr" rid="B4">4</xref>]. Given the complex associations that can take place in these graphs, it is a challenge to infer and visualize multiple levels or hierarchies within and between subnetwork structures.</p>
    <p>Popular software like Cytoscape [<xref ref-type="bibr" rid="B5">5</xref>] provide a general framework to deal with part of this complexity by providing software plugins and visualizing networks in flat topologies. Flat networks are largely adequate to deal with different graph elements, as long as the network levels stay small. However, when describing and defining functional modules a hierarchical data structure is more appropriate because this enables the construction of graph elements within modules in a scalable system (for example, chains of nested networks). Herein we present RedeR, an R package combined with a Java core engine to cope with hierarchical and nested network structures.</p>
    <p>RedeR is designed to deal with three key challenges in network analysis. Firstly, biological networks are modular and hierarchical, so network visualization needs to take advantage of such structural features to avoid cluttered and uninformative 'hairballs'. Secondly, network analysis relies on statistical methods, many of which are already available in resources like CRAN or Bioconductor. However, the missing link between advanced visualization and statistical computing makes it hard to take full advantage of R packages for network analysis. Thirdly, in larger networks user input is needed to focus the view of the network on the biologically relevant parts, rather than relying on an automatic layout function.</p>
    <p>RedeR is designed to address these challenges: (i) we implement modular objects for subnetworks that allow to easily lay out and analyze network modules and their connections; (ii) the software is tightly integrated to R - while RedeR visualizes R outputs, its results can be directly fed back into R for further statistical analyses, which makes the power of R available for users primarily interested in visualization but not statistical computing; and (iii) we implement a dynamic layout that directly reflects user input.</p>
    <p>We exemplify RedeR's visualization and analysis capabilities in a case study based on the re-analysis of gene expression and chromatin immunoprecipitation (ChIP)-on-chip data from an estrogen receptor (ER) study in the MCF-7 breast cancer cell line [<xref ref-type="bibr" rid="B6">6</xref>]. We anticipate that RedeR will be useful for integrative analyses and deriving gene expression networks that demand complex data abstraction and multiple network levels.</p>
  </sec>
  <sec>
    <title>Overview of the software</title>
    <p>RedeR is distributed as an R/Bioconductor package. It is implemented by S4 classes in R [<xref ref-type="bibr" rid="B7">7</xref>] combined with Java graphical user interface. Standard Java Swing components and the NetBeans IDE 6.9 development environment [<xref ref-type="bibr" rid="B8">8</xref>] were extensively used to implement the graphical interface, which operates in conjunction with R libraries. In what follows we describe the implementation of the main features of the software.</p>
    <sec>
      <title>User-friendly interface in R</title>
      <p>The software uses different strategies to link R to Java (Figure <xref ref-type="fig" rid="F1">1</xref>). For the data interface, the callback engine makes calls from R via xml-rpc protocol by setting R as client and the Java app as server. For the graphic interface, the calls are executed from the Java core through dynamic libraries (that is, it wraps R graphics into Java classes). Four packages are essential to build the interface. At the Java side, the software uses the Apache xmlrpc webserver [<xref ref-type="bibr" rid="B9">9</xref>] and the JRI library interface [<xref ref-type="bibr" rid="B10">10</xref>]; at the R side, it uses the XMLRPC and rJava packages [<xref ref-type="bibr" rid="B11">11</xref>,<xref ref-type="bibr" rid="B12">12</xref>]. RedeR is invoked from R by the method 'calld':</p>
      <fig id="F1" position="float">
        <label>Figure 1</label>
        <caption>
          <p><bold>Schematic representation of the RedeR callback engine</bold>. In the low-level interface, the Apache xmlrpc webserver [<xref ref-type="bibr" rid="B9">9</xref>] is used to link R and Java.</p>
        </caption>
        <graphic xlink:href="gb-2012-13-4-r29-1"/>
      </fig>
      <p>
        <monospace># Set the server port and invoke the Java app</monospace>
      </p>
      <p>
        <monospace>&gt; library(RedeR)</monospace>
      </p>
      <p>
        <monospace>&gt; rdp &lt;- RedPort()</monospace>
      </p>
      <p>
        <monospace>&gt; calld(rdp)</monospace>
      </p>
      <p>This method sets the environment and all paths required to start the callback engine, after which the software can either interact with R or run as a stand-alone application. The graphic interface is extensively controllable from the R command line and provides several menus that allow basic actions, such as selecting nodes and changing their appearance. In order to maintain a high level of compatibility, all methods in the R interface use <italic>igraph </italic>objects as prototype data format.</p>
    </sec>
    <sec>
      <title>Unique data structure for hierarchical networks</title>
      <p>The schematic representation of how data are stored in RedeR is depicted in Figure <xref ref-type="fig" rid="F2">2</xref>. The data structure emulates a mixed graph with two layers and multiple levels. The first layer can be defined by a directed acyclic graph (DAG) with no more than one parent for each vertex, essentially a data tree with multiple branches and levels, and with no cycles (Figure <xref ref-type="fig" rid="F2">2a</xref>). The second layer is designed as an undirected graph (UDG) on the lowest level of the DAG hierarchy. Horizontal or non-hierarchical associations can also be reassigned from one layer to another, external to the hierarchical structure. This data organization is depicted in Figure <xref ref-type="fig" rid="F2">2b</xref> and corresponds to the topology that could represent a given dataset (for example, protein-protein interaction networks, ontologies, and so on). Flat networks, as illustrated in the left graph, can represent just one row instance of the data structure (that is, not divided into modules or layers). In contrast, hierarchical networks, as illustrated in the right graph, support a modular organization and can exhibit the complete information. The design of the software encapsulates the data structure within subclasses of a graph blueprint that contains all fields and methods common to both data types (Figure <xref ref-type="fig" rid="F2">2c</xref>). This design is implemented in the Java core and is extended to R to provide users and developers full access to the outer level of the application. As an initial demonstration of the software, next we provide a chunk of R that generates modular structures as illustrated in Figure <xref ref-type="fig" rid="F2">2b</xref>.</p>
      <fig id="F2" position="float">
        <label>Figure 2</label>
        <caption>
          <p><bold>Schematic representation of RedeR data packing and storing</bold>. <bold>(a) </bold>Data structure. The software emulates a mixed graph with two layers and multiple levels in order to organize and manage the hierarchical associations. <bold>(b) </bold>Data abstraction. For the end-user, the data abstraction corresponds to the network layout that represents the data structure. A flat network is shown to contrast an ordinary representation (left) with RedeR hierarchical topology (right). <bold>(c) </bold>Data encapsulation: end-users and R developers have access to the outer level of the application through the methods handled by the interface.</p>
        </caption>
        <graphic xlink:href="gb-2012-13-4-r29-2"/>
      </fig>
      <p>
        <monospace># Generate an igraph object (a toy example with modular structures)</monospace>
      </p>
      <p>
        <monospace>&gt; g &lt;- gtoy.rm(m = 5, nmax = 30)</monospace>
      </p>
      <p>
        <monospace># Compute a hierarchical clustering using standard R functions</monospace>
      </p>
      <p>
        <monospace>&gt; hc&lt;-hclust(dist(get.adjacency(g)))</monospace>
      </p>
      <p>
        <monospace># Add graph to RedeR</monospace>
      </p>
      <p>
        <monospace>&gt; addGraph(rdp, g)</monospace>
      </p>
      <p>
        <monospace>&gt; nesthc(rdp, hc, metric="rootdist", cutlevel = 3, nlev = 1)</monospace>
      </p>
      <p>This toy example maps one level of the hierarchy onto the network topology. Additional levels and different sections of the hierarchy can be mapped using the same function (for further details, please see 'nesthc' documentation in the R package).</p>
    </sec>
    <sec>
      <title>Dynamic layout modeling</title>
      <p>One of the most versatile features of the software is the ability to deal with nested network objects using dynamic modeling, which makes it possible to represent, for example, subnetworks and time-series onto the same graph in a user-friendly routine. The layout uses force-directed algorithms as described elsewhere [<xref ref-type="bibr" rid="B13">13</xref>,<xref ref-type="bibr" rid="B14">14</xref>]. Here we adapted the method to deal with nested networks. In force-directed graphs, each edge can be regarded as a spring - with a given target length - and can either exert a repulsive or attractive force on the connected nodes, while nodes are analogous to mutually repulsive charged particles that move according to the applied forces. In RedeR, the layout is additionally constrained by the hierarchical structure. For example, a nested node is constrained to its parent node by opposing forces applied by the nest, which is regarded as a special node whose nested objects can reach a local equilibrium independently from other network levels. The layout is adjusted by global options and evolves iteratively (and interactively) until the system reaches the equilibrium state. It can be started via either the graphical user interface or the R command line, as for example:</p>
      <p>
        <monospace># Start dynamic layout</monospace>
      </p>
      <p>
        <monospace>&gt; relax(rdp, ps=TRUE)</monospace>
      </p>
      <p>
        <monospace># Reset graph</monospace>
      </p>
      <p>
        <monospace>&gt; resetd(rdp)</monospace>
      </p>
      <p>The user can observe all steps of the layout optimization process and, at any particular time, the process can be driven interactively. In this sense, 'dynamic' not only refers to the iteration steps required to layout a graph by the force-direct algorithm but also is related to the user's interaction. This option is particularly useful for additional control over containers and nested nodes in hierarchical structures. We also added to the Java core some popular static layout algorithms from open source libraries [<xref ref-type="bibr" rid="B15">15</xref>] as a complementary option to the list of all static layouts that can either be found in the R package collections or, as usual, customized in R by the user.</p>
    </sec>
    <sec>
      <title>R code deployment</title>
      <p>R developers can deploy R code to RedeR by using the 'PluginBuilder' method. This feature provides a direct way to extend existing R packages to the Java interface. The combination of R and Java code in a mark-up construct gives rise to this extensible feature. The idea is based on the successful framework used by the Sweave package that mixes LaTeX syntax and R codes in order to parse R text chunks within LaTeX documents. In RedeR, the plugins are exported to the Java core by the 'submitPlugin' function. On the other side of the interface, the software receives the request, stores the new method in an XML document and mounts the plugin in the application, including submenus in the main panel. RedeR plugins have two main sections: methods and add-ons. The 'methods' section can be regarded as the plugin trigger. When installed in the Java app, this trigger starts a given analysis by unfolding R expressions wrapped in the methods. Add-ons use the same strategy, but remain hidden in the app and can either load formal functions or pass additional arguments to R (a code sample is provided in RedeR vignette, <italic>plugin builder </italic>tutorial).</p>
    </sec>
    <sec>
      <title>Pre-processed data and documentation</title>
      <p>The pre-processed data used in the case study were obtained by the LIMMA package [<xref ref-type="bibr" rid="B16">16</xref>]. An R script that reproduces the analysis is available in the supplements. Additionally, the R package provides extensive documentation for all methods available in the software, including description of the data objects, examples, and a tutorial introducing the main functionalities.</p>
    </sec>
  </sec>
  <sec>
    <title>Case study</title>
    <p>In this section we demonstrate some essential features of the software in two examples based on the re-analysis of ChIP-on-chip and gene expression data from a genome-wide study describing ER binding sites in the MCF-7 breast cancer cell line [<xref ref-type="bibr" rid="B6">6</xref>]. The ChIP-on-chip dataset consists of a Bed file containing the genome position of 3,665 unique ER binding sites, while the gene expression data consist of 12 time-course Affymetrix U133Plus2.0 microarrays from MCF-7 cells stimulated with estrogen for 0, 3, 6 and 12 h (all arrays in triplicate).</p>
    <sec>
      <title>Biological background</title>
      <p>The purpose of the study by Carroll <italic>et al</italic>. [<xref ref-type="bibr" rid="B6">6</xref>] is the identification of new authentic <italic>cis </italic>ER binding sites and ER target genes in breast cancer cells. One of the challenges faced by the authors was that only a small fraction (4%) of the ER binding sites mapped to promoter-proximal regions, within 1 kb of the transcription start sites. More frequently, ER binding sites are found at considerable distance from the regulated gene and only one-third of early estrogen up-regulated genes contain ER binding sites within 50 kb of the transcription start site. This finding has made it difficult to validate ER-regulated candidate genes as there may be multiple genes within the 100 kb interval of the ER binding site and because the usual association of transcription factor binding sites and promoter regions occurs in only a minority of cases.</p>
    </sec>
    <sec>
      <title>Hierarchical and modular organization in gene co-expression networks</title>
      <p>The aim of this example is to examine the hierarchical structure of co-expressed gene network modules. A step-by-step description of the analysis is provided in Figure <xref ref-type="fig" rid="F3">3</xref>. Three standard R objects are used: a data frame object with many gene attributes inferred from the Carroll <italic>et al</italic>. [<xref ref-type="bibr" rid="B6">6</xref>] dataset (for example, differentially expressed genes, log fold change values and ER binding site distance), the corresponding gene expression matrix and an igraph object obtained by co-expression analysis on genes differentially expressed at 3 h (further details on the pre-processed data can be found in Additional file <xref ref-type="supplementary-material" rid="S1">1</xref>).</p>
      <fig id="F3" position="float">
        <label>Figure 3</label>
        <caption>
          <p><bold>Hierarchical and modular organization in co-expressed gene networks</bold>. R script describing step-by-step all intermediate R objects required to obtain the results presented in the first case study. TSS, transcriptional start site.</p>
        </caption>
        <graphic xlink:href="gb-2012-13-4-r29-3"/>
      </fig>
      <p>Figure <xref ref-type="fig" rid="F4">4a</xref> shows a hierarchical clustering obtained on the adjacency matrix and in Figure <xref ref-type="fig" rid="F4">4b</xref> we display two levels of such hierarchical organization onto the co-expression gene network. For each gene its size indicates the proximity to the nearest ER binding site (large nodes correspond to genes close to the ER binding sites) and the colors represent the log2 differential expression values.</p>
      <fig id="F4" position="float">
        <label>Figure 4</label>
        <caption>
          <p><bold>Hierarchical networks</bold>. <bold>(a) </bold>Dendrogram derived from complete-linkage clustering analysis using Euclidean distance on the gene expression matrix of all genes differently expressed at 3 h (related to 0 h) in estrogen-treated MCF-7 cells (Carroll <italic>et al</italic>. [<xref ref-type="bibr" rid="B6">6</xref>] dataset). <bold>(b) </bold>Hierarchical network obtained by superimposing the dendrogram onto the corresponding co-expression gene network. The co-expression associations were computed for the same set of genes (for additional details on the pre-processed data please see Additional file <xref ref-type="supplementary-material" rid="S1">1</xref> and Figure 3). Node coloring depicts differential expression as log2 fold-change (logFC) and node size indicates the kilobase distance of the transcription start site to the nearest ER binding site. Out-edge width represents the sum of all edges between modules divided by the total possible edges.</p>
        </caption>
        <graphic xlink:href="gb-2012-13-4-r29-4"/>
      </fig>
      <p>Taken together, this case study not only illustrates how to constrain the network topology by a hierarchical structure, but also raises an interesting biological observation. The identification of co-regulated gene modules is one of the key steps towards understanding genetic regulatory networks. However, similar patterns in gene expression modules are not directly associated with a common mechanism of gene regulation. The identification of co-regulated modules is far from trivial and this case study provides a simple workflow to inspect in detail potentially co-expressed gene modules that share binding sites for the same transcription factor. The software permits visualizing these individual gene modules, displaying each individual component and the connections between them, as well as the hierarchical associations between modules and genes.</p>
    </sec>
    <sec>
      <title>Nested structures in time-course gene expression subnetworks</title>
      <p>Another common approach to analyze complex biological datasets is the use of prior knowledge. Using the HPRD database [<xref ref-type="bibr" rid="B17">17</xref>] as prior information, in Figure <xref ref-type="fig" rid="F5">5</xref> we describe a workflow that maps to the human interactome all differentially expressed genes inferred in estrogen-treated MCF-7 cells (that is, genes differentially expressed at 3, 6 and 12 h related to 0 h), and for each time point we select the largest subnetwork in order to demonstrate how RedeR represents nested structures.</p>
      <fig id="F5" position="float">
        <label>Figure 5</label>
        <caption>
          <p><bold>Nested structures in time-course gene expression subnetworks</bold>. R script describing step-by-step all intermediate R objects required to obtain the results presented in the second case study. logFC, log2 fold-change.</p>
        </caption>
        <graphic xlink:href="gb-2012-13-4-r29-5"/>
      </fig>
      <p>Accordingly, among the possible outcomes one may expect to see gene modules that are (i) induced early after stimulus, (ii) continuously stimulated/repressed, or (iii) respond later to the treatment. Given the partial- or non-overlapped time-course responses and the different module sizes, such a scenario can give rise to a complex data structure. Figure <xref ref-type="fig" rid="F6">6</xref> shows these modules as a chain of nested subnetworks. Two observations are evident from this comparison across time series: as time goes by the subnetwork gets bigger but the core remains nearly the same. Such abstracted structure shows that the early response differentially expressed subnetworks are nested to the subsequent and larger gene modules, suggesting a stepwise and progressive gene expression response in estrogen-treated MCF-7 breast cancer cells. Additional file <xref ref-type="supplementary-material" rid="S1">1</xref> provides supporting material to extend this case study to more advanced scenarios further illustrating the type of questions that can be explored by using RedeR.</p>
      <fig id="F6" position="float">
        <label>Figure 6</label>
        <caption>
          <p><bold>Nested subnetworks</bold>. Genes differentially expressed in estrogen-treated MCF-7 cells at 3, 6 or 12 h (relative to 0 h; Carroll <italic>et al</italic>. [<xref ref-type="bibr" rid="B6">6</xref>] dataset) were mapped to the human interactome (HPRD database [<xref ref-type="bibr" rid="B17">17</xref>]) and for each time point the largest subnetwork was selected in order to demonstrate how RedeR represents nested structures (additional details in Figure 5). Node coloring depicts differential expression as log2 fold-change (logFC). The insets correspond to the overlap between consecutive time points.</p>
        </caption>
        <graphic xlink:href="gb-2012-13-4-r29-6"/>
      </fig>
    </sec>
  </sec>
  <sec>
    <title>Benchmark</title>
    <sec>
      <title>RedeR in the context of gold-standard software in the same field</title>
      <p>There are other excellent tools to represent and analyze biological networks, and each has their own unique features. Table <xref ref-type="table" rid="T1">1</xref> describes RedeR in the context of gold standard software in the same field. In R three packages provide standard software infrastructures to deal with graphs: igraph, graph and Rgraphviz [<xref ref-type="bibr" rid="B18">18</xref>-<xref ref-type="bibr" rid="B21">21</xref>]. However, the rendering process of these packages relies on R's internal plotting libraries, which lack interactive capabilities. Some simple interactive options are available in igraph, but according to the authors these features are not very well developed at this stage. In contrast, RedeR provides a robust graph-handling engine that is directly extensible to R objects; therefore, those used to work with graphs in R can easily become familiar with RedeR.</p>
      <table-wrap id="T1" position="float">
        <label>Table 1</label>
        <caption>
          <p>RedeR in the context of gold-standard network visualization software and R</p>
        </caption>
        <table frame="hsides" rules="groups">
          <thead>
            <tr>
              <th/>
              <th align="left">RedeR</th>
              <th align="left">Cytoscape</th>
              <th align="left">Graphviz</th>
              <th align="left">igraph</th>
              <th align="left">graph</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">
                <bold>Software design</bold>
              </td>
              <td/>
              <td/>
              <td/>
              <td/>
              <td/>
            </tr>
            <tr>
              <td align="left">âHierarchical data structure<sup>a</sup></td>
              <td align="left">Yes<bold><sup>b</sup></bold></td>
              <td align="left">No</td>
              <td align="left">Yes<bold><sup>b</sup></bold></td>
              <td align="left">No</td>
              <td align="left">No</td>
            </tr>
            <tr>
              <td align="left">âData abstraction<sup>a</sup></td>
              <td align="left">Modular<bold><sup>b</sup></bold></td>
              <td align="left">Flat</td>
              <td align="left">Layered<bold><sup>b</sup></bold></td>
              <td align="left">Flat</td>
              <td align="left">Flat</td>
            </tr>
            <tr>
              <td align="left">âData encapsulation<sup>a</sup></td>
              <td align="left">Yes</td>
              <td align="left">Yes</td>
              <td align="left">No</td>
              <td align="left">No</td>
              <td align="left">No</td>
            </tr>
            <tr>
              <td align="left">âCore engine</td>
              <td align="left">Java</td>
              <td align="left">Java</td>
              <td align="left">DOT</td>
              <td align="left">C</td>
              <td align="left">R</td>
            </tr>
            <tr>
              <td align="left">âR interface</td>
              <td align="left">R &lt;-&gt; Java</td>
              <td align="left">R -&gt; Java</td>
              <td align="left">R &lt;- DOT</td>
              <td align="left">R &lt;- C</td>
              <td align="left">Pure R</td>
            </tr>
            <tr>
              <td align="left">âDeployment to R</td>
              <td align="left">Embedded</td>
              <td align="left">External</td>
              <td align="left">External</td>
              <td align="left">Embedded</td>
              <td align="left">Embedded</td>
            </tr>
            <tr>
              <td align="left">âPlugin coding language</td>
              <td align="left">R</td>
              <td align="left">Java</td>
              <td align="left">DOT language<bold><sup>c</sup></bold></td>
              <td align="left">C<bold><sup>d</sup></bold></td>
              <td align="left">-</td>
            </tr>
            <tr>
              <td/>
              <td/>
              <td/>
              <td/>
              <td/>
              <td/>
            </tr>
            <tr>
              <td align="left">
                <bold>Selected features</bold>
              </td>
              <td/>
              <td/>
              <td/>
              <td/>
              <td/>
            </tr>
            <tr>
              <td align="left">âScalability on nested networks<sup>e</sup></td>
              <td align="left">Yes</td>
              <td align="left">No<bold><sup>f</sup></bold></td>
              <td align="left">Yes</td>
              <td align="left">No<bold><sup>g</sup></bold></td>
              <td align="left">No<bold><sup>g</sup></bold></td>
            </tr>
            <tr>
              <td align="left">âInteractive graph handling</td>
              <td align="left">Yes</td>
              <td align="left">Yes</td>
              <td align="left">No</td>
              <td align="left">Partially<bold><sup>h</sup></bold></td>
              <td align="left">No</td>
            </tr>
            <tr>
              <td align="left">âDynamic layouts</td>
              <td align="left">Yes<bold><sup>i</sup></bold></td>
              <td align="left">No</td>
              <td align="left">No</td>
              <td align="left">No</td>
              <td align="left">No</td>
            </tr>
            <tr>
              <td align="left">âComparison across multiple nested networks</td>
              <td align="left">Yes</td>
              <td align="left">No</td>
              <td align="left">No</td>
              <td align="left">No</td>
              <td align="left">No</td>
            </tr>
            <tr>
              <td align="left">âPanels<sup>j</sup></td>
              <td align="left">Yes</td>
              <td align="left">No</td>
              <td align="left">No</td>
              <td align="left">No</td>
              <td align="left">No</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <p><bold><sup>a</sup></bold>For further definitions, please see the Implementation section and Figure 2. <bold><sup>b</sup></bold>In RedeR, the hierarchy is encapsulated, so users deal with methods. In Graphviz users implement methods by themselves in DOT language. This difference has an important effect on the ability of the software to deal with modular structures, such as recycling data objects used in subnetworks. <bold><sup>c</sup></bold>The plugin infrastructure is available for Graphviz. <bold><sup>d</sup></bold>Provides a C library to be used in third-party applications. <bold><sup>e</sup></bold>Able to accommodate increasing amounts of nested objects. <bold><sup>f</sup></bold>In Cytoscape, nested networks are represented as images inside nodes. For each nested network one image is required. Images are not scalable, so the hierarchy cannot be extended to other levels. <bold><sup>g</sup></bold>In these applications, modules can be represented by layering images, which is essentially a drawing process. <bold><sup>h</sup></bold>According to the authors, the interactive features are not very well developed at this stage. <bold><sup>i</sup></bold>In RedeR, the dynamic layout is also extensible to the nested structures. <bold><sup>j</sup></bold>This feature provides support for multiple panels in the same graph, representing subnetworks, and so on.</p>
        </table-wrap-foot>
      </table-wrap>
      <p>Another option is the package RCytoscape [<xref ref-type="bibr" rid="B22">22</xref>]. This R package implements via CytoscapeRPC [<xref ref-type="bibr" rid="B23">23</xref>] an interface to Cytoscape [<xref ref-type="bibr" rid="B5">5</xref>], which can be regarded as a gold standard software for network visualization. Although robust and easy to use, Cytoscape is designed mainly to deal with flat network topology, which does not accommodate increasing amounts of nested objects. For example, using flat topology to represent a chain of nested networks, the number of graphs would increase proportionally with the network levels. Using RedeR, the job can be performed in just one graph (Figure <xref ref-type="fig" rid="F2">2b</xref>, data structure section). In this sense, RedeR constitutes a new option to assess networks with multiple levels or hierarchies, and this is a surprisingly common situation in biological networks.</p>
    </sec>
    <sec>
      <title>Performance</title>
      <p>In order to benchmark shared functionalities among these packages, we tested the performance for loading scale-free networks of increasing size, up to the human interactome scale. The results are shown in Figure <xref ref-type="fig" rid="F7">7</xref> and the R script used to run the complete analysis is available in Additional files <xref ref-type="supplementary-material" rid="S2">2</xref> and <xref ref-type="supplementary-material" rid="S3">3</xref>. Although any benchmark is restricted [<xref ref-type="bibr" rid="B24">24</xref>], it is clear from these results that RedeR performs very well, even compared to packages that only deal with image rendering. One remarkable aspect is that RedeR maintains its level of performance when tested by larger networks, only comparable to the baseline, which is a simple test to assess the speed of R for plotting dots and lines (that is, image rendering). The software continues to track the baseline, but transfers network information at the same time (Figure <xref ref-type="fig" rid="F7">7</xref>, inset). Another remarkable aspect is observed at the maximum loading time. For example, while RedeR took 4.8 s (Â± 0.2 s) to load a network with 16,384 nodes, RCytoscape/CytoscapeRPC required 2,391.3 s (Â± 45.7 s) to load the same graph (further details in the legend of Figure <xref ref-type="fig" rid="F7">7</xref> and Additional files <xref ref-type="supplementary-material" rid="S2">2</xref> and <xref ref-type="supplementary-material" rid="S3">3</xref>).</p>
      <fig id="F7" position="float">
        <label>Figure 7</label>
        <caption>
          <p><bold>Performance of six graph tools loading scale free networks of increasing size</bold>. Each point in the plot corresponds to the average elapsed time (in seconds) required to load one of these networks. The inset shows the first 10 s of the same tests (Â± standard deviation, <italic>n </italic>= 10). The networks were obtained by the function 'barabasi.game' available in the R package igraph [<xref ref-type="bibr" rid="B19">19</xref>]. Briefly, each network has Ï vertices and Îµ edges generated by a step-model where the first step generates a single vertex and no edge; the subsequent steps generate one vertex linked to an old vertex according to a probability distribution proportional to the degree of the nodes; therefore, in the end there are Ï-1 edges. The networks were obtained and set prior to the performance tests, and only with minimum information in order to guarantee equal conditions among the software (that is, without any graph attribute, such as color, size, and so on). Versions tested: R version 2.14.1, RedeR_1.0.3, igraph_0.5.5-4, RCytoscape_1.4.3, Cytoscape 2.8.1, CytoscapeRPC 1.7, Rgraphviz_1.32.0. Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit). Hardware: MacPro4.1 2 Ã Quad-core Intel Xeon 2.26 GHz, 6 GB RAM. The source code used to run the complete analysis is available in Additional files <xref ref-type="supplementary-material" rid="S2">2</xref> and <xref ref-type="supplementary-material" rid="S3">3</xref>.</p>
        </caption>
        <graphic xlink:href="gb-2012-13-4-r29-7"/>
      </fig>
    </sec>
  </sec>
  <sec sec-type="conclusions">
    <title>Conclusions</title>
    <p>In this work we introduced RedeR, a software designed for the representation of nested and hierarchical biological networks. The ability to perform advanced visualization tightly integrated to R allows RedeR to take full advantage of R packages for network analysis and statistical computing. Likewise, RedeR is an ongoing project that provides a comprehensive and entirely new framework to read, write and manipulate R code mixed to a Java data structure. Its architecture allows the creation of R-based plugins with minimum effort, potentially extending the existing R packages to different communities of users interested in studying biological networks.</p>
    <p>Rather than analyzing a single network, current research focuses on differences in networks, re-wiring events, as well as higher-level, modular characteristics of networks. These can be hard to visualize in standard tools. RedeR implements a framework for network comparison and module representation by introducing a hierarchy of 'containers' in which many networks and their connections can be visualized at the same time. We anticipate that our software will be particularly useful to assess datasets that demand detailed analysis of inter- and intra-modular associations.</p>
  </sec>
  <sec>
    <title>System requirements</title>
    <p>R (version&gt;=2.14) and Java Runtime Environment (version&gt;=5). Available since Bioconductor 2.9.</p>
  </sec>
  <sec>
    <title>Abbreviations</title>
    <p>ChIP: chromatin immunoprecipitation; DAG: directed acyclic graph; ER: estrogen receptor.</p>
  </sec>
  <sec>
    <title>Competing interests</title>
    <p>The authors declare that they have no competing interests.</p>
  </sec>
  <sec>
    <title>Authors' contributions</title>
    <p>Conceived the project: MAAC KBM FM. Supervised the project: KBM FM; Conceived and designed the software: MAAC XW FM. Implemented the software: MAAC. Implemented the analysis pipeline: MAAC XW. Conceived the case studies: MAAC XW MF KBM FM. Wrote the paper: MAAC KBM FM. All authors read and approved the final manuscript.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="S1">
      <caption>
        <title>Additional file 1</title>
        <p><bold>Pre-processed data analysis</bold>. PDF document describing the pre-processed data analysis, including three examples illustrating how RedeR can be integrated with other R packages.</p>
      </caption>
      <media xlink:href="gb-2012-13-4-r29-S1.PDF" mimetype="application" mime-subtype="pdf">
        <caption>
          <p>Click here for file</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="S2">
      <caption>
        <title>Additional file 2</title>
        <p><bold>Benchmark source code</bold>. R script used to run the benchmark analysis.</p>
      </caption>
      <media xlink:href="gb-2012-13-4-r29-S2.R" mimetype="text" mime-subtype="plain">
        <caption>
          <p>Click here for file</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="S3">
      <caption>
        <title>Additional file 3</title>
        <p><bold>Complementary benchmark source code</bold>. R script with complementary R functions required in the benchmark.</p>
      </caption>
      <media xlink:href="gb-2012-13-4-r29-S3.R" mimetype="text" mime-subtype="plain">
        <caption>
          <p>Click here for file</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <sec>
    <title>Acknowledgements</title>
    <p>We thank Professor Sir Bruce Ponder for his support. We also thank all FM lab members that kindly contributed with suggestions during the development of the R package. We acknowledge the support of The University of Cambridge, Cancer Research UK and Hutchison Whampoa Limited. The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</p>
  </sec>
  <ref-list>
    <ref id="B1">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Luo</surname>
          <given-names>F</given-names>
        </name>
        <name>
          <surname>Yang</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Chen</surname>
          <given-names>CF</given-names>
        </name>
        <name>
          <surname>Chang</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Zhou</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Scheuermann</surname>
          <given-names>RH</given-names>
        </name>
        <article-title>Modular organization of protein interaction networks.</article-title>
        <source>Bioinformatics</source>
        <year>2007</year>
        <volume>23</volume>
        <fpage>207</fpage>
        <lpage>214</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btl562</pub-id>
        <pub-id pub-id-type="pmid">17092991</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B2">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Han</surname>
          <given-names>JD</given-names>
        </name>
        <article-title>Understanding biological functions through molecular networks.</article-title>
        <source>Cell Res</source>
        <year>2008</year>
        <volume>18</volume>
        <fpage>224</fpage>
        <lpage>237</lpage>
        <pub-id pub-id-type="doi">10.1038/cr.2008.16</pub-id>
        <pub-id pub-id-type="pmid">18227860</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B3">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Aittokallio</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Schwikowski</surname>
          <given-names>B</given-names>
        </name>
        <article-title>Graph-based methods for analysing networks in cell biology.</article-title>
        <source>Brief Bioinform</source>
        <year>2006</year>
        <volume>7</volume>
        <fpage>243</fpage>
        <lpage>255</lpage>
        <pub-id pub-id-type="doi">10.1093/bib/bbl022</pub-id>
        <pub-id pub-id-type="pmid">16880171</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B4">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Barabasi</surname>
          <given-names>AL</given-names>
        </name>
        <name>
          <surname>Gulbahce</surname>
          <given-names>N</given-names>
        </name>
        <name>
          <surname>Loscalzo</surname>
          <given-names>J</given-names>
        </name>
        <article-title>Network medicine: a network-based approach to human disease.</article-title>
        <source>Nat Rev Genet</source>
        <year>2011</year>
        <volume>12</volume>
        <fpage>56</fpage>
        <lpage>68</lpage>
        <pub-id pub-id-type="doi">10.1038/nrg2918</pub-id>
        <pub-id pub-id-type="pmid">21164525</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B5">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Smoot</surname>
          <given-names>ME</given-names>
        </name>
        <name>
          <surname>Ono</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>Ruscheinski</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Wang</surname>
          <given-names>PL</given-names>
        </name>
        <name>
          <surname>Ideker</surname>
          <given-names>T</given-names>
        </name>
        <article-title>Cytoscape 2.8: new features for data integration and network visualization.</article-title>
        <source>Bioinformatics</source>
        <year>2011</year>
        <volume>27</volume>
        <fpage>431</fpage>
        <lpage>432</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btq675</pub-id>
        <pub-id pub-id-type="pmid">21149340</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B6">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Carroll</surname>
          <given-names>JS</given-names>
        </name>
        <name>
          <surname>Meyer</surname>
          <given-names>CA</given-names>
        </name>
        <name>
          <surname>Song</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Li</surname>
          <given-names>W</given-names>
        </name>
        <name>
          <surname>Geistlinger</surname>
          <given-names>TR</given-names>
        </name>
        <name>
          <surname>Eeckhoute</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Brodsky</surname>
          <given-names>AS</given-names>
        </name>
        <name>
          <surname>Keeton</surname>
          <given-names>EK</given-names>
        </name>
        <name>
          <surname>Fertuck</surname>
          <given-names>KC</given-names>
        </name>
        <name>
          <surname>Hall</surname>
          <given-names>GF</given-names>
        </name>
        <name>
          <surname>Wang</surname>
          <given-names>Q</given-names>
        </name>
        <name>
          <surname>Bekiranov</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Sementchenko</surname>
          <given-names>V</given-names>
        </name>
        <name>
          <surname>Fox</surname>
          <given-names>EA</given-names>
        </name>
        <name>
          <surname>Silver</surname>
          <given-names>PA</given-names>
        </name>
        <name>
          <surname>Gingeras</surname>
          <given-names>TR</given-names>
        </name>
        <name>
          <surname>Liu</surname>
          <given-names>XS</given-names>
        </name>
        <name>
          <surname>Brown</surname>
          <given-names>M</given-names>
        </name>
        <article-title>Genome-wide analysis of estrogen receptor binding sites.</article-title>
        <source>Nat Genet</source>
        <year>2006</year>
        <volume>38</volume>
        <fpage>1289</fpage>
        <lpage>1297</lpage>
        <pub-id pub-id-type="doi">10.1038/ng1901</pub-id>
        <pub-id pub-id-type="pmid">17013392</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B7">
      <mixed-citation publication-type="book">
        <collab>R Development Core Team</collab>
        <source>R: A Language and Environment for Statistical Computing</source>
        <year>2011</year>
        <publisher-name>Vienna: R Foundation for Statistical Computing</publisher-name>
      </mixed-citation>
    </ref>
    <ref id="B8">
      <mixed-citation publication-type="other">
        <article-title>NetBeans IDE 6.9 Development Environment</article-title>
        <ext-link ext-link-type="uri" xlink:href="http://netbeans.org/">http://netbeans.org/</ext-link>
      </mixed-citation>
    </ref>
    <ref id="B9">
      <mixed-citation publication-type="other">
        <article-title>Apache xmlrpc Webserver</article-title>
        <ext-link ext-link-type="uri" xlink:href="http://ws.apache.org/xmlrpc/">http://ws.apache.org/xmlrpc/</ext-link>
      </mixed-citation>
    </ref>
    <ref id="B10">
      <mixed-citation publication-type="other">
        <article-title>JRI Library Interface</article-title>
        <ext-link ext-link-type="uri" xlink:href="http://www.rforge.net/JRI/">http://www.rforge.net/JRI/</ext-link>
      </mixed-citation>
    </ref>
    <ref id="B11">
      <mixed-citation publication-type="other">
        <name>
          <surname>Lang</surname>
          <given-names>DT</given-names>
        </name>
        <article-title>XMLRPC: Remote Procedure Call (RPC) via XML in R</article-title>
        <ext-link ext-link-type="uri" xlink:href="http://www.omegahat.org/XMLRPC/">http://www.omegahat.org/XMLRPC/</ext-link>
      </mixed-citation>
    </ref>
    <ref id="B12">
      <mixed-citation publication-type="other">
        <name>
          <surname>Urbanek</surname>
          <given-names>S</given-names>
        </name>
        <article-title>rJava: Low-level R to Java interface</article-title>
        <ext-link ext-link-type="uri" xlink:href="http://www.rforge.net/rJava/">http://www.rforge.net/rJava/</ext-link>
      </mixed-citation>
    </ref>
    <ref id="B13">
      <mixed-citation publication-type="book">
        <name>
          <surname>Brandes</surname>
          <given-names>U</given-names>
        </name>
        <person-group person-group-type="editor">Kaufmann M, Wagner D</person-group>
        <article-title>Drawing graphs: methods and models</article-title>
        <source>Lecture Notes in Computer Science</source>
        <year>2001</year>
        <volume>2025</volume>
        <publisher-name>Heidelberg: Springer</publisher-name>
        <fpage>71</fpage>
        <lpage>86</lpage>
        <pub-id pub-id-type="doi">10.1007/3-540-44969-8_4</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B14">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Fruchterman</surname>
          <given-names>TMJ</given-names>
        </name>
        <name>
          <surname>Reingold</surname>
          <given-names>EM</given-names>
        </name>
        <article-title>Graph drawing by force-directed placement.</article-title>
        <source>Software Practice Experience</source>
        <year>1991</year>
        <volume>21</volume>
        <fpage>1129</fpage>
        <lpage>1164</lpage>
        <pub-id pub-id-type="doi">10.1002/spe.4380211102</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B15">
      <mixed-citation publication-type="other">
        <article-title>Java Universal Network/Graph Framework</article-title>
        <ext-link ext-link-type="uri" xlink:href="http://sourceforge.net/projects/jung/">http://sourceforge.net/projects/jung/</ext-link>
      </mixed-citation>
    </ref>
    <ref id="B16">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Smyth</surname>
          <given-names>GK</given-names>
        </name>
        <article-title>Linear models and empirical bayes methods for assessing differential expression in microarray experiments.</article-title>
        <source>Stat Appl Genet Mol Biol</source>
        <year>2004</year>
        <volume>3</volume>
        <fpage>Article3</fpage>
        <pub-id pub-id-type="pmid">16646809</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B17">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Prasad</surname>
          <given-names>TS</given-names>
        </name>
        <name>
          <surname>Kandasamy</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>Pandey</surname>
          <given-names>A</given-names>
        </name>
        <article-title>Human Protein Reference Database and Human Proteinpedia as discovery tools for systems biology.</article-title>
        <source>Methods Mol Biol</source>
        <year>2009</year>
        <volume>577</volume>
        <fpage>67</fpage>
        <lpage>79</lpage>
        <pub-id pub-id-type="doi">10.1007/978-1-60761-232-2_6</pub-id>
        <pub-id pub-id-type="pmid">19718509</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B18">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Le Meur</surname>
          <given-names>N</given-names>
        </name>
        <name>
          <surname>Gentleman</surname>
          <given-names>R</given-names>
        </name>
        <article-title>Analyzing biological data using R: methods for graphs and networks.</article-title>
        <source>Methods Mol Biol</source>
        <year>2012</year>
        <volume>804</volume>
        <fpage>343</fpage>
        <lpage>373</lpage>
        <pub-id pub-id-type="doi">10.1007/978-1-61779-361-5_19</pub-id>
        <pub-id pub-id-type="pmid">22144163</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B19">
      <mixed-citation publication-type="other">
        <name>
          <surname>Csardi</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Nepusz</surname>
          <given-names>T</given-names>
        </name>
        <article-title>The igraph software package for complex network research</article-title>
        <source>R package version 0.5.5-2</source>
        <ext-link ext-link-type="uri" xlink:href="http://cran.r-project.org/web/packages/igraph/index.html">http://cran.r-project.org/web/packages/igraph/index.html</ext-link>
      </mixed-citation>
    </ref>
    <ref id="B20">
      <mixed-citation publication-type="other">
        <name>
          <surname>Gentleman</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Whalen</surname>
          <given-names>E</given-names>
        </name>
        <name>
          <surname>Huber</surname>
          <given-names>W</given-names>
        </name>
        <name>
          <surname>Falcon</surname>
          <given-names>S</given-names>
        </name>
        <article-title>graph: a package to handle graph data structures</article-title>
        <source>R package version 1.30.30</source>
        <ext-link ext-link-type="uri" xlink:href="http://bioconductor.org/packages/release/bioc/html/graph.html">http://bioconductor.org/packages/release/bioc/html/graph.html</ext-link>
      </mixed-citation>
    </ref>
    <ref id="B21">
      <mixed-citation publication-type="other">
        <name>
          <surname>Gentry</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Long</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Gentleman</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Falcon</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Hahne</surname>
          <given-names>F</given-names>
        </name>
        <name>
          <surname>Sarkar</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Hansen</surname>
          <given-names>K</given-names>
        </name>
        <article-title>Rgraphviz: Provides plotting capabilities for R graph objects</article-title>
        <source>R package version 1.30.31</source>
        <ext-link ext-link-type="uri" xlink:href="http://bioconductor.org/packages/release/bioc/html/Rgraphviz.html">http://bioconductor.org/packages/release/bioc/html/Rgraphviz.html</ext-link>
      </mixed-citation>
    </ref>
    <ref id="B22">
      <mixed-citation publication-type="other">
        <name>
          <surname>Shannon</surname>
          <given-names>P</given-names>
        </name>
        <article-title>RCytoscape</article-title>
        <source>R package version 1.3.0</source>
        <ext-link ext-link-type="uri" xlink:href="http://bioconductor.org/packages/release/bioc/html/RCytoscape.html">http://bioconductor.org/packages/release/bioc/html/RCytoscape.html</ext-link>
      </mixed-citation>
    </ref>
    <ref id="B23">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Bot</surname>
          <given-names>JJ</given-names>
        </name>
        <name>
          <surname>Reinders</surname>
          <given-names>MJ</given-names>
        </name>
        <article-title>CytoscapeRPC: a plugin to create, modify and query Cytoscape networks from scripting languages.</article-title>
        <source>Bioinformatics</source>
        <year>2011</year>
        <volume>27</volume>
        <fpage>2451</fpage>
        <lpage>2452</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btr388</pub-id>
        <pub-id pub-id-type="pmid">21712249</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B24">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Norel</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Rice</surname>
          <given-names>JJ</given-names>
        </name>
        <name>
          <surname>Stolovitzky</surname>
          <given-names>G</given-names>
        </name>
        <article-title>The self-assessment trap: can we all be better than average?</article-title>
        <source>Mol Syst Biol</source>
        <year>2011</year>
        <volume>7</volume>
        <fpage>537</fpage>
        <pub-id pub-id-type="pmid">21988833</pub-id>
      </mixed-citation>
    </ref>
  </ref-list>
</back>

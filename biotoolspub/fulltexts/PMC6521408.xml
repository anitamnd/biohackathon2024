<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6521408</article-id>
    <article-id pub-id-type="publisher-id">2796</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-019-2796-3</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>rstoolbox - a Python library for large-scale analysis of computational protein design data and structural bioinformatics</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Bonet</surname>
          <given-names>Jaume</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Harteveld</surname>
          <given-names>Zander</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Sesterhenn</surname>
          <given-names>Fabian</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Scheck</surname>
          <given-names>Andreas</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Correia</surname>
          <given-names>Bruno E.</given-names>
        </name>
        <address>
          <email>bruno.correia@epfl.ch</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="ISNI">0000000121839049</institution-id><institution-id institution-id-type="GRID">grid.5333.6</institution-id><institution>Institute of Bioengineering, </institution><institution>École Polytechnique Fédérale de Lausanne, </institution></institution-wrap>CH-1015 Lausanne, Switzerland </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 2223 3006</institution-id><institution-id institution-id-type="GRID">grid.419765.8</institution-id><institution>Swiss Institute of Bioinformatics (SIB), </institution></institution-wrap>CH-1015 Lausanne, Switzerland </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>15</day>
      <month>5</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>15</day>
      <month>5</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2019</year>
    </pub-date>
    <volume>20</volume>
    <elocation-id>240</elocation-id>
    <history>
      <date date-type="received">
        <day>23</day>
        <month>1</month>
        <year>2019</year>
      </date>
      <date date-type="accepted">
        <day>8</day>
        <month>4</month>
        <year>2019</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s). 2019</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold>This article is distributed under the terms of the Creative Commons Attribution 4.0 International License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">Large-scale datasets of protein structures and sequences are becoming ubiquitous in many domains of biological research. Experimental approaches and computational modelling methods are generating biological data at an unprecedented rate. The detailed analysis of structure-sequence relationships is critical to unveil governing principles of protein folding, stability and function. Computational protein design (CPD) has emerged as an important structure-based approach to engineer proteins for novel functions. Generally, CPD workflows rely on the generation of large numbers of structural models to search for the optimal structure-sequence configurations. As such, an important step of the CPD process is the selection of a small subset of sequences to be experimentally characterized. Given the limitations of current CPD scoring functions, multi-step design protocols and elaborated analysis of the decoy populations have become essential for the selection of sequences for experimental characterization and the success of CPD strategies.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">Here, we present the rstoolbox, a Python library for the analysis of large-scale structural data tailored for CPD applications. rstoolbox is oriented towards both CPD software <italic>users</italic> and <italic>developers</italic>, being easily integrated in analysis workflows. For <italic>users</italic>, it offers the ability to profile and select decoy sets, which may guide multi-step design protocols or for follow-up experimental characterization. rstoolbox provides intuitive solutions for the visualization of large sequence/structure datasets (e.g. logo plots and heatmaps) and facilitates the analysis of experimental data obtained through traditional biochemical techniques (e.g. circular dichroism and surface plasmon resonance) and high-throughput sequencing. For CPD software <italic>developers</italic>, it provides a framework to easily benchmark and compare different CPD approaches. Here, we showcase the rstoolbox in both types of applications.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p id="Par3">rstoolbox is a library for the evaluation of protein structures datasets tailored for CPD data. It provides interactive access through seamless integration with IPython, while still being suitable for high-performance computing. In addition to its functionalities for data analysis and graphical representation, the inclusion of rstoolbox in protein design pipelines will allow to easily standardize the selection of design candidates, as well as, to improve the overall reproducibility and robustness of CPD selection processes.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>rstoolbox</kwd>
      <kwd>Computational protein design</kwd>
      <kwd>Protein structural metrics</kwd>
      <kwd>Scoring</kwd>
      <kwd>Data analysis</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100000781</institution-id>
            <institution>European Research Council</institution>
          </institution-wrap>
        </funding-source>
        <award-id>716058</award-id>
        <principal-award-recipient>
          <name>
            <surname>Correia</surname>
            <given-names>Bruno E.</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100001711</institution-id>
            <institution>Schweizerischer Nationalfonds zur Förderung der Wissenschaftlichen Forschung</institution>
          </institution-wrap>
        </funding-source>
        <award-id>310030_163139</award-id>
        <principal-award-recipient>
          <name>
            <surname>Correia</surname>
            <given-names>Bruno E.</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>Swiss Systemsx.ch Initiative</institution>
        </funding-source>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>Biltema Fundation</institution>
        </funding-source>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>EPFL-Fellows: H2020 MSC Actions (CH)</institution>
        </funding-source>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2019</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par7">The fast-increasing amounts of biomolecular structural data are enabling an unprecedented level of analysis to unveil the principles that govern structure-function relationships in biological macromolecules. This wealth of structural data has catalysed the development of computational protein design (CPD) methods, which has become a popular tool for the structure-based design of proteins with novel functions and optimized properties [<xref ref-type="bibr" rid="CR1">1</xref>]. Due to the extremely large size of the sequence-structure space [<xref ref-type="bibr" rid="CR2">2</xref>], CPD is an NP-hard problem [<xref ref-type="bibr" rid="CR3">3</xref>]. Two different approaches have been tried to address this problem: deterministic and heuristic algorithms.</p>
    <p id="Par8">Deterministic algorithms are aimed towards the search of a single-best solution. The OSPREY design suite, which combines Dead-End Elimination theorems combined with A* search (DEE/A*) [<xref ref-type="bibr" rid="CR4">4</xref>], is one of the most used software relying on this approach. By definition, deterministic algorithms provide a sorted, continuous list of results. This means that, according to their energy function, one will find the best possible solution for a design problem. Nevertheless, as energy functions are not perfect, the selection of multiple decoys for experimental validation is necessary [<xref ref-type="bibr" rid="CR5">5</xref>, <xref ref-type="bibr" rid="CR6">6</xref>]. Despite notable successes [<xref ref-type="bibr" rid="CR7">7</xref>–<xref ref-type="bibr" rid="CR9">9</xref>], the time requirements for deterministic design algorithms when working with large proteins or de novo design approaches limits their applicability, prompting the need for alternative approaches for CPD.</p>
    <p id="Par9">Heuristic algorithms, such as those based on Monte Carlo (MC) sampling [<xref ref-type="bibr" rid="CR10">10</xref>], use stochastic sampling methods together with scoring functions to guide the structure and sequence exploration towards an optimized score. These algorithms have the advantage of sampling the sequence-structure space within more reasonable time spans, however, they do not guarantee that the final solutions reached the global minimum [<xref ref-type="bibr" rid="CR11">11</xref>]. Heuristic CPD workflows address this shortcoming in two ways: I) extensive sampling generating large decoy sets; II) sophisticated ranking and filtering schemes to discriminate and identify the best solutions. This general approach is used by the Rosetta modelling suite [<xref ref-type="bibr" rid="CR12">12</xref>], one of the most widespread CPD tools.</p>
    <p id="Par10">For Rosetta, as with other similar approaches, the amount of sampling necessary scales with the degrees of freedom (conformational and sequence) of a particular CPD task. Structure prediction simulations such as <italic>ab initio</italic> or docking may require to generate up to 10<sup>6</sup> decoys to find acceptable solutions [<xref ref-type="bibr" rid="CR13">13</xref>, <xref ref-type="bibr" rid="CR14">14</xref>]. Similarly, for different design problems the sampling scale has been estimated. Sequence design using static protein backbones (fixed backbone design) [<xref ref-type="bibr" rid="CR15">15</xref>] may reach sufficient sampling within hundreds of decoys. Protocols that allow even limited backbone flexibility, dramatically increase the search space, requiring 10<sup>4</sup> to 10<sup>6</sup> decoys, depending on the number of residues for which sequence design will be performed. Due to the large decoy sets generated in the search for the best design solution, as well as the specificities of each design case, researchers tend to either generate one-time-use scripts or analysis scripts provided by third parties [<xref ref-type="bibr" rid="CR16">16</xref>]. In the first case, these solutions are not standardized and its logic can be difficult to follow. In the second case, these scripts can be updated over time without proper back-compatibility control. As such, generalized tools to facilitate the management and analysis of the generated data are essential to CPD pipelines.</p>
    <p id="Par11">Here, we present rstoolbox, a Python library to manage and analyse designed decoy sets. The library presents a variety of functions to produce multi-parameter scoring schemes and compare the performance of different CPD protocols. The library can be accessed by users within three levels of expertise: a collection of executables for designers with limited coding experience, interactive interfaces such as Ipython [<xref ref-type="bibr" rid="CR17">17</xref>] for designers with basic experience in data analysis (i.e. pandas [<xref ref-type="bibr" rid="CR18">18</xref>]), and a full-fledge API to be used by developers to benchmark and optimize new CPD protocols. This library was developed for direct processing of Rosetta output files, but its general architecture makes it easily adaptable to other CPD software. The applicability of the tools developed expands beyond the analysis of CPD data making it suitable for general structural bioinformatics problems (see extended_example notebook in the code’s repository). Thus, we foresee that rstoolbox may provide a number of useful functionalities for the broad structural bioinformatics community.</p>
  </sec>
  <sec id="Sec2">
    <title>Implementation</title>
    <p id="Par12">rstoolbox has been implemented extending from pandas [<xref ref-type="bibr" rid="CR18">18</xref>], one of the most established Python libraries for high-performance data analysis. The rstoolbox library architecture is composed of 4 functional modules (Fig. <xref rid="Fig1" ref-type="fig">1</xref>): I) rstoolbox.io - provides read/write functions for multiple data types, including computational design simulations and experimental data, in a variety of formats; II) rstoolbox.analysis - provides functions for sequence and structural analysis of designed decoys; III) rstoolbox.plot – plotting functionalities that include multiple graphical representations for protein sequence and structure features, such as logo plots [<xref ref-type="bibr" rid="CR19">19</xref>], Ramachandran distributions [<xref ref-type="bibr" rid="CR20">20</xref>], sequence heatmaps and other general plotting functions useful for the analysis of CPD data; IV) rstoolbox.utils – helper functions for data manipulation and conversion, comparison of designs with native proteins and the creation of amino acid profiles to inform further iterations of the design process.<table-wrap id="Tab1"><label>Table 1</label><caption><p>Sample code for the evaluation of protein backbone dihedral angles and fragment quality</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Action</th><th>Code Sample</th></tr></thead><tbody><tr><td>Load</td><td><bold>import rstoolbox as rs</bold><break/>
import matplotlib.pyplot as plt
<break/>
import seaborn as sns
</td></tr><tr><td rowspan="3">Read</td><td><italic># With Rosetta installed, a single structure is scored. The</italic><break/><italic># function will return multiple score terms, sequence,</italic><break/><italic># secondary structure and phi/psi angles.</italic><break/>ref = <bold>rs.io.get_sequence_and_structure</bold>(‘1kx8_d2.pdb’)</td></tr><tr><td><italic># Loading Rosetta fragments</italic><break/>seqfrags = <bold>rs.io.parse_rosetta_fragments</bold>(‘seq.200.9mers’)<break/><italic># With Rosetta, structural similarity of the fragments can be measured</italic><break/>
seqfrags = seqfrags.
<bold>add_quality_measure</bold>
(None, ‘mota_1kx8_d2.pdb’)
<break/>strfrags = <bold>rs.io.parse_rosetta_fragments</bold>(‘str.200.9mers’)<break/>
strfrags = strfrags.
<bold>add_quality_measure</bold>
(None, ‘mota_1kx8_d2.pdb’)
</td></tr><tr><td><italic># Loading</italic><italic>ab initio</italic><italic>data</italic><break/>abseq = <bold>rs.io.parse_rosetta_file</bold>(‘abinitio_seqfrags.minsilent.gz’)<break/>abstr = <bold>rs.io.parse_rosetta_file</bold>(‘abinitio_strfrags.minsilent.gz’)</td></tr><tr><td rowspan="5">Plot</td><td>
fig = plt.figure(figsize = (170 / 25.4, 170 / 25.4))
<break/>
grid = (3, 6)
</td></tr><tr><td><italic># There are 4 flavours of Ramachandran plots available depending on the</italic><break/><italic># targeted residues: GENERAL, GLY, PRE-PRO and PRO.</italic><break/>
ax1 = plt.subplot2grid(grid, (0, 0), colspan = 2)
<break/>
<italic># Ramachandran is plotted for a single decoy (selected as parameter 1).</italic>
<break/>
<italic># As a decoy can contain multiple chains, the chain identifier is an</italic>
<break/>
<italic># ubiquitous attribute in multiple functions of the library.</italic>
<break/>
<bold>rs.plot.plot_ramachandran_single</bold>
(ref.iloc[0], ‘A’, ax1)
<break/>
ax1 = plt.subplot2grid(grid, (0, 2), fig = fig, colspan = 2)
<break/>
<bold>rs.</bold>
<bold>plot.plot_ramachandran_single</bold>
(ref.iloc[0], ‘A’, ax1, ‘PRE-PRO’)
<break/>
ax1 = plt.subplot2grid(grid, (0, 4), colspan = 2)
<break/>
<bold>rs.plot.plot_ramachandran_single</bold>
(ref.iloc[0], ‘A’, ax1, ‘PRO’)
</td></tr><tr><td><italic># Show RMSD match of fragments to the corresponding sequence for a</italic><break/><italic># selected region</italic><break/>
ax1 = plt.subplot2grid(grid, (1, 0), colspan = 3)
<break/>
ax2 = plt.subplot2grid(grid, (1, 3), colspan = 3, sharey = ax1)
<break/>
<bold>rs.plot.plot_fragments</bold>
(seqfrags.
<bold>slice_region</bold>
(21, 56),
<break/>                                                                     strfrags.<bold>slice_region</bold>(21, 56), ax1, ax2)<break/>
<bold>rs.utils.add_top_title</bold>
(ax1, ‘sequence-based 9mers’)
<break/>
<bold>rs.utils.add_top_title</bold>
(ax2, ‘structure-based 9mers’)
</td></tr><tr><td><italic># DataFrames can directly work with widely spread plotting functions</italic><break/>
ax1 = plt.subplot2grid(grid, (2, 0), colspan = 3)
<break/>
sns.scatterplot(x = “rms”, y = “score”, data = abseq, ax = ax1)
<break/>
ax2 = plt.subplot2grid(grid, (2, 3), colspan = 3, sharey = ax1, sharex = ax1)
<break/>
sns.scatterplot(x = “rms”, y = “score”, data = abstr, ax = ax2)
<break/>
<bold>rs.utils.add_top_title</bold>
(ax1, ‘sequence-based fragments’)
<break/>
<bold>rs.utils.add_top_title</bold>
(ax2, ‘structure-based fragments’)
</td></tr><tr><td>
plt.tight_layout()
<break/>
plt.savefig(‘BMC_Fig2.png’, dpi = 300)
</td></tr></tbody></table><table-wrap-foot><p>The code shows how to combine structural data obtained from a protein structure file with fragment quality evaluated by Rosetta and <italic>ab initio</italic> simulations. Code comments are presented in italics while functions from the rstoolbox are highlighted in bold. Styling commands are skipped to facilitate reading, but can be found in the repository’s notebook.</p></table-wrap-foot></table-wrap><fig id="Fig1"><label>Fig. 1</label><caption><p>rstoolbox library architecture. The io module contains functions for parsing the input data. The input functions in io generate one of the three data containers defined in the components module: DesignFrame for decoy populations, SequenceFrame for per-position amino acid frequencies and FragmentFrame for Rosetta’s fragments. The other three modules analysis, utils and plot, provide all the functions to manipulate, process and visualize the data stored in the different components</p></caption><graphic xlink:href="12859_2019_2796_Fig1_HTML" id="MO1"/></fig></p>
    <p id="Par13">Additionally, rstoolbox contains 3 table-like data containers defined in the rstoolbox.components module (Fig. <xref rid="Fig1" ref-type="fig">1</xref>): I) DesignFrame - each row is a designed decoy and the columns represent decoy properties, such as, structural and energetic scores, sequence, secondary structure, residues of interest among others; II) SequenceFrame - similar to a position-specific scoring matrix (PSSM), obtained from the DesignFrame can be used for sequence and secondary structure enrichment analysis; III) FragmentFrame - stores fragment sets, a key element in Rosetta’s <italic>ab initio</italic> folding and loop closure protocols. Derived from pandas.DataFrame [<xref ref-type="bibr" rid="CR18">18</xref>], all these objects can be casted from and to standard data frames, making them compatible with libraries built for data frame analysis and visualization.</p>
    <p id="Par14">The DesignFrame is the most general data structure of the library. It allows fast sorting and selection of decoys through different scores and evaluation of sequence and structural features. It can be filled with any tabulated, csv or table-like data file. Any table-formatted data can be readily input, as the generation of parsers and integration into the rstoolbox framework is effortless, providing easy compatibility with other CPD software packages, in addition to Rosetta. Currently, rstoolbox provides parsers for FASTA files, CLUSTALW [<xref ref-type="bibr" rid="CR21">21</xref>] and HMMER [<xref ref-type="bibr" rid="CR22">22</xref>] outputs, Rosetta’s json and silent files (Fig. <xref rid="Fig1" ref-type="fig">1</xref>).</p>
    <p id="Par15">The components of the library can directly interact with most of the commonly used Python plotting libraries such as matplotlib [<xref ref-type="bibr" rid="CR23">23</xref>] or seaborn [<xref ref-type="bibr" rid="CR24">24</xref>]. Additional plotting functions, such as logo and Ramachandran plots, are also present to facilitate specific analysis of CPD data. As mentioned, this library has been developed primarily to handle Rosetta outputs and thus, rstoolbox accesses Rosetta functions to extract structural features from designed decoys (e. g. backbone dihedral angles). Nevertheless, many of the rstoolbox’s functionalities are independent of a local installation of Rosetta. rstoolbox is configured with a continuous integration system to guarantee a robust performance upon the addition of new input formats and functionalities. Testing covers more than 80% of the library’s code, excluding functions that have external dependencies from programs like Rosetta [<xref ref-type="bibr" rid="CR12">12</xref>], HMMER [<xref ref-type="bibr" rid="CR22">22</xref>] or CLUSTALW [<xref ref-type="bibr" rid="CR21">21</xref>]. To simplify its general usage, the library has a full API documentation with examples of common applications and can be directly installed with PyPI (pip install rstoolbox).</p>
  </sec>
  <sec id="Sec3">
    <title>Results</title>
    <sec id="Sec4">
      <title>Analysis of protein backbone features</title>
      <p id="Par16">A typical metric to assess the quality of protein backbone conformations is by comparison of the backbone dihedral angles with those of the Ramachandran distributions [<xref ref-type="bibr" rid="CR20">20</xref>]. Such evaluation is more relevant in CPD strategies that utilize flexible backbone sampling, which have become increasingly used in the field (e.g. loop modelling [<xref ref-type="bibr" rid="CR25">25</xref>], de novo design [<xref ref-type="bibr" rid="CR26">26</xref>]). A culprit often observed in designs generated using flexible backbone sampling is that the modelled backbones present dihedral angles in disallowed regions of the Ramachandran distributions, meaning that such conformations are likely to be unrealistic. To identify these problematic structures, rstoolbox provides functions to analyse the dihedral angles of decoy sets and represent them in Ramachandran plots (Table <xref rid="Tab1" ref-type="table">1</xref>, Fig. <xref rid="Fig2" ref-type="fig">2</xref>a).<fig id="Fig2"><label>Fig. 2</label><caption><p>Ramachandran plots and fragment quality profiles. Assessment of fragments generated using distinct input data and their effect on Rosetta <italic>ab initio</italic> simulations. With the exception of the panel identifiers, the image was created with the code presented in Table <xref rid="Tab1" ref-type="table">1</xref>. <bold>a</bold> Ramachandran distribution of a query structure. <bold>b</bold> Fragment quality comparison between sequence- and structure-based fragments. The plot shows a particular region of the protein for which sequence-based fragments present much larger structural deviations than structure-based fragments in comparison with the query protein. <bold>c</bold> Rosetta <italic>ab initio</italic> simulations performed with sequence- (left) or structure-based (right) fragments. Fragments with a better structural mimicry relative to the query structure present an improved folding funnel</p></caption><graphic xlink:href="12859_2019_2796_Fig2_HTML" id="MO2"/></fig></p>
      <p id="Par17">Furthermore, structural prediction has also become an integral part of many CPD workflows [<xref ref-type="bibr" rid="CR27">27</xref>]. Here, one evaluates if the designed sequences have energetic propensity to adopt the desired structural conformations. A typical example where prediction is recurrently used as a criterion to select the best designed sequences is on de novo design. To assess the ability of novel sequences to refold to the target structures, the Rosetta <italic>ab initio</italic> protocol is typically used [<xref ref-type="bibr" rid="CR13">13</xref>]. Importantly, the quality of the predictions is critically dependent on the fragment sets provided as input as they are used as local building blocks to assemble the folded three-dimensional structures. The local structural similarity of the fragments to the target structure largely determines the quality of the sampling of the <italic>ab initio</italic> predictions. rstoolbox provides analysis and plotting tools to evaluate the similarity of fragment sets to a target structure (Fig. <xref rid="Fig2" ref-type="fig">2</xref>b). In Fig. <xref rid="Fig2" ref-type="fig">2</xref>c the impact of distinct fragment sets in <italic>ab initio</italic> predictions is shown where a clear folding funnel is visible for fragments with high structural similarity. This tool can also be useful for structural prediction applications to profile the quality of different fragment sets.</p>
    </sec>
    <sec id="Sec5">
      <title>Guiding iterative CPD workflows</title>
      <p id="Par18">Many CPD workflows rely on iterative approaches in which multiple rounds of design are performed and each generation of designs is used to guide the next one.</p>
      <p id="Par19">The rstoolbox presents a diversity of functions that aid this process and perform tasks from selecting decoys with specific mutations of interest, to those that define residue sets for instance based in position weight matrices (generate_mutants_from_matrix()). When redesigning naturally occurring proteins, it also presents a function to generate reversions to wild-type residues (generate_wt_reversions()) to generate the best possible design with the minimal number of mutations. These functions will directly execute Rosetta, if installed in the system, but can also be used to create input files to run the simulations in different software suits. Code example for these functionalities is shown in Table <xref rid="Tab2" ref-type="table">2</xref>. The result of the code is depicted on Fig. <xref rid="Fig3" ref-type="fig">3</xref>.<table-wrap id="Tab2"><label>Table 2</label><caption><p>Sample code to guide iterative CPD workflows</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Action</th><th>Code Sample</th></tr></thead><tbody><tr><td>Load</td><td><bold>import rstoolbox as rs</bold><break/>
import matplotlib.pyplot as plt
<break/>
import seaborn as sns
</td></tr><tr><td rowspan="4">Read</td><td><italic># Load design population. A description dictionary can be provided to alter the</italic><break/><italic># information loaded from the silent file. In this case, we load all the</italic><break/><italic># sequence information available for all possible chains in the decoys.</italic><break/>df = <bold>rs.io.parse_rosetta_file</bold>(‘1kx8gen2.silent.gz’, {‘sequence’: ‘*’})</td></tr><tr><td><italic># Select the top 5% designs by score and obtain the residues</italic><break/><italic># overrepresented by more than 20%</italic><break/>
df_top = df[df[‘score’] &lt; df[‘score’].quantile(0.05)]
<break/>freq_top = <bold>rs.analysis.sequential_frequencies</bold>(df_top, ‘A’, ‘sequence’, ‘protein’)<break/>
freq_all = df
<bold>.sequence_frequencies</bold>
(‘A’)
<italic># shortcut to utils.sequential_frequencies</italic>
<break/>
freq_diff = (top - freq)
<break/>
muts = freq_diff[(freq_diff.T &gt; 0.20).any()].idxmax(axis = 1)
<break/>
muts = list(zip(muts.index, muts.values))
</td></tr><tr><td><italic># Select the best scored sequence that does NOT contain ANY of those residues</italic><break/>
pick = df
<bold>.get_sequence_with</bold>
(‘A’, muts, confidence = 0.25,
<break/>
                                                                                  invert = True).sort_values(‘score’).iloc[:1]
<break/>
<italic># Setting a reference sequence in a DesignFrame allows to use this sequence as</italic>
<break/>
<italic># source for mutant generation and sequence comparison, amongst others.</italic>
<break/>
seq = pick.iloc[0
<bold>].get_sequence</bold>
(‘A’)
<break/>
pick
<bold>.add_reference_sequence</bold>
(‘A’, seq)
</td></tr><tr><td><italic># Generate mutants based on the identified overrepresented variants:</italic><break/><italic># 1. Create a list with positions and residue type expected in each position</italic><break/>
muts = [(muts[i][0], muts[i]
[1]
+ seq[muts[i][0] - 1]) for i in range (len(muts))]
<break/>
<italic># 2</italic>
Generate a DesignFrame containing the new expected sequences
<break/>
variants = pick
<bold>.generate_mutant_variants</bold>
(‘A’, muts)
<break/>
variants
<bold>.add_reference_sequence</bold>
(‘A’, seq)
<break/><italic># 3</italic>. Generate the resfiles that will guide the mutagenesis<break/>
variants = variants
<bold>.make_resfile</bold>
(‘A’, ‘NATAA’, ‘mutants.resfile’)
<break/>
<italic># 4. With Rosetta installed, we can automatically run those resfiles.</italic>
<break/>
variants = variants
<bold>.apply_resfile</bold>
(‘A’, ‘variants.silent’)
<break/>
variants = variants
<bold>.identify_mutants</bold>
(‘A’)
</td></tr><tr><td rowspan="4">Plot</td><td>
fig = plt.figure(figsize = (170 / 25.4, 170 / 25.4))
<break/>
grid = (3, 4)
</td></tr><tr><td><italic># Visualize overrepresented residues in the top 5%</italic><break/>
ax = plt.subplot2grid(grid, (0, 0), colspan = 4, rowspan = 4)
<break/>
cbar_ax = plt.subplot2grid(grid, (4, 0), colspan = 4, rowspan = 1)
<break/>
sns.heatmap(freq_diff.T, ax = ax, vmin = 0, cbar_ax = cbar_ax)
<break/>
<bold>rs.utils.add_top_title</bold>
(ax, ‘Top scoring enrichment’)
</td></tr><tr><td><italic># Compare query positions: initial sequence</italic>
vs.
<italic>mutant generation</italic>
<break/>
ax = plt.subplot2grid(grid, (5, 0), colspan = 2, rowspan = 2)
<break/>
key_res = [mutants[0] for mutants in muts]
<break/>
<bold>rs.plot.logo_plot_in_axis</bold>
(pick, ‘A’, ax = ax, _residueskr)
<break/>
ax = plt.subplot2grid(grid, (5, 2), colspan = 2, rowspan = 2)
<break/>
<bold>rs.plot.logo_plot_in_axis</bold>
(variants, ‘A’, ax = ax, key_residues = kr)
</td></tr><tr><td><italic># Check which mutations perform better</italic><break/>
ax = plt.subplot2grid(grid, (7, 0), colspan = 2, rowspan = 3)
<break/>
sns.scatterplot(‘mutant_count_A’, ‘score’, data = variants, ax = ax)
<break/>
<italic># Show distribution of best performing decoys</italic>
<break/>
ax = plt.subplot2grid(grid, (7, 2), fig = fig, colspan = 2, rowspan = 3)
<break/>
<bold>rs.plot.logo_plot_in_axis</bold>
(variants.sort_values(‘score’).head(3), ‘A’,
ax = ax, key_residues = kr)
<break/>
plt.tight_layout()
<break/>
plt.savefig(‘BMC_Fig3.png’, dpi = 300)
</td></tr></tbody></table><table-wrap-foot><p>This example shows how to find overrepresented residue types for specific positions in the top 5% scored decoys of a design population, and use those residue types to bias the next design generation, thus creating a new, enriched second generation population. Code comments are presented in italics while functions from rstoolbox are highlighted in bold. Styling commands are skipped to facilitate reading, but can be found in the repository’s notebook.</p></table-wrap-foot></table-wrap><fig id="Fig3"><label>Fig. 3</label><caption><p>Guiding iterative design pipelines. Information retrieved from decoy populations can be used to guide following generations of designs. With the exception of the panel identifiers, the image was directly created with the code presented in Table <xref rid="Tab2" ref-type="table">2</xref>. <bold>a</bold> Mutant enrichment from comparison of the design on top 5% by score and the overall population. Positions 34, 35, 46 and 47 present a 20% enrichment of certain residue types over the whole population and are selected as positions of interest. <bold>b</bold> Residue types for the positions of interest in the decoy selected as template of the second generation. <bold>c</bold> Upon guided mutagenesis, we obtain a total of 16 decoys including the second-generation template. We can observe that the overrepresented residues shown in A are now present in the designed population. Upper x axis shows the original residue types of the template. <bold>d</bold> Combinatorial targeted mutagenesis yields 16 new designs, three of which showed an improved total score relative to the second-generation template (mutant_count_A is 0). <bold>e</bold> The three best scoring variants show mutations such as P46G which seem to be clearly favorable for the overall score of the designs. Upper x axis shows the original residue types of the template</p></caption><graphic xlink:href="12859_2019_2796_Fig3_HTML" id="MO3"/></fig></p>
      <p id="Par20">rstoolbox allows the user to exploit the data obtained from the analysis of designed populations in order to bias following design rounds. When using rstoolbox, this process is technically simple and clear to other users, which will improve the comprehension and reproducibility of iterative design pipelines.</p>
    </sec>
    <sec id="Sec6">
      <title>Evaluation of designed proteins</title>
      <p id="Par21">Recently, we developed the Rosetta FunFolDes protocol, which was devised to couple conformational folding and sequence design [<xref ref-type="bibr" rid="CR28">28</xref>]. FunFolDes was developed to insert functional sites into protein scaffolds and allow for full-backbone flexibility to enhance sequence sampling. As a demonstration of its performance, we designed a new protein to serve as an epitope-scaffold for the Respiratory Syncytial Virus site II (PDB ID: 3IXT [<xref ref-type="bibr" rid="CR29">29</xref>]), using as scaffold the A6 protein of the Antennal Chemosensory system from <italic>Mamestra brassicae</italic> (PDB ID: 1KX8 [<xref ref-type="bibr" rid="CR30">30</xref>]). The designs were obtained in a two-stage protocol, with the second generation being based on the optimization of a small subset of first-generation decoys. The code presented in Table <xref rid="Tab3" ref-type="table">3</xref> shows how to process and compare the data of both generations. Extra plotting functions to represent experimental data obtained from the biochemical characterization of the designed proteins is also shown. The result of this code is represented in Fig. <xref rid="Fig4" ref-type="fig">4</xref>.<table-wrap id="Tab3"><label>Table 3</label><caption><p>Sample code for the evaluation of a multistep design pipeline</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Action</th><th>Code Sample</th></tr></thead><tbody><tr><td>Load</td><td><bold>import rstoolbox as rs</bold><break/>
import matplotlib.pyplot as plt
</td></tr><tr><td>Read</td><td><italic># With Rosetta installed, scoring can be run for a single structure</italic><break/>baseline = <bold>rs.io.get_sequence_and_structure</bold>(‘1kx8.pdb’, minimize = True)<break/>
slen = len(baseline.iloc[0
<bold>].get_sequence</bold>
(‘A’))
<break/>
<italic># Pre-calculated sets can also be loaded to contextualize the data</italic>
<break/>
<italic># 70% homology filter</italic>
<break/>cath = <bold>rs.utils.load_refdata</bold>(‘cath’, 70)<break/>
<italic># Length in a window of 10 residues around expected design length</italic>
<break/>
cath = cath[(cath[‘length’] &gt; = slen - 5) &amp; (cath[‘length’] &lt; = slen + 5)]
<break/>
<italic># Designs were performed in two rounds</italic>
<break/>gen1 = <bold>rs.io.parse_rosetta_file</bold>(‘1kx8_gen1.designs’)<break/>gen2 = <bold>rs.io.parse_rosetta_file</bold>(‘1kx8_gen2.designs’)<break/>
<italic># Identifiers of selected decoys:</italic>
<break/>
decoys = [‘d1’, ‘d2’, ‘d3’, ‘d4’, ‘d5’, ‘d6’]
<break/>
<italic># Load experimental data for d2 (best performing decoy)</italic>
<break/>df_cd = <bold>rs.io.read_CD</bold>(‘1kx8_d2/CD’, model = ‘J-815’)<break/>df_spr = <bold>rs.io.read_SPR</bold>(‘1kx8_d2/SPR.data’)</td></tr><tr><td rowspan="4">Plot</td><td>
fig = plt.figure(figsize = (170 / 25.4, 170 / 25.4))
<break/>
grid = (3, 4)
<break/>
<italic># Compare scores between the two generations</italic>
<break/>axs = <bold>rs.plot.multiple_distributions</bold>(gen2, fig, (3, 4), values = [‘score’, ‘hbond_bb_sc’, ‘hbond_sc’, ‘rmsd’], refdata = gen1, violins = False, showfliers = False)</td></tr><tr><td>
# See how the selected decoys fit into domains of similar size
<break/>
qr = gen2[gen1[‘description’].isin(decoys)]
<break/>axs = <bold>rs.plot.plot_in_context</bold>(qr, fig, (3, 2), cath, (1, 0), [‘score’, ‘cav_vol’])<break/>
axs[0].axvline(baseline.iloc[0][‘score’], color = ‘k’, linestyle = ‘--’)
<break/>axs[1].axvline(baseline.iloc[0][‘cavity’], color = ‘k’, linestyle = ‘--’)</td></tr><tr><td><italic># Plot experimental validation data</italic><break/><italic>ax = plt.subplot2grid(grid, (2, 0), fig = fig, colspan = 2)</italic><break/><bold>rs.plot.plot_CD</bold>
(df_cd, ax, sample = 7)
<break/>
<italic>ax = plt.subplot2grid(grid, (2, 2), fig = fig, colspan = 2)</italic>
<break/>
<bold>rs.plot.plot_SPR</bold>
(df_spr, ax, fitcolor = ‘black’)
</td></tr><tr><td>
plt.tight_layout()
<break/>
plt.savefig(‘BMC_Fig4.png’, dpi = 300)
</td></tr></tbody></table><table-wrap-foot><p>The code shows how to combine the data from multiple Rosetta simulations and assess the different features between two design populations in terms of scoring as well as the comparison between the final designs and the initial structure template. Code comments are presented in italics while functions from the rstoolbox are highlighted in bold. Styling commands are skipped to facilitate reading, but can be found in the repository’s notebook.</p></table-wrap-foot></table-wrap><fig id="Fig4"><label>Fig. 4</label><caption><p>Multi-stage design, comparison with native proteins and representation of experimental data for 1kx8-based epitope-scaffold. Analysis of the two-step design pipeline, followed by a comparison of the distributions obtained for native proteins and the designs and plotting of biochemical experimental data. With the exception of the panel identifiers, the image was directly created with the code presented in Table <xref rid="Tab3" ref-type="table">3</xref>. <bold>a</bold> Comparison between the first (orange) and the second (blue) generation of designs. score – shows the Rosetta energy score; hbond_bb_sc – quantifies the hydrogen bonds between backbone and side chain atoms; hbond_sc - quantifies the hydrogen bonds occurring between side chain atoms; RMSD – root mean square deviation relative to the original template. Second-generation designs showed minor improvements on backbone hydrogen bonding and a substantial improvement in overall Rosetta Energy. <bold>b</bold> Score and cavity volume for the selected decoys in comparison with structures of CATH [<xref ref-type="bibr" rid="CR31">31</xref>] domains of similar size. The vertical dashed black line represents the score and cavity volume of the original 1kx8 after minimization, highlighting the improvements relative to the original scaffold. <bold>c</bold> Circular Dichroism and Surface Plasmon Resonance data for the best design shows a well folded helical protein that binds with high affinity to the expected target</p></caption><graphic xlink:href="12859_2019_2796_Fig4_HTML" id="MO4"/></fig></p>
    </sec>
    <sec id="Sec7">
      <title>Benchmarking design protocols</title>
      <p id="Par22">One of the main novelties of FunFolDes was the ability to include a binding partner during the folding-design simulations. This feature allows to bias the design simulations towards productive configurations capable of properly displaying the functional motif transplanted to the scaffold. To assess this new feature, we used as a benchmark test the previously computationally designed protein BINDI, a 3-helix bundle that binds to BHRF1 [<xref ref-type="bibr" rid="CR32">32</xref>]. We performed simulations under four different conditions: <italic>no-target</italic> (binding-target absent), <italic>static</italic> (binding-target without conformational freedom), <italic>pack</italic> (binding-target with side-chain repacking) and <italic>packmin</italic> (binding-target with side chain repacking and backbone minimization) and evaluated the performance of each simulation. Specifically, we analysed how the design populations performed regarding energetic sampling (Fig. <xref rid="Fig5" ref-type="fig">5</xref>a) and the mimicry of BINDI’s conformational shift from the original scaffold (Fig. <xref rid="Fig5" ref-type="fig">5</xref>a). In addition, we quantified the sequence recovery relative to the experimentally characterized BINDI sequence (Fig. <xref rid="Fig5" ref-type="fig">5</xref>b and c). Table <xref rid="Tab4" ref-type="table">4</xref> exemplifies how to easily load and combine the generated data and create a publication-ready comparative profile between the four different approaches (Fig. <xref rid="Fig5" ref-type="fig">5</xref>).<fig id="Fig5"><label>Fig. 5</label><caption><p>Comparison and benchmarking of different design protocols. Representation of the results obtained using four different design protocols. With the exception of the panel identifiers, the image was directly created with the code presented in Table <xref rid="Tab4" ref-type="table">4</xref>. <bold>a</bold> Representation of four scoring metrics in the design of a new protein binder. score – shows the overall Rosetta score; RMSD – root mean square deviation relative to BINDI; ddG –Rosetta energy for the interaction between two proteins; bb_clash - quantifies the backbone clashes between the binder and the target protein; <bold>b</bold> BLOSUM62 positional sequence score for the top design of the <italic>no_target</italic> (blue) and <italic>pack</italic> (green) design populations showcases how to analyse and compare individual decoys. The higher the value, the more likely two residue types (design vs. BINDI) are to interchange within evolutionary related proteins. Special regions of interest can be easily highlighted, as for instance the binding region (highlighted in salmon). <bold>c</bold> Population-wide analysis of the sequence recovery of the binding motif region for <italic>no_target</italic> and <italic>pack</italic> simulations<italic>.</italic> Darker shades of blue indicate a higher frequency and green frames indicate the reference residue type (BINDI sequence). This representation shows that the <italic>pack</italic> population explores more frequently residue types found in the BINDI design in the region of the binding motif</p></caption><graphic xlink:href="12859_2019_2796_Fig5_HTML" id="MO5"/></fig><table-wrap id="Tab4"><label>Table 4</label><caption><p>Sample code for the comparison between 4 different decoy populations</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Action</th><th>Code Sample</th></tr></thead><tbody><tr><td>Load</td><td>
import pandas as pd
<break/>
<bold>import rstoolbox as rs</bold>
<break/>
import matplotlib.pyplot as plt
</td></tr><tr><td rowspan="2">Read</td><td>
df = []
<break/>
<italic># With Rosetta installed, scoring can be run for a single structure</italic>
<break/>
baseline = 
<bold>rs.io.get_sequence_and_structure</bold>
(‘4yod.pdb’)
</td></tr><tr><td>
experiments = [‘no_target’, ‘static’, ‘pack’, ‘packmin’]
<break/>
scores = [‘score’, ‘LocalRMSDH’, ‘post_ddg’, ‘bb_clash’]
<break/>
scorename = [‘score’, ‘RMSD’, ‘ddG’, ‘bb_clash’]
<break/>
for experiment in experiments:
<break/>
<italic>  # Load Rosetta silent file from decoy generation</italic>
<break/>  ds = <bold>rs.io.parse_rosetta_file</bold>(experiment + ‘.design’)<break/>  <italic># Load decoy evaluation from a pre-processed CSV file.</italic><break/>  <italic># Casting pd. DataFrame into DesignFrame is as easy as shown here.</italic><break/>  ev = <bold>rs.components. DesignFrame</bold>(pd.read_csv(experiment + ‘.evals’))<break/>  <italic># Different outputs for the same decoys can be combined through</italic><break/>  <italic># their ‘description’ field (decoy identifier)</italic><break/>  df.append(ds.merge (ev, on = ‘description’))<break/>  <italic># Tables can be joined together into a single working object</italic><break/>  df = pd.concat(df)<break/>  # As we are comparing over BINDI’s sequence, that is our reference.<break/>  df<bold>.add_reference_sequence</bold>(‘B’, baseline.iloc[0]<bold>.get_sequence</bold>(‘B’)[:-1])</td></tr><tr><td rowspan="4">Plot</td><td>
fig = plt.figure (figsize = (170 / 25.4, 170 / 25.4))
<break/>
grid = (12, 4)
<break/>
<italic># Show the distribution for key score terms</italic>
<break/>
axs = 
<bold>rs.plot.multiple_distributions</bold>
(df, fig, grid, values = scores, rowspan = 3,
<break/>
labels = scorename, x = ‘binder_state’, order = experiments, showfliers = False)
</td></tr><tr><td><italic># Sequence score for a selected decoys with standard-matrix weights</italic><break/>
ax = plt.subplot2grid(grid, (3, 0), fig = fig, colspan = 4, rowspan = 4)
<break/>qr = df[df[‘binder_state’] == ‘no_target’].sort_values(‘score’).iloc[0]<break/>
<bold>rs.plot.per_residue_matrix_score_plot</bold>
(
<italic>qr</italic>
, ‘B’, ax, ‘BLOSUM62’,
add_alignment = False, color = 0)
<break/>qr = df[df[‘binder_state’] == ‘no_pack’].sort_values(‘score’).iloc[0]<break/>
<bold>rs.plot.per_residue_matrix_score_plot</bold>
(qr, ‘B’, ax, ‘BLOSUM62’,
add_alignment = False, color = 2,
<break/>
selections = [(‘43–64’, ‘red’)])
<break/>
<italic># Small functions help edit the plot display</italic>
<break/>
<bold>rs.utils.add_top_title</bold>
(ax, ‘no_target (blue) - pack (green)’)
</td></tr><tr><td><italic># Evaluate the variability of residue types in the binding region</italic><break/>
ax = plt.subplot2grid(grid, (7, 0), fig = fig, colspan = 2, rowspan = 4)
<break/>qr = df[df[‘binder_state’] == ‘no_target’]<break/>
<bold>rs.plot.sequence_frequency_plot</bold>
(qr, ‘B’, ax, key_residues = ‘43–64’, cbar = False,
clean_unused = 0.1, xrotation = 90)
<break/>
<bold>rs.utils.add_top_title</bold>
(ax, ‘no_target’)
<break/>
ax = plt.subplot2grid(grid, (7, 2), fig = fig, colspan = 2, rowspan = 4)
<break/>
ax_cbar = plt.subplot2grid(grid, (11, 0), fig = fig, colspan = 4)
<break/>
<bold>rs.plot.sequence_frequency_plot</bold>
(df[df[‘binder_state’] == ‘pack’], ‘B’, ax,
key_residues = ‘43–64’,                                                                                                 cbar_ax = ax_cbar,
clean_unused = 0.1, xrotation = 90)
<break/>
<bold>rs.utils.add_top_title</bold>
(ax, ‘pack’)
</td></tr><tr><td>
plt.tight_layout()
<break/>
plt.savefig(‘BMC_Fig5.png’, dpi = 300)
</td></tr></tbody></table><table-wrap-foot><p>The code shows how to join data from multiple Rosetta experiments to assess the key difference between four design populations in terms of different scoring metrics and sequence recovery. Code comments are presented in italics while functions from the rstoolbox are highlighted in bold. Styling commands are skipped to facilitate reading, but can be found in the repository’s notebook.</p></table-wrap-foot></table-wrap></p>
    </sec>
  </sec>
  <sec id="Sec8">
    <title>Discussion</title>
    <p id="Par23">The analysis of protein structures is an important approach to enable the understanding of fundamental biological processes, as well as, to guide design endeavours where one can alter and improve the activity and stability of newly engineered proteins for a number of important applications. In the age of massive datasets, structural data is also quickly growing both through innovative experimental approaches and more powerful computational tools. To deal with fast-growing amounts of structural data, new analysis tools accessible to users with beginner-level coding experience are urgently needed. Such tools are also enabling for applications in CPD, where large amounts of structural and sequence data are routinely generated. Here, we describe and exemplify the usage of rstoolbox to analyse CPD data illustrating how these tools can be used to distil large structural datasets and produce intuitive graphical representations.</p>
    <p id="Par24">CPD approaches are becoming more popular and achieving important milestones in generating proteins with novel functions [<xref ref-type="bibr" rid="CR1">1</xref>]. However, CPD pipelines remain technically challenging with multiple design and selection stages which are different for every design problem and thus often require user intervention. Within the applications of rstoolbox, several functionalities can aid in this process, by providing an easy programmatic interface to perform selections, comparisons with native proteins, graphical representations and informing follow-up rounds of design in iterative, multi-step protocols. The tools presented here were devised for Rosetta CPD calculations, nevertheless the table-like data structure used allows for the easy creation of parsers for other protein modelling and design tools. This is especially relevant in other modelling protocols that require large sampling such as protein docking [<xref ref-type="bibr" rid="CR33">33</xref>]. Importantly, rstoolbox can also be useful for structural bioinformatics and the analysis of structural features which have become more enlightening with the growth of different structural databases (e.g. PDB [<xref ref-type="bibr" rid="CR34">34</xref>], SCOP [<xref ref-type="bibr" rid="CR35">35</xref>], CATH [<xref ref-type="bibr" rid="CR31">31</xref>]).</p>
  </sec>
  <sec id="Sec9">
    <title>Conclusion</title>
    <p id="Par25">Here, we present the rstoolbox, a Python library for the analysis of large-scale structural data tailored for CPD applications and adapted to a wide variety of user expertise. We endowed rstoolbox with an extensive documentation and a continuous integration setup to ensure code stability. Thus, rstoolbox can be accessed and expanded by users with beginner’s level programming experience guaranteeing backward compatibility. The inclusion of rstoolbox in design, protocol development and structural bioinformatics pipelines will aid in the comprehension of the human-guided decisions and actions taken during the processing of large structural datasets, helping to ensure their reproducibility.</p>
  </sec>
  <sec id="Sec10">
    <title>Availability and requirements</title>
    <p id="Par26">Project name: rstoolbox.</p>
    <p id="Par27">Project home page: <ext-link ext-link-type="uri" xlink:href="https://lpdi-epfl.github.io/rstoolbox">https://lpdi-epfl.github.io/rstoolbox</ext-link></p>
    <p id="Par28">Operating system(s): Tested on Linux and macOS.</p>
    <p id="Par29">Programming language: Python.</p>
    <p id="Par30">Other requirements: python2.7 or python3.4+. Non-standard Python libraries required are automatically installed during setup with pip.</p>
    <p id="Par31">License: MIT.</p>
    <p id="Par32">Any restrictions to use by non-academics: None.</p>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>CPD</term>
        <def>
          <p id="Par4">Computational protein design</p>
        </def>
      </def-item>
      <def-item>
        <term>FunFolDes</term>
        <def>
          <p id="Par5">Rosetta functional folding and design</p>
        </def>
      </def-item>
      <def-item>
        <term>RMSD</term>
        <def>
          <p id="Par6">Root Mean square deviation</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <ack>
    <title>Acknowledgements</title>
    <p>We would like to thank all the members of the LPDI who have acted as beta-testers of the code, reporting bugs and suggesting new features.</p>
    <sec id="FPar1">
      <title>Funding</title>
      <p id="Par33">JB is sponsored by an EPFL-Fellows grant funded by an H2020 MSC action. FS is funded by the Swiss Systemsx.ch initiative. BEC is a grantee from the ERC [starting grant – 716058], the SNSF and the Biltema Foundation. The funding bodies played no role in the design of the study, analysis, interpretation of data or in writing the manuscript.</p>
    </sec>
    <sec id="FPar2" sec-type="data-availability">
      <title>Availability of data and materials</title>
      <p id="Par34">All the examples presented in this work including a basic structural bioinformatics application, can be reproduced following the two IPython notebooks present at <ext-link ext-link-type="uri" xlink:href="https://mybinder.org/v2/gh/lpdi-epfl/rstoolbox/51ccd51?filepath=notebook">https://mybinder.org/v2/gh/lpdi-epfl/rstoolbox/51ccd51?filepath=notebook</ext-link></p>
      <p id="Par35">The rstoolbox can be directly installed through PyPI and the source code is freely available at <ext-link ext-link-type="uri" xlink:href="https://github.com/lpdi-epfl/rstoolbox">https://github.com/lpdi-epfl/rstoolbox</ext-link>, with a full documentation available at <ext-link ext-link-type="uri" xlink:href="https://lpdi-epfl.github.io/rstoolbox">https://lpdi-epfl.github.io/rstoolbox</ext-link>. All requirements for the basic workings of the library are obtained via PyPI.</p>
    </sec>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors’ contributions</title>
    <p>JB, ZH, FS and AS contributed to the code. JB and BEC devised the examples and wrote the manuscript. All authors read, contributed and approved the final version of the manuscript.</p>
  </notes>
  <notes notes-type="COI-statement">
    <sec id="FPar3">
      <title>Ethics approval and consent to participate</title>
      <p>Not applicable.</p>
    </sec>
    <sec id="FPar4">
      <title>Consent for publication</title>
      <p>Not applicable.</p>
    </sec>
    <sec id="FPar5">
      <title>Competing interests</title>
      <p>The authors’ declare that they have no competing interests.</p>
    </sec>
    <sec id="FPar6">
      <title>Publisher’s Note</title>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </sec>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gainza-Cirauqui</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Correia</surname>
            <given-names>BE</given-names>
          </name>
        </person-group>
        <article-title>Computational protein design-the next generation tool to expand synthetic biology applications</article-title>
        <source>Curr Opin Biotechnol</source>
        <year>2018</year>
        <volume>52</volume>
        <fpage>145</fpage>
        <lpage>152</lpage>
        <pub-id pub-id-type="doi">10.1016/j.copbio.2018.04.001</pub-id>
        <pub-id pub-id-type="pmid">29729544</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Taylor</surname>
            <given-names>WR</given-names>
          </name>
          <name>
            <surname>Chelliah</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Hollup</surname>
            <given-names>SM</given-names>
          </name>
          <name>
            <surname>MacDonald</surname>
            <given-names>JT</given-names>
          </name>
          <name>
            <surname>Jonassen</surname>
            <given-names>I</given-names>
          </name>
        </person-group>
        <article-title>Probing the "dark matter" of protein fold space</article-title>
        <source>Structure.</source>
        <year>2009</year>
        <volume>17</volume>
        <issue>9</issue>
        <fpage>1244</fpage>
        <lpage>1252</lpage>
        <pub-id pub-id-type="doi">10.1016/j.str.2009.07.012</pub-id>
        <pub-id pub-id-type="pmid">19748345</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pierce</surname>
            <given-names>NA</given-names>
          </name>
          <name>
            <surname>Winfree</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <article-title>Protein design is NP-hard</article-title>
        <source>Protein Eng</source>
        <year>2002</year>
        <volume>15</volume>
        <issue>10</issue>
        <fpage>779</fpage>
        <lpage>782</lpage>
        <pub-id pub-id-type="doi">10.1093/protein/15.10.779</pub-id>
        <pub-id pub-id-type="pmid">12468711</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gainza</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Roberts</surname>
            <given-names>KE</given-names>
          </name>
          <name>
            <surname>Georgiev</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Lilien</surname>
            <given-names>RH</given-names>
          </name>
          <name>
            <surname>Keedy</surname>
            <given-names>DA</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>CY</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>OSPREY: protein design with ensembles, flexibility, and provable algorithms</article-title>
        <source>Methods Enzymol</source>
        <year>2013</year>
        <volume>523</volume>
        <fpage>87</fpage>
        <lpage>107</lpage>
        <pub-id pub-id-type="doi">10.1016/B978-0-12-394292-0.00005-9</pub-id>
        <pub-id pub-id-type="pmid">23422427</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chen</surname>
            <given-names>CY</given-names>
          </name>
          <name>
            <surname>Georgiev</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Anderson</surname>
            <given-names>AC</given-names>
          </name>
          <name>
            <surname>Donald</surname>
            <given-names>BR</given-names>
          </name>
        </person-group>
        <article-title>Computational structure-based redesign of enzyme activity</article-title>
        <source>Proc Natl Acad Sci U S A</source>
        <year>2009</year>
        <volume>106</volume>
        <issue>10</issue>
        <fpage>3764</fpage>
        <lpage>3769</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.0900266106</pub-id>
        <pub-id pub-id-type="pmid">19228942</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Frey</surname>
            <given-names>KM</given-names>
          </name>
          <name>
            <surname>Georgiev</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Donald</surname>
            <given-names>BR</given-names>
          </name>
          <name>
            <surname>Anderson</surname>
            <given-names>AC</given-names>
          </name>
        </person-group>
        <article-title>Predicting resistance mutations using protein design algorithms</article-title>
        <source>Proc Natl Acad Sci U S A</source>
        <year>2010</year>
        <volume>107</volume>
        <issue>31</issue>
        <fpage>13707</fpage>
        <lpage>13712</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.1002162107</pub-id>
        <pub-id pub-id-type="pmid">20643959</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bolon</surname>
            <given-names>DN</given-names>
          </name>
          <name>
            <surname>Mayo</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Enzyme-like proteins by computational design</article-title>
        <source>Proc Natl Acad Sci U S A</source>
        <year>2001</year>
        <volume>98</volume>
        <issue>25</issue>
        <fpage>14274</fpage>
        <lpage>14279</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.251555398</pub-id>
        <pub-id pub-id-type="pmid">11724958</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dahiyat</surname>
            <given-names>BI</given-names>
          </name>
          <name>
            <surname>Mayo</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>De novo protein design: fully automated sequence selection</article-title>
        <source>Science.</source>
        <year>1997</year>
        <volume>278</volume>
        <issue>5335</issue>
        <fpage>82</fpage>
        <lpage>87</lpage>
        <pub-id pub-id-type="doi">10.1126/science.278.5335.82</pub-id>
        <pub-id pub-id-type="pmid">9311930</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Shimaoka</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Shifman</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Jing</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Takagi</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Mayo</surname>
            <given-names>SL</given-names>
          </name>
          <name>
            <surname>Springer</surname>
            <given-names>TA</given-names>
          </name>
        </person-group>
        <article-title>Computational design of an integrin I domain stabilized in the open high affinity conformation</article-title>
        <source>Nat Struct Biol</source>
        <year>2000</year>
        <volume>7</volume>
        <issue>8</issue>
        <fpage>674</fpage>
        <lpage>678</lpage>
        <pub-id pub-id-type="doi">10.1038/77978</pub-id>
        <pub-id pub-id-type="pmid">10932253</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Scheraga</surname>
            <given-names>HA</given-names>
          </name>
        </person-group>
        <article-title>Monte Carlo-minimization approach to the multiple-minima problem in protein folding</article-title>
        <source>Proc Natl Acad Sci U S A</source>
        <year>1987</year>
        <volume>84</volume>
        <issue>19</issue>
        <fpage>6611</fpage>
        <lpage>6615</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.84.19.6611</pub-id>
        <pub-id pub-id-type="pmid">3477791</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gainza</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Nisonoff</surname>
            <given-names>HM</given-names>
          </name>
          <name>
            <surname>Donald</surname>
            <given-names>BR</given-names>
          </name>
        </person-group>
        <article-title>Algorithms for protein design</article-title>
        <source>Curr Opin Struct Biol</source>
        <year>2016</year>
        <volume>39</volume>
        <fpage>16</fpage>
        <lpage>26</lpage>
        <pub-id pub-id-type="doi">10.1016/j.sbi.2016.03.006</pub-id>
        <pub-id pub-id-type="pmid">27086078</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Alford</surname>
            <given-names>RF</given-names>
          </name>
          <name>
            <surname>Leaver-Fay</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Jeliazkov</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>O'Meara</surname>
            <given-names>MJ</given-names>
          </name>
          <name>
            <surname>DiMaio</surname>
            <given-names>FP</given-names>
          </name>
          <name>
            <surname>Park</surname>
            <given-names>H</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The Rosetta all-atom energy function for macromolecular modeling and design</article-title>
        <source>J Chem Theory Comput</source>
        <year>2017</year>
        <volume>13</volume>
        <issue>6</issue>
        <fpage>3031</fpage>
        <lpage>3048</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jctc.7b00125</pub-id>
        <pub-id pub-id-type="pmid">28430426</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Simons</surname>
            <given-names>KT</given-names>
          </name>
          <name>
            <surname>Bonneau</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Ruczinski</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Baker</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>Ab initio protein structure prediction of CASP III targets using ROSETTA</article-title>
        <source>Proteins.</source>
        <year>1999</year>
        <volume>Suppl 3</volume>
        <fpage>171</fpage>
        <lpage>176</lpage>
        <pub-id pub-id-type="doi">10.1002/(SICI)1097-0134(1999)37:3+&lt;171::AID-PROT21&gt;3.0.CO;2-Z</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kim</surname>
            <given-names>DE</given-names>
          </name>
          <name>
            <surname>Blum</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Bradley</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Baker</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>Sampling bottlenecks in de novo protein structure prediction</article-title>
        <source>J Mol Biol</source>
        <year>2009</year>
        <volume>393</volume>
        <issue>1</issue>
        <fpage>249</fpage>
        <lpage>260</lpage>
        <pub-id pub-id-type="doi">10.1016/j.jmb.2009.07.063</pub-id>
        <pub-id pub-id-type="pmid">19646450</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kuhlman</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Baker</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>Native protein sequences are close to optimal for their structures</article-title>
        <source>Proc Natl Acad Sci U S A</source>
        <year>2000</year>
        <volume>97</volume>
        <issue>19</issue>
        <fpage>10383</fpage>
        <lpage>10388</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.97.19.10383</pub-id>
        <pub-id pub-id-type="pmid">10984534</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <mixed-citation publication-type="other">Rosetta Commons. Rosetta Tools: <ext-link ext-link-type="uri" xlink:href="https://www.rosettacommons.org/docs/latest/application_documentation/tools/Tools">https://www.rosettacommons.org/docs/latest/application_documentation/tools/Tools</ext-link>. 2018.</mixed-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pérez</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Granger</surname>
            <given-names>EB</given-names>
          </name>
        </person-group>
        <article-title>IPython: a system for interactive scientific computing</article-title>
        <source>Comput Sci Eng</source>
        <year>2007</year>
        <volume>9</volume>
        <issue>3</issue>
        <fpage>21</fpage>
        <lpage>29</lpage>
        <pub-id pub-id-type="doi">10.1109/MCSE.2007.53</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>McKinney</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <article-title>Data structures for statistical computing in Python</article-title>
        <source>Proceedings of the 9th Python in science conference</source>
        <year>2010</year>
        <fpage>51</fpage>
        <lpage>56</lpage>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Schneider</surname>
            <given-names>TD</given-names>
          </name>
          <name>
            <surname>Stephens</surname>
            <given-names>RM</given-names>
          </name>
        </person-group>
        <article-title>Sequence logos: a new way to display consensus sequences</article-title>
        <source>Nucleic Acids Res</source>
        <year>1990</year>
        <volume>18</volume>
        <issue>20</issue>
        <fpage>6097</fpage>
        <lpage>6100</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/18.20.6097</pub-id>
        <pub-id pub-id-type="pmid">2172928</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ramachandran</surname>
            <given-names>GN</given-names>
          </name>
          <name>
            <surname>Ramakrishnan</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Sasisekharan</surname>
            <given-names>V</given-names>
          </name>
        </person-group>
        <article-title>Stereochemistry of polypeptide chain configurations</article-title>
        <source>J Mol Biol</source>
        <year>1963</year>
        <volume>7</volume>
        <fpage>95</fpage>
        <lpage>99</lpage>
        <pub-id pub-id-type="doi">10.1016/S0022-2836(63)80023-6</pub-id>
        <pub-id pub-id-type="pmid">13990617</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <mixed-citation publication-type="other">Thompson JD, Gibson TJ, Higgins DG. Multiple sequence alignment using ClustalW and ClustalX. Curr Protoc Bioinformatics. 2002;00(1):2.3.1-2.3.22. Chapter 2:Unit 2 3.</mixed-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Potter</surname>
            <given-names>SC</given-names>
          </name>
          <name>
            <surname>Luciani</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Eddy</surname>
            <given-names>SR</given-names>
          </name>
          <name>
            <surname>Park</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Lopez</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Finn</surname>
            <given-names>RD</given-names>
          </name>
        </person-group>
        <article-title>HMMER web server: 2018 update</article-title>
        <source>Nucleic Acids Res</source>
        <year>2018</year>
        <volume>46</volume>
        <issue>W1</issue>
        <fpage>W200</fpage>
        <lpage>W2W4</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gky448</pub-id>
        <pub-id pub-id-type="pmid">29905871</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hunter</surname>
            <given-names>JD</given-names>
          </name>
        </person-group>
        <article-title>Matplotlib: a 2D graphics environment</article-title>
        <source>Comput Sci Eng</source>
        <year>2007</year>
        <volume>9</volume>
        <issue>3</issue>
        <fpage>90</fpage>
        <lpage>95</lpage>
        <pub-id pub-id-type="doi">10.1109/MCSE.2007.55</pub-id>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <mixed-citation publication-type="other">Michael Waskom OB, Drew O'Kane, Paul Hobson, Joel Ostblom, Saulius Lukauskas, Adel Qalieh. mwaskom/seaborn: v0.9.0 Zenodo. 2018.</mixed-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Stein</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Kortemme</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>Improvements to robotics-inspired conformational sampling in rosetta</article-title>
        <source>PLoS One</source>
        <year>2013</year>
        <volume>8</volume>
        <issue>5</issue>
        <fpage>e63090</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0063090</pub-id>
        <pub-id pub-id-type="pmid">23704889</pub-id>
      </element-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kuhlman</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Dantas</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Ireton</surname>
            <given-names>GC</given-names>
          </name>
          <name>
            <surname>Varani</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Stoddard</surname>
            <given-names>BL</given-names>
          </name>
          <name>
            <surname>Baker</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>Design of a novel globular protein fold with atomic-level accuracy</article-title>
        <source>Science.</source>
        <year>2003</year>
        <volume>302</volume>
        <issue>5649</issue>
        <fpage>1364</fpage>
        <lpage>1368</lpage>
        <pub-id pub-id-type="doi">10.1126/science.1089427</pub-id>
        <pub-id pub-id-type="pmid">14631033</pub-id>
      </element-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Marcos</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Basanta</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Chidyausiku</surname>
            <given-names>TM</given-names>
          </name>
          <name>
            <surname>Tang</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Oberdorfer</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Liu</surname>
            <given-names>G</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Principles for designing proteins with cavities formed by curved beta sheets</article-title>
        <source>Science.</source>
        <year>2017</year>
        <volume>355</volume>
        <issue>6321</issue>
        <fpage>201</fpage>
        <lpage>206</lpage>
        <pub-id pub-id-type="doi">10.1126/science.aah7389</pub-id>
        <pub-id pub-id-type="pmid">28082595</pub-id>
      </element-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bonet</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Wehrle</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Schriever</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Yang</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Billet</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Sesterhenn</surname>
            <given-names>F</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Rosetta FunFolDes - a general framework for the computational design of functional proteins</article-title>
        <source>PLoS Comput Biol</source>
        <year>2018</year>
        <volume>14</volume>
        <issue>11</issue>
        <fpage>e1006623</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1006623</pub-id>
        <pub-id pub-id-type="pmid">30452434</pub-id>
      </element-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>McLellan</surname>
            <given-names>JS</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Kim</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Yang</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Graham</surname>
            <given-names>BS</given-names>
          </name>
          <name>
            <surname>Kwong</surname>
            <given-names>PD</given-names>
          </name>
        </person-group>
        <article-title>Structural basis of respiratory syncytial virus neutralization by motavizumab</article-title>
        <source>Nat Struct Mol Biol</source>
        <year>2010</year>
        <volume>17</volume>
        <issue>2</issue>
        <fpage>248</fpage>
        <lpage>250</lpage>
        <pub-id pub-id-type="doi">10.1038/nsmb.1723</pub-id>
        <pub-id pub-id-type="pmid">20098425</pub-id>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lartigue</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Campanacci</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Roussel</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Larsson</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Jones</surname>
            <given-names>TA</given-names>
          </name>
          <name>
            <surname>Tegoni</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>X-ray structure and ligand binding study of a moth chemosensory protein</article-title>
        <source>J Biol Chem</source>
        <year>2002</year>
        <volume>277</volume>
        <issue>35</issue>
        <fpage>32094</fpage>
        <lpage>32098</lpage>
        <pub-id pub-id-type="doi">10.1074/jbc.M204371200</pub-id>
        <pub-id pub-id-type="pmid">12068017</pub-id>
      </element-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <mixed-citation publication-type="other">Sillitoe I, Dawson N, Lewis TE, Das S, Lees JG, Ashford P, et al. CATH: expanding the horizons of structure-based functional annotations for genome sequences. Nucleic Acids Res. 2018;47(D1):D280–4.</mixed-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Procko</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Berguig</surname>
            <given-names>GY</given-names>
          </name>
          <name>
            <surname>Shen</surname>
            <given-names>BW</given-names>
          </name>
          <name>
            <surname>Song</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Frayo</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Convertine</surname>
            <given-names>AJ</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A computationally designed inhibitor of an Epstein-Barr viral Bcl-2 protein induces apoptosis in infected cells</article-title>
        <source>Cell.</source>
        <year>2014</year>
        <volume>157</volume>
        <issue>7</issue>
        <fpage>1644</fpage>
        <lpage>1656</lpage>
        <pub-id pub-id-type="doi">10.1016/j.cell.2014.04.034</pub-id>
        <pub-id pub-id-type="pmid">24949974</pub-id>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Coleman</surname>
            <given-names>RG</given-names>
          </name>
          <name>
            <surname>Carchia</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Sterling</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Irwin</surname>
            <given-names>JJ</given-names>
          </name>
          <name>
            <surname>Shoichet</surname>
            <given-names>BK</given-names>
          </name>
        </person-group>
        <article-title>Ligand pose and orientational sampling in molecular docking</article-title>
        <source>PLoS One</source>
        <year>2013</year>
        <volume>8</volume>
        <issue>10</issue>
        <fpage>e75992</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0075992</pub-id>
        <pub-id pub-id-type="pmid">24098414</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Berman</surname>
            <given-names>HM</given-names>
          </name>
          <name>
            <surname>Westbrook</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Feng</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Gilliland</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Bhat</surname>
            <given-names>TN</given-names>
          </name>
          <name>
            <surname>Weissig</surname>
            <given-names>H</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The protein data Bank</article-title>
        <source>Nucleic Acids Res</source>
        <year>2000</year>
        <volume>28</volume>
        <issue>1</issue>
        <fpage>235</fpage>
        <lpage>242</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/28.1.235</pub-id>
        <pub-id pub-id-type="pmid">10592235</pub-id>
      </element-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Andreeva</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Howorth</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Chandonia</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Brenner</surname>
            <given-names>SE</given-names>
          </name>
          <name>
            <surname>Hubbard</surname>
            <given-names>TJ</given-names>
          </name>
          <name>
            <surname>Chothia</surname>
            <given-names>C</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Data growth and its impact on the SCOP database: new developments</article-title>
        <source>Nucleic Acids Res</source>
        <year>2008</year>
        <volume>36</volume>
        <issue>Database issue</issue>
        <fpage>D419</fpage>
        <lpage>D425</lpage>
        <?supplied-pmid 18000004?>
        <pub-id pub-id-type="pmid">18000004</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

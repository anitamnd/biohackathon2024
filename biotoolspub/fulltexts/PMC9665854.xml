<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">9665854</article-id>
    <article-id pub-id-type="pmid">36193991</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btac663</article-id>
    <article-id pub-id-type="publisher-id">btac663</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Applications Note</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Gene Expression</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>wenda_gpu: fast domain adaptation for genomic data</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Hippen</surname>
          <given-names>Ariel A</given-names>
        </name>
        <aff><institution>Department of Systems Pharmacology and Translational Therapeutics, Perelman School of Medicine, University of Pennsylvania</institution>, Philadelphia, PA 19104, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Crawford</surname>
          <given-names>Jake</given-names>
        </name>
        <aff><institution>Department of Systems Pharmacology and Translational Therapeutics, Perelman School of Medicine, University of Pennsylvania</institution>, Philadelphia, PA 19104, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Gardner</surname>
          <given-names>Jacob R</given-names>
        </name>
        <aff><institution>Department of Computer and Information Science, University of Pennsylvania</institution>, Philadelphia, PA 19104, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-8713-9213</contrib-id>
        <name>
          <surname>Greene</surname>
          <given-names>Casey S</given-names>
        </name>
        <aff><institution>Department of Biomedical Informatics, University of Colorado Anschutz Medical Campus</institution>, Aurora, CO 80045, <country country="US">USA</country></aff>
        <xref rid="btac663-cor1" ref-type="corresp"/>
        <!--casey.s.greene@cuanschutz.edu-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Boeva</surname>
          <given-names>Valentina</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="btac663-cor1">To whom correspondence should be addressed. Email: <email>casey.s.greene@cuanschutz.edu</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <day>15</day>
      <month>11</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2022-10-04">
      <day>04</day>
      <month>10</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>04</day>
      <month>10</month>
      <year>2022</year>
    </pub-date>
    <volume>38</volume>
    <issue>22</issue>
    <fpage>5129</fpage>
    <lpage>5130</lpage>
    <history>
      <date date-type="received">
        <day>01</day>
        <month>5</month>
        <year>2022</year>
      </date>
      <date date-type="rev-recd">
        <day>23</day>
        <month>8</month>
        <year>2022</year>
      </date>
      <date date-type="editorial-decision">
        <day>25</day>
        <month>9</month>
        <year>2022</year>
      </date>
      <date date-type="accepted">
        <day>03</day>
        <month>10</month>
        <year>2022</year>
      </date>
      <date date-type="corrected-typeset">
        <day>21</day>
        <month>10</month>
        <year>2022</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2022. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2022</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btac663.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>Domain adaptation allows for the development of predictive models even in cases with limited sample data. Weighted elastic net domain adaptation specifically leverages features of genomic data to maximize transferability but the method is too computationally demanding to apply to many genome-sized datasets.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>We developed wenda_gpu, which uses GPyTorch to train models on genomic data within hours on a single GPU-enabled machine. We show that wenda_gpu returns comparable results to the original wenda implementation, and that it can be used for improved prediction of cancer mutation status on small sample sizes than regular elastic net.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p>wenda_gpu is available on GitHub at <ext-link xlink:href="https://github.com/greenelab/wenda_gpu/" ext-link-type="uri">https://github.com/greenelab/wenda_gpu/</ext-link>.</p>
      </sec>
      <sec id="s5">
        <title>Supplementary information</title>
        <p><xref rid="sup1" ref-type="supplementary-material">Supplementary data</xref> are available at <italic toggle="yes">Bioinformatics</italic> online.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>National Cancer Institute</institution>
            <institution-id institution-id-type="DOI">10.13039/100000054</institution-id>
          </institution-wrap>
        </funding-source>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>National Institutes of Health</institution>
            <institution-id institution-id-type="DOI">10.13039/100000002</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>R01CA237170</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>NIH’s National Human Genome Research Institute</institution>
          </institution-wrap>
        </funding-source>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>NHGRI</institution>
            <institution-id institution-id-type="DOI">10.13039/100000051</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>R01HG010067</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="2"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Prediction models generated from genomic data are widely used in bioinformatics, including calling mutation status, identifying disease subtype and predicting cancer prognosis. A fundamental assumption in supervised machine learning is that the data to be classified is derived from the same distribution as the data used to train the classifier. Prediction in a dataset that does not meet this assumption is prone to problematic extrapolation. However, challenges in acquisition of biological data often mean few or no labeled examples are available for the distribution of interest. For instance, sample sizes may be insufficient to train on rare cancer types, or technological limitations may hinder label generation, for instance a lack of simultaneous profiling of gene expression and mutation information in single-cell data. For such situations where labeled target data is limited, the field of domain adaptation and transfer learning has established principled ways to develop predictors for the data of interest (target data) using labeled data from a similar but distinct distribution (source data).</p>
    <p>One recent method, weighted elastic net domain adaptation or wenda (<xref rid="btac663-B3" ref-type="bibr">Handl <italic toggle="yes">et al.</italic>, 2019</xref>), leverages the complex interactions between biological features (such as genes or methylation sites) to optimize a model’s predictive power on both source and target datasets. It learns the dependency structure between features (driven by diverse biological relationships such as co-localization on the chromosome or membership in similar pathways) and prioritizes those that are similar across source and target distributions. This has previously been shown to significantly improve accuracy on predictions from a mismatched distribution, overcoming the limitations of traditional supervised models. Unfortunately, to learn this complex dependency structure requires training a Gaussian process model for each feature separately, which is computationally expensive and resists parallelization, making it infeasible for researchers to use at genome-scale.</p>
    <p>To address this limitation, we implemented a modified form of the underlying algorithm, called wenda_gpu, which allows for fast, efficient model training for genome-scale datasets on a single GPU-enabled computer.</p>
  </sec>
  <sec>
    <title>2 Results</title>
    <sec>
      <title>2.1 Implementing wenda with gpytorch</title>
      <p>Weighted elastic net domain adaptation has three major steps. First, it takes each feature <italic toggle="yes">f</italic> in the source distribution and generates a Gaussian process model to predict the expression level of that feature using all other features (<inline-formula id="IE1"><mml:math id="IM1" display="inline" overflow="scroll"><mml:mrow><mml:mo>¬</mml:mo><mml:mi>f</mml:mi></mml:mrow></mml:math></inline-formula>). By using a Bayesian model, wenda returns a probability distribution of values <inline-formula id="IE2"><mml:math id="IM2" display="inline" overflow="scroll"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi mathvariant="italic">source</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:mo>¬</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi mathvariant="italic">source</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> that can be used for probabilistic prediction. Thus, wenda uses this distribution to calculate the probability of each target sample’s observed value of <italic toggle="yes">f</italic> given the other target values, <inline-formula id="IE3"><mml:math id="IM3" display="inline" overflow="scroll"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi mathvariant="italic">target</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:mo>¬</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi mathvariant="italic">target</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. A high probability indicates that the relationship between <italic toggle="yes">f</italic> and other key features is similar between source and target distributions and suggests that <italic toggle="yes">f</italic> will be useful for prediction in the target distribution. Finally, these probabilities are averaged over all target distribution samples and transformed into a weight for each feature, which is included in the penalization term for the ultimate elastic net predictor (<xref rid="btac663-B3" ref-type="bibr">Handl <italic toggle="yes">et al.</italic>, 2019</xref>). This first step, generating a Gaussian process model for each feature, is highly time-intensive. We implemented the model training step using GPyTorch, which provides efficient and modular Gaussian process inference (<xref rid="btac663-B2" ref-type="bibr">Gardner <italic toggle="yes">et al.</italic>, 2018</xref>).</p>
    </sec>
    <sec>
      <title>2.2 wenda_gpu implementation reduces runtimes</title>
      <p>To assess the time cost of native wenda, we ran on the data used in the original paper. The authors of the original paper reported that training models for 12 980 features across 1866 samples took 51 h on 10 CPUs (<xref rid="btac663-B3" ref-type="bibr">Handl <italic toggle="yes">et al.</italic>, 2019</xref>). When we ran native wenda on a computer with 6 CPUs, we allowed the program to run for 3 days, during which it trained 1309/12 980 models before becoming unresponsive. Alternatively, when we ran wenda_gpu on the same computer, equipped with a Titan Xp GPU, all models trained in ∼5 h. To more precisely quantify the speed increase, we ran native wenda and wenda_gpu on several smaller datasets of various sizes (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S1A and Table S1</xref>). For instance, on small datasets of 500 features, all models trained in 836 s on native wenda and 116 s on wenda_gpu (average across three replicates), an approximately 7-fold decrease in runtime. On a slightly larger dataset with 2000 features, native wenda trained all models in 6851 s as opposed to 554 s on wenda_gpu, a 12-fold speedup. Reimplementing the wenda algorithm in GPyTorch offered a sizeable increase in speed alone, independent of hardware changes: when the wenda_gpu code was run using a CPU, the 500-feature dataset trained in 471 s (1.7× faster than native wenda) and the 2000-feature dataset trained in 3130 s (2.1× faster than native wenda). Using wenda_gpu, completing the whole prediction task on genome-wide datasets with tens of thousands of features is feasible in a single day on a single GPU-enabled computer.</p>
    </sec>
    <sec>
      <title>2.3 wenda_gpu replicates original wenda results</title>
      <p>The original paper’s prediction task was to predict a person’s age from tissue methylation data. Both source and target datasets contained multiple tissue types, but one tissue type (cerebellum) was present only in the target dataset. To confirm that wenda_gpu returned similar results in the ultimate classification task, we compared results from the elastic net classifiers from wenda_gpu and native wenda. The age predictions between the two methods were highly correlated (median <italic toggle="yes">r</italic> = 0.977 for <italic toggle="yes">k</italic> = 6) (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S1B</xref>). Consistent with the original wenda manuscript, we found that a classifier trained with weighted elastic net domain adaptation was more accurate on the tissue type missing from the source data than was a regular elastic net (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S1C and D</xref>). The overall correlation between the wenda predictions and true ages (<italic toggle="yes">r</italic> = 0.926) was higher than the correlation between elastic net predictions and true ages (<italic toggle="yes">r</italic> = 0.908). The correlation between wenda_gpu predictions and true ages was also nominally higher than the correlation between wenda_orig predictions and true ages (<italic toggle="yes">r</italic> = 0.926 versus 0.924).</p>
    </sec>
    <sec>
      <title>2.4 wenda_gpu enables domain adaptation in new contexts</title>
      <p>With the improved speed of wenda_gpu, we were able to assess the utility of weighted elastic net domain adaptation in new contexts. One example use case is building classifiers on transcriptomic data to identify mutations in common cancer driver genes, which has been shown to be possible in a pan-cancer context (<xref rid="btac663-B4" ref-type="bibr">Knijnenburg <italic toggle="yes">et al.</italic>, 2018</xref>; <xref rid="btac663-B6" ref-type="bibr">Way <italic toggle="yes">et al.</italic>, 2018</xref>). Mutation classifiers trained on transcriptomic data from one cancer type can even be predictive of mutation status in other cancer types (<xref rid="btac663-B1" ref-type="bibr">Crawford <italic toggle="yes">et al.</italic>, 2022</xref>). We postulated that wenda would allow prediction models trained on one cancer type to perform better on another cancer type, opening the possibility of these models being used on rare cancers for which sample sizes are limited. To explore this, we trained classifiers to identify mutations in TP53, the most commonly mutated gene in cancer (<xref rid="btac663-B5" ref-type="bibr">Mendiratta <italic toggle="yes">et al.</italic>, 2021</xref>). We selected 16 cancer types from TCGA with sample size greater than 100 and with between 10% and 90% of samples having a TP53 loss-of-function mutation. We trained models in a pairwise, non-symmetric fashion (i.e. for each two cancer types A and B, train a model using transcription data from A as source data and B as target data, and vice versa) using wenda_gpu and a regular elastic net. We found that the models trained with wenda_gpu had equal or higher accuracy than the elastic net models in 201/240 pairs, with a pronounced improvement in some cancer type pairs. As a negative control, we also trained the same models with shuffled TP53 mutation labels. Across all cancer type pairs, models trained with wenda_gpu more consistently outperformed the negative control than did the regular elastic net models (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S1E and F</xref>).</p>
    </sec>
  </sec>
  <sec>
    <title>3 Conclusion</title>
    <p>Domain adaptation allows researchers to leverage areas with abundant data to enable machine learning methods in use cases with more limited data. Weighted elastic net domain adaptation exploits the complex biological interactions that exist between genomic features to maximize transferability to a new context. With the increase in speed afforded by wenda_gpu, researchers can apply wenda to larger datasets and experiment with more potential use cases of domain adaptation on genomic data without a significant expense of researcher time. The wenda_gpu software is available through PyPI (<ext-link xlink:href="https://pypi.org/project/wenda-gpu/" ext-link-type="uri">https://pypi.org/project/wenda-gpu/</ext-link>) and github (<ext-link xlink:href="https://github.com/greenelab/wenda_gpu/" ext-link-type="uri">https://github.com/greenelab/wenda_gpu/</ext-link>). The data underlying this article and the code used to perform all analyses therein are available at (<ext-link xlink:href="https://github.com/greenelab/wenda_gpu_paper/" ext-link-type="uri">https://github.com/greenelab/wenda_gpu_paper/</ext-link>).</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>btac663_Supplementary_Data</label>
      <media xlink:href="btac663_supplementary_data.zip">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack id="ack1">
    <title>Acknowledgements</title>
    <p>The authors would like to thank Lisa Eisenberg for consulting on a new implementation of wenda, as well as providing methylation data and intermediate model confidence scores. Thanks also to Ben Heil, Alexandra Lee and David Nicholson for code review.</p>
    <sec>
      <title>Funding</title>
      <p>A.A.H. and C.S.G. were supported by the National Cancer Institute (NCI) from the National Institutes of Health (NIH) [R01CA237170]. J.C. and C.S.G. were also supported by the NIH’s National Human Genome Research Institute (NHGRI) [R01HG010067]. The funders had no role in study design, data collection and analysis, decision to publish or preparation of the manuscript.</p>
      <p><italic toggle="yes">Conflict of Interest</italic>: none declared.</p>
    </sec>
  </ack>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btac663-B1">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Crawford</surname><given-names>J.</given-names></string-name></person-group><etal>et al</etal> (<year>2022</year>) Widespread redundancy in -omics profiles of cancer mutation states. <italic toggle="yes">Genome Biology</italic>, <bold>23</bold>, 137.</mixed-citation>
    </ref>
    <ref id="btac663-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gardner</surname><given-names>J.</given-names></string-name></person-group><etal>et al</etal> (<year>2018</year>) <article-title>GPyTorch: blackbox matrix-matrix Gaussian process inference with GPU acceleration</article-title>. <source>Adv. Neural Inf. Process. Syst</source>., <volume>31</volume>.</mixed-citation>
    </ref>
    <ref id="btac663-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Handl</surname><given-names>L.</given-names></string-name></person-group><etal>et al</etal> (<year>2019</year>) <article-title>Weighted elastic net for unsupervised domain adaptation with application to age prediction from DNA methylation data</article-title>. <source>Bioinformatics</source>, <volume>35</volume>, <fpage>i154</fpage>–<lpage>i163</lpage>.<pub-id pub-id-type="pmid">31510704</pub-id></mixed-citation>
    </ref>
    <ref id="btac663-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Knijnenburg</surname><given-names>T.A.</given-names></string-name></person-group><etal>et al</etal>; <collab>Cancer Genome Atlas Research Network</collab>. (<year>2018</year>) <article-title>Genomic and molecular landscape of DNA damage repair deficiency across the cancer genome atlas</article-title>. <source>Cell Rep</source>., <volume>23</volume>, <fpage>239</fpage>–<lpage>254.e6</lpage>.<pub-id pub-id-type="pmid">29617664</pub-id></mixed-citation>
    </ref>
    <ref id="btac663-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Mendiratta</surname><given-names>G.</given-names></string-name></person-group><etal>et al</etal> (<year>2021</year>) <article-title>Cancer gene mutation frequencies for the U.S. population</article-title>. <source>Nat. Commun</source>., <volume>12</volume>, <fpage>5961</fpage>.<pub-id pub-id-type="pmid">34645806</pub-id></mixed-citation>
    </ref>
    <ref id="btac663-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Way</surname><given-names>G.P.</given-names></string-name></person-group><etal>et al</etal>; <collab>Cancer Genome Atlas Research Network</collab>. (<year>2018</year>) <article-title>Machine learning detects pan-cancer Ras pathway activation in the cancer genome atlas</article-title>. <source>Cell Rep</source>., <volume>23</volume>, <fpage>172</fpage>–<lpage>180.e3</lpage>.<pub-id pub-id-type="pmid">29617658</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

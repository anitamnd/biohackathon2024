<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v2.3 20070202//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName journalpublishing.dtd?>
<?SourceDTD.Version 2.3?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-id journal-id-type="hwp">bioinfo</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">3051321</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btr015</article-id>
    <article-id pub-id-type="publisher-id">btr015</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Applications Note</subject>
        <subj-group>
          <subject>Systems Biology</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>GPU accelerated biochemical network simulation</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Zhou</surname>
          <given-names>Yanxiang</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>1</sup>
        </xref>
        <xref ref-type="author-notes" rid="FN1">
          <sup>†</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Liepe</surname>
          <given-names>Juliane</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Sheng</surname>
          <given-names>Xia</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>1</sup>
        </xref>
        <xref ref-type="aff" rid="AFF1">
          <sup>2</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Stumpf</surname>
          <given-names>Michael P. H.</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>1</sup>
        </xref>
        <xref ref-type="aff" rid="AFF1">
          <sup>2</sup>
        </xref>
        <xref ref-type="aff" rid="AFF1">
          <sup>3</sup>
        </xref>
        <xref ref-type="corresp" rid="COR1">*</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Barnes</surname>
          <given-names>Chris</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>1</sup>
        </xref>
        <xref ref-type="aff" rid="AFF1">
          <sup>2</sup>
        </xref>
        <xref ref-type="corresp" rid="COR1">*</xref>
      </contrib>
    </contrib-group>
    <aff id="AFF1"><sup>1</sup>Centre for Bioinformatics, Division of Molecular Biosciences, <sup>2</sup>Institute of Mathematical Sciences and <sup>3</sup>Centre for Integrative Systems Biology, Imperial College London, London, UK</aff>
    <author-notes>
      <corresp id="COR1">* To whom correspondence should be addressed.</corresp>
      <fn id="FN1">
        <p><sup>†</sup> Present address: Apoptosis and Proliferation Control Laboratory, Cancer Research UK, London Research Institute, London, UK.</p>
      </fn>
      <fn>
        <p>Associate Editor: Olga Troyanskaya</p>
      </fn>
    </author-notes>
    <pub-date pub-type="ppub">
      <day>15</day>
      <month>3</month>
      <year>2011</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>11</day>
      <month>1</month>
      <year>2011</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>11</day>
      <month>1</month>
      <year>2011</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the
							<pub-date pub-type="epub"/>. -->
    <volume>27</volume>
    <issue>6</issue>
    <fpage>874</fpage>
    <lpage>876</lpage>
    <history>
      <date date-type="received">
        <day>28</day>
        <month>7</month>
        <year>2010</year>
      </date>
      <date date-type="rev-recd">
        <day>10</day>
        <month>12</month>
        <year>2010</year>
      </date>
      <date date-type="accepted">
        <day>5</day>
        <month>1</month>
        <year>2011</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2011. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2011</copyright-year>
      <license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by-nc/2.0/uk/">
        <license-p><!--CREATIVE COMMONS-->This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by-nc/2.5">http://creativecommons.org/licenses/by-nc/2.5</ext-link>), which permits unrestricted non-commercial use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <abstract>
      <p><bold>Motivation:</bold> Mathematical modelling is central to systems and synthetic biology. Using simulations to calculate statistics or to explore parameter space is a common means for analysing these models and can be computationally intensive. However, in many cases, the simulations are easily parallelizable. Graphics processing units (GPUs) are capable of efficiently running highly parallel programs and outperform CPUs in terms of raw computing power. Despite their computational advantages, their adoption by the systems biology community is relatively slow, since differences in hardware architecture between GPUs and CPUs complicate the porting of existing code.</p>
      <p><bold>Results:</bold> We present a Python package, <italic>cuda-sim</italic>, that provides highly parallelized algorithms for the repeated simulation of biochemical network models on NVIDIA CUDA GPUs. Algorithms are implemented for the three popular types of model formalisms: the LSODA algorithm for ODE integration, the Euler–Maruyama algorithm for SDE simulation and the Gillespie algorithm for MJP simulation. No knowledge of GPU computing is required from the user. Models can be specified in SBML format or provided as CUDA code. For running a large number of simulations in parallel, up to 360-fold decrease in simulation runtime is attained when compared to single CPU implementations.</p>
      <p>
        <bold>Availability:</bold>
        <ext-link ext-link-type="uri" xlink:href="http://cuda-sim.sourceforge.net/">http://cuda-sim.sourceforge.net/</ext-link>
      </p>
      <p><bold>Contact:</bold><email>christopher.barnes@imperial.ac.uk</email>; <email>m.stumpf@imperial.ac.uk</email></p>
      <p><bold>Supplementary information:</bold><ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/cgi/content/full/btr015/DC1">Supplementary data</ext-link> are available at <italic>Bioinformatics</italic> online.</p>
    </abstract>
  </article-meta>
</front>
<body>
  <sec sec-type="intro" id="SEC1">
    <title>1 INTRODUCTION</title>
    <p>Mathematical modelling is an integral part of systems and synthetic biology. Ordinary differential equations (ODEs) are the most commonly used methodology, but due to increasing appreciation of the importance of stochasticity in biological processes, stochastic differential equations (SDEs) and Markov jump processes (MJPs) are also applied. Since most models are non-linear, they generally cannot be solved analytically and therefore require numerical treatment. Furthermore, in order to understand behaviour across high-dimensional parameter space or to perform simulation based inference (<xref ref-type="bibr" rid="B9">Liepe <italic>et al.</italic>, 2010</xref>; <xref ref-type="bibr" rid="B13">Toni <italic>et al.</italic>, 2009</xref>), a very large number of simulations is required, making analysis of even the simplest models extremely time consuming.</p>
    <p>For computationally expensive calculations, graphics processing units (GPUs) can be used. GPUs are many core, multi-threaded chips that are capable of several hundred GFLOPS (<xref ref-type="bibr" rid="B6">Kirk and Hwu, 2010</xref>). In terms of raw computing power, a single GPU in a desktop PC is comparable to a CPU cluster, but is much cheaper. However, due to their single instruction multiple data (SIMD) architecture, only highly parallelized processes can be efficiently run on GPUs. Even though platforms for general purpose GPU computing like CUDA<sup>®</sup> (Compute Unified Device Architecture) from NVIDIA<sup>®</sup> which provides a CUDA API exist, it remains difficult and time consuming to port existing algorithms that were designed for execution on CPUs. There have been developments in porting biochemical network simulators to GPUs (reviewed in <xref ref-type="bibr" rid="B2">Dematté and Prandi, 2010</xref>) but there does not currently exist a general purpose simulation tool that integrates multiple algorithms within the same interface.</p>
    <p>Here, we present a new Python package called <italic>cuda-sim</italic> which provides highly parallelized algorithms for large scale simulations of biochemical network models. It is compatible with all NVIDIA GPUs that support CUDA. Absolutely no knowledge of CUDA and GPU computing is needed for the user to access the simulation algorithms: (1) The integration of ODEs is carried out using a GPU implementation of LSODA (<xref ref-type="bibr" rid="B5">Hindmarsh, 1983</xref>), (2) SDE simulations are provided via the Euler-Maruyama algorithm (<xref ref-type="bibr" rid="B8">Kloeden and Platen, 1999</xref>) and (3) simulations from a MJP (or Master equation) are performed using the Gillespie algorithm (<xref ref-type="bibr" rid="B4">Gillespie, 1976</xref>). All functionality can be accessed via a Python interface that hides the implementation details.</p>
  </sec>
  <sec id="SEC2">
    <title>2 IMPLEMENTATION</title>
    <p>The <italic>cuda-sim</italic> package is implemented in Python using PyCUDA (<xref ref-type="bibr" rid="B7">Klöckner <italic>et al.</italic>, 2009</xref>) to access the GPU. PyCUDA acts as a wrapper for the CUDA API and provides abstractions that facilitate programming. As an additional layer between code and hardware, PyCUDA can also accommodate future changes in GPU architecture and will help ensuring that <italic>cuda-sim</italic> remains compatible with newer GPU generations. The package is written in an object oriented manner with an abstract simulator base class such that there is a common interface for accessing the algorithms.</p>
    <p>Two different pseudo random number generators (RNG) are used for the SDE and MJP simulations. In the MJP simulations, each thread carries out different numbers of simulation steps and therefore needs different numbers of random numbers that are provided by one Mersenne Twister RNG (<xref ref-type="bibr" rid="B10">Matsumoto and Nishimura, 1998</xref>) per thread. In the completely parallel SDE simulations, each thread requires the same number of random numbers at the same time. This fact is exploited by a binary linear operations RNG that is local to a group of threads known as a <italic>warp</italic> (<xref ref-type="bibr" rid="B12">Thomas <italic>et al.</italic>, 2009</xref>).</p>
    <p>The user accesses the package by specifying SBML models which are parsed in <italic>cuda-sim</italic> using libSBML (<xref ref-type="bibr" rid="B1">Bornstein <italic>et al.</italic>, 2008</xref>) and then converted to CUDA code modules. These code modules are automatically incorporated into the GPU kernels and run from within <italic>cuda-sim</italic>. Using a provided Python script, the user can specify model parameters and run the simulations with <italic>cuda-sim</italic>. Alternatively, the algorithms can be called directly from Python, allowing incorporation into other software projects.</p>
    <p>It is advisable to use dedicated general purpose GPUs like the Tesla C2050 that we used for our timing studies. GPUs that provide graphical output have a time limitation on the execution length of programs and therefore will not be compatible with larger simulations run with <italic>cuda-sim</italic>.</p>
  </sec>
  <sec id="SEC3">
    <title>3 TIMING COMPARISONS</title>
    <p>Using a model of p53-Mdm2 oscillations which contains 3 species, 6 reactions and 8 parameters (<xref ref-type="bibr" rid="B3">Geva-Zatorsky <italic>et al.</italic>, 2006</xref> and <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/cgi/content/full/btr015/DC1">Supplementary Fig. S1</ext-link>) we simulated different numbers of time series of length 100 h and performed timing studies comparing the runtime on the GPU and the runtime on a <italic>single</italic> CPU (<xref ref-type="fig" rid="F1">Fig. 1</xref>). For the ODE integrations to yield different results for each thread, instead of using fixed parameters, we drew parameters from uniform random distributions in the interval between 0 and 2.
<fig id="F1" position="float"><label>Fig. 1.</label><caption><p>Timing comparisons. (<bold>A</bold>–<bold>C</bold>) Time taken to simulate a given number of realisations for a single core of an Intel Core i7-975 Extreme Edition Processor 3.33 GHz (solid line) and one Tesla C2050 GPU (dashed line) for (A) the LSODA (B) the Euler–Maruyama and (C) the Gillespie algorithm, respectively. The relative speed-ups for given numbers of simulations are indicated next to the GPU simulation results. (<bold>D</bold>) Summary of the relative speed-up of the three different algorithms.</p></caption><graphic xlink:href="btr015f1"/></fig></p>
    <p>The CPU versions of the Gillespie and Euler–Maruyama algorithms were written in C++ and compiled with GCC using the -O3 optimization flag. For the LSODA algorithm comparisons, the CPU implementation in the SciPy Python module was used. The testing was done on an Intel Core i7-975 Extreme Edition Processor 3.33 GHz machine with 12 GB of RAM and one Tesla C2050 GPU. All points are averages over three runs. Since the CPU runtimes scale linearly, the total CPU time for large numbers of simulations can be extrapolated using a linear model.</p>
    <p>For the LSODA, the Euler–Maruyama and the Gillespie algorithm, speed-ups of 47-fold, 367-fold and 12-fold are attained, respectively, for large numbers of simulations. Only for small numbers of simulations, are the CPU implementations of the three algorithms faster than the GPU versions (<xref ref-type="fig" rid="F1">Fig. 1</xref> A–C). This is due to the fact that the initialization on the GPU takes substantially longer than on the CPU. But since in most applications of these algorithms, either in order to explore the parameter space or to perform inference, at least thousands of simulations will be needed for which the GPU outperforms the CPU even for the rather simple p53-Mdm2 model.</p>
    <p>We also compared the <italic>cuda-sim</italic> implementations of the LSODA and Gillespie algorithms with implementations in the Matlab package <italic>SBTOOLBOX2</italic> (<xref ref-type="bibr" rid="B11">Schmidt and Jirstand, 2006</xref>) and our Euler–Maruyama implementation with the native <italic>sde</italic> function within Matlab. Since stochastic simulation in <italic>SBTOOLBOX2</italic> supports only mass-action models, we used a model of enzyme kinetics (<ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/cgi/content/full/btr015/DC1">Supplementary Fig. S2</ext-link>). We obtained similar timing to the p53-Mdm2 model when using our CPU implementations (<ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/cgi/content/full/btr015/DC1">Supplementary Fig. S3</ext-link>) and speed-ups of between three and four orders of magnitude when compared to Matlab (<ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/cgi/content/full/btr015/DC1">Supplementary Fig. S4</ext-link>).</p>
  </sec>
  <sec sec-type="conclusions" id="SEC4">
    <title>4 CONCLUSIONS</title>
    <p>GPUs offer a powerful and cost-effective solution for parallel computing. <italic>cuda-sim</italic> provides a Python interface for biochemical network simulations using ODEs, SDEs and MJPs on NVIDIA CUDA GPUs and significantly reduces computation time. The package can be used as a standalone tool, or incorporated into other Python packages.</p>
    <p><italic>Funding:</italic> BBSRC (to C.B. and M.P.H.S.); Wellcome Trust (to J.L.); DAAD and Imperial College London (to Y.Z.); Kwoks' Foundation of Sun Hung Kai Properties. Royal Society Wolfson Research Merit Award (to M.P.H.S.).</p>
    <p><italic>Conflict of Interest</italic>: none declared.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="PMC_1" content-type="local-data">
      <caption>
        <title>Supplementary Data</title>
      </caption>
      <media mimetype="text" mime-subtype="html" xlink:href="supp_27_6_874__index.html"/>
      <media xlink:role="associated-file" mimetype="application" mime-subtype="pdf" xlink:href="supp_btr015_supplement.pdf"/>
    </supplementary-material>
  </sec>
</body>
<back>
  <ref-list>
    <title>REFERENCES</title>
    <ref id="B1">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bornstein</surname>
            <given-names>BJ</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>LibSBML: an API Library for SBML</article-title>
        <source>Bioinformatics</source>
        <year>2008</year>
        <volume>24</volume>
        <fpage>880</fpage>
        <lpage>881</lpage>
        <pub-id pub-id-type="pmid">18252737</pub-id>
      </element-citation>
    </ref>
    <ref id="B2">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dematté</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Prandi</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>GPU computing for systems biology</article-title>
        <source>Brief Bioinform.</source>
        <year>2010</year>
        <volume>11</volume>
        <fpage>323</fpage>
        <lpage>333</lpage>
        <pub-id pub-id-type="pmid">20211843</pub-id>
      </element-citation>
    </ref>
    <ref id="B3">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Geva-Zatorsky</surname>
            <given-names>N</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Oscillations and variability in the p53 system</article-title>
        <source>Mol. Syst. Biol.</source>
        <year>2006</year>
        <volume>2</volume>
        <comment>2006.0033</comment>
      </element-citation>
    </ref>
    <ref id="B4">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gillespie</surname>
            <given-names>DT</given-names>
          </name>
        </person-group>
        <article-title>A general method for numerically simulating the stochastic time evolution of coupled chemical reactions</article-title>
        <source>J. Comput. Phy.</source>
        <year>1976</year>
        <volume>22</volume>
        <fpage>403</fpage>
        <lpage>434</lpage>
      </element-citation>
    </ref>
    <ref id="B5">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Hindmarsh</surname>
            <given-names>AC</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Stepleman</surname>
            <given-names>RS</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>ODEPACK, A Systematized Collection of ODE Solvers, Scientific Computing</article-title>
        <source>IMACS Transactions on Scientific Computation</source>
        <year>1983</year>
        <volume>1</volume>
        <publisher-loc>North-Holland</publisher-loc>
        <publisher-name>Amsterdam</publisher-name>
        <fpage>55</fpage>
        <lpage>64</lpage>
      </element-citation>
    </ref>
    <ref id="B6">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Kirk</surname>
            <given-names>DB</given-names>
          </name>
          <name>
            <surname>Hwu</surname>
            <given-names>WW</given-names>
          </name>
        </person-group>
        <source>Programming Massively Parallel Processors.</source>
        <year>2010</year>
        <publisher-loc>Burlington</publisher-loc>
        <publisher-name>Morgan Kaufmann</publisher-name>
      </element-citation>
    </ref>
    <ref id="B7">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Klöckner</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <source>PyCUDA: GPU run-time code generation for high-performance computing.</source>
        <year>2009</year>
        <comment>arXiv:0911.3456</comment>
      </element-citation>
    </ref>
    <ref id="B8">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Kloeden</surname>
            <given-names>PE</given-names>
          </name>
          <name>
            <surname>Platen</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <source>Numerical Solution of Stochastic Differential Equations.</source>
        <year>1999</year>
        <publisher-loc>Berlin and Heidelberg</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="B9">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Liepe</surname>
            <given-names>J</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>ABC-SysBio–approximate Bayesian computation in Python with GPU support</article-title>
        <source>Bioinformatics</source>
        <year>2010</year>
        <volume>26</volume>
        <fpage>1797</fpage>
        <lpage>1799</lpage>
        <pub-id pub-id-type="pmid">20591907</pub-id>
      </element-citation>
    </ref>
    <ref id="B10">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Matsumoto</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Nishimura</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>Mersenne twister: a 623-dimensionally equidistributed uniform pseudo-random number generator</article-title>
        <source>ACM Trans. Model. Comput. Simul.</source>
        <year>1998</year>
        <volume>8</volume>
        <fpage>3</fpage>
        <lpage>30</lpage>
      </element-citation>
    </ref>
    <ref id="B11">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Schmidt</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Jirstand</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Systems Biology Toolbox for MATLAB: a computational platform for research in systems biology</article-title>
        <source>Bioinformatics</source>
        <year>2006</year>
        <volume>22</volume>
        <fpage>514</fpage>
        <lpage>515</lpage>
        <pub-id pub-id-type="pmid">16317076</pub-id>
      </element-citation>
    </ref>
    <ref id="B12">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Thomas</surname>
            <given-names>D</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A comparison of CPUs, GPUs, FPGAs and massively parallel processor arrays for random number generation</article-title>
        <source>Proceeding of the ACM/SIGDA international symposium on Field programmable gate arrays.</source>
        <year>2009</year>
        <publisher-loc>New York</publisher-loc>
        <publisher-name>ACM</publisher-name>
      </element-citation>
    </ref>
    <ref id="B13">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Toni</surname>
            <given-names>T</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Approximate Bayesian computation scheme for parameter inference and model selection in dynamical systems</article-title>
        <source>J. R. Soc. Interface</source>
        <year>2009</year>
        <volume>6</volume>
        <fpage>187</fpage>
        <lpage>202</lpage>
        <pub-id pub-id-type="pmid">19205079</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

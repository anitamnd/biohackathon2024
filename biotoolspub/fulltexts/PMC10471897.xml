<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10471897</article-id>
    <article-id pub-id-type="pmid">37624918</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btad525</article-id>
    <article-id pub-id-type="publisher-id">btad525</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Applications Note</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Systems Biology</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>libSBOLj3: a graph-based library for design and data exchange in synthetic biology</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Mısırlı</surname>
          <given-names>Göksel</given-names>
        </name>
        <aff><institution>School of Computer Science and Mathematics, Keele University, Keele</institution>, Staffordshire, ST5 5BG, <country country="GB">United Kingdom</country></aff>
        <xref rid="btad525-cor1" ref-type="corresp"/>
        <!--g.misirli@keele.ac.uk-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Martelli</surname>
          <given-names>Pier Luigi</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="btad525-cor1">Corresponding author. School of Computer Science and Mathematics, Keele University, Keele, Staffordshire, ST5 5BG, United Kingdom. E-mail: <email>g.misirli@keele.ac.uk</email> (G.M.)</corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <month>8</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2023-08-25">
      <day>25</day>
      <month>8</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>25</day>
      <month>8</month>
      <year>2023</year>
    </pub-date>
    <volume>39</volume>
    <issue>8</issue>
    <elocation-id>btad525</elocation-id>
    <history>
      <date date-type="received">
        <day>22</day>
        <month>5</month>
        <year>2023</year>
      </date>
      <date date-type="rev-recd">
        <day>14</day>
        <month>8</month>
        <year>2023</year>
      </date>
      <date date-type="editorial-decision">
        <day>21</day>
        <month>8</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>23</day>
        <month>8</month>
        <year>2023</year>
      </date>
      <date date-type="corrected-typeset">
        <day>31</day>
        <month>8</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2023. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2023</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btad525.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Summary</title>
        <p>The Synthetic Biology Open Language version 3 data standard provides a graph-based approach to exchange information about biological designs. The new data model has major updates and offers several features for software tools. Here, we present libSBOLj3 to facilitate data exchange and provide interoperability between computer-aided design and automation tools using this standard. The library adopts a graph-based approach. Tool developers can extend these graphs with application-specific information and use detailed validation reports to identify errors and interoperability issues and apply best practice rules.</p>
      </sec>
      <sec id="s2">
        <title>Availability and implementation</title>
        <p>The libSBOLj3 library is implemented in Java and can be downloaded or used as a Maven dependency. The open-source project, code examples and documentation about accessing and using the library are available via GitHub at <ext-link xlink:href="https://github.com/SynBioDex/libSBOLj3" ext-link-type="uri">https://github.com/SynBioDex/libSBOLj3</ext-link>.</p>
      </sec>
    </abstract>
    <counts>
      <page-count count="3"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>The representation of data in standardized formats is ever more important for reproducibility and the development of predictable applications for synthetic biology. Data standards facilitate the use of different computer-aided design and automation tools, interoperability between these tools and the development of complex workflows (<xref rid="btad525-B7" ref-type="bibr">Mısırlı <italic toggle="yes">et al.</italic> 2017</xref>).</p>
    <p>The Synthetic Biology Open Language (SBOL) is an open-source data standard to facilitate the electronic exchange of information about genetic parts, designs, and functional and experimental data. Several genetic design, visualization, modeling and automation tools and repositories use SBOL to represent and exchange data (<xref rid="btad525-B9" ref-type="bibr">Myers <italic toggle="yes">et al.</italic> 2017</xref>).</p>
    <p>The recently developed SBOL3 (<xref rid="btad525-B6" ref-type="bibr">McLaughlin <italic toggle="yes">et al.</italic> 2020</xref>, <xref rid="btad525-B2" ref-type="bibr">Buecherl <italic toggle="yes">et al.</italic> 2023</xref>) adopts a fully graph-based approach in which SBOL entities represent nodes, and edges represent relationships between these entities. A linked data approach is used to identify and describe SBOL entities via existing ontologies and controlled vocabularies (<xref rid="btad525-B4" ref-type="bibr">Eilbeck <italic toggle="yes">et al.</italic> 2005</xref>, <xref rid="btad525-B5" ref-type="bibr">Lebo <italic toggle="yes">et al.</italic>, 2013</xref>, <xref rid="btad525-B8" ref-type="bibr">Mısırlı <italic toggle="yes">et al.</italic> 2019</xref>). SBOL3 has also been extended to support synthetic biology workflows more efficiently to build a web of design information.</p>
    <p>A common approach to adopting biological data standards is the development of application programming interfaces for supporting different software tools, increasing interoperability between these tools and reducing the complexities of understanding and using data standards (<xref rid="btad525-B10" ref-type="bibr">Zhang <italic toggle="yes">et al.</italic> 2015</xref>). Here, we present libSBOLj3, a Java library for SBOL3. The library is document-centric and uses a graph-based approach to handle SBOL graphs efficiently. Tool developers can use this library to take advantage of the recent SBOL3 data standard, which provides increased reuse of biological design information and richer expressions to represent design-related constraints. Tool developers can also incorporate application-specific information and describe the provenance-based design, build, and test activities.</p>
  </sec>
  <sec>
    <title>2 Results</title>
    <p>The libSBOLj3 library fully implements the SBOL3 data model. Some of the important library features are summarized below.</p>
    <sec>
      <title>2.1 Document-centric data exchange</title>
      <p>The library handles information as a single SBOL document, which can be constructed using programmatic entities designed to represent information of interest, such as a <monospace>Component</monospace> entity to represent a genetic part and a <monospace>Sequence</monospace> entity to define the composition of a part. These entities can further be described using child entities (<xref rid="btad525-F1" ref-type="fig">Fig. 1</xref>). The library can write the resulting SBOL documents into files or in-memory variables and read them back.</p>
      <fig position="float" id="btad525-F1">
        <label>Figure 1.</label>
        <caption>
          <p>An example of using the libSBOLj3 library to design genetic circuits. The ‘Template receiver’, ‘LuxR device’, and ‘F2620 device’ designs are shown in boxes with solid lines. The F2620 design is derived from the template with features that can be varied combinatorially. Functional constraints about molecular interactions and structural constraints such as precedes and overlaps are specified. A datasheet about experimental results and provenance information about how this device is derived using a model-based design activity are associated with the design. A measurement entity with a polymerases per second (<xref rid="btad525-B3" ref-type="bibr">Canton <italic toggle="yes">et al</italic>. 2008</xref>) value is also included.</p>
        </caption>
        <graphic xlink:href="btad525f1" position="float"/>
      </fig>
    </sec>
    <sec>
      <title>2.2 Graph-based documents</title>
      <p>Each SBOL document is associated with a graph, and the complexity of working with these graphs is hidden from the developers. These graphs can be serialized using four Resource Description Framework (RDF) formats (<xref rid="btad525-B1" ref-type="bibr">Allemang <italic toggle="yes">et al.</italic> 2020</xref>), recommended by the SBOL3 specification, and can also be processed by off-the-shelf graph tools to store, visualize, and query data. These formats are RDF/XML to support Extensible Markup Language (XML) tools, Turtle as a human-readable format, JavaScript Object Notation for Linked Data (JSON-LD) to use lightweight graphs for web applications, and N-Triples. The library includes methods to order N-triples graphs which can be helpful for versioning, comparing and streaming SBOL documents.</p>
      <p>Each entity in libSBOLj3 is represented as a graph node and is associated with a unique identifier in the form of a uniform resource identifier (URI) or an internationalized resource identifier (IRI) consisting of a namespace and a local name. The library provides methods to control the creation of child entities with valid identifiers according to SBOL rules while offering flexibility to improve developers’ user experience.</p>
    </sec>
    <sec>
      <title>2.3 Object-oriented application programming interface</title>
      <p>The libSBOLj3 library adopts an object-oriented data manipulation and retrieval mechanism for a better user experience. Programmatic retrieval and update of SBOL entities and their properties are via simple getters and setters. Object properties and child objects are accessed when needed to support large and complex SBOL graphs. This lazy loading approach minimizes unnecessary interaction with the underlying graph. When an SBOL property is updated, the corresponding graph node is also updated.</p>
      <p>The library provides additional graph-based access mechanisms for SBOL entities. An entity can be retrieved using its unique graph identifier via the <monospace>getIdentified</monospace> library call. The library also supports graph queries to search for entities. The search language is built on SPARQL SELECT. Prefix definitions and the SELECT clause are omitted, and a single search variable corresponding to SBOL entities with given criteria can be used. For example, the <monospace>getIdentifieds</monospace> method returns terminator genetic parts when it is executed with the “<monospace>?identified a sbol:Component; sbol:role SO</monospace><monospace>:</monospace><monospace>0000141; sbol:type SBO</monospace><monospace>:</monospace><monospace>0000251</monospace><monospace>.</monospace>” query as input, and a list of Component objects is returned.</p>
    </sec>
    <sec>
      <title>2.4 High-level application programming interface</title>
      <p>The library has a high-level application programming interface (API) for repetitive or complex tasks and to decouple implementation details from the SBOL data model. Such methods can be used when design information relies on various entities and external ontologies or when describing complex workflows. These higher-level methods are regularly added based on community feedback.</p>
    </sec>
    <sec>
      <title>2.5 Application-specific data support</title>
      <p>The libSBOLj3 library supports integrating application-specific dataFor example, SBOL-specific objects can be annotated with key-value pairs using the library’s <monospace>addAnnotation</monospace> method. Moreover, the <monospace>createMetadata</monospace> method can be used to create application-specific objects.</p>
    </sec>
    <sec>
      <title>2.6 Validation</title>
      <p>Validation is an essential feature of the library to create valid SBOL documents. The SBOL standard lists several validation rules, some with multiple criteria involving different entities. The libSBOLj3 library validates SBOL documents for required and conformance-related rules and best practices. Validating best practices can be switched off programmatically. The library has options to can validate an SBOL document, an SBOL entity or a folder of SBOL documents. Invalid values and entities are reported with a list of validation messages which rely on SBOL-specific validation codes and descriptions. Contextual information about how an invalid value relates to a validated entity may involve a subgraph when multiple entities are involved. The library reports such a subgraph textually as a path between the validated entity and the invalid value in the form of a set of property names and values.</p>
    </sec>
  </sec>
  <sec>
    <title>3 Methods</title>
    <p>The libSBOLj3 library has been developed using the Java programming language and builds upon RDF graphs. The graph abstraction is achieved via the Jena (<ext-link xlink:href="https://jena.apache.org" ext-link-type="uri">https://jena.apache.org</ext-link>) library, and the validation layer is built on Hibernate Validator (<ext-link xlink:href="https://hibernate.org/validator" ext-link-type="uri">https://hibernate.org/validator</ext-link>). Project-specific dependencies and build automation are controlled with Maven (<ext-link xlink:href="https://maven.apache.org" ext-link-type="uri">https://maven.apache.org</ext-link>). Test-driven development was adopted to create a user-friendly library and test validation rules effectively, providing more than 95% code coverage in unit tests.</p>
  </sec>
  <sec>
    <title>4 Conclusion</title>
    <p>The library presented here has been developed to facilitate interoperability between software tools in synthetic biology. Whilst the library can be used to work directly with the SBOL data model, the high-level API provides intuitive and less verbose methods to increase the user experience. Tool developers can use this library to create valid SBOL documents without the complexity of dealing with graphs and can take advantage of graph-based biological data integration, processing and querying.</p>
  </sec>
</body>
<back>
  <ack id="ack1">
    <title>Acknowledgements</title>
    <p>We thank the SBOL community, SBOL3 Working Group, Jacob Beal, Tom Mitchell, and James McLaughlin for their valuable comments and Chris Myers for testing the library and providing feedback regularly. We also thank Keele University for Research Development Fund and James Rooney, Andrew Cook, and Rory Gee for their help in testing and documentation.</p>
  </ack>
  <sec sec-type="COI-statement">
    <title>Conflict of interest</title>
    <p>None declared.</p>
  </sec>
  <sec>
    <title>Funding</title>
    <p>None declared.</p>
  </sec>
  <sec sec-type="data-availability">
    <title>Data availability</title>
    <p>The data underlying this article are available on GitHub at <ext-link xlink:href="https://github.com/SynBioDex/libSBOLj3" ext-link-type="uri">https://github.com/SynBioDex/libSBOLj3</ext-link>.</p>
  </sec>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btad525-B1">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Allemang</surname><given-names>D</given-names></string-name>, <string-name><surname>Hendler</surname><given-names>J</given-names></string-name>, <string-name><surname>Gandon</surname><given-names>F.</given-names></string-name></person-group><italic toggle="yes">Semantic Web for the Working Ontologist: Effective Modeling for Linked Data</italic>, <italic toggle="yes">RDFS, and OWL</italic>, Vol. 33, 3rd edn. New York, NY, USA: Association for Computing Machinery, <year>2020</year>. ISBN 9781450376174.</mixed-citation>
    </ref>
    <ref id="btad525-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Buecherl</surname><given-names>L</given-names></string-name>, <string-name><surname>Mitchell</surname><given-names>T</given-names></string-name>, <string-name><surname>Scott-Brown</surname><given-names>J</given-names></string-name></person-group><etal>et al</etal><article-title>Synthetic biology open language (SBOL) version 3.1.0</article-title>. <source>J Integr Bioinform</source><year>2023</year>;<volume>20</volume>:<fpage>20220058</fpage>.</mixed-citation>
    </ref>
    <ref id="btad525-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Canton</surname><given-names>B</given-names></string-name>, <string-name><surname>Labno</surname><given-names>A</given-names></string-name>, <string-name><surname>Endy</surname><given-names>D.</given-names></string-name></person-group><article-title>Refinement and standardization of synthetic biological parts and devices</article-title>. <source>Nat Biotechnol</source><year>2008</year>;<volume>26</volume>:<fpage>787</fpage>–<lpage>93</lpage>.<pub-id pub-id-type="pmid">18612302</pub-id></mixed-citation>
    </ref>
    <ref id="btad525-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Eilbeck</surname><given-names>K</given-names></string-name>, <string-name><surname>Lewis</surname><given-names>SE</given-names></string-name>, <string-name><surname>Mungall</surname><given-names>CJ</given-names></string-name></person-group><etal>et al</etal><article-title>The sequence ontology: a tool for the unification of genome annotations</article-title>. <source>Genome Biol</source><year>2005</year>;<volume>6</volume>:<fpage>R44</fpage>.<pub-id pub-id-type="pmid">15892872</pub-id></mixed-citation>
    </ref>
    <ref id="btad525-B5">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Lebo</surname><given-names>T</given-names></string-name>, <string-name><surname>Sahoo</surname><given-names>S</given-names></string-name>, <string-name><surname>McGuinness</surname><given-names>D</given-names></string-name></person-group><etal>et al</etal> Prov-o: the prov ontology. W3C Recommendation. World Wide Web Consortium <year>2013</year>.</mixed-citation>
    </ref>
    <ref id="btad525-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>McLaughlin</surname><given-names>JA</given-names></string-name>, <string-name><surname>Beal</surname><given-names>J</given-names></string-name>, <string-name><surname>Mısırlı</surname><given-names>G</given-names></string-name></person-group><etal>et al</etal><article-title>The synthetic biology open language (SBOL) version 3: simplified data exchange for bioengineering</article-title>. <source>Front Bioeng Biotechnol</source><year>2020</year>;<volume>8</volume>:<fpage>1009</fpage>.<pub-id pub-id-type="pmid">33015004</pub-id></mixed-citation>
    </ref>
    <ref id="btad525-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Mısırlı</surname><given-names>G</given-names></string-name>, <string-name><surname>Madsen</surname><given-names>C</given-names></string-name>, <string-name><surname>Murieta</surname><given-names>IS</given-names></string-name></person-group><etal>et al</etal><article-title>Constructing synthetic biology workflows in the cloud</article-title>. <source>Eng Biol</source><year>2017</year>;<volume>1</volume>:<fpage>61</fpage>–<lpage>5</lpage>.</mixed-citation>
    </ref>
    <ref id="btad525-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Mısırlı</surname><given-names>G</given-names></string-name>, <string-name><surname>Taylor</surname><given-names>R</given-names></string-name>, <string-name><surname>Goni-Moreno</surname><given-names>A</given-names></string-name></person-group><etal>et al</etal><article-title>SBOL-OWL: an ontological approach for formal and semantic representation of synthetic biology information</article-title>. <source>ACS Synth Biol</source><year>2019</year>;<volume>8</volume>:<fpage>1498</fpage>–<lpage>514</lpage>.<pub-id pub-id-type="pmid">31059645</pub-id></mixed-citation>
    </ref>
    <ref id="btad525-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Myers</surname><given-names>CJ</given-names></string-name>, <string-name><surname>Beal</surname><given-names>J</given-names></string-name>, <string-name><surname>Gorochowski</surname><given-names>TE</given-names></string-name></person-group><etal>et al</etal><article-title>A standard-enabled workflow for synthetic biology</article-title>. <source>Biochem Soc Trans</source><year>2017</year>;<volume>45</volume>:<fpage>793</fpage>–<lpage>803</lpage>.<pub-id pub-id-type="pmid">28620041</pub-id></mixed-citation>
    </ref>
    <ref id="btad525-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zhang</surname><given-names>Z</given-names></string-name>, <string-name><surname>Nguyen</surname><given-names>T</given-names></string-name>, <string-name><surname>Roehner</surname><given-names>N</given-names></string-name></person-group><etal>et al</etal><article-title>libSBOLj 2.0: a java library to support SBOL 2.0</article-title>. <source>IEEE Life Sci Lett</source><year>2015</year>;<volume>1</volume>:<fpage>34</fpage>–<lpage>7</lpage>.</mixed-citation>
    </ref>
  </ref-list>
</back>

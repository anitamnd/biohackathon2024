<?DTDIdentifier.IdentifierValue -//ES//DTD journal article DTD version 5.6.0//EN//XML?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName art560.dtd?>
<?SourceDTD.Version 5.6.0?>
<?ConverterInfo.XSLTName elsevier2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<?origin publisher?>
<?FILEmeta_ISCI109054 xml ?>
<?FILEmain xml ?>
<?FILEmain pdf ?>
<?FILEgr1 jpg ?>
<?FILEgr2 jpg ?>
<?FILEgr3 jpg ?>
<?FILEgr4 jpg ?>
<?FILEgr5 jpg ?>
<?FILEfx1 jpg ?>
<?FILEmmc1 pdf ?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">iScience</journal-id>
    <journal-id journal-id-type="iso-abbrev">iScience</journal-id>
    <journal-title-group>
      <journal-title>iScience</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2589-0042</issn>
    <publisher>
      <publisher-name>Elsevier</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10867639</article-id>
    <article-id pub-id-type="pii">S2589-0042(24)00275-X</article-id>
    <article-id pub-id-type="doi">10.1016/j.isci.2024.109054</article-id>
    <article-id pub-id-type="publisher-id">109054</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>DandD: Efficient measurement of sequence growth and similarity</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" id="au1">
        <name>
          <surname>Bonnie</surname>
          <given-names>Jessica K.</given-names>
        </name>
        <email>jbonnie1@jhu.edu</email>
        <xref rid="aff1" ref-type="aff">1</xref>
        <xref rid="cor1" ref-type="corresp">∗</xref>
      </contrib>
      <contrib contrib-type="author" id="au2">
        <name>
          <surname>Ahmed</surname>
          <given-names>Omar Y.</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">1</xref>
      </contrib>
      <contrib contrib-type="author" id="au3">
        <name>
          <surname>Langmead</surname>
          <given-names>Ben</given-names>
        </name>
        <email>langmea@cs.jhu.edu</email>
        <xref rid="aff1" ref-type="aff">1</xref>
        <xref rid="fn1" ref-type="fn">2</xref>
        <xref rid="cor2" ref-type="corresp">∗∗</xref>
      </contrib>
      <aff id="aff1"><label>1</label>Department of Computer Science, Johns Hopkins University, Baltimore, MD, USA</aff>
    </contrib-group>
    <author-notes>
      <corresp id="cor1"><label>∗</label>Corresponding author <email>jbonnie1@jhu.edu</email></corresp>
      <corresp id="cor2"><label>∗∗</label>Corresponding author <email>langmea@cs.jhu.edu</email></corresp>
      <fn id="fn1">
        <label>2</label>
        <p id="ntpara0010">Lead contact</p>
      </fn>
    </author-notes>
    <pub-date pub-type="pmc-release">
      <day>01</day>
      <month>2</month>
      <year>2024</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on <pub-date
						pub-type="epub">.-->
    <pub-date pub-type="collection">
      <day>15</day>
      <month>3</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>01</day>
      <month>2</month>
      <year>2024</year>
    </pub-date>
    <volume>27</volume>
    <issue>3</issue>
    <elocation-id>109054</elocation-id>
    <history>
      <date date-type="received">
        <day>29</day>
        <month>12</month>
        <year>2023</year>
      </date>
      <date date-type="rev-recd">
        <day>11</day>
        <month>1</month>
        <year>2024</year>
      </date>
      <date date-type="accepted">
        <day>23</day>
        <month>1</month>
        <year>2024</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© 2024 The Authors</copyright-statement>
      <copyright-year>2024</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an open access article under the CC BY license (http://creativecommons.org/licenses/by/4.0/).</license-p>
      </license>
    </permissions>
    <abstract id="abs0010">
      <title>Summary</title>
      <p>Genome assembly databases are growing rapidly. The redundancy of sequence content between a new assembly and previous ones is neither conceptually nor algorithmically easy to measure. We introduce pertinent methods and DandD, a tool addressing how much new sequence is gained when a sequence collection grows. DandD can describe how much structural variation is discovered in each new human genome assembly and when discoveries will level off in the future. DandD uses a measure called δ (“delta”), developed initially for data compression and chiefly dependent on <italic>k</italic>-mer counts. DandD rapidly estimates δ using genomic sketches. We propose δ as an alternative to <italic>k</italic>-<italic>mer</italic>-specific cardinalities when computing the Jaccard coefficient, thereby avoiding the pitfalls of a poor choice of <italic>k</italic>. We demonstrate the utility of DandD’s functions for estimating δ, characterizing the rate of pangenome growth, and computing all-pairs similarities using <italic>k</italic>-independent Jaccard.</p>
    </abstract>
    <abstract abstract-type="graphical" id="abs0015">
      <title>Graphical abstract</title>
      <fig id="undfig1" position="anchor">
        <graphic xlink:href="fx1"/>
      </fig>
    </abstract>
    <abstract abstract-type="author-highlights" id="abs0020">
      <title>Highlights</title>
      <p>
        <list list-type="simple" id="ulist0010">
          <list-item id="u0010">
            <label>•</label>
            <p id="p0010">DandD uses a measure from data compression to measure amount of distinct sequence</p>
          </list-item>
          <list-item id="u0015">
            <label>•</label>
            <p id="p0015">The measure can be used to characterize pangenome “openness”</p>
          </list-item>
          <list-item id="u0020">
            <label>•</label>
            <p id="p0020">The measure can also be used as a length-independent measure of sequence similarity</p>
          </list-item>
        </list>
      </p>
    </abstract>
    <abstract abstract-type="teaser" id="abs0025">
      <p>Genomics; Biocomputational method; Genomic analysis; Sequence analysis</p>
    </abstract>
    <kwd-group id="kwrds0010">
      <title>Subject areas</title>
      <kwd>Genomics</kwd>
      <kwd>Biocomputational method</kwd>
      <kwd>Genomic analysis</kwd>
      <kwd>Sequence analysis</kwd>
    </kwd-group>
  </article-meta>
  <notes>
    <p id="misc9010">Published: February 1, 2024</p>
  </notes>
</front>
<body>
  <sec id="sec1">
    <title>Introduction</title>
    <p id="p0025">Pangenomes are growing as more high-quality assemblies are produced. Once a sufficient number of assemblies have been added, a pangenome can reach a point of diminishing returns, where each new genome contributes little novel sequence to the collection.<xref rid="bib1" ref-type="bibr"><sup>1</sup></xref> Measuring the amount of new sequence per assembly, though, is neither conceptually nor algorithmically straightforward. By surveying studies that computed the average amount of novel sequence per individual in human genome assemblies, Sherman et al.<xref rid="bib2" ref-type="bibr"><sup>2</sup></xref> found that estimates varied from 0.2 Mbp to 14 Mbp. This wide range in values was attributable to reasonable investigator choices such as selection of alignment parameters or criteria for identifying contigs with novel sequence. In short, the parameter choices led to a wide range of answers, making the end results difficult to compare.</p>
    <p id="p0030">Alignment-free, i.e., <italic>k</italic>-mer based, approaches offer an alternative. Such methods have been used to determine if a pangenome has reached the point of being “closed,” with open/closed status determined by fitting a Heaps’-Law model to an empirical <italic>k</italic>-mer growth function.<xref rid="bib1" ref-type="bibr"><sup>1</sup></xref> While avoiding many of the parameter-selection pitfalls of alignment-based methods, <italic>k</italic>-mer based approaches, as the name suggests, still require an initial choice of substring (<italic>k</italic>-mer) length, with subsequent measurements dependent on this selection.</p>
    <p id="p0035">We present a new parameter-free method and tool for measuring the amount of sequence in a pangenome based on ideas from string compression. We use a quantity “delta” (δ) that measures compressibility of a repetitive string.<xref rid="bib3" ref-type="bibr"><sup>3</sup></xref> Other quantities have been proposed for this purpose, including the number of runs in the Burrows-Wheeler Transform (<italic>r</italic>),<xref rid="bib4" ref-type="bibr"><sup>4</sup></xref> number of phrases in the Lempel-Ziv parse (<italic>z</italic>),<xref rid="bib5" ref-type="bibr"><sup>5</sup></xref> and the size of the string attractor (γ).<xref rid="bib6" ref-type="bibr"><sup>6</sup></xref> All these measures have distinct algorithms and interpretations, but δ is known to have advantageous bounds compared to the others. For instance, <inline-formula><mml:math id="M1" altimg="si1.gif"><mml:mrow><mml:mi>δ</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">≤</mml:mo><mml:mi>γ</mml:mi></mml:mrow></mml:math></inline-formula> for all strings.<xref rid="bib3" ref-type="bibr"><sup>3</sup></xref></p>
    <p id="p0040">Computational difficulty among measures quantifying novel sequence varies widely. <italic>z</italic> and <italic>r</italic> require computing a Lempel-Ziv parse or Burrows-Wheeler Transform, respectively, across the entire input string. Computing γ is nondeterministic polynomial-time (NP) complete. Computing δ, however, requires little more than a single pass over the input to count <italic>k</italic>-mers for various values of <italic>k</italic> (<xref rid="fig1" ref-type="fig">Figure 1</xref>). Available tools like KMC<xref rid="bib7" ref-type="bibr"><sup>7</sup></xref> can do this efficiently.</p>
    <p id="p0045">Besides being a useful measure of repetitiveness, δ is also remarkably easy to estimate. This is true not only when estimating δ over a given sequence collection, but also when estimating over <italic>unions</italic> of sequences, as is needed to assess pangenome saturation. Estimating δ for sequences and their unions reduces to the problem of estimating set cardinality. Our main insight is that estimating cardinalities over large sequences and their unions is highly efficient using sketches such as MinHash<xref rid="bib8" ref-type="bibr"><sup>8</sup></xref><sup>,</sup><xref rid="bib9" ref-type="bibr"><sup>9</sup></xref> or HyperLogLog.<xref rid="bib10" ref-type="bibr"><sup>10</sup></xref><sup>,</sup><xref rid="bib11" ref-type="bibr"><sup>11</sup></xref></p>
    <p id="p0050">Additionally, we propose a measure called the <italic>k</italic>-independent Jaccard (KIJ), as an alternative to the Jaccard coefficient. KIJ avoids the risks of preselecting <italic>k</italic>-mer length by using δ. Having a principled way to measure similarity without a pre-determined <italic>k</italic> is critically important since poor choices of <italic>k</italic> can lead to incorrect conclusions downstream, as we show in the context of phylogenetic reconstruction.</p>
    <p id="p0055">We describe the algorithms and data structures implemented in the new DandD software tool, which can compute and estimate δ in a variety of scenarios relevant to genomics and pangenomics. For example, we demonstrate that (a) DandD can efficiently and accurately estimate δ using genomic sketches, (b) DandD can measure how much new sequence is in each new assembled human genome in a pangenome, including when the input consists of assemblies without common coordinates, and finally (c) DandD can be used to compute KIJ, yielding phylogenetic trees that closely match known truth.</p>
    <p id="p0210">DandD is open source software available at: <ext-link ext-link-type="uri" xlink:href="https://github.com/jessicabonnie/dandd" id="PC_linkz8PBVGvn2g">https://github.com/jessicabonnie/dandd</ext-link>.</p>
  </sec>
  <sec id="sec2">
    <title>Results</title>
    <sec id="sec2.1">
      <title>Behavior of δ, r, and z in practice</title>
      <p id="p0060">We began with an empirical study of the relationship between <italic>z</italic>, <italic>r</italic>, and δ using real genome sequence data. We collected 50 <italic>Salmonella enterica</italic> genomes from Refseq, putting them in an arbitrary order. We computed <italic>z</italic>, <italic>r</italic>, and δ for sets of these genomes, starting with the first and cumulatively adding one at a time. In the case of <italic>z</italic>, we used a combination of the newscanNT.x tool from Big-BWT<xref rid="bib12" ref-type="bibr"><sup>12</sup></xref> and the lz_77 tool from PFP_LZ77.<xref rid="bib13" ref-type="bibr"><sup>13</sup></xref> To compute <italic>r</italic>, we used the pfbwt-f64 tool.<xref rid="bib12" ref-type="bibr"><sup>12</sup></xref> For δ, we used DandD in its --exact mode, which in turn uses KMC3.<xref rid="bib7" ref-type="bibr"><sup>7</sup></xref> For <italic>r</italic> and <italic>z</italic>, both the genomes and their reverse complements were added to the set at the same time. For δ, we accomplished this through <italic>k</italic>-mer canonicalization. Results are shown in <xref rid="fig2" ref-type="fig">Figure 2</xref>. The three measures were normalized by first subtracting the minimum then dividing by the maximum, to obtain values ranging from 0 to 1. There is an obvious, strong relationship between the measures, with no two of the normalized measures differing by more than <inline-formula><mml:math id="M2" altimg="si2.gif"><mml:mrow><mml:mo linebreak="goodbreak" linebreakstyle="after">±</mml:mo><mml:mn>0.0273</mml:mn></mml:mrow></mml:math></inline-formula> at any point. <xref rid="mmc1" ref-type="supplementary-material">Figure S1</xref> also shows the wall clock time required by these methods for computing <italic>z</italic>, <italic>r</italic>, and δ, with the KMC3-based method for computing δ being the fastest.<fig id="fig2"><label>Figure 2</label><caption><p>Normalized compression metrics δ, <italic>r</italic>, and <italic>z</italic> reflect the same pattern of growth with the inclusion of each additional assembly from an arbitary ordering of 50 Salmonella genomes</p><p>Normalization was achieved by scaling to the maximum value for each measure.</p></caption><graphic xlink:href="gr2"/></fig></p>
    </sec>
    <sec id="sec2.2">
      <title>Efficient cardinality estimation with dashing</title>
      <p id="p0065">We sought to compare the computational performance and accuracy of DandD’s two modes, the --exact mode (“exact”) and the sketch-based mode (“approximate”). We ran DandD in both modes on three datasets: 10 <italic>E. coli</italic> genomes, 10 salmonella genomes, and 12 human genomes. We performed all the computations for a single value of <italic>k</italic>. These methods are being assessed for performance in computing (or estimating) the cardinatlity <inline-formula><mml:math id="M3" altimg="si3.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, not δ. Given that computing δ means repeatedly performing this process for several values of <italic>k</italic>, this provides sufficient basis for comparing the methods. For each dataset and method, we performed three computations. First, we used the selected method to build a <italic>k</italic>-mer database (for “exact”) or sketch (for “approximate”) over each input genome. We used the selected method to perform a series of cumulative unions, starting from a single database/sketch and combining them in successive steps until all genomes are included. Finally, we performed a single global union of all of the individual databases/sketches. In all cases, we used /usr/bin/time -v to measure the time and the maximum memory usage. In nearly all cases, the “approximate” method is faster than the “exact” method (<xref rid="tbl1" ref-type="table">Table 1</xref>). This is particularly true for the union steps for the human genome inputs, where the approximate method is as much as three orders of magnitude faster than the exact method. The “approximate” method’s peak memory footprint is consistently smaller than the exact method’s, sometimes by two orders of magnitude. Further, for every experiment described in <xref rid="tbl1" ref-type="table">Table 1</xref>, we used Dashing to estimate the cardinality from the sketch produced and compared this to the true cardinality as computed by KMC3. We computed the relative error of the Dashing estimate as <inline-formula><mml:math id="M4" altimg="si4.gif"><mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mrow><mml:mi>D</mml:mi><mml:mo>−</mml:mo><mml:mi>K</mml:mi></mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mo linebreak="goodbreak" linebreakstyle="after">/</mml:mo><mml:mi>K</mml:mi></mml:mrow></mml:math></inline-formula>, where <italic>D</italic> is Dashing’s estimate and <italic>K</italic> is KMC3’s exact count. Overall, the mean relative error was <inline-formula><mml:math id="M5" altimg="si5.gif"><mml:mrow><mml:mn>6.537</mml:mn><mml:mo linebreak="goodbreak" linebreakstyle="after">×</mml:mo><mml:msup><mml:mn>10</mml:mn><mml:mrow><mml:mo>−</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>. The maximum observed relative error was <inline-formula><mml:math id="M6" altimg="si6.gif"><mml:mrow><mml:mn>1.32</mml:mn><mml:mo linebreak="goodbreak" linebreakstyle="after">×</mml:mo><mml:msup><mml:mn>10</mml:mn><mml:mrow><mml:mo>−</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>.<table-wrap position="float" id="tbl1"><label>Table 1</label><caption><p>Computational efficiency of KMC3 versus Dashing for preprocessing and unioning</p></caption><table frame="hsides" rules="groups"><thead><tr><th rowspan="2">Task</th><th colspan="2">Exact (KMC3)<hr/></th><th colspan="2">Approximate (Dashing)<hr/></th></tr><tr><th>Time (seconds)</th><th>Peak Mem (GB)</th><th>Time (seconds)</th><th>Peak Mem (GB)</th></tr></thead><tbody><tr><td colspan="5"><bold><italic>E. coli</italic> (n = 10, k = 15)</bold></td></tr><tr><td colspan="5"><hr/></td></tr><tr><td>Preprocess 10 inputs (mean)</td><td>0.626</td><td>0.100</td><td>0.353</td><td>0.0138</td></tr><tr><td>9 cumulative unions (total)</td><td>4.39</td><td>0.381</td><td>2.28</td><td>6.58e-3</td></tr><tr><td>1 global union (total)</td><td>2.26</td><td>0.403</td><td>0.270</td><td>0.0129</td></tr><tr><td colspan="5"><hr/></td></tr><tr><td colspan="5"><bold><italic>Salmonella</italic> (n = 10, k = 14)</bold></td></tr><tr><td colspan="5"><hr/></td></tr><tr><td>Preprocess 10 inputs (mean)</td><td>0.643</td><td>0.100</td><td>0.340</td><td>0.0138</td></tr><tr><td>9 cumulative unions (total)</td><td>3.39</td><td>0.388</td><td>2.13</td><td>6.59e-3</td></tr><tr><td>1 global union (total)</td><td>1.85</td><td>0.389</td><td>0.28</td><td>0.0129</td></tr><tr><td colspan="5"><hr/></td></tr><tr><td colspan="5"><bold><italic>Human</italic> (n = 10, k = 20)</bold></td></tr><tr><td colspan="5"><hr/></td></tr><tr><td>Preprocess 10 inputs (mean)</td><td>40.8</td><td>11.7</td><td>44.2</td><td>0.127</td></tr><tr><td>9 cumulative unions (total)</td><td>1,750</td><td>8.14</td><td>2.16</td><td>6.59e-3</td></tr><tr><td>1 global union (total)</td><td>829</td><td>16.6</td><td>0.28</td><td>0.0129</td></tr></tbody></table><table-wrap-foot><fn><p>For KMC3, preprocessing consists of building <italic>k</italic>-mer count databases. For Dashing, it consists of building genomic sketches. We analyzed three collections of genome assemblies: E. coli (n = 10, k = 15), salmonella (n = 10, k = 14), and human (n = 10, k = 20). For simplicity, we chose a single <italic>k</italic> for each which was appropriate to the species. We measured the time and memory (resident set size) required to preprocess the 10 inputs on average, reported in rows labeled “Preprocess 10 inputs.” We chose a random ordering of the genomes and measured the resources required to perform a series of unions, each adding one additional genome to the union (“9 cumulative unions”). We also measured resources required to union all preprocessed datasets at once (“1 global union”).</p></fn></table-wrap-foot></table-wrap></p>
    </sec>
    <sec id="sec2.3">
      <title>Using DandD to characterize sublinearity and openness</title>
      <p id="p0070">We ran the DandD progressive command on a set of 34 human haplotypes taken from the Human Genome Structural Variation Consortium (HGSVC2) project.<xref rid="bib14" ref-type="bibr"><sup>14</sup></xref><sup>,</sup><xref rid="bib15" ref-type="bibr"><sup>15</sup></xref> The haplotypes were chosen to all have an X chromosome, to avoid large increments in δ due only to the addition of the Y chromosome. HGSVC2 is organized into variant call format (VCF) files for each distinct variant type: single nucleotide variants (SNVs), small insertions and deletions (Indels), or structural variants (SVs). We repeated our experiment across different subsets of variant categories. For instance, to create the FASTA sequences used as input to our “SNV only” experiment, we used bcftools consensus<xref rid="bib16" ref-type="bibr"><sup>16</sup></xref> to create 34 haplotype-specific FASTA files, taking rows from the VCF file containing SNVs for 17 individuals annotated as female. For the “SNVs + indels” experiment, we did the same but taking rows from both the SNV and Indel VCF files. For the “SNVs + SVs + indels” experiment, we did the same but taking rows from all three VCFs. In all cases, the individual haplotype FASTAs were then provided to DandD progressive. Since it is impractical to attempt all orderings of 34 haplotypes, we used DandD’s --norder 120 option to randomly generate a series of 120 possible permutations. We performed a corresponding experiment for 56 haplotypes from the Human Pangenome Reference Consortium (HPRC),<xref rid="bib17" ref-type="bibr"><sup>17</sup></xref> taken from 28 individuals annotated as female. In this case, the FASTA inputs to DandD were the phased assemblies provided by the HPRC. There is no accompanying VCF file describing variants or variant types, giving us no way to stratify by variant type as we did for HGSVC2. However, DandD is applicable regardless, since it simply accepts any FASTA inputs. We used DandD’s --norder 90 option to randomly generate a series of 90 possible permutations, 5 of which are shown in <xref rid="fig3" ref-type="fig">Figure 3</xref>B. In all cases, we computed a Heaps’-Law fit to the mean δ values and recorded the α openness statistic<xref rid="bib1" ref-type="bibr"><sup>1</sup></xref> for each. Fit values of α are reported in the <xref rid="fig3" ref-type="fig">Figure 3</xref> legends. As seen in <xref rid="fig3" ref-type="fig">Figure 3</xref>, all experiments showed sublinear growth in mean δ. For HGSVC2, we observed that “SNVs + SVs + Indels” had the highest δ overall, with “SNVs + Indels” having slightly lower values, and “SNVs only” having still lower values. This is expected, since the inclusion of each additional variant class should lead to new distinct sequence. The Heaps’-Law α was approximately the same for all three HGSVC2 variant subsets, <inline-formula><mml:math id="M7" altimg="si7.gif"><mml:mrow><mml:mo linebreak="goodbreak" linebreakstyle="after">≈</mml:mo><mml:mn>0.94</mml:mn></mml:mrow></mml:math></inline-formula> in all cases. Thus, all variant classes lead to the same conclusion about “openness” of the HGSVC2 pangenome, i.e., <inline-formula><mml:math id="M8" altimg="si8.gif"><mml:mrow><mml:mi>α</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">≤</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> indicates it is open. The HPRC data also showed sublinear growth, and a range of δ′s quite similar to those observed for HGSVC2. The Heaps’-Law <inline-formula><mml:math id="M9" altimg="si9.gif"><mml:mrow><mml:mi>α</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">=</mml:mo><mml:mn>0.873</mml:mn></mml:mrow></mml:math></inline-formula>, again indicating an open pangenome. The fact that α is lower for HPRC may indicate that the <italic>de novo</italic> assemblies from long reads give access to a wider array of genetic variants, which in turn requires more genomes to saturate the pangenome. However, this is hard to disentangle from the effects of sequencing errors, which can be counted (spuriously) as novel sequence. Removing the effect of sequencing errors is an important problem, which we return to in the Discussion.<fig id="fig3"><label>Figure 3</label><caption><p>Empirical growth of δ for human haplotypes from the HGSVC2 project (A) and the HPRC (B)</p><p>For (A), lines show mean value of δ for each genome count across all 120 orderings. Colors denote how the variants were subsetted before constructing the FASTA files given to DandD. E.g. the blue line corresponds to genomes edited to include SNVs, small indels and structural variants, whereas the green line corresponds to genomes edited to include only SNVs. For (B), the dotted line shows the mean value of δ at each genome count across all 90 orderings. The colored lines show the particular values of δ from a random subset of 5 orderings.</p></caption><graphic xlink:href="gr3"/></fig></p>
    </sec>
    <sec id="sec2.4">
      <title>A <italic>k</italic>-independent approach to openness</title>
      <p id="p0075">We evaluated how DandD’s k-independent approach can improve existing approaches for estimating pangenome openness. Past work characterized openness by compiling <italic>k</italic>-mer cardinality statistics across increasing subsets of genomes, then fitting a Heaps’-Law model to the <italic>k</italic>-mer cardinality growth function.<xref rid="bib1" ref-type="bibr"><sup>1</sup></xref> The fit value of the Heaps’-law α serves as an openness statistic, with <inline-formula><mml:math id="M10" altimg="si8.gif"><mml:mrow><mml:mi>α</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">≤</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> indicating an open pangenome and <inline-formula><mml:math id="M11" altimg="si10.gif"><mml:mrow><mml:mi>α</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">&gt;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> indicating a closed pangenome. We hypothesized that DandD’s <italic>k</italic>-independent approach could provide a robust basis for estimating opennness without having to choose a particular <italic>k</italic> ahead of time. We used benchmarking datasets from the AFproject.<xref rid="bib18" ref-type="bibr"><sup>18</sup></xref> These were created by the AFproject to evaluate alignment-free clustering methods. In particular, we used the 25 fish mitochondrial genomes and the 29 <italic>E. coli</italic> genomes from that benchmark. After building initial <italic>k</italic>-mer databases via DandD’s tree command in --exact mode, we used the progressive command with --ksweep --mink 2 --maxk 55 -n 20 to compute the number of distinct <italic>k</italic>-mers for <italic>k</italic> ranging from 2 to 55. These computations used KMC3 to count <italic>k</italic>-mers and used 20 random orderings to estimate the average increase in cardinality with each added genome. We then fit a Heaps’-Law function and obtained the fit value for the α parameter. We observed that for very small values of <italic>k</italic>, α was greater than 1, indicating a closed pangenome (<xref rid="fig4" ref-type="fig">Figure 4</xref>). This was expected since a very small value of <italic>k</italic> leads to rapid saturation of the space of possible <italic>k</italic>-mers as genomes are added. For increasing values of <italic>k</italic>, α decreased and eventually stabilized to a value less than 1, giving a more robust and convincing indicator of an open pangenome. When we considered the value of α obtained using δ (triangles in <xref rid="fig4" ref-type="fig">Figure 4</xref>), it was also less than 1, consistent with the fact that α stabilizes to a value less than 1 when computed with most informative values of <italic>k</italic>. In short, computing α using DandD does not require selecting a value of <italic>k</italic> but yields an α consistent with the stable part of the function given by a <italic>k</italic>-specific method.<fig id="fig4"><label>Figure 4</label><caption><p>Fit values for the Heaps’-law α as a function of <italic>k</italic> (red dots) and the value obtained by using the <italic>k</italic> selected by δ (dotted blue line)</p><p>The transition from “open” (<inline-formula><mml:math id="M12" altimg="si10.gif"><mml:mrow><mml:mi>α</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">&gt;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>) to “closed” (<inline-formula><mml:math id="M13" altimg="si10.gif"><mml:mrow><mml:mi>α</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">&gt;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>) values occurs at different threshold values of <italic>k</italic> for fish mitochondria (<inline-formula><mml:math id="M14" altimg="si23.gif"><mml:mrow><mml:mi>k</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">=</mml:mo><mml:mn>9</mml:mn></mml:mrow></mml:math></inline-formula>) and <italic>E. coli</italic> (<inline-formula><mml:math id="M15" altimg="si24.gif"><mml:mrow><mml:mi>k</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">=</mml:mo><mml:mn>13</mml:mn></mml:mrow></mml:math></inline-formula>). The values of <inline-formula><mml:math id="M16" altimg="si19.gif"><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>∗</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> which produce δ are slightly larger than the thresholds for both <italic>E. coli</italic> (<inline-formula><mml:math id="M17" altimg="si25.gif"><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>∗</mml:mo></mml:msup><mml:mo linebreak="goodbreak" linebreakstyle="after">=</mml:mo><mml:mn>14</mml:mn></mml:mrow></mml:math></inline-formula>) and fish mitochondria (<inline-formula><mml:math id="M18" altimg="si26.gif"><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>∗</mml:mo></mml:msup><mml:mo linebreak="goodbreak" linebreakstyle="after">=</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:math></inline-formula>).</p></caption><graphic xlink:href="gr4"/></fig></p>
    </sec>
    <sec id="sec2.5">
      <title>Evaluating <italic>k</italic>-Independent Jaccard</title>
      <p id="p0080">To evaluate the utility of the KIJ measure, we again used benchmarking datasets from the AFproject,<xref rid="bib18" ref-type="bibr"><sup>18</sup></xref> particularly the 25 fish mitochondrial genomes and the 29 <italic>E. coli</italic> genomes. For KIJ, we computed all pairwise distances between the sequences in the dataset. Since KIJ measures similarity, we ultimately report the distance, <inline-formula><mml:math id="M19" altimg="si11.gif"><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo></mml:mrow></mml:math></inline-formula> KIJ. From this point, we proceeded with the steps of the AFproject protocol, which constructs a tree from the pairwise-distances, then compares that truth to a curated tree. The ultimate result is a normalized version of the Robinson-Foulds distance (nRF), which measures the degree of structural difference between two trees having the same set of sequences at the leaves. A low nRF indicates that the distances provided reflected the true phylogenetic relationships between the sequences. Having done this for <inline-formula><mml:math id="M20" altimg="si11.gif"><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo></mml:mrow></mml:math></inline-formula> KIJ distances, we repeated the process for distances based on <italic>k</italic>-specific Jaccard coefficients for a range of <italic>k</italic>s. We computed <inline-formula><mml:math id="M21" altimg="si12.gif"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and reported a matrix of pairwise <inline-formula><mml:math id="M22" altimg="si13.gif"><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>J</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> distances for <inline-formula><mml:math id="M23" altimg="si14.gif"><mml:mrow><mml:mi>k</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">=</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math></inline-formula> to 59. nRFs obtained for each of these are shown in <xref rid="fig5" ref-type="fig">Figure 5</xref>. We observed that the accuracy of the tree predicted by the <inline-formula><mml:math id="M24" altimg="si13.gif"><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>J</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> distance depends on the choice of <italic>k</italic>. A too-small value of <italic>k</italic> leads to non-specific distances that cannot distinguish the phylogenetic relationships, leading to high nRF toward the left-hand side of the plots in <xref rid="fig5" ref-type="fig">Figure 5</xref>. A too-large value of <italic>k</italic> can deplete the number of common <italic>k</italic>-mers between related sequences in a way that obscures their relationship, as seen toward the right-hand side of the “25 fish mitochondria” plot in <xref rid="fig5" ref-type="fig">Figure 5</xref>, where nRF climbs after <italic>k</italic> grows past 25. The <inline-formula><mml:math id="M25" altimg="si11.gif"><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo></mml:mrow></mml:math></inline-formula> KIJ distance, on the other hand, strikes a balance between these extremes. In both cases, the <inline-formula><mml:math id="M26" altimg="si11.gif"><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo></mml:mrow></mml:math></inline-formula> KIJ distance achieves minimal nRF compared to all of the <inline-formula><mml:math id="M27" altimg="si13.gif"><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>J</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> distances.<fig id="fig5"><label>Figure 5</label><caption><p>Clustering based on KIJ distances achieves low normalized Robinson-Foulds (nRF) distance with respect to the true phylogeny compared to clusterings based on the typical Jaccard coefficient</p></caption><graphic xlink:href="gr5"/></fig></p>
    </sec>
  </sec>
  <sec id="sec3">
    <title>Discussion</title>
    <p id="p0085">As sequencing technology improves, new genome assemblies will arrive more quickly. It will be increasingly important to identify when a collection of genomes has reached a point of saturation, i.e., when it represents a taxonomic grouping in a complete fashion without excess accumulation of rare variation. Since pangenomes can be seen as collections of repetitive strings, theory concerning compressibility provides tools well suited to this problem. Building on the δ measure, DandD provides an efficient and interpretable way to measure the growth of pangenomes and compare large sequence collections. δ has theoretical advantages but is also remarkably easy to compute. Genomic sketches make δ particularly easy to estimate over pangenomes and their unions. Further, δ provides a parameter-free way of quantifying the amount of distinct sequence in a pangenome, sidestepping any dependence on parameters. The methods underlying DandD treat pangenomes as sets, with KIJ providing a quantification similar to the Jaccard coefficient between sets. However, another way to represent and sketch pangenomes would be as multisets, where each item (i.e., <italic>k</italic>-mer) has an associated count; e.g., the number of times it occurs in the pangenome. Genomic sketches like SetSketch can accommodate counts, and Dashing 2<xref rid="bib19" ref-type="bibr"><sup>19</sup></xref> can compute probability-weighted version of the Jaccard coefficient. In the future, it will be important to evaluate whether consideration of counts can be naturally combined with these compressibility measures. Past work suggests other ways to select a scenario-specific “best” <italic>k</italic>, for use with assembly or other algorithms. KmerGenie<xref rid="bib20" ref-type="bibr"><sup>20</sup></xref> uses <italic>k</italic>-mer count distributions to select the <italic>k</italic> that yields the most distinct high-count <italic>k</italic>-mers. While DandD’s method represents a simple and mathematically grounded way to choose <italic>k</italic>, some scenarios might require more information than DandD uses, such as the assembly scenario targeted by KmerGenie. Besides δ, other measures have been proposed that take the form of having cardinality in the numerator and some normalization factor or “penalty” in the denominator that is a function of <italic>k</italic>. An example is sequence space coverage (SSC) and its normalized version (NSSC) used by Bussi et al.<xref rid="bib21" ref-type="bibr"><sup>21</sup></xref> In that case, the denominator includes <inline-formula><mml:math id="M28" altimg="si15.gif"><mml:mrow><mml:msup><mml:mn>4</mml:mn><mml:mi>k</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula>, with modifications to account for guanine-cytosine (GC) bias and other factors. Importantly, the numerator is still the cardinality, and the denominator is still a simple function of <italic>k</italic> and <italic>n</italic> (total input sequence length). The methods proposed here, including the sketching methods, are equally applicable in that context, and will be applicable for any measure that includes cardinality as a key term. It should be possible to convert the <inline-formula><mml:math id="M29" altimg="si11.gif"><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo></mml:mrow></mml:math></inline-formula> KIJ distance measure (discussed in “Evaluating KIJ” in <xref rid="sec2" ref-type="sec">Results</xref>) into a Mash distance,<xref rid="bib9" ref-type="bibr"><sup>9</sup></xref> though with the additional complication that KIJ is a function of three separate δ measures, <inline-formula><mml:math id="M30" altimg="si16.gif"><mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>A</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="M31" altimg="si17.gif"><mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>B</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="M32" altimg="si18.gif"><mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo linebreak="badbreak">∪</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. These may use different underlying choices for <inline-formula><mml:math id="M33" altimg="si19.gif"><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>∗</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>, creating ambiguity in how <italic>k</italic> should be specified in the Mash distance formula. In the future, it will be important to study how to handle multiple distinct <italic>k</italic>’s in the Mash distance formula, and to evaluate how Mash distances derived from KIJ perform relative to those derived from <inline-formula><mml:math id="M34" altimg="si12.gif"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p>
    <sec id="sec3.1">
      <title>Limitations of the study</title>
      <p id="p0090">The progressive union function of DandD computes unions over several random orderings of the FASTA inputs. This is in contrast to other methods for which closed-form expressions are known.<xref rid="bib1" ref-type="bibr"><sup>1</sup></xref> The most accurate computations of δ will use exact <italic>k</italic>-mer counts. While DandD can employ KMC3 to obtain precise counts, building and querying a KMC database is substantially less efficient than sketching with Dashing. The notable increase time and memory usage reduces the convenience of DandD’s exact mode. The δ measure emerged from compression theory and lacks any intrinsic connection to population genetic measures like Nei’s genetic distance. Though δ has a relationship to Mash distance, the need to specify a single value of <italic>k</italic> in the Mash distance formula is not compatible with δ′s ability to choose different values of <italic>k</italic> for the marginal and joint components of the formula. Finally, use of δ may involve an implicit assumption that all <italic>k</italic>-mers are equally likely. This contrasts with biological reality, where some <italic>k</italic>-mers may be more likely due to the overall GC content of the genomes being compared. Other methods such as the normalized sequence space coverage (NSSC)<xref rid="bib21" ref-type="bibr"><sup>21</sup></xref> measure may be more useful in scenarios where such biological variables have a strong influence.</p>
    </sec>
  </sec>
  <sec id="sec4">
    <title>STAR★Methods</title>
    <sec id="sec4.1">
      <title>Key resources table</title>
      <p id="p0095">
        <table-wrap position="float" id="undtbl1">
          <table frame="hsides" rules="groups">
            <thead>
              <tr>
                <th>REAGENT or RESOURCE</th>
                <th>SOURCE</th>
                <th>IDENTIFIER</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td colspan="3">
                  <bold>Deposited data</bold>
                </td>
              </tr>
              <tr>
                <td colspan="3">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td>28 <italic>Homo sapiens</italic> phased genome assemblies</td>
                <td>Human Pangenome Reference Consortium; <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5281/zenodo.5826274" id="intref0015">https://doi.org/10.5281/zenodo.5826274</ext-link></td>
                <td>
                  <ext-link ext-link-type="uri" xlink:href="https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure3_hprc.txt" id="intref0020">https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure3_hprc.txt</ext-link>
                </td>
              </tr>
              <tr>
                <td>26 <italic>Homo sapiens</italic> full genomes -- integrated variant call sets</td>
                <td>Human Structural Variation Consortium phase 2; <ext-link ext-link-type="uri" xlink:href="https://www.internationalgenome.org/data-portal/data-collection/hgsvc2" id="intref0025">https://www.internationalgenome.org/data-portal/data-collection/hgsvc2</ext-link></td>
                <td>
                  <ext-link ext-link-type="uri" xlink:href="https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure3_hgsvc2.txt" id="intref0030">https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure3_hgsvc2.txt</ext-link>
                </td>
              </tr>
              <tr>
                <td>29 <italic>Escherichia coli</italic> assembled genomes</td>
                <td>AFproject; <ext-link ext-link-type="uri" xlink:href="https://afproject.org/app/benchmark/genome/std/assembled/ecoli/dataset/" id="intref0035">https://afproject.org/app/benchmark/genome/std/assembled/ecoli/dataset/</ext-link></td>
                <td>
                  <ext-link ext-link-type="uri" xlink:href="https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure4_ecoli.txt" id="intref0040">https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure4_ecoli.txt</ext-link>
                </td>
              </tr>
              <tr>
                <td>25 fish mitochondria (mtDNA) assembled genomes</td>
                <td>AFproject; <ext-link ext-link-type="uri" xlink:href="https://afproject.org/app/benchmark/genome/std/assembled/fish_mito/dataset/" id="intref0045">https://afproject.org/app/benchmark/genome/std/assembled/fish_mito/dataset/</ext-link></td>
                <td>
                  <ext-link ext-link-type="uri" xlink:href="https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure4_fish-mito.txt" id="intref0050">https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure4_fish-mito.txt</ext-link>
                </td>
              </tr>
              <tr>
                <td>12 <italic>Homo Sapiens</italic> reference genomes, GRCh38</td>
                <td>NCBI GenBank</td>
                <td>
                  <ext-link ext-link-type="uri" xlink:href="https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure1_human.txt" id="intref0055">https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure1_human.txt</ext-link>
                </td>
              </tr>
              <tr>
                <td>10 <italic>Escherichia coli</italic> genome assemblies</td>
                <td>NCBI RefSeq</td>
                <td>
                  <ext-link ext-link-type="uri" xlink:href="https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/table1_ecoli.txt" id="intref0060">https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/table1_ecoli.txt</ext-link>
                </td>
              </tr>
              <tr>
                <td>60 <italic>Salmonella enterica</italic> genome assemblies</td>
                <td>NCBI RefSeq</td>
                <td><ext-link ext-link-type="uri" xlink:href="https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/table1_salmonella.txt" id="intref0065">https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/table1_salmonella.txt</ext-link> and <ext-link ext-link-type="uri" xlink:href="https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure2_salmonella.txt" id="intref0070">https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure2_salmonella.txt</ext-link></td>
              </tr>
              <tr>
                <td colspan="3">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td colspan="3">
                  <bold>Software and algorithms</bold>
                </td>
              </tr>
              <tr>
                <td colspan="3">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td>DandD</td>
                <td>This Study</td>
                <td>Zenodo DOI; <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5281/zenodo.10138641" id="intref0075">https://doi.org/10.5281/zenodo.10138641</ext-link><break/>GitHub: <ext-link ext-link-type="uri" xlink:href="https://github.com/jessicabonnie/dandd" id="intref0080">https://github.com/jessicabonnie/dandd</ext-link><break/>Experiments GitHub: <ext-link ext-link-type="uri" xlink:href="https://github.com/jessicabonnie/dandd_experiments" id="intref0085">https://github.com/jessicabonnie/dandd_experiments</ext-link></td>
              </tr>
              <tr>
                <td>Dashing</td>
                <td>Baker &amp; Langmead</td>
                <td>DOI: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1101/501726" id="intref0090">https://doi.org/10.1101/501726</ext-link> ; GitHub: <ext-link ext-link-type="uri" xlink:href="https://github.com/dnbaker/dashing" id="intref0095">https://github.com/dnbaker/dashing</ext-link></td>
              </tr>
              <tr>
                <td>KMC3</td>
                <td>REFRESH Bioinformatics Group</td>
                <td>GitHub: <ext-link ext-link-type="uri" xlink:href="https://github.com/refresh-bio/KMC/tree/v3.2.2" id="intref0100">https://github.com/refresh-bio/KMC/tree/v3.2.2</ext-link></td>
              </tr>
            </tbody>
          </table>
        </table-wrap>
      </p>
    </sec>
    <sec id="sec4.2">
      <title>Resource availability</title>
      <sec id="sec4.2.1">
        <title>Lead contact</title>
        <p id="p0100">Further information and requests for resources and reagents should be directed to and will be fulfilled by the lead contact, Ben Langmead (<email>langmea@cs.jhu.edu</email>).</p>
      </sec>
      <sec id="sec4.2.2">
        <title>Materials availability</title>
        <p id="p0105">This study did not generate new unique reagents.</p>
      </sec>
      <sec sec-type="data-availability" id="sec4.2.3">
        <title>Data and code availability</title>
        <p id="p0110">
          <list list-type="simple" id="ulist0015">
            <list-item id="u0025">
              <label>•</label>
              <p id="p0115">This paper analyzes existing, publicly available data. These accession numbers for the datasets are listed in the <xref rid="sec4.1" ref-type="sec">key resources table</xref>.</p>
            </list-item>
            <list-item id="u0030">
              <label>•</label>
              <p id="p0120">All original code has been deposited at Zenodo and is publicly available as of the date of publication. DOIs are listed in the <xref rid="sec4.1" ref-type="sec">key resources table</xref>.</p>
            </list-item>
            <list-item id="u0035">
              <label>•</label>
              <p id="p0125">Any additional information required to reanalyze the data reported in this paper is available from the <xref rid="sec4.2.1" ref-type="sec">lead contact</xref> upon request.</p>
            </list-item>
          </list>
        </p>
      </sec>
    </sec>
    <sec id="sec4.3">
      <title>Method details</title>
      <sec id="sec4.3.1">
        <title>The delta compressibility measure</title>
        <p id="p0130">Various measures have been proposed for how to quantify the amount of distinct sequence in a pangenome. Some of these measures identified as byproducts of particular compression strategies. For instance, the measure <italic>z</italic> is derived by computing a Lempel-Ziv parse of the pangenome;<xref rid="bib5" ref-type="bibr"><sup>5</sup></xref>
<italic>z</italic> is equal to the number of phrases in that parse. The measure <italic>r</italic> is obtained by computing the Burrows-Wheeler Transform (BWT) of the pangenome;<xref rid="bib4" ref-type="bibr"><sup>4</sup></xref>
<italic>r</italic> is equal to the number of maximal same-letter runs in the BWT-transformed string. Other proposals generalize the notion of compressibility to be independent of any compression strategy, such as the string-attractor γ.<xref rid="bib6" ref-type="bibr"><sup>6</sup></xref> Delta (δ) is another measure of compressibility, defined over a pangenome <italic>S</italic>:<disp-formula id="fd1"><label>(Equation 1)</label><mml:math id="M35" altimg="si27.gif"><mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="badbreak">=</mml:mo><mml:munder><mml:mi>max</mml:mi><mml:mi>k</mml:mi></mml:munder><mml:mfrac><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mi>k</mml:mi></mml:mfrac></mml:mrow></mml:math></disp-formula>where <inline-formula><mml:math id="M36" altimg="si3.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> is the number of distinct length-<italic>k</italic> substrings among all strings in <italic>S</italic>. We use <inline-formula><mml:math id="M37" altimg="si19.gif"><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>∗</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> to denote the value of <italic>k</italic> that achieves the maximum. When <italic>S</italic> consists of a single string <italic>s</italic>, the expression <inline-formula><mml:math id="M38" altimg="si28.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="goodbreak" linebreakstyle="after">/</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula> can be considered to undergo three phases of growth with respect to <italic>k</italic>. For values of <italic>k</italic> that are so short that virtually all possible <italic>k</italic>-mer arrangements of the alphabet appear in <italic>s</italic>, <inline-formula><mml:math id="M39" altimg="si28.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="goodbreak" linebreakstyle="after">/</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula> grows exponentially. For values of <italic>k</italic> approaching <inline-formula><mml:math id="M40" altimg="si29.gif"><mml:mrow><mml:mo>|</mml:mo><mml:mi>s</mml:mi><mml:mo>|</mml:mo></mml:mrow></mml:math></inline-formula>. , <inline-formula><mml:math id="M41" altimg="si28.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="goodbreak" linebreakstyle="after">/</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula> decreases linearly as <italic>k</italic>-mers outgrow <italic>s</italic>, eventually reaching 1 when <inline-formula><mml:math id="M42" altimg="si30.gif"><mml:mrow><mml:mi>k</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">=</mml:mo><mml:mrow><mml:mo>|</mml:mo><mml:mi>s</mml:mi><mml:mo>|</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. For intermediate values of <italic>k</italic>, these trends are in tension; increasing <italic>k</italic> both increases the space of possible <italic>k</italic>-mers, but eventually stops gaining many new distinct <italic>k</italic>-mers. Choosing the <italic>k</italic> that maximizes <inline-formula><mml:math id="M43" altimg="si28.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="goodbreak" linebreakstyle="after">/</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula> identifies this point of diminishing returns. While it is useful to think in terms of these phases, it is important to note that the growth of <inline-formula><mml:math id="M44" altimg="si28.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="goodbreak" linebreakstyle="after">/</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula> is not strictly bitonic, i.e. it does not necessarily grow monotonically, reach a peak, then fall monotonically. Rather it can experience local fluctuations leading to non-global maxima. δ is insensitive to full-string reversals and monotone with respect to appending or prepending symbols to <italic>S</italic>. The <italic>k</italic> in the denominator of <xref rid="fd1" ref-type="disp-formula">Equation 1</xref> links δ to other measures. For instance, with <italic>k</italic> in the denominator for δ, it is easy to show that <inline-formula><mml:math id="M45" altimg="si1.gif"><mml:mrow><mml:mi>δ</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">≤</mml:mo><mml:mi>γ</mml:mi></mml:mrow></mml:math></inline-formula>, where γ is the string attractor size.<xref rid="bib3" ref-type="bibr"><sup>3</sup></xref> As a function of the substring composition of <italic>S</italic>, δ is comparatively easy to compute relative to other measures. The computation of <italic>z</italic> or <italic>r</italic> is concerned with the entirety of <italic>S</italic>, whereas δ can be computed incrementally by considering substrings of the members of <italic>S</italic> one-by-one. The advantages of this incremental approach are two-fold: (a) δ can be computed simply and in linear time by scanning <italic>S</italic> and counting <italic>k</italic>-mers for an appropriate range of values of <italic>k</italic>, and (b) DNA <italic>k</italic>-mers can be “canonicalized” at the outset, allowing DNA strings and their reverse complements to be treated as equivalent for the purpose of computing δ, as is common. During a single scan of <italic>S</italic>, each <italic>k</italic>-mer can be tallied either as itself or as its reverse complement (whichever is lexicographically smaller). For <italic>z</italic> and <italic>r</italic>, allowing for equal treatment of forward and reverse complement strands would require a more drastic approach, e.g. first concatenating <italic>S</italic> with its reverse complement, then running the corresponding algorithm.</p>
      </sec>
      <sec id="sec4.3.2">
        <title>Estimating cardinality</title>
        <p id="p0135">mer counting is resource intensive, potentially requiring a large memory footprint for pangenome inputs. Instead, we propose a method for estimating δ by estimating the numerator <inline-formula><mml:math id="M46" altimg="si3.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> (i.e. the cardinality) from <xref rid="fd1" ref-type="disp-formula">Equation 1</xref>. The Dashing<xref rid="bib11" ref-type="bibr"><sup>11</sup></xref> tool, while chiefly used to estimate similarities between sequencing datasets, can also be used to estimate cardinalities like this via its dashing card function, which uses Ertl’s maximum likelihood estimator.<xref rid="bib11" ref-type="bibr"><sup>11</sup></xref><sup>,</sup><xref rid="bib22" ref-type="bibr"><sup>22</sup></xref> Genomic sketches are composable, meaning that sketches built over datasets <italic>A</italic> and <italic>B</italic> can be easily combined to form the sketch for <inline-formula><mml:math id="M47" altimg="si31.gif"><mml:mrow><mml:mi>A</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">∪</mml:mo><mml:mi>B</mml:mi></mml:mrow></mml:math></inline-formula>. In the case of HyperLogLog sketches, this is accomplished by simply taking the elementwise maximum of the register values for the sketches of <italic>A</italic> and <italic>B</italic>. The resulting sketch is identical to the one that would have resulted from sketching <inline-formula><mml:math id="M48" altimg="si31.gif"><mml:mrow><mml:mi>A</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">∪</mml:mo><mml:mi>B</mml:mi></mml:mrow></mml:math></inline-formula>. Since registers usually number in the thousands-to-millions range, this is a fast operation, using only sequential memory accesses.</p>
      </sec>
      <sec id="sec4.3.3">
        <title>Estimating delta</title>
        <p id="p0140">To estimate δ, we seek the substring length <italic>k</italic> giving maximal <inline-formula><mml:math id="M49" altimg="si28.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="goodbreak" linebreakstyle="after">/</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula>, which we denote <inline-formula><mml:math id="M50" altimg="si19.gif"><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>∗</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>. Determining <inline-formula><mml:math id="M51" altimg="si19.gif"><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>∗</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> requires a scan, similar to a root-finding procedure. DandD accomplishes this with a simple sweep starting from a user specified initial value of <italic>k</italic>. The sweep tries successively larger and smaller values of <italic>k</italic>, searching for three consecutive values of <italic>k</italic> such that:<disp-formula id="fd2"><label>(Equation 2)</label><mml:math id="M52" altimg="si32.gif"><mml:mrow><mml:mfrac><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac><mml:mo linebreak="goodbreak">&lt;</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mfrac><mml:mo linebreak="goodbreak">&gt;</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo linebreak="badbreak">+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo linebreak="badbreak">+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac></mml:mrow></mml:math></disp-formula></p>
        <p id="p0145">By default, DandD begins its search at <inline-formula><mml:math id="M53" altimg="si33.gif"><mml:mrow><mml:mi>k</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">=</mml:mo><mml:mn>14</mml:mn></mml:mrow></mml:math></inline-formula>. The final value of <inline-formula><mml:math id="M54" altimg="si19.gif"><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>∗</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> is dataset-dependent, as illustrated in <xref rid="fig1" ref-type="fig">Figure 1</xref>, which shows a 0-1 normalized version of δ for human, E. coli and salmonella pangenomes. In some of DandD’s modes (such as progressive and kij), it computes δ with respect to the union of two or more inputs for which it has previously computed δ. In such cases, DandD initializes the search for the union <inline-formula><mml:math id="M55" altimg="si19.gif"><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>∗</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> by taking the maximum of the previously-computed <inline-formula><mml:math id="M56" altimg="si34.gif"><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>∗</mml:mo></mml:msup><mml:mi>s</mml:mi></mml:mrow></mml:math></inline-formula> of the inputs.<fig id="fig1"><label>Figure 1</label><caption><p>Different pangenomes find their maxima at different values of <italic>k</italic></p><p>Vertical axis shows <inline-formula><mml:math id="M57" altimg="si20.gif"><mml:mrow><mml:mfrac><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mi>k</mml:mi></mml:mfrac></mml:mrow></mml:math></inline-formula> standardized to between 0 and 1 per pangenome. Each pangenome is comprised of multiple distinct genome sequences: <italic>H. sapiens</italic> (<inline-formula><mml:math id="M58" altimg="si21.gif"><mml:mrow><mml:mi>n</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">=</mml:mo><mml:mn>12</mml:mn></mml:mrow></mml:math></inline-formula>), <italic>E.coli</italic> (<inline-formula><mml:math id="M59" altimg="si22.gif"><mml:mrow><mml:mi>n</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">=</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:math></inline-formula>), and <italic>S. enterica</italic> (<inline-formula><mml:math id="M60" altimg="si22.gif"><mml:mrow><mml:mi>n</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">=</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:math></inline-formula>).</p></caption><graphic xlink:href="gr1"/></fig></p>
      </sec>
      <sec id="sec4.3.4">
        <title>Characterizing sublinear growth</title>
        <p id="p0150">DandD, via the DandD progressive command, can characterize the rate of growth of a pangenome by measuring δ with respect to cumulative subsets of its constituent genomes. For small pangenomes (up to 6–7 genomes), it can be practical to examine all possible orderings (permutations) of the genomes. However, for larger real-world pangenomes, it is sufficient to use a random subset of all possible orderings. This method provides a way to estimate the average δ for subsets of a given size. That is, by taking the mean of all the values for δ obtained after adding the <inline-formula><mml:math id="M61" altimg="si35.gif"><mml:mrow><mml:msup><mml:mi>i</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>h</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> genome in each ordering, we have an estimate for <inline-formula><mml:math id="M62" altimg="si36.gif"><mml:mrow><mml:mi>δ</mml:mi></mml:mrow></mml:math></inline-formula>(all size-<italic>i</italic> subsets). Past methods for characterizing pangenome growth also made use of random orderings of large collections. These methods seek to determine whether the pangenome is “open” (still accumulating new sequence), or “closed” (substantially complete).<xref rid="bib1" ref-type="bibr"><sup>1</sup></xref><sup>,</sup><xref rid="bib23" ref-type="bibr"><sup>23</sup></xref><sup>,</sup><xref rid="bib24" ref-type="bibr"><sup>24</sup></xref> DandD provides a new way of performing this analysis over genome sequences in a parameter-free way, not requiring foreknowledge of where genes are located or how to choose an appropriate value of <italic>k</italic>. The DandD progressive command allows the user to provide a set of genomes and a desired number of orderings to try. DandD will then (1) preprocess all of the inputs individually, (2) generate the random orderings, and then (3) iterate through each ordering, “progressively” building larger unions by accumulating one more genome at each step. The DandD progressive command outputs a file describing, for each step of each ordering, which genome was added in that step and the value of δ for the new union. Besides giving useful plots (seen in “<xref rid="sec2.3" ref-type="sec">Using DandD to characterize sublinearity and openness</xref>” in <xref rid="sec2" ref-type="sec">Results</xref>), this output can be used to fit a Heap’s Law model to the change in delta (<inline-formula><mml:math id="M63" altimg="si37.gif"><mml:mrow><mml:mo>Δ</mml:mo><mml:mi>δ</mml:mi></mml:mrow></mml:math></inline-formula>) at each step. After fitting, the fit value of the Heaps’-Law α parameter can be used to characterize whether the pangenome is open (<inline-formula><mml:math id="M64" altimg="si8.gif"><mml:mrow><mml:mi>α</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">≤</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>) or closed (<inline-formula><mml:math id="M65" altimg="si10.gif"><mml:mrow><mml:mi>α</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">&gt;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>).</p>
      </sec>
      <sec id="sec4.3.5">
        <title><italic>k</italic>-independent Jaccard</title>
        <p id="p0155">The Jaccard coefficient is a widely used metric for comparing large datasets:<disp-formula id="fd3"><label>(Equation 3)</label><mml:math id="M66" altimg="si38.gif"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo>,</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="badbreak">=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo linebreak="badbreak">∩</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo linebreak="badbreak">∪</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mrow></mml:math></disp-formula></p>
        <p id="p0160">For consistency we use <inline-formula><mml:math id="M67" altimg="si39.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>A</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> (rather than <inline-formula><mml:math id="M68" altimg="si40.gif"><mml:mrow><mml:msub><mml:mrow><mml:mo>|</mml:mo><mml:mi>A</mml:mi><mml:mo>|</mml:mo></mml:mrow><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>) to denote the cardinality of the set of <italic>k</italic>-mers in a collection of strings <italic>A</italic>. Methods like MinHash estimate this quantity directly. Methods based on the HyperLogLog sketch, like Dashing, obtain separate cardinalities <inline-formula><mml:math id="M69" altimg="si39.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>A</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="M70" altimg="si41.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>B</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="M71" altimg="si42.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo linebreak="badbreak">∪</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> and compute <inline-formula><mml:math id="M72" altimg="si12.gif"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> using an expression equivalent (by the inclusion-exclusion principle) to the one above:<disp-formula id="fd4"><label>(Equation 4)</label><mml:math id="M73" altimg="si43.gif"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo>,</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="badbreak">=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>A</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="badbreak">+</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>B</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo linebreak="badbreak">∪</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo linebreak="badbreak">∪</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mrow></mml:math></disp-formula></p>
        <p id="p0165">The above expressions have <italic>k</italic>-mer length <italic>k</italic> as a parameter. To obtain a <italic>k</italic>-independent notion of Jaccard coefficient, we replace <inline-formula><mml:math id="M74" altimg="si44.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> with δ:<disp-formula id="fd5"><label>(Equation 5)</label><mml:math id="M75" altimg="si45.gif"><mml:mrow><mml:mtext>KIJ</mml:mtext><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo>,</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="badbreak">=</mml:mo><mml:mfrac><mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>A</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="badbreak">+</mml:mo><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>B</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo linebreak="badbreak">∪</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo linebreak="badbreak">∪</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mrow></mml:math></disp-formula></p>
        <p id="p0170">Following this formula, the task of computing or estimating <italic>k</italic>-Independent Jaccard (KIJ) reduces to the task of obtaining <inline-formula><mml:math id="M76" altimg="si16.gif"><mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>A</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="M77" altimg="si17.gif"><mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>B</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="M78" altimg="si18.gif"><mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo linebreak="badbreak">∪</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> (or estimates thereof). DandD provides a command (dandd kij) to compute all-pairwise KIJs given two or more input FASTA files. Since downstream tools may expect to receive distances rather than similarities, DandD can output all-pairwise <inline-formula><mml:math id="M79" altimg="si11.gif"><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo></mml:mrow></mml:math></inline-formula> KIJs instead. If users wish to produce their own scans of likely <italic>k</italic>s for the original jaccard metric they can add the --jaccard command along with --mink and --maxk to specify a range.</p>
      </sec>
      <sec id="sec4.3.6">
        <title>Caching and lazy evaluation of sketches</title>
        <p id="p0175">The most time and memory intensive step of solving for δ is the creation of the component sketches from the input FASTA files. Computationally, it is far simpler to produce the union of two or more sketches or estimate cardinality from existing sketches. Given these uneven resource requirements, DandD is designed to reuse sketches within tasks and across experiments within the same pangenome. DandD reduces its footprint and prevents the production of duplicate sketches by caching sketches on the file system and tracking the sketches it has already built. To maintain the association between a union sketch and its component FASTAs, the sketch file is named using a checksum over the constituent FASTAs as computed by the cryptographic hash function BLAKE. This serves a dual purpose of insuring that each combination of input FASTAs is sketched only once, regardless of order, and providing a mechanism to confirm agreement between the currently available FASTAs and any information pertaining to them that may be stored within DandD’s tree structure. In addition to a naming convention, DandD also creates a directory structure to store intermediate sketches and databases for easy reuse and access. When the user specifies the same sketch directory across many invocations of DandD, they will maximize the benefit of reusing sketch files.</p>
      </sec>
      <sec id="sec4.3.7">
        <title>Exact mode</title>
        <p id="p0180">DandD includes an “exact” option (--exact) which enables computation of δ directly by way of <italic>k</italic>-mer counting. This option can be used in combination with any of DandD’s modes (tree, progressive, kij, etc). Instead of using Dashing, “exact” mode uses KMC3 for counting (via the kmc command) and unioning (via kmc_tools complex).<xref rid="bib7" ref-type="bibr"><sup>7</sup></xref> Just as Dashing must build a sketch prior to estimating cardinalities, KMC3 builds a “database” of <italic>k</italic>-mer counts for each combination. Note that while unioning two Dashing sketches requires only an elementwise maximum over the sketches, unioning two KMC databases requires a merge sort over all the <italic>k</italic>-mers and counts. This can be quite expensive, as detailed in <xref rid="tbl1" ref-type="table">Table 1</xref>. DandD’s file naming scheme together with the metadata it saves allows users to locate KMC databases and Dashing sketches corresponding to particular inputs and their unions. This facilitates further experimentation; i.e. a user can use KMC3’s tools to explore which <italic>k</italic>-mers contributed to a particularly large increase in δ.</p>
      </sec>
    </sec>
  </sec>
</body>
<back>
  <ref-list id="cebib0010">
    <title>References</title>
    <ref id="bib1">
      <label>1</label>
      <element-citation publication-type="journal" id="sref1">
        <person-group person-group-type="author">
          <name>
            <surname>Parmigiani</surname>
            <given-names>L.</given-names>
          </name>
          <name>
            <surname>Wittler</surname>
            <given-names>R.</given-names>
          </name>
          <name>
            <surname>Stoye</surname>
            <given-names>J.</given-names>
          </name>
        </person-group>
        <article-title>Revisiting pangenome openness with k-mers</article-title>
        <comment>Preprint at</comment>
        <source>bioRxiv</source>
        <year>2022</year>
        <pub-id pub-id-type="doi">10.1101/2022.11.15.516472</pub-id>
      </element-citation>
    </ref>
    <ref id="bib2">
      <label>2</label>
      <element-citation publication-type="journal" id="sref2">
        <person-group person-group-type="author">
          <name>
            <surname>Sherman</surname>
            <given-names>R.M.</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>S.L.</given-names>
          </name>
        </person-group>
        <article-title>Pan-genomics in the human genome era</article-title>
        <source>Nat. Rev. Genet.</source>
        <volume>21</volume>
        <year>2020</year>
        <fpage>243</fpage>
        <lpage>254</lpage>
        <pub-id pub-id-type="pmid">32034321</pub-id>
      </element-citation>
    </ref>
    <ref id="bib3">
      <label>3</label>
      <element-citation publication-type="journal" id="sref3">
        <person-group person-group-type="author">
          <name>
            <surname>Kociumaka</surname>
            <given-names>T.</given-names>
          </name>
          <name>
            <surname>Navarro</surname>
            <given-names>G.</given-names>
          </name>
          <name>
            <surname>Prezza</surname>
            <given-names>N.</given-names>
          </name>
        </person-group>
        <article-title>Towards a definitive compressibility measure for repetitive sequences</article-title>
        <source>IEEE Trans. Inf. Theor.</source>
        <volume>69</volume>
        <year>2023</year>
        <fpage>2074</fpage>
        <lpage>2092</lpage>
      </element-citation>
    </ref>
    <ref id="bib4">
      <label>4</label>
      <element-citation publication-type="book" id="sref4">
        <person-group person-group-type="author">
          <name>
            <surname>Burrows</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Wheeler</surname>
            <given-names>D.</given-names>
          </name>
        </person-group>
        <part-title>A block-sorting lossless data compression algorithm</part-title>
        <source>Digital SRC Research Report, Citeseer</source>
        <year>1994</year>
      </element-citation>
    </ref>
    <ref id="bib5">
      <label>5</label>
      <element-citation publication-type="journal" id="sref5">
        <person-group person-group-type="author">
          <name>
            <surname>Ziv</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Lempel</surname>
            <given-names>A.</given-names>
          </name>
        </person-group>
        <article-title>A universal algorithm for sequential data compression</article-title>
        <source>IEEE Trans. Inf. Theor.</source>
        <volume>23</volume>
        <year>1977</year>
        <fpage>337</fpage>
        <lpage>343</lpage>
      </element-citation>
    </ref>
    <ref id="bib6">
      <label>6</label>
      <element-citation publication-type="book" id="sref6">
        <person-group person-group-type="author">
          <name>
            <surname>Kempa</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Prezza</surname>
            <given-names>N.</given-names>
          </name>
        </person-group>
        <part-title>At the roots of dictionary compression: string attractors</part-title>
        <source>Proceedings of the 50th Annual ACM SIGACT Symposium on Theory of Computing</source>
        <year>2018</year>
        <fpage>827</fpage>
        <lpage>840</lpage>
      </element-citation>
    </ref>
    <ref id="bib7">
      <label>7</label>
      <element-citation publication-type="journal" id="sref7">
        <person-group person-group-type="author">
          <name>
            <surname>Kokot</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Dlugosz</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Deorowicz</surname>
            <given-names>S.</given-names>
          </name>
        </person-group>
        <article-title>KMC 3: counting and manipulating k-mer statistics</article-title>
        <source>Bioinformatics</source>
        <volume>33</volume>
        <year>2017</year>
        <fpage>2759</fpage>
        <lpage>2761</lpage>
        <pub-id pub-id-type="pmid">28472236</pub-id>
      </element-citation>
    </ref>
    <ref id="bib8">
      <label>8</label>
      <element-citation publication-type="book" id="sref8">
        <person-group person-group-type="author">
          <name>
            <surname>Broder</surname>
            <given-names>A.Z.</given-names>
          </name>
        </person-group>
        <part-title>On the resemblance and containment of documents</part-title>
        <source>Proceedings. Compression and Complexity of SEQUENCES 1997 (Cat. No. 97TB100171)</source>
        <year>1997</year>
        <publisher-name>IEEE</publisher-name>
        <fpage>21</fpage>
        <lpage>29</lpage>
      </element-citation>
    </ref>
    <ref id="bib9">
      <label>9</label>
      <element-citation publication-type="journal" id="sref9">
        <person-group person-group-type="author">
          <name>
            <surname>Ondov</surname>
            <given-names>B.D.</given-names>
          </name>
          <name>
            <surname>Treangen</surname>
            <given-names>T.J.</given-names>
          </name>
          <name>
            <surname>Melsted</surname>
            <given-names>P.</given-names>
          </name>
          <name>
            <surname>Mallonee</surname>
            <given-names>A.B.</given-names>
          </name>
          <name>
            <surname>Bergman</surname>
            <given-names>N.H.</given-names>
          </name>
          <name>
            <surname>Koren</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>A.M.</given-names>
          </name>
        </person-group>
        <article-title>Mash: fast genome and metagenome distance estimation using MinHash</article-title>
        <source>Genome Biol.</source>
        <volume>17</volume>
        <year>2016</year>
        <fpage>132</fpage>
        <pub-id pub-id-type="pmid">27323842</pub-id>
      </element-citation>
    </ref>
    <ref id="bib10">
      <label>10</label>
      <element-citation publication-type="book" id="sref10">
        <person-group person-group-type="author">
          <name>
            <surname>Meunier</surname>
            <given-names>F.</given-names>
          </name>
          <name>
            <surname>Gandouet</surname>
            <given-names>O.</given-names>
          </name>
          <name>
            <surname>Fusy</surname>
            <given-names>É.</given-names>
          </name>
          <name>
            <surname>Flajolet</surname>
            <given-names>P.</given-names>
          </name>
        </person-group>
        <part-title>Hyperloglog: The Analysis of a Near-Optimal Cardinality Estimation Algorithm</part-title>
        <year>2007</year>
        <publisher-name>Discrete Mathematics &amp; Theoretical Computer Science</publisher-name>
      </element-citation>
    </ref>
    <ref id="bib11">
      <label>11</label>
      <element-citation publication-type="journal" id="sref11">
        <person-group person-group-type="author">
          <name>
            <surname>Baker</surname>
            <given-names>D.N.</given-names>
          </name>
          <name>
            <surname>Langmead</surname>
            <given-names>B.</given-names>
          </name>
        </person-group>
        <article-title>Dashing: fast and accurate genomic distances with HyperLogLog</article-title>
        <source>Genome Biol.</source>
        <volume>20</volume>
        <year>2019</year>
        <fpage>265</fpage>
        <pub-id pub-id-type="pmid">31801633</pub-id>
      </element-citation>
    </ref>
    <ref id="bib12">
      <label>12</label>
      <element-citation publication-type="journal" id="sref12">
        <person-group person-group-type="author">
          <name>
            <surname>Boucher</surname>
            <given-names>C.</given-names>
          </name>
          <name>
            <surname>Gagie</surname>
            <given-names>T.</given-names>
          </name>
          <name>
            <surname>Kuhnle</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Langmead</surname>
            <given-names>B.</given-names>
          </name>
          <name>
            <surname>Manzini</surname>
            <given-names>G.</given-names>
          </name>
          <name>
            <surname>Mun</surname>
            <given-names>T.</given-names>
          </name>
        </person-group>
        <article-title>Prefix-free parsing for building big BWTs</article-title>
        <source>Algorithm Mol. Biol.</source>
        <volume>14</volume>
        <year>2019</year>
        <fpage>13</fpage>
      </element-citation>
    </ref>
    <ref id="bib13">
      <label>13</label>
      <element-citation publication-type="book" id="sref13">
        <person-group person-group-type="author">
          <name>
            <surname>Hong</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Rossi</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Boucher</surname>
            <given-names>C.</given-names>
          </name>
        </person-group>
        <part-title>Lz77 via prefix-free parsing</part-title>
        <source>2023 Proceedings of the Symposium on Algorithm Engineering and Experiments (ALENEX)</source>
        <year>2023</year>
        <publisher-name>SIAM</publisher-name>
        <fpage>123</fpage>
        <lpage>134</lpage>
      </element-citation>
    </ref>
    <ref id="bib14">
      <label>14</label>
      <element-citation publication-type="journal" id="sref14">
        <person-group person-group-type="author">
          <name>
            <surname>Chaisson</surname>
            <given-names>M.J.P.</given-names>
          </name>
          <name>
            <surname>Sanders</surname>
            <given-names>A.D.</given-names>
          </name>
          <name>
            <surname>Zhao</surname>
            <given-names>X.</given-names>
          </name>
          <name>
            <surname>Malhotra</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Porubsky</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Rausch</surname>
            <given-names>T.</given-names>
          </name>
          <name>
            <surname>Gardner</surname>
            <given-names>E.J.</given-names>
          </name>
          <name>
            <surname>Rodriguez</surname>
            <given-names>O.L.</given-names>
          </name>
          <name>
            <surname>Guo</surname>
            <given-names>L.</given-names>
          </name>
          <name>
            <surname>Collins</surname>
            <given-names>R.L.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Multi-platform discovery of haplotype-resolved structural variation in human genomes</article-title>
        <source>Nat. Commun.</source>
        <volume>10</volume>
        <year>2019</year>
        <fpage>1784</fpage>
        <pub-id pub-id-type="pmid">30992455</pub-id>
      </element-citation>
    </ref>
    <ref id="bib15">
      <label>15</label>
      <element-citation publication-type="journal" id="sref15">
        <person-group person-group-type="author">
          <name>
            <surname>Ebert</surname>
            <given-names>P.</given-names>
          </name>
          <name>
            <surname>Audano</surname>
            <given-names>P.A.</given-names>
          </name>
          <name>
            <surname>Zhu</surname>
            <given-names>Q.</given-names>
          </name>
          <name>
            <surname>Rodriguez-Martin</surname>
            <given-names>B.</given-names>
          </name>
          <name>
            <surname>Porubsky</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Bonder</surname>
            <given-names>M.J.</given-names>
          </name>
          <name>
            <surname>Sulovari</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Ebler</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Zhou</surname>
            <given-names>W.</given-names>
          </name>
          <name>
            <surname>Serra Mari</surname>
            <given-names>R.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Haplotype-resolved diverse human genomes and integrated analysis of structural variation</article-title>
        <source>Science</source>
        <volume>372</volume>
        <year>2021</year>
        <object-id pub-id-type="publisher-id">eabf7117</object-id>
      </element-citation>
    </ref>
    <ref id="bib16">
      <label>16</label>
      <element-citation publication-type="journal" id="sref16">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H.</given-names>
          </name>
          <name>
            <surname>Handsaker</surname>
            <given-names>B.</given-names>
          </name>
          <name>
            <surname>Wysoker</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Fennell</surname>
            <given-names>T.</given-names>
          </name>
          <name>
            <surname>Ruan</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Homer</surname>
            <given-names>N.</given-names>
          </name>
          <name>
            <surname>Marth</surname>
            <given-names>G.</given-names>
          </name>
          <name>
            <surname>Abecasis</surname>
            <given-names>G.</given-names>
          </name>
          <name>
            <surname>Durbin</surname>
            <given-names>R.</given-names>
          </name>
          <collab>1000 Genome Project Data Processing Subgroup</collab>
        </person-group>
        <article-title>The sequence alignment/map format and samtools</article-title>
        <source>Bioinformatics</source>
        <volume>25</volume>
        <year>2009</year>
        <fpage>2078</fpage>
        <lpage>2079</lpage>
        <pub-id pub-id-type="pmid">19505943</pub-id>
      </element-citation>
    </ref>
    <ref id="bib17">
      <label>17</label>
      <element-citation publication-type="journal" id="sref17">
        <person-group person-group-type="author">
          <name>
            <surname>Wang</surname>
            <given-names>T.</given-names>
          </name>
          <name>
            <surname>Antonacci-Fulton</surname>
            <given-names>L.</given-names>
          </name>
          <name>
            <surname>Howe</surname>
            <given-names>K.</given-names>
          </name>
          <name>
            <surname>Lawson</surname>
            <given-names>H.A.</given-names>
          </name>
          <name>
            <surname>Lucas</surname>
            <given-names>J.K.</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>A.M.</given-names>
          </name>
          <name>
            <surname>Popejoy</surname>
            <given-names>A.B.</given-names>
          </name>
          <name>
            <surname>Asri</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Carson</surname>
            <given-names>C.</given-names>
          </name>
          <name>
            <surname>Chaisson</surname>
            <given-names>M.J.P.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The Human Pangenome Project: a global resource to map genomic diversity</article-title>
        <source>Nature</source>
        <volume>604</volume>
        <year>2022</year>
        <fpage>437</fpage>
        <lpage>446</lpage>
        <pub-id pub-id-type="pmid">35444317</pub-id>
      </element-citation>
    </ref>
    <ref id="bib18">
      <label>18</label>
      <element-citation publication-type="journal" id="sref18">
        <person-group person-group-type="author">
          <name>
            <surname>Zielezinski</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Girgis</surname>
            <given-names>H.Z.</given-names>
          </name>
          <name>
            <surname>Bernard</surname>
            <given-names>G.</given-names>
          </name>
          <name>
            <surname>Leimeister</surname>
            <given-names>C.A.</given-names>
          </name>
          <name>
            <surname>Tang</surname>
            <given-names>K.</given-names>
          </name>
          <name>
            <surname>Dencker</surname>
            <given-names>T.</given-names>
          </name>
          <name>
            <surname>Lau</surname>
            <given-names>A.K.</given-names>
          </name>
          <name>
            <surname>Röhling</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Choi</surname>
            <given-names>J.J.</given-names>
          </name>
          <name>
            <surname>Waterman</surname>
            <given-names>M.S.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Benchmarking of alignment-free sequence comparison methods</article-title>
        <source>Genome Biol.</source>
        <volume>20</volume>
        <year>2019</year>
        <fpage>144</fpage>
        <pub-id pub-id-type="pmid">31345254</pub-id>
      </element-citation>
    </ref>
    <ref id="bib19">
      <label>19</label>
      <element-citation publication-type="journal" id="sref19">
        <person-group person-group-type="author">
          <name>
            <surname>Baker</surname>
            <given-names>D.N.</given-names>
          </name>
          <name>
            <surname>Langmead</surname>
            <given-names>B.</given-names>
          </name>
        </person-group>
        <article-title>Dashing 2: genomic sketching with multiplicities and locality-sensitive hashing</article-title>
        <comment>Preprint at</comment>
        <source>bioRxiv</source>
        <year>2022</year>
        <pub-id pub-id-type="doi">10.1101/2022.10.16.512384</pub-id>
      </element-citation>
    </ref>
    <ref id="bib20">
      <label>20</label>
      <element-citation publication-type="journal" id="sref20">
        <person-group person-group-type="author">
          <name>
            <surname>Chikhi</surname>
            <given-names>R.</given-names>
          </name>
          <name>
            <surname>Medvedev</surname>
            <given-names>P.</given-names>
          </name>
        </person-group>
        <article-title>Informed and automated k-mer size selection for genome assembly</article-title>
        <source>Bioinformatics</source>
        <volume>30</volume>
        <year>2014</year>
        <fpage>31</fpage>
        <lpage>37</lpage>
        <pub-id pub-id-type="pmid">23732276</pub-id>
      </element-citation>
    </ref>
    <ref id="bib21">
      <label>21</label>
      <element-citation publication-type="journal" id="sref21">
        <person-group person-group-type="author">
          <name>
            <surname>Bussi</surname>
            <given-names>Y.</given-names>
          </name>
          <name>
            <surname>Kapon</surname>
            <given-names>R.</given-names>
          </name>
          <name>
            <surname>Reich</surname>
            <given-names>Z.</given-names>
          </name>
        </person-group>
        <article-title>Large-scale k-mer-based analysis of the informational properties of genomes, comparative genomics and taxonomy</article-title>
        <source>PLoS One</source>
        <volume>16</volume>
        <year>2021</year>
        <object-id pub-id-type="publisher-id">e0258693</object-id>
      </element-citation>
    </ref>
    <ref id="bib22">
      <label>22</label>
      <element-citation publication-type="journal" id="sref22">
        <person-group person-group-type="author">
          <name>
            <surname>Ertl</surname>
            <given-names>O.</given-names>
          </name>
        </person-group>
        <article-title>New cardinality estimation algorithms for hyperloglog sketches, CoRR abs/1702</article-title>
        <comment>Preprint at</comment>
        <source>arXiv</source>
        <year>2017</year>
        <ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/1702.01284.arXiv:1702.01284" id="intref0120">http://arxiv.org/abs/1702.01284.arXiv:1702.01284</ext-link>
      </element-citation>
    </ref>
    <ref id="bib23">
      <label>23</label>
      <element-citation publication-type="journal" id="sref23">
        <person-group person-group-type="author">
          <name>
            <surname>Page</surname>
            <given-names>A.J.</given-names>
          </name>
          <name>
            <surname>Cummins</surname>
            <given-names>C.A.</given-names>
          </name>
          <name>
            <surname>Hunt</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Wong</surname>
            <given-names>V.K.</given-names>
          </name>
          <name>
            <surname>Reuter</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Holden</surname>
            <given-names>M.T.G.</given-names>
          </name>
          <name>
            <surname>Fookes</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Falush</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Keane</surname>
            <given-names>J.A.</given-names>
          </name>
          <name>
            <surname>Parkhill</surname>
            <given-names>J.</given-names>
          </name>
        </person-group>
        <article-title>Roary: rapid large-scale prokaryote pan genome analysis</article-title>
        <source>Bioinformatics</source>
        <volume>31</volume>
        <year>2015</year>
        <fpage>3691</fpage>
        <lpage>3693</lpage>
        <pub-id pub-id-type="pmid">26198102</pub-id>
      </element-citation>
    </ref>
    <ref id="bib24">
      <label>24</label>
      <element-citation publication-type="journal" id="sref24">
        <person-group person-group-type="author">
          <name>
            <surname>Sheikhizadeh</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Schranz</surname>
            <given-names>M.E.</given-names>
          </name>
          <name>
            <surname>Akdel</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>de Ridder</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Smit</surname>
            <given-names>S.</given-names>
          </name>
        </person-group>
        <article-title>PanTools: representation, storage and exploration of pan-genomic data</article-title>
        <source>Bioinformatics</source>
        <volume>32</volume>
        <year>2016</year>
        <fpage>i487</fpage>
        <lpage>i493</lpage>
        <pub-id pub-id-type="pmid">27587666</pub-id>
      </element-citation>
    </ref>
  </ref-list>
  <sec id="appsec2" sec-type="supplementary-material">
    <title>Supplemental information</title>
    <p id="p0205">
      <supplementary-material content-type="local-data" id="mmc1">
        <caption>
          <title>Document S1. Figure S1</title>
        </caption>
        <media xlink:href="mmc1.pdf"/>
      </supplementary-material>
    </p>
  </sec>
  <ack id="ack0010">
    <title>Acknowledgments</title>
    <p id="p0185">We thank Aaron Quinlan, Dominik Kempa, and Yun William Yu for helpful discussions. O.Y.A. and B.L. were supported by <funding-source id="gs3"><institution-wrap><institution-id institution-id-type="doi">10.13039/100000002</institution-id><institution>NIH</institution></institution-wrap></funding-source> /<funding-source id="gs9"><institution-wrap><institution-id institution-id-type="doi">10.13039/100000051</institution-id><institution>NHGRI</institution></institution-wrap></funding-source> grant R01HG011392 to B.L. J.K.B. and B.L. were supported by <funding-source id="gs4"><institution-wrap><institution-id institution-id-type="doi">10.13039/100000002</institution-id><institution>NIH</institution></institution-wrap></funding-source> /<funding-source id="gs11"><institution-wrap><institution-id institution-id-type="doi">10.13039/100000057</institution-id><institution>NIGMS</institution></institution-wrap></funding-source> grant R35GM139602 to B.L. and <funding-source id="gs7"><institution-wrap><institution-id institution-id-type="doi">10.13039/100000002</institution-id><institution>NIH</institution></institution-wrap></funding-source> /<funding-source id="gs10"><institution-wrap><institution-id institution-id-type="doi">10.13039/100000051</institution-id><institution>NHGRI</institution></institution-wrap></funding-source> grant R01HG012252. O.Y.A. was also supported by <funding-source id="gs8"><institution-wrap><institution-id institution-id-type="doi">10.13039/100000002</institution-id><institution>NIH</institution></institution-wrap></funding-source> /<funding-source id="gs12"><institution-wrap><institution-id institution-id-type="doi">10.13039/100000057</institution-id><institution>NIGMS</institution></institution-wrap></funding-source> training grant T32GM119998. This work was carried out at the <funding-source id="gs5">Advanced Research Computing at Hopkins</funding-source> (ARCH) core facility (<email>rockfish.jhu.edu</email>), which is supported by the <funding-source id="gs6"><institution-wrap><institution-id institution-id-type="doi">10.13039/100000001</institution-id><institution>National Science Foundation</institution></institution-wrap></funding-source> (NSF) grant number OAC 1920103.</p>
    <sec id="sec5">
      <title>Author contributions</title>
      <p id="p0190">J.K.B., O.Y.A., and B.L. conceived the method, designed the experiments, and ran the experiments. J.K.B. and B.L. wrote the paper. J.K.B. wrote the DandD software tool. J.K.B., O.Y.A., and B.L. edited and approved the final manuscript.</p>
    </sec>
    <sec sec-type="COI-statement" id="sec6">
      <title>Declaration of interests</title>
      <p id="p0195">The authors declare no competing interests.</p>
    </sec>
  </ack>
  <fn-group>
    <fn id="appsec1" fn-type="supplementary-material">
      <p id="p0200">Supplemental information can be found online at <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1016/j.isci.2024.109054" id="intref0115">https://doi.org/10.1016/j.isci.2024.109054</ext-link>.</p>
    </fn>
  </fn-group>
</back>
<?DTDIdentifier.IdentifierValue -//ES//DTD journal article DTD version 5.6.0//EN//XML?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName art560.dtd?>
<?SourceDTD.Version 5.6.0?>
<?ConverterInfo.XSLTName elsevier2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<?origin publisher?>
<?FILEmeta_ISCI109054 xml ?>
<?FILEmain xml ?>
<?FILEmain pdf ?>
<?FILEgr1 jpg ?>
<?FILEgr2 jpg ?>
<?FILEgr3 jpg ?>
<?FILEgr4 jpg ?>
<?FILEgr5 jpg ?>
<?FILEfx1 jpg ?>
<?FILEmmc1 pdf ?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">iScience</journal-id>
    <journal-id journal-id-type="iso-abbrev">iScience</journal-id>
    <journal-title-group>
      <journal-title>iScience</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2589-0042</issn>
    <publisher>
      <publisher-name>Elsevier</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10867639</article-id>
    <article-id pub-id-type="pii">S2589-0042(24)00275-X</article-id>
    <article-id pub-id-type="doi">10.1016/j.isci.2024.109054</article-id>
    <article-id pub-id-type="publisher-id">109054</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>DandD: Efficient measurement of sequence growth and similarity</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" id="au1">
        <name>
          <surname>Bonnie</surname>
          <given-names>Jessica K.</given-names>
        </name>
        <email>jbonnie1@jhu.edu</email>
        <xref rid="aff1" ref-type="aff">1</xref>
        <xref rid="cor1" ref-type="corresp">∗</xref>
      </contrib>
      <contrib contrib-type="author" id="au2">
        <name>
          <surname>Ahmed</surname>
          <given-names>Omar Y.</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">1</xref>
      </contrib>
      <contrib contrib-type="author" id="au3">
        <name>
          <surname>Langmead</surname>
          <given-names>Ben</given-names>
        </name>
        <email>langmea@cs.jhu.edu</email>
        <xref rid="aff1" ref-type="aff">1</xref>
        <xref rid="fn1" ref-type="fn">2</xref>
        <xref rid="cor2" ref-type="corresp">∗∗</xref>
      </contrib>
      <aff id="aff1"><label>1</label>Department of Computer Science, Johns Hopkins University, Baltimore, MD, USA</aff>
    </contrib-group>
    <author-notes>
      <corresp id="cor1"><label>∗</label>Corresponding author <email>jbonnie1@jhu.edu</email></corresp>
      <corresp id="cor2"><label>∗∗</label>Corresponding author <email>langmea@cs.jhu.edu</email></corresp>
      <fn id="fn1">
        <label>2</label>
        <p id="ntpara0010">Lead contact</p>
      </fn>
    </author-notes>
    <pub-date pub-type="pmc-release">
      <day>01</day>
      <month>2</month>
      <year>2024</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on <pub-date
						pub-type="epub">.-->
    <pub-date pub-type="collection">
      <day>15</day>
      <month>3</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>01</day>
      <month>2</month>
      <year>2024</year>
    </pub-date>
    <volume>27</volume>
    <issue>3</issue>
    <elocation-id>109054</elocation-id>
    <history>
      <date date-type="received">
        <day>29</day>
        <month>12</month>
        <year>2023</year>
      </date>
      <date date-type="rev-recd">
        <day>11</day>
        <month>1</month>
        <year>2024</year>
      </date>
      <date date-type="accepted">
        <day>23</day>
        <month>1</month>
        <year>2024</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© 2024 The Authors</copyright-statement>
      <copyright-year>2024</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an open access article under the CC BY license (http://creativecommons.org/licenses/by/4.0/).</license-p>
      </license>
    </permissions>
    <abstract id="abs0010">
      <title>Summary</title>
      <p>Genome assembly databases are growing rapidly. The redundancy of sequence content between a new assembly and previous ones is neither conceptually nor algorithmically easy to measure. We introduce pertinent methods and DandD, a tool addressing how much new sequence is gained when a sequence collection grows. DandD can describe how much structural variation is discovered in each new human genome assembly and when discoveries will level off in the future. DandD uses a measure called δ (“delta”), developed initially for data compression and chiefly dependent on <italic>k</italic>-mer counts. DandD rapidly estimates δ using genomic sketches. We propose δ as an alternative to <italic>k</italic>-<italic>mer</italic>-specific cardinalities when computing the Jaccard coefficient, thereby avoiding the pitfalls of a poor choice of <italic>k</italic>. We demonstrate the utility of DandD’s functions for estimating δ, characterizing the rate of pangenome growth, and computing all-pairs similarities using <italic>k</italic>-independent Jaccard.</p>
    </abstract>
    <abstract abstract-type="graphical" id="abs0015">
      <title>Graphical abstract</title>
      <fig id="undfig1" position="anchor">
        <graphic xlink:href="fx1"/>
      </fig>
    </abstract>
    <abstract abstract-type="author-highlights" id="abs0020">
      <title>Highlights</title>
      <p>
        <list list-type="simple" id="ulist0010">
          <list-item id="u0010">
            <label>•</label>
            <p id="p0010">DandD uses a measure from data compression to measure amount of distinct sequence</p>
          </list-item>
          <list-item id="u0015">
            <label>•</label>
            <p id="p0015">The measure can be used to characterize pangenome “openness”</p>
          </list-item>
          <list-item id="u0020">
            <label>•</label>
            <p id="p0020">The measure can also be used as a length-independent measure of sequence similarity</p>
          </list-item>
        </list>
      </p>
    </abstract>
    <abstract abstract-type="teaser" id="abs0025">
      <p>Genomics; Biocomputational method; Genomic analysis; Sequence analysis</p>
    </abstract>
    <kwd-group id="kwrds0010">
      <title>Subject areas</title>
      <kwd>Genomics</kwd>
      <kwd>Biocomputational method</kwd>
      <kwd>Genomic analysis</kwd>
      <kwd>Sequence analysis</kwd>
    </kwd-group>
  </article-meta>
  <notes>
    <p id="misc9010">Published: February 1, 2024</p>
  </notes>
</front>
<body>
  <sec id="sec1">
    <title>Introduction</title>
    <p id="p0025">Pangenomes are growing as more high-quality assemblies are produced. Once a sufficient number of assemblies have been added, a pangenome can reach a point of diminishing returns, where each new genome contributes little novel sequence to the collection.<xref rid="bib1" ref-type="bibr"><sup>1</sup></xref> Measuring the amount of new sequence per assembly, though, is neither conceptually nor algorithmically straightforward. By surveying studies that computed the average amount of novel sequence per individual in human genome assemblies, Sherman et al.<xref rid="bib2" ref-type="bibr"><sup>2</sup></xref> found that estimates varied from 0.2 Mbp to 14 Mbp. This wide range in values was attributable to reasonable investigator choices such as selection of alignment parameters or criteria for identifying contigs with novel sequence. In short, the parameter choices led to a wide range of answers, making the end results difficult to compare.</p>
    <p id="p0030">Alignment-free, i.e., <italic>k</italic>-mer based, approaches offer an alternative. Such methods have been used to determine if a pangenome has reached the point of being “closed,” with open/closed status determined by fitting a Heaps’-Law model to an empirical <italic>k</italic>-mer growth function.<xref rid="bib1" ref-type="bibr"><sup>1</sup></xref> While avoiding many of the parameter-selection pitfalls of alignment-based methods, <italic>k</italic>-mer based approaches, as the name suggests, still require an initial choice of substring (<italic>k</italic>-mer) length, with subsequent measurements dependent on this selection.</p>
    <p id="p0035">We present a new parameter-free method and tool for measuring the amount of sequence in a pangenome based on ideas from string compression. We use a quantity “delta” (δ) that measures compressibility of a repetitive string.<xref rid="bib3" ref-type="bibr"><sup>3</sup></xref> Other quantities have been proposed for this purpose, including the number of runs in the Burrows-Wheeler Transform (<italic>r</italic>),<xref rid="bib4" ref-type="bibr"><sup>4</sup></xref> number of phrases in the Lempel-Ziv parse (<italic>z</italic>),<xref rid="bib5" ref-type="bibr"><sup>5</sup></xref> and the size of the string attractor (γ).<xref rid="bib6" ref-type="bibr"><sup>6</sup></xref> All these measures have distinct algorithms and interpretations, but δ is known to have advantageous bounds compared to the others. For instance, <inline-formula><mml:math id="M1" altimg="si1.gif"><mml:mrow><mml:mi>δ</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">≤</mml:mo><mml:mi>γ</mml:mi></mml:mrow></mml:math></inline-formula> for all strings.<xref rid="bib3" ref-type="bibr"><sup>3</sup></xref></p>
    <p id="p0040">Computational difficulty among measures quantifying novel sequence varies widely. <italic>z</italic> and <italic>r</italic> require computing a Lempel-Ziv parse or Burrows-Wheeler Transform, respectively, across the entire input string. Computing γ is nondeterministic polynomial-time (NP) complete. Computing δ, however, requires little more than a single pass over the input to count <italic>k</italic>-mers for various values of <italic>k</italic> (<xref rid="fig1" ref-type="fig">Figure 1</xref>). Available tools like KMC<xref rid="bib7" ref-type="bibr"><sup>7</sup></xref> can do this efficiently.</p>
    <p id="p0045">Besides being a useful measure of repetitiveness, δ is also remarkably easy to estimate. This is true not only when estimating δ over a given sequence collection, but also when estimating over <italic>unions</italic> of sequences, as is needed to assess pangenome saturation. Estimating δ for sequences and their unions reduces to the problem of estimating set cardinality. Our main insight is that estimating cardinalities over large sequences and their unions is highly efficient using sketches such as MinHash<xref rid="bib8" ref-type="bibr"><sup>8</sup></xref><sup>,</sup><xref rid="bib9" ref-type="bibr"><sup>9</sup></xref> or HyperLogLog.<xref rid="bib10" ref-type="bibr"><sup>10</sup></xref><sup>,</sup><xref rid="bib11" ref-type="bibr"><sup>11</sup></xref></p>
    <p id="p0050">Additionally, we propose a measure called the <italic>k</italic>-independent Jaccard (KIJ), as an alternative to the Jaccard coefficient. KIJ avoids the risks of preselecting <italic>k</italic>-mer length by using δ. Having a principled way to measure similarity without a pre-determined <italic>k</italic> is critically important since poor choices of <italic>k</italic> can lead to incorrect conclusions downstream, as we show in the context of phylogenetic reconstruction.</p>
    <p id="p0055">We describe the algorithms and data structures implemented in the new DandD software tool, which can compute and estimate δ in a variety of scenarios relevant to genomics and pangenomics. For example, we demonstrate that (a) DandD can efficiently and accurately estimate δ using genomic sketches, (b) DandD can measure how much new sequence is in each new assembled human genome in a pangenome, including when the input consists of assemblies without common coordinates, and finally (c) DandD can be used to compute KIJ, yielding phylogenetic trees that closely match known truth.</p>
    <p id="p0210">DandD is open source software available at: <ext-link ext-link-type="uri" xlink:href="https://github.com/jessicabonnie/dandd" id="PC_linkz8PBVGvn2g">https://github.com/jessicabonnie/dandd</ext-link>.</p>
  </sec>
  <sec id="sec2">
    <title>Results</title>
    <sec id="sec2.1">
      <title>Behavior of δ, r, and z in practice</title>
      <p id="p0060">We began with an empirical study of the relationship between <italic>z</italic>, <italic>r</italic>, and δ using real genome sequence data. We collected 50 <italic>Salmonella enterica</italic> genomes from Refseq, putting them in an arbitrary order. We computed <italic>z</italic>, <italic>r</italic>, and δ for sets of these genomes, starting with the first and cumulatively adding one at a time. In the case of <italic>z</italic>, we used a combination of the newscanNT.x tool from Big-BWT<xref rid="bib12" ref-type="bibr"><sup>12</sup></xref> and the lz_77 tool from PFP_LZ77.<xref rid="bib13" ref-type="bibr"><sup>13</sup></xref> To compute <italic>r</italic>, we used the pfbwt-f64 tool.<xref rid="bib12" ref-type="bibr"><sup>12</sup></xref> For δ, we used DandD in its --exact mode, which in turn uses KMC3.<xref rid="bib7" ref-type="bibr"><sup>7</sup></xref> For <italic>r</italic> and <italic>z</italic>, both the genomes and their reverse complements were added to the set at the same time. For δ, we accomplished this through <italic>k</italic>-mer canonicalization. Results are shown in <xref rid="fig2" ref-type="fig">Figure 2</xref>. The three measures were normalized by first subtracting the minimum then dividing by the maximum, to obtain values ranging from 0 to 1. There is an obvious, strong relationship between the measures, with no two of the normalized measures differing by more than <inline-formula><mml:math id="M2" altimg="si2.gif"><mml:mrow><mml:mo linebreak="goodbreak" linebreakstyle="after">±</mml:mo><mml:mn>0.0273</mml:mn></mml:mrow></mml:math></inline-formula> at any point. <xref rid="mmc1" ref-type="supplementary-material">Figure S1</xref> also shows the wall clock time required by these methods for computing <italic>z</italic>, <italic>r</italic>, and δ, with the KMC3-based method for computing δ being the fastest.<fig id="fig2"><label>Figure 2</label><caption><p>Normalized compression metrics δ, <italic>r</italic>, and <italic>z</italic> reflect the same pattern of growth with the inclusion of each additional assembly from an arbitary ordering of 50 Salmonella genomes</p><p>Normalization was achieved by scaling to the maximum value for each measure.</p></caption><graphic xlink:href="gr2"/></fig></p>
    </sec>
    <sec id="sec2.2">
      <title>Efficient cardinality estimation with dashing</title>
      <p id="p0065">We sought to compare the computational performance and accuracy of DandD’s two modes, the --exact mode (“exact”) and the sketch-based mode (“approximate”). We ran DandD in both modes on three datasets: 10 <italic>E. coli</italic> genomes, 10 salmonella genomes, and 12 human genomes. We performed all the computations for a single value of <italic>k</italic>. These methods are being assessed for performance in computing (or estimating) the cardinatlity <inline-formula><mml:math id="M3" altimg="si3.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, not δ. Given that computing δ means repeatedly performing this process for several values of <italic>k</italic>, this provides sufficient basis for comparing the methods. For each dataset and method, we performed three computations. First, we used the selected method to build a <italic>k</italic>-mer database (for “exact”) or sketch (for “approximate”) over each input genome. We used the selected method to perform a series of cumulative unions, starting from a single database/sketch and combining them in successive steps until all genomes are included. Finally, we performed a single global union of all of the individual databases/sketches. In all cases, we used /usr/bin/time -v to measure the time and the maximum memory usage. In nearly all cases, the “approximate” method is faster than the “exact” method (<xref rid="tbl1" ref-type="table">Table 1</xref>). This is particularly true for the union steps for the human genome inputs, where the approximate method is as much as three orders of magnitude faster than the exact method. The “approximate” method’s peak memory footprint is consistently smaller than the exact method’s, sometimes by two orders of magnitude. Further, for every experiment described in <xref rid="tbl1" ref-type="table">Table 1</xref>, we used Dashing to estimate the cardinality from the sketch produced and compared this to the true cardinality as computed by KMC3. We computed the relative error of the Dashing estimate as <inline-formula><mml:math id="M4" altimg="si4.gif"><mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mrow><mml:mi>D</mml:mi><mml:mo>−</mml:mo><mml:mi>K</mml:mi></mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mo linebreak="goodbreak" linebreakstyle="after">/</mml:mo><mml:mi>K</mml:mi></mml:mrow></mml:math></inline-formula>, where <italic>D</italic> is Dashing’s estimate and <italic>K</italic> is KMC3’s exact count. Overall, the mean relative error was <inline-formula><mml:math id="M5" altimg="si5.gif"><mml:mrow><mml:mn>6.537</mml:mn><mml:mo linebreak="goodbreak" linebreakstyle="after">×</mml:mo><mml:msup><mml:mn>10</mml:mn><mml:mrow><mml:mo>−</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>. The maximum observed relative error was <inline-formula><mml:math id="M6" altimg="si6.gif"><mml:mrow><mml:mn>1.32</mml:mn><mml:mo linebreak="goodbreak" linebreakstyle="after">×</mml:mo><mml:msup><mml:mn>10</mml:mn><mml:mrow><mml:mo>−</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>.<table-wrap position="float" id="tbl1"><label>Table 1</label><caption><p>Computational efficiency of KMC3 versus Dashing for preprocessing and unioning</p></caption><table frame="hsides" rules="groups"><thead><tr><th rowspan="2">Task</th><th colspan="2">Exact (KMC3)<hr/></th><th colspan="2">Approximate (Dashing)<hr/></th></tr><tr><th>Time (seconds)</th><th>Peak Mem (GB)</th><th>Time (seconds)</th><th>Peak Mem (GB)</th></tr></thead><tbody><tr><td colspan="5"><bold><italic>E. coli</italic> (n = 10, k = 15)</bold></td></tr><tr><td colspan="5"><hr/></td></tr><tr><td>Preprocess 10 inputs (mean)</td><td>0.626</td><td>0.100</td><td>0.353</td><td>0.0138</td></tr><tr><td>9 cumulative unions (total)</td><td>4.39</td><td>0.381</td><td>2.28</td><td>6.58e-3</td></tr><tr><td>1 global union (total)</td><td>2.26</td><td>0.403</td><td>0.270</td><td>0.0129</td></tr><tr><td colspan="5"><hr/></td></tr><tr><td colspan="5"><bold><italic>Salmonella</italic> (n = 10, k = 14)</bold></td></tr><tr><td colspan="5"><hr/></td></tr><tr><td>Preprocess 10 inputs (mean)</td><td>0.643</td><td>0.100</td><td>0.340</td><td>0.0138</td></tr><tr><td>9 cumulative unions (total)</td><td>3.39</td><td>0.388</td><td>2.13</td><td>6.59e-3</td></tr><tr><td>1 global union (total)</td><td>1.85</td><td>0.389</td><td>0.28</td><td>0.0129</td></tr><tr><td colspan="5"><hr/></td></tr><tr><td colspan="5"><bold><italic>Human</italic> (n = 10, k = 20)</bold></td></tr><tr><td colspan="5"><hr/></td></tr><tr><td>Preprocess 10 inputs (mean)</td><td>40.8</td><td>11.7</td><td>44.2</td><td>0.127</td></tr><tr><td>9 cumulative unions (total)</td><td>1,750</td><td>8.14</td><td>2.16</td><td>6.59e-3</td></tr><tr><td>1 global union (total)</td><td>829</td><td>16.6</td><td>0.28</td><td>0.0129</td></tr></tbody></table><table-wrap-foot><fn><p>For KMC3, preprocessing consists of building <italic>k</italic>-mer count databases. For Dashing, it consists of building genomic sketches. We analyzed three collections of genome assemblies: E. coli (n = 10, k = 15), salmonella (n = 10, k = 14), and human (n = 10, k = 20). For simplicity, we chose a single <italic>k</italic> for each which was appropriate to the species. We measured the time and memory (resident set size) required to preprocess the 10 inputs on average, reported in rows labeled “Preprocess 10 inputs.” We chose a random ordering of the genomes and measured the resources required to perform a series of unions, each adding one additional genome to the union (“9 cumulative unions”). We also measured resources required to union all preprocessed datasets at once (“1 global union”).</p></fn></table-wrap-foot></table-wrap></p>
    </sec>
    <sec id="sec2.3">
      <title>Using DandD to characterize sublinearity and openness</title>
      <p id="p0070">We ran the DandD progressive command on a set of 34 human haplotypes taken from the Human Genome Structural Variation Consortium (HGSVC2) project.<xref rid="bib14" ref-type="bibr"><sup>14</sup></xref><sup>,</sup><xref rid="bib15" ref-type="bibr"><sup>15</sup></xref> The haplotypes were chosen to all have an X chromosome, to avoid large increments in δ due only to the addition of the Y chromosome. HGSVC2 is organized into variant call format (VCF) files for each distinct variant type: single nucleotide variants (SNVs), small insertions and deletions (Indels), or structural variants (SVs). We repeated our experiment across different subsets of variant categories. For instance, to create the FASTA sequences used as input to our “SNV only” experiment, we used bcftools consensus<xref rid="bib16" ref-type="bibr"><sup>16</sup></xref> to create 34 haplotype-specific FASTA files, taking rows from the VCF file containing SNVs for 17 individuals annotated as female. For the “SNVs + indels” experiment, we did the same but taking rows from both the SNV and Indel VCF files. For the “SNVs + SVs + indels” experiment, we did the same but taking rows from all three VCFs. In all cases, the individual haplotype FASTAs were then provided to DandD progressive. Since it is impractical to attempt all orderings of 34 haplotypes, we used DandD’s --norder 120 option to randomly generate a series of 120 possible permutations. We performed a corresponding experiment for 56 haplotypes from the Human Pangenome Reference Consortium (HPRC),<xref rid="bib17" ref-type="bibr"><sup>17</sup></xref> taken from 28 individuals annotated as female. In this case, the FASTA inputs to DandD were the phased assemblies provided by the HPRC. There is no accompanying VCF file describing variants or variant types, giving us no way to stratify by variant type as we did for HGSVC2. However, DandD is applicable regardless, since it simply accepts any FASTA inputs. We used DandD’s --norder 90 option to randomly generate a series of 90 possible permutations, 5 of which are shown in <xref rid="fig3" ref-type="fig">Figure 3</xref>B. In all cases, we computed a Heaps’-Law fit to the mean δ values and recorded the α openness statistic<xref rid="bib1" ref-type="bibr"><sup>1</sup></xref> for each. Fit values of α are reported in the <xref rid="fig3" ref-type="fig">Figure 3</xref> legends. As seen in <xref rid="fig3" ref-type="fig">Figure 3</xref>, all experiments showed sublinear growth in mean δ. For HGSVC2, we observed that “SNVs + SVs + Indels” had the highest δ overall, with “SNVs + Indels” having slightly lower values, and “SNVs only” having still lower values. This is expected, since the inclusion of each additional variant class should lead to new distinct sequence. The Heaps’-Law α was approximately the same for all three HGSVC2 variant subsets, <inline-formula><mml:math id="M7" altimg="si7.gif"><mml:mrow><mml:mo linebreak="goodbreak" linebreakstyle="after">≈</mml:mo><mml:mn>0.94</mml:mn></mml:mrow></mml:math></inline-formula> in all cases. Thus, all variant classes lead to the same conclusion about “openness” of the HGSVC2 pangenome, i.e., <inline-formula><mml:math id="M8" altimg="si8.gif"><mml:mrow><mml:mi>α</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">≤</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> indicates it is open. The HPRC data also showed sublinear growth, and a range of δ′s quite similar to those observed for HGSVC2. The Heaps’-Law <inline-formula><mml:math id="M9" altimg="si9.gif"><mml:mrow><mml:mi>α</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">=</mml:mo><mml:mn>0.873</mml:mn></mml:mrow></mml:math></inline-formula>, again indicating an open pangenome. The fact that α is lower for HPRC may indicate that the <italic>de novo</italic> assemblies from long reads give access to a wider array of genetic variants, which in turn requires more genomes to saturate the pangenome. However, this is hard to disentangle from the effects of sequencing errors, which can be counted (spuriously) as novel sequence. Removing the effect of sequencing errors is an important problem, which we return to in the Discussion.<fig id="fig3"><label>Figure 3</label><caption><p>Empirical growth of δ for human haplotypes from the HGSVC2 project (A) and the HPRC (B)</p><p>For (A), lines show mean value of δ for each genome count across all 120 orderings. Colors denote how the variants were subsetted before constructing the FASTA files given to DandD. E.g. the blue line corresponds to genomes edited to include SNVs, small indels and structural variants, whereas the green line corresponds to genomes edited to include only SNVs. For (B), the dotted line shows the mean value of δ at each genome count across all 90 orderings. The colored lines show the particular values of δ from a random subset of 5 orderings.</p></caption><graphic xlink:href="gr3"/></fig></p>
    </sec>
    <sec id="sec2.4">
      <title>A <italic>k</italic>-independent approach to openness</title>
      <p id="p0075">We evaluated how DandD’s k-independent approach can improve existing approaches for estimating pangenome openness. Past work characterized openness by compiling <italic>k</italic>-mer cardinality statistics across increasing subsets of genomes, then fitting a Heaps’-Law model to the <italic>k</italic>-mer cardinality growth function.<xref rid="bib1" ref-type="bibr"><sup>1</sup></xref> The fit value of the Heaps’-law α serves as an openness statistic, with <inline-formula><mml:math id="M10" altimg="si8.gif"><mml:mrow><mml:mi>α</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">≤</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> indicating an open pangenome and <inline-formula><mml:math id="M11" altimg="si10.gif"><mml:mrow><mml:mi>α</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">&gt;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> indicating a closed pangenome. We hypothesized that DandD’s <italic>k</italic>-independent approach could provide a robust basis for estimating opennness without having to choose a particular <italic>k</italic> ahead of time. We used benchmarking datasets from the AFproject.<xref rid="bib18" ref-type="bibr"><sup>18</sup></xref> These were created by the AFproject to evaluate alignment-free clustering methods. In particular, we used the 25 fish mitochondrial genomes and the 29 <italic>E. coli</italic> genomes from that benchmark. After building initial <italic>k</italic>-mer databases via DandD’s tree command in --exact mode, we used the progressive command with --ksweep --mink 2 --maxk 55 -n 20 to compute the number of distinct <italic>k</italic>-mers for <italic>k</italic> ranging from 2 to 55. These computations used KMC3 to count <italic>k</italic>-mers and used 20 random orderings to estimate the average increase in cardinality with each added genome. We then fit a Heaps’-Law function and obtained the fit value for the α parameter. We observed that for very small values of <italic>k</italic>, α was greater than 1, indicating a closed pangenome (<xref rid="fig4" ref-type="fig">Figure 4</xref>). This was expected since a very small value of <italic>k</italic> leads to rapid saturation of the space of possible <italic>k</italic>-mers as genomes are added. For increasing values of <italic>k</italic>, α decreased and eventually stabilized to a value less than 1, giving a more robust and convincing indicator of an open pangenome. When we considered the value of α obtained using δ (triangles in <xref rid="fig4" ref-type="fig">Figure 4</xref>), it was also less than 1, consistent with the fact that α stabilizes to a value less than 1 when computed with most informative values of <italic>k</italic>. In short, computing α using DandD does not require selecting a value of <italic>k</italic> but yields an α consistent with the stable part of the function given by a <italic>k</italic>-specific method.<fig id="fig4"><label>Figure 4</label><caption><p>Fit values for the Heaps’-law α as a function of <italic>k</italic> (red dots) and the value obtained by using the <italic>k</italic> selected by δ (dotted blue line)</p><p>The transition from “open” (<inline-formula><mml:math id="M12" altimg="si10.gif"><mml:mrow><mml:mi>α</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">&gt;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>) to “closed” (<inline-formula><mml:math id="M13" altimg="si10.gif"><mml:mrow><mml:mi>α</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">&gt;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>) values occurs at different threshold values of <italic>k</italic> for fish mitochondria (<inline-formula><mml:math id="M14" altimg="si23.gif"><mml:mrow><mml:mi>k</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">=</mml:mo><mml:mn>9</mml:mn></mml:mrow></mml:math></inline-formula>) and <italic>E. coli</italic> (<inline-formula><mml:math id="M15" altimg="si24.gif"><mml:mrow><mml:mi>k</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">=</mml:mo><mml:mn>13</mml:mn></mml:mrow></mml:math></inline-formula>). The values of <inline-formula><mml:math id="M16" altimg="si19.gif"><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>∗</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> which produce δ are slightly larger than the thresholds for both <italic>E. coli</italic> (<inline-formula><mml:math id="M17" altimg="si25.gif"><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>∗</mml:mo></mml:msup><mml:mo linebreak="goodbreak" linebreakstyle="after">=</mml:mo><mml:mn>14</mml:mn></mml:mrow></mml:math></inline-formula>) and fish mitochondria (<inline-formula><mml:math id="M18" altimg="si26.gif"><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>∗</mml:mo></mml:msup><mml:mo linebreak="goodbreak" linebreakstyle="after">=</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:math></inline-formula>).</p></caption><graphic xlink:href="gr4"/></fig></p>
    </sec>
    <sec id="sec2.5">
      <title>Evaluating <italic>k</italic>-Independent Jaccard</title>
      <p id="p0080">To evaluate the utility of the KIJ measure, we again used benchmarking datasets from the AFproject,<xref rid="bib18" ref-type="bibr"><sup>18</sup></xref> particularly the 25 fish mitochondrial genomes and the 29 <italic>E. coli</italic> genomes. For KIJ, we computed all pairwise distances between the sequences in the dataset. Since KIJ measures similarity, we ultimately report the distance, <inline-formula><mml:math id="M19" altimg="si11.gif"><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo></mml:mrow></mml:math></inline-formula> KIJ. From this point, we proceeded with the steps of the AFproject protocol, which constructs a tree from the pairwise-distances, then compares that truth to a curated tree. The ultimate result is a normalized version of the Robinson-Foulds distance (nRF), which measures the degree of structural difference between two trees having the same set of sequences at the leaves. A low nRF indicates that the distances provided reflected the true phylogenetic relationships between the sequences. Having done this for <inline-formula><mml:math id="M20" altimg="si11.gif"><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo></mml:mrow></mml:math></inline-formula> KIJ distances, we repeated the process for distances based on <italic>k</italic>-specific Jaccard coefficients for a range of <italic>k</italic>s. We computed <inline-formula><mml:math id="M21" altimg="si12.gif"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and reported a matrix of pairwise <inline-formula><mml:math id="M22" altimg="si13.gif"><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>J</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> distances for <inline-formula><mml:math id="M23" altimg="si14.gif"><mml:mrow><mml:mi>k</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">=</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math></inline-formula> to 59. nRFs obtained for each of these are shown in <xref rid="fig5" ref-type="fig">Figure 5</xref>. We observed that the accuracy of the tree predicted by the <inline-formula><mml:math id="M24" altimg="si13.gif"><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>J</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> distance depends on the choice of <italic>k</italic>. A too-small value of <italic>k</italic> leads to non-specific distances that cannot distinguish the phylogenetic relationships, leading to high nRF toward the left-hand side of the plots in <xref rid="fig5" ref-type="fig">Figure 5</xref>. A too-large value of <italic>k</italic> can deplete the number of common <italic>k</italic>-mers between related sequences in a way that obscures their relationship, as seen toward the right-hand side of the “25 fish mitochondria” plot in <xref rid="fig5" ref-type="fig">Figure 5</xref>, where nRF climbs after <italic>k</italic> grows past 25. The <inline-formula><mml:math id="M25" altimg="si11.gif"><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo></mml:mrow></mml:math></inline-formula> KIJ distance, on the other hand, strikes a balance between these extremes. In both cases, the <inline-formula><mml:math id="M26" altimg="si11.gif"><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo></mml:mrow></mml:math></inline-formula> KIJ distance achieves minimal nRF compared to all of the <inline-formula><mml:math id="M27" altimg="si13.gif"><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>J</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> distances.<fig id="fig5"><label>Figure 5</label><caption><p>Clustering based on KIJ distances achieves low normalized Robinson-Foulds (nRF) distance with respect to the true phylogeny compared to clusterings based on the typical Jaccard coefficient</p></caption><graphic xlink:href="gr5"/></fig></p>
    </sec>
  </sec>
  <sec id="sec3">
    <title>Discussion</title>
    <p id="p0085">As sequencing technology improves, new genome assemblies will arrive more quickly. It will be increasingly important to identify when a collection of genomes has reached a point of saturation, i.e., when it represents a taxonomic grouping in a complete fashion without excess accumulation of rare variation. Since pangenomes can be seen as collections of repetitive strings, theory concerning compressibility provides tools well suited to this problem. Building on the δ measure, DandD provides an efficient and interpretable way to measure the growth of pangenomes and compare large sequence collections. δ has theoretical advantages but is also remarkably easy to compute. Genomic sketches make δ particularly easy to estimate over pangenomes and their unions. Further, δ provides a parameter-free way of quantifying the amount of distinct sequence in a pangenome, sidestepping any dependence on parameters. The methods underlying DandD treat pangenomes as sets, with KIJ providing a quantification similar to the Jaccard coefficient between sets. However, another way to represent and sketch pangenomes would be as multisets, where each item (i.e., <italic>k</italic>-mer) has an associated count; e.g., the number of times it occurs in the pangenome. Genomic sketches like SetSketch can accommodate counts, and Dashing 2<xref rid="bib19" ref-type="bibr"><sup>19</sup></xref> can compute probability-weighted version of the Jaccard coefficient. In the future, it will be important to evaluate whether consideration of counts can be naturally combined with these compressibility measures. Past work suggests other ways to select a scenario-specific “best” <italic>k</italic>, for use with assembly or other algorithms. KmerGenie<xref rid="bib20" ref-type="bibr"><sup>20</sup></xref> uses <italic>k</italic>-mer count distributions to select the <italic>k</italic> that yields the most distinct high-count <italic>k</italic>-mers. While DandD’s method represents a simple and mathematically grounded way to choose <italic>k</italic>, some scenarios might require more information than DandD uses, such as the assembly scenario targeted by KmerGenie. Besides δ, other measures have been proposed that take the form of having cardinality in the numerator and some normalization factor or “penalty” in the denominator that is a function of <italic>k</italic>. An example is sequence space coverage (SSC) and its normalized version (NSSC) used by Bussi et al.<xref rid="bib21" ref-type="bibr"><sup>21</sup></xref> In that case, the denominator includes <inline-formula><mml:math id="M28" altimg="si15.gif"><mml:mrow><mml:msup><mml:mn>4</mml:mn><mml:mi>k</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula>, with modifications to account for guanine-cytosine (GC) bias and other factors. Importantly, the numerator is still the cardinality, and the denominator is still a simple function of <italic>k</italic> and <italic>n</italic> (total input sequence length). The methods proposed here, including the sketching methods, are equally applicable in that context, and will be applicable for any measure that includes cardinality as a key term. It should be possible to convert the <inline-formula><mml:math id="M29" altimg="si11.gif"><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo></mml:mrow></mml:math></inline-formula> KIJ distance measure (discussed in “Evaluating KIJ” in <xref rid="sec2" ref-type="sec">Results</xref>) into a Mash distance,<xref rid="bib9" ref-type="bibr"><sup>9</sup></xref> though with the additional complication that KIJ is a function of three separate δ measures, <inline-formula><mml:math id="M30" altimg="si16.gif"><mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>A</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="M31" altimg="si17.gif"><mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>B</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="M32" altimg="si18.gif"><mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo linebreak="badbreak">∪</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. These may use different underlying choices for <inline-formula><mml:math id="M33" altimg="si19.gif"><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>∗</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>, creating ambiguity in how <italic>k</italic> should be specified in the Mash distance formula. In the future, it will be important to study how to handle multiple distinct <italic>k</italic>’s in the Mash distance formula, and to evaluate how Mash distances derived from KIJ perform relative to those derived from <inline-formula><mml:math id="M34" altimg="si12.gif"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p>
    <sec id="sec3.1">
      <title>Limitations of the study</title>
      <p id="p0090">The progressive union function of DandD computes unions over several random orderings of the FASTA inputs. This is in contrast to other methods for which closed-form expressions are known.<xref rid="bib1" ref-type="bibr"><sup>1</sup></xref> The most accurate computations of δ will use exact <italic>k</italic>-mer counts. While DandD can employ KMC3 to obtain precise counts, building and querying a KMC database is substantially less efficient than sketching with Dashing. The notable increase time and memory usage reduces the convenience of DandD’s exact mode. The δ measure emerged from compression theory and lacks any intrinsic connection to population genetic measures like Nei’s genetic distance. Though δ has a relationship to Mash distance, the need to specify a single value of <italic>k</italic> in the Mash distance formula is not compatible with δ′s ability to choose different values of <italic>k</italic> for the marginal and joint components of the formula. Finally, use of δ may involve an implicit assumption that all <italic>k</italic>-mers are equally likely. This contrasts with biological reality, where some <italic>k</italic>-mers may be more likely due to the overall GC content of the genomes being compared. Other methods such as the normalized sequence space coverage (NSSC)<xref rid="bib21" ref-type="bibr"><sup>21</sup></xref> measure may be more useful in scenarios where such biological variables have a strong influence.</p>
    </sec>
  </sec>
  <sec id="sec4">
    <title>STAR★Methods</title>
    <sec id="sec4.1">
      <title>Key resources table</title>
      <p id="p0095">
        <table-wrap position="float" id="undtbl1">
          <table frame="hsides" rules="groups">
            <thead>
              <tr>
                <th>REAGENT or RESOURCE</th>
                <th>SOURCE</th>
                <th>IDENTIFIER</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td colspan="3">
                  <bold>Deposited data</bold>
                </td>
              </tr>
              <tr>
                <td colspan="3">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td>28 <italic>Homo sapiens</italic> phased genome assemblies</td>
                <td>Human Pangenome Reference Consortium; <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5281/zenodo.5826274" id="intref0015">https://doi.org/10.5281/zenodo.5826274</ext-link></td>
                <td>
                  <ext-link ext-link-type="uri" xlink:href="https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure3_hprc.txt" id="intref0020">https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure3_hprc.txt</ext-link>
                </td>
              </tr>
              <tr>
                <td>26 <italic>Homo sapiens</italic> full genomes -- integrated variant call sets</td>
                <td>Human Structural Variation Consortium phase 2; <ext-link ext-link-type="uri" xlink:href="https://www.internationalgenome.org/data-portal/data-collection/hgsvc2" id="intref0025">https://www.internationalgenome.org/data-portal/data-collection/hgsvc2</ext-link></td>
                <td>
                  <ext-link ext-link-type="uri" xlink:href="https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure3_hgsvc2.txt" id="intref0030">https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure3_hgsvc2.txt</ext-link>
                </td>
              </tr>
              <tr>
                <td>29 <italic>Escherichia coli</italic> assembled genomes</td>
                <td>AFproject; <ext-link ext-link-type="uri" xlink:href="https://afproject.org/app/benchmark/genome/std/assembled/ecoli/dataset/" id="intref0035">https://afproject.org/app/benchmark/genome/std/assembled/ecoli/dataset/</ext-link></td>
                <td>
                  <ext-link ext-link-type="uri" xlink:href="https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure4_ecoli.txt" id="intref0040">https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure4_ecoli.txt</ext-link>
                </td>
              </tr>
              <tr>
                <td>25 fish mitochondria (mtDNA) assembled genomes</td>
                <td>AFproject; <ext-link ext-link-type="uri" xlink:href="https://afproject.org/app/benchmark/genome/std/assembled/fish_mito/dataset/" id="intref0045">https://afproject.org/app/benchmark/genome/std/assembled/fish_mito/dataset/</ext-link></td>
                <td>
                  <ext-link ext-link-type="uri" xlink:href="https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure4_fish-mito.txt" id="intref0050">https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure4_fish-mito.txt</ext-link>
                </td>
              </tr>
              <tr>
                <td>12 <italic>Homo Sapiens</italic> reference genomes, GRCh38</td>
                <td>NCBI GenBank</td>
                <td>
                  <ext-link ext-link-type="uri" xlink:href="https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure1_human.txt" id="intref0055">https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure1_human.txt</ext-link>
                </td>
              </tr>
              <tr>
                <td>10 <italic>Escherichia coli</italic> genome assemblies</td>
                <td>NCBI RefSeq</td>
                <td>
                  <ext-link ext-link-type="uri" xlink:href="https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/table1_ecoli.txt" id="intref0060">https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/table1_ecoli.txt</ext-link>
                </td>
              </tr>
              <tr>
                <td>60 <italic>Salmonella enterica</italic> genome assemblies</td>
                <td>NCBI RefSeq</td>
                <td><ext-link ext-link-type="uri" xlink:href="https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/table1_salmonella.txt" id="intref0065">https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/table1_salmonella.txt</ext-link> and <ext-link ext-link-type="uri" xlink:href="https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure2_salmonella.txt" id="intref0070">https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure2_salmonella.txt</ext-link></td>
              </tr>
              <tr>
                <td colspan="3">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td colspan="3">
                  <bold>Software and algorithms</bold>
                </td>
              </tr>
              <tr>
                <td colspan="3">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td>DandD</td>
                <td>This Study</td>
                <td>Zenodo DOI; <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5281/zenodo.10138641" id="intref0075">https://doi.org/10.5281/zenodo.10138641</ext-link><break/>GitHub: <ext-link ext-link-type="uri" xlink:href="https://github.com/jessicabonnie/dandd" id="intref0080">https://github.com/jessicabonnie/dandd</ext-link><break/>Experiments GitHub: <ext-link ext-link-type="uri" xlink:href="https://github.com/jessicabonnie/dandd_experiments" id="intref0085">https://github.com/jessicabonnie/dandd_experiments</ext-link></td>
              </tr>
              <tr>
                <td>Dashing</td>
                <td>Baker &amp; Langmead</td>
                <td>DOI: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1101/501726" id="intref0090">https://doi.org/10.1101/501726</ext-link> ; GitHub: <ext-link ext-link-type="uri" xlink:href="https://github.com/dnbaker/dashing" id="intref0095">https://github.com/dnbaker/dashing</ext-link></td>
              </tr>
              <tr>
                <td>KMC3</td>
                <td>REFRESH Bioinformatics Group</td>
                <td>GitHub: <ext-link ext-link-type="uri" xlink:href="https://github.com/refresh-bio/KMC/tree/v3.2.2" id="intref0100">https://github.com/refresh-bio/KMC/tree/v3.2.2</ext-link></td>
              </tr>
            </tbody>
          </table>
        </table-wrap>
      </p>
    </sec>
    <sec id="sec4.2">
      <title>Resource availability</title>
      <sec id="sec4.2.1">
        <title>Lead contact</title>
        <p id="p0100">Further information and requests for resources and reagents should be directed to and will be fulfilled by the lead contact, Ben Langmead (<email>langmea@cs.jhu.edu</email>).</p>
      </sec>
      <sec id="sec4.2.2">
        <title>Materials availability</title>
        <p id="p0105">This study did not generate new unique reagents.</p>
      </sec>
      <sec sec-type="data-availability" id="sec4.2.3">
        <title>Data and code availability</title>
        <p id="p0110">
          <list list-type="simple" id="ulist0015">
            <list-item id="u0025">
              <label>•</label>
              <p id="p0115">This paper analyzes existing, publicly available data. These accession numbers for the datasets are listed in the <xref rid="sec4.1" ref-type="sec">key resources table</xref>.</p>
            </list-item>
            <list-item id="u0030">
              <label>•</label>
              <p id="p0120">All original code has been deposited at Zenodo and is publicly available as of the date of publication. DOIs are listed in the <xref rid="sec4.1" ref-type="sec">key resources table</xref>.</p>
            </list-item>
            <list-item id="u0035">
              <label>•</label>
              <p id="p0125">Any additional information required to reanalyze the data reported in this paper is available from the <xref rid="sec4.2.1" ref-type="sec">lead contact</xref> upon request.</p>
            </list-item>
          </list>
        </p>
      </sec>
    </sec>
    <sec id="sec4.3">
      <title>Method details</title>
      <sec id="sec4.3.1">
        <title>The delta compressibility measure</title>
        <p id="p0130">Various measures have been proposed for how to quantify the amount of distinct sequence in a pangenome. Some of these measures identified as byproducts of particular compression strategies. For instance, the measure <italic>z</italic> is derived by computing a Lempel-Ziv parse of the pangenome;<xref rid="bib5" ref-type="bibr"><sup>5</sup></xref>
<italic>z</italic> is equal to the number of phrases in that parse. The measure <italic>r</italic> is obtained by computing the Burrows-Wheeler Transform (BWT) of the pangenome;<xref rid="bib4" ref-type="bibr"><sup>4</sup></xref>
<italic>r</italic> is equal to the number of maximal same-letter runs in the BWT-transformed string. Other proposals generalize the notion of compressibility to be independent of any compression strategy, such as the string-attractor γ.<xref rid="bib6" ref-type="bibr"><sup>6</sup></xref> Delta (δ) is another measure of compressibility, defined over a pangenome <italic>S</italic>:<disp-formula id="fd1"><label>(Equation 1)</label><mml:math id="M35" altimg="si27.gif"><mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="badbreak">=</mml:mo><mml:munder><mml:mi>max</mml:mi><mml:mi>k</mml:mi></mml:munder><mml:mfrac><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mi>k</mml:mi></mml:mfrac></mml:mrow></mml:math></disp-formula>where <inline-formula><mml:math id="M36" altimg="si3.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> is the number of distinct length-<italic>k</italic> substrings among all strings in <italic>S</italic>. We use <inline-formula><mml:math id="M37" altimg="si19.gif"><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>∗</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> to denote the value of <italic>k</italic> that achieves the maximum. When <italic>S</italic> consists of a single string <italic>s</italic>, the expression <inline-formula><mml:math id="M38" altimg="si28.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="goodbreak" linebreakstyle="after">/</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula> can be considered to undergo three phases of growth with respect to <italic>k</italic>. For values of <italic>k</italic> that are so short that virtually all possible <italic>k</italic>-mer arrangements of the alphabet appear in <italic>s</italic>, <inline-formula><mml:math id="M39" altimg="si28.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="goodbreak" linebreakstyle="after">/</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula> grows exponentially. For values of <italic>k</italic> approaching <inline-formula><mml:math id="M40" altimg="si29.gif"><mml:mrow><mml:mo>|</mml:mo><mml:mi>s</mml:mi><mml:mo>|</mml:mo></mml:mrow></mml:math></inline-formula>. , <inline-formula><mml:math id="M41" altimg="si28.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="goodbreak" linebreakstyle="after">/</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula> decreases linearly as <italic>k</italic>-mers outgrow <italic>s</italic>, eventually reaching 1 when <inline-formula><mml:math id="M42" altimg="si30.gif"><mml:mrow><mml:mi>k</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">=</mml:mo><mml:mrow><mml:mo>|</mml:mo><mml:mi>s</mml:mi><mml:mo>|</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. For intermediate values of <italic>k</italic>, these trends are in tension; increasing <italic>k</italic> both increases the space of possible <italic>k</italic>-mers, but eventually stops gaining many new distinct <italic>k</italic>-mers. Choosing the <italic>k</italic> that maximizes <inline-formula><mml:math id="M43" altimg="si28.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="goodbreak" linebreakstyle="after">/</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula> identifies this point of diminishing returns. While it is useful to think in terms of these phases, it is important to note that the growth of <inline-formula><mml:math id="M44" altimg="si28.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="goodbreak" linebreakstyle="after">/</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula> is not strictly bitonic, i.e. it does not necessarily grow monotonically, reach a peak, then fall monotonically. Rather it can experience local fluctuations leading to non-global maxima. δ is insensitive to full-string reversals and monotone with respect to appending or prepending symbols to <italic>S</italic>. The <italic>k</italic> in the denominator of <xref rid="fd1" ref-type="disp-formula">Equation 1</xref> links δ to other measures. For instance, with <italic>k</italic> in the denominator for δ, it is easy to show that <inline-formula><mml:math id="M45" altimg="si1.gif"><mml:mrow><mml:mi>δ</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">≤</mml:mo><mml:mi>γ</mml:mi></mml:mrow></mml:math></inline-formula>, where γ is the string attractor size.<xref rid="bib3" ref-type="bibr"><sup>3</sup></xref> As a function of the substring composition of <italic>S</italic>, δ is comparatively easy to compute relative to other measures. The computation of <italic>z</italic> or <italic>r</italic> is concerned with the entirety of <italic>S</italic>, whereas δ can be computed incrementally by considering substrings of the members of <italic>S</italic> one-by-one. The advantages of this incremental approach are two-fold: (a) δ can be computed simply and in linear time by scanning <italic>S</italic> and counting <italic>k</italic>-mers for an appropriate range of values of <italic>k</italic>, and (b) DNA <italic>k</italic>-mers can be “canonicalized” at the outset, allowing DNA strings and their reverse complements to be treated as equivalent for the purpose of computing δ, as is common. During a single scan of <italic>S</italic>, each <italic>k</italic>-mer can be tallied either as itself or as its reverse complement (whichever is lexicographically smaller). For <italic>z</italic> and <italic>r</italic>, allowing for equal treatment of forward and reverse complement strands would require a more drastic approach, e.g. first concatenating <italic>S</italic> with its reverse complement, then running the corresponding algorithm.</p>
      </sec>
      <sec id="sec4.3.2">
        <title>Estimating cardinality</title>
        <p id="p0135">mer counting is resource intensive, potentially requiring a large memory footprint for pangenome inputs. Instead, we propose a method for estimating δ by estimating the numerator <inline-formula><mml:math id="M46" altimg="si3.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> (i.e. the cardinality) from <xref rid="fd1" ref-type="disp-formula">Equation 1</xref>. The Dashing<xref rid="bib11" ref-type="bibr"><sup>11</sup></xref> tool, while chiefly used to estimate similarities between sequencing datasets, can also be used to estimate cardinalities like this via its dashing card function, which uses Ertl’s maximum likelihood estimator.<xref rid="bib11" ref-type="bibr"><sup>11</sup></xref><sup>,</sup><xref rid="bib22" ref-type="bibr"><sup>22</sup></xref> Genomic sketches are composable, meaning that sketches built over datasets <italic>A</italic> and <italic>B</italic> can be easily combined to form the sketch for <inline-formula><mml:math id="M47" altimg="si31.gif"><mml:mrow><mml:mi>A</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">∪</mml:mo><mml:mi>B</mml:mi></mml:mrow></mml:math></inline-formula>. In the case of HyperLogLog sketches, this is accomplished by simply taking the elementwise maximum of the register values for the sketches of <italic>A</italic> and <italic>B</italic>. The resulting sketch is identical to the one that would have resulted from sketching <inline-formula><mml:math id="M48" altimg="si31.gif"><mml:mrow><mml:mi>A</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">∪</mml:mo><mml:mi>B</mml:mi></mml:mrow></mml:math></inline-formula>. Since registers usually number in the thousands-to-millions range, this is a fast operation, using only sequential memory accesses.</p>
      </sec>
      <sec id="sec4.3.3">
        <title>Estimating delta</title>
        <p id="p0140">To estimate δ, we seek the substring length <italic>k</italic> giving maximal <inline-formula><mml:math id="M49" altimg="si28.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="goodbreak" linebreakstyle="after">/</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula>, which we denote <inline-formula><mml:math id="M50" altimg="si19.gif"><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>∗</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>. Determining <inline-formula><mml:math id="M51" altimg="si19.gif"><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>∗</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> requires a scan, similar to a root-finding procedure. DandD accomplishes this with a simple sweep starting from a user specified initial value of <italic>k</italic>. The sweep tries successively larger and smaller values of <italic>k</italic>, searching for three consecutive values of <italic>k</italic> such that:<disp-formula id="fd2"><label>(Equation 2)</label><mml:math id="M52" altimg="si32.gif"><mml:mrow><mml:mfrac><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac><mml:mo linebreak="goodbreak">&lt;</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mfrac><mml:mo linebreak="goodbreak">&gt;</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo linebreak="badbreak">+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo linebreak="badbreak">+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac></mml:mrow></mml:math></disp-formula></p>
        <p id="p0145">By default, DandD begins its search at <inline-formula><mml:math id="M53" altimg="si33.gif"><mml:mrow><mml:mi>k</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">=</mml:mo><mml:mn>14</mml:mn></mml:mrow></mml:math></inline-formula>. The final value of <inline-formula><mml:math id="M54" altimg="si19.gif"><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>∗</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> is dataset-dependent, as illustrated in <xref rid="fig1" ref-type="fig">Figure 1</xref>, which shows a 0-1 normalized version of δ for human, E. coli and salmonella pangenomes. In some of DandD’s modes (such as progressive and kij), it computes δ with respect to the union of two or more inputs for which it has previously computed δ. In such cases, DandD initializes the search for the union <inline-formula><mml:math id="M55" altimg="si19.gif"><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>∗</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> by taking the maximum of the previously-computed <inline-formula><mml:math id="M56" altimg="si34.gif"><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>∗</mml:mo></mml:msup><mml:mi>s</mml:mi></mml:mrow></mml:math></inline-formula> of the inputs.<fig id="fig1"><label>Figure 1</label><caption><p>Different pangenomes find their maxima at different values of <italic>k</italic></p><p>Vertical axis shows <inline-formula><mml:math id="M57" altimg="si20.gif"><mml:mrow><mml:mfrac><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mi>k</mml:mi></mml:mfrac></mml:mrow></mml:math></inline-formula> standardized to between 0 and 1 per pangenome. Each pangenome is comprised of multiple distinct genome sequences: <italic>H. sapiens</italic> (<inline-formula><mml:math id="M58" altimg="si21.gif"><mml:mrow><mml:mi>n</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">=</mml:mo><mml:mn>12</mml:mn></mml:mrow></mml:math></inline-formula>), <italic>E.coli</italic> (<inline-formula><mml:math id="M59" altimg="si22.gif"><mml:mrow><mml:mi>n</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">=</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:math></inline-formula>), and <italic>S. enterica</italic> (<inline-formula><mml:math id="M60" altimg="si22.gif"><mml:mrow><mml:mi>n</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">=</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:math></inline-formula>).</p></caption><graphic xlink:href="gr1"/></fig></p>
      </sec>
      <sec id="sec4.3.4">
        <title>Characterizing sublinear growth</title>
        <p id="p0150">DandD, via the DandD progressive command, can characterize the rate of growth of a pangenome by measuring δ with respect to cumulative subsets of its constituent genomes. For small pangenomes (up to 6–7 genomes), it can be practical to examine all possible orderings (permutations) of the genomes. However, for larger real-world pangenomes, it is sufficient to use a random subset of all possible orderings. This method provides a way to estimate the average δ for subsets of a given size. That is, by taking the mean of all the values for δ obtained after adding the <inline-formula><mml:math id="M61" altimg="si35.gif"><mml:mrow><mml:msup><mml:mi>i</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>h</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> genome in each ordering, we have an estimate for <inline-formula><mml:math id="M62" altimg="si36.gif"><mml:mrow><mml:mi>δ</mml:mi></mml:mrow></mml:math></inline-formula>(all size-<italic>i</italic> subsets). Past methods for characterizing pangenome growth also made use of random orderings of large collections. These methods seek to determine whether the pangenome is “open” (still accumulating new sequence), or “closed” (substantially complete).<xref rid="bib1" ref-type="bibr"><sup>1</sup></xref><sup>,</sup><xref rid="bib23" ref-type="bibr"><sup>23</sup></xref><sup>,</sup><xref rid="bib24" ref-type="bibr"><sup>24</sup></xref> DandD provides a new way of performing this analysis over genome sequences in a parameter-free way, not requiring foreknowledge of where genes are located or how to choose an appropriate value of <italic>k</italic>. The DandD progressive command allows the user to provide a set of genomes and a desired number of orderings to try. DandD will then (1) preprocess all of the inputs individually, (2) generate the random orderings, and then (3) iterate through each ordering, “progressively” building larger unions by accumulating one more genome at each step. The DandD progressive command outputs a file describing, for each step of each ordering, which genome was added in that step and the value of δ for the new union. Besides giving useful plots (seen in “<xref rid="sec2.3" ref-type="sec">Using DandD to characterize sublinearity and openness</xref>” in <xref rid="sec2" ref-type="sec">Results</xref>), this output can be used to fit a Heap’s Law model to the change in delta (<inline-formula><mml:math id="M63" altimg="si37.gif"><mml:mrow><mml:mo>Δ</mml:mo><mml:mi>δ</mml:mi></mml:mrow></mml:math></inline-formula>) at each step. After fitting, the fit value of the Heaps’-Law α parameter can be used to characterize whether the pangenome is open (<inline-formula><mml:math id="M64" altimg="si8.gif"><mml:mrow><mml:mi>α</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">≤</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>) or closed (<inline-formula><mml:math id="M65" altimg="si10.gif"><mml:mrow><mml:mi>α</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">&gt;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>).</p>
      </sec>
      <sec id="sec4.3.5">
        <title><italic>k</italic>-independent Jaccard</title>
        <p id="p0155">The Jaccard coefficient is a widely used metric for comparing large datasets:<disp-formula id="fd3"><label>(Equation 3)</label><mml:math id="M66" altimg="si38.gif"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo>,</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="badbreak">=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo linebreak="badbreak">∩</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo linebreak="badbreak">∪</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mrow></mml:math></disp-formula></p>
        <p id="p0160">For consistency we use <inline-formula><mml:math id="M67" altimg="si39.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>A</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> (rather than <inline-formula><mml:math id="M68" altimg="si40.gif"><mml:mrow><mml:msub><mml:mrow><mml:mo>|</mml:mo><mml:mi>A</mml:mi><mml:mo>|</mml:mo></mml:mrow><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>) to denote the cardinality of the set of <italic>k</italic>-mers in a collection of strings <italic>A</italic>. Methods like MinHash estimate this quantity directly. Methods based on the HyperLogLog sketch, like Dashing, obtain separate cardinalities <inline-formula><mml:math id="M69" altimg="si39.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>A</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="M70" altimg="si41.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>B</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="M71" altimg="si42.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo linebreak="badbreak">∪</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> and compute <inline-formula><mml:math id="M72" altimg="si12.gif"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> using an expression equivalent (by the inclusion-exclusion principle) to the one above:<disp-formula id="fd4"><label>(Equation 4)</label><mml:math id="M73" altimg="si43.gif"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo>,</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="badbreak">=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>A</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="badbreak">+</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>B</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo linebreak="badbreak">∪</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo linebreak="badbreak">∪</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mrow></mml:math></disp-formula></p>
        <p id="p0165">The above expressions have <italic>k</italic>-mer length <italic>k</italic> as a parameter. To obtain a <italic>k</italic>-independent notion of Jaccard coefficient, we replace <inline-formula><mml:math id="M74" altimg="si44.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> with δ:<disp-formula id="fd5"><label>(Equation 5)</label><mml:math id="M75" altimg="si45.gif"><mml:mrow><mml:mtext>KIJ</mml:mtext><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo>,</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="badbreak">=</mml:mo><mml:mfrac><mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>A</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="badbreak">+</mml:mo><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>B</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo linebreak="badbreak">∪</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo linebreak="badbreak">∪</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mrow></mml:math></disp-formula></p>
        <p id="p0170">Following this formula, the task of computing or estimating <italic>k</italic>-Independent Jaccard (KIJ) reduces to the task of obtaining <inline-formula><mml:math id="M76" altimg="si16.gif"><mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>A</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="M77" altimg="si17.gif"><mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>B</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="M78" altimg="si18.gif"><mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo linebreak="badbreak">∪</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> (or estimates thereof). DandD provides a command (dandd kij) to compute all-pairwise KIJs given two or more input FASTA files. Since downstream tools may expect to receive distances rather than similarities, DandD can output all-pairwise <inline-formula><mml:math id="M79" altimg="si11.gif"><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo></mml:mrow></mml:math></inline-formula> KIJs instead. If users wish to produce their own scans of likely <italic>k</italic>s for the original jaccard metric they can add the --jaccard command along with --mink and --maxk to specify a range.</p>
      </sec>
      <sec id="sec4.3.6">
        <title>Caching and lazy evaluation of sketches</title>
        <p id="p0175">The most time and memory intensive step of solving for δ is the creation of the component sketches from the input FASTA files. Computationally, it is far simpler to produce the union of two or more sketches or estimate cardinality from existing sketches. Given these uneven resource requirements, DandD is designed to reuse sketches within tasks and across experiments within the same pangenome. DandD reduces its footprint and prevents the production of duplicate sketches by caching sketches on the file system and tracking the sketches it has already built. To maintain the association between a union sketch and its component FASTAs, the sketch file is named using a checksum over the constituent FASTAs as computed by the cryptographic hash function BLAKE. This serves a dual purpose of insuring that each combination of input FASTAs is sketched only once, regardless of order, and providing a mechanism to confirm agreement between the currently available FASTAs and any information pertaining to them that may be stored within DandD’s tree structure. In addition to a naming convention, DandD also creates a directory structure to store intermediate sketches and databases for easy reuse and access. When the user specifies the same sketch directory across many invocations of DandD, they will maximize the benefit of reusing sketch files.</p>
      </sec>
      <sec id="sec4.3.7">
        <title>Exact mode</title>
        <p id="p0180">DandD includes an “exact” option (--exact) which enables computation of δ directly by way of <italic>k</italic>-mer counting. This option can be used in combination with any of DandD’s modes (tree, progressive, kij, etc). Instead of using Dashing, “exact” mode uses KMC3 for counting (via the kmc command) and unioning (via kmc_tools complex).<xref rid="bib7" ref-type="bibr"><sup>7</sup></xref> Just as Dashing must build a sketch prior to estimating cardinalities, KMC3 builds a “database” of <italic>k</italic>-mer counts for each combination. Note that while unioning two Dashing sketches requires only an elementwise maximum over the sketches, unioning two KMC databases requires a merge sort over all the <italic>k</italic>-mers and counts. This can be quite expensive, as detailed in <xref rid="tbl1" ref-type="table">Table 1</xref>. DandD’s file naming scheme together with the metadata it saves allows users to locate KMC databases and Dashing sketches corresponding to particular inputs and their unions. This facilitates further experimentation; i.e. a user can use KMC3’s tools to explore which <italic>k</italic>-mers contributed to a particularly large increase in δ.</p>
      </sec>
    </sec>
  </sec>
</body>
<back>
  <ref-list id="cebib0010">
    <title>References</title>
    <ref id="bib1">
      <label>1</label>
      <element-citation publication-type="journal" id="sref1">
        <person-group person-group-type="author">
          <name>
            <surname>Parmigiani</surname>
            <given-names>L.</given-names>
          </name>
          <name>
            <surname>Wittler</surname>
            <given-names>R.</given-names>
          </name>
          <name>
            <surname>Stoye</surname>
            <given-names>J.</given-names>
          </name>
        </person-group>
        <article-title>Revisiting pangenome openness with k-mers</article-title>
        <comment>Preprint at</comment>
        <source>bioRxiv</source>
        <year>2022</year>
        <pub-id pub-id-type="doi">10.1101/2022.11.15.516472</pub-id>
      </element-citation>
    </ref>
    <ref id="bib2">
      <label>2</label>
      <element-citation publication-type="journal" id="sref2">
        <person-group person-group-type="author">
          <name>
            <surname>Sherman</surname>
            <given-names>R.M.</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>S.L.</given-names>
          </name>
        </person-group>
        <article-title>Pan-genomics in the human genome era</article-title>
        <source>Nat. Rev. Genet.</source>
        <volume>21</volume>
        <year>2020</year>
        <fpage>243</fpage>
        <lpage>254</lpage>
        <pub-id pub-id-type="pmid">32034321</pub-id>
      </element-citation>
    </ref>
    <ref id="bib3">
      <label>3</label>
      <element-citation publication-type="journal" id="sref3">
        <person-group person-group-type="author">
          <name>
            <surname>Kociumaka</surname>
            <given-names>T.</given-names>
          </name>
          <name>
            <surname>Navarro</surname>
            <given-names>G.</given-names>
          </name>
          <name>
            <surname>Prezza</surname>
            <given-names>N.</given-names>
          </name>
        </person-group>
        <article-title>Towards a definitive compressibility measure for repetitive sequences</article-title>
        <source>IEEE Trans. Inf. Theor.</source>
        <volume>69</volume>
        <year>2023</year>
        <fpage>2074</fpage>
        <lpage>2092</lpage>
      </element-citation>
    </ref>
    <ref id="bib4">
      <label>4</label>
      <element-citation publication-type="book" id="sref4">
        <person-group person-group-type="author">
          <name>
            <surname>Burrows</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Wheeler</surname>
            <given-names>D.</given-names>
          </name>
        </person-group>
        <part-title>A block-sorting lossless data compression algorithm</part-title>
        <source>Digital SRC Research Report, Citeseer</source>
        <year>1994</year>
      </element-citation>
    </ref>
    <ref id="bib5">
      <label>5</label>
      <element-citation publication-type="journal" id="sref5">
        <person-group person-group-type="author">
          <name>
            <surname>Ziv</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Lempel</surname>
            <given-names>A.</given-names>
          </name>
        </person-group>
        <article-title>A universal algorithm for sequential data compression</article-title>
        <source>IEEE Trans. Inf. Theor.</source>
        <volume>23</volume>
        <year>1977</year>
        <fpage>337</fpage>
        <lpage>343</lpage>
      </element-citation>
    </ref>
    <ref id="bib6">
      <label>6</label>
      <element-citation publication-type="book" id="sref6">
        <person-group person-group-type="author">
          <name>
            <surname>Kempa</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Prezza</surname>
            <given-names>N.</given-names>
          </name>
        </person-group>
        <part-title>At the roots of dictionary compression: string attractors</part-title>
        <source>Proceedings of the 50th Annual ACM SIGACT Symposium on Theory of Computing</source>
        <year>2018</year>
        <fpage>827</fpage>
        <lpage>840</lpage>
      </element-citation>
    </ref>
    <ref id="bib7">
      <label>7</label>
      <element-citation publication-type="journal" id="sref7">
        <person-group person-group-type="author">
          <name>
            <surname>Kokot</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Dlugosz</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Deorowicz</surname>
            <given-names>S.</given-names>
          </name>
        </person-group>
        <article-title>KMC 3: counting and manipulating k-mer statistics</article-title>
        <source>Bioinformatics</source>
        <volume>33</volume>
        <year>2017</year>
        <fpage>2759</fpage>
        <lpage>2761</lpage>
        <pub-id pub-id-type="pmid">28472236</pub-id>
      </element-citation>
    </ref>
    <ref id="bib8">
      <label>8</label>
      <element-citation publication-type="book" id="sref8">
        <person-group person-group-type="author">
          <name>
            <surname>Broder</surname>
            <given-names>A.Z.</given-names>
          </name>
        </person-group>
        <part-title>On the resemblance and containment of documents</part-title>
        <source>Proceedings. Compression and Complexity of SEQUENCES 1997 (Cat. No. 97TB100171)</source>
        <year>1997</year>
        <publisher-name>IEEE</publisher-name>
        <fpage>21</fpage>
        <lpage>29</lpage>
      </element-citation>
    </ref>
    <ref id="bib9">
      <label>9</label>
      <element-citation publication-type="journal" id="sref9">
        <person-group person-group-type="author">
          <name>
            <surname>Ondov</surname>
            <given-names>B.D.</given-names>
          </name>
          <name>
            <surname>Treangen</surname>
            <given-names>T.J.</given-names>
          </name>
          <name>
            <surname>Melsted</surname>
            <given-names>P.</given-names>
          </name>
          <name>
            <surname>Mallonee</surname>
            <given-names>A.B.</given-names>
          </name>
          <name>
            <surname>Bergman</surname>
            <given-names>N.H.</given-names>
          </name>
          <name>
            <surname>Koren</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>A.M.</given-names>
          </name>
        </person-group>
        <article-title>Mash: fast genome and metagenome distance estimation using MinHash</article-title>
        <source>Genome Biol.</source>
        <volume>17</volume>
        <year>2016</year>
        <fpage>132</fpage>
        <pub-id pub-id-type="pmid">27323842</pub-id>
      </element-citation>
    </ref>
    <ref id="bib10">
      <label>10</label>
      <element-citation publication-type="book" id="sref10">
        <person-group person-group-type="author">
          <name>
            <surname>Meunier</surname>
            <given-names>F.</given-names>
          </name>
          <name>
            <surname>Gandouet</surname>
            <given-names>O.</given-names>
          </name>
          <name>
            <surname>Fusy</surname>
            <given-names>É.</given-names>
          </name>
          <name>
            <surname>Flajolet</surname>
            <given-names>P.</given-names>
          </name>
        </person-group>
        <part-title>Hyperloglog: The Analysis of a Near-Optimal Cardinality Estimation Algorithm</part-title>
        <year>2007</year>
        <publisher-name>Discrete Mathematics &amp; Theoretical Computer Science</publisher-name>
      </element-citation>
    </ref>
    <ref id="bib11">
      <label>11</label>
      <element-citation publication-type="journal" id="sref11">
        <person-group person-group-type="author">
          <name>
            <surname>Baker</surname>
            <given-names>D.N.</given-names>
          </name>
          <name>
            <surname>Langmead</surname>
            <given-names>B.</given-names>
          </name>
        </person-group>
        <article-title>Dashing: fast and accurate genomic distances with HyperLogLog</article-title>
        <source>Genome Biol.</source>
        <volume>20</volume>
        <year>2019</year>
        <fpage>265</fpage>
        <pub-id pub-id-type="pmid">31801633</pub-id>
      </element-citation>
    </ref>
    <ref id="bib12">
      <label>12</label>
      <element-citation publication-type="journal" id="sref12">
        <person-group person-group-type="author">
          <name>
            <surname>Boucher</surname>
            <given-names>C.</given-names>
          </name>
          <name>
            <surname>Gagie</surname>
            <given-names>T.</given-names>
          </name>
          <name>
            <surname>Kuhnle</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Langmead</surname>
            <given-names>B.</given-names>
          </name>
          <name>
            <surname>Manzini</surname>
            <given-names>G.</given-names>
          </name>
          <name>
            <surname>Mun</surname>
            <given-names>T.</given-names>
          </name>
        </person-group>
        <article-title>Prefix-free parsing for building big BWTs</article-title>
        <source>Algorithm Mol. Biol.</source>
        <volume>14</volume>
        <year>2019</year>
        <fpage>13</fpage>
      </element-citation>
    </ref>
    <ref id="bib13">
      <label>13</label>
      <element-citation publication-type="book" id="sref13">
        <person-group person-group-type="author">
          <name>
            <surname>Hong</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Rossi</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Boucher</surname>
            <given-names>C.</given-names>
          </name>
        </person-group>
        <part-title>Lz77 via prefix-free parsing</part-title>
        <source>2023 Proceedings of the Symposium on Algorithm Engineering and Experiments (ALENEX)</source>
        <year>2023</year>
        <publisher-name>SIAM</publisher-name>
        <fpage>123</fpage>
        <lpage>134</lpage>
      </element-citation>
    </ref>
    <ref id="bib14">
      <label>14</label>
      <element-citation publication-type="journal" id="sref14">
        <person-group person-group-type="author">
          <name>
            <surname>Chaisson</surname>
            <given-names>M.J.P.</given-names>
          </name>
          <name>
            <surname>Sanders</surname>
            <given-names>A.D.</given-names>
          </name>
          <name>
            <surname>Zhao</surname>
            <given-names>X.</given-names>
          </name>
          <name>
            <surname>Malhotra</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Porubsky</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Rausch</surname>
            <given-names>T.</given-names>
          </name>
          <name>
            <surname>Gardner</surname>
            <given-names>E.J.</given-names>
          </name>
          <name>
            <surname>Rodriguez</surname>
            <given-names>O.L.</given-names>
          </name>
          <name>
            <surname>Guo</surname>
            <given-names>L.</given-names>
          </name>
          <name>
            <surname>Collins</surname>
            <given-names>R.L.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Multi-platform discovery of haplotype-resolved structural variation in human genomes</article-title>
        <source>Nat. Commun.</source>
        <volume>10</volume>
        <year>2019</year>
        <fpage>1784</fpage>
        <pub-id pub-id-type="pmid">30992455</pub-id>
      </element-citation>
    </ref>
    <ref id="bib15">
      <label>15</label>
      <element-citation publication-type="journal" id="sref15">
        <person-group person-group-type="author">
          <name>
            <surname>Ebert</surname>
            <given-names>P.</given-names>
          </name>
          <name>
            <surname>Audano</surname>
            <given-names>P.A.</given-names>
          </name>
          <name>
            <surname>Zhu</surname>
            <given-names>Q.</given-names>
          </name>
          <name>
            <surname>Rodriguez-Martin</surname>
            <given-names>B.</given-names>
          </name>
          <name>
            <surname>Porubsky</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Bonder</surname>
            <given-names>M.J.</given-names>
          </name>
          <name>
            <surname>Sulovari</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Ebler</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Zhou</surname>
            <given-names>W.</given-names>
          </name>
          <name>
            <surname>Serra Mari</surname>
            <given-names>R.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Haplotype-resolved diverse human genomes and integrated analysis of structural variation</article-title>
        <source>Science</source>
        <volume>372</volume>
        <year>2021</year>
        <object-id pub-id-type="publisher-id">eabf7117</object-id>
      </element-citation>
    </ref>
    <ref id="bib16">
      <label>16</label>
      <element-citation publication-type="journal" id="sref16">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H.</given-names>
          </name>
          <name>
            <surname>Handsaker</surname>
            <given-names>B.</given-names>
          </name>
          <name>
            <surname>Wysoker</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Fennell</surname>
            <given-names>T.</given-names>
          </name>
          <name>
            <surname>Ruan</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Homer</surname>
            <given-names>N.</given-names>
          </name>
          <name>
            <surname>Marth</surname>
            <given-names>G.</given-names>
          </name>
          <name>
            <surname>Abecasis</surname>
            <given-names>G.</given-names>
          </name>
          <name>
            <surname>Durbin</surname>
            <given-names>R.</given-names>
          </name>
          <collab>1000 Genome Project Data Processing Subgroup</collab>
        </person-group>
        <article-title>The sequence alignment/map format and samtools</article-title>
        <source>Bioinformatics</source>
        <volume>25</volume>
        <year>2009</year>
        <fpage>2078</fpage>
        <lpage>2079</lpage>
        <pub-id pub-id-type="pmid">19505943</pub-id>
      </element-citation>
    </ref>
    <ref id="bib17">
      <label>17</label>
      <element-citation publication-type="journal" id="sref17">
        <person-group person-group-type="author">
          <name>
            <surname>Wang</surname>
            <given-names>T.</given-names>
          </name>
          <name>
            <surname>Antonacci-Fulton</surname>
            <given-names>L.</given-names>
          </name>
          <name>
            <surname>Howe</surname>
            <given-names>K.</given-names>
          </name>
          <name>
            <surname>Lawson</surname>
            <given-names>H.A.</given-names>
          </name>
          <name>
            <surname>Lucas</surname>
            <given-names>J.K.</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>A.M.</given-names>
          </name>
          <name>
            <surname>Popejoy</surname>
            <given-names>A.B.</given-names>
          </name>
          <name>
            <surname>Asri</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Carson</surname>
            <given-names>C.</given-names>
          </name>
          <name>
            <surname>Chaisson</surname>
            <given-names>M.J.P.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The Human Pangenome Project: a global resource to map genomic diversity</article-title>
        <source>Nature</source>
        <volume>604</volume>
        <year>2022</year>
        <fpage>437</fpage>
        <lpage>446</lpage>
        <pub-id pub-id-type="pmid">35444317</pub-id>
      </element-citation>
    </ref>
    <ref id="bib18">
      <label>18</label>
      <element-citation publication-type="journal" id="sref18">
        <person-group person-group-type="author">
          <name>
            <surname>Zielezinski</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Girgis</surname>
            <given-names>H.Z.</given-names>
          </name>
          <name>
            <surname>Bernard</surname>
            <given-names>G.</given-names>
          </name>
          <name>
            <surname>Leimeister</surname>
            <given-names>C.A.</given-names>
          </name>
          <name>
            <surname>Tang</surname>
            <given-names>K.</given-names>
          </name>
          <name>
            <surname>Dencker</surname>
            <given-names>T.</given-names>
          </name>
          <name>
            <surname>Lau</surname>
            <given-names>A.K.</given-names>
          </name>
          <name>
            <surname>Röhling</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Choi</surname>
            <given-names>J.J.</given-names>
          </name>
          <name>
            <surname>Waterman</surname>
            <given-names>M.S.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Benchmarking of alignment-free sequence comparison methods</article-title>
        <source>Genome Biol.</source>
        <volume>20</volume>
        <year>2019</year>
        <fpage>144</fpage>
        <pub-id pub-id-type="pmid">31345254</pub-id>
      </element-citation>
    </ref>
    <ref id="bib19">
      <label>19</label>
      <element-citation publication-type="journal" id="sref19">
        <person-group person-group-type="author">
          <name>
            <surname>Baker</surname>
            <given-names>D.N.</given-names>
          </name>
          <name>
            <surname>Langmead</surname>
            <given-names>B.</given-names>
          </name>
        </person-group>
        <article-title>Dashing 2: genomic sketching with multiplicities and locality-sensitive hashing</article-title>
        <comment>Preprint at</comment>
        <source>bioRxiv</source>
        <year>2022</year>
        <pub-id pub-id-type="doi">10.1101/2022.10.16.512384</pub-id>
      </element-citation>
    </ref>
    <ref id="bib20">
      <label>20</label>
      <element-citation publication-type="journal" id="sref20">
        <person-group person-group-type="author">
          <name>
            <surname>Chikhi</surname>
            <given-names>R.</given-names>
          </name>
          <name>
            <surname>Medvedev</surname>
            <given-names>P.</given-names>
          </name>
        </person-group>
        <article-title>Informed and automated k-mer size selection for genome assembly</article-title>
        <source>Bioinformatics</source>
        <volume>30</volume>
        <year>2014</year>
        <fpage>31</fpage>
        <lpage>37</lpage>
        <pub-id pub-id-type="pmid">23732276</pub-id>
      </element-citation>
    </ref>
    <ref id="bib21">
      <label>21</label>
      <element-citation publication-type="journal" id="sref21">
        <person-group person-group-type="author">
          <name>
            <surname>Bussi</surname>
            <given-names>Y.</given-names>
          </name>
          <name>
            <surname>Kapon</surname>
            <given-names>R.</given-names>
          </name>
          <name>
            <surname>Reich</surname>
            <given-names>Z.</given-names>
          </name>
        </person-group>
        <article-title>Large-scale k-mer-based analysis of the informational properties of genomes, comparative genomics and taxonomy</article-title>
        <source>PLoS One</source>
        <volume>16</volume>
        <year>2021</year>
        <object-id pub-id-type="publisher-id">e0258693</object-id>
      </element-citation>
    </ref>
    <ref id="bib22">
      <label>22</label>
      <element-citation publication-type="journal" id="sref22">
        <person-group person-group-type="author">
          <name>
            <surname>Ertl</surname>
            <given-names>O.</given-names>
          </name>
        </person-group>
        <article-title>New cardinality estimation algorithms for hyperloglog sketches, CoRR abs/1702</article-title>
        <comment>Preprint at</comment>
        <source>arXiv</source>
        <year>2017</year>
        <ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/1702.01284.arXiv:1702.01284" id="intref0120">http://arxiv.org/abs/1702.01284.arXiv:1702.01284</ext-link>
      </element-citation>
    </ref>
    <ref id="bib23">
      <label>23</label>
      <element-citation publication-type="journal" id="sref23">
        <person-group person-group-type="author">
          <name>
            <surname>Page</surname>
            <given-names>A.J.</given-names>
          </name>
          <name>
            <surname>Cummins</surname>
            <given-names>C.A.</given-names>
          </name>
          <name>
            <surname>Hunt</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Wong</surname>
            <given-names>V.K.</given-names>
          </name>
          <name>
            <surname>Reuter</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Holden</surname>
            <given-names>M.T.G.</given-names>
          </name>
          <name>
            <surname>Fookes</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Falush</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Keane</surname>
            <given-names>J.A.</given-names>
          </name>
          <name>
            <surname>Parkhill</surname>
            <given-names>J.</given-names>
          </name>
        </person-group>
        <article-title>Roary: rapid large-scale prokaryote pan genome analysis</article-title>
        <source>Bioinformatics</source>
        <volume>31</volume>
        <year>2015</year>
        <fpage>3691</fpage>
        <lpage>3693</lpage>
        <pub-id pub-id-type="pmid">26198102</pub-id>
      </element-citation>
    </ref>
    <ref id="bib24">
      <label>24</label>
      <element-citation publication-type="journal" id="sref24">
        <person-group person-group-type="author">
          <name>
            <surname>Sheikhizadeh</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Schranz</surname>
            <given-names>M.E.</given-names>
          </name>
          <name>
            <surname>Akdel</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>de Ridder</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Smit</surname>
            <given-names>S.</given-names>
          </name>
        </person-group>
        <article-title>PanTools: representation, storage and exploration of pan-genomic data</article-title>
        <source>Bioinformatics</source>
        <volume>32</volume>
        <year>2016</year>
        <fpage>i487</fpage>
        <lpage>i493</lpage>
        <pub-id pub-id-type="pmid">27587666</pub-id>
      </element-citation>
    </ref>
  </ref-list>
  <sec id="appsec2" sec-type="supplementary-material">
    <title>Supplemental information</title>
    <p id="p0205">
      <supplementary-material content-type="local-data" id="mmc1">
        <caption>
          <title>Document S1. Figure S1</title>
        </caption>
        <media xlink:href="mmc1.pdf"/>
      </supplementary-material>
    </p>
  </sec>
  <ack id="ack0010">
    <title>Acknowledgments</title>
    <p id="p0185">We thank Aaron Quinlan, Dominik Kempa, and Yun William Yu for helpful discussions. O.Y.A. and B.L. were supported by <funding-source id="gs3"><institution-wrap><institution-id institution-id-type="doi">10.13039/100000002</institution-id><institution>NIH</institution></institution-wrap></funding-source> /<funding-source id="gs9"><institution-wrap><institution-id institution-id-type="doi">10.13039/100000051</institution-id><institution>NHGRI</institution></institution-wrap></funding-source> grant R01HG011392 to B.L. J.K.B. and B.L. were supported by <funding-source id="gs4"><institution-wrap><institution-id institution-id-type="doi">10.13039/100000002</institution-id><institution>NIH</institution></institution-wrap></funding-source> /<funding-source id="gs11"><institution-wrap><institution-id institution-id-type="doi">10.13039/100000057</institution-id><institution>NIGMS</institution></institution-wrap></funding-source> grant R35GM139602 to B.L. and <funding-source id="gs7"><institution-wrap><institution-id institution-id-type="doi">10.13039/100000002</institution-id><institution>NIH</institution></institution-wrap></funding-source> /<funding-source id="gs10"><institution-wrap><institution-id institution-id-type="doi">10.13039/100000051</institution-id><institution>NHGRI</institution></institution-wrap></funding-source> grant R01HG012252. O.Y.A. was also supported by <funding-source id="gs8"><institution-wrap><institution-id institution-id-type="doi">10.13039/100000002</institution-id><institution>NIH</institution></institution-wrap></funding-source> /<funding-source id="gs12"><institution-wrap><institution-id institution-id-type="doi">10.13039/100000057</institution-id><institution>NIGMS</institution></institution-wrap></funding-source> training grant T32GM119998. This work was carried out at the <funding-source id="gs5">Advanced Research Computing at Hopkins</funding-source> (ARCH) core facility (<email>rockfish.jhu.edu</email>), which is supported by the <funding-source id="gs6"><institution-wrap><institution-id institution-id-type="doi">10.13039/100000001</institution-id><institution>National Science Foundation</institution></institution-wrap></funding-source> (NSF) grant number OAC 1920103.</p>
    <sec id="sec5">
      <title>Author contributions</title>
      <p id="p0190">J.K.B., O.Y.A., and B.L. conceived the method, designed the experiments, and ran the experiments. J.K.B. and B.L. wrote the paper. J.K.B. wrote the DandD software tool. J.K.B., O.Y.A., and B.L. edited and approved the final manuscript.</p>
    </sec>
    <sec sec-type="COI-statement" id="sec6">
      <title>Declaration of interests</title>
      <p id="p0195">The authors declare no competing interests.</p>
    </sec>
  </ack>
  <fn-group>
    <fn id="appsec1" fn-type="supplementary-material">
      <p id="p0200">Supplemental information can be found online at <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1016/j.isci.2024.109054" id="intref0115">https://doi.org/10.1016/j.isci.2024.109054</ext-link>.</p>
    </fn>
  </fn-group>
</back>
<?DTDIdentifier.IdentifierValue -//ES//DTD journal article DTD version 5.6.0//EN//XML?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName art560.dtd?>
<?SourceDTD.Version 5.6.0?>
<?ConverterInfo.XSLTName elsevier2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<?origin publisher?>
<?FILEmeta_ISCI109054 xml ?>
<?FILEmain xml ?>
<?FILEmain pdf ?>
<?FILEgr1 jpg ?>
<?FILEgr2 jpg ?>
<?FILEgr3 jpg ?>
<?FILEgr4 jpg ?>
<?FILEgr5 jpg ?>
<?FILEfx1 jpg ?>
<?FILEmmc1 pdf ?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">iScience</journal-id>
    <journal-id journal-id-type="iso-abbrev">iScience</journal-id>
    <journal-title-group>
      <journal-title>iScience</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2589-0042</issn>
    <publisher>
      <publisher-name>Elsevier</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10867639</article-id>
    <article-id pub-id-type="pii">S2589-0042(24)00275-X</article-id>
    <article-id pub-id-type="doi">10.1016/j.isci.2024.109054</article-id>
    <article-id pub-id-type="publisher-id">109054</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>DandD: Efficient measurement of sequence growth and similarity</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" id="au1">
        <name>
          <surname>Bonnie</surname>
          <given-names>Jessica K.</given-names>
        </name>
        <email>jbonnie1@jhu.edu</email>
        <xref rid="aff1" ref-type="aff">1</xref>
        <xref rid="cor1" ref-type="corresp">∗</xref>
      </contrib>
      <contrib contrib-type="author" id="au2">
        <name>
          <surname>Ahmed</surname>
          <given-names>Omar Y.</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">1</xref>
      </contrib>
      <contrib contrib-type="author" id="au3">
        <name>
          <surname>Langmead</surname>
          <given-names>Ben</given-names>
        </name>
        <email>langmea@cs.jhu.edu</email>
        <xref rid="aff1" ref-type="aff">1</xref>
        <xref rid="fn1" ref-type="fn">2</xref>
        <xref rid="cor2" ref-type="corresp">∗∗</xref>
      </contrib>
      <aff id="aff1"><label>1</label>Department of Computer Science, Johns Hopkins University, Baltimore, MD, USA</aff>
    </contrib-group>
    <author-notes>
      <corresp id="cor1"><label>∗</label>Corresponding author <email>jbonnie1@jhu.edu</email></corresp>
      <corresp id="cor2"><label>∗∗</label>Corresponding author <email>langmea@cs.jhu.edu</email></corresp>
      <fn id="fn1">
        <label>2</label>
        <p id="ntpara0010">Lead contact</p>
      </fn>
    </author-notes>
    <pub-date pub-type="pmc-release">
      <day>01</day>
      <month>2</month>
      <year>2024</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on <pub-date
						pub-type="epub">.-->
    <pub-date pub-type="collection">
      <day>15</day>
      <month>3</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>01</day>
      <month>2</month>
      <year>2024</year>
    </pub-date>
    <volume>27</volume>
    <issue>3</issue>
    <elocation-id>109054</elocation-id>
    <history>
      <date date-type="received">
        <day>29</day>
        <month>12</month>
        <year>2023</year>
      </date>
      <date date-type="rev-recd">
        <day>11</day>
        <month>1</month>
        <year>2024</year>
      </date>
      <date date-type="accepted">
        <day>23</day>
        <month>1</month>
        <year>2024</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© 2024 The Authors</copyright-statement>
      <copyright-year>2024</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an open access article under the CC BY license (http://creativecommons.org/licenses/by/4.0/).</license-p>
      </license>
    </permissions>
    <abstract id="abs0010">
      <title>Summary</title>
      <p>Genome assembly databases are growing rapidly. The redundancy of sequence content between a new assembly and previous ones is neither conceptually nor algorithmically easy to measure. We introduce pertinent methods and DandD, a tool addressing how much new sequence is gained when a sequence collection grows. DandD can describe how much structural variation is discovered in each new human genome assembly and when discoveries will level off in the future. DandD uses a measure called δ (“delta”), developed initially for data compression and chiefly dependent on <italic>k</italic>-mer counts. DandD rapidly estimates δ using genomic sketches. We propose δ as an alternative to <italic>k</italic>-<italic>mer</italic>-specific cardinalities when computing the Jaccard coefficient, thereby avoiding the pitfalls of a poor choice of <italic>k</italic>. We demonstrate the utility of DandD’s functions for estimating δ, characterizing the rate of pangenome growth, and computing all-pairs similarities using <italic>k</italic>-independent Jaccard.</p>
    </abstract>
    <abstract abstract-type="graphical" id="abs0015">
      <title>Graphical abstract</title>
      <fig id="undfig1" position="anchor">
        <graphic xlink:href="fx1"/>
      </fig>
    </abstract>
    <abstract abstract-type="author-highlights" id="abs0020">
      <title>Highlights</title>
      <p>
        <list list-type="simple" id="ulist0010">
          <list-item id="u0010">
            <label>•</label>
            <p id="p0010">DandD uses a measure from data compression to measure amount of distinct sequence</p>
          </list-item>
          <list-item id="u0015">
            <label>•</label>
            <p id="p0015">The measure can be used to characterize pangenome “openness”</p>
          </list-item>
          <list-item id="u0020">
            <label>•</label>
            <p id="p0020">The measure can also be used as a length-independent measure of sequence similarity</p>
          </list-item>
        </list>
      </p>
    </abstract>
    <abstract abstract-type="teaser" id="abs0025">
      <p>Genomics; Biocomputational method; Genomic analysis; Sequence analysis</p>
    </abstract>
    <kwd-group id="kwrds0010">
      <title>Subject areas</title>
      <kwd>Genomics</kwd>
      <kwd>Biocomputational method</kwd>
      <kwd>Genomic analysis</kwd>
      <kwd>Sequence analysis</kwd>
    </kwd-group>
  </article-meta>
  <notes>
    <p id="misc9010">Published: February 1, 2024</p>
  </notes>
</front>
<body>
  <sec id="sec1">
    <title>Introduction</title>
    <p id="p0025">Pangenomes are growing as more high-quality assemblies are produced. Once a sufficient number of assemblies have been added, a pangenome can reach a point of diminishing returns, where each new genome contributes little novel sequence to the collection.<xref rid="bib1" ref-type="bibr"><sup>1</sup></xref> Measuring the amount of new sequence per assembly, though, is neither conceptually nor algorithmically straightforward. By surveying studies that computed the average amount of novel sequence per individual in human genome assemblies, Sherman et al.<xref rid="bib2" ref-type="bibr"><sup>2</sup></xref> found that estimates varied from 0.2 Mbp to 14 Mbp. This wide range in values was attributable to reasonable investigator choices such as selection of alignment parameters or criteria for identifying contigs with novel sequence. In short, the parameter choices led to a wide range of answers, making the end results difficult to compare.</p>
    <p id="p0030">Alignment-free, i.e., <italic>k</italic>-mer based, approaches offer an alternative. Such methods have been used to determine if a pangenome has reached the point of being “closed,” with open/closed status determined by fitting a Heaps’-Law model to an empirical <italic>k</italic>-mer growth function.<xref rid="bib1" ref-type="bibr"><sup>1</sup></xref> While avoiding many of the parameter-selection pitfalls of alignment-based methods, <italic>k</italic>-mer based approaches, as the name suggests, still require an initial choice of substring (<italic>k</italic>-mer) length, with subsequent measurements dependent on this selection.</p>
    <p id="p0035">We present a new parameter-free method and tool for measuring the amount of sequence in a pangenome based on ideas from string compression. We use a quantity “delta” (δ) that measures compressibility of a repetitive string.<xref rid="bib3" ref-type="bibr"><sup>3</sup></xref> Other quantities have been proposed for this purpose, including the number of runs in the Burrows-Wheeler Transform (<italic>r</italic>),<xref rid="bib4" ref-type="bibr"><sup>4</sup></xref> number of phrases in the Lempel-Ziv parse (<italic>z</italic>),<xref rid="bib5" ref-type="bibr"><sup>5</sup></xref> and the size of the string attractor (γ).<xref rid="bib6" ref-type="bibr"><sup>6</sup></xref> All these measures have distinct algorithms and interpretations, but δ is known to have advantageous bounds compared to the others. For instance, <inline-formula><mml:math id="M1" altimg="si1.gif"><mml:mrow><mml:mi>δ</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">≤</mml:mo><mml:mi>γ</mml:mi></mml:mrow></mml:math></inline-formula> for all strings.<xref rid="bib3" ref-type="bibr"><sup>3</sup></xref></p>
    <p id="p0040">Computational difficulty among measures quantifying novel sequence varies widely. <italic>z</italic> and <italic>r</italic> require computing a Lempel-Ziv parse or Burrows-Wheeler Transform, respectively, across the entire input string. Computing γ is nondeterministic polynomial-time (NP) complete. Computing δ, however, requires little more than a single pass over the input to count <italic>k</italic>-mers for various values of <italic>k</italic> (<xref rid="fig1" ref-type="fig">Figure 1</xref>). Available tools like KMC<xref rid="bib7" ref-type="bibr"><sup>7</sup></xref> can do this efficiently.</p>
    <p id="p0045">Besides being a useful measure of repetitiveness, δ is also remarkably easy to estimate. This is true not only when estimating δ over a given sequence collection, but also when estimating over <italic>unions</italic> of sequences, as is needed to assess pangenome saturation. Estimating δ for sequences and their unions reduces to the problem of estimating set cardinality. Our main insight is that estimating cardinalities over large sequences and their unions is highly efficient using sketches such as MinHash<xref rid="bib8" ref-type="bibr"><sup>8</sup></xref><sup>,</sup><xref rid="bib9" ref-type="bibr"><sup>9</sup></xref> or HyperLogLog.<xref rid="bib10" ref-type="bibr"><sup>10</sup></xref><sup>,</sup><xref rid="bib11" ref-type="bibr"><sup>11</sup></xref></p>
    <p id="p0050">Additionally, we propose a measure called the <italic>k</italic>-independent Jaccard (KIJ), as an alternative to the Jaccard coefficient. KIJ avoids the risks of preselecting <italic>k</italic>-mer length by using δ. Having a principled way to measure similarity without a pre-determined <italic>k</italic> is critically important since poor choices of <italic>k</italic> can lead to incorrect conclusions downstream, as we show in the context of phylogenetic reconstruction.</p>
    <p id="p0055">We describe the algorithms and data structures implemented in the new DandD software tool, which can compute and estimate δ in a variety of scenarios relevant to genomics and pangenomics. For example, we demonstrate that (a) DandD can efficiently and accurately estimate δ using genomic sketches, (b) DandD can measure how much new sequence is in each new assembled human genome in a pangenome, including when the input consists of assemblies without common coordinates, and finally (c) DandD can be used to compute KIJ, yielding phylogenetic trees that closely match known truth.</p>
    <p id="p0210">DandD is open source software available at: <ext-link ext-link-type="uri" xlink:href="https://github.com/jessicabonnie/dandd" id="PC_linkz8PBVGvn2g">https://github.com/jessicabonnie/dandd</ext-link>.</p>
  </sec>
  <sec id="sec2">
    <title>Results</title>
    <sec id="sec2.1">
      <title>Behavior of δ, r, and z in practice</title>
      <p id="p0060">We began with an empirical study of the relationship between <italic>z</italic>, <italic>r</italic>, and δ using real genome sequence data. We collected 50 <italic>Salmonella enterica</italic> genomes from Refseq, putting them in an arbitrary order. We computed <italic>z</italic>, <italic>r</italic>, and δ for sets of these genomes, starting with the first and cumulatively adding one at a time. In the case of <italic>z</italic>, we used a combination of the newscanNT.x tool from Big-BWT<xref rid="bib12" ref-type="bibr"><sup>12</sup></xref> and the lz_77 tool from PFP_LZ77.<xref rid="bib13" ref-type="bibr"><sup>13</sup></xref> To compute <italic>r</italic>, we used the pfbwt-f64 tool.<xref rid="bib12" ref-type="bibr"><sup>12</sup></xref> For δ, we used DandD in its --exact mode, which in turn uses KMC3.<xref rid="bib7" ref-type="bibr"><sup>7</sup></xref> For <italic>r</italic> and <italic>z</italic>, both the genomes and their reverse complements were added to the set at the same time. For δ, we accomplished this through <italic>k</italic>-mer canonicalization. Results are shown in <xref rid="fig2" ref-type="fig">Figure 2</xref>. The three measures were normalized by first subtracting the minimum then dividing by the maximum, to obtain values ranging from 0 to 1. There is an obvious, strong relationship between the measures, with no two of the normalized measures differing by more than <inline-formula><mml:math id="M2" altimg="si2.gif"><mml:mrow><mml:mo linebreak="goodbreak" linebreakstyle="after">±</mml:mo><mml:mn>0.0273</mml:mn></mml:mrow></mml:math></inline-formula> at any point. <xref rid="mmc1" ref-type="supplementary-material">Figure S1</xref> also shows the wall clock time required by these methods for computing <italic>z</italic>, <italic>r</italic>, and δ, with the KMC3-based method for computing δ being the fastest.<fig id="fig2"><label>Figure 2</label><caption><p>Normalized compression metrics δ, <italic>r</italic>, and <italic>z</italic> reflect the same pattern of growth with the inclusion of each additional assembly from an arbitary ordering of 50 Salmonella genomes</p><p>Normalization was achieved by scaling to the maximum value for each measure.</p></caption><graphic xlink:href="gr2"/></fig></p>
    </sec>
    <sec id="sec2.2">
      <title>Efficient cardinality estimation with dashing</title>
      <p id="p0065">We sought to compare the computational performance and accuracy of DandD’s two modes, the --exact mode (“exact”) and the sketch-based mode (“approximate”). We ran DandD in both modes on three datasets: 10 <italic>E. coli</italic> genomes, 10 salmonella genomes, and 12 human genomes. We performed all the computations for a single value of <italic>k</italic>. These methods are being assessed for performance in computing (or estimating) the cardinatlity <inline-formula><mml:math id="M3" altimg="si3.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, not δ. Given that computing δ means repeatedly performing this process for several values of <italic>k</italic>, this provides sufficient basis for comparing the methods. For each dataset and method, we performed three computations. First, we used the selected method to build a <italic>k</italic>-mer database (for “exact”) or sketch (for “approximate”) over each input genome. We used the selected method to perform a series of cumulative unions, starting from a single database/sketch and combining them in successive steps until all genomes are included. Finally, we performed a single global union of all of the individual databases/sketches. In all cases, we used /usr/bin/time -v to measure the time and the maximum memory usage. In nearly all cases, the “approximate” method is faster than the “exact” method (<xref rid="tbl1" ref-type="table">Table 1</xref>). This is particularly true for the union steps for the human genome inputs, where the approximate method is as much as three orders of magnitude faster than the exact method. The “approximate” method’s peak memory footprint is consistently smaller than the exact method’s, sometimes by two orders of magnitude. Further, for every experiment described in <xref rid="tbl1" ref-type="table">Table 1</xref>, we used Dashing to estimate the cardinality from the sketch produced and compared this to the true cardinality as computed by KMC3. We computed the relative error of the Dashing estimate as <inline-formula><mml:math id="M4" altimg="si4.gif"><mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mrow><mml:mi>D</mml:mi><mml:mo>−</mml:mo><mml:mi>K</mml:mi></mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mo linebreak="goodbreak" linebreakstyle="after">/</mml:mo><mml:mi>K</mml:mi></mml:mrow></mml:math></inline-formula>, where <italic>D</italic> is Dashing’s estimate and <italic>K</italic> is KMC3’s exact count. Overall, the mean relative error was <inline-formula><mml:math id="M5" altimg="si5.gif"><mml:mrow><mml:mn>6.537</mml:mn><mml:mo linebreak="goodbreak" linebreakstyle="after">×</mml:mo><mml:msup><mml:mn>10</mml:mn><mml:mrow><mml:mo>−</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>. The maximum observed relative error was <inline-formula><mml:math id="M6" altimg="si6.gif"><mml:mrow><mml:mn>1.32</mml:mn><mml:mo linebreak="goodbreak" linebreakstyle="after">×</mml:mo><mml:msup><mml:mn>10</mml:mn><mml:mrow><mml:mo>−</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>.<table-wrap position="float" id="tbl1"><label>Table 1</label><caption><p>Computational efficiency of KMC3 versus Dashing for preprocessing and unioning</p></caption><table frame="hsides" rules="groups"><thead><tr><th rowspan="2">Task</th><th colspan="2">Exact (KMC3)<hr/></th><th colspan="2">Approximate (Dashing)<hr/></th></tr><tr><th>Time (seconds)</th><th>Peak Mem (GB)</th><th>Time (seconds)</th><th>Peak Mem (GB)</th></tr></thead><tbody><tr><td colspan="5"><bold><italic>E. coli</italic> (n = 10, k = 15)</bold></td></tr><tr><td colspan="5"><hr/></td></tr><tr><td>Preprocess 10 inputs (mean)</td><td>0.626</td><td>0.100</td><td>0.353</td><td>0.0138</td></tr><tr><td>9 cumulative unions (total)</td><td>4.39</td><td>0.381</td><td>2.28</td><td>6.58e-3</td></tr><tr><td>1 global union (total)</td><td>2.26</td><td>0.403</td><td>0.270</td><td>0.0129</td></tr><tr><td colspan="5"><hr/></td></tr><tr><td colspan="5"><bold><italic>Salmonella</italic> (n = 10, k = 14)</bold></td></tr><tr><td colspan="5"><hr/></td></tr><tr><td>Preprocess 10 inputs (mean)</td><td>0.643</td><td>0.100</td><td>0.340</td><td>0.0138</td></tr><tr><td>9 cumulative unions (total)</td><td>3.39</td><td>0.388</td><td>2.13</td><td>6.59e-3</td></tr><tr><td>1 global union (total)</td><td>1.85</td><td>0.389</td><td>0.28</td><td>0.0129</td></tr><tr><td colspan="5"><hr/></td></tr><tr><td colspan="5"><bold><italic>Human</italic> (n = 10, k = 20)</bold></td></tr><tr><td colspan="5"><hr/></td></tr><tr><td>Preprocess 10 inputs (mean)</td><td>40.8</td><td>11.7</td><td>44.2</td><td>0.127</td></tr><tr><td>9 cumulative unions (total)</td><td>1,750</td><td>8.14</td><td>2.16</td><td>6.59e-3</td></tr><tr><td>1 global union (total)</td><td>829</td><td>16.6</td><td>0.28</td><td>0.0129</td></tr></tbody></table><table-wrap-foot><fn><p>For KMC3, preprocessing consists of building <italic>k</italic>-mer count databases. For Dashing, it consists of building genomic sketches. We analyzed three collections of genome assemblies: E. coli (n = 10, k = 15), salmonella (n = 10, k = 14), and human (n = 10, k = 20). For simplicity, we chose a single <italic>k</italic> for each which was appropriate to the species. We measured the time and memory (resident set size) required to preprocess the 10 inputs on average, reported in rows labeled “Preprocess 10 inputs.” We chose a random ordering of the genomes and measured the resources required to perform a series of unions, each adding one additional genome to the union (“9 cumulative unions”). We also measured resources required to union all preprocessed datasets at once (“1 global union”).</p></fn></table-wrap-foot></table-wrap></p>
    </sec>
    <sec id="sec2.3">
      <title>Using DandD to characterize sublinearity and openness</title>
      <p id="p0070">We ran the DandD progressive command on a set of 34 human haplotypes taken from the Human Genome Structural Variation Consortium (HGSVC2) project.<xref rid="bib14" ref-type="bibr"><sup>14</sup></xref><sup>,</sup><xref rid="bib15" ref-type="bibr"><sup>15</sup></xref> The haplotypes were chosen to all have an X chromosome, to avoid large increments in δ due only to the addition of the Y chromosome. HGSVC2 is organized into variant call format (VCF) files for each distinct variant type: single nucleotide variants (SNVs), small insertions and deletions (Indels), or structural variants (SVs). We repeated our experiment across different subsets of variant categories. For instance, to create the FASTA sequences used as input to our “SNV only” experiment, we used bcftools consensus<xref rid="bib16" ref-type="bibr"><sup>16</sup></xref> to create 34 haplotype-specific FASTA files, taking rows from the VCF file containing SNVs for 17 individuals annotated as female. For the “SNVs + indels” experiment, we did the same but taking rows from both the SNV and Indel VCF files. For the “SNVs + SVs + indels” experiment, we did the same but taking rows from all three VCFs. In all cases, the individual haplotype FASTAs were then provided to DandD progressive. Since it is impractical to attempt all orderings of 34 haplotypes, we used DandD’s --norder 120 option to randomly generate a series of 120 possible permutations. We performed a corresponding experiment for 56 haplotypes from the Human Pangenome Reference Consortium (HPRC),<xref rid="bib17" ref-type="bibr"><sup>17</sup></xref> taken from 28 individuals annotated as female. In this case, the FASTA inputs to DandD were the phased assemblies provided by the HPRC. There is no accompanying VCF file describing variants or variant types, giving us no way to stratify by variant type as we did for HGSVC2. However, DandD is applicable regardless, since it simply accepts any FASTA inputs. We used DandD’s --norder 90 option to randomly generate a series of 90 possible permutations, 5 of which are shown in <xref rid="fig3" ref-type="fig">Figure 3</xref>B. In all cases, we computed a Heaps’-Law fit to the mean δ values and recorded the α openness statistic<xref rid="bib1" ref-type="bibr"><sup>1</sup></xref> for each. Fit values of α are reported in the <xref rid="fig3" ref-type="fig">Figure 3</xref> legends. As seen in <xref rid="fig3" ref-type="fig">Figure 3</xref>, all experiments showed sublinear growth in mean δ. For HGSVC2, we observed that “SNVs + SVs + Indels” had the highest δ overall, with “SNVs + Indels” having slightly lower values, and “SNVs only” having still lower values. This is expected, since the inclusion of each additional variant class should lead to new distinct sequence. The Heaps’-Law α was approximately the same for all three HGSVC2 variant subsets, <inline-formula><mml:math id="M7" altimg="si7.gif"><mml:mrow><mml:mo linebreak="goodbreak" linebreakstyle="after">≈</mml:mo><mml:mn>0.94</mml:mn></mml:mrow></mml:math></inline-formula> in all cases. Thus, all variant classes lead to the same conclusion about “openness” of the HGSVC2 pangenome, i.e., <inline-formula><mml:math id="M8" altimg="si8.gif"><mml:mrow><mml:mi>α</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">≤</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> indicates it is open. The HPRC data also showed sublinear growth, and a range of δ′s quite similar to those observed for HGSVC2. The Heaps’-Law <inline-formula><mml:math id="M9" altimg="si9.gif"><mml:mrow><mml:mi>α</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">=</mml:mo><mml:mn>0.873</mml:mn></mml:mrow></mml:math></inline-formula>, again indicating an open pangenome. The fact that α is lower for HPRC may indicate that the <italic>de novo</italic> assemblies from long reads give access to a wider array of genetic variants, which in turn requires more genomes to saturate the pangenome. However, this is hard to disentangle from the effects of sequencing errors, which can be counted (spuriously) as novel sequence. Removing the effect of sequencing errors is an important problem, which we return to in the Discussion.<fig id="fig3"><label>Figure 3</label><caption><p>Empirical growth of δ for human haplotypes from the HGSVC2 project (A) and the HPRC (B)</p><p>For (A), lines show mean value of δ for each genome count across all 120 orderings. Colors denote how the variants were subsetted before constructing the FASTA files given to DandD. E.g. the blue line corresponds to genomes edited to include SNVs, small indels and structural variants, whereas the green line corresponds to genomes edited to include only SNVs. For (B), the dotted line shows the mean value of δ at each genome count across all 90 orderings. The colored lines show the particular values of δ from a random subset of 5 orderings.</p></caption><graphic xlink:href="gr3"/></fig></p>
    </sec>
    <sec id="sec2.4">
      <title>A <italic>k</italic>-independent approach to openness</title>
      <p id="p0075">We evaluated how DandD’s k-independent approach can improve existing approaches for estimating pangenome openness. Past work characterized openness by compiling <italic>k</italic>-mer cardinality statistics across increasing subsets of genomes, then fitting a Heaps’-Law model to the <italic>k</italic>-mer cardinality growth function.<xref rid="bib1" ref-type="bibr"><sup>1</sup></xref> The fit value of the Heaps’-law α serves as an openness statistic, with <inline-formula><mml:math id="M10" altimg="si8.gif"><mml:mrow><mml:mi>α</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">≤</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> indicating an open pangenome and <inline-formula><mml:math id="M11" altimg="si10.gif"><mml:mrow><mml:mi>α</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">&gt;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> indicating a closed pangenome. We hypothesized that DandD’s <italic>k</italic>-independent approach could provide a robust basis for estimating opennness without having to choose a particular <italic>k</italic> ahead of time. We used benchmarking datasets from the AFproject.<xref rid="bib18" ref-type="bibr"><sup>18</sup></xref> These were created by the AFproject to evaluate alignment-free clustering methods. In particular, we used the 25 fish mitochondrial genomes and the 29 <italic>E. coli</italic> genomes from that benchmark. After building initial <italic>k</italic>-mer databases via DandD’s tree command in --exact mode, we used the progressive command with --ksweep --mink 2 --maxk 55 -n 20 to compute the number of distinct <italic>k</italic>-mers for <italic>k</italic> ranging from 2 to 55. These computations used KMC3 to count <italic>k</italic>-mers and used 20 random orderings to estimate the average increase in cardinality with each added genome. We then fit a Heaps’-Law function and obtained the fit value for the α parameter. We observed that for very small values of <italic>k</italic>, α was greater than 1, indicating a closed pangenome (<xref rid="fig4" ref-type="fig">Figure 4</xref>). This was expected since a very small value of <italic>k</italic> leads to rapid saturation of the space of possible <italic>k</italic>-mers as genomes are added. For increasing values of <italic>k</italic>, α decreased and eventually stabilized to a value less than 1, giving a more robust and convincing indicator of an open pangenome. When we considered the value of α obtained using δ (triangles in <xref rid="fig4" ref-type="fig">Figure 4</xref>), it was also less than 1, consistent with the fact that α stabilizes to a value less than 1 when computed with most informative values of <italic>k</italic>. In short, computing α using DandD does not require selecting a value of <italic>k</italic> but yields an α consistent with the stable part of the function given by a <italic>k</italic>-specific method.<fig id="fig4"><label>Figure 4</label><caption><p>Fit values for the Heaps’-law α as a function of <italic>k</italic> (red dots) and the value obtained by using the <italic>k</italic> selected by δ (dotted blue line)</p><p>The transition from “open” (<inline-formula><mml:math id="M12" altimg="si10.gif"><mml:mrow><mml:mi>α</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">&gt;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>) to “closed” (<inline-formula><mml:math id="M13" altimg="si10.gif"><mml:mrow><mml:mi>α</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">&gt;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>) values occurs at different threshold values of <italic>k</italic> for fish mitochondria (<inline-formula><mml:math id="M14" altimg="si23.gif"><mml:mrow><mml:mi>k</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">=</mml:mo><mml:mn>9</mml:mn></mml:mrow></mml:math></inline-formula>) and <italic>E. coli</italic> (<inline-formula><mml:math id="M15" altimg="si24.gif"><mml:mrow><mml:mi>k</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">=</mml:mo><mml:mn>13</mml:mn></mml:mrow></mml:math></inline-formula>). The values of <inline-formula><mml:math id="M16" altimg="si19.gif"><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>∗</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> which produce δ are slightly larger than the thresholds for both <italic>E. coli</italic> (<inline-formula><mml:math id="M17" altimg="si25.gif"><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>∗</mml:mo></mml:msup><mml:mo linebreak="goodbreak" linebreakstyle="after">=</mml:mo><mml:mn>14</mml:mn></mml:mrow></mml:math></inline-formula>) and fish mitochondria (<inline-formula><mml:math id="M18" altimg="si26.gif"><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>∗</mml:mo></mml:msup><mml:mo linebreak="goodbreak" linebreakstyle="after">=</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:math></inline-formula>).</p></caption><graphic xlink:href="gr4"/></fig></p>
    </sec>
    <sec id="sec2.5">
      <title>Evaluating <italic>k</italic>-Independent Jaccard</title>
      <p id="p0080">To evaluate the utility of the KIJ measure, we again used benchmarking datasets from the AFproject,<xref rid="bib18" ref-type="bibr"><sup>18</sup></xref> particularly the 25 fish mitochondrial genomes and the 29 <italic>E. coli</italic> genomes. For KIJ, we computed all pairwise distances between the sequences in the dataset. Since KIJ measures similarity, we ultimately report the distance, <inline-formula><mml:math id="M19" altimg="si11.gif"><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo></mml:mrow></mml:math></inline-formula> KIJ. From this point, we proceeded with the steps of the AFproject protocol, which constructs a tree from the pairwise-distances, then compares that truth to a curated tree. The ultimate result is a normalized version of the Robinson-Foulds distance (nRF), which measures the degree of structural difference between two trees having the same set of sequences at the leaves. A low nRF indicates that the distances provided reflected the true phylogenetic relationships between the sequences. Having done this for <inline-formula><mml:math id="M20" altimg="si11.gif"><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo></mml:mrow></mml:math></inline-formula> KIJ distances, we repeated the process for distances based on <italic>k</italic>-specific Jaccard coefficients for a range of <italic>k</italic>s. We computed <inline-formula><mml:math id="M21" altimg="si12.gif"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and reported a matrix of pairwise <inline-formula><mml:math id="M22" altimg="si13.gif"><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>J</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> distances for <inline-formula><mml:math id="M23" altimg="si14.gif"><mml:mrow><mml:mi>k</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">=</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math></inline-formula> to 59. nRFs obtained for each of these are shown in <xref rid="fig5" ref-type="fig">Figure 5</xref>. We observed that the accuracy of the tree predicted by the <inline-formula><mml:math id="M24" altimg="si13.gif"><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>J</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> distance depends on the choice of <italic>k</italic>. A too-small value of <italic>k</italic> leads to non-specific distances that cannot distinguish the phylogenetic relationships, leading to high nRF toward the left-hand side of the plots in <xref rid="fig5" ref-type="fig">Figure 5</xref>. A too-large value of <italic>k</italic> can deplete the number of common <italic>k</italic>-mers between related sequences in a way that obscures their relationship, as seen toward the right-hand side of the “25 fish mitochondria” plot in <xref rid="fig5" ref-type="fig">Figure 5</xref>, where nRF climbs after <italic>k</italic> grows past 25. The <inline-formula><mml:math id="M25" altimg="si11.gif"><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo></mml:mrow></mml:math></inline-formula> KIJ distance, on the other hand, strikes a balance between these extremes. In both cases, the <inline-formula><mml:math id="M26" altimg="si11.gif"><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo></mml:mrow></mml:math></inline-formula> KIJ distance achieves minimal nRF compared to all of the <inline-formula><mml:math id="M27" altimg="si13.gif"><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>J</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> distances.<fig id="fig5"><label>Figure 5</label><caption><p>Clustering based on KIJ distances achieves low normalized Robinson-Foulds (nRF) distance with respect to the true phylogeny compared to clusterings based on the typical Jaccard coefficient</p></caption><graphic xlink:href="gr5"/></fig></p>
    </sec>
  </sec>
  <sec id="sec3">
    <title>Discussion</title>
    <p id="p0085">As sequencing technology improves, new genome assemblies will arrive more quickly. It will be increasingly important to identify when a collection of genomes has reached a point of saturation, i.e., when it represents a taxonomic grouping in a complete fashion without excess accumulation of rare variation. Since pangenomes can be seen as collections of repetitive strings, theory concerning compressibility provides tools well suited to this problem. Building on the δ measure, DandD provides an efficient and interpretable way to measure the growth of pangenomes and compare large sequence collections. δ has theoretical advantages but is also remarkably easy to compute. Genomic sketches make δ particularly easy to estimate over pangenomes and their unions. Further, δ provides a parameter-free way of quantifying the amount of distinct sequence in a pangenome, sidestepping any dependence on parameters. The methods underlying DandD treat pangenomes as sets, with KIJ providing a quantification similar to the Jaccard coefficient between sets. However, another way to represent and sketch pangenomes would be as multisets, where each item (i.e., <italic>k</italic>-mer) has an associated count; e.g., the number of times it occurs in the pangenome. Genomic sketches like SetSketch can accommodate counts, and Dashing 2<xref rid="bib19" ref-type="bibr"><sup>19</sup></xref> can compute probability-weighted version of the Jaccard coefficient. In the future, it will be important to evaluate whether consideration of counts can be naturally combined with these compressibility measures. Past work suggests other ways to select a scenario-specific “best” <italic>k</italic>, for use with assembly or other algorithms. KmerGenie<xref rid="bib20" ref-type="bibr"><sup>20</sup></xref> uses <italic>k</italic>-mer count distributions to select the <italic>k</italic> that yields the most distinct high-count <italic>k</italic>-mers. While DandD’s method represents a simple and mathematically grounded way to choose <italic>k</italic>, some scenarios might require more information than DandD uses, such as the assembly scenario targeted by KmerGenie. Besides δ, other measures have been proposed that take the form of having cardinality in the numerator and some normalization factor or “penalty” in the denominator that is a function of <italic>k</italic>. An example is sequence space coverage (SSC) and its normalized version (NSSC) used by Bussi et al.<xref rid="bib21" ref-type="bibr"><sup>21</sup></xref> In that case, the denominator includes <inline-formula><mml:math id="M28" altimg="si15.gif"><mml:mrow><mml:msup><mml:mn>4</mml:mn><mml:mi>k</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula>, with modifications to account for guanine-cytosine (GC) bias and other factors. Importantly, the numerator is still the cardinality, and the denominator is still a simple function of <italic>k</italic> and <italic>n</italic> (total input sequence length). The methods proposed here, including the sketching methods, are equally applicable in that context, and will be applicable for any measure that includes cardinality as a key term. It should be possible to convert the <inline-formula><mml:math id="M29" altimg="si11.gif"><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo></mml:mrow></mml:math></inline-formula> KIJ distance measure (discussed in “Evaluating KIJ” in <xref rid="sec2" ref-type="sec">Results</xref>) into a Mash distance,<xref rid="bib9" ref-type="bibr"><sup>9</sup></xref> though with the additional complication that KIJ is a function of three separate δ measures, <inline-formula><mml:math id="M30" altimg="si16.gif"><mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>A</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="M31" altimg="si17.gif"><mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>B</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="M32" altimg="si18.gif"><mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo linebreak="badbreak">∪</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. These may use different underlying choices for <inline-formula><mml:math id="M33" altimg="si19.gif"><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>∗</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>, creating ambiguity in how <italic>k</italic> should be specified in the Mash distance formula. In the future, it will be important to study how to handle multiple distinct <italic>k</italic>’s in the Mash distance formula, and to evaluate how Mash distances derived from KIJ perform relative to those derived from <inline-formula><mml:math id="M34" altimg="si12.gif"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p>
    <sec id="sec3.1">
      <title>Limitations of the study</title>
      <p id="p0090">The progressive union function of DandD computes unions over several random orderings of the FASTA inputs. This is in contrast to other methods for which closed-form expressions are known.<xref rid="bib1" ref-type="bibr"><sup>1</sup></xref> The most accurate computations of δ will use exact <italic>k</italic>-mer counts. While DandD can employ KMC3 to obtain precise counts, building and querying a KMC database is substantially less efficient than sketching with Dashing. The notable increase time and memory usage reduces the convenience of DandD’s exact mode. The δ measure emerged from compression theory and lacks any intrinsic connection to population genetic measures like Nei’s genetic distance. Though δ has a relationship to Mash distance, the need to specify a single value of <italic>k</italic> in the Mash distance formula is not compatible with δ′s ability to choose different values of <italic>k</italic> for the marginal and joint components of the formula. Finally, use of δ may involve an implicit assumption that all <italic>k</italic>-mers are equally likely. This contrasts with biological reality, where some <italic>k</italic>-mers may be more likely due to the overall GC content of the genomes being compared. Other methods such as the normalized sequence space coverage (NSSC)<xref rid="bib21" ref-type="bibr"><sup>21</sup></xref> measure may be more useful in scenarios where such biological variables have a strong influence.</p>
    </sec>
  </sec>
  <sec id="sec4">
    <title>STAR★Methods</title>
    <sec id="sec4.1">
      <title>Key resources table</title>
      <p id="p0095">
        <table-wrap position="float" id="undtbl1">
          <table frame="hsides" rules="groups">
            <thead>
              <tr>
                <th>REAGENT or RESOURCE</th>
                <th>SOURCE</th>
                <th>IDENTIFIER</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td colspan="3">
                  <bold>Deposited data</bold>
                </td>
              </tr>
              <tr>
                <td colspan="3">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td>28 <italic>Homo sapiens</italic> phased genome assemblies</td>
                <td>Human Pangenome Reference Consortium; <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5281/zenodo.5826274" id="intref0015">https://doi.org/10.5281/zenodo.5826274</ext-link></td>
                <td>
                  <ext-link ext-link-type="uri" xlink:href="https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure3_hprc.txt" id="intref0020">https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure3_hprc.txt</ext-link>
                </td>
              </tr>
              <tr>
                <td>26 <italic>Homo sapiens</italic> full genomes -- integrated variant call sets</td>
                <td>Human Structural Variation Consortium phase 2; <ext-link ext-link-type="uri" xlink:href="https://www.internationalgenome.org/data-portal/data-collection/hgsvc2" id="intref0025">https://www.internationalgenome.org/data-portal/data-collection/hgsvc2</ext-link></td>
                <td>
                  <ext-link ext-link-type="uri" xlink:href="https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure3_hgsvc2.txt" id="intref0030">https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure3_hgsvc2.txt</ext-link>
                </td>
              </tr>
              <tr>
                <td>29 <italic>Escherichia coli</italic> assembled genomes</td>
                <td>AFproject; <ext-link ext-link-type="uri" xlink:href="https://afproject.org/app/benchmark/genome/std/assembled/ecoli/dataset/" id="intref0035">https://afproject.org/app/benchmark/genome/std/assembled/ecoli/dataset/</ext-link></td>
                <td>
                  <ext-link ext-link-type="uri" xlink:href="https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure4_ecoli.txt" id="intref0040">https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure4_ecoli.txt</ext-link>
                </td>
              </tr>
              <tr>
                <td>25 fish mitochondria (mtDNA) assembled genomes</td>
                <td>AFproject; <ext-link ext-link-type="uri" xlink:href="https://afproject.org/app/benchmark/genome/std/assembled/fish_mito/dataset/" id="intref0045">https://afproject.org/app/benchmark/genome/std/assembled/fish_mito/dataset/</ext-link></td>
                <td>
                  <ext-link ext-link-type="uri" xlink:href="https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure4_fish-mito.txt" id="intref0050">https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure4_fish-mito.txt</ext-link>
                </td>
              </tr>
              <tr>
                <td>12 <italic>Homo Sapiens</italic> reference genomes, GRCh38</td>
                <td>NCBI GenBank</td>
                <td>
                  <ext-link ext-link-type="uri" xlink:href="https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure1_human.txt" id="intref0055">https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure1_human.txt</ext-link>
                </td>
              </tr>
              <tr>
                <td>10 <italic>Escherichia coli</italic> genome assemblies</td>
                <td>NCBI RefSeq</td>
                <td>
                  <ext-link ext-link-type="uri" xlink:href="https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/table1_ecoli.txt" id="intref0060">https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/table1_ecoli.txt</ext-link>
                </td>
              </tr>
              <tr>
                <td>60 <italic>Salmonella enterica</italic> genome assemblies</td>
                <td>NCBI RefSeq</td>
                <td><ext-link ext-link-type="uri" xlink:href="https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/table1_salmonella.txt" id="intref0065">https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/table1_salmonella.txt</ext-link> and <ext-link ext-link-type="uri" xlink:href="https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure2_salmonella.txt" id="intref0070">https://github.com/jessicabonnie/dandd_experiments/blob/main/accessions/figure2_salmonella.txt</ext-link></td>
              </tr>
              <tr>
                <td colspan="3">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td colspan="3">
                  <bold>Software and algorithms</bold>
                </td>
              </tr>
              <tr>
                <td colspan="3">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td>DandD</td>
                <td>This Study</td>
                <td>Zenodo DOI; <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5281/zenodo.10138641" id="intref0075">https://doi.org/10.5281/zenodo.10138641</ext-link><break/>GitHub: <ext-link ext-link-type="uri" xlink:href="https://github.com/jessicabonnie/dandd" id="intref0080">https://github.com/jessicabonnie/dandd</ext-link><break/>Experiments GitHub: <ext-link ext-link-type="uri" xlink:href="https://github.com/jessicabonnie/dandd_experiments" id="intref0085">https://github.com/jessicabonnie/dandd_experiments</ext-link></td>
              </tr>
              <tr>
                <td>Dashing</td>
                <td>Baker &amp; Langmead</td>
                <td>DOI: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1101/501726" id="intref0090">https://doi.org/10.1101/501726</ext-link> ; GitHub: <ext-link ext-link-type="uri" xlink:href="https://github.com/dnbaker/dashing" id="intref0095">https://github.com/dnbaker/dashing</ext-link></td>
              </tr>
              <tr>
                <td>KMC3</td>
                <td>REFRESH Bioinformatics Group</td>
                <td>GitHub: <ext-link ext-link-type="uri" xlink:href="https://github.com/refresh-bio/KMC/tree/v3.2.2" id="intref0100">https://github.com/refresh-bio/KMC/tree/v3.2.2</ext-link></td>
              </tr>
            </tbody>
          </table>
        </table-wrap>
      </p>
    </sec>
    <sec id="sec4.2">
      <title>Resource availability</title>
      <sec id="sec4.2.1">
        <title>Lead contact</title>
        <p id="p0100">Further information and requests for resources and reagents should be directed to and will be fulfilled by the lead contact, Ben Langmead (<email>langmea@cs.jhu.edu</email>).</p>
      </sec>
      <sec id="sec4.2.2">
        <title>Materials availability</title>
        <p id="p0105">This study did not generate new unique reagents.</p>
      </sec>
      <sec sec-type="data-availability" id="sec4.2.3">
        <title>Data and code availability</title>
        <p id="p0110">
          <list list-type="simple" id="ulist0015">
            <list-item id="u0025">
              <label>•</label>
              <p id="p0115">This paper analyzes existing, publicly available data. These accession numbers for the datasets are listed in the <xref rid="sec4.1" ref-type="sec">key resources table</xref>.</p>
            </list-item>
            <list-item id="u0030">
              <label>•</label>
              <p id="p0120">All original code has been deposited at Zenodo and is publicly available as of the date of publication. DOIs are listed in the <xref rid="sec4.1" ref-type="sec">key resources table</xref>.</p>
            </list-item>
            <list-item id="u0035">
              <label>•</label>
              <p id="p0125">Any additional information required to reanalyze the data reported in this paper is available from the <xref rid="sec4.2.1" ref-type="sec">lead contact</xref> upon request.</p>
            </list-item>
          </list>
        </p>
      </sec>
    </sec>
    <sec id="sec4.3">
      <title>Method details</title>
      <sec id="sec4.3.1">
        <title>The delta compressibility measure</title>
        <p id="p0130">Various measures have been proposed for how to quantify the amount of distinct sequence in a pangenome. Some of these measures identified as byproducts of particular compression strategies. For instance, the measure <italic>z</italic> is derived by computing a Lempel-Ziv parse of the pangenome;<xref rid="bib5" ref-type="bibr"><sup>5</sup></xref>
<italic>z</italic> is equal to the number of phrases in that parse. The measure <italic>r</italic> is obtained by computing the Burrows-Wheeler Transform (BWT) of the pangenome;<xref rid="bib4" ref-type="bibr"><sup>4</sup></xref>
<italic>r</italic> is equal to the number of maximal same-letter runs in the BWT-transformed string. Other proposals generalize the notion of compressibility to be independent of any compression strategy, such as the string-attractor γ.<xref rid="bib6" ref-type="bibr"><sup>6</sup></xref> Delta (δ) is another measure of compressibility, defined over a pangenome <italic>S</italic>:<disp-formula id="fd1"><label>(Equation 1)</label><mml:math id="M35" altimg="si27.gif"><mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="badbreak">=</mml:mo><mml:munder><mml:mi>max</mml:mi><mml:mi>k</mml:mi></mml:munder><mml:mfrac><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mi>k</mml:mi></mml:mfrac></mml:mrow></mml:math></disp-formula>where <inline-formula><mml:math id="M36" altimg="si3.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> is the number of distinct length-<italic>k</italic> substrings among all strings in <italic>S</italic>. We use <inline-formula><mml:math id="M37" altimg="si19.gif"><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>∗</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> to denote the value of <italic>k</italic> that achieves the maximum. When <italic>S</italic> consists of a single string <italic>s</italic>, the expression <inline-formula><mml:math id="M38" altimg="si28.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="goodbreak" linebreakstyle="after">/</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula> can be considered to undergo three phases of growth with respect to <italic>k</italic>. For values of <italic>k</italic> that are so short that virtually all possible <italic>k</italic>-mer arrangements of the alphabet appear in <italic>s</italic>, <inline-formula><mml:math id="M39" altimg="si28.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="goodbreak" linebreakstyle="after">/</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula> grows exponentially. For values of <italic>k</italic> approaching <inline-formula><mml:math id="M40" altimg="si29.gif"><mml:mrow><mml:mo>|</mml:mo><mml:mi>s</mml:mi><mml:mo>|</mml:mo></mml:mrow></mml:math></inline-formula>. , <inline-formula><mml:math id="M41" altimg="si28.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="goodbreak" linebreakstyle="after">/</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula> decreases linearly as <italic>k</italic>-mers outgrow <italic>s</italic>, eventually reaching 1 when <inline-formula><mml:math id="M42" altimg="si30.gif"><mml:mrow><mml:mi>k</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">=</mml:mo><mml:mrow><mml:mo>|</mml:mo><mml:mi>s</mml:mi><mml:mo>|</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. For intermediate values of <italic>k</italic>, these trends are in tension; increasing <italic>k</italic> both increases the space of possible <italic>k</italic>-mers, but eventually stops gaining many new distinct <italic>k</italic>-mers. Choosing the <italic>k</italic> that maximizes <inline-formula><mml:math id="M43" altimg="si28.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="goodbreak" linebreakstyle="after">/</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula> identifies this point of diminishing returns. While it is useful to think in terms of these phases, it is important to note that the growth of <inline-formula><mml:math id="M44" altimg="si28.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="goodbreak" linebreakstyle="after">/</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula> is not strictly bitonic, i.e. it does not necessarily grow monotonically, reach a peak, then fall monotonically. Rather it can experience local fluctuations leading to non-global maxima. δ is insensitive to full-string reversals and monotone with respect to appending or prepending symbols to <italic>S</italic>. The <italic>k</italic> in the denominator of <xref rid="fd1" ref-type="disp-formula">Equation 1</xref> links δ to other measures. For instance, with <italic>k</italic> in the denominator for δ, it is easy to show that <inline-formula><mml:math id="M45" altimg="si1.gif"><mml:mrow><mml:mi>δ</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">≤</mml:mo><mml:mi>γ</mml:mi></mml:mrow></mml:math></inline-formula>, where γ is the string attractor size.<xref rid="bib3" ref-type="bibr"><sup>3</sup></xref> As a function of the substring composition of <italic>S</italic>, δ is comparatively easy to compute relative to other measures. The computation of <italic>z</italic> or <italic>r</italic> is concerned with the entirety of <italic>S</italic>, whereas δ can be computed incrementally by considering substrings of the members of <italic>S</italic> one-by-one. The advantages of this incremental approach are two-fold: (a) δ can be computed simply and in linear time by scanning <italic>S</italic> and counting <italic>k</italic>-mers for an appropriate range of values of <italic>k</italic>, and (b) DNA <italic>k</italic>-mers can be “canonicalized” at the outset, allowing DNA strings and their reverse complements to be treated as equivalent for the purpose of computing δ, as is common. During a single scan of <italic>S</italic>, each <italic>k</italic>-mer can be tallied either as itself or as its reverse complement (whichever is lexicographically smaller). For <italic>z</italic> and <italic>r</italic>, allowing for equal treatment of forward and reverse complement strands would require a more drastic approach, e.g. first concatenating <italic>S</italic> with its reverse complement, then running the corresponding algorithm.</p>
      </sec>
      <sec id="sec4.3.2">
        <title>Estimating cardinality</title>
        <p id="p0135">mer counting is resource intensive, potentially requiring a large memory footprint for pangenome inputs. Instead, we propose a method for estimating δ by estimating the numerator <inline-formula><mml:math id="M46" altimg="si3.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> (i.e. the cardinality) from <xref rid="fd1" ref-type="disp-formula">Equation 1</xref>. The Dashing<xref rid="bib11" ref-type="bibr"><sup>11</sup></xref> tool, while chiefly used to estimate similarities between sequencing datasets, can also be used to estimate cardinalities like this via its dashing card function, which uses Ertl’s maximum likelihood estimator.<xref rid="bib11" ref-type="bibr"><sup>11</sup></xref><sup>,</sup><xref rid="bib22" ref-type="bibr"><sup>22</sup></xref> Genomic sketches are composable, meaning that sketches built over datasets <italic>A</italic> and <italic>B</italic> can be easily combined to form the sketch for <inline-formula><mml:math id="M47" altimg="si31.gif"><mml:mrow><mml:mi>A</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">∪</mml:mo><mml:mi>B</mml:mi></mml:mrow></mml:math></inline-formula>. In the case of HyperLogLog sketches, this is accomplished by simply taking the elementwise maximum of the register values for the sketches of <italic>A</italic> and <italic>B</italic>. The resulting sketch is identical to the one that would have resulted from sketching <inline-formula><mml:math id="M48" altimg="si31.gif"><mml:mrow><mml:mi>A</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">∪</mml:mo><mml:mi>B</mml:mi></mml:mrow></mml:math></inline-formula>. Since registers usually number in the thousands-to-millions range, this is a fast operation, using only sequential memory accesses.</p>
      </sec>
      <sec id="sec4.3.3">
        <title>Estimating delta</title>
        <p id="p0140">To estimate δ, we seek the substring length <italic>k</italic> giving maximal <inline-formula><mml:math id="M49" altimg="si28.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="goodbreak" linebreakstyle="after">/</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula>, which we denote <inline-formula><mml:math id="M50" altimg="si19.gif"><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>∗</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>. Determining <inline-formula><mml:math id="M51" altimg="si19.gif"><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>∗</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> requires a scan, similar to a root-finding procedure. DandD accomplishes this with a simple sweep starting from a user specified initial value of <italic>k</italic>. The sweep tries successively larger and smaller values of <italic>k</italic>, searching for three consecutive values of <italic>k</italic> such that:<disp-formula id="fd2"><label>(Equation 2)</label><mml:math id="M52" altimg="si32.gif"><mml:mrow><mml:mfrac><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac><mml:mo linebreak="goodbreak">&lt;</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mfrac><mml:mo linebreak="goodbreak">&gt;</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo linebreak="badbreak">+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo linebreak="badbreak">+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac></mml:mrow></mml:math></disp-formula></p>
        <p id="p0145">By default, DandD begins its search at <inline-formula><mml:math id="M53" altimg="si33.gif"><mml:mrow><mml:mi>k</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">=</mml:mo><mml:mn>14</mml:mn></mml:mrow></mml:math></inline-formula>. The final value of <inline-formula><mml:math id="M54" altimg="si19.gif"><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>∗</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> is dataset-dependent, as illustrated in <xref rid="fig1" ref-type="fig">Figure 1</xref>, which shows a 0-1 normalized version of δ for human, E. coli and salmonella pangenomes. In some of DandD’s modes (such as progressive and kij), it computes δ with respect to the union of two or more inputs for which it has previously computed δ. In such cases, DandD initializes the search for the union <inline-formula><mml:math id="M55" altimg="si19.gif"><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>∗</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> by taking the maximum of the previously-computed <inline-formula><mml:math id="M56" altimg="si34.gif"><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>∗</mml:mo></mml:msup><mml:mi>s</mml:mi></mml:mrow></mml:math></inline-formula> of the inputs.<fig id="fig1"><label>Figure 1</label><caption><p>Different pangenomes find their maxima at different values of <italic>k</italic></p><p>Vertical axis shows <inline-formula><mml:math id="M57" altimg="si20.gif"><mml:mrow><mml:mfrac><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mi>k</mml:mi></mml:mfrac></mml:mrow></mml:math></inline-formula> standardized to between 0 and 1 per pangenome. Each pangenome is comprised of multiple distinct genome sequences: <italic>H. sapiens</italic> (<inline-formula><mml:math id="M58" altimg="si21.gif"><mml:mrow><mml:mi>n</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">=</mml:mo><mml:mn>12</mml:mn></mml:mrow></mml:math></inline-formula>), <italic>E.coli</italic> (<inline-formula><mml:math id="M59" altimg="si22.gif"><mml:mrow><mml:mi>n</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">=</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:math></inline-formula>), and <italic>S. enterica</italic> (<inline-formula><mml:math id="M60" altimg="si22.gif"><mml:mrow><mml:mi>n</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">=</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:math></inline-formula>).</p></caption><graphic xlink:href="gr1"/></fig></p>
      </sec>
      <sec id="sec4.3.4">
        <title>Characterizing sublinear growth</title>
        <p id="p0150">DandD, via the DandD progressive command, can characterize the rate of growth of a pangenome by measuring δ with respect to cumulative subsets of its constituent genomes. For small pangenomes (up to 6–7 genomes), it can be practical to examine all possible orderings (permutations) of the genomes. However, for larger real-world pangenomes, it is sufficient to use a random subset of all possible orderings. This method provides a way to estimate the average δ for subsets of a given size. That is, by taking the mean of all the values for δ obtained after adding the <inline-formula><mml:math id="M61" altimg="si35.gif"><mml:mrow><mml:msup><mml:mi>i</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>h</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> genome in each ordering, we have an estimate for <inline-formula><mml:math id="M62" altimg="si36.gif"><mml:mrow><mml:mi>δ</mml:mi></mml:mrow></mml:math></inline-formula>(all size-<italic>i</italic> subsets). Past methods for characterizing pangenome growth also made use of random orderings of large collections. These methods seek to determine whether the pangenome is “open” (still accumulating new sequence), or “closed” (substantially complete).<xref rid="bib1" ref-type="bibr"><sup>1</sup></xref><sup>,</sup><xref rid="bib23" ref-type="bibr"><sup>23</sup></xref><sup>,</sup><xref rid="bib24" ref-type="bibr"><sup>24</sup></xref> DandD provides a new way of performing this analysis over genome sequences in a parameter-free way, not requiring foreknowledge of where genes are located or how to choose an appropriate value of <italic>k</italic>. The DandD progressive command allows the user to provide a set of genomes and a desired number of orderings to try. DandD will then (1) preprocess all of the inputs individually, (2) generate the random orderings, and then (3) iterate through each ordering, “progressively” building larger unions by accumulating one more genome at each step. The DandD progressive command outputs a file describing, for each step of each ordering, which genome was added in that step and the value of δ for the new union. Besides giving useful plots (seen in “<xref rid="sec2.3" ref-type="sec">Using DandD to characterize sublinearity and openness</xref>” in <xref rid="sec2" ref-type="sec">Results</xref>), this output can be used to fit a Heap’s Law model to the change in delta (<inline-formula><mml:math id="M63" altimg="si37.gif"><mml:mrow><mml:mo>Δ</mml:mo><mml:mi>δ</mml:mi></mml:mrow></mml:math></inline-formula>) at each step. After fitting, the fit value of the Heaps’-Law α parameter can be used to characterize whether the pangenome is open (<inline-formula><mml:math id="M64" altimg="si8.gif"><mml:mrow><mml:mi>α</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">≤</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>) or closed (<inline-formula><mml:math id="M65" altimg="si10.gif"><mml:mrow><mml:mi>α</mml:mi><mml:mo linebreak="goodbreak" linebreakstyle="after">&gt;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>).</p>
      </sec>
      <sec id="sec4.3.5">
        <title><italic>k</italic>-independent Jaccard</title>
        <p id="p0155">The Jaccard coefficient is a widely used metric for comparing large datasets:<disp-formula id="fd3"><label>(Equation 3)</label><mml:math id="M66" altimg="si38.gif"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo>,</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="badbreak">=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo linebreak="badbreak">∩</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo linebreak="badbreak">∪</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mrow></mml:math></disp-formula></p>
        <p id="p0160">For consistency we use <inline-formula><mml:math id="M67" altimg="si39.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>A</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> (rather than <inline-formula><mml:math id="M68" altimg="si40.gif"><mml:mrow><mml:msub><mml:mrow><mml:mo>|</mml:mo><mml:mi>A</mml:mi><mml:mo>|</mml:mo></mml:mrow><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>) to denote the cardinality of the set of <italic>k</italic>-mers in a collection of strings <italic>A</italic>. Methods like MinHash estimate this quantity directly. Methods based on the HyperLogLog sketch, like Dashing, obtain separate cardinalities <inline-formula><mml:math id="M69" altimg="si39.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>A</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="M70" altimg="si41.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>B</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="M71" altimg="si42.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo linebreak="badbreak">∪</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> and compute <inline-formula><mml:math id="M72" altimg="si12.gif"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> using an expression equivalent (by the inclusion-exclusion principle) to the one above:<disp-formula id="fd4"><label>(Equation 4)</label><mml:math id="M73" altimg="si43.gif"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo>,</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="badbreak">=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>A</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="badbreak">+</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>B</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo linebreak="badbreak">∪</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo linebreak="badbreak">∪</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mrow></mml:math></disp-formula></p>
        <p id="p0165">The above expressions have <italic>k</italic>-mer length <italic>k</italic> as a parameter. To obtain a <italic>k</italic>-independent notion of Jaccard coefficient, we replace <inline-formula><mml:math id="M74" altimg="si44.gif"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> with δ:<disp-formula id="fd5"><label>(Equation 5)</label><mml:math id="M75" altimg="si45.gif"><mml:mrow><mml:mtext>KIJ</mml:mtext><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo>,</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="badbreak">=</mml:mo><mml:mfrac><mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>A</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo linebreak="badbreak">+</mml:mo><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>B</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo linebreak="badbreak">∪</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo linebreak="badbreak">∪</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mrow></mml:math></disp-formula></p>
        <p id="p0170">Following this formula, the task of computing or estimating <italic>k</italic>-Independent Jaccard (KIJ) reduces to the task of obtaining <inline-formula><mml:math id="M76" altimg="si16.gif"><mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>A</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="M77" altimg="si17.gif"><mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>B</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="M78" altimg="si18.gif"><mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo linebreak="badbreak">∪</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> (or estimates thereof). DandD provides a command (dandd kij) to compute all-pairwise KIJs given two or more input FASTA files. Since downstream tools may expect to receive distances rather than similarities, DandD can output all-pairwise <inline-formula><mml:math id="M79" altimg="si11.gif"><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo></mml:mrow></mml:math></inline-formula> KIJs instead. If users wish to produce their own scans of likely <italic>k</italic>s for the original jaccard metric they can add the --jaccard command along with --mink and --maxk to specify a range.</p>
      </sec>
      <sec id="sec4.3.6">
        <title>Caching and lazy evaluation of sketches</title>
        <p id="p0175">The most time and memory intensive step of solving for δ is the creation of the component sketches from the input FASTA files. Computationally, it is far simpler to produce the union of two or more sketches or estimate cardinality from existing sketches. Given these uneven resource requirements, DandD is designed to reuse sketches within tasks and across experiments within the same pangenome. DandD reduces its footprint and prevents the production of duplicate sketches by caching sketches on the file system and tracking the sketches it has already built. To maintain the association between a union sketch and its component FASTAs, the sketch file is named using a checksum over the constituent FASTAs as computed by the cryptographic hash function BLAKE. This serves a dual purpose of insuring that each combination of input FASTAs is sketched only once, regardless of order, and providing a mechanism to confirm agreement between the currently available FASTAs and any information pertaining to them that may be stored within DandD’s tree structure. In addition to a naming convention, DandD also creates a directory structure to store intermediate sketches and databases for easy reuse and access. When the user specifies the same sketch directory across many invocations of DandD, they will maximize the benefit of reusing sketch files.</p>
      </sec>
      <sec id="sec4.3.7">
        <title>Exact mode</title>
        <p id="p0180">DandD includes an “exact” option (--exact) which enables computation of δ directly by way of <italic>k</italic>-mer counting. This option can be used in combination with any of DandD’s modes (tree, progressive, kij, etc). Instead of using Dashing, “exact” mode uses KMC3 for counting (via the kmc command) and unioning (via kmc_tools complex).<xref rid="bib7" ref-type="bibr"><sup>7</sup></xref> Just as Dashing must build a sketch prior to estimating cardinalities, KMC3 builds a “database” of <italic>k</italic>-mer counts for each combination. Note that while unioning two Dashing sketches requires only an elementwise maximum over the sketches, unioning two KMC databases requires a merge sort over all the <italic>k</italic>-mers and counts. This can be quite expensive, as detailed in <xref rid="tbl1" ref-type="table">Table 1</xref>. DandD’s file naming scheme together with the metadata it saves allows users to locate KMC databases and Dashing sketches corresponding to particular inputs and their unions. This facilitates further experimentation; i.e. a user can use KMC3’s tools to explore which <italic>k</italic>-mers contributed to a particularly large increase in δ.</p>
      </sec>
    </sec>
  </sec>
</body>
<back>
  <ref-list id="cebib0010">
    <title>References</title>
    <ref id="bib1">
      <label>1</label>
      <element-citation publication-type="journal" id="sref1">
        <person-group person-group-type="author">
          <name>
            <surname>Parmigiani</surname>
            <given-names>L.</given-names>
          </name>
          <name>
            <surname>Wittler</surname>
            <given-names>R.</given-names>
          </name>
          <name>
            <surname>Stoye</surname>
            <given-names>J.</given-names>
          </name>
        </person-group>
        <article-title>Revisiting pangenome openness with k-mers</article-title>
        <comment>Preprint at</comment>
        <source>bioRxiv</source>
        <year>2022</year>
        <pub-id pub-id-type="doi">10.1101/2022.11.15.516472</pub-id>
      </element-citation>
    </ref>
    <ref id="bib2">
      <label>2</label>
      <element-citation publication-type="journal" id="sref2">
        <person-group person-group-type="author">
          <name>
            <surname>Sherman</surname>
            <given-names>R.M.</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>S.L.</given-names>
          </name>
        </person-group>
        <article-title>Pan-genomics in the human genome era</article-title>
        <source>Nat. Rev. Genet.</source>
        <volume>21</volume>
        <year>2020</year>
        <fpage>243</fpage>
        <lpage>254</lpage>
        <pub-id pub-id-type="pmid">32034321</pub-id>
      </element-citation>
    </ref>
    <ref id="bib3">
      <label>3</label>
      <element-citation publication-type="journal" id="sref3">
        <person-group person-group-type="author">
          <name>
            <surname>Kociumaka</surname>
            <given-names>T.</given-names>
          </name>
          <name>
            <surname>Navarro</surname>
            <given-names>G.</given-names>
          </name>
          <name>
            <surname>Prezza</surname>
            <given-names>N.</given-names>
          </name>
        </person-group>
        <article-title>Towards a definitive compressibility measure for repetitive sequences</article-title>
        <source>IEEE Trans. Inf. Theor.</source>
        <volume>69</volume>
        <year>2023</year>
        <fpage>2074</fpage>
        <lpage>2092</lpage>
      </element-citation>
    </ref>
    <ref id="bib4">
      <label>4</label>
      <element-citation publication-type="book" id="sref4">
        <person-group person-group-type="author">
          <name>
            <surname>Burrows</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Wheeler</surname>
            <given-names>D.</given-names>
          </name>
        </person-group>
        <part-title>A block-sorting lossless data compression algorithm</part-title>
        <source>Digital SRC Research Report, Citeseer</source>
        <year>1994</year>
      </element-citation>
    </ref>
    <ref id="bib5">
      <label>5</label>
      <element-citation publication-type="journal" id="sref5">
        <person-group person-group-type="author">
          <name>
            <surname>Ziv</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Lempel</surname>
            <given-names>A.</given-names>
          </name>
        </person-group>
        <article-title>A universal algorithm for sequential data compression</article-title>
        <source>IEEE Trans. Inf. Theor.</source>
        <volume>23</volume>
        <year>1977</year>
        <fpage>337</fpage>
        <lpage>343</lpage>
      </element-citation>
    </ref>
    <ref id="bib6">
      <label>6</label>
      <element-citation publication-type="book" id="sref6">
        <person-group person-group-type="author">
          <name>
            <surname>Kempa</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Prezza</surname>
            <given-names>N.</given-names>
          </name>
        </person-group>
        <part-title>At the roots of dictionary compression: string attractors</part-title>
        <source>Proceedings of the 50th Annual ACM SIGACT Symposium on Theory of Computing</source>
        <year>2018</year>
        <fpage>827</fpage>
        <lpage>840</lpage>
      </element-citation>
    </ref>
    <ref id="bib7">
      <label>7</label>
      <element-citation publication-type="journal" id="sref7">
        <person-group person-group-type="author">
          <name>
            <surname>Kokot</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Dlugosz</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Deorowicz</surname>
            <given-names>S.</given-names>
          </name>
        </person-group>
        <article-title>KMC 3: counting and manipulating k-mer statistics</article-title>
        <source>Bioinformatics</source>
        <volume>33</volume>
        <year>2017</year>
        <fpage>2759</fpage>
        <lpage>2761</lpage>
        <pub-id pub-id-type="pmid">28472236</pub-id>
      </element-citation>
    </ref>
    <ref id="bib8">
      <label>8</label>
      <element-citation publication-type="book" id="sref8">
        <person-group person-group-type="author">
          <name>
            <surname>Broder</surname>
            <given-names>A.Z.</given-names>
          </name>
        </person-group>
        <part-title>On the resemblance and containment of documents</part-title>
        <source>Proceedings. Compression and Complexity of SEQUENCES 1997 (Cat. No. 97TB100171)</source>
        <year>1997</year>
        <publisher-name>IEEE</publisher-name>
        <fpage>21</fpage>
        <lpage>29</lpage>
      </element-citation>
    </ref>
    <ref id="bib9">
      <label>9</label>
      <element-citation publication-type="journal" id="sref9">
        <person-group person-group-type="author">
          <name>
            <surname>Ondov</surname>
            <given-names>B.D.</given-names>
          </name>
          <name>
            <surname>Treangen</surname>
            <given-names>T.J.</given-names>
          </name>
          <name>
            <surname>Melsted</surname>
            <given-names>P.</given-names>
          </name>
          <name>
            <surname>Mallonee</surname>
            <given-names>A.B.</given-names>
          </name>
          <name>
            <surname>Bergman</surname>
            <given-names>N.H.</given-names>
          </name>
          <name>
            <surname>Koren</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>A.M.</given-names>
          </name>
        </person-group>
        <article-title>Mash: fast genome and metagenome distance estimation using MinHash</article-title>
        <source>Genome Biol.</source>
        <volume>17</volume>
        <year>2016</year>
        <fpage>132</fpage>
        <pub-id pub-id-type="pmid">27323842</pub-id>
      </element-citation>
    </ref>
    <ref id="bib10">
      <label>10</label>
      <element-citation publication-type="book" id="sref10">
        <person-group person-group-type="author">
          <name>
            <surname>Meunier</surname>
            <given-names>F.</given-names>
          </name>
          <name>
            <surname>Gandouet</surname>
            <given-names>O.</given-names>
          </name>
          <name>
            <surname>Fusy</surname>
            <given-names>É.</given-names>
          </name>
          <name>
            <surname>Flajolet</surname>
            <given-names>P.</given-names>
          </name>
        </person-group>
        <part-title>Hyperloglog: The Analysis of a Near-Optimal Cardinality Estimation Algorithm</part-title>
        <year>2007</year>
        <publisher-name>Discrete Mathematics &amp; Theoretical Computer Science</publisher-name>
      </element-citation>
    </ref>
    <ref id="bib11">
      <label>11</label>
      <element-citation publication-type="journal" id="sref11">
        <person-group person-group-type="author">
          <name>
            <surname>Baker</surname>
            <given-names>D.N.</given-names>
          </name>
          <name>
            <surname>Langmead</surname>
            <given-names>B.</given-names>
          </name>
        </person-group>
        <article-title>Dashing: fast and accurate genomic distances with HyperLogLog</article-title>
        <source>Genome Biol.</source>
        <volume>20</volume>
        <year>2019</year>
        <fpage>265</fpage>
        <pub-id pub-id-type="pmid">31801633</pub-id>
      </element-citation>
    </ref>
    <ref id="bib12">
      <label>12</label>
      <element-citation publication-type="journal" id="sref12">
        <person-group person-group-type="author">
          <name>
            <surname>Boucher</surname>
            <given-names>C.</given-names>
          </name>
          <name>
            <surname>Gagie</surname>
            <given-names>T.</given-names>
          </name>
          <name>
            <surname>Kuhnle</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Langmead</surname>
            <given-names>B.</given-names>
          </name>
          <name>
            <surname>Manzini</surname>
            <given-names>G.</given-names>
          </name>
          <name>
            <surname>Mun</surname>
            <given-names>T.</given-names>
          </name>
        </person-group>
        <article-title>Prefix-free parsing for building big BWTs</article-title>
        <source>Algorithm Mol. Biol.</source>
        <volume>14</volume>
        <year>2019</year>
        <fpage>13</fpage>
      </element-citation>
    </ref>
    <ref id="bib13">
      <label>13</label>
      <element-citation publication-type="book" id="sref13">
        <person-group person-group-type="author">
          <name>
            <surname>Hong</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Rossi</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Boucher</surname>
            <given-names>C.</given-names>
          </name>
        </person-group>
        <part-title>Lz77 via prefix-free parsing</part-title>
        <source>2023 Proceedings of the Symposium on Algorithm Engineering and Experiments (ALENEX)</source>
        <year>2023</year>
        <publisher-name>SIAM</publisher-name>
        <fpage>123</fpage>
        <lpage>134</lpage>
      </element-citation>
    </ref>
    <ref id="bib14">
      <label>14</label>
      <element-citation publication-type="journal" id="sref14">
        <person-group person-group-type="author">
          <name>
            <surname>Chaisson</surname>
            <given-names>M.J.P.</given-names>
          </name>
          <name>
            <surname>Sanders</surname>
            <given-names>A.D.</given-names>
          </name>
          <name>
            <surname>Zhao</surname>
            <given-names>X.</given-names>
          </name>
          <name>
            <surname>Malhotra</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Porubsky</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Rausch</surname>
            <given-names>T.</given-names>
          </name>
          <name>
            <surname>Gardner</surname>
            <given-names>E.J.</given-names>
          </name>
          <name>
            <surname>Rodriguez</surname>
            <given-names>O.L.</given-names>
          </name>
          <name>
            <surname>Guo</surname>
            <given-names>L.</given-names>
          </name>
          <name>
            <surname>Collins</surname>
            <given-names>R.L.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Multi-platform discovery of haplotype-resolved structural variation in human genomes</article-title>
        <source>Nat. Commun.</source>
        <volume>10</volume>
        <year>2019</year>
        <fpage>1784</fpage>
        <pub-id pub-id-type="pmid">30992455</pub-id>
      </element-citation>
    </ref>
    <ref id="bib15">
      <label>15</label>
      <element-citation publication-type="journal" id="sref15">
        <person-group person-group-type="author">
          <name>
            <surname>Ebert</surname>
            <given-names>P.</given-names>
          </name>
          <name>
            <surname>Audano</surname>
            <given-names>P.A.</given-names>
          </name>
          <name>
            <surname>Zhu</surname>
            <given-names>Q.</given-names>
          </name>
          <name>
            <surname>Rodriguez-Martin</surname>
            <given-names>B.</given-names>
          </name>
          <name>
            <surname>Porubsky</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Bonder</surname>
            <given-names>M.J.</given-names>
          </name>
          <name>
            <surname>Sulovari</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Ebler</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Zhou</surname>
            <given-names>W.</given-names>
          </name>
          <name>
            <surname>Serra Mari</surname>
            <given-names>R.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Haplotype-resolved diverse human genomes and integrated analysis of structural variation</article-title>
        <source>Science</source>
        <volume>372</volume>
        <year>2021</year>
        <object-id pub-id-type="publisher-id">eabf7117</object-id>
      </element-citation>
    </ref>
    <ref id="bib16">
      <label>16</label>
      <element-citation publication-type="journal" id="sref16">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H.</given-names>
          </name>
          <name>
            <surname>Handsaker</surname>
            <given-names>B.</given-names>
          </name>
          <name>
            <surname>Wysoker</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Fennell</surname>
            <given-names>T.</given-names>
          </name>
          <name>
            <surname>Ruan</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Homer</surname>
            <given-names>N.</given-names>
          </name>
          <name>
            <surname>Marth</surname>
            <given-names>G.</given-names>
          </name>
          <name>
            <surname>Abecasis</surname>
            <given-names>G.</given-names>
          </name>
          <name>
            <surname>Durbin</surname>
            <given-names>R.</given-names>
          </name>
          <collab>1000 Genome Project Data Processing Subgroup</collab>
        </person-group>
        <article-title>The sequence alignment/map format and samtools</article-title>
        <source>Bioinformatics</source>
        <volume>25</volume>
        <year>2009</year>
        <fpage>2078</fpage>
        <lpage>2079</lpage>
        <pub-id pub-id-type="pmid">19505943</pub-id>
      </element-citation>
    </ref>
    <ref id="bib17">
      <label>17</label>
      <element-citation publication-type="journal" id="sref17">
        <person-group person-group-type="author">
          <name>
            <surname>Wang</surname>
            <given-names>T.</given-names>
          </name>
          <name>
            <surname>Antonacci-Fulton</surname>
            <given-names>L.</given-names>
          </name>
          <name>
            <surname>Howe</surname>
            <given-names>K.</given-names>
          </name>
          <name>
            <surname>Lawson</surname>
            <given-names>H.A.</given-names>
          </name>
          <name>
            <surname>Lucas</surname>
            <given-names>J.K.</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>A.M.</given-names>
          </name>
          <name>
            <surname>Popejoy</surname>
            <given-names>A.B.</given-names>
          </name>
          <name>
            <surname>Asri</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Carson</surname>
            <given-names>C.</given-names>
          </name>
          <name>
            <surname>Chaisson</surname>
            <given-names>M.J.P.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The Human Pangenome Project: a global resource to map genomic diversity</article-title>
        <source>Nature</source>
        <volume>604</volume>
        <year>2022</year>
        <fpage>437</fpage>
        <lpage>446</lpage>
        <pub-id pub-id-type="pmid">35444317</pub-id>
      </element-citation>
    </ref>
    <ref id="bib18">
      <label>18</label>
      <element-citation publication-type="journal" id="sref18">
        <person-group person-group-type="author">
          <name>
            <surname>Zielezinski</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Girgis</surname>
            <given-names>H.Z.</given-names>
          </name>
          <name>
            <surname>Bernard</surname>
            <given-names>G.</given-names>
          </name>
          <name>
            <surname>Leimeister</surname>
            <given-names>C.A.</given-names>
          </name>
          <name>
            <surname>Tang</surname>
            <given-names>K.</given-names>
          </name>
          <name>
            <surname>Dencker</surname>
            <given-names>T.</given-names>
          </name>
          <name>
            <surname>Lau</surname>
            <given-names>A.K.</given-names>
          </name>
          <name>
            <surname>Röhling</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Choi</surname>
            <given-names>J.J.</given-names>
          </name>
          <name>
            <surname>Waterman</surname>
            <given-names>M.S.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Benchmarking of alignment-free sequence comparison methods</article-title>
        <source>Genome Biol.</source>
        <volume>20</volume>
        <year>2019</year>
        <fpage>144</fpage>
        <pub-id pub-id-type="pmid">31345254</pub-id>
      </element-citation>
    </ref>
    <ref id="bib19">
      <label>19</label>
      <element-citation publication-type="journal" id="sref19">
        <person-group person-group-type="author">
          <name>
            <surname>Baker</surname>
            <given-names>D.N.</given-names>
          </name>
          <name>
            <surname>Langmead</surname>
            <given-names>B.</given-names>
          </name>
        </person-group>
        <article-title>Dashing 2: genomic sketching with multiplicities and locality-sensitive hashing</article-title>
        <comment>Preprint at</comment>
        <source>bioRxiv</source>
        <year>2022</year>
        <pub-id pub-id-type="doi">10.1101/2022.10.16.512384</pub-id>
      </element-citation>
    </ref>
    <ref id="bib20">
      <label>20</label>
      <element-citation publication-type="journal" id="sref20">
        <person-group person-group-type="author">
          <name>
            <surname>Chikhi</surname>
            <given-names>R.</given-names>
          </name>
          <name>
            <surname>Medvedev</surname>
            <given-names>P.</given-names>
          </name>
        </person-group>
        <article-title>Informed and automated k-mer size selection for genome assembly</article-title>
        <source>Bioinformatics</source>
        <volume>30</volume>
        <year>2014</year>
        <fpage>31</fpage>
        <lpage>37</lpage>
        <pub-id pub-id-type="pmid">23732276</pub-id>
      </element-citation>
    </ref>
    <ref id="bib21">
      <label>21</label>
      <element-citation publication-type="journal" id="sref21">
        <person-group person-group-type="author">
          <name>
            <surname>Bussi</surname>
            <given-names>Y.</given-names>
          </name>
          <name>
            <surname>Kapon</surname>
            <given-names>R.</given-names>
          </name>
          <name>
            <surname>Reich</surname>
            <given-names>Z.</given-names>
          </name>
        </person-group>
        <article-title>Large-scale k-mer-based analysis of the informational properties of genomes, comparative genomics and taxonomy</article-title>
        <source>PLoS One</source>
        <volume>16</volume>
        <year>2021</year>
        <object-id pub-id-type="publisher-id">e0258693</object-id>
      </element-citation>
    </ref>
    <ref id="bib22">
      <label>22</label>
      <element-citation publication-type="journal" id="sref22">
        <person-group person-group-type="author">
          <name>
            <surname>Ertl</surname>
            <given-names>O.</given-names>
          </name>
        </person-group>
        <article-title>New cardinality estimation algorithms for hyperloglog sketches, CoRR abs/1702</article-title>
        <comment>Preprint at</comment>
        <source>arXiv</source>
        <year>2017</year>
        <ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/1702.01284.arXiv:1702.01284" id="intref0120">http://arxiv.org/abs/1702.01284.arXiv:1702.01284</ext-link>
      </element-citation>
    </ref>
    <ref id="bib23">
      <label>23</label>
      <element-citation publication-type="journal" id="sref23">
        <person-group person-group-type="author">
          <name>
            <surname>Page</surname>
            <given-names>A.J.</given-names>
          </name>
          <name>
            <surname>Cummins</surname>
            <given-names>C.A.</given-names>
          </name>
          <name>
            <surname>Hunt</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Wong</surname>
            <given-names>V.K.</given-names>
          </name>
          <name>
            <surname>Reuter</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Holden</surname>
            <given-names>M.T.G.</given-names>
          </name>
          <name>
            <surname>Fookes</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Falush</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Keane</surname>
            <given-names>J.A.</given-names>
          </name>
          <name>
            <surname>Parkhill</surname>
            <given-names>J.</given-names>
          </name>
        </person-group>
        <article-title>Roary: rapid large-scale prokaryote pan genome analysis</article-title>
        <source>Bioinformatics</source>
        <volume>31</volume>
        <year>2015</year>
        <fpage>3691</fpage>
        <lpage>3693</lpage>
        <pub-id pub-id-type="pmid">26198102</pub-id>
      </element-citation>
    </ref>
    <ref id="bib24">
      <label>24</label>
      <element-citation publication-type="journal" id="sref24">
        <person-group person-group-type="author">
          <name>
            <surname>Sheikhizadeh</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Schranz</surname>
            <given-names>M.E.</given-names>
          </name>
          <name>
            <surname>Akdel</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>de Ridder</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Smit</surname>
            <given-names>S.</given-names>
          </name>
        </person-group>
        <article-title>PanTools: representation, storage and exploration of pan-genomic data</article-title>
        <source>Bioinformatics</source>
        <volume>32</volume>
        <year>2016</year>
        <fpage>i487</fpage>
        <lpage>i493</lpage>
        <pub-id pub-id-type="pmid">27587666</pub-id>
      </element-citation>
    </ref>
  </ref-list>
  <sec id="appsec2" sec-type="supplementary-material">
    <title>Supplemental information</title>
    <p id="p0205">
      <supplementary-material content-type="local-data" id="mmc1">
        <caption>
          <title>Document S1. Figure S1</title>
        </caption>
        <media xlink:href="mmc1.pdf"/>
      </supplementary-material>
    </p>
  </sec>
  <ack id="ack0010">
    <title>Acknowledgments</title>
    <p id="p0185">We thank Aaron Quinlan, Dominik Kempa, and Yun William Yu for helpful discussions. O.Y.A. and B.L. were supported by <funding-source id="gs3"><institution-wrap><institution-id institution-id-type="doi">10.13039/100000002</institution-id><institution>NIH</institution></institution-wrap></funding-source> /<funding-source id="gs9"><institution-wrap><institution-id institution-id-type="doi">10.13039/100000051</institution-id><institution>NHGRI</institution></institution-wrap></funding-source> grant R01HG011392 to B.L. J.K.B. and B.L. were supported by <funding-source id="gs4"><institution-wrap><institution-id institution-id-type="doi">10.13039/100000002</institution-id><institution>NIH</institution></institution-wrap></funding-source> /<funding-source id="gs11"><institution-wrap><institution-id institution-id-type="doi">10.13039/100000057</institution-id><institution>NIGMS</institution></institution-wrap></funding-source> grant R35GM139602 to B.L. and <funding-source id="gs7"><institution-wrap><institution-id institution-id-type="doi">10.13039/100000002</institution-id><institution>NIH</institution></institution-wrap></funding-source> /<funding-source id="gs10"><institution-wrap><institution-id institution-id-type="doi">10.13039/100000051</institution-id><institution>NHGRI</institution></institution-wrap></funding-source> grant R01HG012252. O.Y.A. was also supported by <funding-source id="gs8"><institution-wrap><institution-id institution-id-type="doi">10.13039/100000002</institution-id><institution>NIH</institution></institution-wrap></funding-source> /<funding-source id="gs12"><institution-wrap><institution-id institution-id-type="doi">10.13039/100000057</institution-id><institution>NIGMS</institution></institution-wrap></funding-source> training grant T32GM119998. This work was carried out at the <funding-source id="gs5">Advanced Research Computing at Hopkins</funding-source> (ARCH) core facility (<email>rockfish.jhu.edu</email>), which is supported by the <funding-source id="gs6"><institution-wrap><institution-id institution-id-type="doi">10.13039/100000001</institution-id><institution>National Science Foundation</institution></institution-wrap></funding-source> (NSF) grant number OAC 1920103.</p>
    <sec id="sec5">
      <title>Author contributions</title>
      <p id="p0190">J.K.B., O.Y.A., and B.L. conceived the method, designed the experiments, and ran the experiments. J.K.B. and B.L. wrote the paper. J.K.B. wrote the DandD software tool. J.K.B., O.Y.A., and B.L. edited and approved the final manuscript.</p>
    </sec>
    <sec sec-type="COI-statement" id="sec6">
      <title>Declaration of interests</title>
      <p id="p0195">The authors declare no competing interests.</p>
    </sec>
  </ack>
  <fn-group>
    <fn id="appsec1" fn-type="supplementary-material">
      <p id="p0200">Supplemental information can be found online at <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1016/j.isci.2024.109054" id="intref0115">https://doi.org/10.1016/j.isci.2024.109054</ext-link>.</p>
    </fn>
  </fn-group>
</back>

<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v3.0 20080202//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName journalpublishing3.dtd?>
<?SourceDTD.Version 3.0?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id>
    <journal-id journal-id-type="iso-abbrev">PLoS Comput. Biol</journal-id>
    <journal-id journal-id-type="publisher-id">plos</journal-id>
    <journal-id journal-id-type="pmc">ploscomp</journal-id>
    <journal-title-group>
      <journal-title>PLoS Computational Biology</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1553-734X</issn>
    <issn pub-type="epub">1553-7358</issn>
    <publisher>
      <publisher-name>Public Library of Science</publisher-name>
      <publisher-loc>San Francisco, CA USA</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">4856371</article-id>
    <article-id pub-id-type="pmid">27145223</article-id>
    <article-id pub-id-type="publisher-id">PCOMPBIOL-D-15-02065</article-id>
    <article-id pub-id-type="doi">10.1371/journal.pcbi.1004842</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research Article</subject>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Molecular Biology</subject>
          <subj-group>
            <subject>Molecular Biology Techniques</subject>
            <subj-group>
              <subject>Molecular Biology Assays and Analysis Techniques</subject>
              <subj-group>
                <subject>Phylogenetic Analysis</subject>
              </subj-group>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Research and Analysis Methods</subject>
        <subj-group>
          <subject>Molecular Biology Techniques</subject>
          <subj-group>
            <subject>Molecular Biology Assays and Analysis Techniques</subject>
            <subj-group>
              <subject>Phylogenetic Analysis</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Research and Analysis Methods</subject>
        <subj-group>
          <subject>Simulation and Modeling</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Plant Science</subject>
          <subj-group>
            <subject>Plant Anatomy</subject>
            <subj-group>
              <subject>Leaves</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Physical Sciences</subject>
        <subj-group>
          <subject>Mathematics</subject>
          <subj-group>
            <subject>Applied Mathematics</subject>
            <subj-group>
              <subject>Algorithms</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Research and Analysis Methods</subject>
        <subj-group>
          <subject>Simulation and Modeling</subject>
          <subj-group>
            <subject>Algorithms</subject>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Evolutionary Biology</subject>
          <subj-group>
            <subject>Population Genetics</subject>
            <subj-group>
              <subject>Haplotypes</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Genetics</subject>
          <subj-group>
            <subject>Population Genetics</subject>
            <subj-group>
              <subject>Haplotypes</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Population Biology</subject>
          <subj-group>
            <subject>Population Genetics</subject>
            <subj-group>
              <subject>Haplotypes</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Genetics</subject>
          <subj-group>
            <subject>Genomics</subject>
            <subj-group>
              <subject>Plant Genomics</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Biotechnology</subject>
          <subj-group>
            <subject>Plant Biotechnology</subject>
            <subj-group>
              <subject>Plant Genomics</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Plant Science</subject>
          <subj-group>
            <subject>Plant Biotechnology</subject>
            <subj-group>
              <subject>Plant Genomics</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Genetics</subject>
          <subj-group>
            <subject>Plant Genetics</subject>
            <subj-group>
              <subject>Plant Genomics</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Plant Science</subject>
          <subj-group>
            <subject>Plant Genetics</subject>
            <subj-group>
              <subject>Plant Genomics</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Computational Biology</subject>
          <subj-group>
            <subject>Genome Analysis</subject>
            <subj-group>
              <subject>Genomic Libraries</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Genetics</subject>
          <subj-group>
            <subject>Genomics</subject>
            <subj-group>
              <subject>Genome Analysis</subject>
              <subj-group>
                <subject>Genomic Libraries</subject>
              </subj-group>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Evolutionary Biology</subject>
          <subj-group>
            <subject>Population Genetics</subject>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Genetics</subject>
          <subj-group>
            <subject>Population Genetics</subject>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Population Biology</subject>
          <subj-group>
            <subject>Population Genetics</subject>
          </subj-group>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Efficient Coalescent Simulation and Genealogical Analysis for Large Sample Sizes</article-title>
      <alt-title alt-title-type="running-head">Efficient Coalescent Simulation</alt-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Kelleher</surname>
          <given-names>Jerome</given-names>
        </name>
        <xref ref-type="aff" rid="aff001">
          <sup>1</sup>
        </xref>
        <xref ref-type="corresp" rid="cor001">*</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Etheridge</surname>
          <given-names>Alison M</given-names>
        </name>
        <xref ref-type="aff" rid="aff002">
          <sup>2</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>McVean</surname>
          <given-names>Gilean</given-names>
        </name>
        <xref ref-type="aff" rid="aff001">
          <sup>1</sup>
        </xref>
        <xref ref-type="aff" rid="aff002">
          <sup>2</sup>
        </xref>
        <xref ref-type="aff" rid="aff003">
          <sup>3</sup>
        </xref>
      </contrib>
    </contrib-group>
    <aff id="aff001">
      <label>1</label>
      <addr-line>Wellcome Trust Centre for Human Genetics, University of Oxford, Oxford, United Kingdom</addr-line>
    </aff>
    <aff id="aff002">
      <label>2</label>
      <addr-line>Department of Statistics, University of Oxford, Oxford, United Kingdom</addr-line>
    </aff>
    <aff id="aff003">
      <label>3</label>
      <addr-line>Li Ka Shing Centre for Health Information and Discovery, University of Oxford, Oxford, United Kingdom</addr-line>
    </aff>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Song</surname>
          <given-names>Yun S.</given-names>
        </name>
        <role>Editor</role>
        <xref ref-type="aff" rid="edit1"/>
      </contrib>
    </contrib-group>
    <aff id="edit1">
      <addr-line>UC Berkeley, UNITED STATES</addr-line>
    </aff>
    <author-notes>
      <fn fn-type="COI-statement" id="coi001">
        <p>The authors have declared that no competing interests exist.</p>
      </fn>
      <fn fn-type="con" id="contrib001">
        <p>Conceived and designed the experiments: JK AME GM. Performed the experiments: JK. Analyzed the data: JK. Wrote the paper: JK GM.</p>
      </fn>
      <corresp id="cor001">* E-mail: <email>jerome.kelleher@well.ox.ac.uk</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <month>5</month>
      <year>2016</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>4</day>
      <month>5</month>
      <year>2016</year>
    </pub-date>
    <volume>12</volume>
    <issue>5</issue>
    <elocation-id>e1004842</elocation-id>
    <history>
      <date date-type="received">
        <day>10</day>
        <month>12</month>
        <year>2015</year>
      </date>
      <date date-type="accepted">
        <day>2</day>
        <month>3</month>
        <year>2016</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© 2016 Kelleher et al</copyright-statement>
      <copyright-year>2016</copyright-year>
      <copyright-holder>Kelleher et al</copyright-holder>
      <license xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an open access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p>
      </license>
    </permissions>
    <self-uri content-type="pdf" xlink:type="simple" xlink:href="pcbi.1004842.pdf"/>
    <abstract>
      <p>A central challenge in the analysis of genetic variation is to provide realistic genome simulation across millions of samples. Present day coalescent simulations do not scale well, or use approximations that fail to capture important long-range linkage properties. Analysing the results of simulations also presents a substantial challenge, as current methods to store genealogies consume a great deal of space, are slow to parse and do not take advantage of shared structure in correlated trees. We solve these problems by introducing sparse trees and coalescence records as the key units of genealogical analysis. Using these tools, exact simulation of the coalescent with recombination for chromosome-sized regions over hundreds of thousands of samples is possible, and substantially faster than present-day approximate methods. We can also analyse the results orders of magnitude more quickly than with existing methods.</p>
    </abstract>
    <abstract abstract-type="summary">
      <title>Author Summary</title>
      <p>Our understanding of the distribution of genetic variation in natural populations has been driven by mathematical models of the underlying biological and demographic processes. A key strength of such coalescent models is that they enable efficient simulation of data we might see under a variety of evolutionary scenarios. However, current methods are not well suited to simulating genome-scale data sets on hundreds of thousands of samples, which is essential if we are to understand the data generated by population-scale sequencing projects. Similarly, processing the results of large simulations also presents researchers with a major challenge, as it can take many days just to read the data files. In this paper we solve these problems by introducing a new way to represent information about the ancestral process. This new representation leads to huge gains in simulation speed and storage efficiency so that large simulations complete in minutes and the output files can be processed in seconds.</p>
    </abstract>
    <funding-group>
      <funding-statement>This work was supported by Wellcome Trust core award 090532/Z/09/Z to the Wellcome Trust Centre for Human Genetics, Wellcome Trust grant 100956/Z/13/Z to GM, and EPSRC grants EP/I01361X/1, EP/I013091/1 and EP/K034316/1 to AME. The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement>
    </funding-group>
    <counts>
      <fig-count count="5"/>
      <table-count count="0"/>
      <page-count count="22"/>
    </counts>
    <custom-meta-group>
      <custom-meta id="data-availability">
        <meta-name>Data Availability</meta-name>
        <meta-value>All experiments in this paper are fully reproducible using code available at <ext-link ext-link-type="uri" xlink:href="https://github.com/jeromekelleher/msprime-paper">https://github.com/jeromekelleher/msprime-paper</ext-link>.</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
  <notes>
    <title>Data Availability</title>
    <p>All experiments in this paper are fully reproducible using code available at <ext-link ext-link-type="uri" xlink:href="https://github.com/jeromekelleher/msprime-paper">https://github.com/jeromekelleher/msprime-paper</ext-link>.</p>
  </notes>
</front>
<body>
  <sec sec-type="intro" id="sec001">
    <title>Introduction</title>
    <p>The coalescent process [<xref rid="pcbi.1004842.ref001" ref-type="bibr">1</xref>, <xref rid="pcbi.1004842.ref002" ref-type="bibr">2</xref>] underlies much of modern population genetics and is fundamental to our understanding of molecular evolution. The coalescent describes the ancestry of a sample of <italic>n</italic> genes in the absence of recombination, selection, population structure and other complicating factors. The model has proved to be highly extensible, and these and many other complexities required to model real populations have successfully been incorporated [<xref rid="pcbi.1004842.ref003" ref-type="bibr">3</xref>]. Simulation has played a key role in coalescent theory since its beginnings [<xref rid="pcbi.1004842.ref002" ref-type="bibr">2</xref>], partly due to the ease with which it can be simulated: for a sample of <italic>n</italic> genes, we require only <italic>O</italic>(<italic>n</italic>) time and space to simulate a genealogy [<xref rid="pcbi.1004842.ref004" ref-type="bibr">4</xref>].</p>
    <p>Soon after the single locus coalescent was derived, Hudson defined an algorithm to simulate the coalescent with recombination [<xref rid="pcbi.1004842.ref005" ref-type="bibr">5</xref>]. However, after some early successes in characterising this process [<xref rid="pcbi.1004842.ref006" ref-type="bibr">6</xref>, <xref rid="pcbi.1004842.ref007" ref-type="bibr">7</xref>] little progress was made because of the complex distribution of blocks of ancestral material among ancestors. Some years after Hudson’s pioneering work, the study of recombination in the coalescent was recast in the framework of the Ancestral Recombination Graph [<xref rid="pcbi.1004842.ref008" ref-type="bibr">8</xref>, <xref rid="pcbi.1004842.ref009" ref-type="bibr">9</xref>]. In the ARG, nodes are events (either recombination or common ancestor) and the edges are ancestral chromosomes. A recombination event results in a single ancestral chromosome splitting into two chromosomes, and a common ancestor event results in two chromosomes merging into a common ancestor. Analytically, the ARG is a considerable simplification of Hudson’s earlier work as it models all recombination events that occurred in the history of a sample and not just those that can potentially affect the genealogies. Many important results have been derived using this framework, one of which is particularly significant for our purposes here. Ethier and Griffiths [<xref rid="pcbi.1004842.ref010" ref-type="bibr">10</xref>] proved that the expected number of recombination events back to the Grand MRCA of a sample of <italic>n</italic> individuals grows like <italic>e</italic><sup><italic>ρ</italic></sup> as <italic>ρ</italic> → ∞, where <italic>ρ</italic> is the population scaled recombination rate. In this paper we consider a diploid model in which we have a sequence of <italic>m</italic> discrete sites that are indexed from zero. Recombination occurs between adjacent sites at rate <italic>r</italic> per generation, and therefore <italic>ρ</italic> = 4<italic>N</italic><sub><italic>e</italic></sub>
<italic>r</italic>(<italic>m</italic> − 1). The Ethier and Griffiths result implies that the time required to simulate an ARG grows exponentially with the sequence length, and we can only ever hope to simulate ARGs for the shortest of sequences.</p>
    <p>This result, coupled with the observed poor scaling of coalescent simulators such as the seminal <monospace>ms</monospace> program [<xref rid="pcbi.1004842.ref011" ref-type="bibr">11</xref>] seems to imply that simulating the coalescent with recombination over chromosome scales is hopeless, and researchers have therefore sought alternatives. The sequentially Markov coalescent (SMC) approximation [<xref rid="pcbi.1004842.ref012" ref-type="bibr">12</xref>, <xref rid="pcbi.1004842.ref013" ref-type="bibr">13</xref>] underlies the majority of present day genome scale simulation [<xref rid="pcbi.1004842.ref014" ref-type="bibr">14</xref>–<xref rid="pcbi.1004842.ref016" ref-type="bibr">16</xref>] and inference methods [<xref rid="pcbi.1004842.ref017" ref-type="bibr">17</xref>–<xref rid="pcbi.1004842.ref019" ref-type="bibr">19</xref>]. The SMC simplifies the process of simulating genealogies by assuming that each marginal tree depends only on its immediate predecessor as we move from left-to-right across the sequence. As a consequence, the time required to simulate genealogies scales linearly with increasing sequence length. In practice, SMC based simulators such as <monospace>MaCS</monospace> [<xref rid="pcbi.1004842.ref014" ref-type="bibr">14</xref>] and <monospace>scrm</monospace> [<xref rid="pcbi.1004842.ref016" ref-type="bibr">16</xref>] are many times faster than <monospace>ms</monospace>.</p>
    <p>The SMC has disadvantages, however. Firstly, the SMC discards all long range linkage information and therefore can be a poor approximation when modelling features such as the length of admixture blocks [<xref rid="pcbi.1004842.ref020" ref-type="bibr">20</xref>]. Improving the accuracy of the SMC can also be difficult. For example, <monospace>MaCS</monospace> has a parameter to increase the number of previous trees on which a marginal tree can depend. Counter-intuitively, increasing this parameter beyond a certain limit results in a <italic>worse</italic> approximation to the coalescent with recombination [<xref rid="pcbi.1004842.ref016" ref-type="bibr">16</xref>]. (The <monospace>scrm</monospace> simulator provides a similar parameter that does not exhibit this unfortunate behaviour, however.) Incorporating complexities such as population structure [<xref rid="pcbi.1004842.ref021" ref-type="bibr">21</xref>], intra-codon recombination [<xref rid="pcbi.1004842.ref022" ref-type="bibr">22</xref>] and inversions [<xref rid="pcbi.1004842.ref023" ref-type="bibr">23</xref>] is non-trivial and can be substantially more complex than the corresponding modification to the exact coalescent model. Also, while SMC based methods scale well in terms of increasing sequence length, currently available simulators do not scale well in terms of sample size.</p>
    <p>We solve these problems by introducing sparse trees and coalescence records as the fundamental units of genealogical analysis. By creating a concrete formalisation of the genealogies generated by the coalescent process in terms of an integer vector, we greatly increase the efficiency of simulating the exact coalescent with recombination. In the section <bold>Efficient coalescent simulation</bold>, we discuss how Hudson’s classical simulation algorithm can be defined in terms of these sparse trees, and why this leads to substantial gains in terms of the simulation speed and memory usage. We show that our implementation of the exact coalescent, <monospace>msprime</monospace>, is competitive with approximate simulators for small sample sizes, and is faster than all other simulators for large sample sizes. This is possible because Hudson’s algorithm does not traverse the entire ARG, but rather a small subset of it. The ARG contains a large number of nodes that do not affect the genealogies of the sample [<xref rid="pcbi.1004842.ref024" ref-type="bibr">24</xref>], and Hudson’s algorithm saves time by not visiting these nodes. This subset of the ARG (sometimes known as the ‘little’ ARG) has not been well characterised, which makes analysis of Hudson’s algorithm difficult. However, we show some numerical results indicating that the number of nodes in the little ARG may be a quadratic function of the scaled recombination rate <italic>ρ</italic> rather than an exponential.</p>
    <p>Generating simulated data is of little use if the results cannot be processed in an efficient and convenient manner. Currently available methods for storing and processing genealogies perform very poorly on trees with hundreds of thousands of nodes. In the section <bold>Efficient genealogical analysis</bold>, we show how the encoding of the correlated trees output by our simulations leads to an extremely compact method of storing these genealogies. For large simulations, the representation can be thousands of times smaller than the most compact tree serialisation format currently available. Our encoding also leads to very efficient tree processing algorithms; for example, sequential access to trees is several orders of magnitude faster than existing methods.</p>
    <p>The advantages of faster and more accurate simulation over huge sample sizes, and the ability to quickly process very large result sets may enable applications that were not previously feasible. In the <bold>Results and Discussion</bold> we conclude by considering some of these applications and other uses of our novel encoding of genealogies. The methods developed in this paper allow us to simulate the coalescent for very large sample sizes, where the underlying assumptions of the model may be violated [<xref rid="pcbi.1004842.ref025" ref-type="bibr">25</xref>–<xref rid="pcbi.1004842.ref027" ref-type="bibr">27</xref>]. Addressing these issues is beyond the scope of this work, but we note that the majority of our results can be applied to simulations of any retrospective population model.</p>
  </sec>
  <sec sec-type="materials|methods" id="sec002">
    <title>Methods</title>
    <sec id="sec003">
      <title>Efficient coalescent simulation</title>
      <p>In this section we define our encoding of coalescent genealogies, and show how this leads to very efficient simulations. There are many different simulation packages, and so we begin with a brief review of the state-of-the-art before defining our encoding and analysing the resulting algorithm in the following subsections.</p>
      <p>Two basic approaches exist to simulate the coalescent with recombination. The first approach was defined by Hudson [<xref rid="pcbi.1004842.ref005" ref-type="bibr">5</xref>], and works by applying the effects of recombination and common ancestor events to the ancestors of the sample as we go backwards in time. Events occur at a rate that depends only on the state of the extant ancestors, and so we can generate the waiting times to these events efficiently without considering the intervening generations. This contrasts with time-reversed generation-by-generation methods [<xref rid="pcbi.1004842.ref028" ref-type="bibr">28</xref>–<xref rid="pcbi.1004842.ref031" ref-type="bibr">31</xref>] which are more flexible but also considerably less efficient. The first simulation program published based on Hudson’s algorithm was <monospace>ms</monospace> [<xref rid="pcbi.1004842.ref011" ref-type="bibr">11</xref>]. After this, many programs were published to simulate various evolutionary complexities not handled by <monospace>ms</monospace>, such as selection [<xref rid="pcbi.1004842.ref032" ref-type="bibr">32</xref>–<xref rid="pcbi.1004842.ref035" ref-type="bibr">35</xref>], recombination hotspots [<xref rid="pcbi.1004842.ref036" ref-type="bibr">36</xref>], codon models [<xref rid="pcbi.1004842.ref037" ref-type="bibr">37</xref>], intra-codon recombination [<xref rid="pcbi.1004842.ref022" ref-type="bibr">22</xref>] and models of species with a skewed offspring distribution [<xref rid="pcbi.1004842.ref038" ref-type="bibr">38</xref>]. Others developed user interfaces to facilitate easier analysis [<xref rid="pcbi.1004842.ref039" ref-type="bibr">39</xref>, <xref rid="pcbi.1004842.ref040" ref-type="bibr">40</xref>].</p>
      <p>The second fundamental method of simulating the coalescent with recombination is due to Wiuf and Hein [<xref rid="pcbi.1004842.ref024" ref-type="bibr">24</xref>]. In Wiuf and Hein’s algorithm we begin by generating a coalescent tree for the left-most locus and then move across the sequence, updating the genealogy to account for recombination events. This process is considerably more complex than Hudson’s algorithm because the relationship between trees as we move across the genome is non-Markovian: each tree depends on all previously generated trees. Because of this complexity, exact simulators based on Wiuf and Hein’s algorithm are significantly less efficient than <monospace>ms</monospace> [<xref rid="pcbi.1004842.ref016" ref-type="bibr">16</xref>, <xref rid="pcbi.1004842.ref041" ref-type="bibr">41</xref>]. However, Wiuf and Hein’s algorithm has provided the basis for the SMC approximation [<xref rid="pcbi.1004842.ref012" ref-type="bibr">12</xref>, <xref rid="pcbi.1004842.ref013" ref-type="bibr">13</xref>], and programs based on this approach [<xref rid="pcbi.1004842.ref014" ref-type="bibr">14</xref>–<xref rid="pcbi.1004842.ref016" ref-type="bibr">16</xref>] can simulate long sequences far more efficiently than exact methods such as <monospace>ms</monospace>. Very roughly, we can think of Wiuf and Hein’s algorithm performing a depth-first traversal of the ARG, and Hudson’s algorithm a breadth-first traversal. Neither explore the full ARG, but instead traverse the subset required to contruct all marginal genealogies.</p>
      <p>Recently, Hudson’s algorithm has been utilised in <monospace>cosi2</monospace> [<xref rid="pcbi.1004842.ref035" ref-type="bibr">35</xref>], which takes a novel approach to simulating sequences under the coalescent. The majority of simulators first generate genealogies and then throw down mutations in a separate process. In <monospace>cosi2</monospace> these two processes are merged, so that mutations are generated during traversal of the ARG. Instead of associating a partial genealogy with each ancestral segment, <monospace>cosi2</monospace> maps ancestral segments directly to the set of sampled individuals at the leaves of this tree. When a coalescence between two overlapping segments occurs, we then have sufficient information to generate mutations and map them to the affected samples. This strategy, coupled with the use of sophisticated data structures, makes <monospace>cosi2</monospace> many times faster than competing simulators such as <monospace>msms</monospace> [<xref rid="pcbi.1004842.ref034" ref-type="bibr">34</xref>]. The disadvantage of combining the mutation process with ARG traversal, however, is that the underlying genealogies are not available, and <monospace>cosi2</monospace> cannot directly output coalescent trees.</p>
      <p>Many reviews are available to compare the various coalescent simulators in terms of their features [<xref rid="pcbi.1004842.ref042" ref-type="bibr">42</xref>–<xref rid="pcbi.1004842.ref047" ref-type="bibr">47</xref>]. Little information is available, however, about their relative efficiencies. Hudson’s <monospace>ms</monospace> is widely regarded as the most efficient implementation of the exact coalescent and is the benchmark against which other programs are measured [<xref rid="pcbi.1004842.ref013" ref-type="bibr">13</xref>–<xref rid="pcbi.1004842.ref016" ref-type="bibr">16</xref>, <xref rid="pcbi.1004842.ref041" ref-type="bibr">41</xref>, <xref rid="pcbi.1004842.ref047" ref-type="bibr">47</xref>]. However, for larger sample sizes and long sequence lengths, <monospace>msms</monospace> is much faster than <monospace>ms</monospace>. Also, for these larger sequence lengths and sample sizes, <monospace>ms</monospace> is unreliable and crashes [<xref rid="pcbi.1004842.ref015" ref-type="bibr">15</xref>, <xref rid="pcbi.1004842.ref047" ref-type="bibr">47</xref>]. Thus, <monospace>msms</monospace> is a much more suitable baseline against which to judge performance. The <monospace>scrm</monospace> simulator is the most efficient SMC based method currently available [<xref rid="pcbi.1004842.ref016" ref-type="bibr">16</xref>].</p>
      <sec id="sec004">
        <title>Hudson’s algorithm with sparse trees</title>
        <p>An oriented tree [<xref rid="pcbi.1004842.ref048" ref-type="bibr">48</xref>, p. 461] is a sequence of integers <italic>π</italic><sub>1</sub>
<italic>π</italic><sub>2</sub>…, such that <italic>π</italic><sub><italic>u</italic></sub> is the parent of node <italic>u</italic> and <italic>u</italic> is a root if <italic>π</italic><sub><italic>u</italic></sub> = 0. <xref ref-type="fig" rid="pcbi.1004842.g001">Fig 1</xref> shows some example tree topologies and corresponding integer sequence encodings. Oriented trees provide a concise and efficient method of representing genealogies, and have been used in coalescent simulations of a spatial continuum model [<xref rid="pcbi.1004842.ref049" ref-type="bibr">49</xref>, <xref rid="pcbi.1004842.ref050" ref-type="bibr">50</xref>]. These simulations adopted the convention that the individuals in the sample (leaf nodes) are mapped to the integers 1, …, <italic>n</italic>. For every internal node <italic>u</italic> we have <italic>n</italic> &lt; <italic>u</italic> &lt; 2<italic>n</italic> and (for a binary tree) the root is 2<italic>n</italic> − 1. We refer to such trees as dense because the 2<italic>n</italic> − 2 non-zero entries of the (binary) tree <italic>π</italic> occur at <italic>u</italic> = 1, …, 2<italic>n</italic> − 2. A sparse oriented tree (or more concisely, sparse tree) is an oriented tree <italic>π</italic> in which the leaf nodes are 1, …, <italic>n</italic> as before, but internal nodes can be any integer &gt; <italic>n</italic>. For example, the oriented trees 〈5, 4, 4, 5, 0〉 and 〈6, 5, 5, 0, 6, 0〉 are topologically equivalent, but the former is dense and the latter sparse.</p>
        <fig id="pcbi.1004842.g001" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1004842.g001</object-id>
          <label>Fig 1</label>
          <caption>
            <title>Example oriented trees.</title>
            <p>From left-to-right, these trees are defined by the sequences 〈5, 4, 4, 5, 0〉, 〈4, 4, 4, 0〉 and 〈4, 4, 5, 5, 0〉, respectively.</p>
          </caption>
          <graphic xlink:href="pcbi.1004842.g001"/>
        </fig>
        <p>In our simulations, ancestral nodes are numbered sequentially from <italic>n</italic> + 1, and a new node is created when a coalescence occurs within one or more of the marginal genealogies. Note that we make a distinction between common ancestor events and coalescence events throughout. A common ancestor event occurs when two ancestors merge to form a common ancestor. If these ancestors have overlapping ancestral material, then there will also be at least one coalescence event, which is defined as a single contiguous block of sequence coalescing within a common ancestor. In Hudson’s algorithm there are many common ancestor events that do not result in coalescence, and it is important to distinguish between them.</p>
        <p>Let the tuple (<italic>ℓ</italic>, <italic>r</italic>, <italic>u</italic>) define a segment carrying ancestral material. This segment represents the mapping of the half-closed genomic interval [<italic>ℓ</italic>, <italic>r</italic>) to the tree node <italic>u</italic>. Each ancestor <italic>a</italic> is defined by a set of non-overlapping segments. Initially we have <italic>n</italic> ancestors, each consisting of a single segment (0, <italic>m</italic>, <italic>u</italic>) for 1 ≤ <italic>u</italic> ≤ <italic>n</italic>. The only other state required by the algorithm is the time <italic>t</italic>, and the next node <italic>w</italic>; initially, <italic>t</italic> = 0 and <italic>w</italic> = <italic>n</italic> + 1.</p>
        <p>Let <italic>P</italic> be the set of ancestors at a given time <italic>t</italic>. Recombination events happen at rate <italic>ρL</italic>/(<italic>m</italic> − 1) where
<disp-formula id="pcbi.1004842.e001"><alternatives><graphic xlink:href="pcbi.1004842.e001.jpg" id="pcbi.1004842.e001g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M1"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>L</mml:mi><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>a</mml:mi><mml:mo>∈</mml:mo><mml:mi>P</mml:mi></mml:mrow></mml:munder><mml:mfenced close=")" open="(" separators=""><mml:munder><mml:mo form="prefix" movablelimits="true">max</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mi>ℓ</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi><mml:mo>)</mml:mo><mml:mo>∈</mml:mo><mml:mi>a</mml:mi></mml:mrow></mml:munder><mml:mi>r</mml:mi><mml:mo>-</mml:mo><mml:munder><mml:mo form="prefix" movablelimits="true">min</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mi>ℓ</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi><mml:mo>)</mml:mo><mml:mo>∈</mml:mo><mml:mi>a</mml:mi></mml:mrow></mml:munder><mml:mi>ℓ</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives></disp-formula>
is the number of available ‘links’ that may be broken. (We use a fixed recombination rate here for simplicity, but an arbitrary recombination map can be incorporated without difficulty.) We choose one of the available breakpoints uniformly, and split the ancestry of the individual at that point into two recombinant ancestors. If this breakpoint is at <italic>k</italic>, we assign all segments with <italic>r</italic> ≤ <italic>k</italic> to one ancestor and all segments with <italic>ℓ</italic> ≥ <italic>k</italic> to the other. If there is a segment (<italic>ℓ</italic>, <italic>r</italic>, <italic>u</italic>) such that <italic>ℓ</italic> &lt; <italic>k</italic> &lt; <italic>r</italic>, then <italic>k</italic> falls within this segment and it is split such that the segment (<italic>ℓ</italic>, <italic>k</italic>, <italic>u</italic>) is assigned to one ancestor and (<italic>k</italic>, <italic>r</italic>, <italic>u</italic>) is assigned to the other.</p>
        <p>Common ancestor events occur at rate |<italic>P</italic>|(|<italic>P</italic>| − 1). Two ancestors <italic>a</italic> and <italic>b</italic> are chosen and their ancestry merged to form their common ancestor. If their segments do not overlap, the set of ancestral segments of the common ancestor is the union of those of <italic>a</italic> and <italic>b</italic>. If segments do overlap, we have coalescence events which must be recorded. We define a coalescence event as the merging of two segments over the interval [<italic>ℓ</italic>, <italic>r</italic>) into a single ancestral segment. In general the coordinates of overlapping segments <italic>x</italic> and <italic>y</italic> will not exactly coincide, in which case we create an equivalent set of segments by subdividing into the intersections and ‘overhangs’. Suppose then that we have two exactly intersecting segments (<italic>ℓ</italic>, <italic>r</italic>, <italic>u</italic>) and (<italic>ℓ</italic>, <italic>r</italic>, <italic>v</italic>) from <italic>a</italic> and <italic>b</italic> respectively; over the interval [<italic>ℓ</italic>, <italic>r</italic>) the nodes <italic>u</italic> and <italic>v</italic> coalesce into a common ancestor, which we associate with the next available node <italic>w</italic>. We record this information by storing the coalescence record (<italic>ℓ</italic>, <italic>r</italic>, <italic>w</italic>, (<italic>u</italic>, <italic>v</italic>), <italic>t</italic>). As we see in the <bold>Generating trees</bold> section, these records provide sufficient information to later recover all marginal trees. After recording this coalescence, we then check if there are any other segments in <italic>P</italic> that intersect with [<italic>ℓ</italic>, <italic>r</italic>). If there are, the simulation of this region is not yet complete and we insert the segment (<italic>ℓ</italic>, <italic>r</italic>, <italic>w</italic>) into the ancestor of <italic>a</italic> and <italic>b</italic>. On the other hand, if there is some subset of [<italic>ℓ</italic>, <italic>r</italic>) such that there is no other segment in <italic>P</italic> that intersects with it, we know that the marginal tree covering this interval is complete and therefore we do not need to trace its history any further. If any other intervals overlap in <italic>a</italic> and <italic>b</italic>, we perform the same operations, and finally update the next available node by incrementing <italic>w</italic>. In this way, all coalescing intervals within the same ancestor map to the same node <italic>w</italic>, even if they are disjoint. Conversely, if two disjoint marginal trees contain the same node, we know that this is because multiple segments coalesced simultaneously within the same ancestor.</p>
        <p>The algorithm continues generating recombination and common ancestor events at the appropriate rates until <italic>P</italic> is empty, and all marginal trees are complete. This interpretation of Hudson’s algorithm differs from the standard formulations [<xref rid="pcbi.1004842.ref004" ref-type="bibr">4</xref>, <xref rid="pcbi.1004842.ref005" ref-type="bibr">5</xref>, <xref rid="pcbi.1004842.ref012" ref-type="bibr">12</xref>] by concretely defining the representation of ancestry and by introducing the idea of coalescence records. We have omitted many important details here in the interest of brevity; see <xref ref-type="supplementary-material" rid="pcbi.1004842.s001">S1 Text</xref> for a detailed listing of our implementation of Hudson’s algorithm, and <xref ref-type="supplementary-material" rid="pcbi.1004842.s002">S2 Text</xref> for an illustration of a complete invocation of the algorithm.</p>
        <p>There are several advantages to our sparse tree representation of ancestry. Firstly, we do not need to store partially built trees in memory, and the only state we need to maintain is the set of ancestral segments. This leads to substantial time and memory savings, since we no longer have to copy partially built trees at recombination events or update them during coalescences. We can also actively defragment the segments in memory. For example, suppose that as a result of a common ancestor event we have two segments (<italic>ℓ</italic>, <italic>k</italic>, <italic>u</italic>) and (<italic>k</italic>, <italic>r</italic>, <italic>u</italic>) in an ancestor. We can replace these segments with the equivalent segment (<italic>ℓ</italic>, <italic>r</italic>, <italic>u</italic>). Such defragmentation yields significant time and memory savings.</p>
        <p>We have developed an implementation of Hudson’s algorithm called <monospace>msprime</monospace> based on these ideas. This package (written in C and Python) provides an <monospace>ms</monospace> compatible command line interface along with a Python API, and is freely available under the terms of the GNU GPL at <ext-link ext-link-type="uri" xlink:href="https://pypi.python.org/pypi/msprime">https://pypi.python.org/pypi/msprime</ext-link>. The implementation uses a simple linked-list based representation of ancestral segments, and uses a binary indexed tree [<xref rid="pcbi.1004842.ref051" ref-type="bibr">51</xref>, <xref rid="pcbi.1004842.ref052" ref-type="bibr">52</xref>] to ensure the choice of ancestral segment involved in a recombination event can be done in logarithmic time. The implementation of <monospace>msprime</monospace> is based on the listings for Hudson’s algorithm given in <xref ref-type="supplementary-material" rid="pcbi.1004842.s001">S1 Text</xref>, which should provide sufficient detail to make implementation in a variety of languages routine.</p>
      </sec>
      <sec id="sec005">
        <title>Performance analysis</title>
        <p>Surprisingly little is known about the complexity of Hudson’s algorithm. We do not know, for example, what the expected maximum number of extant ancestors is, nor the distribution of ancestral material among them. The most important unknown value in terms of quantifying the complexity of the algorithm is the expected number of events that must be generated. It is sufficient to consider the recombination events as the number of common ancestor and recombination events is approximately equal [<xref rid="pcbi.1004842.ref024" ref-type="bibr">24</xref>]. Hudson’s algorithm traverses a subset of the ARG as it generates the marginal genealogies in which we are interested, and so we know that the expected number of recombination events we encounter is less than <italic>e</italic><sup><italic>ρ</italic></sup> [<xref rid="pcbi.1004842.ref010" ref-type="bibr">10</xref>]. This subset of the ARG is sometimes known as the ‘little’ ARG, but the relationship between the ‘big’ and little ARGs has not been well characterised.</p>
        <p><xref ref-type="fig" rid="pcbi.1004842.g002">Fig 2</xref> plots the average number of recombination events generated by Hudson’s algorithm for varying sequence lengths and sample sizes. In this plot we also show the results of fitting a quadratic function to the number of recombination events as we increase the scaled recombination rate <italic>ρ</italic>. The fit is excellent, suggesting that the current upper bound of <italic>e</italic><sup><italic>ρ</italic></sup> is far too pessimistic. Wiuf and Hein [<xref rid="pcbi.1004842.ref024" ref-type="bibr">24</xref>] previously noted that the observed number of events in Hudson’s algorithm was ‘subexponential’ but did not suggest a quadratic bound. Another point to note is that the rate at which the number of events grows as we increase the sample size is extremely slow, suggesting that Hudson’s algorithm should scale well for large sample sizes.</p>
        <fig id="pcbi.1004842.g002" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1004842.g002</object-id>
          <label>Fig 2</label>
          <caption>
            <title>The mean number of recombination events in Hudson’s algorithm over 100 replicates for varying sequence length and sample size.</title>
            <p>In the left panel we fix <italic>n</italic> = 1000 and vary the sequence length. Shown in dots is a quadratic fitted to these data, which has a leading coefficient of 8.4 × 10<sup>−3</sup>. In the right panel we fix the sequence length at 50 megabases and vary the sample size.</p>
          </caption>
          <graphic xlink:href="pcbi.1004842.g002"/>
        </fig>
        <p>These expectations are borne out well in observations of our implementation of Hudson’s algorithm in <monospace>msprime</monospace>. <xref ref-type="fig" rid="pcbi.1004842.g003">Fig 3</xref> compares the time required to simulate coalescent trees using a number of simulation packages. As we increase the sequence length in the left-hand panel, the running time of <monospace>msprime</monospace> increases faster than linearly, but at quite a slow rate. <monospace>msprime</monospace> is faster than the SMC approximations (<monospace>MaCS</monospace> and <monospace>scrm</monospace>) until <italic>ρ</italic> is roughly 20000, and the difference is minor for sequence lengths greater than this. <monospace>msprime</monospace> is far faster than <monospace>msms</monospace>, the only other exact simulator in the comparison (we did not include <monospace>ms</monospace> in these comparisons as it was too slow and is unreliable for large sample sizes). As we increase the sample size in the right-hand panel, we can see that <monospace>msprime</monospace> is far faster than any other simulator. Two versions of <monospace>msprime</monospace> are shown in these plots: one outputting Newick trees (to ensure that the comparison with other simulators is fair), and another that outputs directly in <monospace>msprime</monospace>’s native format. Conversion to Newick is an expensive process, particularly for larger sample sizes. When we eliminate this bottleneck, simulation time grows at quite a slow, approximately linear rate. The memory usage of <monospace>msprime</monospace> is also modest, with the simulations in <xref ref-type="fig" rid="pcbi.1004842.g003">Fig 3</xref> requiring less than a gigabyte of RAM. <xref ref-type="supplementary-material" rid="pcbi.1004842.s005">S3 Fig</xref> shows that the mean number of recombination breakpoints (i.e., the number of recombination events within ancestral material) output by all these simulators is identical, and matches Hudson and Kaplan’s prediction [<xref rid="pcbi.1004842.ref006" ref-type="bibr">6</xref>] very well, giving us some confidence in the correctness of the results. <xref ref-type="supplementary-material" rid="pcbi.1004842.s006">S4 Fig</xref> shows the relative performance of <monospace>msprime</monospace> and <monospace>scrm</monospace> for a small sample size, and also shows the effect of increasing the size of <monospace>scrm</monospace>’s sliding window.</p>
        <fig id="pcbi.1004842.g003" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1004842.g003</object-id>
          <label>Fig 3</label>
          <caption>
            <title>Comparison of the average running time over 100 replicates for various coalescent simulators with varying sequence length and sample size.</title>
            <p><monospace>msms</monospace> [<xref rid="pcbi.1004842.ref034" ref-type="bibr">34</xref>] is the most efficient published simulator based on Hudson’s algorithm that can output genealogies. <monospace>MaCS</monospace> [<xref rid="pcbi.1004842.ref014" ref-type="bibr">14</xref>] is a popular SMC based simulator, and <monospace>scrm</monospace> [<xref rid="pcbi.1004842.ref016" ref-type="bibr">16</xref>] is the most efficient sequential simulator currently available. Both <monospace>MaCS</monospace> and <monospace>scrm</monospace> were run in SMC′ mode. Two results are shown for <monospace>msprime</monospace>; one outputting Newick trees and another outputting the native HDF5 based format.</p>
          </caption>
          <graphic xlink:href="pcbi.1004842.g003"/>
        </fig>
        <p>We are often interested in the haplotypes that result from imposing a mutation process onto genealogies as well as the genealogies themselves. <xref ref-type="supplementary-material" rid="pcbi.1004842.s003">S1 Fig</xref> compares the time required to generate haplotypes using <monospace>scrm</monospace>, <monospace>msprime</monospace> and <monospace>cosi2</monospace>. Simulation times are similar in all three for a fixed sample size of 1000 and increasing sequence length. For increasing sample sizes, both <monospace>cosi2</monospace> and <monospace>msprime</monospace> are substantially faster than <monospace>scrm</monospace>. However, <monospace>msprime</monospace> is significantly faster than <monospace>cosi2</monospace> (and uses less memory; see <xref ref-type="supplementary-material" rid="pcbi.1004842.s004">S2 Fig</xref>), particularly when we remove the large overhead of outputting the haplotypes in text form.</p>
        <p>Performance statistics were measured on Intel Xeon E5-2680 processors running Debian 8.2. All code required to run comparisons and generate plots is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/jeromekelleher/msprime-paper">https://github.com/jeromekelleher/msprime-paper</ext-link>.</p>
      </sec>
    </sec>
    <sec id="sec006">
      <title>Efficient genealogical analysis</title>
      <p>There has been much recent interest in the problem of representing large scale genetic data in formats that facilitate efficient access and calculation of statistics [<xref rid="pcbi.1004842.ref053" ref-type="bibr">53</xref>–<xref rid="pcbi.1004842.ref055" ref-type="bibr">55</xref>]. The use of ‘succinct’ data structures, which are highly compressed but also allow for efficient queries is becoming essential: the scale of the data available to researchers is so large that naive methods simply no longer work.</p>
      <p>Although genealogies are fundamental to biology, there has been little attention to the problem of encoding trees in a form that facilitates efficient computation. The majority of research has focused on the accurate interchange of tree structures and associated metadata. The most common format for exchanging tree data is the Newick format [<xref rid="pcbi.1004842.ref056" ref-type="bibr">56</xref>], which although ill-defined [<xref rid="pcbi.1004842.ref057" ref-type="bibr">57</xref>] has become the de-facto standard. Newick is based on the correspondence of tree structures with nested parentheses, and is a concise method of expressing tree topologies. Because of this recursive structure, specific extensions to the syntax are required to associate information with tree nodes [<xref rid="pcbi.1004842.ref058" ref-type="bibr">58</xref>, <xref rid="pcbi.1004842.ref059" ref-type="bibr">59</xref>]. XML based formats [<xref rid="pcbi.1004842.ref057" ref-type="bibr">57</xref>, <xref rid="pcbi.1004842.ref060" ref-type="bibr">60</xref>] are much more flexible, but tend to require substantially more storage space than Newick [<xref rid="pcbi.1004842.ref057" ref-type="bibr">57</xref>]. Various extensions to Newick have been proposed to incorporate more general graph structures [<xref rid="pcbi.1004842.ref061" ref-type="bibr">61</xref>–<xref rid="pcbi.1004842.ref064" ref-type="bibr">64</xref>], as well as a GraphML extension to encode ARGs directly [<xref rid="pcbi.1004842.ref065" ref-type="bibr">65</xref>]. Because Newick stores branch lengths rather than node times, numerical precision issues also arise when summing over many short branches [<xref rid="pcbi.1004842.ref065" ref-type="bibr">65</xref>].</p>
      <p>General purpose Bioinformatics toolkits such as BioPerl [<xref rid="pcbi.1004842.ref066" ref-type="bibr">66</xref>] and BioPython [<xref rid="pcbi.1004842.ref067" ref-type="bibr">67</xref>] provide basic tools to import trees in the various formats. More specific tree processing libraries such as DendroPy [<xref rid="pcbi.1004842.ref068" ref-type="bibr">68</xref>], ETE [<xref rid="pcbi.1004842.ref069" ref-type="bibr">69</xref>], and APE [<xref rid="pcbi.1004842.ref070" ref-type="bibr">70</xref>] provide more sophisticated tools such as visualisation and tree comparison algorithms. None of these libraries are designed to handle large collections of correlated trees, and cannot make use of the shared structure within a sequence of correlated genealogies. The methods employed rarely scale well to trees containing hundreds of thousands of nodes.</p>
      <p>In this section we introduce a new representation of the correlated trees output by a coalescent simulation using coalescence records. In the <bold>Tree sequences</bold> subsection we discuss this structure and show how it compares in practice to existing approaches in terms of storage size. Then, the <bold>Generating trees</bold> subsection presents an algorithm to sequentially generate the marginal genealogies from a tree sequence, which we compare with existing Newick-based methods. Finally, in the <bold>Counting leaves</bold> subsection we show how the algorithm to sequentially visit trees can be extended to efficiently maintain the counts of leaves from a specific subset, and show how this can be applied in a calculation commonly used in genome wide association studies.</p>
      <sec id="sec007">
        <title>Tree sequences</title>
        <p>As described earlier, the output of our formulation of Hudson’s algorithm is a list of coalescence records. Each coalescence record is a tuple (<italic>ℓ</italic>, <italic>r</italic>, <italic>u</italic>, <italic>c</italic>, <italic>t</italic>) describing the coalescence of a list of child nodes <italic>c</italic> into the parent <italic>u</italic> at time <italic>t</italic> over the half-closed genomic interval [<italic>ℓ</italic>, <italic>r</italic>). (Because only binary trees are possible in the standard coalescent, we assume the child node list <italic>c</italic> is a 2-tuple (<italic>c</italic><sub>1</sub>, <italic>c</italic><sub>2</sub>) throughout. However, arbitrary numbers of children can be accommodated without difficulty to support common ancestor events in which more than two lineages merge [<xref rid="pcbi.1004842.ref071" ref-type="bibr">71</xref>–<xref rid="pcbi.1004842.ref074" ref-type="bibr">74</xref>]) We refer to this set of records as a <italic>tree sequence</italic>, as it is a compact encoding of the set of correlated trees representing the genealogies of a sample. <xref ref-type="fig" rid="pcbi.1004842.g004">Fig 4</xref> shows an illustration of the tree sequence output by an example simulation (see <xref ref-type="supplementary-material" rid="pcbi.1004842.s002">S2 Text</xref> for a full trace of this simulation).</p>
        <fig id="pcbi.1004842.g004" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1004842.g004</object-id>
          <label>Fig 4</label>
          <caption>
            <title>Coalescence records and corresponding marginal trees.</title>
            <p>The <italic>x</italic>-axis represents genomic coordinates, and <italic>y</italic>-axis represents time (with the present at the top). Each line segment in the top section of the figure represents a coalescence record; e.g., the first segment corresponds to the coalescence record (2, 10, 5, (3, 4), 0.071). The lower section of the figure shows the corresponding trees in pictorial and sparse tree form. We have omitted commas and brackets from this sequence representation for compactness.</p>
          </caption>
          <graphic xlink:href="pcbi.1004842.g004"/>
        </fig>
        <p>The tree sequence provides a concise method of representing the correlated genealogies generated by coalescent simulations because it stores node assignments shared across adjacent trees exactly once. Consider node 7 in <xref ref-type="fig" rid="pcbi.1004842.g004">Fig 4</xref>. This node is shared in the first two marginal trees, and in both cases it has two children, 1 and 6. Even though the node spans two marginal trees, the node assignment is represented in one coalescence record (0, 7, 7, (1, 6), 0.170). Importantly, this holds true even though the subtree beneath 6 is different in these trees. Thus, any assignment of a pair of children to a given parent that is shared across adjacent trees will be represented by exactly one coalescence record.</p>
        <p>Coalescence records provide a full history of the coalescence events that occurred in our simulation. (Recall that we distinguish between common ancestor events, which may or may not result in marginal coalescences, and coalescence events which are defined as a single contiguous block of genome merging within a common ancestor.) The effects of recombination events are also stored indirectly in this representation in the form of the left and right coordinate of each record. For every distinct coordinate between 0 and <italic>m</italic>, there must have been at least one recombination event that occurred at that breakpoint. However, there is no direct information about the times of these recombination events, and many recombinations will happen that leave no trace in the set of coalescence records. For example, if we have a recombination event that splits the ancestry of a given lineage, and this is immediately followed by a common ancestor event involving these two lineages, there will be no record of this pair of events.</p>
        <p>On the other hand, if we consider the records in order of their left and right coordinates we can also see them as defining the way in which we transform the marginal genealogies as we move across a chromosome. Because many adjacent sites may share the same genealogy, we need only consider the coordinates of our records in order to recover the distinct genealogies and the coordinate ranges over which they are defined. To obtain the marginal tree covering the interval [0,2), for example, we simply find all records with left coordinate equal to 0 and apply these to the empty sparse tree <italic>π</italic>. To subsequently obtain the tree corresponding to the interval [2, 7) we first remove the records that do not apply over this interval, which must have right coordinate equal to 2. In the example, this corresponds to removing the assignments (2, 4) → 6 and (3, 7) → 9. Having removed the ‘stale’ records that do not cover the current interval, we must now apply the new records that have left coordinate 2. In this case, we have two node assignments (3, 4) → 5 and (2, 5) → 6, and applying these changes to the current tree completes the transformation of the first marginal tree into the second.</p>
        <p>There is an important point here. As we moved from left-to-right across the simulated chromosome we transitioned from one marginal tree to the next by removing and applying only two records. Crucially, modifying the nodes that were affected by this transition did not result in a relabelling of any nodes that were not affected. As Wiuf and Hein [<xref rid="pcbi.1004842.ref024" ref-type="bibr">24</xref>,<xref rid="pcbi.1004842.ref075" ref-type="bibr">75</xref>] showed, the effect of a recombination at a given point in the sequence is to cut the branch above some node in the tree to the left of this point, and reattach it within another branch. This process is known as a subtree-prune-and-regraft [<xref rid="pcbi.1004842.ref076" ref-type="bibr">76</xref>, <xref rid="pcbi.1004842.ref077" ref-type="bibr">77</xref>] and requires a maximum of three records to express in our tree sequence formulation.</p>
        <p>Prune-and-regraft operations that do not affect the root require three records, as illustrated in <xref ref-type="fig" rid="pcbi.1004842.g005">Fig 5</xref>. Two other possibilities exist for how the current tree can be edited as we move along the sequence. The first case is when we have a prune and regraft that involves a change in root node; this requires only two records and is illustrated in the first transition in <xref ref-type="fig" rid="pcbi.1004842.g004">Fig 4</xref>. The other case that can arise from a single recombination event is a simple root change in which the only difference between the adjacent trees is the time of the MRCA. This requires one record, and is illustrated in the second transition in <xref ref-type="fig" rid="pcbi.1004842.g004">Fig 4</xref>. These three possibilities are closely related to the three classes of subtree-prune-and-regraft identified by Song [<xref rid="pcbi.1004842.ref076" ref-type="bibr">76</xref>, <xref rid="pcbi.1004842.ref077" ref-type="bibr">77</xref>].</p>
        <fig id="pcbi.1004842.g005" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1004842.g005</object-id>
          <label>Fig 5</label>
          <caption>
            <title>A prune and regraft not involving the root requires three records.</title>
            <p>(i) We begin with two subtrees rooted at <italic>x</italic> and <italic>y</italic>, and we wish to prune the subtree rooted at <italic>b</italic> and graft it in the branch joining <italic>e</italic> to <italic>y</italic>. (ii) We remove the assignments (<italic>a</italic>, <italic>b</italic>) → <italic>α</italic>, (<italic>α</italic>, <italic>c</italic>) → <italic>x</italic> and (<italic>d</italic>, <italic>e</italic>) → <italic>y</italic>. After this operation, the subtrees <italic>a</italic>, …, <italic>e</italic> are disconnected from the main tree. The main trunk the tree rooted at <italic>z</italic> is unaffected, as are the subtrees below <italic>a</italic>, …, <italic>e</italic>. (iii) We add the records (<italic>a</italic>, <italic>c</italic>) → <italic>x</italic>, (<italic>b</italic>, <italic>e</italic>) → <italic>β</italic> and (<italic>d</italic>, <italic>β</italic>) → <italic>y</italic>, completing the transition.</p>
          </caption>
          <graphic xlink:href="pcbi.1004842.g005"/>
        </fig>
        <p>Knowing the maximum number of records arising from a single recombination event provides us with a useful bound on the expected number of records in a tree sequence. Because the expected number of recombination events within ancestral material is approximately <italic>ρ</italic> log<italic> n</italic> [<xref rid="pcbi.1004842.ref006" ref-type="bibr">6</xref>, <xref rid="pcbi.1004842.ref024" ref-type="bibr">24</xref>] we know that the expected number of tree transitions is <italic>ρ</italic> log<italic> n</italic>. The number of records we require for these tree transitions is then clearly ≤ 3<italic>ρ</italic> log<italic> n</italic>. We also require <italic>n</italic> − 1 records to describe the first tree in the sequence, and so the total number of records is ≤ <italic>n</italic> + 3<italic>ρ</italic> log<italic> n</italic> − 1.</p>
        <p>Storing a tree sequence as a set of coalescence records therefore requires <italic>O</italic>(<italic>n</italic> + <italic>ρ</italic> log<italic> n</italic>) space, whereas any representation that stores each tree separately (such as Newick) must require <italic>O</italic>(<italic>nρ</italic> log<italic> n</italic>) space. This difference is substantial in practice. As an example of a practical simulation of the sort currently being undertaken, we repeated the simulation run by Layer et al. [<xref rid="pcbi.1004842.ref054" ref-type="bibr">54</xref>], in which we simulate a 100 megabase region with a recombination rate of 10<sup>−3</sup> per base per 4<italic>N</italic><sub><italic>e</italic></sub> generations for a sample of 100,000 individuals. This simulation required approximately 6 minutes and 850MB of RAM to run using <monospace>msprime</monospace>; the original simulation reportedly required over 4 weeks using <monospace>MaCS</monospace> on similar hardware.</p>
        <p>Outputting the results as coalescence records in a simple tab-delimited text format resulted in a 173MB file (52MB when gzip compressed). In contrast, writing the trees out in Newick form required around 3.5TB of space. Because plain text is a poor format for storing structured numerical data [<xref rid="pcbi.1004842.ref078" ref-type="bibr">78</xref>], <monospace>msprime</monospace> provides a tree sequence storage file format based of the HDF5 standard [<xref rid="pcbi.1004842.ref079" ref-type="bibr">79</xref>]. Using this storage format, the file size is reduced to 88MB (41MB using the transparent zlib compression provided by the HDF5 library).</p>
        <p>To compare the efficiency of storing correlated trees as coalescence records with the TreeZip compression algorithm [<xref rid="pcbi.1004842.ref080" ref-type="bibr">80</xref>] we output the first 1000 trees in Newick format, resulting in a 3.2GB text file (1.1GB gzip compressed). The TreeZip compression algorithm required 10 hours to run and resulted in an 882MB file (83MB gzip compressed). Unfortunately, it was not feasible to run TreeZip on all 3.5TB of the Newick data, but we can see that with only around 0.1% of the input data, the compressed representation is already larger than the simple text output of the entire tree sequence when expressed as coalescence records.</p>
        <p>Associating mutation information with a tree sequence is straightforward. For example, to represent a mutation that occurs on the branch that joins node 7 to node 9 at site 1 in <xref ref-type="fig" rid="pcbi.1004842.g004">Fig 4</xref>, we simply record the tuple (7, 1). (Infinite sites mutations can be readily accommodated by assuming that the coordinate space is continuous rather than discrete.) Because only the associated node and position of each mutation needs to be stored, this results in a very concise representation of the full genealogical history and mutational state of a sample. Repeating the simulation above with a scaled mutation rate of 10<sup>−3</sup> per unit of sequence length per 4<italic>N</italic><sub><italic>e</italic></sub> generations resulted in 1.2 million infinite sites mutations. The total size of the HDF5 representation of the tree sequence and mutations was 102MB (49MB using HDF5’s zlib compression). In contrast, the text-based haplotype strings consumed 113GB (9.7GB gzip compressed). Converting to text haplotypes required roughly 9 minutes and 14GB of RAM.</p>
        <p>The PBWT [<xref rid="pcbi.1004842.ref053" ref-type="bibr">53</xref>] represents binary haplotype data in a format that is both highly compressed and enables efficient pattern matching algorithms. We converted the mutation data above into PBWT form, which required 22MB of storage. Thus, the PBWT is a more compact representation of a set of haplotypes than the tree sequence. However, the PBWT does not contain any genealogical data, and therefore contains less information than the tree sequence.</p>
      </sec>
      <sec id="sec008">
        <title>Generating trees</title>
        <p>Coalescence records provide a very compact means of encoding correlated genealogies. Compressed representations of data usually come at the cost of increased decompression effort when we wish to access the information. In contrast, we can recover the marginal trees from a set of coalescence records orders of magnitude more quickly than is possible using existing methods. In this section we define the basic algorithm required to sequentially generate these marginal genealogies.</p>
        <p>For algorithms involving tree sequences it is useful to regard the set of coalescence records as a table and to index the columns independently (see <xref ref-type="supplementary-material" rid="pcbi.1004842.s002">S2 Text</xref> for the table corresponding to <xref ref-type="fig" rid="pcbi.1004842.g004">Fig 4</xref>). Therefore define a tree sequence <italic>T</italic> as a tuple of vectors <italic>T</italic> = (<bold>l</bold>, <bold>r</bold>, <bold>u</bold>, <bold>c</bold>, <bold>t</bold>), such that for each index 1 ≤ <italic>j</italic> ≤ <italic>M</italic>, (<bold>l</bold><sub><italic>j</italic></sub>, <bold>r</bold><sub><italic>j</italic></sub>, <bold>u</bold><sub><italic>j</italic></sub>, <bold>c</bold><sub><italic>j</italic></sub>, <bold>t</bold><sub><italic>j</italic></sub>) corresponds to one coalescence record output by Hudson’s algorithm, and there are <italic>M</italic> records in total. It is also useful to impose an ordering among the children at a node, and so we assert that <bold>c</bold><sub><italic>j</italic>,1</sub> &lt; <bold>c</bold><sub><italic>j</italic>,2</sub> for all 1 ≤ <italic>j</italic> ≤ <italic>M</italic>.</p>
        <p>If we wish to obtain the tree for a given site <italic>x</italic> we simply find the <italic>n</italic> − 1 records that intersect with this point and build the tree by applying these records. We begin by setting <italic>π</italic><sub><italic>j</italic></sub> ← 0 for 1 ≤ <italic>j</italic> ≤ max(<bold>u</bold>), and then set <italic>π</italic><sub><bold>c</bold><sub><italic>j</italic>,1</sub></sub> ← <bold>u</bold><sub><italic>j</italic></sub> and <italic>π</italic><sub><bold>c</bold><sub><italic>j</italic>,2</sub></sub> ← <bold>u</bold><sub><italic>j</italic></sub> for all <italic>j</italic> such that <bold>l</bold><sub><italic>j</italic></sub> ≤ <italic>x</italic> &lt; <bold>r</bold><sub><italic>j</italic></sub>. Spatial indexing structures such as the segment tree [<xref rid="pcbi.1004842.ref081" ref-type="bibr">81</xref>] allow us to find all <italic>k</italic> segments out of a set of <italic>N</italic> that intersect with a given point in <italic>O</italic>(<italic>k</italic> + log<italic> N</italic>) time. Therefore, since the expected number of records is <italic>O</italic>(<italic>n</italic> + <italic>ρ</italic> log<italic> n</italic>) as shown in the previous subsection, the overall complexity of generating a single tree is <italic>O</italic>(<italic>n</italic> + log(<italic>n</italic> + <italic>ρ</italic> log<italic> n</italic>)).</p>
        <p>A common requirement is to sequentially visit all trees in a tree sequence in left-to-right order. One possible way to do this would be to find all of the distinct left coordinates in the <bold>l</bold> vector and apply the process outlined above. However, adjacent trees are highly correlated and share much of their structure, and so this approach would be quite wasteful. A more efficient approach is given in Algorithm T below. For this algorithm we require two ‘index vectors’ <inline-formula id="pcbi.1004842.e002"><alternatives><graphic xlink:href="pcbi.1004842.e002.jpg" id="pcbi.1004842.e002g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M2"><mml:mi mathvariant="script">I</mml:mi></mml:math></alternatives></inline-formula> and <inline-formula id="pcbi.1004842.e003"><alternatives><graphic xlink:href="pcbi.1004842.e003.jpg" id="pcbi.1004842.e003g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M3"><mml:mi mathvariant="script">O</mml:mi></mml:math></alternatives></inline-formula> which give the indexes of the records in the order in which they are inserted and removed, respectively. Records are applied in order of nondecreasing left coordinate and increasing time, and records are removed in nondecreasing order of right coordinate and decreasing time. That is, for every pair of indexes <italic>j</italic> and <italic>k</italic> such that 1 ≤ <italic>j</italic> &lt; <italic>k</italic> ≤ <italic>M</italic> we have either <inline-formula id="pcbi.1004842.e004"><alternatives><graphic xlink:href="pcbi.1004842.e004.jpg" id="pcbi.1004842.e004g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M4"><mml:mrow><mml:msub><mml:mi mathvariant="bold">l</mml:mi><mml:msub><mml:mi mathvariant="script">I</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:msub><mml:mo>&lt;</mml:mo><mml:msub><mml:mi mathvariant="bold">l</mml:mi><mml:msub><mml:mi mathvariant="script">I</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math></alternatives></inline-formula> or <inline-formula id="pcbi.1004842.e005"><alternatives><graphic xlink:href="pcbi.1004842.e005.jpg" id="pcbi.1004842.e005g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M5"><mml:mrow><mml:msub><mml:mi mathvariant="bold">l</mml:mi><mml:msub><mml:mi mathvariant="script">I</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold">l</mml:mi><mml:msub><mml:mi mathvariant="script">I</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math></alternatives></inline-formula> and <inline-formula id="pcbi.1004842.e006"><alternatives><graphic xlink:href="pcbi.1004842.e006.jpg" id="pcbi.1004842.e006g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M6"><mml:mrow><mml:msub><mml:mi mathvariant="bold">t</mml:mi><mml:msub><mml:mi mathvariant="script">I</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:msub><mml:mo>&lt;</mml:mo><mml:msub><mml:mi mathvariant="bold">t</mml:mi><mml:msub><mml:mi mathvariant="script">I</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>; and similarly, either <inline-formula id="pcbi.1004842.e007"><alternatives><graphic xlink:href="pcbi.1004842.e007.jpg" id="pcbi.1004842.e007g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M7"><mml:mrow><mml:msub><mml:mi mathvariant="bold">r</mml:mi><mml:msub><mml:mi mathvariant="script">O</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:msub><mml:mo>&lt;</mml:mo><mml:msub><mml:mi mathvariant="bold">r</mml:mi><mml:msub><mml:mi mathvariant="script">O</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math></alternatives></inline-formula> or <inline-formula id="pcbi.1004842.e008"><alternatives><graphic xlink:href="pcbi.1004842.e008.jpg" id="pcbi.1004842.e008g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M8"><mml:mrow><mml:msub><mml:mi mathvariant="bold">r</mml:mi><mml:msub><mml:mi mathvariant="script">O</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold">r</mml:mi><mml:msub><mml:mi mathvariant="script">O</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math></alternatives></inline-formula> and <inline-formula id="pcbi.1004842.e009"><alternatives><graphic xlink:href="pcbi.1004842.e009.jpg" id="pcbi.1004842.e009g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M9"><mml:mrow><mml:msub><mml:mi mathvariant="bold">t</mml:mi><mml:msub><mml:mi mathvariant="script">O</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:msub><mml:mo>&gt;</mml:mo><mml:msub><mml:mi mathvariant="bold">t</mml:mi><mml:msub><mml:mi mathvariant="script">O</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>. We assume that these index vectors have been pre-calculated below.</p>
        <p><monospace><bold>Algorithm T.</bold> (<italic>Generate trees</italic>). Sequentially visit the sparse trees <italic>π</italic> in a tree sequence <italic>T</italic> = (<bold>l</bold>,<bold>r</bold>,<bold>u</bold>,<bold>c</bold>,<bold>t</bold>) with <italic>M</italic> records</monospace>.</p>
        <p specific-use="line"><monospace><bold>T1.</bold> [Initialisation.] Set <italic>π</italic><sub><italic>j</italic></sub> ← 0 for 1 ≤ <italic>j</italic> ≤ max(<bold>u</bold>). Then set <italic>j</italic> ← 1, <italic>k</italic> ← 1 and <italic>x</italic> ← 0</monospace>.</p>
        <p specific-use="line"><monospace><bold>T2.</bold> [Insert record.] Set <inline-formula id="pcbi.1004842.e010"><alternatives><graphic xlink:href="pcbi.1004842.e010.jpg" id="pcbi.1004842.e010g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M10"><mml:mrow><mml:mi>h</mml:mi><mml:mo>←</mml:mo><mml:msub><mml:mi mathvariant="script">I</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>, <italic>π</italic><sub><bold>c</bold><sub><italic>h</italic>,1</sub></sub> ← <italic>π</italic><sub><bold>c</bold><sub><italic>h</italic>,2</sub></sub> ← <bold>u</bold><sub><italic>h</italic></sub>, and <italic>j</italic> ← <italic>j</italic> + 1. If <italic>j</italic> ≤ <italic>M</italic> and <inline-formula id="pcbi.1004842.e011"><alternatives><graphic xlink:href="pcbi.1004842.e011.jpg" id="pcbi.1004842.e011g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M11"><mml:mrow><mml:msub><mml:mi mathvariant="bold">l</mml:mi><mml:msub><mml:mi mathvariant="script">I</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:msub><mml:mo>=</mml:mo><mml:mi>x</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>, go to T2</monospace>.</p>
        <p specific-use="line"><monospace><bold>T3.</bold> [Visit tree.] Visit the sparse tree <italic>π</italic> starting at site <italic>x</italic>. If <italic>j</italic> &gt; <italic>M</italic> terminate the algorithm. Otherwise, set <inline-formula id="pcbi.1004842.e012"><alternatives><graphic xlink:href="pcbi.1004842.e012.jpg" id="pcbi.1004842.e012g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M12"><mml:mrow><mml:mi>x</mml:mi><mml:mo>←</mml:mo><mml:msub><mml:mi mathvariant="bold">l</mml:mi><mml:msub><mml:mi mathvariant="script">I</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math></alternatives></inline-formula></monospace>.</p>
        <p specific-use="line"><monospace><bold>T4.</bold> [Remove record.] Set <inline-formula id="pcbi.1004842.e013"><alternatives><graphic xlink:href="pcbi.1004842.e013.jpg" id="pcbi.1004842.e013g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M13"><mml:mrow><mml:mi>h</mml:mi><mml:mo>←</mml:mo><mml:msub><mml:mi mathvariant="script">O</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>, <italic>π</italic><sub><bold>c</bold><sub><italic>h</italic>,1</sub></sub> ← <italic>π</italic><sub><bold>c</bold><sub><italic>h</italic>,2</sub></sub> ← 0 and <italic>k</italic> ← <italic>k</italic> + 1. Then, if <inline-formula id="pcbi.1004842.e014"><alternatives><graphic xlink:href="pcbi.1004842.e014.jpg" id="pcbi.1004842.e014g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M14"><mml:mrow><mml:msub><mml:mi mathvariant="bold">r</mml:mi><mml:msub><mml:mi mathvariant="script">O</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mo>=</mml:mo><mml:mi>x</mml:mi></mml:mrow></mml:math></alternatives></inline-formula> go to T4; otherwise, go to T2</monospace>.</p>
        <p>Algorithm T sequentially generates all marginal trees in a tree sequence by first applying records to the sparse tree <italic>π</italic> in step T2 for a given left coordinate. Once this is complete, the tree is made available to client code by ‘visiting’ it [<xref rid="pcbi.1004842.ref048" ref-type="bibr">48</xref>, p.281] in T3. After the user has finished processing the current tree, we prepare to move to the next tree by removing all stale records in T4, and then return to T2. The algorithm is very efficient. Because each record is considered exactly once in step T2 and at most once in step T4 the total time required by the algorithm is <italic>O</italic>(<italic>n</italic> + <italic>ρ</italic> log<italic> n</italic>). To illustrate this efficiency, we consider the time required to iterate over the trees produced by the large example simulation used throughout this section. Reading in the full tree sequence in <monospace>msprime</monospace>’s native HDF5 based format and iterating over all 1.1 million trees using the Python API required approximately 3 seconds. In contrast, using the BioPython [<xref rid="pcbi.1004842.ref067" ref-type="bibr">67</xref>] version 1.64 Newick parser required around 3 seconds <italic>per tree</italic>, leading to an estimated 38 days to iterate over all trees. Similarly, ETE [<xref rid="pcbi.1004842.ref069" ref-type="bibr">69</xref>] version 2.3.9 required 4.5 seconds per tree, and DendroPy [<xref rid="pcbi.1004842.ref068" ref-type="bibr">68</xref>] version 4.0.2 required around 14 seconds per tree. Comparing Python Newick parsers to <monospace>msprime</monospace> may be somewhat misleading, since the majority of <monospace>msprime</monospace>’s tree processing code is written in C. However, APE [<xref rid="pcbi.1004842.ref070" ref-type="bibr">70</xref>] version 3.1, which uses a Newick parser written in C, also required around 7 seconds per tree. Thus, using <monospace>msprime</monospace>’s API we can iterate over this set of trees more than a <italic>million times</italic> faster than any of these alternatives.</p>
        <p>Algorithm T generates only the sparse tree <italic>π</italic> mapping each node to its parent. It is easy to extend this algorithm to include information about the node times, children, start and end coordinates and other information. We have also assumed binary trees here, but it is trivial to extend the algorithm to work with more general trees. When computing statistics across the tree sequence it is often useful to know the specific differences between adjacent trees, as this often allows us to avoid examining the entire tree. This information is directly available in Algorithm T. The tree iteration code in <monospace>msprime</monospace>’s Python API makes all of this information available, facilitating easy tree traversal in both top-down and bottom-up fashion.</p>
      </sec>
      <sec id="sec009">
        <title>Counting leaves</title>
        <p>The previous subsection provides an algorithm to efficiently visit all marginal genealogies in a tree sequence. This algorithm can be easily augmented to maintain summaries of tree properties as we sweep across the sequence. As an example of this, we show how to augment Algorithm T to maintain the counts of the number of leaves from a specific set that are below each internal node. More precisely, given some subset <italic>S</italic> of our sample, we maintain a vector <italic>β</italic> such that for any node <italic>u</italic>, <italic>β</italic><sub><italic>u</italic></sub> is the number of leaves below <italic>u</italic> that belong to the set <italic>S</italic>. This allows us to quickly calculate allele frequencies: since each mutation is associated with a particular node <italic>u</italic>, <italic>β</italic><sub><italic>u</italic></sub>/|<italic>S</italic>| is the frequency of the mutation within <italic>S</italic>. Calculating allele frequencies within specific subsets of the sample has many applications, for example calculating summary statistics such as <italic>F</italic><sub><italic>ST</italic></sub> [<xref rid="pcbi.1004842.ref082" ref-type="bibr">82</xref>], and association tests in genome wide association studies [<xref rid="pcbi.1004842.ref083" ref-type="bibr">83</xref>].</p>
        <p>Suppose we have a tree sequence <italic>T</italic> and we wish to generate the sparse trees <italic>π</italic> as before. We now also wish to generate the vector <italic>β</italic>, such that <italic>β</italic><sub><italic>u</italic></sub> gives the number of leaf nodes in the subtree rooted at <italic>u</italic> that are in the set <italic>S</italic> ⊆ {1, …, <italic>n</italic>}. We assume that the index vectors <inline-formula id="pcbi.1004842.e015"><alternatives><graphic xlink:href="pcbi.1004842.e015.jpg" id="pcbi.1004842.e015g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M15"><mml:mi mathvariant="script">I</mml:mi></mml:math></alternatives></inline-formula> and <inline-formula id="pcbi.1004842.e016"><alternatives><graphic xlink:href="pcbi.1004842.e016.jpg" id="pcbi.1004842.e016g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M16"><mml:mi mathvariant="script">O</mml:mi></mml:math></alternatives></inline-formula> have been precomputed, as before.</p>
        <p><monospace><bold>Algorithm L.</bold> (<italic>Count leaves</italic>). Generate the sparse trees <italic>π</italic> and leaf counts <italic>β</italic> for a tree sequence <italic>T</italic> = (<bold>l</bold>,<bold>r</bold>,<bold>u</bold>,<bold>c</bold>,<bold>t</bold>) with <italic>M</italic> records and set of leaves <italic>S</italic></monospace>.</p>
        <p specific-use="line"><monospace><bold>L1.</bold> [Initialisation.] Set <italic>π</italic><sub><italic>j</italic></sub> ← <italic>β</italic><sub><italic>j</italic></sub> ← 0 for 1 ≤ <italic>j</italic> ≤ max(<bold>u</bold>). Set <italic>β</italic><sub><italic>j</italic></sub> ← 1 for each <italic>j</italic> ∈ <italic>S</italic>. Then set <italic>j</italic> ← 1, <italic>k</italic> ← 1 and <italic>x</italic> ← 0</monospace>.</p>
        <p specific-use="line"><monospace><bold>L2.</bold> [Insert record.] Set <inline-formula id="pcbi.1004842.e017"><alternatives><graphic xlink:href="pcbi.1004842.e017.jpg" id="pcbi.1004842.e017g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M17"><mml:mrow><mml:mi>h</mml:mi><mml:mo>←</mml:mo><mml:msub><mml:mi mathvariant="script">I</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>, <italic>π</italic><sub><bold>c</bold><sub><italic>h</italic>,1</sub></sub> ← <italic>π</italic><sub><bold>c</bold><sub><italic>h</italic>,2</sub></sub> ← <bold>u</bold><sub><italic>h</italic></sub>, <italic>b</italic> ← <italic>β</italic><sub><bold>c</bold><sub><italic>h</italic>,1</sub></sub>+<italic>β</italic><sub><bold>c</bold><sub><italic>h</italic>,2</sub></sub> and <italic>j</italic> ← <italic>j</italic> + 1</monospace>.</p>
        <p specific-use="line"><monospace><bold>L3.</bold> [Increment leaf counts.] Set <italic>v</italic> ← <bold>u</bold><sub><italic>h</italic></sub>. Then, while <italic>v</italic> ≠ 0, set <italic>β</italic><sub><italic>v</italic></sub> ← <italic>β</italic><sub><italic>v</italic></sub> + <italic>b</italic> and <italic>v</italic> ← <italic>π</italic><sub><italic>v</italic></sub>. Afterwards, if <italic>j</italic> ≤ <italic>M</italic> and <inline-formula id="pcbi.1004842.e018"><alternatives><graphic xlink:href="pcbi.1004842.e018.jpg" id="pcbi.1004842.e018g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M18"><mml:mrow><mml:msub><mml:mi mathvariant="bold">l</mml:mi><mml:msub><mml:mi mathvariant="script">I</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:msub><mml:mo>=</mml:mo><mml:mi>x</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>, go to L2</monospace>.</p>
        <p specific-use="line"><monospace><bold>L4.</bold> [Visit tree.] Visit (<italic>π</italic>, <italic>β</italic>). If <italic>j</italic> &gt; <italic>M</italic> terminate the algorithm; otherwise, set <inline-formula id="pcbi.1004842.e019"><alternatives><graphic xlink:href="pcbi.1004842.e019.jpg" id="pcbi.1004842.e019g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M19"><mml:mrow><mml:mi>x</mml:mi><mml:mo>←</mml:mo><mml:msub><mml:mi mathvariant="bold">l</mml:mi><mml:msub><mml:mi mathvariant="script">I</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math></alternatives></inline-formula></monospace>.</p>
        <p specific-use="line"><monospace><bold>L5.</bold> [Remove record.] Set <inline-formula id="pcbi.1004842.e020"><alternatives><graphic xlink:href="pcbi.1004842.e020.jpg" id="pcbi.1004842.e020g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M20"><mml:mrow><mml:mi>h</mml:mi><mml:mo>←</mml:mo><mml:msub><mml:mi mathvariant="script">O</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>, <italic>π</italic><sub><bold>c</bold><sub><italic>h</italic>,1</sub></sub> ← <italic>π</italic><sub><bold>c</bold><sub><italic>h</italic>,2</sub></sub> ← 0, <italic>b</italic> ← <italic>β</italic><sub><bold>c</bold><sub><italic>h</italic>,1</sub></sub>+<italic>β</italic><sub><bold>c</bold><sub><italic>h</italic>,2</sub></sub> and <italic>k</italic> ← <italic>k</italic> + 1</monospace>.</p>
        <p specific-use="line"><monospace><bold>L6.</bold> [Decrement leaf counts.] Set <italic>v</italic> ← <bold>u</bold><sub><italic>h</italic></sub>. Then, while <italic>v</italic> ≠ 0, set <italic>β</italic><sub><italic>v</italic></sub> ← <italic>β</italic><sub><italic>v</italic></sub> − <italic>b</italic> and <italic>v</italic> ← <italic>π</italic><sub><italic>v</italic></sub>. Afterwards, if <inline-formula id="pcbi.1004842.e021"><alternatives><graphic xlink:href="pcbi.1004842.e021.jpg" id="pcbi.1004842.e021g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M21"><mml:mrow><mml:msub><mml:mi mathvariant="bold">r</mml:mi><mml:msub><mml:mi mathvariant="script">O</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mo>=</mml:mo><mml:mi>x</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>, go to L5; otherwise, go to L2</monospace>.</p>
        <p>Algorithm L works in the same manner as Algorithm T: for each tree transition, we remove the stale records that no longer apply to the genomic interval currently under consideration, and apply all new records that begin at location <italic>x</italic>. We update the sparse tree <italic>π</italic> by applying a record in step L2, and then update the leaf count <italic>β</italic> to account for this new node assignment. In step L3 we propagate the corresponding leaf count gain up to the root, before returning to L2 if necessary. Once we have applied all of the inbound records we then visit the tree by making <italic>π</italic> and <italic>β</italic> available to the user in L4. Then, if any more trees remain, we move on by removing the outbound records in steps L5 and L6, updating <italic>β</italic> to account for the corresponding loss in leaf counts. The correctness of the algorithm depends on the ordering of the index vectors <inline-formula id="pcbi.1004842.e022"><alternatives><graphic xlink:href="pcbi.1004842.e022.jpg" id="pcbi.1004842.e022g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M22"><mml:mi mathvariant="script">I</mml:mi></mml:math></alternatives></inline-formula> and <inline-formula id="pcbi.1004842.e023"><alternatives><graphic xlink:href="pcbi.1004842.e023.jpg" id="pcbi.1004842.e023g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M23"><mml:mi mathvariant="script">O</mml:mi></mml:math></alternatives></inline-formula>. Records are always inserted in increasing order of time, and always removed in decreasing order of time within a tree transition. Therefore, for any record in which subtrees rooted at <italic>c</italic><sub>1</sub> and <italic>c</italic><sub>2</sub> become the children of <italic>u</italic>, we are guaranteed that these subtrees are complete and that <italic>β</italic><sub><italic>c</italic><sub>1</sub></sub> and <italic>β</italic><sub><italic>c</italic><sub>2</sub></sub> are correct. Removing outbound records in reverse order of time similarly guarantees that the leaf counts within the disconnected subtrees that we create are maintained correctly.</p>
        <p>Algorithm L clearly examines each record at most once in steps L2 and L5. Steps L3 and L6 contain loops to propagate leaf counts up the tree, and are therefore not constant time operations. Since coalescent genealogies are asymptotically balanced [<xref rid="pcbi.1004842.ref084" ref-type="bibr">84</xref>], the expected height of a tree (in terms of the number of nodes) is log<sub>2</sub>
<italic>n</italic>. Therefore, the cost of steps L3 and L6 is <italic>O</italic>(log<sub>2</sub>
<italic>n</italic>) per record, leading to a log<sub>2</sub>
<italic>n</italic> extra cost over Algorithm T. In practical terms, this extra cost is negligible. For example, <monospace>msprime</monospace> automatically maintains counts for all leaves (and optionally can maintain counts for specific subsets) when doing all tree transitions. The 3 second time quoted above required to iterate over all 1.1 million trees in the large simulation example includes the cost of maintaining counts for all 10<sup>5</sup> leaves at all internal nodes. To demonstrate this efficiency, we ran a simple genome wide association test, where we split the sample into 50,000 cases and controls. One of the most powerful and popular applications for running such association tests is <monospace>plink</monospace> [<xref rid="pcbi.1004842.ref085" ref-type="bibr">85</xref>]. After converting the simulated data to a 29G BED file, the stable version of <monospace>plink</monospace> (1.07) required 176 minutes to run a simple association test. The development version of <monospace>plink</monospace> (1.9) required 54 seconds. Using <monospace>msprime</monospace>’s Python API, the same odds-ratio test required around 10 seconds.</p>
      </sec>
    </sec>
  </sec>
  <sec id="sec010">
    <title>Results and Discussion</title>
    <p>The primary contribution of this paper is to introduce a new encoding for the correlated trees resulting from simulations of the coalescent with recombination. This encoding follows on from previous work in which trees are encoded as integer vectors [<xref rid="pcbi.1004842.ref049" ref-type="bibr">49</xref>, <xref rid="pcbi.1004842.ref050" ref-type="bibr">50</xref>], but makes the crucial change that tree vectors are sparse. Using this encoding, the effects of each coalescence event are stored as simple fixed-size records that provide sufficient information to recover all marginal genealogies after the simulation has completed. This approach leads to very large gains in simulation performance over classical simulators such as <monospace>ms</monospace>, so that the exact simulation of genealogies for the coalescent with recombination over chromosome scales is feasible for the first time. We have presented an implementation based on the sparse tree encoding called <monospace>msprime</monospace>, which is faster than all other simulators for large sample sizes. This simulator supports the full discrete population structure and demographic event model provided by <monospace>ms</monospace> along with variable recombination rates. We plan to include populations evolving in continuous space [<xref rid="pcbi.1004842.ref086" ref-type="bibr">86</xref>–<xref rid="pcbi.1004842.ref088" ref-type="bibr">88</xref>] and gene conversion [<xref rid="pcbi.1004842.ref089" ref-type="bibr">89</xref>] in subsequent releases.</p>
    <p>Coalescence records also lead to an extremely compact storage format that is several orders of magnitude smaller than the most compact method currently available. Despite this very high level of compression, accessing the genealogical data is very efficient. In an example with 100,000 samples, we saw a roughly 40,000-fold reduction in file size over the Newick tree encoding, and a greater than million-fold decrease in the time required to iterate over the genealogies compared to several popular libraries. This efficiency is gained through very simple algorithms that we have stated rigorously and unambiguously, and also analysed in terms of their computational complexity. Being able to process such large sample sizes is not an idle curiosity; on the contrary, we have a pressing need to work with such datasets. We envisage three immediate uses for our work.</p>
    <p>Firstly, sequencing projects are being conducted on an unprecedented scale [<xref rid="pcbi.1004842.ref090" ref-type="bibr">90</xref>–<xref rid="pcbi.1004842.ref095" ref-type="bibr">95</xref>], and the storage and analysis of these data pose serious computational challenges. Sophisticated new methods are being developed to organise and analyse information on this immense scale [<xref rid="pcbi.1004842.ref053" ref-type="bibr">53</xref>–<xref rid="pcbi.1004842.ref055" ref-type="bibr">55</xref>]. Developers have struggled to generate simulated data on a similar scale [<xref rid="pcbi.1004842.ref053" ref-type="bibr">53</xref>, <xref rid="pcbi.1004842.ref054" ref-type="bibr">54</xref>], as present day simulators perform poorly on these huge sample sizes. Using <monospace>msprime</monospace>, the time required to generate genome scale data for hundreds of thousands of samples is reduced from weeks to minutes.</p>
    <p>Secondly, prospective studies such as UK Biobank [<xref rid="pcbi.1004842.ref096" ref-type="bibr">96</xref>, <xref rid="pcbi.1004842.ref097" ref-type="bibr">97</xref>] are collecting genetic and high-dimensional phenotypic data for hundreds of thousands of samples. The key statistical method to interrogate such data is the genome wide association study (GWAS) [<xref rid="pcbi.1004842.ref098" ref-type="bibr">98</xref>], and large sample size has been identified as the single most important factor in determining the power of these studies [<xref rid="pcbi.1004842.ref083" ref-type="bibr">83</xref>]. Simulation plays a key role in GWAS, and typically proceeds by superimposing the disease model of interest on haplotypes obtained via various methods [<xref rid="pcbi.1004842.ref099" ref-type="bibr">99</xref>]. Because the accurate modelling of linkage disequilibrium is essential in disease genetics [<xref rid="pcbi.1004842.ref100" ref-type="bibr">100</xref>], recombination must be incorporated. Resampling methods [<xref rid="pcbi.1004842.ref083" ref-type="bibr">83</xref>, <xref rid="pcbi.1004842.ref101" ref-type="bibr">101</xref>–<xref rid="pcbi.1004842.ref103" ref-type="bibr">103</xref>] generate simulated haplotypes based on an existing reference panel, and provide a good match to observed linkage patterns. However, there is some bias associated with this process, and there are statistical difficulties when the size of the sample required is larger than the reference panel. Other methods obtain simulated haplotypes from population genetics models via forwards-in-time [<xref rid="pcbi.1004842.ref104" ref-type="bibr">104</xref>, <xref rid="pcbi.1004842.ref105" ref-type="bibr">105</xref>] or coalescent [<xref rid="pcbi.1004842.ref106" ref-type="bibr">106</xref>, <xref rid="pcbi.1004842.ref107" ref-type="bibr">107</xref>] simulations. None of these methods can efficiently handle the huge sample sizes required, however. A simulator for high dimensional phenotype data based on <monospace>msprime</monospace> could alleviate these performance issues and be a key application for the library.</p>
    <p>Thirdly, today’s large sample sizes provide us with an unprecedented opportunity to understand the history and geographic structure of our species. Aside from its intrinsic interest, correctly accounting for population stratification is critical for the interpretation of association studies [<xref rid="pcbi.1004842.ref108" ref-type="bibr">108</xref>, <xref rid="pcbi.1004842.ref109" ref-type="bibr">109</xref>], particularly for rare variants [<xref rid="pcbi.1004842.ref110" ref-type="bibr">110</xref>, <xref rid="pcbi.1004842.ref111" ref-type="bibr">111</xref>]. Researchers are seeking to understand fine scale population structure using methods based on principal component analysis [<xref rid="pcbi.1004842.ref112" ref-type="bibr">112</xref>], admixture fractions [<xref rid="pcbi.1004842.ref113" ref-type="bibr">113</xref>–<xref rid="pcbi.1004842.ref115" ref-type="bibr">115</xref>], length of haplotype blocks [<xref rid="pcbi.1004842.ref116" ref-type="bibr">116</xref>–<xref rid="pcbi.1004842.ref118" ref-type="bibr">118</xref>] and allele frequencies [<xref rid="pcbi.1004842.ref119" ref-type="bibr">119</xref>]. To date, it has been challenging to assess the accuracy of these methods, as simulations struggle to match the required sequence lengths and sample sizes. Furthermore, methods based on the SMC approximation [<xref rid="pcbi.1004842.ref017" ref-type="bibr">17</xref>, <xref rid="pcbi.1004842.ref018" ref-type="bibr">18</xref>] have been tested using SMC simulations out of necessity, making it difficult to assess the impact of the approximation on accuracy. Simulations of the exact coalescent with recombination at chromosome scales for large sample sizes and arbitrary demographies will be an invaluable tool for developers of such methods.</p>
    <p>As we have demonstrated, the tree sequence structure leads to very efficient algorithms, and allows us to encode simulated data very compactly. We would also wish to encode biological data in this structure so that we can apply these algorithms to analyse real data. However, to do this we must estimate a tree sequence from data, which is a non-trivial task. Nonetheless, there has been much work in this area [<xref rid="pcbi.1004842.ref120" ref-type="bibr">120</xref>] with several heuristic [<xref rid="pcbi.1004842.ref121" ref-type="bibr">121</xref>] and more principled approaches that may be adopted [<xref rid="pcbi.1004842.ref019" ref-type="bibr">19</xref>, <xref rid="pcbi.1004842.ref122" ref-type="bibr">122</xref>]. Using the PBWT [<xref rid="pcbi.1004842.ref053" ref-type="bibr">53</xref>] to find long haplotypes (which will usually correspond to long records) seems like a particularly promising avenue.</p>
    <p>Finally, an interesting issue arises when we consider the problem of inferring a tree sequence from data. Suppose we have observed a set of haplotypes resulting from a coalescent simulation with infinite sites mutations occurring at a very high rate. Under these conditions, the underlying tree sequence can be recovered exactly from the data, but the corresponding ARG (i.e., the specific realisation of the ARG that was traversed by Hudson’s algorithm) cannot. For example, a recombination may have occurred during the simulation that was immediately followed by a common ancestor event involving the same lineages. These nodes in the ARG can have no effect on the data, and are therefore unobservable. To put this in another way, there is no observable information in an ARG that is not in a tree sequence. Given this representational sufficiency and the storage and processing efficiencies demonstrated in this article, we would argue that a tree sequence is a more natural and powerful representation of observed genetic variation than an ARG.</p>
  </sec>
  <sec sec-type="supplementary-material" id="sec011">
    <title>Supporting Information</title>
    <supplementary-material content-type="local-data" id="pcbi.1004842.s001">
      <label>S1 Text</label>
      <caption>
        <title>Detailed listing of Hudson’s algorithm.</title>
        <p>(PDF)</p>
      </caption>
      <media xlink:href="pcbi.1004842.s001.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pcbi.1004842.s002">
      <label>S2 Text</label>
      <caption>
        <title>Illustration of Hudson’s algorithm.</title>
        <p>(PDF)</p>
      </caption>
      <media xlink:href="pcbi.1004842.s002.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pcbi.1004842.s003">
      <label>S1 Fig</label>
      <caption>
        <title>Comparisons of the running times for various coalescent simulators to generate mutations for varying sequence length and sample size.</title>
        <p>We use a scaled mutation rate of <italic>θ</italic> = 4<italic>N</italic><sub><italic>e</italic></sub><italic>μ</italic> = 0.0004.</p>
        <p>(PDF)</p>
      </caption>
      <media xlink:href="pcbi.1004842.s003.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pcbi.1004842.s004">
      <label>S2 Fig</label>
      <caption>
        <title>The corresponding maximum memory usages for the simulators in <xref ref-type="supplementary-material" rid="pcbi.1004842.s003">S1 Fig</xref>.</title>
        <p>(PDF)</p>
      </caption>
      <media xlink:href="pcbi.1004842.s004.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pcbi.1004842.s005">
      <label>S3 Fig</label>
      <caption>
        <title>The mean number of recombination breakpoints for the simulations in <xref ref-type="fig" rid="pcbi.1004842.g003">Fig 3</xref> along with the theoretical prediction (black line).</title>
        <p>This plot shows that the number of recombination events within ancestral material for these simulations is identical for all simulators and agrees very well with the theoretical value of <italic>ρH</italic><sub><italic>n</italic> − 1</sub>, where <italic>H</italic><sub><italic>n</italic></sub> is the <italic>n</italic>th Harmonic number.</p>
        <p>(PDF)</p>
      </caption>
      <media xlink:href="pcbi.1004842.s005.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pcbi.1004842.s006">
      <label>S4 Fig</label>
      <caption>
        <title>Comparison of simulation times with <monospace>msprime</monospace> and <monospace>scrm</monospace> for a sample size of <italic>n</italic> = 20 with increasing sequence length.</title>
        <p>Several different approximation levels are shown for <monospace>scrm</monospace> using the <monospace>-l</monospace> option. The <monospace>-l 500r</monospace> option is described as a conservative value giving very good accuracy, and <monospace>-l 100r</monospace> is recommended as a good compromise between running time and accuracy.</p>
        <p>(PDF)</p>
      </caption>
      <media xlink:href="pcbi.1004842.s006.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack>
    <p>We would like to thank Richard Durbin for helpful discussions and insights.</p>
  </ack>
  <ref-list>
    <title>References</title>
    <ref id="pcbi.1004842.ref001">
      <label>1</label>
      <mixed-citation publication-type="journal"><name><surname>Kingman</surname><given-names>JFC</given-names></name>. <article-title>The coalescent</article-title>. <source>Stoch Proc Appl</source>. <year>1982</year>;<volume>13</volume>(<issue>3</issue>):<fpage>235</fpage>–<lpage>248</lpage>. <pub-id pub-id-type="doi">10.1016/0304-4149(82)90011-4</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref002">
      <label>2</label>
      <mixed-citation publication-type="journal"><name><surname>Hudson</surname><given-names>RR</given-names></name>. <article-title>Testing the constant-rate neutral allele model with protein sequence data</article-title>. <source>Evolution</source>. <year>1983</year>;<volume>37</volume>(<issue>1</issue>):<fpage>203</fpage>–<lpage>217</lpage>. <pub-id pub-id-type="doi">10.2307/2408186</pub-id><pub-id pub-id-type="pmid">28568026</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref003">
      <label>3</label>
      <mixed-citation publication-type="book"><name><surname>Wakeley</surname><given-names>J</given-names></name>. <source>Coalescent theory: an introduction</source>. <publisher-loc>Englewood, Colorado</publisher-loc>: <publisher-name>Roberts and Company</publisher-name>; <year>2008</year>.</mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref004">
      <label>4</label>
      <mixed-citation publication-type="journal"><name><surname>Hudson</surname><given-names>RR</given-names></name>. <article-title>Gene genealogies and the coalescent process</article-title>. <source>Oxford Surveys in Evolutionary Biology</source>. <year>1990</year>;<volume>7</volume>:<fpage>1</fpage>–<lpage>44</lpage>.</mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref005">
      <label>5</label>
      <mixed-citation publication-type="journal"><name><surname>Hudson</surname><given-names>RR</given-names></name>. <article-title>Properties of a neutral allele model with intragenic recombination</article-title>. <source>Theor Popul Biol</source>. <year>1983</year>;<volume>23</volume>:<fpage>183</fpage>–<lpage>201</lpage>. <pub-id pub-id-type="doi">10.1016/0040-5809(83)90013-8</pub-id><?supplied-pmid 6612631?><pub-id pub-id-type="pmid">6612631</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref006">
      <label>6</label>
      <mixed-citation publication-type="journal"><name><surname>Hudson</surname><given-names>RR</given-names></name>, <name><surname>Kaplan</surname><given-names>N</given-names></name>. <article-title>Statistical properties of the number of recombination events in the history of a sample of DNA sequences</article-title>. <source>Genetics</source>. <year>1985</year>;<volume>111</volume>(<issue>1</issue>):<fpage>147</fpage>–<lpage>164</lpage>. <?supplied-pmid 4029609?><pub-id pub-id-type="pmid">4029609</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref007">
      <label>7</label>
      <mixed-citation publication-type="journal"><name><surname>Kaplan</surname><given-names>N</given-names></name>, <name><surname>Hudson</surname><given-names>RR</given-names></name>. <article-title>The use of sample genealogies for studying a selectively neutral <italic>m</italic>-loci model with recombination</article-title>. <source>Theor Popul Biol</source>. <year>1985</year>;<volume>28</volume>:<fpage>382</fpage>–<lpage>396</lpage>. <pub-id pub-id-type="doi">10.1016/0040-5809(85)90036-X</pub-id><?supplied-pmid 4071443?><pub-id pub-id-type="pmid">4071443</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref008">
      <label>8</label>
      <mixed-citation publication-type="other">Griffiths RC. The two-locus ancestral graph. In: Selected Proceedings of the Sheffield Symposium on Applied Probability. vol. 18; 1991. p. 100–117.</mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref009">
      <label>9</label>
      <mixed-citation publication-type="book"><name><surname>Griffiths</surname><given-names>RC</given-names></name>, <name><surname>Marjoram</surname><given-names>P</given-names></name>. <chapter-title>An ancestral recombination graph</chapter-title> In: <name><surname>Donnelly</surname><given-names>P</given-names></name>, <name><surname>Tavaré</surname><given-names>S</given-names></name>, editors. <source>Progress in Population Genetics and Human Evolution, IMA Volumes in Mathematics and its Applications</source>. <volume>vol. 87</volume>
<publisher-loc>Berlin</publisher-loc>: <publisher-name>Springer-Verlag</publisher-name>; <year>1997</year> p. <fpage>257</fpage>–<lpage>270</lpage>.</mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref010">
      <label>10</label>
      <mixed-citation publication-type="journal"><name><surname>Ethier</surname><given-names>SN</given-names></name>, <name><surname>Griffiths</surname><given-names>RC</given-names></name>. <article-title>On the two-locus sampling distribution</article-title>. <source>J Math Biol</source>. <year>1990</year>;<volume>29</volume>:<fpage>131</fpage>–<lpage>159</lpage>. <pub-id pub-id-type="doi">10.1007/BF00168175</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref011">
      <label>11</label>
      <mixed-citation publication-type="journal"><name><surname>Hudson</surname><given-names>RR</given-names></name>. <article-title>Generating samples under a Wright-Fisher neutral model of genetic variation</article-title>. <source>Bioinformatics</source>. <year>2002</year>;<volume>18</volume>(<issue>2</issue>):<fpage>337</fpage>–<lpage>338</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/18.2.337</pub-id><?supplied-pmid 11847089?><pub-id pub-id-type="pmid">11847089</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref012">
      <label>12</label>
      <mixed-citation publication-type="journal"><name><surname>McVean</surname><given-names>GAT</given-names></name>, <name><surname>Cardin</surname><given-names>NJ</given-names></name>. <article-title>Approximating the coalescent with recombination</article-title>. <source>Philos Trans R Soc Lond B Biol Sci</source>. <year>2005</year>;<volume>360</volume>:<fpage>1387</fpage>–<lpage>1393</lpage>. <pub-id pub-id-type="doi">10.1098/rstb.2005.1673</pub-id><?supplied-pmid 16048782?><pub-id pub-id-type="pmid">16048782</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref013">
      <label>13</label>
      <mixed-citation publication-type="journal"><name><surname>Marjoram</surname><given-names>P</given-names></name>, <name><surname>Wall</surname><given-names>JD</given-names></name>. <article-title>Fast “coalescent” simulation</article-title>. <source>BMC Genet</source>. <year>2006</year>;<volume>7</volume>:<fpage>16</fpage><pub-id pub-id-type="doi">10.1186/1471-2156-7-16</pub-id><?supplied-pmid 16539698?><pub-id pub-id-type="pmid">16539698</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref014">
      <label>14</label>
      <mixed-citation publication-type="journal"><name><surname>Chen</surname><given-names>GK</given-names></name>, <name><surname>Marjoram</surname><given-names>P</given-names></name>, <name><surname>Wall</surname><given-names>JD</given-names></name>. <article-title>Fast and flexible simulation of DNA sequence data</article-title>. <source>Genome Res</source>. <year>2009</year>;<volume>19</volume>:<fpage>136</fpage>–<lpage>142</lpage>. <pub-id pub-id-type="doi">10.1101/gr.083634.108</pub-id><?supplied-pmid 19029539?><pub-id pub-id-type="pmid">19029539</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref015">
      <label>15</label>
      <mixed-citation publication-type="journal"><name><surname>Excoffier</surname><given-names>L</given-names></name>, <name><surname>Foll</surname><given-names>M</given-names></name>. <article-title>fastsimcoal: a continuous-time coalescent simulator of genomic diversity under arbitrarily complex evolutionary scenarios</article-title>. <source>Bioinformatics</source>. <year>2011</year>;<volume>27</volume>(<issue>9</issue>):<fpage>1332</fpage>–<lpage>1334</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btr124</pub-id><?supplied-pmid 21398675?><pub-id pub-id-type="pmid">21398675</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref016">
      <label>16</label>
      <mixed-citation publication-type="journal"><name><surname>Staab</surname><given-names>PR</given-names></name>, <name><surname>Zhu</surname><given-names>S</given-names></name>, <name><surname>Metzler</surname><given-names>D</given-names></name>, <name><surname>Lunter</surname><given-names>G</given-names></name>. <article-title>scrm: efficiently simulating long sequences using the approximated coalescent with recombination</article-title>. <source>Bioinformatics</source>. <year>2014</year>;<volume>31</volume>(<issue>10</issue>):<fpage>1680</fpage>–<lpage>1682</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btu861</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref017">
      <label>17</label>
      <mixed-citation publication-type="journal"><name><surname>Li</surname><given-names>H</given-names></name>, <name><surname>Durbin</surname><given-names>R</given-names></name>. <article-title>Inference of human population history from individual whole-genome sequences</article-title>. <source>Nature</source>. <year>2011</year>;<volume>475</volume>:<fpage>493</fpage>–<lpage>496</lpage>. <pub-id pub-id-type="doi">10.1038/nature10231</pub-id><?supplied-pmid 21753753?><pub-id pub-id-type="pmid">21753753</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref018">
      <label>18</label>
      <mixed-citation publication-type="journal"><name><surname>Schiffels</surname><given-names>S</given-names></name>, <name><surname>Durbin</surname><given-names>R</given-names></name>. <article-title>Inferring human population size and separation history from multiple genome sequences</article-title>. <source>Nat Genet</source>. <year>2014</year>;<volume>46</volume>:<fpage>919</fpage>–<lpage>925</lpage>. <pub-id pub-id-type="doi">10.1038/ng.3015</pub-id><?supplied-pmid 24952747?><pub-id pub-id-type="pmid">24952747</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref019">
      <label>19</label>
      <mixed-citation publication-type="journal"><name><surname>Rasmussen</surname><given-names>MD</given-names></name>, <name><surname>Hubisz</surname><given-names>MJ</given-names></name>, <name><surname>Gronau</surname><given-names>I</given-names></name>, <name><surname>Siepel</surname><given-names>A</given-names></name>. <article-title>Genome-wide inference of ancestral recombination graphs</article-title>. <source>PLoS Genet</source>. <year>2014</year>;<volume>10</volume>(<issue>5</issue>):<fpage>e1004342</fpage><pub-id pub-id-type="doi">10.1371/journal.pgen.1004342</pub-id><?supplied-pmid 24831947?><pub-id pub-id-type="pmid">24831947</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref020">
      <label>20</label>
      <mixed-citation publication-type="journal"><name><surname>Liang</surname><given-names>M</given-names></name>, <name><surname>Nielsen</surname><given-names>R</given-names></name>. <article-title>The lengths of admixture tracts</article-title>. <source>Genetics</source>. <year>2014</year>;<volume>197</volume>:<fpage>953</fpage>–<lpage>967</lpage>. <pub-id pub-id-type="doi">10.1534/genetics.114.162362</pub-id><?supplied-pmid 24770332?><pub-id pub-id-type="pmid">24770332</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref021">
      <label>21</label>
      <mixed-citation publication-type="journal"><name><surname>Eriksson</surname><given-names>A</given-names></name>, <name><surname>Mahjani</surname><given-names>B</given-names></name>, <name><surname>Mehlig</surname><given-names>B</given-names></name>. <article-title>Sequential Markov coalescent algorithms for population models with demographic structure</article-title>. <source>Theor Popul Biol</source>. <year>2009</year>;<volume>76</volume>(<issue>2</issue>):<fpage>84</fpage>–<lpage>91</lpage>. <pub-id pub-id-type="doi">10.1016/j.tpb.2009.05.002</pub-id><?supplied-pmid 19433100?><pub-id pub-id-type="pmid">19433100</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref022">
      <label>22</label>
      <mixed-citation publication-type="journal"><name><surname>Arenas</surname><given-names>M</given-names></name>, <name><surname>Posada</surname><given-names>D</given-names></name>. <article-title>Coalescent simulation of intracodon recombination</article-title>. <source>Genetics</source>. <year>2010</year>;<volume>184</volume>(<issue>2</issue>):<fpage>429</fpage>–<lpage>437</lpage>. <pub-id pub-id-type="doi">10.1534/genetics.109.109736</pub-id><?supplied-pmid 19933876?><pub-id pub-id-type="pmid">19933876</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref023">
      <label>23</label>
      <mixed-citation publication-type="journal"><name><surname>Peischl</surname><given-names>S</given-names></name>, <name><surname>Koch</surname><given-names>E</given-names></name>, <name><surname>Guerrero</surname><given-names>R</given-names></name>, <name><surname>Kirkpatrick</surname><given-names>M</given-names></name>. <article-title>A sequential coalescent algorithm for chromosomal inversions</article-title>. <source>Heredity</source>. <year>2013</year>;<volume>111</volume>:<fpage>200</fpage>–<lpage>209</lpage>. <pub-id pub-id-type="doi">10.1038/hdy.2013.38</pub-id><?supplied-pmid 23632894?><pub-id pub-id-type="pmid">23632894</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref024">
      <label>24</label>
      <mixed-citation publication-type="journal"><name><surname>Wiuf</surname><given-names>C</given-names></name>, <name><surname>Hein</surname><given-names>J</given-names></name>. <article-title>Recombination as a point process along sequences</article-title>. <source>Theor Popul Biol</source>. <year>1999</year>;<volume>55</volume>(<issue>3</issue>):<fpage>248</fpage>–<lpage>259</lpage>. <pub-id pub-id-type="doi">10.1006/tpbi.1998.1403</pub-id><?supplied-pmid 10366550?><pub-id pub-id-type="pmid">10366550</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref025">
      <label>25</label>
      <mixed-citation publication-type="journal"><name><surname>Wakeley</surname><given-names>J</given-names></name>, <name><surname>Takahashi</surname><given-names>T</given-names></name>. <article-title>Gene genealogies when the sample size exceeds the effective size of the population</article-title>. <source>Mol Biol Evol</source>. <year>2003</year>;<volume>20</volume>(<issue>2</issue>):<fpage>208</fpage>–<lpage>213</lpage>. <pub-id pub-id-type="doi">10.1093/molbev/msg024</pub-id><?supplied-pmid 12598687?><pub-id pub-id-type="pmid">12598687</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref026">
      <label>26</label>
      <mixed-citation publication-type="journal"><name><surname>Maruvka</surname><given-names>YE</given-names></name>, <name><surname>Shnerb</surname><given-names>NM</given-names></name>, <name><surname>Bar-Yam</surname><given-names>Y</given-names></name>, <name><surname>Wakeley</surname><given-names>J</given-names></name>. <article-title>Recovering population parameters from a single gene genealogy: an unbiased estimator of the growth rate</article-title>. <source>Mol Biol Evol</source>. <year>2011</year>;<volume>28</volume>(<issue>5</issue>):<fpage>1617</fpage>–<lpage>1631</lpage>. <pub-id pub-id-type="doi">10.1093/molbev/msq331</pub-id><?supplied-pmid 21172828?><pub-id pub-id-type="pmid">21172828</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref027">
      <label>27</label>
      <mixed-citation publication-type="journal"><name><surname>Bhaskar</surname><given-names>A</given-names></name>, <name><surname>Clark</surname><given-names>AG</given-names></name>, <name><surname>Song</surname><given-names>YS</given-names></name>. <article-title>Distortion of genealogical properties when the sample is very large</article-title>. <source>Proc Natl Acad Sci U S A</source>. <year>2014</year>;<volume>111</volume>(<issue>6</issue>):<fpage>2385</fpage>–<lpage>2390</lpage>. <pub-id pub-id-type="doi">10.1073/pnas.1322709111</pub-id><?supplied-pmid 24469801?><pub-id pub-id-type="pmid">24469801</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref028">
      <label>28</label>
      <mixed-citation publication-type="journal"><name><surname>Excoffier</surname><given-names>L</given-names></name>, <name><surname>Novembre</surname><given-names>J</given-names></name>, <name><surname>Schneider</surname><given-names>S</given-names></name>. <article-title>SIMCOAL: a general coalescent program for the simulation of molecular data in interconnected populations with arbitrary demography</article-title>. <source>J Hered</source>. <year>2000</year>;<volume>91</volume>(<issue>6</issue>):<fpage>506</fpage>–<lpage>509</lpage>. <pub-id pub-id-type="doi">10.1093/jhered/91.6.506</pub-id><?supplied-pmid 11218093?><pub-id pub-id-type="pmid">11218093</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref029">
      <label>29</label>
      <mixed-citation publication-type="journal"><name><surname>Laval</surname><given-names>G</given-names></name>, <name><surname>Excoffier</surname><given-names>L</given-names></name>. <article-title>SIMCOAL 2.0: a program to simulate genomic diversity over large recombining regions in a subdivided population with a complex history</article-title>. <source>Bioinformatics</source>. <year>2004</year>;<volume>20</volume>(<issue>15</issue>):<fpage>2485</fpage>–<lpage>2487</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/bth264</pub-id><?supplied-pmid 15117750?><pub-id pub-id-type="pmid">15117750</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref030">
      <label>30</label>
      <mixed-citation publication-type="journal"><name><surname>Anderson</surname><given-names>CN</given-names></name>, <name><surname>Ramakrishnan</surname><given-names>U</given-names></name>, <name><surname>Chan</surname><given-names>YL</given-names></name>, <name><surname>Hadly</surname><given-names>EA</given-names></name>. <article-title>Serial SimCoal: a population genetics model for data from multiple populations and points in time</article-title>. <source>Bioinformatics</source>. <year>2005</year>;<volume>21</volume>(<issue>8</issue>):<fpage>1733</fpage>–<lpage>1734</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/bti154</pub-id><?supplied-pmid 15564305?><pub-id pub-id-type="pmid">15564305</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref031">
      <label>31</label>
      <mixed-citation publication-type="journal"><name><surname>Liang</surname><given-names>L</given-names></name>, <name><surname>Zöllner</surname><given-names>S</given-names></name>, <name><surname>Abecasis</surname><given-names>GR</given-names></name>. <article-title>GENOME: a rapid coalescent-based whole genome simulator</article-title>. <source>Bioinformatics</source>. <year>2007</year>;<volume>23</volume>(<issue>12</issue>):<fpage>1565</fpage>–<lpage>1567</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btm138</pub-id><?supplied-pmid 17459963?><pub-id pub-id-type="pmid">17459963</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref032">
      <label>32</label>
      <mixed-citation publication-type="journal"><name><surname>Spencer</surname><given-names>CC</given-names></name>, <name><surname>Coop</surname><given-names>G</given-names></name>. <article-title>SelSim: a program to simulate population genetic data with natural selection and recombination</article-title>. <source>Bioinformatics</source>. <year>2004</year>;<volume>20</volume>(<issue>18</issue>):<fpage>3673</fpage>–<lpage>3675</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/bth417</pub-id><?supplied-pmid 15271777?><pub-id pub-id-type="pmid">15271777</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref033">
      <label>33</label>
      <mixed-citation publication-type="journal"><name><surname>Teshima</surname><given-names>KM</given-names></name>, <name><surname>Innan</surname><given-names>H</given-names></name>. <article-title>mbs: modifying Hudson’s ms software to generate samples of DNA sequences with a biallelic site under selection</article-title>. <source>BMC Bioinformatics</source>. <year>2009</year>;<volume>10</volume>(<issue>1</issue>):<fpage>166</fpage><pub-id pub-id-type="doi">10.1186/1471-2105-10-166</pub-id><?supplied-pmid 19480708?><pub-id pub-id-type="pmid">19480708</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref034">
      <label>34</label>
      <mixed-citation publication-type="journal"><name><surname>Ewing</surname><given-names>G</given-names></name>, <name><surname>Hermisson</surname><given-names>J</given-names></name>. <article-title>MSMS: A coalescent simulation program including recombination, demographic structure, and selection at a single locus</article-title>. <source>Bioinformatics</source>. <year>2010</year>;<volume>26</volume>(<issue>16</issue>):<fpage>2064</fpage>–<lpage>2065</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btq322</pub-id><?supplied-pmid 20591904?><pub-id pub-id-type="pmid">20591904</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref035">
      <label>35</label>
      <mixed-citation publication-type="journal"><name><surname>Shlyakhter</surname><given-names>I</given-names></name>, <name><surname>Sabeti</surname><given-names>PC</given-names></name>, <name><surname>Schaffner</surname><given-names>SF</given-names></name>. <article-title>Cosi2: an efficient simulator of exact and approximate coalescent with selection</article-title>. <source>Bioinformatics</source>. <year>2014</year>;<volume>30</volume>(<issue>23</issue>):<fpage>3427</fpage>–<lpage>3429</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btu562</pub-id><?supplied-pmid 25150247?><pub-id pub-id-type="pmid">25150247</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref036">
      <label>36</label>
      <mixed-citation publication-type="journal"><name><surname>Hellenthal</surname><given-names>G</given-names></name>, <name><surname>Stephens</surname><given-names>M</given-names></name>. <article-title>msHOT: modifying Hudson’s ms simulator to incorporate crossover and gene conversion hotspots</article-title>. <source>Bioinformatics</source>. <year>2007</year>;<volume>23</volume>(<issue>4</issue>):<fpage>520</fpage>–<lpage>521</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btl622</pub-id><?supplied-pmid 17150995?><pub-id pub-id-type="pmid">17150995</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref037">
      <label>37</label>
      <mixed-citation publication-type="journal"><name><surname>Arenas</surname><given-names>M</given-names></name>, <name><surname>Posada</surname><given-names>D</given-names></name>. <article-title>Recodon: coalescent simulation of coding DNA sequences with recombination, migration and demography</article-title>. <source>BMC Bioinformatics</source>. <year>2007</year>;<volume>8</volume>(<issue>1</issue>):<fpage>458</fpage><pub-id pub-id-type="doi">10.1186/1471-2105-8-458</pub-id><?supplied-pmid 18028540?><pub-id pub-id-type="pmid">18028540</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref038">
      <label>38</label>
      <mixed-citation publication-type="journal"><name><surname>Zhu</surname><given-names>S</given-names></name>, <name><surname>Degnan</surname><given-names>JH</given-names></name>, <name><surname>Goldstien</surname><given-names>SJ</given-names></name>, <name><surname>Eldon</surname><given-names>B</given-names></name>. <article-title>Hybrid-Lambda: simulation of multiple merger and Kingman gene genealogies in species networks and species trees</article-title>. <source>BMC Bioinformatics</source>. <year>2015</year>;<volume>16</volume>(<issue>292</issue>).</mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref039">
      <label>39</label>
      <mixed-citation publication-type="journal"><name><surname>Mailund</surname><given-names>T</given-names></name>, <name><surname>Schierup</surname><given-names>MH</given-names></name>, <name><surname>Pedersen</surname><given-names>CN</given-names></name>, <name><surname>Mechlenborg</surname><given-names>PJ</given-names></name>, <name><surname>Madsen</surname><given-names>JN</given-names></name>, <name><surname>Schauser</surname><given-names>L</given-names></name>. <article-title>CoaSim: a flexible environment for simulating genetic data under coalescent models</article-title>. <source>BMC Bioinformatics</source>. <year>2005</year>;<volume>6</volume>(<issue>1</issue>):<fpage>252</fpage><pub-id pub-id-type="doi">10.1186/1471-2105-6-252</pub-id><?supplied-pmid 16225674?><pub-id pub-id-type="pmid">16225674</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref040">
      <label>40</label>
      <mixed-citation publication-type="journal"><name><surname>Ramos-Onsins</surname><given-names>SE</given-names></name>, <name><surname>Mitchell-Olds</surname><given-names>T</given-names></name>. <article-title>Mlcoalsim: multilocus coalescent simulations</article-title>. <source>Evol Bioinform Online</source>. <year>2007</year>;<volume>3</volume>:<fpage>41</fpage><?supplied-pmid 19430603?><pub-id pub-id-type="pmid">19430603</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref041">
      <label>41</label>
      <mixed-citation publication-type="journal"><name><surname>Wang</surname><given-names>Y</given-names></name>, <name><surname>Zhou</surname><given-names>Y</given-names></name>, <name><surname>Li</surname><given-names>L</given-names></name>, <name><surname>Chen</surname><given-names>X</given-names></name>, <name><surname>Liu</surname><given-names>Y</given-names></name>, <name><surname>Ma</surname><given-names>ZM</given-names></name>, <etal>et al</etal><article-title>A new method for modeling coalescent processes with recombination</article-title>. <source>BMC Bioinformatics</source>. <year>2014</year>;<volume>15</volume>(<issue>1</issue>):<fpage>273</fpage><pub-id pub-id-type="doi">10.1186/1471-2105-15-273</pub-id><?supplied-pmid 25113665?><pub-id pub-id-type="pmid">25113665</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref042">
      <label>42</label>
      <mixed-citation publication-type="journal"><name><surname>Carvajal-Rodríguez</surname><given-names>A</given-names></name>. <article-title>Simulation of genomes: a review</article-title>. <source>Curr Genomics</source>. <year>2008</year>;<volume>9</volume>(<issue>3</issue>):<fpage>155</fpage><pub-id pub-id-type="doi">10.2174/138920208784340759</pub-id><?supplied-pmid 19440512?><pub-id pub-id-type="pmid">19440512</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref043">
      <label>43</label>
      <mixed-citation publication-type="journal"><name><surname>Liu</surname><given-names>Y</given-names></name>, <name><surname>Athanasiadis</surname><given-names>G</given-names></name>, <name><surname>Weale</surname><given-names>ME</given-names></name>. <article-title>A survey of genetic simulation software for population and epidemiological studies</article-title>. <source>Hum Genomics</source>. <year>2008</year>;<volume>3</volume>(<issue>1</issue>):<fpage>79</fpage><pub-id pub-id-type="doi">10.1186/1479-7364-3-1-79</pub-id><?supplied-pmid 19129092?><pub-id pub-id-type="pmid">19129092</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref044">
      <label>44</label>
      <mixed-citation publication-type="journal"><name><surname>Arenas</surname><given-names>M</given-names></name>. <article-title>Simulation of molecular data under diverse evolutionary scenarios</article-title>. <source>PLoS Comput Biol</source>. <year>2012</year>;<volume>8</volume>(<issue>5</issue>):<fpage>e1002495</fpage><pub-id pub-id-type="doi">10.1371/journal.pcbi.1002495</pub-id><?supplied-pmid 22693434?><pub-id pub-id-type="pmid">22693434</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref045">
      <label>45</label>
      <mixed-citation publication-type="journal"><name><surname>Yuan</surname><given-names>X</given-names></name>, <name><surname>Miller</surname><given-names>DJ</given-names></name>, <name><surname>Zhang</surname><given-names>J</given-names></name>, <name><surname>Herrington</surname><given-names>D</given-names></name>, <name><surname>Wang</surname><given-names>Y</given-names></name>. <article-title>An overview of population genetic data simulation</article-title>. <source>J Comput Biol</source>. <year>2012</year>;<volume>19</volume>(<issue>1</issue>):<fpage>42</fpage>–<lpage>54</lpage>. <pub-id pub-id-type="doi">10.1089/cmb.2010.0188</pub-id><?supplied-pmid 22149682?><pub-id pub-id-type="pmid">22149682</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref046">
      <label>46</label>
      <mixed-citation publication-type="journal"><name><surname>Hoban</surname><given-names>S</given-names></name>, <name><surname>Bertorelle</surname><given-names>G</given-names></name>, <name><surname>Gaggiotti</surname><given-names>OE</given-names></name>. <article-title>Computer simulations: tools for population and evolutionary genetics</article-title>. <source>Nat Rev Genet</source>. <year>2012</year>;<volume>13</volume>(<issue>2</issue>):<fpage>110</fpage>–<lpage>122</lpage>. <?supplied-pmid 22230817?><pub-id pub-id-type="pmid">22230817</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref047">
      <label>47</label>
      <mixed-citation publication-type="journal"><name><surname>Yang</surname><given-names>T</given-names></name>, <name><surname>Deng</surname><given-names>HW</given-names></name>, <name><surname>Niu</surname><given-names>T</given-names></name>. <article-title>Critical assessment of coalescent simulators in modeling recombination hotspots in genomic sequences</article-title>. <source>BMC Bioinformatics</source>. <year>2014</year>;<volume>15</volume>:<fpage>3</fpage><pub-id pub-id-type="doi">10.1186/1471-2105-15-3</pub-id><?supplied-pmid 24387001?><pub-id pub-id-type="pmid">24387001</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref048">
      <label>48</label>
      <mixed-citation publication-type="book"><name><surname>Knuth</surname><given-names>DE</given-names></name>. <source>Combinatorial Algorithms, Part 1. vol. 4A of <italic>The Art of Computer Programming</italic></source>. <publisher-loc>Upper Saddle River, New Jersey</publisher-loc>: <publisher-name>Addison-Wesley</publisher-name>; <year>2011</year>.</mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref049">
      <label>49</label>
      <mixed-citation publication-type="journal"><name><surname>Kelleher</surname><given-names>J</given-names></name>, <name><surname>Barton</surname><given-names>NH</given-names></name>, <name><surname>Etheridge</surname><given-names>AM</given-names></name>. <article-title>Coalescent simulation in continuous space</article-title>. <source>Bioinformatics</source>. <year>2013</year>;<volume>29</volume>(<issue>7</issue>):<fpage>955</fpage>–<lpage>956</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btt067</pub-id><?supplied-pmid 23391497?><pub-id pub-id-type="pmid">23391497</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref050">
      <label>50</label>
      <mixed-citation publication-type="journal"><name><surname>Kelleher</surname><given-names>J</given-names></name>, <name><surname>Etheridge</surname><given-names>AM</given-names></name>, <name><surname>Barton</surname><given-names>NH</given-names></name>. <article-title>Coalecent simulation in continuous space: algorithms for large neighbourhood size</article-title>. <source>Theor Popul Biol</source>. <year>2014</year>;<volume>95</volume>:<fpage>13</fpage>–<lpage>23</lpage>. <pub-id pub-id-type="doi">10.1016/j.tpb.2014.05.001</pub-id><?supplied-pmid 24910324?><pub-id pub-id-type="pmid">24910324</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref051">
      <label>51</label>
      <mixed-citation publication-type="journal"><name><surname>Fenwick</surname><given-names>PM</given-names></name>. <article-title>A new data structure for cumulative frequency tables</article-title>. <source>Software: Practice and Experience</source>. <year>1994</year>;<volume>24</volume>:<fpage>327</fpage>–<lpage>336</lpage>.</mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref052">
      <label>52</label>
      <mixed-citation publication-type="book"><name><surname>Fenwick</surname><given-names>PM</given-names></name>. <source>A new data structure for cumulative frequency tables: an improved frequency-to-symbol algorithm</source>. <publisher-name>The University of Auckland, Department of Computer Science</publisher-name>; <year>1995</year><volume>110</volume>.</mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref053">
      <label>53</label>
      <mixed-citation publication-type="journal"><name><surname>Durbin</surname><given-names>R</given-names></name>. <article-title>Efficient haplotype matching and storage using the positional Burrows-Wheeler transform (PBWT)</article-title>. <source>Bioinformatics</source>. <year>2014</year>;<volume>30</volume>(<issue>9</issue>):<fpage>1266</fpage>–<lpage>1272</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btu014</pub-id><?supplied-pmid 24413527?><pub-id pub-id-type="pmid">24413527</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref054">
      <label>54</label>
      <mixed-citation publication-type="journal"><name><surname>Layer</surname><given-names>RM</given-names></name>, <name><surname>Kindlon</surname><given-names>N</given-names></name>, <name><surname>Karczewski</surname><given-names>KJ</given-names></name>, <collab>Exome Aggregation Consortium</collab>, <name><surname>Quinlan</surname><given-names>AR</given-names></name>. <article-title>Efficient genotype compression and analysis of large genetic-variation data sets</article-title>. <source>Nat Methods</source>. <year>2016</year>;<volume>13</volume>(<issue>1</issue>):<fpage>63</fpage>–<lpage>65</lpage>. <pub-id pub-id-type="doi">10.1038/nmeth.3654</pub-id><?supplied-pmid 26550772?><pub-id pub-id-type="pmid">26550772</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref055">
      <label>55</label>
      <mixed-citation publication-type="journal"><name><surname>Li</surname><given-names>H</given-names></name>. <article-title>BGT: efficient and flexible genotype query across many samples</article-title>. <source>Bioinformatics</source>. <year>2016</year>;<volume>32</volume>(<issue>4</issue>):<fpage>590</fpage>–<lpage>592</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btv613</pub-id><?supplied-pmid 26500154?><pub-id pub-id-type="pmid">26500154</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref056">
      <label>56</label>
      <mixed-citation publication-type="journal"><name><surname>Felsenstein</surname><given-names>J</given-names></name>. <article-title>PHYLIP—phylogeny inference package (version 3.2)</article-title>. <source>Cladistics</source>. <year>1989</year>;<volume>5</volume>:<fpage>164</fpage>–<lpage>166</lpage>.</mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref057">
      <label>57</label>
      <mixed-citation publication-type="journal"><name><surname>Vos</surname><given-names>RA</given-names></name>, <name><surname>Balhoff</surname><given-names>JP</given-names></name>, <name><surname>Caravas</surname><given-names>JA</given-names></name>, <name><surname>Holder</surname><given-names>MT</given-names></name>, <name><surname>Lapp</surname><given-names>H</given-names></name>, <name><surname>Maddison</surname><given-names>WP</given-names></name>, <etal>et al</etal><article-title>NeXML: rich, extensible, and verifiable representation of comparative data and metadata</article-title>. <source>Syst Biol</source>. <year>2012</year>;<volume>61</volume>(<issue>4</issue>):<fpage>675</fpage>–<lpage>689</lpage>. <pub-id pub-id-type="doi">10.1093/sysbio/sys025</pub-id><?supplied-pmid 22357728?><pub-id pub-id-type="pmid">22357728</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref058">
      <label>58</label>
      <mixed-citation publication-type="journal"><name><surname>Maddison</surname><given-names>DR</given-names></name>, <name><surname>Swofford</surname><given-names>DL</given-names></name>, <name><surname>Maddison</surname><given-names>WP</given-names></name>. <article-title>Nexus: an extensible file format for systematic information</article-title>. <source>Syst Biol</source>. <year>1997</year>;<volume>46</volume>(<issue>4</issue>):<fpage>590</fpage>–<lpage>621</lpage>. <pub-id pub-id-type="doi">10.1093/sysbio/46.4.590</pub-id><?supplied-pmid 11975335?><pub-id pub-id-type="pmid">11975335</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref059">
      <label>59</label>
      <mixed-citation publication-type="journal"><name><surname>Zmasek</surname><given-names>CM</given-names></name>, <name><surname>Eddy</surname><given-names>SR</given-names></name>. <article-title>ATV: display and manipulation of annotated phylogenetic trees</article-title>. <source>Bioinformatics</source>. <year>2001</year>;<volume>17</volume>(<issue>4</issue>):<fpage>383</fpage>–<lpage>384</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/17.4.383</pub-id><?supplied-pmid 11301314?><pub-id pub-id-type="pmid">11301314</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref060">
      <label>60</label>
      <mixed-citation publication-type="journal"><name><surname>Han</surname><given-names>MV</given-names></name>, <name><surname>Zmasek</surname><given-names>CM</given-names></name>. <article-title>phyloXML: XML for evolutionary biology and comparative genomics</article-title>. <source>BMC Bioinformatics</source>. <year>2009</year>;<volume>10</volume>(<issue>356</issue>).</mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref061">
      <label>61</label>
      <mixed-citation publication-type="journal"><name><surname>Morin</surname><given-names>MM</given-names></name>, <name><surname>Moret</surname><given-names>BME</given-names></name>. <article-title>NetGen: generating phylogenetic networks with diploid hybrids</article-title>. <source>Bioinformatics</source>. <year>2006</year>;<volume>22</volume>(<issue>15</issue>):<fpage>1921</fpage>–<lpage>1923</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btl191</pub-id><?supplied-pmid 16717070?><pub-id pub-id-type="pmid">16717070</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref062">
      <label>62</label>
      <mixed-citation publication-type="journal"><name><surname>Buendia</surname><given-names>P</given-names></name>, <name><surname>Narasimhan</surname><given-names>G</given-names></name>. <article-title>Serial NetEvolve: a flexible utility for generating serially-sampled sequences along a tree or recombinant network</article-title>. <source>Bioinformatics</source>. <year>2006</year>;<volume>22</volume>(<issue>18</issue>):<fpage>2313</fpage>–<lpage>2314</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btl387</pub-id><?supplied-pmid 16844708?><pub-id pub-id-type="pmid">16844708</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref063">
      <label>63</label>
      <mixed-citation publication-type="journal"><name><surname>Cardona</surname><given-names>G</given-names></name>, <name><surname>Rosselló</surname><given-names>F</given-names></name>, <name><surname>Valiente</surname><given-names>G</given-names></name>. <article-title>Extended Newick: it is time for a standard representation of phylogenetic networks</article-title>. <source>BMC Bioinformatics</source>. <year>2008</year>;<volume>9</volume>:<fpage>532</fpage><pub-id pub-id-type="doi">10.1186/1471-2105-9-532</pub-id><?supplied-pmid 19077301?><pub-id pub-id-type="pmid">19077301</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref064">
      <label>64</label>
      <mixed-citation publication-type="journal"><name><surname>Than</surname><given-names>C</given-names></name>, <name><surname>Ruths</surname><given-names>D</given-names></name>, <name><surname>Nakhleh</surname><given-names>L</given-names></name>. <article-title>PhyloNet: a software package for analyzing and reconstructing reticulate evolutionary relationships</article-title>. <source>BMC Bioinformatics</source>. <year>2008</year>;<volume>9</volume>:<fpage>322</fpage><pub-id pub-id-type="doi">10.1186/1471-2105-9-322</pub-id><?supplied-pmid 18662388?><pub-id pub-id-type="pmid">18662388</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref065">
      <label>65</label>
      <mixed-citation publication-type="journal"><name><surname>McGill</surname><given-names>JR</given-names></name>, <name><surname>Walkup</surname><given-names>EA</given-names></name>, <name><surname>Kuhner</surname><given-names>MK</given-names></name>. <article-title>GraphML specializations to codify ancestral recombinant graphs</article-title>. <source>Fron Genet</source>. <year>2013</year>;<volume>4</volume>:<fpage>146</fpage>.</mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref066">
      <label>66</label>
      <mixed-citation publication-type="journal"><name><surname>Stajich</surname><given-names>JE</given-names></name>, <name><surname>Block</surname><given-names>D</given-names></name>, <name><surname>Boulez</surname><given-names>K</given-names></name>, <name><surname>Brenner</surname><given-names>SE</given-names></name>, <name><surname>Chervitz</surname><given-names>SA</given-names></name>, <name><surname>Dagdigian</surname><given-names>C</given-names></name>, <etal>et al</etal><article-title>The Bioperl Toolkit: Perl Modules for the Life Sciences</article-title>. <source>Genome Res</source>. <year>2002</year>;<volume>12</volume>(<issue>10</issue>):<fpage>1611</fpage>–<lpage>1618</lpage>. <pub-id pub-id-type="doi">10.1101/gr.361602</pub-id><?supplied-pmid 12368254?><pub-id pub-id-type="pmid">12368254</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref067">
      <label>67</label>
      <mixed-citation publication-type="journal"><name><surname>Cock</surname><given-names>PJA</given-names></name>, <name><surname>Antao</surname><given-names>T</given-names></name>, <name><surname>Chang</surname><given-names>JT</given-names></name>, <name><surname>Chapman</surname><given-names>BA</given-names></name>, <name><surname>Cox</surname><given-names>CJ</given-names></name>, <name><surname>Dalke</surname><given-names>A</given-names></name>, <etal>et al</etal><article-title>Biopython: freely available Python tools for computational molecular biology and bioinformatics</article-title>. <source>Bioinformatics</source>. <year>2009</year>;<volume>25</volume>(<issue>11</issue>):<fpage>1422</fpage>–<lpage>1423</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btp163</pub-id><?supplied-pmid 19304878?><pub-id pub-id-type="pmid">19304878</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref068">
      <label>68</label>
      <mixed-citation publication-type="journal"><name><surname>Sukumaran</surname><given-names>J</given-names></name>, <name><surname>Holder</surname><given-names>MT</given-names></name>. <article-title>DendroPy: a Python library for phylogenetic computing</article-title>. <source>Bioinformatics</source>. <year>2010</year>;<volume>26</volume>(<issue>12</issue>):<fpage>1569</fpage>–<lpage>1571</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btq228</pub-id><?supplied-pmid 20421198?><pub-id pub-id-type="pmid">20421198</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref069">
      <label>69</label>
      <mixed-citation publication-type="journal"><name><surname>Huerta-Cepas</surname><given-names>J</given-names></name>, <name><surname>Dopazo</surname><given-names>J</given-names></name>, <name><surname>Gabaldón</surname><given-names>T</given-names></name>. <article-title>ETE: a python environment for tree exploration</article-title>. <source>BMC Bioinformatics</source>. <year>2010</year>;<volume>11</volume>:<fpage>24</fpage><pub-id pub-id-type="doi">10.1186/1471-2105-11-24</pub-id><?supplied-pmid 20070885?><pub-id pub-id-type="pmid">20070885</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref070">
      <label>70</label>
      <mixed-citation publication-type="journal"><name><surname>Paradis</surname><given-names>E</given-names></name>, <name><surname>Claude</surname><given-names>J</given-names></name>, <name><surname>Strimmer</surname><given-names>K</given-names></name>. <article-title>APE: analyses of phylogenetics and evolution in R language</article-title>. <source>Bioinformatics</source>. <year>2004</year>;<volume>20</volume>:<fpage>289</fpage>–<lpage>290</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btg412</pub-id><?supplied-pmid 14734327?><pub-id pub-id-type="pmid">14734327</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref071">
      <label>71</label>
      <mixed-citation publication-type="journal"><name><surname>Galtier</surname><given-names>N</given-names></name>, <name><surname>Depaulis</surname><given-names>F</given-names></name>, <name><surname>Barton</surname><given-names>NH</given-names></name>. <article-title>Detecting bottlenecks and selective sweeps from DNA sequence polymorphism</article-title>. <source>Genetics</source>. <year>2000</year>;<volume>155</volume>(<issue>2</issue>):<fpage>981</fpage>–<lpage>987</lpage>. <?supplied-pmid 10835415?><pub-id pub-id-type="pmid">10835415</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref072">
      <label>72</label>
      <mixed-citation publication-type="journal"><name><surname>Donnelly</surname><given-names>P</given-names></name>, <name><surname>Kurtz</surname><given-names>TG</given-names></name>. <article-title>Particle representations for measure-valued population models</article-title>. <source>Ann Probab</source>. <year>1999</year>;<volume>27</volume>(<issue>1</issue>):<fpage>166</fpage>–<lpage>205</lpage>. <pub-id pub-id-type="doi">10.1214/aop/1022677258</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref073">
      <label>73</label>
      <mixed-citation publication-type="journal"><name><surname>Pitman</surname><given-names>J</given-names></name>. <article-title>Coalescents with multiple collisions</article-title>. <source>Ann Probab</source>. <year>1999</year>;<volume>27</volume>(<issue>4</issue>):<fpage>1870</fpage>–<lpage>1902</lpage>.</mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref074">
      <label>74</label>
      <mixed-citation publication-type="journal"><name><surname>Sagitov</surname><given-names>S</given-names></name>. <article-title>The general coalescent with asynchronous mergers of ancestral lines</article-title>. <source>J Appl Probab</source>. <year>1999</year>;<volume>36</volume>(<issue>4</issue>):<fpage>1116</fpage>–<lpage>1125</lpage>. <pub-id pub-id-type="doi">10.1239/jap/1032374759</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref075">
      <label>75</label>
      <mixed-citation publication-type="journal"><name><surname>Wiuf</surname><given-names>C</given-names></name>, <name><surname>Hein</surname><given-names>J</given-names></name>. <article-title>The ancestry of a sample of sequences subject to recombination</article-title>. <source>Genetics</source>. <year>1999</year>;<volume>151</volume>(<issue>3</issue>):<fpage>1217</fpage>–<lpage>1228</lpage>. <?supplied-pmid 10049937?><pub-id pub-id-type="pmid">10049937</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref076">
      <label>76</label>
      <mixed-citation publication-type="journal"><name><surname>Song</surname><given-names>YS</given-names></name>. <article-title>On the combinatorics of rooted binary phylogenetic trees</article-title>. <source>Ann Comb</source>. <year>2003</year>;<volume>7</volume>(<issue>3</issue>):<fpage>365</fpage>–<lpage>379</lpage>. <pub-id pub-id-type="doi">10.1007/s00026-003-0192-0</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref077">
      <label>77</label>
      <mixed-citation publication-type="journal"><name><surname>Song</surname><given-names>YS</given-names></name>. <article-title>Properties of subtree-prune-and-regraft operations on totally-ordered phylogenetic trees</article-title>. <source>Ann Comb</source>. <year>2006</year>;<volume>10</volume>(<issue>1</issue>):<fpage>147</fpage>–<lpage>163</lpage>. <pub-id pub-id-type="doi">10.1007/s00026-006-0279-5</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref078">
      <label>78</label>
      <mixed-citation publication-type="journal"><name><surname>Kelleher</surname><given-names>J</given-names></name>, <name><surname>Ness</surname><given-names>RW</given-names></name>, <name><surname>Halligan</surname><given-names>DL</given-names></name>. <article-title>Processing genome scale tabular data with wormtable</article-title>. <source>BMC Bioinformatics</source>. <year>2013</year>;<volume>14</volume>:<fpage>356</fpage><pub-id pub-id-type="doi">10.1186/1471-2105-14-356</pub-id><?supplied-pmid 24308302?><pub-id pub-id-type="pmid">24308302</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref079">
      <label>79</label>
      <mixed-citation publication-type="other">The HDF Group. Hierarchical Data Format, version 5; 1997–2015. <ext-link ext-link-type="uri" xlink:href="http://www.hdfgroup.org/HDF5/">http://www.hdfgroup.org/HDF5/</ext-link>.</mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref080">
      <label>80</label>
      <mixed-citation publication-type="book"><name><surname>Matthews</surname><given-names>SJ</given-names></name>, <name><surname>Sul</surname><given-names>SJ</given-names></name>, <name><surname>Williams</surname><given-names>TL</given-names></name>. <chapter-title>A novel approach for compressing phylogenetic trees</chapter-title> In: <name><surname>Borodovsky</surname><given-names>M</given-names></name>, <name><surname>Gogarten</surname><given-names>J</given-names></name>, <name><surname>Przytycka</surname><given-names>T</given-names></name>, <name><surname>Rajasekaran</surname><given-names>S</given-names></name>, editors. <source>Bioinformatics Research and Applications. vol. 6053 of Lecture Notes in Computer Science</source>. <publisher-name>Springer</publisher-name>
<publisher-loc>Berlin Heidelberg</publisher-loc>; <year>2010</year> p. <fpage>113</fpage>–<lpage>124</lpage>.</mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref081">
      <label>81</label>
      <mixed-citation publication-type="book"><name><surname>Samet</surname><given-names>H</given-names></name>. <source>The Design and Analysis of Spatial Data Structures</source>. <publisher-loc>Upper Saddle River, New Jersey</publisher-loc>: <publisher-name>Addison-Wesley</publisher-name>; <year>1989</year>.</mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref082">
      <label>82</label>
      <mixed-citation publication-type="book"><name><surname>Charlesworth</surname><given-names>B</given-names></name>, <name><surname>Charlesworth</surname><given-names>D</given-names></name>. <source>Elements of Evolutionary Genetics</source>. <publisher-loc>Greenwood Village, Colorado</publisher-loc>: <publisher-name>Roberts and Company</publisher-name>; <year>2010</year>.</mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref083">
      <label>83</label>
      <mixed-citation publication-type="journal"><name><surname>Spencer</surname><given-names>CC</given-names></name>, <name><surname>Su</surname><given-names>Z</given-names></name>, <name><surname>Donnelly</surname><given-names>P</given-names></name>, <name><surname>Marchini</surname><given-names>J</given-names></name>. <article-title>Designing genome-wide association studies: sample size, power, imputation, and the choice of genotyping chip</article-title>. <source>PLoS Genet</source>. <year>2009</year>;<volume>5</volume>(<issue>5</issue>):<fpage>e1000477</fpage><pub-id pub-id-type="doi">10.1371/journal.pgen.1000477</pub-id><?supplied-pmid 19492015?><pub-id pub-id-type="pmid">19492015</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref084">
      <label>84</label>
      <mixed-citation publication-type="journal"><name><surname>Li</surname><given-names>H</given-names></name>, <name><surname>Wiehe</surname><given-names>T</given-names></name>. <article-title>Coalescent tree imbalance and a simple test for selective sweeps based on microsatellite variation</article-title>. <source>PLoS Comput Biol</source>. <year>2013</year>;<volume>9</volume>(<issue>5</issue>):<fpage>e1003060</fpage><pub-id pub-id-type="doi">10.1371/journal.pcbi.1003060</pub-id><?supplied-pmid 23696722?><pub-id pub-id-type="pmid">23696722</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref085">
      <label>85</label>
      <mixed-citation publication-type="journal"><name><surname>Purcell</surname><given-names>S</given-names></name>, <name><surname>Neale</surname><given-names>B</given-names></name>, <name><surname>Todd-Brown</surname><given-names>K</given-names></name>, <name><surname>Thomas</surname><given-names>L</given-names></name>, <name><surname>Ferreira</surname><given-names>MAR</given-names></name>, <name><surname>Bender</surname><given-names>D</given-names></name>, <etal>et al</etal><article-title>PLINK: a tool set for whole-genome association and population-based linkage analyses</article-title>. <source>Am J Hum Genet</source>. <year>2007</year>;<volume>81</volume>(<issue>3</issue>):<fpage>559</fpage>–<lpage>575</lpage>. <pub-id pub-id-type="doi">10.1086/519795</pub-id><?supplied-pmid 17701901?><pub-id pub-id-type="pmid">17701901</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref086">
      <label>86</label>
      <mixed-citation publication-type="journal"><name><surname>Barton</surname><given-names>NH</given-names></name>, <name><surname>Etheridge</surname><given-names>AM</given-names></name>, <name><surname>Véber</surname><given-names>A</given-names></name>. <article-title>A new model for evolution in a spatial continuum</article-title>. <source>Electron J of Probab</source>. <year>2010</year>;<volume>15</volume>:<fpage>7</fpage><pub-id pub-id-type="doi">10.1214/EJP.v15-741</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref087">
      <label>87</label>
      <mixed-citation publication-type="journal"><name><surname>Barton</surname><given-names>NH</given-names></name>, <name><surname>Kelleher</surname><given-names>J</given-names></name>, <name><surname>Etheridge</surname><given-names>AM</given-names></name>. <article-title>A new model for extinction and recolonisation in two dimensions: quantifying phylogeography</article-title>. <source>Evolution</source>. <year>2010</year>;<volume>64</volume>(<issue>9</issue>):<fpage>2701</fpage>–<lpage>2715</lpage>. <pub-id pub-id-type="doi">10.1111/j.1558-5646.2010.01019.x</pub-id><?supplied-pmid 20408876?><pub-id pub-id-type="pmid">20408876</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref088">
      <label>88</label>
      <mixed-citation publication-type="journal"><name><surname>Barton</surname><given-names>NH</given-names></name>, <name><surname>Etheridge</surname><given-names>AM</given-names></name>, <name><surname>Véber</surname><given-names>A</given-names></name>. <article-title>Modelling evolution in a spatial continuum</article-title>. <source>J Stat Mech</source>. <year>2013</year>;<volume>P01002</volume>.</mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref089">
      <label>89</label>
      <mixed-citation publication-type="journal"><name><surname>Wiuf</surname><given-names>C</given-names></name>, <name><surname>Hein</surname><given-names>J</given-names></name>. <article-title>The coalescent with gene conversion</article-title>. <source>Genetics</source>. <year>2000</year>;<volume>155</volume>(<issue>1</issue>):<fpage>451</fpage>–<lpage>462</lpage>. <?supplied-pmid 10790416?><pub-id pub-id-type="pmid">10790416</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref090">
      <label>90</label>
      <mixed-citation publication-type="journal"><collab>Genome of the Netherlands Consortium</collab>, <etal>et al</etal><article-title>Whole-genome sequence variation, population structure and demographic history of the Dutch population</article-title>. <source>Nat Genet</source>. <year>2014</year>;<volume>46</volume>(<issue>8</issue>):<fpage>818</fpage>–<lpage>825</lpage>. <pub-id pub-id-type="doi">10.1038/ng.3021</pub-id><?supplied-pmid 24974849?><pub-id pub-id-type="pmid">24974849</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref091">
      <label>91</label>
      <mixed-citation publication-type="journal"><collab>UK10K Consortium</collab>, <etal>et al</etal><article-title>The UK10K project identifies rare variants in health and disease</article-title>. <source>Nature</source>. <year>2015</year>;<volume>526</volume>(<issue>7571</issue>):<fpage>82</fpage>–<lpage>90</lpage>. <pub-id pub-id-type="doi">10.1038/nature14962</pub-id><?supplied-pmid 26367797?><pub-id pub-id-type="pmid">26367797</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref092">
      <label>92</label>
      <mixed-citation publication-type="journal"><collab>1000 Genomes Project Consortium</collab>, <etal>et al</etal><article-title>A global reference for human genetic variation</article-title>. <source>Nature</source>. <year>2015</year>;<volume>526</volume>(<issue>7571</issue>):<fpage>68</fpage>–<lpage>74</lpage>. <pub-id pub-id-type="doi">10.1038/nature15393</pub-id><?supplied-pmid 26432245?><pub-id pub-id-type="pmid">26432245</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref093">
      <label>93</label>
      <mixed-citation publication-type="journal"><name><surname>Gudbjartsson</surname><given-names>DF</given-names></name>, <name><surname>Helgason</surname><given-names>H</given-names></name>, <name><surname>Gudjonsson</surname><given-names>SA</given-names></name>, <name><surname>Zink</surname><given-names>F</given-names></name>, <name><surname>Oddson</surname><given-names>A</given-names></name>, <name><surname>Gylfason</surname><given-names>A</given-names></name>, <etal>et al</etal><article-title>Large-scale whole-genome sequencing of the Icelandic population</article-title>. <source>Nat Genet</source>. <year>2015</year>;<volume>47</volume>(<issue>5</issue>):<fpage>435</fpage>–<lpage>444</lpage>. <pub-id pub-id-type="doi">10.1038/ng.3247</pub-id><?supplied-pmid 25807286?><pub-id pub-id-type="pmid">25807286</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref094">
      <label>94</label>
      <mixed-citation publication-type="journal"><name><surname>Eisenstein</surname><given-names>M</given-names></name>. <article-title>Big data: The power of petabytes</article-title>. <source>Nature</source>. <year>2015</year>;<volume>527</volume>(<issue>7576</issue>):<fpage>S2</fpage>–<lpage>S4</lpage>. <pub-id pub-id-type="doi">10.1038/527S2a</pub-id><?supplied-pmid 26536222?><pub-id pub-id-type="pmid">26536222</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref095">
      <label>95</label>
      <mixed-citation publication-type="journal"><name><surname>Stephens</surname><given-names>ZD</given-names></name>, <name><surname>Lee</surname><given-names>SY</given-names></name>, <name><surname>Faghri</surname><given-names>F</given-names></name>, <name><surname>Campbell</surname><given-names>RH</given-names></name>, <name><surname>Zhai</surname><given-names>C</given-names></name>, <name><surname>Efron</surname><given-names>MJ</given-names></name>, <etal>et al</etal><article-title>Big data: astronomical or genomical?</article-title><source>PLoS Biol</source>. <year>2015</year>;<volume>13</volume>(<issue>7</issue>):<fpage>e1002195</fpage><pub-id pub-id-type="doi">10.1371/journal.pbio.1002195</pub-id><?supplied-pmid 26151137?><pub-id pub-id-type="pmid">26151137</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref096">
      <label>96</label>
      <mixed-citation publication-type="journal"><name><surname>Collins</surname><given-names>R</given-names></name>. <article-title>UK biobank: the need for large prospective epidemiological studies</article-title>. <source>J Epidemiol Community Health</source>. <year>2011</year>;<volume>65</volume>(<issue>1</issue>):<fpage>A37</fpage><pub-id pub-id-type="doi">10.1136/jech.2011.142976b.2</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref097">
      <label>97</label>
      <mixed-citation publication-type="journal"><name><surname>Wain</surname><given-names>LV</given-names></name>, <name><surname>Shrine</surname><given-names>N</given-names></name>, <name><surname>Miller</surname><given-names>S</given-names></name>, <name><surname>Jackson</surname><given-names>VE</given-names></name>, <name><surname>Ntalla</surname><given-names>I</given-names></name>, <name><surname>Artigas</surname><given-names>MS</given-names></name>, <etal>et al</etal><article-title>Novel insights into the genetics of smoking behaviour, lung function, and chronic obstructive pulmonary disease (UK BiLEVE): a genetic association study in UK Biobank</article-title>. <source>Lancet Respir Med</source>. <year>2015</year>;<volume>3</volume>(<issue>10</issue>):<fpage>769</fpage>–<lpage>781</lpage>. <pub-id pub-id-type="doi">10.1016/S2213-2600(15)00283-0</pub-id><?supplied-pmid 26423011?><pub-id pub-id-type="pmid">26423011</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref098">
      <label>98</label>
      <mixed-citation publication-type="journal"><name><surname>Manolio</surname><given-names>TA</given-names></name>. <article-title>Bringing genome-wide association findings into clinical use</article-title>. <source>Nat Rev Genet</source>. <year>2013</year>;<volume>14</volume>(<issue>8</issue>):<fpage>549</fpage>–<lpage>558</lpage>. <pub-id pub-id-type="doi">10.1038/nrg3523</pub-id><?supplied-pmid 23835440?><pub-id pub-id-type="pmid">23835440</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref099">
      <label>99</label>
      <mixed-citation publication-type="journal"><name><surname>Yang</surname><given-names>J</given-names></name>, <name><surname>Lee</surname><given-names>SH</given-names></name>, <name><surname>Goddard</surname><given-names>ME</given-names></name>, <name><surname>Visscher</surname><given-names>PM</given-names></name>. <article-title>GCTA: a tool for genome-wide complex trait analysis</article-title>. <source>Am J Hum Genet</source>. <year>2011</year>;<volume>88</volume>(<issue>1</issue>):<fpage>76</fpage>–<lpage>82</lpage>. <pub-id pub-id-type="doi">10.1016/j.ajhg.2010.11.011</pub-id><?supplied-pmid 21167468?><pub-id pub-id-type="pmid">21167468</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref100">
      <label>100</label>
      <mixed-citation publication-type="journal"><name><surname>Schaffner</surname><given-names>SF</given-names></name>, <name><surname>Foo</surname><given-names>C</given-names></name>, <name><surname>Gabriel</surname><given-names>S</given-names></name>, <name><surname>Reich</surname><given-names>D</given-names></name>, <name><surname>Daly</surname><given-names>MJ</given-names></name>, <name><surname>Altshuler</surname><given-names>D</given-names></name>. <article-title>Calibrating a coalescent simulation of human genome sequence variation</article-title>. <source>Genome Res</source>. <year>2005</year>;<volume>15</volume>(<issue>11</issue>):<fpage>1576</fpage>–<lpage>1583</lpage>. <pub-id pub-id-type="doi">10.1101/gr.3709305</pub-id><?supplied-pmid 16251467?><pub-id pub-id-type="pmid">16251467</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref101">
      <label>101</label>
      <mixed-citation publication-type="journal"><name><surname>Marchini</surname><given-names>J</given-names></name>, <name><surname>Howie</surname><given-names>B</given-names></name>, <name><surname>Myers</surname><given-names>S</given-names></name>, <name><surname>McVean</surname><given-names>G</given-names></name>, <name><surname>Donnelly</surname><given-names>P</given-names></name>. <article-title>A new multipoint method for genome-wide association studies by imputation of genotypes</article-title>. <source>Nat Genet</source>. <year>2007</year>;<volume>39</volume>(<issue>7</issue>):<fpage>906</fpage>–<lpage>913</lpage>. <pub-id pub-id-type="doi">10.1038/ng2088</pub-id><?supplied-pmid 17572673?><pub-id pub-id-type="pmid">17572673</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref102">
      <label>102</label>
      <mixed-citation publication-type="journal"><name><surname>Li</surname><given-names>C</given-names></name>, <name><surname>Li</surname><given-names>M</given-names></name>. <article-title>GWAsimulator: a rapid whole-genome simulation program</article-title>. <source>Bioinformatics</source>. <year>2008</year>;<volume>24</volume>(<issue>1</issue>):<fpage>140</fpage>–<lpage>142</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btm549</pub-id><?supplied-pmid 18006546?><pub-id pub-id-type="pmid">18006546</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref103">
      <label>103</label>
      <mixed-citation publication-type="journal"><name><surname>Su</surname><given-names>Z</given-names></name>, <name><surname>Marchini</surname><given-names>J</given-names></name>, <name><surname>Donnelly</surname><given-names>P</given-names></name>. <article-title>HAPGEN2: simulation of multiple disease SNPs</article-title>. <source>Bioinformatics</source>. <year>2011</year>;<volume>27</volume>(<issue>16</issue>):<fpage>2304</fpage>–<lpage>2305</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btr341</pub-id><?supplied-pmid 21653516?><pub-id pub-id-type="pmid">21653516</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref104">
      <label>104</label>
      <mixed-citation publication-type="journal"><name><surname>Lohmueller</surname><given-names>KE</given-names></name>, <name><surname>Indap</surname><given-names>AR</given-names></name>, <name><surname>Schmidt</surname><given-names>S</given-names></name>, <name><surname>Boyko</surname><given-names>AR</given-names></name>, <name><surname>Hernandez</surname><given-names>RD</given-names></name>, <name><surname>Hubisz</surname><given-names>MJ</given-names></name>, <etal>et al</etal><article-title>Proportionally more deleterious genetic variation in European than in African populations</article-title>. <source>Nature</source>. <year>2008</year>;<volume>451</volume>(<issue>7181</issue>):<fpage>994</fpage>–<lpage>997</lpage>. <pub-id pub-id-type="doi">10.1038/nature06611</pub-id><?supplied-pmid 18288194?><pub-id pub-id-type="pmid">18288194</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref105">
      <label>105</label>
      <mixed-citation publication-type="journal"><name><surname>Lohmueller</surname><given-names>KE</given-names></name>. <article-title>The impact of population demography and selection on the genetic architecture of complex traits</article-title>. <source>PLoS Genet</source>. <year>2014</year>;<volume>10</volume>(<issue>5</issue>):<fpage>e1004379</fpage><pub-id pub-id-type="doi">10.1371/journal.pgen.1004379</pub-id><?supplied-pmid 24875776?><pub-id pub-id-type="pmid">24875776</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref106">
      <label>106</label>
      <mixed-citation publication-type="journal"><name><surname>Günther</surname><given-names>T</given-names></name>, <name><surname>Gawenda</surname><given-names>I</given-names></name>, <name><surname>Schmid</surname><given-names>KJ</given-names></name>. <article-title>phenosim—A software to simulate phenotypes for testing in genome-wide association studies</article-title>. <source>BMC Bioinformatics</source>. <year>2011</year>;<volume>12</volume>(<issue>1</issue>):<fpage>265</fpage><pub-id pub-id-type="doi">10.1186/1471-2105-12-265</pub-id><?supplied-pmid 21714868?><pub-id pub-id-type="pmid">21714868</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref107">
      <label>107</label>
      <mixed-citation publication-type="journal"><name><surname>Chung</surname><given-names>RH</given-names></name>, <name><surname>Shih</surname><given-names>CC</given-names></name>. <article-title>SeqSIMLA: a sequence and phenotype simulation tool for complex disease studies</article-title>. <source>BMC Bioinformatics</source>. <year>2013</year>;<volume>14</volume>(<issue>1</issue>):<fpage>199</fpage><pub-id pub-id-type="doi">10.1186/1471-2105-14-199</pub-id><?supplied-pmid 23782512?><pub-id pub-id-type="pmid">23782512</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref108">
      <label>108</label>
      <mixed-citation publication-type="journal"><name><surname>Marchini</surname><given-names>J</given-names></name>, <name><surname>Cardon</surname><given-names>LR</given-names></name>, <name><surname>Phillips</surname><given-names>MS</given-names></name>, <name><surname>Donnelly</surname><given-names>P</given-names></name>. <article-title>The effects of human population structure on large genetic association studies</article-title>. <source>Nat Genet</source>. <year>2004</year>;<volume>36</volume>(<issue>5</issue>):<fpage>512</fpage>–<lpage>517</lpage>. <pub-id pub-id-type="doi">10.1038/ng1337</pub-id><?supplied-pmid 15052271?><pub-id pub-id-type="pmid">15052271</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref109">
      <label>109</label>
      <mixed-citation publication-type="journal"><name><surname>McCarthy</surname><given-names>MI</given-names></name>, <name><surname>Abecasis</surname><given-names>GR</given-names></name>, <name><surname>Cardon</surname><given-names>LR</given-names></name>, <name><surname>Goldstein</surname><given-names>DB</given-names></name>, <name><surname>Little</surname><given-names>J</given-names></name>, <name><surname>Ioannidis</surname><given-names>JP</given-names></name>, <etal>et al</etal><article-title>Genome-wide association studies for complex traits: consensus, uncertainty and challenges</article-title>. <source>Nat Rev Genet</source>. <year>2008</year>;<volume>9</volume>(<issue>5</issue>):<fpage>356</fpage>–<lpage>369</lpage>. <pub-id pub-id-type="doi">10.1038/nrg2344</pub-id><?supplied-pmid 18398418?><pub-id pub-id-type="pmid">18398418</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref110">
      <label>110</label>
      <mixed-citation publication-type="journal"><name><surname>Mathieson</surname><given-names>I</given-names></name>, <name><surname>McVean</surname><given-names>G</given-names></name>. <article-title>Differential confounding of rare and common variants in spatially structured populations</article-title>. <source>Nat Genet</source>. <year>2012</year>;<volume>44</volume>(<issue>3</issue>):<fpage>243</fpage>–<lpage>246</lpage>. <pub-id pub-id-type="doi">10.1038/ng.1074</pub-id><?supplied-pmid 22306651?><pub-id pub-id-type="pmid">22306651</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref111">
      <label>111</label>
      <mixed-citation publication-type="journal"><name><surname>Mathieson</surname><given-names>I</given-names></name>, <name><surname>McVean</surname><given-names>G</given-names></name>. <article-title>Demography and the age of rare variants</article-title>. <source>PLoS Genet</source>. <year>2014</year>;<volume>10</volume>(<issue>8</issue>):<fpage>e1004528</fpage><pub-id pub-id-type="doi">10.1371/journal.pgen.1004528</pub-id><?supplied-pmid 25101869?><pub-id pub-id-type="pmid">25101869</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref112">
      <label>112</label>
      <mixed-citation publication-type="journal"><name><surname>Novembre</surname><given-names>J</given-names></name>, <name><surname>Johnson</surname><given-names>T</given-names></name>, <name><surname>Bryc</surname><given-names>K</given-names></name>, <name><surname>Kutalik</surname><given-names>Z</given-names></name>, <name><surname>Boyko</surname><given-names>AR</given-names></name>, <name><surname>Auton</surname><given-names>A</given-names></name>, <etal>et al</etal><article-title>Genes mirror geography within Europe</article-title>. <source>Nature</source>. <year>2008</year>;<volume>456</volume>(<issue>7218</issue>):<fpage>98</fpage>–<lpage>101</lpage>. <pub-id pub-id-type="doi">10.1038/nature07331</pub-id><?supplied-pmid 18758442?><pub-id pub-id-type="pmid">18758442</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref113">
      <label>113</label>
      <mixed-citation publication-type="journal"><name><surname>Alexander</surname><given-names>DH</given-names></name>, <name><surname>Novembre</surname><given-names>J</given-names></name>, <name><surname>Lange</surname><given-names>K</given-names></name>. <article-title>Fast model-based estimation of ancestry in unrelated individuals</article-title>. <source>Genome Res</source>. <year>2009</year>;<volume>19</volume>(<issue>9</issue>):<fpage>1655</fpage>–<lpage>1664</lpage>. <pub-id pub-id-type="doi">10.1101/gr.094052.109</pub-id><?supplied-pmid 19648217?><pub-id pub-id-type="pmid">19648217</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref114">
      <label>114</label>
      <mixed-citation publication-type="journal"><name><surname>Lawson</surname><given-names>DJ</given-names></name>, <name><surname>Hellenthal</surname><given-names>G</given-names></name>, <name><surname>Myers</surname><given-names>S</given-names></name>, <name><surname>Falush</surname><given-names>D</given-names></name>. <article-title>Inference of population structure using dense haplotype data</article-title>. <source>PLoS Genet</source>. <year>2012</year>;<volume>8</volume>(<issue>1</issue>):<fpage>e1002453</fpage>–<lpage>e1002453</lpage>. <pub-id pub-id-type="doi">10.1371/journal.pgen.1002453</pub-id><?supplied-pmid 22291602?><pub-id pub-id-type="pmid">22291602</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref115">
      <label>115</label>
      <mixed-citation publication-type="journal"><name><surname>Liu</surname><given-names>Y</given-names></name>, <name><surname>Nyunoya</surname><given-names>T</given-names></name>, <name><surname>Leng</surname><given-names>S</given-names></name>, <name><surname>Belinsky</surname><given-names>SA</given-names></name>, <name><surname>Tesfaigzi</surname><given-names>Y</given-names></name>, <name><surname>Bruse</surname><given-names>S</given-names></name>. <article-title>Softwares and methods for estimating genetic ancestry in human populations</article-title>. <source>Hum Genomics</source>. <year>2013</year>;<volume>7</volume>(<issue>1</issue>). <pub-id pub-id-type="doi">10.1186/1479-7364-7-1</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref116">
      <label>116</label>
      <mixed-citation publication-type="journal"><name><surname>Ralph</surname><given-names>P</given-names></name>, <name><surname>Coop</surname><given-names>G</given-names></name>. <article-title>The geography of recent genetic ancestry across Europe</article-title>. <source>PLoS Biol</source>. <year>2013</year>;<volume>11</volume>(<issue>5</issue>):<fpage>e1001555</fpage><pub-id pub-id-type="doi">10.1371/journal.pbio.1001555</pub-id><?supplied-pmid 23667324?><pub-id pub-id-type="pmid">23667324</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref117">
      <label>117</label>
      <mixed-citation publication-type="journal"><name><surname>Harris</surname><given-names>K</given-names></name>, <name><surname>Nielsen</surname><given-names>R</given-names></name>. <article-title>Inferring demographic history from a spectrum of shared haplotype lengths</article-title>. <source>PLoS Genet</source>. <year>2013</year>;<volume>9</volume>(<issue>6</issue>):<fpage>e1003521</fpage><pub-id pub-id-type="doi">10.1371/journal.pgen.1003521</pub-id><?supplied-pmid 23754952?><pub-id pub-id-type="pmid">23754952</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref118">
      <label>118</label>
      <mixed-citation publication-type="journal"><name><surname>Barton</surname><given-names>NH</given-names></name>, <name><surname>Etheridge</surname><given-names>AM</given-names></name>, <name><surname>Kelleher</surname><given-names>J</given-names></name>, <name><surname>Véber</surname><given-names>A</given-names></name>. <article-title>Inference in two dimensions: allele frequencies versus lengths of shared sequence blocks</article-title>. <source>Theor Popul Biol</source>. <year>2013</year>;<volume>87</volume>:<fpage>105</fpage>–<lpage>119</lpage>. <pub-id pub-id-type="doi">10.1016/j.tpb.2013.03.001</pub-id><?supplied-pmid 23506734?><pub-id pub-id-type="pmid">23506734</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref119">
      <label>119</label>
      <mixed-citation publication-type="journal"><name><surname>Gutenkunst</surname><given-names>RN</given-names></name>, <name><surname>Hernandez</surname><given-names>RD</given-names></name>, <name><surname>Williamson</surname><given-names>SH</given-names></name>, <name><surname>Bustamante</surname><given-names>CD</given-names></name>. <article-title>Inferring the joint demographic history of multiple populations from multidimensional SNP frequency data</article-title>. <source>PLoS Genet</source>. <year>2009</year>;<volume>5</volume>(<issue>10</issue>):<fpage>e1000695</fpage><pub-id pub-id-type="doi">10.1371/journal.pgen.1000695</pub-id><?supplied-pmid 19851460?><pub-id pub-id-type="pmid">19851460</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref120">
      <label>120</label>
      <mixed-citation publication-type="book"><name><surname>Gusfield</surname><given-names>D</given-names></name>. <source>ReCombinatorics</source>. <publisher-loc>Cambridge Massachusetts</publisher-loc>: <publisher-name>MIT Press</publisher-name>; <year>2014</year>.</mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref121">
      <label>121</label>
      <mixed-citation publication-type="journal"><name><surname>Minichiello</surname><given-names>MJ</given-names></name>, <name><surname>Durbin</surname><given-names>R</given-names></name>. <article-title>Mapping trait loci by use of inferred ancestral recombination graphs</article-title>. <source>Am J Hum Genet</source>. <year>2006</year>;<volume>79</volume>:<fpage>910</fpage>–<lpage>922</lpage>. <pub-id pub-id-type="doi">10.1086/508901</pub-id><?supplied-pmid 17033967?><pub-id pub-id-type="pmid">17033967</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1004842.ref122">
      <label>122</label>
      <mixed-citation publication-type="journal"><name><surname>O’Fallon</surname><given-names>BD</given-names></name>. <article-title>ACG: rapid inference of population history from recombining nucleotide sequences</article-title>. <source>BMC Bioinformatics</source>. <year>2013</year>;<volume>14</volume>(<issue>1</issue>):<fpage>40</fpage><pub-id pub-id-type="doi">10.1186/1471-2105-14-40</pub-id><?supplied-pmid 23379678?><pub-id pub-id-type="pmid">23379678</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

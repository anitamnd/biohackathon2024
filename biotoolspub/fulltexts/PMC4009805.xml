<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v2.3 20070202//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName journalpublishing.dtd?>
<?SourceDTD.Version 2.3?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Biology (Basel)</journal-id>
    <journal-id journal-id-type="iso-abbrev">Biology (Basel)</journal-id>
    <journal-id journal-id-type="publisher-id">biology</journal-id>
    <journal-title-group>
      <journal-title>Biology</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2079-7737</issn>
    <publisher>
      <publisher-name>MDPI</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">4009805</article-id>
    <article-id pub-id-type="doi">10.3390/biology1030895</article-id>
    <article-id pub-id-type="publisher-id">biology-01-00895</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>FLEXBAR—Flexible Barcode and Adapter Processing for Next-Generation Sequencing Platforms</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Dodt</surname>
          <given-names>Matthias</given-names>
        </name>
        <xref ref-type="author-notes" rid="fn1-biology-01-00895">†</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Roehr</surname>
          <given-names>Johannes T.</given-names>
        </name>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Ahmed</surname>
          <given-names>Rina</given-names>
        </name>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Dieterich</surname>
          <given-names>Christoph</given-names>
        </name>
        <xref rid="c1-biology-01-00895" ref-type="corresp">*</xref>
      </contrib>
    </contrib-group>
    <aff id="af1-biology-01-00895">Bioinformatics in Quantitative Biology, Berlin Institute for Medical Systems Biology at the Max Delbrück Centre for Molecular Medicine, Robert-Rössle-Straße 10, 13125 Berlin, Germany; E-Mails: <email>matthias.dodt@googlemail.com</email> (M.D.); <email>johannes.roehr@mdc-berlin.de</email> (J.T.R.); <email>rina.ahmed@mdc-berlin.de</email> (R.A.)</aff>
    <author-notes>
      <fn id="fn1-biology-01-00895">
        <label>†</label>
        <p>Current address: XION Medical GmbH, Pankstraße 8-10, D-13127 Berlin, Germany.</p>
      </fn>
      <corresp id="c1-biology-01-00895"><label>*</label>Author to whom correspondence should be addressed; E-Mail: <email>christoph.dieterich@mdc-berlin.de</email>; Tel.: +49-30-9406-4235; Fax: +49-30-9406-3068.</corresp>
    </author-notes>
    <pub-date pub-type="epub">
      <day>14</day>
      <month>12</month>
      <year>2012</year>
    </pub-date>
    <pub-date pub-type="collection">
      <month>12</month>
      <year>2012</year>
    </pub-date>
    <volume>1</volume>
    <issue>3</issue>
    <fpage>895</fpage>
    <lpage>905</lpage>
    <history>
      <date date-type="received">
        <day>28</day>
        <month>8</month>
        <year>2012</year>
      </date>
      <date date-type="rev-recd">
        <day>21</day>
        <month>9</month>
        <year>2012</year>
      </date>
      <date date-type="accepted">
        <day>07</day>
        <month>12</month>
        <year>2012</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© 2012 by the authors; licensee MDPI, Basel, Switzerland.</copyright-statement>
      <copyright-year>2012</copyright-year>
      <license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/3.0/">
        <license-p><!--CREATIVE COMMONS-->This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution license (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/3.0/">http://creativecommons.org/licenses/by/3.0/</ext-link>).</license-p>
      </license>
    </permissions>
    <abstract>
      <p>Quantitative and systems biology approaches benefit from the unprecedented depth of next-generation sequencing. A typical experiment yields millions of short reads, which oftentimes carry particular sequence tags. These tags may be: (a) specific to the sequencing platform and library construction method (e.g., adapter sequences); (b) have been introduced by experimental design (e.g., sample barcodes); or (c) constitute some biological signal (e.g., splice leader sequences in nematodes). Our software FLEXBAR enables accurate recognition, sorting and trimming of sequence tags with maximal flexibility, based on exact overlap sequence alignment. The software supports data formats from all current sequencing platforms, including color-space reads. FLEXBAR maintains read pairings and processes separate barcode reads on demand. Our software facilitates the fine-grained adjustment of sequence tag detection parameters and search regions. FLEXBAR is a multi-threaded software and combines speed with precision. Even complex read processing scenarios might be executed with a single command line call. We demonstrate the utility of the software in terms of read mapping applications, library demultiplexing and splice leader detection. FLEXBAR and additional information is available for academic use from the website: <uri xlink:type="simple" xlink:href="http://sourceforge.net/projects/flexbar/">http://sourceforge.net/projects/flexbar/</uri>.</p>
    </abstract>
    <kwd-group>
      <kwd>high-throughput sequencing</kwd>
      <kwd>demultiplexing</kwd>
      <kwd>trimming</kwd>
      <kwd>clipping</kwd>
      <kwd>quality control</kwd>
    </kwd-group>
  </article-meta>
</front>
<body>
  <sec>
    <title>1. Introduction</title>
    <p>Next-generation sequencing technologies, such as Illumina Solexa, Applied Biosystems SOLiD or Roche 454, produce millions of short reads by massive parallel sequencing. All of these approaches introduce sequence tags, which are typically ligated to the pool of target sequences. Sequence tags oftentimes overlap with the sequenced region and should be removed prior to downstream read processing. Evidently, adapter sequences may confound any subsequent analysis step. A simple positional read trimming or quality-based read trimming is oftentimes not sufficient to rule out mis-assemblies or low mapping rates. In general, tag sequences could be located anywhere within a given short sequencing read.</p>
    <p>Adapter sequences are inherently used by every sequencing platform to initiate sequencing or for other internal processing purposes. As a matter of fact, short reads from any sequencing platform may contain adapters or fragments of adapters. Recent increases in sequencing throughput facilitate pooling of samples (multiplexing) in one sequencing reaction by introducing barcode sequences. Barcode sequences are used to tag a particular origin in a complex mixture of short reads. Several read processing scenarios emerge from using adapter and barcode sequences.</p>
    <p>The Flexible Barcode and Adapter Remover (FLEXBAR) software unifies high-processing speed, versatile approaches to basic filtering, quality trimming, demultiplexing, barcode and adapter removal. It supports all current next-generation sequencing platforms, e.g., adapter sequences may be removed in letter-space or color-space. FLEXBAR is not limited in read length and may be well suited for processing third-generation reads. In the following, we will discuss the implementation, program features and compare them to other state-of-the-art software solutions.</p>
  </sec>
  <sec>
    <title>2. Material and Methods</title>
    <p>The rich feature set of FLEXBAR addresses many potential applications in single-end, paired-end and mate-pair sequencing. Typical workflows involve a quality-clipping step, demultiplexing, which potentially includes barcode trimming, followed by a separate adapter trimming step. All of these steps may be executed within the same FLEXBAR program call (see <xref ref-type="supplementary-material" rid="biology-01-00895-s001">Figure S1</xref>). The default parameters of FLEXBAR are optimized to deliver good results (especially Illumina and SOLiD) for a large number of scenarios (see benchmarks). However, customization of settings might improve results for specific applications.</p>
    <p>FLEXBAR has been implemented in C++ using the Seqan library [<xref rid="B1-biology-01-00895" ref-type="bibr">1</xref>]. Multi-threading has been implemented with the Intel Threading Building Blocks library [<xref rid="B2-biology-01-00895" ref-type="bibr">2</xref>]. FLEXBAR detects target sequences by overlap sequence alignment, based on the Needleman-Wunsch algorithm [<xref rid="B3-biology-01-00895" ref-type="bibr">3</xref>]. An overlap (or semi-global) alignment uses the same recurrence relations as a global alignment but does not penalize gaps at the end of the alignment (<xref ref-type="fig" rid="biology-01-00895-f001">Figure 1</xref>A and <xref ref-type="supplementary-material" rid="biology-01-00895-s001">Figure S2</xref>). To this end, the first row and column of the dynamic programming matrix are initialized with zeros and the alignment score maximum is searched in the last row and column of the alignment matrix.</p>
    <p>FLEXBAR offers maximal flexibility in target sequence recognition by considering base substitutions, insertions and deletions. Moreover, the user is free to choose all alignment scoring parameters, the minimal overlap and a threshold on sequence similarity. Default parameters are preset for these parameters and were chosen to work best for Illumina HiSeq and ABI SOLiD sequencing data. A simple direct matching to expected sequence tags might not be adequate for sequencing platfoms with elevated indel error rates. Furthermore, letter- as well as color-space encoded reads can be processed (<xref ref-type="fig" rid="biology-01-00895-f001">Figure 1</xref>A). FLEXBAR supports five sequence trimming modes, which cover most sequencing applications: (1) LEFT, (2) LEFT-TAIL, (3) RIGHT, (4) RIGHT-TAIL or (5) ANY(where) trimming (<xref ref-type="fig" rid="biology-01-00895-f001">Figure 1</xref>B). These modes can be independently combined for adapter and barcode sequence recognition in single or paired-end data. Barcode reads might be even separated from the actual single or paired-end read set (as in Illumina TruSeq<sup>TM</sup> sequencing).</p>
    <fig id="biology-01-00895-f001" position="float">
      <label>Figure 1</label>
      <caption>
        <p>(<bold>A</bold>) Examples of overlap alignments in different sequence encodings. Sequence space and trim mode are denoted under the respective alignments. Red subsequences will be removed from the read sequence. (<bold>B</bold>) Graphical representation of sequence trimming modes. The gray bar depicts the currently processed sequencing read (length n). The best alignment of an adapter sequence (length m; shown in red) might be located anywhere in the demarcated region (arrow + adapter region), which differs according to the selected trim mode (see main text). The name of the trim mode refers to the part of the short read that is removed: in left modes the 5' end is trimmed, right refers to the 3' end, otherwise the shorter end is removed.</p>
      </caption>
      <graphic xlink:href="biology-01-00895-g001"/>
    </fig>
    <sec>
      <title>2.1. Trimming Modes</title>
      <p>FLEXBAR offers five trimming modes (<xref ref-type="fig" rid="biology-01-00895-f001">Figure 1</xref>B and <xref ref-type="supplementary-material" rid="biology-01-00895-s001">Figure S2</xref>). Modes should be selected based on the experimental setup. We will explain the different trim-end modes based on a short read of length n and an adapter sequence of length m. All trimming modes are available for barcode (option --barcode-trim-end) and adapter (option --adapter-trim-end) sequence recognition. We assume that m &lt; n holds.</p>
      <list list-type="order">
        <list-item>
          <p><bold>ANY:</bold> The adapter sequence is searched anywhere within the short read. In case of an adapter match, the longer non-matching substring of the read is retained.</p>
        </list-item>
        <list-item>
          <p><bold>LEFT:</bold> The matching adapter sequence is located in a prefix pref[1..k] of the read with k ≤ n. The corresponding short read prefix including the adapter sequence is removed.</p>
        </list-item>
        <list-item>
          <p><bold>RIGHT:</bold> The matching adapter sequence is located in a suffix suff[(n-k)..n] of the short read with k &lt; n. The corresponding short read suffix including the adapter sequence is removed. </p>
        </list-item>
        <list-item>
          <p><bold>LEFT_TAIL:</bold> This is a special case of mode 2. We only consider the first m bases/colors of the short read. The read is trimmed from the 5' end.</p>
        </list-item>
        <list-item>
          <p><bold>RIGHT_TAIL:</bold> This is a special case of mode 3. We only consider the last m bases/colors of the short read. The read is trimmed from the 3' end.</p>
        </list-item>
      </list>
      <p>FLEXBAR parameters default to using the ANY mode for barcode sequences and the RIGHT mode for adapter sequences.</p>
    </sec>
    <sec>
      <title>2.2. Quality Clipping and Read Filtering</title>
      <p>There are very good reasons why short reads should undergo a quality control step. Many sequencing platforms provide Phred-scaled quality scores for individual base calls. FLEXBAR provides multiple options to filter reads and target read quality: (1) --max-uncalled sets a threshold on the allowed number of unidentified bases within a given read. No uncalled bases are allowed as per default settings. All reads that exceed this threshold are excluded from barcode and adapter processing. (2) The --pre-trim-left and --pre-trim-right options allow to trim a certain number of bases on the left or right end of short reads. These options are disabled by default. (3) The --pre-trim-phred option trims all read positions from right to left up to the first base/color, that is larger or equal to the given quality score cutoff. This option is disabled per default. (4) The option --post-trim-length specifies the number of bases to which reads are truncated from 3' end after all removal steps have been applied. This option is disabled by default. (5) Finally, the --min-readlength option defines the minimal read length (set to 18 nucleotides per default). All reads that are at least as long as the minimal read length are retained. Reads that are too short are discarded or written to a special output file, since they might not align unambiguously in subsequent read mapping.</p>
    </sec>
    <sec>
      <title>2.3. Program Usage</title>
      <p>A typical use case starts by defining the set of input reads and the read format:
<list list-type="simple"><list-item><p>flexbar --target &lt;STRING&gt; --format &lt;STRING&gt; --reads &lt;FILE&gt; [--reads2 &lt;FILE&gt;]</p></list-item><list-item><p><italic><underline>Example:</underline></italic> flexbar --target processed --format fastq-i1.3 --reads single_end.fastq</p></list-item></list></p>
      <p>Option --target defines the prefix for the output filenames. Option --format selects the read format and, if appropriate, base call quality encoding. If a second read set is specified (option --reads2), paired-end reads are processed and read pairings are maintained in the output. Barcode and/or adapter sequences can be defined by the following options:
<list list-type="simple"><list-item><p>--adapters &lt;FASTA FILE&gt; or --adapter-seq &lt;STRING&gt;</p></list-item><list-item><p>--barcodes &lt;FASTA FILE&gt;</p></list-item></list></p>
      <p>The option --adapter-seq is a convenience option if only one adapter sequence needs to be specified. Barcode and adapter sequences may reside within the same read, but could be also disjunct depending on the sequencing setup. For example, barcode reads in the Illumina TruSeq<sup>TM</sup> system are represented by a second or third read set, which is sequenced independently from the actual single- or paired-end reads. Barcode detection preceds the adapter removal step in FLEXBAR. The user may specify the location of the barcode reads by setting the --barcode-reads option. If this option is not set, barcodes are assumed to reside within the --reads read set. Please note that neither barcode detection nor adapter removal is a mandatory step in FLEXBAR. The available trimming modes are selected by
<list list-type="simple"><list-item><p>--adapter-trim-end &lt;ANY|LEFT|LEFT_TAIL|<bold>RIGHT</bold>|RIGHT_TAIL&gt; and</p></list-item><list-item><p>--barcode-trim-end &lt;<bold>ANY</bold>|LEFT|LEFT_TAIL|RIGHT|RIGHT_TAIL&gt;</p></list-item></list></p>
      <p>Default values are shown in bold characters.</p>
      <p>The user can adjust how the barcode is detected by refining alignment parameters and whether the barcode is removed or not (option --barcode-keep) from the assigned reads. Adapter removal is effected in a similar manner yet controlled by an entirely different set of parameters: --adapter-* options. This separation of parameters allows for setting more stringent parameters for barcode detection than for adapter sequence detection. For example, this could be motivated by asking for a higher specificity in assigning barcodes and, at the same time, being more sensitive in adapter sequence recognition. Finally, all FLEXBAR processing steps are outlined in <xref ref-type="supplementary-material" rid="biology-01-00895-s001">Figure S1</xref> and command line parameters plus default settings are output in detail by calling the help page of the program (option --help).</p>
    </sec>
  </sec>
  <sec>
    <title>3. Results and Discussion</title>
    <p>Numerous competing solutions exist for short read processing with an emphasis on adapter trimming and barcode recognition. We conducted a survey of the recent literature and selected the FASTX toolkit [<xref rid="B4-biology-01-00895" ref-type="bibr">4</xref>] as a solution, which is widely accepted by the community. CUTADAPT [<xref rid="B5-biology-01-00895" ref-type="bibr">5</xref>] and BTRIM [<xref rid="B6-biology-01-00895" ref-type="bibr">6</xref>] were selected as recently published solutions. <xref ref-type="table" rid="biology-01-00895-t001">Table 1</xref> is a non-comprehensive list of program features that contrasts FLEXBAR with the other three programs. FLEXBAR is the only software with independent barcode and adapter processing and extensive logging features, e.g., for read alignments. Furthermore, only FLEXBAR preserves read pairs in paired-end or mate-pair data sets, and supports separate barcode reads.</p>
    <table-wrap id="biology-01-00895-t001" position="float">
      <object-id pub-id-type="pii">biology-01-00895-t001_Table 1</object-id>
      <label>Table 1</label>
      <caption>
        <p>Comparison of FLEXBAR features with other software.</p>
      </caption>
      <table frame="hsides" rules="groups">
        <thead>
          <tr>
            <th align="center" valign="middle" rowspan="1" colspan="1">Feature</th>
            <th align="center" valign="middle" rowspan="1" colspan="1">FLEXBAR</th>
            <th align="center" valign="middle" rowspan="1" colspan="1">FASTX</th>
            <th align="center" valign="middle" rowspan="1" colspan="1">BTRIM</th>
            <th align="center" valign="middle" rowspan="1" colspan="1">CUTADAPT</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td align="center" valign="middle" rowspan="1" colspan="1">Color-space support</td>
            <td align="center" valign="middle" rowspan="1" colspan="1">Yes</td>
            <td align="center" valign="middle" rowspan="1" colspan="1">No</td>
            <td align="center" valign="middle" rowspan="1" colspan="1">No</td>
            <td align="center" valign="middle" rowspan="1" colspan="1">Yes</td>
          </tr>
          <tr>
            <td align="center" valign="middle" rowspan="1" colspan="1">Simultaneous barcode &amp; adapter processing</td>
            <td align="center" valign="middle" rowspan="1" colspan="1">Yes</td>
            <td align="center" valign="middle" rowspan="1" colspan="1">No</td>
            <td align="center" valign="middle" rowspan="1" colspan="1">No</td>
            <td align="center" valign="middle" rowspan="1" colspan="1">No</td>
          </tr>
          <tr>
            <td align="center" valign="middle" rowspan="1" colspan="1">Preservation of read pairings <sup>a</sup></td>
            <td align="center" valign="middle" rowspan="1" colspan="1">Yes</td>
            <td align="center" valign="middle" rowspan="1" colspan="1">No</td>
            <td align="center" valign="middle" rowspan="1" colspan="1">No</td>
            <td align="center" valign="middle" rowspan="1" colspan="1">No</td>
          </tr>
          <tr>
            <td align="center" valign="middle" rowspan="1" colspan="1">Alignment logging <sup>b</sup></td>
            <td align="center" valign="middle" rowspan="1" colspan="1">Yes</td>
            <td align="center" valign="middle" rowspan="1" colspan="1">No</td>
            <td align="center" valign="middle" rowspan="1" colspan="1">No</td>
            <td align="center" valign="middle" rowspan="1" colspan="1">No</td>
          </tr>
          <tr>
            <td align="center" valign="middle" rowspan="1" colspan="1">Separate barcode reads <sup>c</sup></td>
            <td align="center" valign="middle" rowspan="1" colspan="1">Yes</td>
            <td align="center" valign="middle" rowspan="1" colspan="1">No</td>
            <td align="center" valign="middle" rowspan="1" colspan="1">No</td>
            <td align="center" valign="middle" rowspan="1" colspan="1">No</td>
          </tr>
        </tbody>
      </table>
      <table-wrap-foot>
        <fn>
          <p><sup>a</sup>: read pairs are output in sync; <sup>b</sup>: log files with individual read alignments; <sup>c</sup>: 1/2 + 1 sequencing format (e.g., TruSeq single or paired-end sequencing plus one extra barcode read).</p>
        </fn>
      </table-wrap-foot>
    </table-wrap>
    <p>We evaluated the performance of FLEXBAR by considering four typical use case scenarios. Benchmark 1 focusses on removing adapters from a short read sequencing data set (short read archive (SRA) accession: SRR014966). Briefly, small RNAs from <italic>C. elegans</italic> [<xref rid="B7-biology-01-00895" ref-type="bibr">7</xref>] have been sequenced on the Illumina GA platform, are processed by all four aforementioned programs and mapped back to the genome with the Bowtie aligner (end-to-end alignment). Benchmark 2 deals with a second typical use case: complex processing of a paired-end RNA-seq read set (2 × 100 nt; SRA accession: SRR504324). Benchmark 3 simulates barcode reads with known errors (ground truth) and assesses the ability of FLEXBAR to faithfully recover the correct read assignment. Benchmark 4 is a combination of benchmarks 1 and 3 yet in color space using a recently published data set (SRA accession: SRP008969). Benchmark 4 is motivated by a special application in molecular biology, the detection of trans-splicing events. We use FLEXBAR to recognize splice leader sequences in a nematode data set [<xref rid="B8-biology-01-00895" ref-type="bibr">8</xref>].</p>
    <sec>
      <title>3.1. Benchmark 1—Adapter Removal from miRNA Short Reads</title>
      <p>Small RNA sequencing is a widely used tool to discover small ncRNAs in general and microRNAs in particular. Typically, small RNA-seq data have read lengths that exceed the size of the target molecules (~21–22 nt for miRNAs). Data set SRR014966 contains short reads of 36 bp. These reads were subject to adapter removal by the four aforementioned software tools. We assessed the tool performance by mapping the retained reads (length ≥ 20 bp) to the <italic>C. elegans</italic> genome using the Bowtie aligner (version 0.12.8). We used the number of uniquely mapped reads and the number of bases contained in uniquely mapped reads as objective performance criteria (<xref ref-type="fig" rid="biology-01-00895-f002">Figure 2</xref>). Clearly, FASTX and FLEXBAR are the leading solutions in this comparison with FLEXBAR being marginally better than FASTX (69,705,074 <italic>vs</italic>. 69,606,037 uniquely mapped base pairs). BTRIM and CUTADAPT produce significantly less output that can be later uniquely aligned to the genome. Just about 85% of FLEXBAR’s performance (as expressed in uniquely mapped base pairs) is reached by CUTADAPT and only 26% by BTRIM. Exact numbers for <xref ref-type="fig" rid="biology-01-00895-f002">Figure 2</xref>A and command line options that were used in this evaluation are listed in <xref ref-type="supplementary-material" rid="biology-01-00895-s001">Table S1</xref> and <xref ref-type="supplementary-material" rid="biology-01-00895-s001">Table S2</xref>, in supplementary material. FLEXBAR is the best performing solution as expressed by the number of unique/total mapped reads.</p>
      <p>Another aspect of a performance evaluation is the required memory and runtime to arrive at these results (see <xref ref-type="fig" rid="biology-01-00895-f003">Figure 3</xref>). BTRIM has the lowest resource consumption. FLEXBAR consumes only little more runtime on one core (519 seconds) than CUTADAPT (445 seconds) and FASTX (424 seconds). However, FLEXBAR scales favorable if multiple threads are being used. The observed memory consumption is less of an issue on modern compute systems as indicated by <xref ref-type="fig" rid="biology-01-00895-f003">Figure 3</xref>. FLEXBAR advantages become even clearer in the second benchmark when intricate processing steps will be performed on the same read set.</p>
      <fig id="biology-01-00895-f002" position="float">
        <label>Figure 2</label>
        <caption>
          <p>(<bold>A</bold>) Number of returned reads as stratified by subsequent read mapping with Bowtie. Mapping results of untreated reads (Bowtie only) are shown in the bottom most row (control case). The respective adapter removal tools did not return all reads, as some did not pass the respective output filters. (<bold>B</bold>) Number of bases that are contained in all uniquely mappable reads (blue part in A).</p>
        </caption>
        <graphic xlink:href="biology-01-00895-g002"/>
      </fig>
      <fig id="biology-01-00895-f003" position="float">
        <label>Figure 3</label>
        <caption>
          <p>Compute time and memory requirements for FLEXBAR and competitors in benchmark 1. FLEXBAR’s performance is listed for 1, 2 and 4 threads. The evaluation was conducted on a dedicated machine with 2 AMD Opteron 2356 processors, each having 4 cores at 2.3 GHz.</p>
        </caption>
        <graphic xlink:href="biology-01-00895-g003"/>
      </fig>
    </sec>
    <sec>
      <title>3.2. Benchmark 2—Trimming and Adapter Removal from Paired-End RNA-seq Data Set</title>
      <p>To highlight the conceptional advantages of performing preprocessing steps simultaneously, we present a typical trimming scenario in which several steps are combined. As FASTX is the competitor that showed best results in benchmark 1, we conduct a head-to-head comparison on a paired-end transcriptome dataset (SRA accession: SRR504324). We applied the following series of processing steps on this read set:
<list list-type="simple"><list-item><label>1)</label><p>Filtering reads with uncalled bases</p></list-item><list-item><label>2)</label><p>Trimming a fixed number of bases on the 5' end of reads</p></list-item><list-item><label>3)</label><p>Phred score based trimming from 3' end of reads</p></list-item><list-item><label>4)</label><p>Removal of polyA and polyT tails</p></list-item><list-item><label>5)</label><p>Retention of reads with a minimal read length</p></list-item></list></p>
      <p>FLEXBAR can perform all these steps within a single program call; whereas several programs of the FASTX toolkit have to be chained together to realize the same processing steps (see <xref ref-type="supplementary-material" rid="biology-01-00895-s001">Table S3</xref> for command line calls). For example, clipping homopolymer runs of As and Ts requires two program calls instead of one as only one adapter can be specified in FASTX.</p>
      <p>More problematic is the fact that FASTX does not handle paired reads natively. All read processing steps have to be performed independently on both read sets yet can be carried out concurrently. We avoid time-consuming file operations by connecting the four required FASTX program calls with UNIX pipes. This is equivalent to allocating eight CPU cores (4 programs × 2 read sets). FASTX and FLEXBAR were allowed to request up to eight CPU cores for this benchmark.</p>
      <p>FLEXBAR required only 12 minutes and 26 seconds to complete all processing steps on the whole paired-end read data set. To the contrary, FASTX required 22 minutes and 3 seconds to complete the same challenge with the same compute resources. Most importantly, read pairings are not preserved by the FASTX preprocessing pipeline. Paired reads are not neccesarily kept in sync in the corresponding FASTX output files. This is automatically guaranteed by FLEXBAR and requires no additional software, as is the case for FASTX.</p>
    </sec>
    <sec>
      <title>3.3. Benchmark 3—Barcode Recognition</title>
      <p>Another frequent application of FLEXBAR is demultiplexing in arbitrary barcoding settings. To this end, we have designed an in silico experiment where 8 different 7-mer Illumina TruSeq<sup>TM</sup> barcodes are attached to the 5' end of “real” reads from benchmark 1 (SRR014966). We have employed the Mason [<xref rid="B9-biology-01-00895" ref-type="bibr">9</xref>] read simulator to generate barcode reads based on an Illumina error model including insertions, deletions and substitutions. We evenly distributed the set of 8 million barcodes over the randomly selected set of 8 million “real” reads. FLEXBAR was then executed on this data set with slightly modified parameters (default parameters are shown in brackets): --max-uncalled 7 (0), --barcode-trim-end LEFT_TAIL (ANY) and --barcode-threshold 2 (1), to allow one mismatch with respect to barcode lengths. The alignment score threshold translates into one tolerated error over the entire 7-mer barcode. We compared FLEXBAR and FASTX (fastx_barcode_splitter.pl tool) on this semi-synthetic read set. Both programs produce exactly the same results: 6 single reads out of 8 million reads were falsely assigned and 86,839 reads could not be assigned to a barcode at all. Consequently, FLEXBAR and FASTX are on a par in our barcode assignment benchmark.</p>
    </sec>
    <sec>
      <title>3.4. Benchmark 4—C. elegans Color-Space Read Assignment to Splice Leaders</title>
      <p>An interesting phenomenon in mRNA processing is trans-splicing. Herein, two mRNA fragments are fused that do not orginate from the same genomic locus. Maxwell <italic>et al</italic>. [<xref rid="B8-biology-01-00895" ref-type="bibr">8</xref>] studied, among others, trans-splicing in the nematode <italic>C. elegans</italic>. They mention the two most relevant splice leader (SL) sequences in their manuscript: “Reads that mapped after stripping and began with GGTTTAATTACCCAAGTTTGAG were counted as being spliced to SL1, whereas those that started with GGTTTTAACCCAGTTACTCAAG were counted as being spliced to SL2”. This is a rather strict way of defining trans-splicing events at the cost of sensitivity. Our third benchmark is an error-tolerant approach to the detection of trans-splicing events. We obtained strand-specific color-space reads of two replicate experiments (SRA accessions: SRR353594 and SRR353599). The library preparation protocol preserves strandedness in the original orientation of transcription (from 5' to 3' end of the transcript). Because of this, splice leader sequences are expected at the 5' end of color-space reads.</p>
      <p>We used the LEFT_TAIL trimming option with different stringency settings to assign trans-splicing events to individual reads and to trim off the identified splice leader sequences for subsequent read mapping. We estimated the false discovery rate of this approach by using the same parameters but with the wrong trimming end (RIGHT_TAIL trimming). <xref ref-type="fig" rid="biology-01-00895-f004">Figure 4</xref> depicts the number of all reads that were positively screened for splice leaders versus the number of false discoveries. FLEXBAR offers a flexible way of splice leader sequence recognition. The proportion of false discoveries can be fine-tuned with program parameters. The ratio of all discoveries versus false discoveries is highest for the {20,0} parameter set. Command line calls are listed in <xref ref-type="supplementary-material" rid="biology-01-00895-s001">Table S4</xref>. For read count details see <xref ref-type="supplementary-material" rid="biology-01-00895-s001">Table S5</xref>.</p>
    </sec>
  </sec>
  <sec>
    <title>4. Conclusions</title>
    <p>We have introduced FLEXBAR as a versatile solution to three critical steps in any next-generation read processing pipeline: basic and quality-based clipping, barcode recognition and adapter sequence trimming. FLEXBAR covers a much larger range of sequencing platforms and scenarios, formats and features than other tested solutions, and provides detailed output statistics. It performed slightly better than FASTX, which was the best of all considered competitors in removing adapters from an Illumina short read data set, as measured by the number of uniquely mappable reads and bases. While it consumed only little more runtime on one processor core than FASTX, FLEXBAR scales favorable when using multiple threads. As pinpointed by a paired-end RNA-seq example application, FLEXBAR handles four processing steps in one program call and requires almost 50% less runtime than FASTX. Read pairings are, as a matter of course, preserved in all output files. Furthermore, we demonstrated how faithfully our software recognizes barcodes and avoids false assignments. Finally, we could show that FLEXBAR is also useful for unconventional applications, such as identifying trans-splicing events in a color-space transcriptome data set from <italic>C. elegans</italic>.</p>
    <fig id="biology-01-00895-f004" position="float">
      <label>Figure 4</label>
      <caption>
        <p>Total number of identified splice leader sequences (light gray bars) and number of estimated false discoveries (black bars) for SL1 and SL2 in data set SRR353594. The following parameters were varied: --barcode-min-overlap {10,15,20}, --barcode-threshold {0,1,2} and --barcode-gap-cost was set to -100. All reads were either assigned to SL1 or SL2 if they passed the alignment criteria (preference is given to SL1 in case of equally scoring alignments). The ratio of all discoveries versus false discoveries is highest for the {20,0} parameter set.</p>
      </caption>
      <graphic xlink:href="biology-01-00895-g004"/>
    </fig>
  </sec>
</body>
<back>
  <ack>
    <title>Acknowledgments</title>
    <p>We thank the ever-expanding user community of FLEXBAR (formerly known as FAR) for helpful comments, bug reports and valuable suggestions. We also thank Chris Bielow for his support in optimizing the program.</p>
    <p>As part of the Berlin Institute for Medical Systems Biology at the MDC, the research group of C.D. is funded by the Federal Ministry for Education and Research (BMBF) and the Senate of Berlin, Berlin, Germany. R.A. is funded by the MDC/NYU PhD program. J.T.R. is funded by the Leibnitz society through the GENART consortium.</p>
  </ack>
  <app-group>
    <app>
      <title>Supplementary Files</title>
      <supplementary-material content-type="local-data" id="biology-01-00895-s001">
        <label>Supplementary File 1</label>
        <caption>
          <p>Supplementary Material (PDF, 147 KB)</p>
        </caption>
        <media xlink:href="biology-01-00895-s001.pdf">
          <caption>
            <p>Click here for additional data file.</p>
          </caption>
        </media>
      </supplementary-material>
    </app>
  </app-group>
  <ref-list>
    <title>References</title>
    <ref id="B1-biology-01-00895">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Döring</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Weese</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Rausch</surname>
            <given-names>T.</given-names>
          </name>
          <name>
            <surname>Reinert</surname>
            <given-names>K.</given-names>
          </name>
        </person-group>
        <article-title>SeqAn an efficient, generic C++ library for sequence analysis</article-title>
        <source>BMC Bioinformatics</source>
        <year>2008</year>
        <volume>9</volume>
        <fpage>11</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-9-11</pub-id>
        <pub-id pub-id-type="pmid">18184432</pub-id>
      </element-citation>
    </ref>
    <ref id="B2-biology-01-00895">
      <label>2.</label>
      <element-citation publication-type="webpage">
        <article-title>TBB Library</article-title>
        <comment>Available online:<ext-link ext-link-type="uri" xlink:href="http://www.threadingbuildingblocks.org/">http://www.threadingbuildingblocks.org/</ext-link></comment>
        <date-in-citation>(accessed on 14 August 2012)</date-in-citation>
      </element-citation>
    </ref>
    <ref id="B3-biology-01-00895">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Needleman</surname>
            <given-names>S.B.</given-names>
          </name>
          <name>
            <surname>Wunsch</surname>
            <given-names>C.D.</given-names>
          </name>
        </person-group>
        <article-title>A general method applicable to the search for similarities in the amino acid sequence of two proteins</article-title>
        <source>J. Mol. Biol.</source>
        <year>1970</year>
        <volume>48</volume>
        <fpage>443</fpage>
        <lpage>453</lpage>
        <pub-id pub-id-type="doi">10.1016/0022-2836(70)90057-4</pub-id>
        <pub-id pub-id-type="pmid">5420325</pub-id>
      </element-citation>
    </ref>
    <ref id="B4-biology-01-00895">
      <label>4.</label>
      <element-citation publication-type="webpage">
        <article-title>FASTX Toolkit</article-title>
        <comment>Available online:<ext-link ext-link-type="uri" xlink:href="http://hannonlab.cshl.edu/fastx_toolkit/">http://hannonlab.cshl.edu/fastx_toolkit/</ext-link></comment>
        <date-in-citation>(accessed on 25 July 2012)</date-in-citation>
      </element-citation>
    </ref>
    <ref id="B5-biology-01-00895">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Martin</surname>
            <given-names>M.</given-names>
          </name>
        </person-group>
        <article-title>Cutadapt removes adapter sequences from high-throughput sequencing reads</article-title>
        <source>EMBnet. J.</source>
        <year>2011</year>
        <volume>17</volume>
        <fpage>10</fpage>
        <lpage>12</lpage>
      </element-citation>
    </ref>
    <ref id="B6-biology-01-00895">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kong</surname>
            <given-names>Y.</given-names>
          </name>
        </person-group>
        <article-title>Btrim: A fast, lightweight adapter and quality trimming program for next-generation sequencing technologies</article-title>
        <source>Genomics</source>
        <year>2011</year>
        <volume>98</volume>
        <fpage>152</fpage>
        <lpage>153</lpage>
        <pub-id pub-id-type="doi">10.1016/j.ygeno.2011.05.009</pub-id>
        <pub-id pub-id-type="pmid">21651976</pub-id>
      </element-citation>
    </ref>
    <ref id="B7-biology-01-00895">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kato</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>de Lencastre</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Pincus</surname>
            <given-names>Z.</given-names>
          </name>
          <name>
            <surname>Slack</surname>
            <given-names>F.J.</given-names>
          </name>
        </person-group>
        <article-title>Dynamic expression of small non-coding RNAs, including novel microRNAs and piRNAs/21U-RNAs, during Caenorhabditis elegans development</article-title>
        <source>Genome Biol.</source>
        <year>2009</year>
        <volume>10</volume>
        <fpage>R54</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2009-10-5-r54</pub-id>
        <pub-id pub-id-type="pmid">19460142</pub-id>
      </element-citation>
    </ref>
    <ref id="B8-biology-01-00895">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Maxwell</surname>
            <given-names>C.</given-names>
          </name>
          <name>
            <surname>Antoshechkin</surname>
            <given-names>I.</given-names>
          </name>
          <name>
            <surname>Kurhanewicz</surname>
            <given-names>N.</given-names>
          </name>
          <name>
            <surname>Belsky</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Baugh</surname>
            <given-names>L.R.</given-names>
          </name>
        </person-group>
        <article-title>Nutritional control of mRNA isoform expression during developmental arrest and recovery in <italic>C. elegans</italic></article-title>
        <source>Genome Res.</source>
        <year>2012</year>
        <pub-id pub-id-type="doi">10.1101/gr.133587.111</pub-id>
      </element-citation>
    </ref>
    <ref id="B9-biology-01-00895">
      <label>9.</label>
      <element-citation publication-type="webpage">
        <article-title>Mason</article-title>
        <comment>Available online:<ext-link ext-link-type="uri" xlink:href="http://www.seqan.de/projects/mason/">http://www.seqan.de/projects/mason/</ext-link></comment>
        <date-in-citation>(accessed on 22 August 2012)</date-in-citation>
      </element-citation>
    </ref>
  </ref-list>
</back>

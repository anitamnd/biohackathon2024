<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">7214034</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btaa073</article-id>
    <article-id pub-id-type="publisher-id">btaa073</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Original Papers</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Genome Analysis</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title><italic>Coolpup.py:</italic> versatile pile-up analysis of Hi-C data</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">http://orcid.org/0000-0002-4892-4208</contrib-id>
        <name>
          <surname>Flyamer</surname>
          <given-names>Ilya M</given-names>
        </name>
        <xref ref-type="corresp" rid="btaa073-cor1"/>
        <xref ref-type="aff" rid="btaa073-aff1">b1</xref>
        <!--<email>ilya.flyamer@igmm.ed.ac.uk</email>-->
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Illingworth</surname>
          <given-names>Robert S</given-names>
        </name>
        <xref ref-type="aff" rid="btaa073-aff2">b2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Bickmore</surname>
          <given-names>Wendy A</given-names>
        </name>
        <xref ref-type="aff" rid="btaa073-aff1">b1</xref>
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Robinson</surname>
          <given-names>Peter</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <aff id="btaa073-aff1"><label>b1</label><institution>MRC Human Genetics Unit</institution>, Institute of Genetics and Molecular Medicine, The University of Edinburgh, Edinburgh, EH4 2XU, UK</aff>
    <aff id="btaa073-aff2"><label>b2</label><institution>MRC Centre for Regenerative Medicine</institution>, Institute for Regeneration and Repair, The University of Edinburgh, Edinburgh, EH16 4UU, UK</aff>
    <author-notes>
      <corresp id="btaa073-cor1">To whom correspondence should be addressed. <email>ilya.flyamer@igmm.ed.ac.uk</email></corresp>
    </author-notes>
    <pub-date pub-type="ppub">
      <day>15</day>
      <month>5</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2020-01-31">
      <day>31</day>
      <month>1</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>31</day>
      <month>1</month>
      <year>2020</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. -->
    <volume>36</volume>
    <issue>10</issue>
    <fpage>2980</fpage>
    <lpage>2985</lpage>
    <history>
      <date date-type="received">
        <day>03</day>
        <month>10</month>
        <year>2019</year>
      </date>
      <date date-type="rev-recd">
        <day>16</day>
        <month>1</month>
        <year>2020</year>
      </date>
      <date date-type="accepted">
        <day>27</day>
        <month>1</month>
        <year>2020</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2020. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2020</copyright-year>
      <license license-type="cc-by" xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btaa073.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>Hi-C is currently the method of choice to investigate the global 3D organization of the genome. A major limitation of Hi-C is the sequencing depth required to robustly detect loops in the data. A popular approach used to mitigate this issue, even in single-cell Hi-C data, is genome-wide averaging (piling-up) of peaks, or other features, annotated in high-resolution datasets, to measure their prominence in less deeply sequenced data. However, current tools do not provide a computationally efficient and versatile implementation of this approach.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>Here, we describe <italic>coolpup.py—</italic>a versatile tool to perform pile-up analysis on Hi-C data. We demonstrate its utility by replicating previously published findings regarding the role of cohesin and CTCF in 3D genome organization, as well as discovering novel details of Polycomb-driven interactions. We also present a novel variation of the pile-up approach that can aid the statistical analysis of looping interactions. We anticipate that <italic>coolpup.py</italic> will aid in Hi-C data analysis by allowing easy to use, versatile and efficient generation of pile-ups.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p><italic>Coolpup.py</italic> is cross-platform, open-source and free (MIT licensed) software. Source code is available from <ext-link ext-link-type="uri" xlink:href="https://github.com/Phlya/coolpuppy">https://github.com/Phlya/coolpuppy</ext-link> and it can be installed from the Python Packaging Index.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Darwin Trust of Edinburgh</institution>
          </institution-wrap>
        </funding-source>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Medical Research Council University Unit programme grant</institution>
          </institution-wrap>
        </funding-source>
        <award-id>MC_ UU_00007/2</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>MRC Career Development Award</institution>
          </institution-wrap>
        </funding-source>
        <award-id>MR/S007644/1</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>University of Edinburgh Simons Initiative for the Developing Brain</institution>
          </institution-wrap>
        </funding-source>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>SIDB</institution>
          </institution-wrap>
        </funding-source>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Simons Foundation Autism Research Initiative</institution>
            <institution-id institution-id-type="DOI">10.13039/100014370</institution-id>
          </institution-wrap>
        </funding-source>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>SFARI</institution>
            <institution-id institution-id-type="DOI">10.13039/100014370</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>MC_ UU_00007/2</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="6"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction </title>
    <p>Major advances in the study of 3D genome organization have come from the development of a family of Chromosome Conformation Capture (3C) methods (<xref rid="btaa073-B11" ref-type="bibr">Dekker, 2002</xref>). While these all rely on the same principle of <italic>in situ</italic> proximity ligation of cross-linked and digested chromatin, the scope of each method varies depending on experimental processing and the method of quantification of the 3C library (<xref rid="btaa073-B4" ref-type="bibr">Barutcu <italic>et al.</italic>, 2016</xref>). Hi-C, a genome-wide 3C-derivative, is the method of choice to investigate the organization of the whole genome (<xref rid="btaa073-B28" ref-type="bibr">Lieberman-Aiden <italic>et al.</italic>, 2009</xref>; <xref rid="btaa073-B39" ref-type="bibr">Rao <italic>et al.</italic>, 2014</xref>).</p>
    <p>One of the main challenges in Hi-C remains the required sequencing depth due to the extreme complexity of good quality Hi-C libraries. The output of Hi-C is a square matrix of interactions and therefore requires a vastly greater sequencing depth than most sequencing-based approaches that simply look for enrichment of reads linearly along the genome (<xref rid="btaa073-B26" ref-type="bibr">Lajoie <italic>et al.</italic>, 2015</xref>). This limits the resolution at which genomes can be analysed in 3D, since going beyond ∼5 kb resolution requires billions of read pairs for a mammalian genome.</p>
    <p>Looping interactions are among the most interesting features that can be studied using Hi-C. Chromatin loops bring distal regions in the genome into close proximity and are manifest in Hi-C data as foci of increased interaction frequency (<xref rid="btaa073-B39" ref-type="bibr">Rao <italic>et al.</italic>, 2014</xref>). The majority of loops identified in Hi-C data from mammalian cells correspond to CTCF/cohesin-associated interactions, created by loop extrusion (<xref rid="btaa073-B15" ref-type="bibr">Fudenberg <italic>et al.</italic>, 2016</xref>; <xref rid="btaa073-B16" ref-type="bibr">Gassler <italic>et al.</italic>, 2017</xref>; <xref rid="btaa073-B43" ref-type="bibr">Sanborn <italic>et al.</italic>, 2015</xref>). CTCF/cohesin-associated loops are closely related to topologically associating domains (TADs), which in most cases are encompassed in a loop, and which can in turn contain loops. TADs are suggested to constrain enhancer-promoter communication in some cases (<xref rid="btaa073-B14" ref-type="bibr">Franke <italic>et al.</italic>, 2016</xref>; <xref rid="btaa073-B29" ref-type="bibr">Lupiáñez <italic>et al.</italic>, 2015</xref>; <xref rid="btaa073-B50" ref-type="bibr">Williamson <italic>et al.</italic>, 2019</xref>) and might be related to genome stability (<xref rid="btaa073-B7" ref-type="bibr">Canela <italic>et al.</italic>, 2017</xref>, <xref rid="btaa073-B8" ref-type="bibr">2019</xref>), while some loops have been suggested to correspond to enhancer-promoter contacts (<xref rid="btaa073-B39" ref-type="bibr">Rao <italic>et al.</italic>, 2014</xref>). In addition, distal polycomb sites can be brought together in ‘loops’ (<xref rid="btaa073-B23" ref-type="bibr">Joshi <italic>et al.</italic>, 2015</xref>; <xref rid="btaa073-B31" ref-type="bibr">McLaughlin <italic>et al.</italic>, 2019</xref>).</p>
    <p>To our knowledge, currently the only robust method to identify loops <italic>de novo</italic> requires very deep Hi-C libraries, on the order of over a billion Hi-C contacts (<xref rid="btaa073-B39" ref-type="bibr">Rao <italic>et al.</italic>, 2014</xref>). This means that the vast majority of Hi-C datasets cannot be used to identify loops. However, they can be used to quantify the average loop strength (i.e. enrichment of contacts in those loops relative to their local background). To do this, one can average (or ‘pile up’) all areas of the Hi-C maps containing loops, that have been annotated in a high-depth dataset (<xref rid="btaa073-B39" ref-type="bibr">Rao <italic>et al.</italic>, 2014</xref>). This idea is very similar to ‘average/aggregate profiles’ used, for example, in chromatin immunoprecipitation and sequencing (ChIP-seq) analysis to quantify signal in a subset of regions, except in Hi-C this is for a 2D matrix instead of a linear track. The same approach can, of course, be applied directly to the data where the loops were annotated for quantification of their average prominence. Apart from quantifying the strength of known features, the same analysis can be used to investigate whether certain regions, defined for example based on ChIP-seq peaks, tend to interact with each other on average above background. To our knowledge, the first application of pile-up-like analysis was to investigate clustering of pluripotency factor binding sites in mouse embryonic stem (ES) cells (<xref rid="btaa073-B10" ref-type="bibr">de Wit <italic>et al.</italic>, 2013</xref>). Pile-up analysis can also aid in the discovery of novel drivers of interactions.</p>
    <p>Hi-C is a cell population-based method, and only provides population average measurements. Several single-cell Hi-C approaches have been published (<xref rid="btaa073-B13" ref-type="bibr">Flyamer <italic>et al.</italic>, 2017</xref>; <xref rid="btaa073-B35" ref-type="bibr">Nagano <italic>et al.</italic>, 2017</xref>, <xref rid="btaa073-B34" ref-type="bibr">2013</xref>; <xref rid="btaa073-B45" ref-type="bibr">Stevens <italic>et al.</italic>, 2017</xref>; <xref rid="btaa073-B46" ref-type="bibr">Tan <italic>et al.</italic>, 2018</xref>; reviewed in <xref rid="btaa073-B47" ref-type="bibr">Ulianov <italic>et al.</italic>, 2017</xref>); however, none of these provides data depth or resolution comparable to that which can be obtained from a population of thousands of cells (<xref rid="btaa073-B12" ref-type="bibr">Díaz <italic>et al.</italic>, 2018</xref>): the resulting matrices are too sparse to analyse individual regions and only aggregate genome-wide metrics can be efficiently employed. Approaches to analyse strength of loops, TADs and genome compartmentalization from such data genome wide have been developed (<xref rid="btaa073-B13" ref-type="bibr">Flyamer <italic>et al.</italic>, 2017</xref>). These are all based on the ‘pile-up’ approach described above using data from single cells for the regions corresponding to specific features identified in population Hi-C data, to boost the amount of reads used in the analysis.</p>
    <p>Since its inception in the current form (<xref rid="btaa073-B39" ref-type="bibr">Rao <italic>et al.</italic>, 2014</xref>), originally termed APA (‘Aggregate Peak Analysis’), pile-up analysis has been used both to analyse single-cell Hi-C data (<xref rid="btaa073-B13" ref-type="bibr">Flyamer <italic>et al.</italic>, 2017</xref>; <xref rid="btaa073-B16" ref-type="bibr">Gassler <italic>et al.</italic>, 2017</xref>; <xref rid="btaa073-B35" ref-type="bibr">Nagano <italic>et al.</italic>, 2017</xref>) and as a general way of quantifying feature strength (<xref rid="btaa073-B2" ref-type="bibr">Abdennur <italic>et al.</italic>, 2018</xref>; <xref rid="btaa073-B5" ref-type="bibr">Bonev <italic>et al.</italic>, 2017</xref>; <xref rid="btaa073-B12" ref-type="bibr">Díaz <italic>et al.</italic>, 2018</xref>; <xref rid="btaa073-B15" ref-type="bibr">Fudenberg <italic>et al.</italic>, 2016</xref>; <xref rid="btaa073-B17" ref-type="bibr">Hsieh <italic>et al.</italic>, 2019</xref>; <xref rid="btaa073-B24" ref-type="bibr">Krietenstein <italic>et al.</italic>, 2019</xref>; <xref rid="btaa073-B25" ref-type="bibr">Kruse <italic>et al.</italic>, 2019</xref>;<xref rid="btaa073-B31" ref-type="bibr"> McLaughlin <italic>et al</italic>., 2019;</xref><xref rid="btaa073-B36" ref-type="bibr">Nora <italic>et al.</italic>, 2017</xref>; <xref rid="btaa073-B38" ref-type="bibr">Rao <italic>et al.</italic>, 2017</xref>; <xref rid="btaa073-B42" ref-type="bibr">Rowley <italic>et al.</italic>, 2019</xref>; <xref rid="btaa073-B44" ref-type="bibr">Schwarzer <italic>et al.</italic>, 2017</xref>). A visual interactive tool to semi-manually classify and pile-up predefined regions has also been developed (<xref rid="btaa073-B27" ref-type="bibr">Lekschas <italic>et al.</italic>, 2018</xref>). However, no single computational tool can perform all the various kinds of pile-up analyses that have been used in the literature, including local and rescaled (features of different size or shape are averaged, e.g. average TADs) and off-diagonal (e.g. average loops) pile-ups with different normalization strategies (<xref rid="btaa073-T1" ref-type="table">Table 1</xref>). At the same time, performing detailed analysis of Hi-C data remains difficult for non-specialists due to the absence of easy to use tools.</p>
    <table-wrap id="btaa073-T1" orientation="portrait" position="float">
      <label>Table 1.</label>
      <caption>
        <p>Comparison of four tools for pile-up analysis across a set of features: Juicer Aggregate Peak Analysis (APA) (<xref rid="btaa073-B39" ref-type="bibr">Rao <italic>et al.</italic>, 2014</xref>), HiCExplorer (hicAggregateContacts and hicAverageRegions) (<xref rid="btaa073-B37" ref-type="bibr">Ramírez <italic>et al.</italic>, 2018</xref>) and GENOVA (APA, ATA and PE-SCAn) (<xref rid="btaa073-B49" ref-type="bibr">van der Weide, 2019</xref>) and <italic>coolpup.py</italic></p>
      </caption>
      <table frame="hsides" rules="groups">
        <colgroup span="1">
          <col valign="top" align="left" span="1"/>
          <col valign="top" align="center" span="1"/>
          <col valign="top" align="center" span="1"/>
          <col valign="top" align="center" span="1"/>
          <col valign="top" align="center" span="1"/>
        </colgroup>
        <thead>
          <tr>
            <th rowspan="1" colspan="1">Feature</th>
            <th rowspan="1" colspan="1">Juicer</th>
            <th rowspan="1" colspan="1">HiCExplorer</th>
            <th rowspan="1" colspan="1">GENOVA</th>
            <th rowspan="1" colspan="1">
              <italic>coolpup.py</italic>
            </th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td rowspan="1" colspan="1">Aggregate loops</td>
            <td rowspan="1" colspan="1">+</td>
            <td rowspan="1" colspan="1">−</td>
            <td rowspan="1" colspan="1">+</td>
            <td rowspan="1" colspan="1">+</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Aggregate region pairs</td>
            <td rowspan="1" colspan="1">−</td>
            <td rowspan="1" colspan="1">+</td>
            <td rowspan="1" colspan="1">+</td>
            <td rowspan="1" colspan="1">+</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Interactions between two region sets</td>
            <td rowspan="1" colspan="1">−</td>
            <td rowspan="1" colspan="1">+</td>
            <td rowspan="1" colspan="1">−</td>
            <td rowspan="1" colspan="1">+</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Local pile-ups</td>
            <td rowspan="1" colspan="1">−</td>
            <td rowspan="1" colspan="1">+</td>
            <td rowspan="1" colspan="1">−</td>
            <td rowspan="1" colspan="1">+</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">(Local) rescaled pile-ups</td>
            <td rowspan="1" colspan="1">−</td>
            <td rowspan="1" colspan="1">−</td>
            <td rowspan="1" colspan="1">+</td>
            <td rowspan="1" colspan="1">+</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Distance normalization</td>
            <td rowspan="1" colspan="1">−</td>
            <td rowspan="1" colspan="1">Expected (and z-score)</td>
            <td rowspan="1" colspan="1">Fixed shifts (for pairwise analysis)</td>
            <td rowspan="1" colspan="1">Expected or random shifts</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Coverage normalization</td>
            <td rowspan="1" colspan="1">−</td>
            <td rowspan="1" colspan="1">−</td>
            <td rowspan="1" colspan="1">−</td>
            <td rowspan="1" colspan="1">+</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Anchored pile-ups/loop-ability</td>
            <td rowspan="1" colspan="1">−</td>
            <td rowspan="1" colspan="1">−</td>
            <td rowspan="1" colspan="1">−</td>
            <td rowspan="1" colspan="1">+</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Command-line interface</td>
            <td rowspan="1" colspan="1">+</td>
            <td rowspan="1" colspan="1">+</td>
            <td rowspan="1" colspan="1">−</td>
            <td rowspan="1" colspan="1">+</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Simple text output of pile-ups</td>
            <td rowspan="1" colspan="1">+</td>
            <td rowspan="1" colspan="1">+</td>
            <td rowspan="1" colspan="1">−</td>
            <td rowspan="1" colspan="1">+</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Hi-C file format</td>
            <td rowspan="1" colspan="1">.hic</td>
            <td rowspan="1" colspan="1">.cool, .h5, other?</td>
            <td rowspan="1" colspan="1">HiC-pro</td>
            <td rowspan="1" colspan="1">.cool</td>
          </tr>
        </tbody>
      </table>
    </table-wrap>
    <p>Here, we present a unified command-line interface tool written in <bold>Py</bold>thon to <bold>p</bold>ile-<bold>up</bold> Hi-C data stored in the widely used and versatile .<bold>cool</bold> format (<xref rid="btaa073-B1" ref-type="bibr">Abdennur and Mirny, 2019</xref>) (<italic>coolpup.py</italic>). A simple script for plotting the output of <italic>coolpup.py</italic> is provided in the package (<italic>plotpup.py</italic>), although for higher flexibility, we suggest directly using <italic>matplotlib</italic> or another library. We have extensively applied this tool to investigate the role of Polycomb group proteins in 3D genome organization of mouse ES cells (<xref rid="btaa073-B6" ref-type="bibr">Boyle <italic>et al.</italic>, 2019</xref>; <xref rid="btaa073-B31" ref-type="bibr">McLaughlin <italic>et al.</italic>, 2019</xref>).</p>
    <p>Here, we have applied <italic>coolpup.py</italic> to published data to investigate the effect of different normalization strategies on the resulting pile-ups, and to replicate published results to verify <italic>coolpup.py’</italic>s algorithm. We also present a novel variation of the pile-up approach implemented in <italic>coolpup.py</italic> that retains some of the locus-specific information and would allow more detailed statistical analysis of looping interactions in Hi-C data. Using published single-cell Hi-C data, we also investigate the dynamics of polycomb-associated looping revealing a different dynamics of looping across the cell cycle compared with CTCF loops.</p>
  </sec>
  <sec>
    <title>2 Materials and methods</title>
    <sec>
      <title>2.1 Sources of datasets and data analysis</title>
      <p>As a proof of principal, we applied <italic>coolpup.py</italic> to publicly available Hi-C data (<xref rid="btaa073-B5" ref-type="bibr">Bonev <italic>et al.</italic>, 2017</xref>; <xref rid="btaa073-B36" ref-type="bibr">Nora <italic>et al.</italic>, 2017</xref>) using <italic>distiller</italic> (<ext-link ext-link-type="uri" xlink:href="https://github.com/mirnylab/distiller-nf">https://github.com/mirnylab/distiller-nf</ext-link>) to obtain <italic>.cool</italic> files filtered with a map quality (mapq) of ≥30. We used these data at 5 kb resolution. In addition <italic>.cool</italic> files for single-nucleus Hi-C (snHi-C), together with coordinates of loops and TADs used in the original publication (kindly shared by Hugo Brandão) (<xref rid="btaa073-B16" ref-type="bibr">Gassler <italic>et al.</italic>, 2017</xref>; <xref rid="btaa073-B39" ref-type="bibr">Rao <italic>et al.</italic>, 2014</xref>), were re-analysed at 10 kb resolution (without balancing and with coverage normalization and 10 random shifts). We also used single-cell Hi-C data for mouse ES cells grown in serum from <xref rid="btaa073-B35" ref-type="bibr">Nagano <italic>et al.</italic> (2017)</xref> (<italic>.cool</italic> files were kindly shared by Aleksandra Galitsyna) at 5 kb resolution. We created pile-ups for each cell in the same manner as for snHi-C. The pile-ups with the coefficient of variation of values in their 5 × 5 upper left and lower right corners equal to 0.5 or above were not used further as too noisy. We used the average value of interactions in the central 3 × 3 pixel square to get the level of interaction enrichment. RING1B and H3K27me3 ChIP-seq peaks (<xref rid="btaa073-B20" ref-type="bibr">Illingworth <italic>et al.</italic>, 2015</xref>) were lifted over to the mm9 mouse genome assembly. The coordinates of biochemically defined CpG islands were taken from (<xref rid="btaa073-B19" ref-type="bibr">Illingworth <italic>et al.</italic>, 2010</xref>). CTCF ChIP-seq peaks were taken from <xref rid="btaa073-B5" ref-type="bibr">Bonev <italic>et al.</italic> (2017)</xref> and, following liftOver to the <italic>mm9</italic> assembly, intersected with CTCF motifs found in the mm9 genome using Biopython’s <italic>motifs</italic> module (<xref rid="btaa073-B9" ref-type="bibr">Cock <italic>et al.</italic>, 2009</xref>). A human CTCF position-frequency matrix was downloaded from JASPAR (MA0139.1). We used only motifs with a score &gt;7 and discounted peaks containing &gt;1 motif.</p>
      <p>Regions of high insulation (meaning low number of contacts crossing this regions) in the Bonev <italic>et al.</italic> Hi-C data were called using <italic>cooltools diamond-insulation</italic> from 25 kb resolution data and a window size of 1 Mb. The output was filtered to exclude boundaries with strength &lt;0.1 and then pairs of consecutive boundaries were combined to create an annotation of TADs. TADs longer than 1500 kb were excluded due to their likely artefactual nature (based on both visual inspection, and the fact that TAD sizes are reported to be on the order of a few hundred kbp in mammalian cells; <xref rid="btaa073-B39" ref-type="bibr">Rao <italic>et al.</italic>, 2014</xref>). The same loop annotations for mouse ES cells were used as in our recent publication (<xref rid="btaa073-B31" ref-type="bibr">McLaughlin <italic>et al.</italic>, 2019</xref>).</p>
      <p>All figure panels were created using <italic>matplotlib</italic> (<xref rid="btaa073-B18" ref-type="bibr">Hunter, 2007</xref>) and assembled in Inkscape.</p>
    </sec>
    <sec>
      <title><italic>2.2 Coolpup.py</italic> implementation</title>
      <p><italic>Coolpup.py</italic> is a versatile tool that uses .<italic>cool</italic> files as the main input together with a bed (chrom, start, end) or pair bed ("bedpe": chrom1, start1, end1, chrom2, start2, end2) file to define the regions under investigation. The tool is implemented as a <italic>python</italic> package which parses all arguments via <italic>argparse</italic>, performs the computation and saves the output file(s). It leverages the scientific python environment, taking advantage of <italic>numpy</italic> (<xref rid="btaa073-B48" ref-type="bibr">van der Walt <italic>et al.</italic>, 2011</xref>), <italic>scipy</italic> (<xref rid="btaa073-B5380069" ref-type="bibr">Virtanen <italic>et al</italic>., 2020</xref>) and <italic>pandas</italic> (<italic><xref rid="btaa073-B30" ref-type="bibr">McKinney, 2010</xref></italic>). A separate CLI tool included in the package (<italic>plotpup.py</italic>) can be used to visualize the results and uses <italic>matplotlib</italic> (<xref rid="btaa073-B18" ref-type="bibr">Hunter, 2007</xref>). The code is available on GitHub (<ext-link ext-link-type="uri" xlink:href="https://github.com/Phlya/coolpuppy">https://github.com/Phlya/coolpuppy</ext-link>) and the package can be installed using <italic>pip</italic>, which then makes <italic>coolpup.py</italic> and <italic>plotpup.py</italic> available in the command line. Alternatively, all main functions can be accessed directly from <italic>python</italic>.</p>
      <p>The overall procedure for piling up a lot of small regions is the following. To minimize the number of file reads (at the cost of required computer memory), a sparse representation of each chromosome’s Hi-C contact matrix is loaded into memory. Then, using an iterator, each required location (on- or off-diagonal) is individually retrieved to generate a corresponding submatrix from the data [with some specified padding around the centre of the region of interest (ROI)], and added to the matrix of the same shape, initialized with zeros, while keeping track of the number of summed-up regions. If specified, coverage of the window on each side is recorded. Similarly, if needed, the window (and the coverage) is rescaled to a required shape. This is done for all chromosomes (optionally, in parallel using <italic>multiprocessing</italic>), and then all of the results are summed and then divided by the total number of windows. If specified, coverage normalization is applied at this stage. Then, unless otherwise specified, a normalization to remove the distance-dependency of contact probability is applied. In most cases, the best and most efficient way is to use a (chromosome-wide) expected value for each diagonal of the matrix, which can be obtained for a cooler file using, for example, <italic>cooltools compute-expected</italic>. With the assumption that the probability of interactions only depends on distance, the whole-chromosome expected matrix is a diagonal-constant matrix A with diagonal values d (also known as a Toeplitz matrix), such as: <inline-formula id="IE1"><mml:math id="IM1"><mml:msub><mml:mrow><mml:mi mathvariant="normal">A</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">A</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo> </mml:mo><mml:mo>+</mml:mo><mml:mo> </mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi> </mml:mi><mml:mi>j</mml:mi><mml:mo> </mml:mo><mml:mo>+</mml:mo><mml:mo> </mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">d</mml:mi></mml:mrow><mml:mrow><mml:mfenced open="|" close="|" separators="|"><mml:mrow><mml:mi>i</mml:mi><mml:mo> </mml:mo><mml:mo>-</mml:mo><mml:mo> </mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:msub></mml:math></inline-formula> The simplicity of this expected model allows trivial creation of a matrix containing expected values for an arbitrary region of the intra-chromosomal Hi-C map without generating the whole matrix to avoid high-memory requirements, which is done for each ROI. All expected matrices are averaged to generate a normalizing matrix. Alternatively, if the expected values are not available, for example, for single-cell Hi-C data, this normalization can be performed using randomly shifted control regions. In that case, to generate the normalizing matrix, the whole pile-up procedure is repeated, but the coordinates are randomly shifted. In the end, the resulting matrix of averaged ROIs is divided element-wise by the normalizing matrix to remove effects of distance.</p>
      <p>If not specified, balanced data with chromosome-wide expected normalization were used when creating pile-ups, except for the zygote and single-cell Hi-C datasets, where randomly shifted controls and coverage normalization were used instead. For the single-cell Hi-C (<xref rid="btaa073-B35" ref-type="bibr">Nagano <italic>et al.</italic>, 2017</xref>) analysis, we only used pairs of convergent CTCF peaks within 100–800 kb of each other, since previous analysis (data not shown) indicated this as the distance range where CTCF-associated loops are most prominent; to reduce noise, RING1B-associated interactions were analysed for all distances above 100 kbp.</p>
    </sec>
    <sec>
      <title>2.3 Performance profiling</title>
      <p><italic>Coolpup.py</italic> performance was tested on the University of Edinburgh Open Grid Scheduler cluster (Eddie3) using the Hi-C datasets for mouse ES cells (<xref rid="btaa073-B5" ref-type="bibr">Bonev <italic>et al.</italic>, 2017</xref>; <xref rid="btaa073-B36" ref-type="bibr">Nora <italic>et al.</italic>, 2017</xref>). To generate the required large number of coordinates for testing, we used coordinates of the B3 repeat from the RepeatMasker track available from UCSC Genome Browser. For coordinate pairs, we used all pairs of convergent CTCF sites, described above. A separate job was submitted for each measurement, and the runtime of the <italic>coolpup.py</italic> call was recorded. Subsets of different sizes were generated using <italic>coolpup.py’</italic>s <monospace>--subset</monospace> argument. Where not specified, one compute core was utilized. The same procedure was performed for HiCExplorer <italic>hicAggregateContacts</italic>, except <italic>shuf</italic> was used to generate a random sample of required size. The following arguments were also provided to mimic <italic>coolpup.py</italic> behaviour as close as possible: --<italic>range 105000:1000000000000 --avgType mean --transform obs/exp</italic>. All measurements were performed five times. Plotted in <xref ref-type="fig" rid="btaa073-F4">Figure 4</xref> are actual measured runtime values, the line shows mean values and shaded area — ±95% confidence interval, using the <italic>seaborn</italic> plotting package (<xref rid="btaa073-B33" ref-type="bibr">Waskom <italic>et al.</italic>, 2018</xref>).</p>
    </sec>
  </sec>
  <sec>
    <title>3 Results</title>
    <sec>
      <title>3.1 Different normalization strategies implemented in <italic>coolpup.py</italic></title>
      <p>Hi-C data can be normalized in different ways to remove either technical biases, or uninteresting (in this context) biological signal of the decay of contact probability with genomic distance. <italic>Coolpup.py</italic> provides ways to deal with both of these problems.</p>
      <p>Hi-C data are usually normalized to remove systematic biases, such as GC-content or restriction site frequency (<xref rid="btaa073-B51" ref-type="bibr">Yaffe and Tanay, 2011</xref>). Cooler implements a matrix balancing (visibility equalization) approach to remove all potential biases (<xref rid="btaa073-B21" ref-type="bibr">Imakaev <italic>et al.</italic>, 2012</xref>) and, when available, it is recommended to use balanced data for pile-ups. Sometimes, for example, in single-cell Hi-C, removing biases is impossible due to the sparsity of data. Therefore, using unbalanced data is also an option in <italic>coolpup.py</italic>. However, because of the averaging of multiple regions during the pile-up procedure, the effect of biases can be partially mitigated by normalizing the matrix by the coverage (i.e. the total number of contacts of the bins in the chromosome) of the averaged regions (<xref rid="btaa073-B13" ref-type="bibr">Flyamer <italic>et al.</italic>, 2017</xref>). To illustrate this, we integrated ChIP-seq datasets with Hi-C and analysed CTCF and polycomb (RING1B)-associated loops, and all potential intersections between high RING1B peaks, in mouse ES cell Hi-C data (<xref rid="btaa073-B5" ref-type="bibr">Bonev <italic>et al.</italic>, 2017</xref>). This approach visibly reduces coverage variability between bins and removes sharp crosses from the central bin that is present with unbalanced data. This normalization seems to slightly over-correct, i.e. the value of the central pixel is consistently somewhat lower than when using balanced data. However, the results overall look more similar to balanced data than without coverage normalization.</p>
      <p>In addition to normalization to remove biases, it is often desirable to remove the distance-dependency of contact probability in Hi-C data, since sometimes it can obscure interesting properties, such as enrichment in the centre of the pile-up. The general approach to perform this normalization is to create a vector of expected contact frequency, which usually corresponds to the averaged value of the Hi-C map at each diagonal per chromosome. However, sometimes the expected information is unavailable, for example, in single-cell Hi-C it can be too noisy. In that case, an alternative approach to remove distance-dependency of contact frequency can be used: for each position in the Hi-C map being averaged, a matched set of randomly shifted control regions with the same distance separation is used (<xref rid="btaa073-B13" ref-type="bibr">Flyamer <italic>et al.</italic>, 2017</xref>). In this way, by creating many such control regions for each ROI, it is possible to estimate the expected frequency of interactions even for sparse single-cell Hi-C data. As shown in <xref ref-type="fig" rid="btaa073-F1">Figure 1B</xref>, both of these approaches are excellent at removing distance-dependency of contact probability and produce visually indistinguishable results. However, for a small set of regions (e.g. RING1B-associated loops) a higher number of randomly shifted controls for each ROI is required to prevent noise. We note that in our experience for local pile-ups (especially with rescaling; see below) random controls perform better than simple normalization to expected values (data not shown). It is worth bearing in mind that this normalization can also hide real signal in the data, such as enrichment of interactions in the lower-left corner, observed in particular for CTCF-anchored loops (<xref ref-type="fig" rid="btaa073-F1">Fig. 1B</xref>).</p>
      <fig id="btaa073-F1" orientation="portrait" position="float">
        <label>Fig. 1.</label>
        <caption>
          <p>Hi-C data normalization strategies. (<bold>A</bold>) Comparison of coverage normalization strategies for pile-up analyses using mouse ES cell Hi-C data (<xref rid="btaa073-B5" ref-type="bibr">Bonev <italic>et al.</italic>, 2017</xref>). Normalization approaches are in columns: matrix balancing (iterative correction); no normalization; no balancing with coverage normalization of the pile-ups. The different averaged regions are shown in rows: loops associated with CTCF (<italic>n</italic> = 6536), loops associated with RING1B (<italic>n</italic> = 104) (see Materials and Methods section), all pairwise combinations of high RING1B peak regions from the fourth quartile (by RING1B ChIP-seq read count) (<italic>n</italic> = 2660 of peak regions). All pile-ups produced with 10 randomly shifted controls. All pile-ups are normalized to the average of the top-left and bottom-right corner pixels to bring them to same scale. Value of the central pixel is displayed. Five kilobytes resolution with 100 kb padding around the central pixel. Colour is shown in log-scale and shows enrichment of interactions. (<bold>B</bold>) Same as (A), but for different approaches to remove distance-dependency of contact probability with balanced data. In columns: single randomly shifted control regions per ROI; 10 randomly shifted control per ROI; normalization to chromosome-wide expected; no normalization. Same rows as in (A). Average enrichment of the lower-left corner of the pile-up is displayed </p>
        </caption>
        <graphic xlink:href="btaa073f1"/>
      </fig>
    </sec>
    <sec>
      <title>3.2 Applications of pile-ups</title>
      <p>As well as the basic pile-up procedure, there are multiple variations built in to <italic>coolpup.py</italic> which are tailored to answer different biological questions. The following ones are trivial, but worth mentioning. For example, often it is desirable to restrict the minimal and/or maximal separation of analysed sites, either to remove short-range artefacts, or to analyse the distribution of enrichment signal across different distance scales. Only certain chromosomes might need to be included, or, with too many regions of interest, a random subset can be taken to speed up the computation.</p>
      <p>A popular variation of the pile-up approach is ‘local’ pile-up: an analysis which focuses on near-diagonal features. For example, we averaged regions of high insulation annotated in the deep ES cell Hi-C dataset to visualize insulation strength after auxin-induced degradation of CTCF (<xref rid="btaa073-B36" ref-type="bibr">Nora <italic>et al.</italic>, 2017</xref>) (<xref ref-type="fig" rid="btaa073-F2">Fig. 2A</xref>). In this case, the pile-ups are performed in the same way as previous off-diagonal pile-ups; however, the regions that are averaged lie on the main diagonal of the Hi-C map. A variation of this approach is local pile-ups with rescaling to analyse features of different size, for example, TADs (<xref rid="btaa073-B13" ref-type="bibr">Flyamer <italic>et al.</italic>, 2017</xref>). As an example, TADs, based on aforementioned regions of high insulation annotated in data from (ref. <xref rid="btaa073-B5" ref-type="bibr">Bonev <italic>et al.</italic>, 2017</xref>), were averaged to visualize changes in local interaction strength upon CTCF degradation (<xref rid="btaa073-B36" ref-type="bibr">Nora <italic>et al.</italic>, 2017</xref>) (<xref ref-type="fig" rid="btaa073-F2">Fig. 2B</xref>). Here, all windows centred on regions of interest are rescaled to the same size, and then averaged.</p>
      <fig id="btaa073-F2" orientation="portrait" position="float">
        <label>Fig. 2.</label>
        <caption>
          <p>Pile-up variations. (<bold>A</bold>) Local pile-ups of high-insulating regions in ES cells across untreated, auxin-treated and wash-off conditions in CTCF-AID Hi-C data (<xref rid="btaa073-B36" ref-type="bibr">Nora <italic>et al.</italic>, 2017</xref>). Twenty-five kbp resolution data with 1000 kbp padding around the central pixel. (<bold>B</bold>) Local rescaled pile-ups of TADs (defined based on high-insulating regions) across same data as in (A) from 5 kbp resolution data. (<bold>C</bold>) Loop and rescaled TAD pile-ups for pooled single-cell Hi-C data showing loss of structures in <italic>Scc1</italic><sup>−/−</sup> zygotes (<xref rid="btaa073-B16" ref-type="bibr">Gassler <italic>et al.</italic>, 2017</xref>). (<bold>D</bold>) Two examples of anchored pile-ups from RING1B+/H3K27me3+ CpG islands on chr1, with no visible enrichment (top), or with very prominent enrichment (bottom). The anchored region is on the left side of the pile-up, and its coordinates (including the padding) are shown on the left. The value of the central pixel (‘loopability’) shown in top left corner. (<bold>E</bold>) Distribution of ‘loopability’ values of CpG islands not bound by RING1B, CpG islands bound by RING1B, and CpG islands bound by RING1B and also marked by H3K27me3</p>
        </caption>
        <graphic xlink:href="btaa073f2"/>
      </fig>
      <p>Pile-ups are a particularly important approach to analysing very low-depth datasets to uncover genome-wide average patterns, which are indiscernible when looking at individual regions in such sparse data. Here, we apply <italic>coolpup.py</italic> to reproduce results from a dataset comprising pooled data from a few single cells, to show a loss of loops and TADs in mouse zygotes lacking SCC1 (RAD21), the kleisin subunit of cohesin (<xref rid="btaa073-B16" ref-type="bibr">Gassler <italic>et al.</italic>, 2017</xref>). Since the material is so limiting and data are based on single cells, the total number of contacts in this dataset is very low: 4.8 and 9.2 million contacts in <italic>Scc1</italic><sup>+/+</sup> and <italic>Scc1</italic><sup>-/-</sup>, respectively. However, we successfully performed pile-ups, both with ‘traditional’ averaging of loops, and local pile-ups of TADs with rescaling, and observe the loss of both loops and TADs upon deletion of cohesin, comparable to the original study (<xref ref-type="fig" rid="btaa073-F2">Fig. 2C</xref>).</p>
      <p>All pile-up approaches include averaging of multiple regions, a drawback of which is the loss of locus-specific information. We, therefore, designed a novel approach that retains some information about the specific loci used in the analysis. In this approach, we pile-up a single region against multiple other regions; the same can be done for each of many regions in a set against all other regions. Then by extracting the value in the central pixel in pile-ups for each region, we can get a ‘loop-ability’ value, which can then be related to other features of analysed regions, such as the level of occupancy by different factors. To confirm that this approach can work, we checked some example regions that displayed high or low level of ‘loop-ability’, to ensure that the values we observed were not due to noise from piling up interactions of a single region (see two examples in <xref ref-type="fig" rid="btaa073-F2">Fig. 2D</xref>). A simple proof of principle analysis highlights the interactions between sites bound by polycomb group proteins in mouse ES cells (data from <xref rid="btaa073-B5" ref-type="bibr">Bonev <italic>et al.</italic>, 2017</xref>). By splitting the CpG islands (data from <xref rid="btaa073-B19" ref-type="bibr">Illingworth <italic>et al.</italic>, 2010</xref>) — the main targets of polycomb binding in ES cells — in the mouse genome into RING1B (a core component of Polycomb Repressive Complex 1 — PRC1) negative, RING1B positive, and RING1B and H3K27me3 positive sets (data from <xref rid="btaa073-B20" ref-type="bibr">Illingworth <italic>et al.</italic>, 2015</xref>), we observe high ‘loop-ability’ values for the two latter groups, while the RING1B negative CpG islands have close to no enrichment (<xref ref-type="fig" rid="btaa073-F2">Fig. 2E</xref>). We perform more detailed analysis of such loop-ability measurements in our recent report (<xref rid="btaa073-B6" ref-type="bibr">Boyle <italic>et al.</italic>, 2019</xref>).</p>
      <p>Pile-ups are an invaluable tool when analysing Hi-C data from single cells, since averaging features across the whole genome helps to circumvent the sparsity of the data. Here, we apply <italic>coolpup.py</italic> to analyse the looping interactions across the cell cycle using a published single-cell Hi-C dataset from hundreds of mouse ES cells (<xref rid="btaa073-B35" ref-type="bibr">Nagano <italic>et al.</italic>, 2017</xref>). We compared the enrichment of interactions in different cell cycles stages for CTCF- and RING1B-associated interactions (see <xref ref-type="fig" rid="btaa073-F3">Fig. 3A and B</xref>). For convergent CTCF sites, we detected the loss of loop strength in pre- and post-mitotic cells until mid-G1 in the next cell cycle , consistent with the original publication (<xref rid="btaa073-B35" ref-type="bibr">Nagano <italic>et al.</italic>, 2017</xref>).</p>
      <fig id="btaa073-F3" orientation="portrait" position="float">
        <label>Fig. 3.</label>
        <caption>
          <p>Chromatin looping dynamics across cell cycle. (<bold>A</bold>) Hi-C interaction enrichment levels for single cells ordered along the cell cycle (<xref rid="btaa073-B35" ref-type="bibr">Nagano <italic>et al.</italic>, 2017</xref>) for CTCF- and RING1B-associated interactions. The former is limited to 100–800 kb distance, while the latter is shown for all distances above 100 kb. Curves represent LOWESS-smoothed data for easier interpretation. (<bold>B</bold>) Distribution of enrichment values in all cell cycle stages from data in (A)</p>
        </caption>
        <graphic xlink:href="btaa073f3"/>
      </fig>
      <p>In contrast, the interactions between RING1B-binding sites have a very different dynamic across the cell cycle. They are at their weakest during S phase, strengthen during G2 and do not reach their peak until early G1. This is consistent with the cell cycle kinetics of H3K27me3 abundance at polycomb marked sites with H3K27me3 levels lowest during S phase where they are diluted after the replication fork, and levels of H3K27me3 only accumulating slowly through G2 and not peaking again until G1 of the next cell cycle (<xref rid="btaa073-B40" ref-type="bibr">Reverón-Gómez <italic>et al.</italic>, 2018</xref>).</p>
    </sec>
    <sec>
      <title>3.3 <italic>Coolpup.py</italic> can deal with huge numbers of regions</title>
      <p>Creating pile-ups from intersections of genomic regions can require averaging a huge number of 2D windows: the number of two combinations grows quickly with the number of regions. For example, with ∼1000 regions per chromosome (which is approximately equivalent to the number of genes), requires averaging of ∼10 000 000 regions for the whole genome, several orders of magnitude more than the number of regions usually averaged, such as number of annotated loops (∼10 000). Therefore, it is important for a general-purpose tool for creating pile-ups to scale well with the number of averaged 2D windows. To facilitate this, <italic>coolpup.py</italic> performs a very low number of read operations on the Hi-C data — only once per chromosome (or twice, when using randomly shifted controls). Whilst this necessitates that the whole Hi-C matrix of a chromosome has to be loaded into memory, it is only stored in a sparse format, and so conventional Hi-C datasets can be analysed on a regular desktop (although multi-billion contact datasets might require a high-memory machine; data not shown).</p>
      <p>To test the performance of <italic>coolpup.py</italic> and how this depends on number of regions of interest, we measured the runtime with varying number of two-sided coordinate pairs (mimicking loop annotation) (<xref ref-type="fig" rid="btaa073-F4">Fig. 4A</xref>), and varying the number of one-sided coordinate interactions being averaged (<xref ref-type="fig" rid="btaa073-F4">Fig. 4B</xref>). We used both deep (<xref rid="btaa073-B5" ref-type="bibr">Bonev <italic>et al.</italic>, 2017</xref>), and ‘regular depth’ Hi-C data (<xref rid="btaa073-B36" ref-type="bibr">Nora <italic>et al.</italic>, 2017</xref>) from mouse ES cells. With both datasets, the runtime was almost constant (probably due to file system read speed limitations) up to a certain number of ‘loops’ (∼1–2 × 10<sup>5</sup>), where it starts quickly increasing (<xref ref-type="fig" rid="btaa073-F4">Fig. 4A</xref>). Notably, the best annotations that exist to date only contain &lt;40 000 loops (<xref rid="btaa073-B24" ref-type="bibr">Krietenstein <italic>et al.</italic>, 2019</xref>), and therefore this would fall within the flat part of the curve. Similarly, in the latter analysis, runtime did not increase up to 1600 and 3200 regions of interest for the Nora <italic>et al.</italic> and Bonev <italic>et al.</italic> datasets, respectively. Importantly, in both analyses the difference in time between datasets with almost 10-fold sequencing depth difference is not very large, and probably mostly driven by differences in time required to read the data from disk. When similar analysis was performed using HiCExplorer <italic>hicAggregateContacts</italic>, the runtime was &gt;10-fold longer for each dataset with low numbers of regions (<xref ref-type="fig" rid="btaa073-F4">Fig. 4B</xref>), and the analysis required much more memory since the algorithm uses dense data structures and stores each submatrix of interest in memory (required &gt;100 Gb for the Bonev <italic>et al.</italic> dataset; the longest time-point required over 512 Gb of RAM and was not computed, while <italic>coolpup.py</italic> only needed ∼8 Gb for any calculation). HiCExplorer implementation computes observed/expected matrix for every calculation and cannot use pre-computed expected values, which at least partially accounts for much longer runtimes.</p>
      <fig id="btaa073-F4" orientation="portrait" position="float">
        <label>Fig. 4.</label>
        <caption>
          <p>Performance profiling. (<bold>A</bold>) Runtime (seconds) of <italic>coolpup.py</italic> with varying number of averaged ‘loops’ for two Hi-C datasets with different depth. (<bold>B</bold>) Same as (A), but for number of linear regions between which interactions are averaged. Also shown is runtime for HiCExplorer <italic>hicAggregateContacts</italic>. Note that the longest time-point for HiCExplorer required over 512 Gb RAM and was not computed. (<bold>С</bold>) Runtime of the same analysis with 5000 linear regions and a varying number of cores. Same colour coding as in (A)</p>
        </caption>
        <graphic xlink:href="btaa073f4"/>
      </fig>
      <p>Since <italic>coolpup.py</italic> supports parallel processing to speed-up analyses, we also tested how well it scales with the number of computer cores used. We measured the runtime of the same analysis performed with varying number of cores (<xref ref-type="fig" rid="btaa073-F4">Fig. 4C</xref>) and showed that the runtime shortened linearly with additional processes. This means the parallelization strategy used in <italic>coolpup.py</italic> is efficiently utilizing available CPU cores and when available, we recommend using many cores to speed-up computation, although this would also significantly increase memory requirements.</p>
    </sec>
  </sec>
  <sec>
    <title>4 Discussion</title>
    <p>With the large efforts being made in deciphering the structure and function of the genome in 3D, efficient, robust and versatile tools are required to facilitate quick hypothesis testing. Unlike for RNA-seq, ChIP-seq and other genome-wide methods, analysis of complex Hi-C data remains a challenge only readily accessible to specialists in the field due to an absence of easy to use informatics tools, with a few exceptions. One popular analysis applied to Hi-C data is pile-ups, which show an average genome-wide view of a selected set of regions in the 2D Hi-C interaction matrix: a very visual and intuitive approach to analysing data.</p>
    <p>Here, we presented <italic>coolpup.py</italic>, a versatile tool to perform pile-up analysis on Hi-C data in <italic>.cool</italic> format. Apart from simple generation of pile-ups, <italic>coolpup.py</italic> can be used to explore different data normalization strategies. While we recommend using balanced data with normalization to chromosome-wide expected interaction frequency, in certain cases a different normalization strategy can be beneficial. Similarly, exploring other parameters of the algorithm (such as minimal separation between averaged loop bases, or minimal length of locally averaged features) is straightforward with <italic>coolpup.py</italic>. Using our tool, we reproduced published results on the role of CTCF and cohesin in generating chromatin loops and TADs. We have shown application of <italic>coolpup.py</italic> to both low coverage Hi-C data (merged snHi-C data), and extremely sparse single-cell Hi-C data. The latter analysis not only replicated published data on CTCF-mediated looping changes across the cell cycles, but also revealed novel cell cycle dynamics of polycomb-associated interactions with highest contact enrichment around the time of mitosis. We note that these observations are generally consistent with the dilution and slow recovery of the H3K27me3 mark after the replication fork (<xref rid="btaa073-B3" ref-type="bibr">Alabert <italic>et al.</italic>, 2015</xref>; <xref rid="btaa073-B40" ref-type="bibr">Reverón-Gómez <italic>et al.</italic>, 2018</xref>), as well as an antagonistic relationship between cohesin-mediated loop extrusion and looping between RING1B target sites, reported previously (<xref rid="btaa073-B41" ref-type="bibr">Rhodes <italic>et al.</italic>, 2020</xref>). These observations also pose a question of whether polycomb-associated interactions persist in metaphase chromosomes—a possibility since components of CBX2-containing PRC1 remain associated with metaphase chromosomes (<xref rid="btaa073-B52" ref-type="bibr">Zhen <italic>et al.</italic>, 2014</xref>). These novel insights highlight the exploratory power of pile-up analysis.</p>
    <p>Since <italic>coolpup.py</italic> is designed as a command-line tool and allows reading the coordinates of regions from standard input, it is compatible with computational pipelines, and can be readily used in shared computing environments. Moreover, it remains accessible for non-specialists with minimal knowledge of the command line and no programming experience. <italic>Coolpup.py</italic> should aid in improving reproducibility by providing a standardized approach for pile-up analysis which is intuitive and therefore accessible to both specialists and non-specialist alike. We hope that it will facilitate research into the 3D organization of the genome by allowing easy to use, versatile and efficient generation of pile-ups.</p>
  </sec>
</body>
<back>
  <ack id="ack1">
    <title>Acknowledgements</title>
    <p>We are grateful to Maksim Imakaev, Nezar Abdennur, Anton Goloborodko, Hugo Brandão and Sergey Venev for discussions, help and advice about the <italic>cooler</italic> ecosystem, and to Aleksandra Galitsyna for sharing .<italic>cool</italic> files for the <xref rid="btaa073-B33" ref-type="bibr">Nagano <italic>et al.</italic> (2017)</xref> dataset. This work has made use of the resources provided by the Edinburgh Compute and Data Facility (ECDF) (<ext-link ext-link-type="uri" xlink:href="http://www.ecdf.ed.ac.uk/">http://www.ecdf.ed.ac.uk/</ext-link>). We also thank Sergey Ulianov for critically reading the manuscript.</p>
    <sec>
      <title>Funding</title>
      <p>I.M.F. is funded by a PhD studentship from the Darwin Trust of Edinburgh. W.A.B. is funded by a Medical Research Council University Unit programme grant [MC_ UU_00007/2]. R.S.I. is supported an MRC Career Development Award (MR/S007644/1) and by a seed award from the University of Edinburgh Simons Initiative for the Developing Brain (SIDB; a Simons Foundation Autism Research Initiative – SFARI). Funding for open access charge: [MC_ UU_00007/2].</p>
      <p><italic>Conflict of Interest</italic>: none declared. </p>
    </sec>
  </ack>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btaa073-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Abdennur</surname><given-names>N.</given-names></name>, <name name-style="western"><surname>Mirny</surname><given-names>L.A.</given-names></name></person-group> (<year>2019</year>) 
<article-title>Cooler: scalable storage for Hi-C data and other genomically labeled arrays</article-title>. <source>Bioinformatics</source>, <volume>36</volume>, <fpage>311</fpage>–<lpage>316</lpage>.</mixed-citation>
    </ref>
    <ref id="btaa073-B2">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Abdennur</surname><given-names>N.</given-names></name></person-group><etal>et al</etal> (<year>2018</year>) Condensin II inactivation in interphase does not affect chromatin folding or gene expression. <italic>bioRxiv</italic>, doi: 10.1101/437459.</mixed-citation>
    </ref>
    <ref id="btaa073-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Alabert</surname><given-names>C.</given-names></name></person-group><etal>et al</etal> (<year>2015</year>) 
<article-title>Two distinct modes for propagation of histone PTMs across the cell cycle</article-title>. <source>Genes Dev</source>., <volume>29</volume>, <fpage>585</fpage>–<lpage>590</lpage>.<pub-id pub-id-type="pmid">25792596</pub-id></mixed-citation>
    </ref>
    <ref id="btaa073-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Barutcu</surname><given-names>A.R.</given-names></name></person-group><etal>et al</etal> (<year>2016</year>) 
<article-title>C-ing the genome: a compendium of chromosome conformation capture methods to study higher-order chromatin organization</article-title>. <source>J. Cell. Physiol</source>., <volume>231</volume>, <fpage>31</fpage>–<lpage>35</lpage>.<pub-id pub-id-type="pmid">26059817</pub-id></mixed-citation>
    </ref>
    <ref id="btaa073-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Bonev</surname><given-names>B.</given-names></name></person-group><etal>et al</etal> (<year>2017</year>) 
<article-title>Multiscale 3D genome rewiring during mouse neural development</article-title>. <source>Cell</source>, <volume>171</volume>, <fpage>557</fpage>–<lpage>572.e24</lpage>.<pub-id pub-id-type="pmid">29053968</pub-id></mixed-citation>
    </ref>
    <ref id="btaa073-B6">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Boyle</surname><given-names>S.</given-names></name></person-group><etal>et al</etal> (<year>2019</year>) A central role for canonical PRC1 in shaping the 3D nuclear landscape. <italic>bioRxiv</italic>, doi: 10.1101/2019.12.15.876771.</mixed-citation>
    </ref>
    <ref id="btaa073-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Canela</surname><given-names>A.</given-names></name></person-group><etal>et al</etal> (<year>2017</year>) 
<article-title>Genome organization drives chromosome fragility</article-title>. <source>Cell</source>, <volume>170</volume>, <fpage>507</fpage>–<lpage>521.e18</lpage>.<pub-id pub-id-type="pmid">28735753</pub-id></mixed-citation>
    </ref>
    <ref id="btaa073-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Canela</surname><given-names>A.</given-names></name></person-group><etal>et al</etal> (<year>2019</year>) 
<article-title>Topoisomerase II-induced chromosome breakage and translocation is determined by chromosome architecture and transcriptional activity</article-title>. <source>Mol. Cell</source>, <volume>75</volume>, <fpage>252</fpage>–<lpage>266.e8</lpage>.<pub-id pub-id-type="pmid">31202577</pub-id></mixed-citation>
    </ref>
    <ref id="btaa073-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Cock</surname><given-names>P.J.A.</given-names></name></person-group><etal>et al</etal> (<year>2009</year>) 
<article-title>Biopython: freely available Python tools for computational molecular biology and bioinformatics</article-title>. <source>Bioinformatics</source>, <volume>25</volume>, <fpage>1422</fpage>–<lpage>1423</lpage>.<pub-id pub-id-type="pmid">19304878</pub-id></mixed-citation>
    </ref>
    <ref id="btaa073-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>de Wit</surname><given-names>E.</given-names></name></person-group><etal>et al</etal> (<year>2013</year>) 
<article-title>The pluripotent genome in three dimensions is shaped around pluripotency factors</article-title>. <source>Nature</source>, <volume>501</volume>, <fpage>227</fpage>–<lpage>231</lpage>.<pub-id pub-id-type="pmid">23883933</pub-id></mixed-citation>
    </ref>
    <ref id="btaa073-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Dekker</surname><given-names>J.</given-names></name></person-group> (<year>2002</year>) 
<article-title>Capturing chromosome conformation</article-title>. <source>Science</source>, <volume>295</volume>, <fpage>1306</fpage>–<lpage>1311</lpage>.<pub-id pub-id-type="pmid">11847345</pub-id></mixed-citation>
    </ref>
    <ref id="btaa073-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Díaz</surname><given-names>N.</given-names></name></person-group><etal>et al</etal> (<year>2018</year>) 
<article-title>Chromatin conformation analysis of primary patient tissue using a low input Hi-C method</article-title>. <source>Nat. Commun</source>., <volume>9</volume>, <fpage>4938</fpage>.<pub-id pub-id-type="pmid">30498195</pub-id></mixed-citation>
    </ref>
    <ref id="btaa073-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Flyamer</surname><given-names>I.M.</given-names></name></person-group><etal>et al</etal> (<year>2017</year>) 
<article-title>Single-nucleus Hi-C reveals unique chromatin reorganization at oocyte-to-zygote transition</article-title>. <source>Nature</source>, <volume>544</volume>, <fpage>110</fpage>–<lpage>114</lpage>.<pub-id pub-id-type="pmid">28355183</pub-id></mixed-citation>
    </ref>
    <ref id="btaa073-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Franke</surname><given-names>M.</given-names></name></person-group><etal>et al</etal> (<year>2016</year>) 
<article-title>Formation of new chromatin domains determines pathogenicity of genomic duplications</article-title>. <source>Nature</source>, <volume>538</volume>, <fpage>265</fpage>–<lpage>269</lpage>.<pub-id pub-id-type="pmid">27706140</pub-id></mixed-citation>
    </ref>
    <ref id="btaa073-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Fudenberg</surname><given-names>G.</given-names></name></person-group><etal>et al</etal> (<year>2016</year>) 
<article-title>Formation of chromosomal domains by loop extrusion</article-title>. <source>Cell Rep</source>., <volume>15</volume>, <fpage>2038</fpage>–<lpage>2049</lpage>.<pub-id pub-id-type="pmid">27210764</pub-id></mixed-citation>
    </ref>
    <ref id="btaa073-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Gassler</surname><given-names>J.</given-names></name></person-group><etal>et al</etal> (<year>2017</year>) 
<article-title>A mechanism of cohesin-dependent loop extrusion organizes zygotic genome architecture</article-title>. <source>EMBO J</source>., <volume>36</volume>, <fpage>3600</fpage>–<lpage>3618</lpage>.<pub-id pub-id-type="pmid">29217590</pub-id></mixed-citation>
    </ref>
    <ref id="btaa073-B17">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Hsieh</surname><given-names>T.-H.S.</given-names></name></person-group><etal>et al</etal> (<year>2019</year>) Resolving the 3D landscape of transcription-linked mammalian chromatin folding. <italic>bioRxiv</italic>, doi: 10.1101/638775.</mixed-citation>
    </ref>
    <ref id="btaa073-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Hunter</surname><given-names>J.D.</given-names></name></person-group> (<year>2007</year>) 
<article-title>Matplotlib: a 2D graphics environment</article-title>. <source>Comput. Sci. Eng</source>., <volume>9</volume>, <fpage>90</fpage>–<lpage>95</lpage>.</mixed-citation>
    </ref>
    <ref id="btaa073-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Illingworth</surname><given-names>R.S.</given-names></name></person-group><etal>et al</etal> (<year>2010</year>) 
<article-title>Orphan CpG islands identify numerous conserved promoters in the mammalian genome</article-title>. <source>PLOS Genet</source>., <volume>6</volume>, <fpage>e1001134</fpage>.<pub-id pub-id-type="pmid">20885785</pub-id></mixed-citation>
    </ref>
    <ref id="btaa073-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Illingworth</surname><given-names>R.S.</given-names></name></person-group><etal>et al</etal> (<year>2015</year>) 
<article-title>The E3 ubiquitin ligase activity of RING1B is not essential for early mouse development</article-title>. <source>Genes Dev</source>., <volume>29</volume>, <fpage>1897</fpage>–<lpage>1902</lpage>.<pub-id pub-id-type="pmid">26385961</pub-id></mixed-citation>
    </ref>
    <ref id="btaa073-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Imakaev</surname><given-names>M.</given-names></name></person-group><etal>et al</etal> (<year>2012</year>) 
<article-title>Iterative correction of Hi-C data reveals hallmarks of chromosome organization</article-title>. <source>Nat. Methods</source>, <volume>9</volume>, <fpage>999</fpage>–<lpage>1003</lpage>.<pub-id pub-id-type="pmid">22941365</pub-id></mixed-citation>
    </ref>
    <ref id="btaa073-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Joshi</surname><given-names>O.</given-names></name></person-group><etal>et al</etal> (<year>2015</year>) 
<article-title>Dynamic reorganization of extremely long-range promoter-promoter interactions between two states of pluripotency</article-title>. <source>Cell Stem Cell</source>, <volume>17</volume>, <fpage>748</fpage>–<lpage>757</lpage>.<pub-id pub-id-type="pmid">26637943</pub-id></mixed-citation>
    </ref>
    <ref id="btaa073-B24">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Krietenstein</surname><given-names>N.</given-names></name></person-group><etal>et al</etal> (<year>2019</year>) Ultrastructural details of mammalian chromosome architecture. <italic>bioRxiv</italic>, doi: 10.1101/639922.</mixed-citation>
    </ref>
    <ref id="btaa073-B25">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Kruse</surname><given-names>K.</given-names></name></person-group><etal>et al</etal> (<year>2019</year>) Transposable elements drive reorganisation of 3D chromatin during early embryogenesis. <italic>bioRxiv</italic>, 523712.</mixed-citation>
    </ref>
    <ref id="btaa073-B26">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Lajoie</surname><given-names>B.R.</given-names></name></person-group><etal>et al</etal> (<year>2015</year>) 
<article-title>The Hitchhiker’s guide to Hi-C analysis: practical guidelines</article-title>. <source>Methods</source>, 72, 65–75.</mixed-citation>
    </ref>
    <ref id="btaa073-B27">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Lekschas</surname><given-names>F.</given-names></name></person-group><etal>et al</etal> (<year>2018</year>) 
<article-title>HiPiler: visual exploration of large genome interaction matrices with interactive small multiples</article-title>. <source>IEEE Trans. Visual. Comput. Graphics</source>, <volume>24</volume>, <fpage>522</fpage>–<lpage>531</lpage>.</mixed-citation>
    </ref>
    <ref id="btaa073-B28">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Lieberman-Aiden</surname><given-names>E.</given-names></name></person-group><etal>et al</etal> (<year>2009</year>) 
<article-title>Comprehensive mapping of long range interactions reveals folding principles of the human genome</article-title>. <source>Science</source>, <volume>326</volume>, <fpage>289</fpage>–<lpage>293</lpage>.<pub-id pub-id-type="pmid">19815776</pub-id></mixed-citation>
    </ref>
    <ref id="btaa073-B29">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Lupiáñez</surname><given-names>D.G.</given-names></name></person-group><etal>et al</etal> (<year>2015</year>) 
<article-title>Disruptions of topological chromatin domains cause pathogenic rewiring of gene-enhancer interactions</article-title>. <source>Cell</source>, <volume>161</volume>, <fpage>1012</fpage>–<lpage>1025</lpage>.<pub-id pub-id-type="pmid">25959774</pub-id></mixed-citation>
    </ref>
    <ref id="btaa073-B30">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>McKinney</surname><given-names>W.</given-names></name></person-group> (<year>2010</year>) <source>Data Structures for Statistical Computing in Python</source>, In <italic>Proc. of the 9th Python in Science Conf</italic>., 51–56.</mixed-citation>
    </ref>
    <ref id="btaa073-B31">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>McLaughlin</surname><given-names>K.</given-names></name></person-group><etal>et al</etal> (<year>2019</year>) 
<article-title>DNA methylation directs polycomb-dependent 3D genome re-organization in naive pluripotency</article-title>. <source>Cell Rep</source>., <volume>29</volume>, <fpage>1974</fpage>–<lpage>1985.e6</lpage>.<pub-id pub-id-type="pmid">31722211</pub-id></mixed-citation>
    </ref>
    <ref id="btaa073-B33">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Waskom</surname><given-names>M.</given-names></name></person-group><etal>et al</etal> (<year>2018</year>) mwaskom/seaborn: v0.9.0 (July 2018) Zenodo, doi: 10.5281/zenodo.1313201.</mixed-citation>
    </ref>
    <ref id="btaa073-B34">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Nagano</surname><given-names>T.</given-names></name></person-group><etal>et al</etal> (<year>2013</year>) 
<article-title>Single-cell Hi-C reveals cell-to-cell variability in chromosome structure</article-title>. <source>Nature</source>, <volume>502</volume>, <fpage>59</fpage>–<lpage>64</lpage>.<pub-id pub-id-type="pmid">24067610</pub-id></mixed-citation>
    </ref>
    <ref id="btaa073-B35">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Nagano</surname><given-names>T.</given-names></name></person-group><etal>et al</etal> (<year>2017</year>) 
<article-title>Cell-cycle dynamics of chromosomal organization at single-cell resolution</article-title>. <source>Nature</source>, <volume>547</volume>, <fpage>61</fpage>–<lpage>67</lpage>.<pub-id pub-id-type="pmid">28682332</pub-id></mixed-citation>
    </ref>
    <ref id="btaa073-B36">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Nora</surname><given-names>E.P.</given-names></name></person-group><etal>et al</etal> (<year>2017</year>) 
<article-title>Targeted degradation of CTCF decouples local insulation of chromosome domains from genomic compartmentalization</article-title>. <source>Cell</source>, <volume>169</volume>, <fpage>930</fpage>–<lpage>944.e22</lpage>.<pub-id pub-id-type="pmid">28525758</pub-id></mixed-citation>
    </ref>
    <ref id="btaa073-B37">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Ramírez</surname><given-names>F.</given-names></name></person-group><etal>et al</etal> (<year>2018</year>) 
<article-title>High-resolution TADs reveal DNA sequences underlying genome organization in flies</article-title>. <source>Nat. Commun</source>., <volume>9</volume>, <fpage>189</fpage>.<pub-id pub-id-type="pmid">29335486</pub-id></mixed-citation>
    </ref>
    <ref id="btaa073-B38">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Rao</surname><given-names>S.</given-names></name></person-group><etal>et al</etal> (<year>2017</year>) Cohesin loss eliminates all loop domains. <italic>Cell</italic>, 171, 305–320.e24.</mixed-citation>
    </ref>
    <ref id="btaa073-B39">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Rao</surname><given-names>S.S.P.</given-names></name></person-group><etal>et al</etal> (<year>2014</year>) 
<article-title>A 3D map of the human genome at kilobase resolution reveals principles of chromatin looping</article-title>. <source>Cell</source>, <volume>159</volume>, <fpage>1665</fpage>–<lpage>1680</lpage>.<pub-id pub-id-type="pmid">25497547</pub-id></mixed-citation>
    </ref>
    <ref id="btaa073-B40">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Reverón-Gómez</surname><given-names>N.</given-names></name></person-group><etal>et al</etal> (<year>2018</year>) 
<article-title>Accurate recycling of parental histones reproduces the histone modification landscape during DNA replication</article-title>. <source>Mol. Cell</source>, <volume>72</volume>, <fpage>239</fpage>–<lpage>249.e5</lpage>.<pub-id pub-id-type="pmid">30146316</pub-id></mixed-citation>
    </ref>
    <ref id="btaa073-B41">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Rhodes</surname><given-names>J.D.P.</given-names></name></person-group><etal>et al</etal> (<year>2020</year>) Cohesin disrupts polycomb-dependent chromosome interactions in embryonic stem cells. <italic>Cell Reports,</italic> 30, 820–835.e10<italic>.</italic></mixed-citation>
    </ref>
    <ref id="btaa073-B42">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Rowley</surname><given-names>M.J.</given-names></name></person-group><etal>et al</etal> (<year>2019</year>) 
<article-title>Condensin II counteracts cohesin and RNA polymerase II in the establishment of 3D chromatin organization</article-title>. <source>Cell Rep</source>., <volume>26</volume>, <fpage>2890</fpage>–<lpage>2903.e3</lpage>.<pub-id pub-id-type="pmid">30865881</pub-id></mixed-citation>
    </ref>
    <ref id="btaa073-B43">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Sanborn</surname><given-names>A.L.</given-names></name></person-group><etal>et al</etal> (<year>2015</year>) 
<article-title>Chromatin extrusion explains key features of loop and domain formation in wild-type and engineered genomes</article-title>. <source>Proc. Natl. Acad. Sci. USA</source>, <volume>112</volume>, <fpage>E6456</fpage>–<lpage>E6465</lpage>.<pub-id pub-id-type="pmid">26499245</pub-id></mixed-citation>
    </ref>
    <ref id="btaa073-B44">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Schwarzer</surname><given-names>W.</given-names></name></person-group><etal>et al</etal> (<year>2017</year>) 
<article-title>Two independent modes of chromatin organization revealed by cohesin removal</article-title>. <source>Nature</source>, <volume>551</volume>, <fpage>51</fpage>–<lpage>56</lpage>.<pub-id pub-id-type="pmid">29094699</pub-id></mixed-citation>
    </ref>
    <ref id="btaa073-B45">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Stevens</surname><given-names>T.J.</given-names></name></person-group><etal>et al</etal> (<year>2017</year>) 
<article-title>3D structures of individual mammalian genomes studied by single-cell Hi-C</article-title>. <source>Nature</source>, <volume>544</volume>, <fpage>59</fpage>–<lpage>64</lpage>.<pub-id pub-id-type="pmid">28289288</pub-id></mixed-citation>
    </ref>
    <ref id="btaa073-B46">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Tan</surname><given-names>L.</given-names></name></person-group><etal>et al</etal> (<year>2018</year>) 
<article-title>Three-dimensional genome structures of single diploid human cells</article-title>. <source>Science</source>, <volume>361</volume>, <fpage>924</fpage>–<lpage>928</lpage>.<pub-id pub-id-type="pmid">30166492</pub-id></mixed-citation>
    </ref>
    <ref id="btaa073-B47">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Ulianov</surname><given-names>S.V.</given-names></name></person-group><etal>et al</etal> (<year>2017</year>) 
<article-title>Single-cell Hi-C bridges microscopy and genome-wide sequencing approaches to study 3D chromatin organization</article-title>. <source>BioEssays</source>, <volume>39</volume>, <fpage>1700104</fpage>.</mixed-citation>
    </ref>
    <ref id="btaa073-B48">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>van der Walt</surname><given-names>S.</given-names></name></person-group><etal>et al</etal> (<year>2011</year>) 
<article-title>The NumPy array: a structure for efficient numerical computation</article-title>. <source>Comput. Sci. Eng</source>., <volume>13</volume>, <fpage>22</fpage>–<lpage>30</lpage>.</mixed-citation>
    </ref>
    <ref id="btaa073-B49">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>van der Weide</surname><given-names>R.</given-names></name></person-group> (<year>2019</year>) GENome Organisation Visual Analytics. GitHub, <ext-link ext-link-type="uri" xlink:href="https://github.com/robinweide/GENOVA">https://github.com/robinweide/GENOVA</ext-link>.</mixed-citation>
    </ref>
    <ref id="btaa073-B5380069">
      <mixed-citation publication-type="journal">Virtanen,P. <italic>et al</italic> (<year>2020</year>) SciPy 1.0: fundamental algorithms for scientific computing in Python. <italic>Nat Methods</italic>.</mixed-citation>
    </ref>
    <ref id="btaa073-B50">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Williamson</surname><given-names>I.</given-names></name></person-group><etal>et al</etal> (<year>2019</year>) 
<article-title>Developmentally regulated Shh expression is robust to TAD perturbations</article-title>. <source>Development</source>, <volume>146</volume>, <fpage>dev179523</fpage>.<pub-id pub-id-type="pmid">31511252</pub-id></mixed-citation>
    </ref>
    <ref id="btaa073-B51">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Yaffe</surname><given-names>E.</given-names></name>, <name name-style="western"><surname>Tanay</surname><given-names>A.</given-names></name></person-group> (<year>2011</year>) 
<article-title>Probabilistic modeling of Hi-C contact maps eliminates systematic biases to characterize global chromosomal architecture</article-title>. <source>Nat. Genet</source>., <volume>43</volume>, <fpage>1059</fpage>–<lpage>1065</lpage>.<pub-id pub-id-type="pmid">22001755</pub-id></mixed-citation>
    </ref>
    <ref id="btaa073-B52">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zhen</surname><given-names>C.Y.</given-names></name></person-group><etal>et al</etal> (<year>2014</year>) 
<article-title>Cbx2 stably associates with mitotic chromosomes via a PRC2- or PRC1-independent mechanism and is needed for recruiting PRC1 complex to mitotic chromosomes</article-title>. <source>Mol. Biol. Cell</source>, <volume>25</volume>, <fpage>3726</fpage>–<lpage>3739</lpage>.<pub-id pub-id-type="pmid">25232004</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Genome Biol</journal-id>
    <journal-title-group>
      <journal-title>Genome Biology</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1465-6906</issn>
    <issn pub-type="epub">1465-6914</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">4397945</article-id>
    <article-id pub-id-type="pmid">25367074</article-id>
    <article-id pub-id-type="publisher-id">501</article-id>
    <article-id pub-id-type="doi">10.1186/s13059-014-0501-4</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Method</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Bayesian transcriptome assembly</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Maretty</surname>
          <given-names>Lasse</given-names>
        </name>
        <address>
          <email>lassemaretty@binf.ku.dk</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Sibbesen</surname>
          <given-names>Jonas Andreas</given-names>
        </name>
        <address>
          <email>jasi@binf.ku.dk</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Krogh</surname>
          <given-names>Anders</given-names>
        </name>
        <address>
          <email>krogh@binf.ku.dk</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <aff id="Aff1">The Bioinformatics Centre, Department of Biology and Biotech Research and Innovation Centre (BRIC), University of Copenhagen, Ole Maaløes Vej 5, Copenhagen, 2200 Denmark </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>31</day>
      <month>10</month>
      <year>2014</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>31</day>
      <month>10</month>
      <year>2014</year>
    </pub-date>
    <pub-date pub-type="ppub">
      <year>2014</year>
    </pub-date>
    <volume>15</volume>
    <issue>10</issue>
    <elocation-id>501</elocation-id>
    <history>
      <date date-type="received">
        <day>24</day>
        <month>1</month>
        <year>2014</year>
      </date>
      <date date-type="accepted">
        <day>9</day>
        <month>10</month>
        <year>2014</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© Maretty et al.; licensee BioMed Central Ltd. 2014</copyright-statement>
      <license license-type="open-access">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0">http://creativecommons.org/licenses/by/2.0</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly credited. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <p>RNA sequencing allows for simultaneous transcript discovery and quantification, but reconstructing complete transcripts from such data remains difficult. Here, we introduce <italic>Bayesembler</italic>, a novel probabilistic method for transcriptome assembly built on a Bayesian model of the RNA sequencing process. Under this model, samples from the posterior distribution over transcripts and their abundance values are obtained using Gibbs sampling. By using the frequency at which transcripts are observed during sampling to select the final assembly, we demonstrate marked improvements in sensitivity and precision over state-of-the-art assemblers on both simulated and real data. <italic>Bayesembler</italic> is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/bioinformatics-centre/bayesembler">https://github.com/bioinformatics-centre/bayesembler</ext-link>.</p>
      <sec>
        <title>Electronic supplementary material</title>
        <p>The online version of this article (doi:10.1186/s13059-014-0501-4) contains supplementary material, which is available to authorized users.</p>
      </sec>
    </abstract>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2014</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p>The massive throughput of second-generation sequencing technologies is rapidly changing our ability to explore complex transcriptomic landscapes as it can reveal both sample-specific transcript variants and their abundances (i.e. expression levels). However, due to the combination of alternative splicing and the short sequencing fragments characteristic of these methods, it is often not possible to determine directly which exons are linked in splice variants over longer sequence distances. Instead, due to variation in abundance between alternative splice variants, read coverage along exons and splice junctions can be used to infer the most likely exon combinations.</p>
    <p>We define transcriptome assembly as the problem of determining the set of expressed transcripts and their abundance levels in a sample from a set of RNA sequencing (RNA-seq) reads. Current assembly algorithms generally proceed by first extracting exon boundary and splice junction information from the RNA-seq reads, which is then used to build a set of splice graphs representing all possible splice variants [<xref ref-type="bibr" rid="CR1">1</xref>]. This problem can generally be solved efficiently using either a reference-based strategy, where a reference genome is used as a scaffold in splice graph assembly, or by <italic>de novo</italic> construction. Given a graph, the challenge is then to determine which combination of transcripts – represented by paths in the graph – and associated abundances best explains the data. However, as shorter sequencing fragments give rise to larger numbers of putative transcripts, we know <italic>a priori</italic> that we should generally search for solutions that are sparse relative to the total number of paths in the graph. The inference objective is thus to find solutions sufficiently rich to explain both the graph and its read coverage without overfitting by predicting too many transcripts.</p>
    <p>The widely used <italic>Cufflinks</italic> [<xref ref-type="bibr" rid="CR2">2</xref>] method estimates splice variants and their abundances sequentially and solves the former problem by searching for the smallest set of transcripts that can explain the graph guided by splice junction coverage information. However, the use of only local coverage information makes it susceptible to noise and the search for the minimal set of transcripts lacks a biological foundation as more complex solutions may better explain the full graph coverage. More recent assemblers like <italic>IsoLasso</italic> [<xref ref-type="bibr" rid="CR3">3</xref>], <italic>SLIDE</italic> [<xref ref-type="bibr" rid="CR4">4</xref>], <italic>CEM</italic> [<xref ref-type="bibr" rid="CR5">5</xref>] and <italic>iReckon</italic> [<xref ref-type="bibr" rid="CR6">6</xref>] co-estimate splice variants and abundances using regularisation-based methods. But these approaches achieve sparsity by effectively thresholding transcript abundances and thus implicitly penalise lowly abundant transcripts. The <italic>Mitie</italic> [<xref ref-type="bibr" rid="CR7">7</xref>] assembler avoids the thresholding approach to regularisation by using a greedy variant of mixed-integer programming, which, however, comes at the risk of only finding suboptimal solutions. Similarly, the <italic>Traph</italic> [<xref ref-type="bibr" rid="CR8">8</xref>] assembler pursues the simplest possible transcript solution also using a greedy graph-optimisation algorithm. More generally, most assemblers rely on a number of hard-to-tune hyperparameters and heuristic thresholds, which suggests that the methods may not generalise well across, for example, species and RNA-seq protocols. Finally, even under sparse estimation conditions, model identifiability issues and noise may still give rise to uncertainty about the correct combination of expressed transcripts, thus motivating a fully probabilistic approach to the assembly problem.</p>
    <p>Here, we present a novel probabilistic approach to transcriptome assembly based on an efficient Gibbs sampling method for inference in a Bayesian model of the RNA sequencing process. By modelling a subset of paths in the graph – or transcript candidates – as having point-zero abundance, the Bayesian formulation allows us to model the prior expectation of the number of expressed transcripts (sparsity) without penalising lowly expressed ones. The frequency at which transcript candidates are observed to have positive abundance in a set of Gibbs samples then serves as a confidence metric for each transcript. These confidence estimates are in turn used to determine the final assembly and further provide a means for prioritising assembled transcripts for downstream validation. Our method is implemented in C++ as a complete transcriptome assembly package under the name <italic>Bayesembler</italic>.</p>
  </sec>
  <sec id="Sec2" sec-type="results">
    <title>Results</title>
    <p>We first present an informal overview of our model and inference method; a formal description is provided under Materials and methods. We then compare the performance of our assembler with a panel of state-of-the-art transcriptome assembly methods on a number of different datasets.</p>
    <sec id="Sec3">
      <title>The Bayesembler</title>
      <p>The algorithm first constructs a set of splice graphs from a <italic>TopHat2</italic> [<xref ref-type="bibr" rid="CR9">9</xref>] map of the RNA-seq reads using the graph construction routine in the <italic>CEM</italic> [<xref ref-type="bibr" rid="CR5">5</xref>] assembly package (Figure <xref rid="Fig1" ref-type="fig">1</xref>(1)). Next, for each splice graph, a set of candidate transcripts is constructed by iteratively traversing paths in the graph and pruning the edges with lowest coverage until the total number of candidates does not exceed 100 (Figure <xref rid="Fig1" ref-type="fig">1</xref>(2)). Provided with a set of transcript candidates, we use Bayesian inference to determine the most likely combination of candidates and corresponding abundance levels.
<fig id="Fig1"><label>Figure 1</label><caption><p><bold>Outline of the Bayesembler algorithm.</bold><bold>(1)</bold> A splice graph is first constructed from the RNA-seq data. <bold>(2)</bold> Transcript candidates are subsequently enumerated by exhaustively searching paths in the graph. <bold>(3–5)</bold> Gibbs sampling is then used to infer the posterior distribution over expressed candidates, their abundances and assignments of reads to candidates. <bold>(3)</bold> The sampler is initialised by randomly sampling a candidate assignment for each paired-end read and proceeds as follows. <bold>(4a)</bold> First, candidate expression values (i.e. binary values indicating whether the candidate has non-zero abundance) are sampled conditioned on an assignment of reads. <bold>(4b)</bold> Next, abundance values are sampled conditioned on the expressions and read assignments. <bold>(4c)</bold> Finally, read-to-candidate assignments are sampled conditioned on the transcript expression and abundance values, and the conditional probabilities of observing the reads given the candidates. <bold>(5a,b)</bold> The fraction of iterations a candidate transcript is expressed during sampling and its mean abundance level across expressed iterations are then used to estimate candidate confidence and abundance levels, respectively. <bold>(6)</bold> The final assembly is produced by selecting the transcript candidates with highest confidence.</p></caption><graphic xlink:href="13059_2014_501_Fig1_HTML" id="MO1"/></fig></p>
      <p>Our inference method is built on a generative model of the RNA sequencing process. In the model, each candidate is associated with a binary random variable, which models whether the candidate is expressed (i.e. has non-zero abundance); this construct allows us to model our prior expectation of sparsity in the number of expressed candidates. Each expressed transcript is further associated with a real-valued random variable, which models its relative abundance. Finally, we assume that the binary variables share a Bernoulli prior distribution, which controls the number of expressed candidates, and further assume a symmetric Dirichlet prior distribution on the abundances of the expressed transcripts. Intuitively, this construct decouples the distribution of candidate expression from the distribution over abundance levels and hereby contrasts with most current approaches by not penalising lowly abundant transcripts. To specify a complete generative model of the RNA sequencing process, we assume that for each transcript a binary variable is first drawn from the Bernoulli distribution, followed by a draw of abundance values from the Dirichlet distribution for the expressed transcripts. For each paired-end read to be generated, a transcript is then drawn from the categorical distribution specified by the relative abundances, followed by sampling of a paired-end read from the transcript, essentially as described by Pachter [<xref ref-type="bibr" rid="CR10">10</xref>].</p>
      <p>A Gibbs sampling method was derived to infer the joint posterior distribution over expressed candidates, their abundances and assignments of reads to candidate transcripts, where the latter represents a latent variable in our model (Figure <xref rid="Fig1" ref-type="fig">1</xref>(3–5)). The Gibbs sampler is initialised by randomly sampling a candidate assignment for each read and proceeds as follows (Figure <xref rid="Fig1" ref-type="fig">1</xref>(3)). First, candidate expression values (i.e. binary values indicating whether a transcript has non-zero abundance) are sampled conditioned on an assignment of reads (Figure <xref rid="Fig1" ref-type="fig">1</xref>(4a)). Next, abundance values are sampled conditioned on the set of expressed transcripts and read assignments (Figure <xref rid="Fig1" ref-type="fig">1</xref>(4b)). Finally, each read is assigned to a candidate conditioned on the expression and abundance values of all candidates, and the probabilities of observing the read given each of the candidates (Figure <xref rid="Fig1" ref-type="fig">1</xref>(4c)). The number of iterations of these three steps needed to explore the posterior distribution sufficiently is then calculated as an affine function of the number of candidates. The main output of the algorithm is the fraction of iterations in which a candidate transcript is expressed (our confidence metric) and a posterior mean abundance estimate for each candidate (Figure <xref rid="Fig1" ref-type="fig">1</xref>(5a,b)). Candidates with a confidence above 0.5 and at least 12 expected paired-end read counts are included in the final assembly; the latter threshold is enforced to filter out putative transcript fragments (Figure <xref rid="Fig1" ref-type="fig">1</xref>(6)). The hyperparameter that controls the prior distribution over the number of expressed transcripts was estimated using a greedy minimum set cover method.</p>
    </sec>
    <sec id="Sec4">
      <title>Performance evaluation</title>
      <p>The performance of our method was compared with state-of-the-art assemblers on both simulated data and data from the human K562 erythroleukaemia and H1 embryonic stem cell lines [<xref ref-type="bibr" rid="CR11">11</xref>] as well as mouse dendritic cells [<xref ref-type="bibr" rid="CR12">12</xref>]. We sought to compare against all assemblers that do not require a genome annotation and that are capable of handling paired-end data. Furthermore, we required that assemblers were stable and efficient enough to complete assembly on at least two of the employed datasets within a week of computation on a server with 40 CPUs. The <italic>Cufflinks</italic>, <italic>IsoLasso</italic>, <italic>CEM</italic> and <italic>Traph</italic> assemblers were selected based on these criteria. To retain a fair ground for comparison, a single set of optimal <italic>Bayesembler</italic> hyperparameters was estimated across datasets using partitions of the simulated, K562 and mouse dendritic cell data reserved for this purpose. Hence, the presented performance estimates for <italic>Bayesembler</italic> were obtained on hold-out partitions of these datasets together with the complete H1 dataset, which was reserved solely for testing purposes.</p>
      <sec id="Sec5">
        <title>Simulated data</title>
        <p>For the simulation study, a dataset of approximately 80 million paired-end strand-specific RNA-seq reads were simulated from the UCSC Known Genes annotation [<xref ref-type="bibr" rid="CR13">13</xref>] using the <italic>Flux Simulator</italic> [<xref ref-type="bibr" rid="CR14">14</xref>]. The main measures of performance were sensitivity, defined as the fraction of simulated transcripts that were assembled correctly, and precision, defined as the fraction of assembled transcripts found in the set of simulated transcripts.</p>
        <p>Our method exhibited both higher sensitivity and precision than all other methods (Figure <xref rid="Fig2" ref-type="fig">2</xref>a,b). More specifically, <italic>Bayesembler</italic> assembled 3,528 more correct transcripts, while producing 9,427 less incorrect ones on the data simulated from 40,496 annotated transcripts than the runner-up assembler, <italic>IsoLasso</italic>. Importantly, both sensitivity and precision remained higher for <italic>Bayesembler</italic> relative to the other assemblers independent of transcript abundance levels (Figure <xref rid="Fig2" ref-type="fig">2</xref>c,d). Moreover, the length distribution of transcripts predicted by <italic>Bayesembler</italic> resembled the length distribution of the simulated transcripts in contrast with the other assemblers, which tended to produce shorter transcripts (Figure <xref rid="Fig2" ref-type="fig">2</xref>e). Furthermore, <italic>Bayesembler</italic> was better at estimating the number of expressed splice variants for each predicted gene than the other assemblers, which may partially explain the observed improvements in assembly accuracy (Figure <xref rid="Fig2" ref-type="fig">2</xref>f, Figure S1 in Additional file <xref rid="MOESM1" ref-type="media">1</xref>). Finally, we assessed the accuracy of the transcript abundance estimates produced by the assemblers (Figure <xref rid="Fig2" ref-type="fig">2</xref>g, Figure S2 in Additional file <xref rid="MOESM1" ref-type="media">1</xref>). Here, the estimates produced by <italic>Bayesembler</italic> exhibited marginally better agreement with the simulated values compared with all other assemblers.
<fig id="Fig2"><label>Figure 2</label><caption><p><bold>Assembler performance on simulated RNA-seq data.</bold><bold>(a)</bold> Overall sensitivity, defined as the fraction of simulated transcripts that were predicted correctly. <bold>(b)</bold> Overall precision, defined as the fraction of predicted transcripts found in the set of simulated transcripts. <bold>(c, d)</bold> Sensitivity and precision as functions of simulated and predicted abundance, respectively. <bold>(e)</bold> Transcript length distributions of predicted and simulated transcripts (logarithmic binning). <bold>(f)</bold> Mean absolute difference between the number of predicted and the number of simulated splice variants for each predicted gene. <bold>(g)</bold> Spearman’s rank correlation between predicted and simulated abundances for transcripts predicted correctly by all five assemblers.</p></caption><graphic xlink:href="13059_2014_501_Fig2_HTML" id="MO2"/></fig></p>
      </sec>
      <sec id="Sec6">
        <title>Real data</title>
        <p>To assess performance on real data, the assemblers were tested on paired-end strand-specific RNA-seq data from two biological replicates from the K562 and H1 cell lines, and a single replicate of mouse dendritic cells. Importantly, these datasets represent different species, tissues, library construction protocols and sequencing depths. Of note, it was not possible to run the <italic>Traph</italic> assembler on the K562 and H1 data due to instability of the program. As there is no gold standard transcriptome reference for real data, we combined three complementary validation strategies to assess performance of the different assemblers.</p>
        <p>We first evaluated assembler performance by estimating the number of predicted transcripts that could be confirmed using the UCSC Known Genes annotation against the total number of predicted transcripts. To adjust for any abundance bias in the annotation and between assemblers, we calculated the number of confirmed transcript predictions across a sequence of thresholds on abundance and plotted it against the corresponding number of predicted transcripts. Hence, the final performance metric is a curve, where the height and slope represent sensitivity and precision, respectively. For both the K562 and H1 data, the <italic>Bayesembler</italic> curve extended higher and ascended more steeply for both replicates than any of the other assemblers thus indicating both better sensitivity and precision of our method (Figure <xref rid="Fig3" ref-type="fig">3</xref>a,b, Figure S3a,b in Additional file <xref rid="MOESM1" ref-type="media">1</xref>). Importantly, similar results were observed for data from mouse dendritic cells, which in turn suggests that the results are robust across species, tissues and library construction protocols (Figure <xref rid="Fig3" ref-type="fig">3</xref>c). Interestingly, we also observed that the transcript lengths produced by <italic>Bayesembler</italic> were closer to the length distribution of annotated transcripts than the other assemblers, which again tended to produce shorter transcripts (Figure S4a–e in Additional file <xref rid="MOESM1" ref-type="media">1</xref>).
<fig id="Fig3"><label>Figure 3</label><caption><p><bold>Assembler performance estimates for real RNA-seq data using an annotation-based measure.</bold> The number of assembled transcripts from <bold>(a)</bold> K562 (replicate 1), <bold>(b)</bold> H1 (replicate 1) and <bold>(c)</bold> mouse dendritic cells that were confirmed using the UCSC Known Genes annotation plotted against the corresponding number of predicted transcripts across a sequence of abundance thresholds (decreasing abundance threshold from left to right).</p></caption><graphic xlink:href="13059_2014_501_Fig3_HTML" id="MO3"/></fig></p>
        <p>Next, we evaluated both replicate assemblies of the H1 transcriptome using data from a recent study by Au <italic>et al.</italic> [<xref ref-type="bibr" rid="CR15">15</xref>]. In this study, RNA from the same cell line was sequenced on the Pacific Biosciences (PacBio) platform (Pacific Biosciences, California, USA), which produces significantly longer reads than standard second-generation sequencing platforms at the expense of lower throughput. As sampling bias implies that lowly abundant transcripts have a lower probability of being verified by a PacBio read, we again used the curve-based metric introduced above to adjust for transcript abundance bias between assemblers. Hence, we computed the number of transcript predictions that could be verified by a PacBio read against the corresponding full number of predictions across a sequence of thresholds on abundance (Figure <xref rid="Fig4" ref-type="fig">4</xref>a, Figure S5 in Additional file <xref rid="MOESM1" ref-type="media">1</xref>). In agreement with the annotation-based results, <italic>Bayesembler</italic> found more verified transcripts both in absolute numbers and relative to the total number of predicted transcripts for each threshold, thus demonstrating better sensitivity and precision, respectively.
<fig id="Fig4"><label>Figure 4</label><caption><p><bold>Assembler performance estimates for real RNA-seq data using PacBio and replicate stability-based measures.</bold><bold>(a)</bold> The number of assembled transcripts from H1 (replicate 1) that were verified by a PacBio read against the corresponding number of predicted transcripts across a sequence of abundance thresholds (decreasing abundance threshold from left to right). The number of stable transcripts (i.e. predicted multi-exonic transcripts that were identical between replicates) from <bold>(b)</bold> K562 and <bold>(c)</bold> H1 plotted against the corresponding number of predicted transcripts across a sequence of thresholds on transcript rank, where the ranks were obtained by sorting transcripts in each replicate in decreasing order of abundance (decreasing rank threshold from left to right).</p></caption><graphic xlink:href="13059_2014_501_Fig4_HTML" id="MO4"/></fig></p>
        <p>Finally, we leveraged the large degree of overlap expected between the transcriptomes of biological replicates to evaluate the different assemblers. We defined stable transcripts as multi-exonic transcripts that were present in both replicate assemblies. Again, we used a curve-based metric to correct for abundance bias between assemblers as lowly abundant transcripts are expected to be less stable. More specifically, for each pair of K562 and H1 replicates, assembled transcripts were ranked according to abundance for each of the replicates and the number of stable transcripts above a certain rank was plotted against the corresponding number of predicted transcripts to produce a curve with a point for each rank (Figure <xref rid="Fig4" ref-type="fig">4</xref>b,c). As seen in the figure, transcripts predicted by <italic>Bayesembler</italic> were generally more stable across replicates than those of any of the other assemblers, suggesting improved performance. We further used the replicate assemblies to evaluate the impact of noise on transcript abundance estimation by comparing the estimates across replicates (Figures S6 and S7 in Additional file <xref rid="MOESM1" ref-type="media">1</xref>). Only minor differences in replicate abundance correlations were observed between the different assemblers, with <italic>Bayesembler</italic> performing best for the K562 data and <italic>Cufflinks</italic> performing best for the H1 data.</p>
      </sec>
    </sec>
  </sec>
  <sec id="Sec7" sec-type="discussion">
    <title>Discussion</title>
    <p>We have devised a new probabilistic approach to transcriptome assembly. Our primary result is the derivation of a Bayesian model of the RNA sequencing process, which uses a novel prior distribution over transcript abundances to model the number of expressed transcripts for each gene. The model thus provides a statistically consistent way of combining <italic>a priori</italic> knowledge about sparsity in the number of expressed transcripts with information from the sequencing data. Importantly, in the model, only the read distribution along transcript sequences – and not transcript abundance levels – influences which transcripts are inferred as expressed. This contrasts with most current assemblers, which use abundance – either implicitly through regularisation or explicitly by truncating assemblies at an abundance cut-off – as a proxy for transcript confidence. This is despite the fact that abundance contains only limited information about whether a transcript is expressed in a sample.</p>
    <p>The main advantage of our fully probabilistic approach is the ability to quantify our degree of confidence in a transcript given the data. To our knowledge, all previously published assemblers output assembly point estimates and thus provide no means of prioritising newly discovered variants for downstream validation. In contrast, <italic>Bayesembler</italic> provides both a confidence and an abundance estimate for each transcript. To evaluate our confidence metric, we used a simple threshold on confidence – and expected read count – to determine the most likely assembly from one simulated and five real datasets and compared our performance with those of state-of-the-art assemblers. Measuring the accuracy of transcriptome assembly algorithms without extensive experimental validation is difficult. More specifically, simulated data provides a known ground truth at the cost of less realistic splicing and noise patterns, whereas real-data benchmarks suffer from the lack of a ground truth reference. We therefore used a combination of simulations and three complementary metrics applied across different real datasets to gauge performance.</p>
    <p>For simulated data, <italic>Bayesembler</italic> markedly outperformed all other assemblers on both sensitivity and precision, with <italic>IsoLasso</italic> coming in as runner-up. Interestingly, <italic>Bayesembler</italic> was markedly better at estimating the number of expressed transcripts for each gene, thus lending confidence to our sparsity model. In contrast, <italic>Cufflinks</italic> markedly underestimated the number of transcripts for many genes, suggesting that its strong sparsity objective negatively affects both sensitivity and precision. Real-data benchmarking was performed by comparing assemblies with both transcript annotations, PacBio long-read sequencing data and independent assemblies made for biological replicates to adjust for biases in the individual verification methods. As the latter two reference sets (and likely also annotations) all favour highly abundant transcripts, we used a novel curve-based metric to take into account any possible abundance bias between assemblers. <italic>Bayesembler</italic> consistently outperformed all other assemblers, with <italic>Cufflinks</italic> coming in as runner-up for all metrics for all datasets. Clearly, the validity of the real-data performance metrics is strengthened because the same ranking of assembler performance was observed across metrics and datasets. The performance ranking of <italic>IsoLasso</italic> and <italic>Cufflinks</italic> was inconsistent between the benchmarks for simulated and real data. We speculate that annotation-based simulations may give rise to genes with more complex splicing patterns (i.e. more variants per gene), which may have impaired the performance of <italic>Cufflinks</italic>. Abundance estimation accuracy was also investigated, with <italic>Bayesembler</italic> and <italic>Cufflinks</italic> performing better than <italic>CEM</italic> and <italic>IsoLasso</italic>, but the results did not allow for performance ranking of the former two assemblers.</p>
    <p>Importantly, the gain in accuracy provided by <italic>Bayesembler</italic> does not come at the cost of increased computation time. Indeed, our program took approximately 5.5 hours on 16 CPU cores to assemble the deepest benchmark dataset (approximately 125 million paired-end reads) with a maximum memory footprint of 1.7 GB. This is both faster and more memory efficient than the widely used <italic>Cufflinks</italic> assembler.</p>
    <p>Looking ahead, we believe that our method will also benefit fields outside of reference-based transcriptome assembly. First, we note that our probabilistic inference method is also directly applicable to <italic>de novo</italic> assembled splice graphs and could easily be implemented as a post-processing routine in packages like <italic>Trinity</italic> [<xref ref-type="bibr" rid="CR12">12</xref>] and <italic>Oases</italic> [<xref ref-type="bibr" rid="CR16">16</xref>]. Second, the ability to consistently average quantities that depend on the transcript structure provides an additional advantage of our probabilistic approach. Indeed, a recent study highlighted the influence of transcript structure on gene expression estimates [<xref ref-type="bibr" rid="CR17">17</xref>] and we speculate that gene expression estimates averaged across assemblies may improve the accuracy of differential expression tests.</p>
  </sec>
  <sec id="Sec8" sec-type="conclusion">
    <title>Conclusions</title>
    <p>RNA-seq is rapidly becoming the <italic>de facto</italic> standard method for expression analysis. However, despite vast amounts of available data, the reconstruction of complete transcripts from such data remains a fundamental challenge in computational biology.</p>
    <p>We present here <italic>Bayesembler</italic>, a statistical approach to transcriptome assembly based on a novel Bayesian model and inference method. Using our approach, we observe a marked and consistent improvement both in assembly sensitivity and precision over state-of-the-art assemblers as judged using several independent robust measures applied across several datasets. Moreover, the use of a fully probabilistic approach allows us to provide a confidence (and an abundance) estimate for each transcript, which we expect will aid in prioritising newly discovered transcripts for experimental validation.</p>
  </sec>
  <sec id="Sec9" sec-type="materials|methods">
    <title>Materials and methods</title>
    <p>Our transcriptome assembly algorithm proceeds by first constructing a set of splice graphs [<xref ref-type="bibr" rid="CR1">1</xref>] (i.e. a directed acyclic graph where vertices represent exons and edges represent exon–exon junctions) from an alignment of RNA-seq reads. Next, for each splice graph, transcript candidates are enumerated by exhaustively searching paths in the graph. Bayesian inference is then used to identify the most probable transcript candidates and associated abundance levels given the reads using a generative model of the RNA sequencing process.</p>
    <sec id="Sec10">
      <title>Splice graph construction and generation of transcript candidates</title>
      <p>Provided with a <italic>TopHat2</italic> [<xref ref-type="bibr" rid="CR9">9</xref>] alignment of RNA-seq reads, putative PCR duplicates and multimapping reads are first removed. Furthermore, only reads mapping in a proper paired-end fashion are retained. For strand-specific data, the originating strand is inferred for each paired-end read and splice graphs are constructed separately for each strand using the <italic>processsam</italic> utility from the <italic>CEM</italic> (v0.9.1) [<xref ref-type="bibr" rid="CR5">5</xref>] transcriptome assembly package with the -d &lt;strand&gt; option. For unstranded data, the originating strand is inferred from splice site information by running <italic>processsam</italic> with the -d. option. All graphs for which a strand cannot be inferred are discarded by the assembler. For both stranded and unstranded data, <italic>processsam</italic> is run with a minimum gap length between genes of one and a minimum number of two reads per gene (-g 1 -c 2).</p>
      <p>A set of candidate transcripts is then generated for each splice graph using the following iterative procedure. The algorithm is first initialised with an edge-coverage threshold of one read. For each splice graph, all source-to-sink paths are then enumerated using a depth-first search until the search is complete or the number of candidates exceeds 100. In the latter case, the edge-coverage threshold is incremented by one and all edges with a coverage below the threshold removed from the graph; the graph-search and edge-pruning steps are iterated until the path search has been completed without exceeding the threshold or all edges have been removed. To model the presence of pre-mRNA in the sample, a candidate with a single exon spanning the entire genomic interval of the splice graph is included. Next, to leverage paired-end information, only candidates with paired-end read coverage across all splice junctions are retained. Finally, to improve detection of pre-mRNA material, candidates from overlapping splice graphs are combined and the resulting candidate sets used as bases for the probabilistic inference method.</p>
    </sec>
    <sec id="Sec11">
      <title>A generative model of the RNA-sequencing process</title>
      <p>We will use <italic>sequencing fragment</italic> to denote a read pair. The overall process of generating a set <italic>F</italic> of <italic>n</italic> sequencing fragments given a set <italic>S</italic> of <italic>m</italic> candidate transcripts proceeds as follows. First, a set of relative transcript abundances taking values in [0,1] is drawn from a prior distribution. The inclusion of point-zero abundances in the sample space reflects prior knowledge that only a subset of the candidates are likely to be expressed. For each fragment to be generated, a transcript candidate is then sampled conditioned on the abundance values followed by sampling the fragment’s two sequencing reads conditioned on the selected candidate.</p>
      <p>To define a prior distribution that allows for point-zero transcript abundances, let first <bold>z</bold> be a vector of <italic>m</italic> independent random variables drawn from the Bernoulli distribution with parameter <italic>π</italic> such that: 
<disp-formula id="Equa"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\mathbb{P}(\mathbf{z}|\pi) = \pi^{b_{\mathbf{z}}}\left(1-\pi\right)^{m-b_{\mathbf{z}}} K_{\mathbf{z}_{0}} $$ \end{document}</tex-math><mml:math id="M2"><mml:mrow><mml:mi>ℙ</mml:mi><mml:mo>(</mml:mo><mml:mi mathvariant="bold">z</mml:mi><mml:mo>|</mml:mo><mml:mi>π</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>π</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold">z</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:msup><mml:mrow><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>π</mml:mi></mml:mrow></mml:mfenced></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold">z</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:msub><mml:mrow><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">z</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math><graphic xlink:href="13059_2014_501_Article_Equa.gif" position="anchor"/></alternatives></disp-formula> where: 
<disp-formula id="Equb"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\begin{aligned} b_{\mathbf{z}}&amp;=\sum_{j=1}^{m} z_{j}\quad \text{and} \quad K_{\mathbf{z}_{0}}&amp;=\frac{1}{1-\left(1-\pi\right)^{m}} \end{aligned} $$ \end{document}</tex-math><mml:math id="M4"><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:msub><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold">z</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:munderover accent="false" accentunder="false"><mml:mrow><mml:mo mathsize="big">∑</mml:mo></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mspace width="1em"/><mml:mtext>and</mml:mtext><mml:mspace width="1em"/><mml:msub><mml:mrow><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">z</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msup><mml:mrow><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>π</mml:mi></mml:mrow></mml:mfenced></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfrac></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2014_501_Article_Equb.gif" position="anchor"/></alternatives></disp-formula> (Supplementary methods 1 in Additional file <xref rid="MOESM1" ref-type="media">1</xref>). Then, let <italic>z</italic><sub><italic>j</italic></sub>=0 and <italic>z</italic><sub><italic>j</italic></sub>=1 indicate that transcript <italic>s</italic><sub><italic>j</italic></sub> has point-zero abundance (i.e. <italic>s</italic><sub><italic>j</italic></sub> is not expressed) and positive abundance (i.e. <italic>s</italic><sub><italic>j</italic></sub> is expressed), respectively. Next, let <bold>e</bold><sup>+</sup> be a vector containing the relative abundance levels for the expressed transcripts such that: 
<disp-formula id="Equc"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$|\mathbf{e}^{+} |=b_{\mathbf{z}} \quad \text{and} \quad \sum_{k=1}^{b_{\mathbf{z}}}e_{k}^{+}=1, $$ \end{document}</tex-math><mml:math id="M6"><mml:mrow><mml:mo>|</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold">e</mml:mi></mml:mrow><mml:mrow><mml:mo>+</mml:mo></mml:mrow></mml:msup><mml:mo>|</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold">z</mml:mi></mml:mrow></mml:msub><mml:mspace width="1em"/><mml:mtext>and</mml:mtext><mml:mspace width="1em"/><mml:munderover accent="false" accentunder="false"><mml:mrow><mml:mo mathsize="big">∑</mml:mo></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold">z</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:munderover><mml:msubsup><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mo>+</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:math><graphic xlink:href="13059_2014_501_Article_Equc.gif" position="anchor"/></alternatives></disp-formula> and let the values be symmetrically Dirichlet distributed such that: 
<disp-formula id="Equd"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\mathbb{P}(\mathbf{e}^{+}|\mathbf{z},\gamma)=\frac{\Gamma\left(b_{\mathbf{z}} \gamma\right)}{\Gamma\left(\gamma\right)^{b_{\mathbf{z}}}}\prod_{k=1}^{b_{\mathbf{z}}}\left(e_{k}^{+}\right)^{\gamma-1} $$ \end{document}</tex-math><mml:math id="M8"><mml:mrow><mml:mi>ℙ</mml:mi><mml:mo>(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold">e</mml:mi></mml:mrow><mml:mrow><mml:mo>+</mml:mo></mml:mrow></mml:msup><mml:mo>|</mml:mo><mml:mi mathvariant="bold">z</mml:mi><mml:mo>,</mml:mo><mml:mi>γ</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>Γ</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msub><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold">z</mml:mi></mml:mrow></mml:msub><mml:mi>γ</mml:mi></mml:mrow></mml:mfenced></mml:mrow><mml:mrow><mml:mi>Γ</mml:mi><mml:msup><mml:mrow><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mi>γ</mml:mi></mml:mrow></mml:mfenced></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold">z</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup></mml:mrow></mml:mfrac><mml:munderover accent="false" accentunder="false"><mml:mrow><mml:mo mathsize="big">∏</mml:mo></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold">z</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:munderover><mml:msup><mml:mrow><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msubsup><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mo>+</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:mfenced></mml:mrow><mml:mrow><mml:mi>γ</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math><graphic xlink:href="13059_2014_501_Article_Equd.gif" position="anchor"/></alternatives></disp-formula> where <italic>Γ</italic> is the gamma function. Finally, define <bold>e</bold> to be the vector of transcript abundances taking values in [0,1] and let it be completely specified by <bold>z</bold> and <bold>e</bold><sup>+</sup> such that <italic>e</italic><sub><italic>j</italic></sub>=0 when <italic>z</italic><sub><italic>j</italic></sub>=0 and <inline-formula id="IEq1"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$e_{j}=e_{k}^{+}$\end{document}</tex-math><mml:math id="M10"><mml:msub><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msubsup><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mo>+</mml:mo></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="13059_2014_501_Article_IEq1.gif"/></alternatives></inline-formula> when <italic>z</italic><sub><italic>j</italic></sub>=1, where: 
<disp-formula id="Eque"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$k=\sum_{l=1}^{j}z_{l} $$ \end{document}</tex-math><mml:math id="M12"><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:munderover accent="false" accentunder="false"><mml:mrow><mml:mo mathsize="big">∑</mml:mo></mml:mrow><mml:mrow><mml:mi>l</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>l</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math><graphic xlink:href="13059_2014_501_Article_Eque.gif" position="anchor"/></alternatives></disp-formula> Then, to generate a set of abundance values, <italic>m</italic> binary values are first drawn from the Bernoulli distribution conditioned on the parameter <italic>π</italic> followed by sampling of <bold>e</bold><sup>+</sup> from the <italic>b</italic><sub><bold>z</bold></sub>-dimensional symmetric Dirichlet distribution. Conditioned on the set of abundances, each fragment <italic>f</italic>∈<italic>F</italic> is then generated by first sampling a transcript index <italic>t</italic> from the categorical distribution <inline-formula id="IEq2"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathbb {P}(t|\mathbf {e})$\end{document}</tex-math><mml:math id="M14"><mml:mi>ℙ</mml:mi><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant="bold">e</mml:mi><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="13059_2014_501_Article_IEq2.gif"/></alternatives></inline-formula> defined by <bold>e</bold> (i.e. <inline-formula id="IEq3"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathbb {P}(t|\mathbf {e})=e_{t}$\end{document}</tex-math><mml:math id="M16"><mml:mi>ℙ</mml:mi><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant="bold">e</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2014_501_Article_IEq3.gif"/></alternatives></inline-formula>). Finally, conditioned on the candidate index, the fragment sequences are sampled from <inline-formula id="IEq4"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathbb {P}(f|t,q,S,\mu,\sigma)$\end{document}</tex-math><mml:math id="M18"><mml:mi>ℙ</mml:mi><mml:mo>(</mml:mo><mml:mi>f</mml:mi><mml:mo>|</mml:mo><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mi>S</mml:mi><mml:mo>,</mml:mo><mml:mi>μ</mml:mi><mml:mo>,</mml:mo><mml:mi>σ</mml:mi><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="13059_2014_501_Article_IEq4.gif"/></alternatives></inline-formula>, where <italic>q</italic>∈<italic>Q</italic> represent the observed quality scores for fragment <italic>f</italic>, and <italic>μ</italic> and <italic>σ</italic> denote the mean and standard deviation of the fragment length distribution, respectively, essentially as proposed by Pachter [<xref ref-type="bibr" rid="CR10">10</xref>].</p>
      <p>The joint distribution over a set of <italic>n</italic> fragments <italic>F</italic>, transcript indices <bold>t</bold> and transcript abundances <bold>e</bold> conditioned on the set of transcript candidates, quality scores and hyperparameters then factorises as 
<disp-formula id="Equf"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\begin{array}{*{20}l} &amp;\mathbb{P}(F,\mathbf{t},\mathbf{e}|Q,S,\mu,\sigma,\pi,\gamma)=\\ &amp;\mathbb{P}(\mathbf{e}|\pi,\gamma) \prod_{i=1}^{n}\mathbb{P}\left(\,f_{i}|t_{i},q_{i},S,\mu,\sigma\right)\mathbb{P}(t_{i}|\mathbf{e}) \end{array} $$ \end{document}</tex-math><mml:math id="M20"><mml:mtable class="align" columnalign="left"><mml:mtr><mml:mtd class="align-1"/><mml:mtd class="align-2"><mml:mi>ℙ</mml:mi><mml:mo>(</mml:mo><mml:mi>F</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold">t</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold">e</mml:mi><mml:mo>|</mml:mo><mml:mi>Q</mml:mi><mml:mo>,</mml:mo><mml:mi>S</mml:mi><mml:mo>,</mml:mo><mml:mi>μ</mml:mi><mml:mo>,</mml:mo><mml:mi>σ</mml:mi><mml:mo>,</mml:mo><mml:mi>π</mml:mi><mml:mo>,</mml:mo><mml:mi>γ</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mspace width="2em"/></mml:mtd><mml:mtd><mml:mspace width="2em"/></mml:mtd></mml:mtr><mml:mtr><mml:mtd class="align-1"/><mml:mtd class="align-2"><mml:mi>ℙ</mml:mi><mml:mo>(</mml:mo><mml:mi mathvariant="bold">e</mml:mi><mml:mo>|</mml:mo><mml:mi>π</mml:mi><mml:mo>,</mml:mo><mml:mi>γ</mml:mi><mml:mo>)</mml:mo><mml:munderover accent="false" accentunder="false"><mml:mrow><mml:mo mathsize="big">∏</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:munderover><mml:mi>ℙ</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mspace width="0.3em"/><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>q</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>S</mml:mi><mml:mo>,</mml:mo><mml:mi>μ</mml:mi><mml:mo>,</mml:mo><mml:mi>σ</mml:mi></mml:mrow></mml:mfenced><mml:mi>ℙ</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:mi mathvariant="bold">e</mml:mi><mml:mo>)</mml:mo><mml:mspace width="2em"/></mml:mtd><mml:mtd><mml:mspace width="2em"/></mml:mtd></mml:mtr></mml:mtable></mml:math><graphic xlink:href="13059_2014_501_Article_Equf.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>with 
<disp-formula id="Equg"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\mathbb{P}(\mathbf{e}|\pi,\gamma) = \mathbb{P}\left(\mathbf{e}^{+},\mathbf{z}|\pi,\gamma\right)=\mathbb{P}\left(\mathbf{e}^{+}|\mathbf{z},\gamma\right)\mathbb{P}(\mathbf{z}|\pi) $$ \end{document}</tex-math><mml:math id="M22"><mml:mrow><mml:mi>ℙ</mml:mi><mml:mo>(</mml:mo><mml:mi mathvariant="bold">e</mml:mi><mml:mo>|</mml:mo><mml:mi>π</mml:mi><mml:mo>,</mml:mo><mml:mi>γ</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mi>ℙ</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold">e</mml:mi></mml:mrow><mml:mrow><mml:mo>+</mml:mo></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:mi mathvariant="bold">z</mml:mi><mml:mo>|</mml:mo><mml:mi>π</mml:mi><mml:mo>,</mml:mo><mml:mi>γ</mml:mi></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mi>ℙ</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold">e</mml:mi></mml:mrow><mml:mrow><mml:mo>+</mml:mo></mml:mrow></mml:msup><mml:mo>|</mml:mo><mml:mi mathvariant="bold">z</mml:mi><mml:mo>,</mml:mo><mml:mi>γ</mml:mi></mml:mrow></mml:mfenced><mml:mi>ℙ</mml:mi><mml:mo>(</mml:mo><mml:mi mathvariant="bold">z</mml:mi><mml:mo>|</mml:mo><mml:mi>π</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:math><graphic xlink:href="13059_2014_501_Article_Equg.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>The corresponding graphical model is shown in Figure <xref rid="Fig5" ref-type="fig">5</xref>. Further details of the model derivation are provided in Supplementary methods 1 in Additional file <xref rid="MOESM1" ref-type="media">1</xref>.
<fig id="Fig5"><label>Figure 5</label><caption><p><bold>Graphical model of the joint probability distribution.</bold> The arrows indicate dependencies between random variables. Observed and unobserved random variables are coloured in <italic>red</italic> and <italic>white</italic>, respectively. Small filled circles indicate hyperparameters. The variables and hyperparameters are explained in the Materials and methods section and in Supplementary methods 1 in Additional file <xref rid="MOESM1" ref-type="media">1</xref>.</p></caption><graphic xlink:href="13059_2014_501_Fig5_HTML" id="MO5"/></fig></p>
    </sec>
    <sec id="Sec12">
      <title>Approximate inference using Gibbs sampling</title>
      <p>To apply the model to transcriptome assembly, we need to infer the posterior distribution over abundance levels <bold>e</bold>. This will in turn provide information on both whether a given transcript candidate <italic>s</italic><sub><italic>j</italic></sub> is expressed (i.e. when <italic>e</italic><sub><italic>j</italic></sub>&gt;0) and its abundance value if expressed. We treat the vector of transcript indices <bold>t</bold> as a nuisance variable to be inferred to make inference tractable, and <inline-formula id="IEq5"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathbb {P}(\mathbf {t},\mathbf {e}|F,Q,S,\mu,\sigma,\pi,\gamma)$\end{document}</tex-math><mml:math id="M24"><mml:mi>ℙ</mml:mi><mml:mo>(</mml:mo><mml:mi mathvariant="bold">t</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold">e</mml:mi><mml:mo>|</mml:mo><mml:mi>F</mml:mi><mml:mo>,</mml:mo><mml:mi>Q</mml:mi><mml:mo>,</mml:mo><mml:mi>S</mml:mi><mml:mo>,</mml:mo><mml:mi>μ</mml:mi><mml:mo>,</mml:mo><mml:mi>σ</mml:mi><mml:mo>,</mml:mo><mml:mi>π</mml:mi><mml:mo>,</mml:mo><mml:mi>γ</mml:mi><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="13059_2014_501_Article_IEq5.gif"/></alternatives></inline-formula> thus becomes the target posterior distribution. Samples from this joint distribution are obtained by iteratively drawing samples from <inline-formula id="IEq6"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathbb {P}(\mathbf {e}|\mathbf {t},\pi,\gamma)$\end{document}</tex-math><mml:math id="M26"><mml:mi>ℙ</mml:mi><mml:mo>(</mml:mo><mml:mi mathvariant="bold">e</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant="bold">t</mml:mi><mml:mo>,</mml:mo><mml:mi>π</mml:mi><mml:mo>,</mml:mo><mml:mi>γ</mml:mi><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="13059_2014_501_Article_IEq6.gif"/></alternatives></inline-formula> and <inline-formula id="IEq7"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathbb {P}(\mathbf {t}|\mathbf {e},F,Q,S,\mu,\sigma)$\end{document}</tex-math><mml:math id="M28"><mml:mi>ℙ</mml:mi><mml:mo>(</mml:mo><mml:mi mathvariant="bold">t</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant="bold">e</mml:mi><mml:mo>,</mml:mo><mml:mi>F</mml:mi><mml:mo>,</mml:mo><mml:mi>Q</mml:mi><mml:mo>,</mml:mo><mml:mi>S</mml:mi><mml:mo>,</mml:mo><mml:mi>μ</mml:mi><mml:mo>,</mml:mo><mml:mi>σ</mml:mi><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="13059_2014_501_Article_IEq7.gif"/></alternatives></inline-formula>. To do this, let <bold>c</bold> denote the vector of occurrences of each transcript index in <bold>t</bold> (i.e. |<bold>c</bold>|=<italic>m</italic> and <inline-formula id="IEq8"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\sum _{j=1}^{m}c_{j} =n$\end{document}</tex-math><mml:math id="M30"><mml:munderover><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>n</mml:mi></mml:math><inline-graphic xlink:href="13059_2014_501_Article_IEq8.gif"/></alternatives></inline-formula>). It follows from the model definition that <bold>c</bold> is a sufficient statistic for <bold>t</bold> with respect to the posterior distribution of <bold>e</bold>. From this and our definition of the prior distribution over abundances, it follows that: 
<disp-formula id="Equh"><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\mathbb{P}\left(\mathbf{e}|\mathbf{t},\pi,\gamma\right)=\mathbb{P}\left(\mathbf{e}^{+}|\mathbf{z},\mathbf{c},\gamma\right)\mathbb{P}\left(\mathbf{z}|\mathbf{c},\pi,\gamma\right) $$ \end{document}</tex-math><mml:math id="M32"><mml:mrow><mml:mi>ℙ</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mi mathvariant="bold">e</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant="bold">t</mml:mi><mml:mo>,</mml:mo><mml:mi>π</mml:mi><mml:mo>,</mml:mo><mml:mi>γ</mml:mi></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mi>ℙ</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold">e</mml:mi></mml:mrow><mml:mrow><mml:mo>+</mml:mo></mml:mrow></mml:msup><mml:mo>|</mml:mo><mml:mi mathvariant="bold">z</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold">c</mml:mi><mml:mo>,</mml:mo><mml:mi>γ</mml:mi></mml:mrow></mml:mfenced><mml:mi>ℙ</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mi mathvariant="bold">z</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant="bold">c</mml:mi><mml:mo>,</mml:mo><mml:mi>π</mml:mi><mml:mo>,</mml:mo><mml:mi>γ</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:math><graphic xlink:href="13059_2014_501_Article_Equh.gif" position="anchor"/></alternatives></disp-formula> A sample from <inline-formula id="IEq9"><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathbb {P}(\mathbf {e}|\mathbf {t},\pi,\gamma)$\end{document}</tex-math><mml:math id="M34"><mml:mi>ℙ</mml:mi><mml:mo>(</mml:mo><mml:mi mathvariant="bold">e</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant="bold">t</mml:mi><mml:mo>,</mml:mo><mml:mi>π</mml:mi><mml:mo>,</mml:mo><mml:mi>γ</mml:mi><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="13059_2014_501_Article_IEq9.gif"/></alternatives></inline-formula> can then be obtained by first drawing the number of expressed transcripts <italic>b</italic><sub><bold>z</bold></sub> from: 
<disp-formula id="Equi"><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $${} \mathbb{P}(b_{\mathbf{z}}|\mathbf{c},\pi,\gamma) = \frac{\left(\!\!\begin{array}{c}|J^{0}|\\{b_{\mathbf{z}}-|J^{+}|}\end{array}\!\!\right)\frac{\Gamma(b_{\mathbf{z}}\gamma)}{\Gamma(n+b_{\mathbf{z}}\gamma)}\pi^{b_{\mathbf{z}}}(1-\pi)^{m-b_{\mathbf{z}}}}{\sum_{b=|J^{+}|}^{m} \left(\!\!\begin{array}{c}|J^{0}|\\{b-|J^{+}|}\end{array}\!\!\right)\frac{\Gamma(b\gamma)}{\Gamma(n+b\gamma)}\pi^{b}(1-\pi)^{m-b}} $$ \end{document}</tex-math><mml:math id="M36"><mml:mrow><mml:mi>ℙ</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold">z</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:mi mathvariant="bold">c</mml:mi><mml:mo>,</mml:mo><mml:mi>π</mml:mi><mml:mo>,</mml:mo><mml:mi>γ</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mspace width="0.3em"/><mml:mspace width="0.3em"/><mml:mtable><mml:mtr><mml:mtd><mml:mo>|</mml:mo><mml:msup><mml:mrow><mml:mi>J</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msup><mml:mo>|</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold">z</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mo>|</mml:mo><mml:msup><mml:mrow><mml:mi>J</mml:mi></mml:mrow><mml:mrow><mml:mo>+</mml:mo></mml:mrow></mml:msup><mml:mo>|</mml:mo></mml:mtd></mml:mtr></mml:mtable><mml:mspace width="0.3em"/><mml:mspace width="0.3em"/></mml:mrow></mml:mfenced><mml:mfrac><mml:mrow><mml:mi>Γ</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold">z</mml:mi></mml:mrow></mml:msub><mml:mi>γ</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mi>Γ</mml:mi><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold">z</mml:mi></mml:mrow></mml:msub><mml:mi>γ</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mfrac><mml:msup><mml:mrow><mml:mi>π</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold">z</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>π</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold">z</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:munderover accent="false" accentunder="false"><mml:mrow><mml:mo mathsize="big">∑</mml:mo></mml:mrow><mml:mrow><mml:mi>b</mml:mi><mml:mo>=</mml:mo><mml:mo>|</mml:mo><mml:msup><mml:mrow><mml:mi>J</mml:mi></mml:mrow><mml:mrow><mml:mo>+</mml:mo></mml:mrow></mml:msup><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:munderover><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mspace width="0.3em"/><mml:mspace width="0.3em"/><mml:mtable><mml:mtr><mml:mtd><mml:mo>|</mml:mo><mml:msup><mml:mrow><mml:mi>J</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msup><mml:mo>|</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>b</mml:mi><mml:mo>−</mml:mo><mml:mo>|</mml:mo><mml:msup><mml:mrow><mml:mi>J</mml:mi></mml:mrow><mml:mrow><mml:mo>+</mml:mo></mml:mrow></mml:msup><mml:mo>|</mml:mo></mml:mtd></mml:mtr></mml:mtable><mml:mspace width="0.3em"/><mml:mspace width="0.3em"/></mml:mrow></mml:mfenced><mml:mfrac><mml:mrow><mml:mi>Γ</mml:mi><mml:mo>(</mml:mo><mml:mi>bγ</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mi>Γ</mml:mi><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mi>bγ</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mfrac><mml:msup><mml:mrow><mml:mi>π</mml:mi></mml:mrow><mml:mrow><mml:mi>b</mml:mi></mml:mrow></mml:msup><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>π</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>−</mml:mo><mml:mi>b</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfrac></mml:mrow></mml:math><graphic xlink:href="13059_2014_501_Article_Equi.gif" position="anchor"/></alternatives></disp-formula> where <italic>J</italic><sup>+</sup> is the subset of transcript indices <italic>j</italic> for which <italic>c</italic><sub><italic>j</italic></sub>&gt;0, <italic>J</italic><sup>0</sup> is the subset of indices for which <italic>c</italic><sub><italic>j</italic></sub>=0 and <italic>b</italic><sub><bold>z</bold></sub> is constrained such that <italic>J</italic><sup>+</sup>≤<italic>b</italic><sub><bold>z</bold></sub>≤<italic>m</italic>. Conditioned on <italic>b</italic><sub><bold>z</bold></sub>, a binary vector <bold>z</bold> is first generated such that <italic>z</italic><sub><italic>j</italic></sub>=1 for all <italic>j</italic>∈<italic>J</italic><sup>+</sup>. The remaining transcripts are then allocated by sampling <italic>b</italic><sub><bold>z</bold></sub>−|<italic>J</italic><sup>+</sup>| transcript indices <italic>H</italic> uniformly from <italic>J</italic><sup>0</sup> and setting <italic>z</italic><sub><italic>h</italic></sub>=1 for all <italic>h</italic>∈<italic>H</italic>. Equivalent to the definition of <bold>e</bold><sup>+</sup>, let <bold>c</bold><sup>+</sup> denote the vector of occurrences <italic>c</italic><sub><italic>j</italic></sub> for which <italic>z</italic><sub><italic>j</italic></sub>=1. The abundance levels <bold>e</bold><sup>+</sup> are then sampled from: 
<disp-formula id="Equj"><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\mathbb{P}\left(\mathbf{e^{+}}|\mathbf{z},\mathbf{c},\gamma\right) = \frac{\Gamma(n+b_{\mathbf{z}}\gamma)}{\prod_{k=1}^{b_{\mathbf{z}}}\Gamma\left(c_{k}^{+} + \gamma\right)} \prod_{k=1}^{b_{\mathbf{z}}} \left(e_{k}^{+}\right)^{c_{k}^{+}+\gamma-1} $$ \end{document}</tex-math><mml:math id="M38"><mml:mrow><mml:mi>ℙ</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mstyle mathvariant="bold"><mml:msup><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mo>+</mml:mo></mml:mrow></mml:msup></mml:mstyle><mml:mo>|</mml:mo><mml:mi mathvariant="bold">z</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold">c</mml:mi><mml:mo>,</mml:mo><mml:mi>γ</mml:mi></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>Γ</mml:mi><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold">z</mml:mi></mml:mrow></mml:msub><mml:mi>γ</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:munderover accent="false" accentunder="false"><mml:mrow><mml:mo mathsize="big">∏</mml:mo></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold">z</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:munderover><mml:mi>Γ</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msubsup><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mo>+</mml:mo></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:mi>γ</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfrac><mml:munderover accent="false" accentunder="false"><mml:mrow><mml:mo mathsize="big">∏</mml:mo></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold">z</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:munderover><mml:msup><mml:mrow><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msubsup><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mo>+</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:mfenced></mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mo>+</mml:mo></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:mi>γ</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math><graphic xlink:href="13059_2014_501_Article_Equj.gif" position="anchor"/></alternatives></disp-formula> Finally, it follows from conditional independence of the elements in <bold>t</bold> given <bold>e</bold> that a sample from <inline-formula id="IEq10"><alternatives><tex-math id="M39">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathbb {P}(\mathbf {t}|\mathbf {e},F,Q,S,\mu,\sigma)$\end{document}</tex-math><mml:math id="M40"><mml:mi>ℙ</mml:mi><mml:mo>(</mml:mo><mml:mi mathvariant="bold">t</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant="bold">e</mml:mi><mml:mo>,</mml:mo><mml:mi>F</mml:mi><mml:mo>,</mml:mo><mml:mi>Q</mml:mi><mml:mo>,</mml:mo><mml:mi>S</mml:mi><mml:mo>,</mml:mo><mml:mi>μ</mml:mi><mml:mo>,</mml:mo><mml:mi>σ</mml:mi><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="13059_2014_501_Article_IEq10.gif"/></alternatives></inline-formula> can be obtained by sampling the individual elements of <bold>t</bold> from: 
<disp-formula id="Equk"><alternatives><tex-math id="M41">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\mathbb{P}(t|\mathbf{e},f,q,S,\mu,\sigma)=\frac{\mathbb{P}\left(\,f|t,q,S,\mu,\sigma\right)\mathbb{P}(t|\mathbf{e})}{\sum_{j=1}^{m}\mathbb{P}\left(\,f|j,q,S,\mu,\sigma\right)\mathbb{P}\left(j|\mathbf{e}\right)} $$ \end{document}</tex-math><mml:math id="M42"><mml:mrow><mml:mi>ℙ</mml:mi><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant="bold">e</mml:mi><mml:mo>,</mml:mo><mml:mi>f</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mi>S</mml:mi><mml:mo>,</mml:mo><mml:mi>μ</mml:mi><mml:mo>,</mml:mo><mml:mi>σ</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>ℙ</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mspace width="0.3em"/><mml:mi>f</mml:mi><mml:mo>|</mml:mo><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mi>S</mml:mi><mml:mo>,</mml:mo><mml:mi>μ</mml:mi><mml:mo>,</mml:mo><mml:mi>σ</mml:mi></mml:mrow></mml:mfenced><mml:mi>ℙ</mml:mi><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant="bold">e</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:munderover accent="false" accentunder="false"><mml:mrow><mml:mo mathsize="big">∑</mml:mo></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:munderover><mml:mi>ℙ</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mspace width="0.3em"/><mml:mi>f</mml:mi><mml:mo>|</mml:mo><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mi>S</mml:mi><mml:mo>,</mml:mo><mml:mi>μ</mml:mi><mml:mo>,</mml:mo><mml:mi>σ</mml:mi></mml:mrow></mml:mfenced><mml:mi>ℙ</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mi>j</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant="bold">e</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfrac></mml:mrow></mml:math><graphic xlink:href="13059_2014_501_Article_Equk.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>The sampler is initialised by randomly sampling a fragment assignment <bold>t</bold>. A detailed derivation of the Gibbs sampling updates is provided in Supplementary methods 2 in Additional file <xref rid="MOESM1" ref-type="media">1</xref>. To estimate <italic>π</italic>, the minimum number of transcript candidates required to explain all paired-end reads <italic>m</italic><sub>min</sub> is obtained using a greedy method and <italic>π</italic> estimated using: 
<disp-formula id="Equl"><alternatives><tex-math id="M43">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\pi=\frac{m_{\text{min}}}{m} $$ \end{document}</tex-math><mml:math id="M44"><mml:mrow><mml:mi>π</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mrow><mml:mtext>min</mml:mtext></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:math><graphic xlink:href="13059_2014_501_Article_Equl.gif" position="anchor"/></alternatives></disp-formula> (Supplementary methods 3 in Additional file <xref rid="MOESM1" ref-type="media">1</xref>). The fragment lengths of all paired-end reads mapping uniquely to transcripts at least 2500 nt long from single-transcript graphs are used to estimate the parameters of the Gaussian distribution used to model fragment lengths. To minimise the influence of outliers, we use the <italic>median</italic> and <italic>median absolute deviance</italic> as estimators of <italic>μ</italic> and <italic>σ</italic>, respectively (Supplementary methods 3 in Additional file <xref rid="MOESM1" ref-type="media">1</xref>). Finally, an uninformative choice of <italic>γ</italic>=1 corresponding to the uniform symmetric Dirichlet distribution is used for the prior over relative abundances. The number of burn-in iterations required for each graph is calculated as 60×<italic>m</italic>+1000, where <italic>m</italic> is the number of candidates; the number of subsequent iterations (i.e. the sample size) is set to 10 times the number of burn-in iterations.</p>
      <p>The samples from <inline-formula id="IEq11"><alternatives><tex-math id="M45">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathbb {P}(\mathbf {e}|\mathbf {t},\pi,\gamma)$\end{document}</tex-math><mml:math id="M46"><mml:mi>ℙ</mml:mi><mml:mo>(</mml:mo><mml:mi mathvariant="bold">e</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant="bold">t</mml:mi><mml:mo>,</mml:mo><mml:mi>π</mml:mi><mml:mo>,</mml:mo><mml:mi>γ</mml:mi><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="13059_2014_501_Article_IEq11.gif"/></alternatives></inline-formula> are subsequently used to estimate both a confidence and a mean abundance estimate for each transcript candidate, where the confidence estimate is calculated as the fraction of iterations in which a candidate is expressed. The posterior mean abundance estimate is calculated as the average of the sampled abundances after they have been normalised to the effective transcript length and total library size (Supplementary methods 2 in Additional file <xref rid="MOESM1" ref-type="media">1</xref>). The final assembly is produced by selecting all transcript candidates with a confidence above 0.5 and excluding transcripts with an expected paired-end read count below 12; the latter threshold was implemented to filter out putative transcript fragments.</p>
    </sec>
    <sec id="Sec13">
      <title>Implementation and availability</title>
      <p>The inference algorithm is implemented in C++ as a complete transcriptome assembly package under the name <italic>Bayesembler</italic> and supports multi-threading. The program is freely available under the MIT licence [<xref ref-type="bibr" rid="CR18">18</xref>]. The algorithm takes a <italic>TopHat2</italic> [<xref ref-type="bibr" rid="CR9">9</xref>] map as input and outputs an assembly in GTF format and is thus compatible with downstream analysis tools like <italic>CuffDiff2</italic> [<xref ref-type="bibr" rid="CR17">17</xref>].</p>
    </sec>
    <sec id="Sec14">
      <title>Benchmarking</title>
      <p>The <italic>Flux Simulator</italic> [<xref ref-type="bibr" rid="CR14">14</xref>] (v1.2) was used to simulate approximately 80 million strand-specific paired-end reads from the human UCSC Known Genes annotation [<xref ref-type="bibr" rid="CR13">13</xref>] (hg19 version downloaded 10 May 2013) with read lengths of 100 nt and a mean fragment length of 249 nt. Reads were simulated without variation in transcription start and end sites using the <italic>fragmentation-first</italic> protocol, where fragmentation is performed prior to reverse transcription with all other parameters set to their default values. Paired-end strand-specific RNA-seq data from two biological replicates of the K562 and H1 cell lines [<xref ref-type="bibr" rid="CR11">11</xref>], and a single replicate of mouse dendritic cells [<xref ref-type="bibr" rid="CR12">12</xref>] together with PacBio reads [<xref ref-type="bibr" rid="CR15">15</xref>] from the H1 cell line were downloaded from the NCBI Short Read Archive and the Gene Expression Omnibus database (Table <xref rid="Tab1" ref-type="table">1</xref>). Simulated and real RNA-seq reads were mapped to either the hg19 or mm10 reference genomes using <italic>Tophat2</italic> [<xref ref-type="bibr" rid="CR9">9</xref>] (v2.0.8, default settings) together with <italic>Bowtie2</italic> [<xref ref-type="bibr" rid="CR19">19</xref>] (v2.1.0). The simulated, K562 and mouse data were divided into separate <italic>validation</italic> and <italic>test</italic> sets each consisting of data from half of the chromosomes. The H1 data were reserved for testing purposes only. The validation sets were used for estimating the maximum number of candidates, how the number of Gibbs iterations should scale with the number of candidates as well as the transcript confidence and expected count thresholds. Hence, the test datasets were used exclusively to produce the benchmarks presented in this paper.
<table-wrap id="Tab1"><label>Table 1</label><caption><p><bold>Datasets used in the benchmark</bold></p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"><bold>Sample</bold></th><th align="left"><bold>Platform</bold></th><th align="left"><bold>Approximate depth</bold></th><th align="left"><bold>Accession</bold></th><th align="left"><bold>Reference</bold></th></tr></thead><tbody><tr><td align="justify">Human K562 cells(replicate 1)</td><td align="center">Illumina</td><td align="center">125 million</td><td align="center">[SRX110318] <sup><italic>a</italic></sup>
</td><td align="center">[<xref ref-type="bibr" rid="CR11">11</xref>]</td></tr><tr><td align="justify">Human K562 cells(replicate 2)</td><td align="center">Illumina</td><td align="center">88 million</td><td align="center">[SRX110318] <sup><italic>a</italic></sup>
</td><td align="center">[<xref ref-type="bibr" rid="CR11">11</xref>]</td></tr><tr><td align="justify">Human H1 cells(replicate 1)</td><td align="center">Illumina</td><td align="center">41 million</td><td align="center">[SRX082572] <sup><italic>a</italic></sup>
</td><td align="center">[<xref ref-type="bibr" rid="CR11">11</xref>]</td></tr><tr><td align="justify">Human H1 cells(replicate 2)</td><td align="center">Illumina</td><td align="center">37 million</td><td align="center">[SRX082572] <sup><italic>a</italic></sup>
</td><td align="center">[<xref ref-type="bibr" rid="CR11">11</xref>]</td></tr><tr><td align="justify">Human H1 cells</td><td align="center">PacBio</td><td align="center">8 million</td><td align="center">[GSE51861] <sup><italic>b</italic></sup>
</td><td align="center">[<xref ref-type="bibr" rid="CR15">15</xref>]</td></tr><tr><td align="justify">Mouse dendriticcells</td><td align="center">Illumina</td><td align="center">53 million</td><td align="center">[SRX062280] <sup><italic>a</italic></sup>
</td><td align="center">[<xref ref-type="bibr" rid="CR12">12</xref>]</td></tr></tbody></table><table-wrap-foot><p><sup>a</sup>NCBI Sequence Read Archive.</p><p><sup>b</sup>NCBI Gene Expression Omnibus.</p></table-wrap-foot></table-wrap></p>
      <p>The <italic>Cufflinks</italic> [<xref ref-type="bibr" rid="CR2">2</xref>] (v2.1.1), <italic>IsoLasso</italic> [<xref ref-type="bibr" rid="CR3">3</xref>] (v2.6), <italic>CEM</italic> [<xref ref-type="bibr" rid="CR5">5</xref>] (v0.9.1) and <italic>Traph</italic> [<xref ref-type="bibr" rid="CR8">8</xref>] (v0.7) assemblers were used in the performance evaluation. All assemblers were run with default parameters except that bias estimation was enabled for <italic>Cufflinks</italic>, <italic>IsoLasso</italic> and <italic>CEM</italic>, and <italic>Cufflinks</italic> was also run with multimap correction. In addition, the fragment length mean and standard deviation estimates used by <italic>Bayesembler</italic> were provided as input to <italic>IsoLasso</italic> and <italic>CEM</italic>. <italic>Bayesembler</italic> (v1.1.1) was used in the performance evaluation.</p>
      <p>The main benchmark criteria for the simulated data were <italic>sensitivity</italic>, defined as the fraction of simulated transcripts that were predicted correctly, and <italic>precision</italic>, defined as the fraction of predicted transcripts that were found in the simulation set. Here, a transcript match was defined as a complete intron-chain match between an assembled transcript and a simulated transcript (i.e. identical intron coordinates between the two transcripts). Single exon transcripts were considered matches if they were contained in and covered at least 75% of a simulated single-exon transcript. As neither <italic>CEM</italic>, <italic>IsoLasso</italic> nor <italic>Traph</italic> provides full support for strand-specific data, transcripts were not matched by strand to provide a conservative estimate of our performance relative to these assemblers. Of note, the abundance estimates of all other assemblers were renormalised to the total library size to allow for visual comparison with the <italic>Bayesembler</italic> estimates to produce Figure 2d and Figures S2, S6 and S7 in Additional file <xref rid="MOESM1" ref-type="media">1</xref>. Spearman’s rank correlation coefficient was used to assess the accuracy of the abundance estimates for each assembler; this metric was selected to provide robustness to the scale of abundances and outliers. To adjust for assembly size, only abundance values of transcripts assembled correctly by all assemblers (i.e. the intersection between assemblies and the simulation set) were used to compute the correlations.</p>
      <p>Performance on the five real datasets was first assessed by plotting the number of assembled transcripts that could be confirmed using the UCSC Known Genes annotations (hg19 version downloaded 10 May 2013; mm10 version downloaded 1 October 2013) against the corresponding number of predicted transcripts in each assembly. These estimates were computed across a sequence of lower-bound thresholds on abundance to adjust for any abundance bias in the confirmation method using the same transcript matching criteria as defined above for the simulated transcripts. The same metric was also used for further evaluation of the assemblers’ performance on the H1 datasets using PacBio reads for confirmation. Finally, performance was also estimated by assessing the overlap between replicate assemblies from the K562 and H1 datasets. To do this, we defined stable transcripts as multi-exonic transcripts that were present in both replicate assemblies. Assembled transcripts were ranked according to abundance for each of the two replicates, and the number of stable transcripts was plotted against the corresponding number of predicted transcripts above a certain rank, thus producing a curve with a point for each rank. Finally, Spearman’s rank correlation coefficient was computed for the predicted abundances of transcripts assembled for both replicates. Only the intersection between stable transcripts of the different assemblers was used to compute the correlations to adjust for assembly size.</p>
    </sec>
  </sec>
</body>
<back>
  <app-group>
    <app id="App1">
      <sec id="Sec15">
        <title>Additional file</title>
        <p>
          <media position="anchor" xlink:href="13059_2014_501_MOESM1_ESM.pdf" id="MOESM1">
            <label>Additional file 1</label>
            <caption>
              <p><bold>Supplementary information.</bold> Supplementary figures S1–S7 and Supplementary methods 1–3.</p>
            </caption>
          </media>
        </p>
      </sec>
    </app>
  </app-group>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>PacBio</term>
        <def>
          <p>Pacific Biosciences</p>
        </def>
      </def-item>
      <def-item>
        <term>PCR</term>
        <def>
          <p>polymerase chain reaction</p>
        </def>
      </def-item>
      <def-item>
        <term>RNA-seq</term>
        <def>
          <p>RNA sequencing</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
Lasse Maretty and Jonas Andreas Sibbesen are the Equal contributors
</p>
    </fn>
    <fn>
      <p>
        <bold>Competing interests</bold>
      </p>
      <p>The authors declare that they have no competing interests.</p>
    </fn>
    <fn>
      <p>
        <bold>Authors’ contributions</bold>
      </p>
      <p>LM and JAS contributed equally to this work. LM, JAS and AK derived the model and inference method. LM and JAS implemented the method and performed the benchmarking. LM, JAS and AK wrote the manuscript. All authors read and approved the final manuscript.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>We thank Ole Winther for his advice on the model and Jes Frellsen and Lubomir Antonov for their assistance on implementation-related issues. This work was supported by grants from the Novo Nordisk Foundation and the Danish National Advanced Technical Foundation.</p>
  </ack>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Heber</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Alekseyev</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Sze</surname>
            <given-names>S-H</given-names>
          </name>
          <name>
            <surname>Tang</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Pevzner</surname>
            <given-names>PA</given-names>
          </name>
        </person-group>
        <article-title>
          <bold>Splicing graphs and EST assembly problem</bold>
        </article-title>
        <source>Bioinformatics (Oxford, England)</source>
        <year>2002</year>
        <volume>18</volume>
        <fpage>181</fpage>
        <lpage>188</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/18.suppl_1.S181</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Trapnell</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Williams</surname>
            <given-names>BA</given-names>
          </name>
          <name>
            <surname>Pertea</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Mortazavi</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Kwan</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>van Baren</surname>
            <given-names>MJ</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
          <name>
            <surname>Wold</surname>
            <given-names>BJ</given-names>
          </name>
          <name>
            <surname>Pachter</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>
          <bold>Transcript assembly and quantification by RNA-Seq reveals unannotated transcripts and isoform switching during cell differentiation</bold>
        </article-title>
        <source>Nat Biotechnol</source>
        <year>2010</year>
        <volume>28</volume>
        <fpage>511</fpage>
        <lpage>515</lpage>
        <pub-id pub-id-type="doi">10.1038/nbt.1621</pub-id>
        <?supplied-pmid 20436464?>
        <pub-id pub-id-type="pmid">20436464</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Feng</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Jiang</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>
          <bold>IsoLasso: a LASSO regression approach to RNA-Seq based transcriptome assembly</bold>
        </article-title>
        <source>J Comput Biol</source>
        <year>2011</year>
        <volume>18</volume>
        <fpage>1693</fpage>
        <lpage>1707</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2011.0171</pub-id>
        <?supplied-pmid 21951053?>
        <pub-id pub-id-type="pmid">21951053</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>JJ</given-names>
          </name>
          <name>
            <surname>Jiang</surname>
            <given-names>C-R</given-names>
          </name>
          <name>
            <surname>Brown</surname>
            <given-names>JB</given-names>
          </name>
          <name>
            <surname>Huang</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Bickel</surname>
            <given-names>PJ</given-names>
          </name>
        </person-group>
        <article-title>
          <bold>Sparse linear modeling of next-generation mRNA sequencing (RNA-Seq) data for isoform discovery and abundance estimation</bold>
        </article-title>
        <source>Proc Nat Acad Sci USA</source>
        <year>2011</year>
        <volume>108</volume>
        <fpage>19867</fpage>
        <lpage>19872</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.1113972108</pub-id>
        <?supplied-pmid 22135461?>
        <pub-id pub-id-type="pmid">22135461</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Jiang</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>
          <bold>Transcriptome assembly and isoform expression level estimation from biased RNA-seq reads</bold>
        </article-title>
        <source>Bioinformatics (Oxford, England)</source>
        <year>2012</year>
        <volume>28</volume>
        <fpage>2914</fpage>
        <lpage>2921</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bts559</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mezlini</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Smith</surname>
            <given-names>EJ</given-names>
          </name>
          <name>
            <surname>Fiume</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Buske</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Savich</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Shah</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Aparicion</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Chiang</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Goldenberg</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Brudno</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>
          <bold>iReckon: Simultaneous isoform discovery and abundance estimation from RNA-seq data</bold>
        </article-title>
        <source>Genome Res</source>
        <year>2012</year>
        <volume>23</volume>
        <fpage>519</fpage>
        <lpage>529</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.142232.112</pub-id>
        <?supplied-pmid 23204306?>
        <pub-id pub-id-type="pmid">23204306</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Behr</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Kahles</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Zhong</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Sreedharan</surname>
            <given-names>VT</given-names>
          </name>
          <name>
            <surname>Drewe</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Rätsch</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>
          <bold>MITIE: Simultaneous RNA-Seq-based transcript identification and quantification in multiple samples</bold>
        </article-title>
        <source>Bioinformatics (Oxford, England)</source>
        <year>2013</year>
        <volume>29</volume>
        <fpage>2529</fpage>
        <lpage>2538</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btt442</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tomescu</surname>
            <given-names>AI</given-names>
          </name>
          <name>
            <surname>Kuosmanen</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Rizzi</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Mäkinen</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Veli</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>
          <bold>A novel min-cost flow method for estimating transcript expression with RNA-Seq</bold>
        </article-title>
        <source>BMC Bioinformatics</source>
        <year>2013</year>
        <volume>14</volume>
        <fpage>S15</fpage>
        <?supplied-pmid 23734627?>
        <pub-id pub-id-type="pmid">23734627</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kim</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Pertea</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Trapnell</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Pimentel</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Kelley</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>
          <bold>TopHat2: accurate alignment of transcriptomes in the presence of insertions, deletions and gene fusions</bold>
        </article-title>
        <source>Genome Biol</source>
        <year>2013</year>
        <volume>14</volume>
        <fpage>R36</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2013-14-4-r36</pub-id>
        <?supplied-pmid 23618408?>
        <pub-id pub-id-type="pmid">23618408</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10</label>
      <mixed-citation publication-type="other">Pachter L: <bold>Models for transcript quantification from RNA-Seq</bold>. (2011) arXiv 1104.3889v2</mixed-citation>
    </ref>
    <ref id="CR11">
      <label>11</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Djebali</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Davis</surname>
            <given-names>CA</given-names>
          </name>
          <name>
            <surname>Merkel</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Dobin</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Lassmann</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Mortazavi</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Tanzer</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Lagarde</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Schlesinger</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Xue</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Marinov</surname>
            <given-names>GK</given-names>
          </name>
          <name>
            <surname>Khatun</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Williams</surname>
            <given-names>BA</given-names>
          </name>
          <name>
            <surname>Zaleski</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Rozowsky</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Röder</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Kokocinski</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Abdelhamid</surname>
            <given-names>RF</given-names>
          </name>
          <name>
            <surname>Alioto</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Antoshechkin</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Baer</surname>
            <given-names>MT</given-names>
          </name>
          <name>
            <surname>Bar</surname>
            <given-names>NS</given-names>
          </name>
          <name>
            <surname>Batut</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Bell</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Bell</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Chakrabortty</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Chrast</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Curado</surname>
            <given-names>J</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>
          <bold>Landscape of transcription in human cells</bold>
        </article-title>
        <source>Nature</source>
        <year>2012</year>
        <volume>489</volume>
        <fpage>101</fpage>
        <lpage>108</lpage>
        <pub-id pub-id-type="doi">10.1038/nature11233</pub-id>
        <?supplied-pmid 22955620?>
        <pub-id pub-id-type="pmid">22955620</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Grabherr</surname>
            <given-names>MG</given-names>
          </name>
          <name>
            <surname>Haas</surname>
            <given-names>BJ</given-names>
          </name>
          <name>
            <surname>Yassour</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Levin</surname>
            <given-names>JZ</given-names>
          </name>
          <name>
            <surname>Thompson</surname>
            <given-names>DA</given-names>
          </name>
          <name>
            <surname>Amit</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Adiconis</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Fan</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Raychowdhury</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Zeng</surname>
            <given-names>Q</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Mauceli</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Hacohen</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Gnirke</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Rhind</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>di Palma</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Birren</surname>
            <given-names>BW</given-names>
          </name>
          <name>
            <surname>Nusbaum</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Lindblad-Toh</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Friedman</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Regev</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>
          <bold>Full-length transcriptome assembly from RNA-Seq data without a reference genome</bold>
        </article-title>
        <source>Nat Biotechnol</source>
        <year>2011</year>
        <volume>29</volume>
        <fpage>644</fpage>
        <lpage>652</lpage>
        <pub-id pub-id-type="doi">10.1038/nbt.1883</pub-id>
        <?supplied-pmid 21572440?>
        <pub-id pub-id-type="pmid">21572440</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Meyer</surname>
            <given-names>LR</given-names>
          </name>
          <name>
            <surname>Zweig</surname>
            <given-names>AS</given-names>
          </name>
          <name>
            <surname>Hinrichs</surname>
            <given-names>AS</given-names>
          </name>
          <name>
            <surname>Karolchik</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Kuhn</surname>
            <given-names>RM</given-names>
          </name>
          <name>
            <surname>Wong</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Sloan</surname>
            <given-names>CA</given-names>
          </name>
          <name>
            <surname>Rosenbloom</surname>
            <given-names>KR</given-names>
          </name>
          <name>
            <surname>Roe</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Rhead</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Raney</surname>
            <given-names>BJ</given-names>
          </name>
          <name>
            <surname>Pohl</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Malladi</surname>
            <given-names>VS</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>CH</given-names>
          </name>
          <name>
            <surname>Lee</surname>
            <given-names>BT</given-names>
          </name>
          <name>
            <surname>Learned</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Kirkup</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Hsu</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Heitner</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Harte</surname>
            <given-names>RA</given-names>
          </name>
          <name>
            <surname>Haeussler</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Guruvadoo</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Goldman</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Giardine</surname>
            <given-names>BM</given-names>
          </name>
          <name>
            <surname>Fujita</surname>
            <given-names>PA</given-names>
          </name>
          <name>
            <surname>Dreszer</surname>
            <given-names>TR</given-names>
          </name>
          <name>
            <surname>Diekhans</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Cline</surname>
            <given-names>MS</given-names>
          </name>
          <name>
            <surname>Clawson</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Barber</surname>
            <given-names>GP</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>
          <bold>The UCSC genome browser database: extensions and updates 2013</bold>
        </article-title>
        <source>Nucleic Acids Res</source>
        <year>2013</year>
        <volume>41</volume>
        <fpage>D64</fpage>
        <lpage>D69</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gks1048</pub-id>
        <?supplied-pmid 23155063?>
        <pub-id pub-id-type="pmid">23155063</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Griebel</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Zacher</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Ribeca</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Raineri</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Lacroix</surname>
            <given-names>V</given-names>
          </name>
          <collab>Guigó R</collab>
          <name>
            <surname>Sammeth</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>
          <bold>Modelling and simulating generic RNA-Seq experiments with the flux simulator</bold>
        </article-title>
        <source>Nucleic Acids Res</source>
        <year>2012</year>
        <volume>40</volume>
        <fpage>10073</fpage>
        <lpage>10083</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gks666</pub-id>
        <?supplied-pmid 22962361?>
        <pub-id pub-id-type="pmid">22962361</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Au</surname>
            <given-names>KF</given-names>
          </name>
          <name>
            <surname>Sebastiano</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Afshar</surname>
            <given-names>PT</given-names>
          </name>
          <name>
            <surname>Durruthy</surname>
            <given-names>JD</given-names>
          </name>
          <name>
            <surname>Lee</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Williams</surname>
            <given-names>BA</given-names>
          </name>
          <name>
            <surname>van Bakel</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Schadt</surname>
            <given-names>EE</given-names>
          </name>
          <name>
            <surname>Reijo-Pera</surname>
            <given-names>RA</given-names>
          </name>
          <name>
            <surname>Underwood</surname>
            <given-names>JG</given-names>
          </name>
          <name>
            <surname>Wong</surname>
            <given-names>WH</given-names>
          </name>
        </person-group>
        <article-title>
          <bold>Characterization of the human ESC transcriptome by hybrid sequencing</bold>
        </article-title>
        <source>Proc Nat Acad Sci USA</source>
        <year>2013</year>
        <volume>110</volume>
        <fpage>E4821</fpage>
        <lpage>E4830</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.1320101110</pub-id>
        <?supplied-pmid 24282307?>
        <pub-id pub-id-type="pmid">24282307</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Schulz</surname>
            <given-names>MH</given-names>
          </name>
          <name>
            <surname>Zerbino</surname>
            <given-names>DR</given-names>
          </name>
          <name>
            <surname>Vingron</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Birney</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <article-title>
          <bold>Oases: robust</bold>
          <bold>
            <italic>de novo</italic>
          </bold>
          <bold> RNA-seq assembly across the dynamic range of expression levels</bold>
        </article-title>
        <source>Bioinformatics (Oxford, England)</source>
        <year>2012</year>
        <volume>28</volume>
        <fpage>1086</fpage>
        <lpage>1092</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bts094</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Trapnell</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Hendrickson</surname>
            <given-names>DG</given-names>
          </name>
          <name>
            <surname>Sauvageau</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Goff</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Rinn</surname>
            <given-names>JL</given-names>
          </name>
          <name>
            <surname>Pachter</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>
          <bold>Differential analysis of gene regulation at transcript resolution with RNA-seq</bold>
        </article-title>
        <source>Nat Biotechnol</source>
        <year>2013</year>
        <volume>31</volume>
        <fpage>46</fpage>
        <lpage>53</lpage>
        <pub-id pub-id-type="doi">10.1038/nbt.2450</pub-id>
        <?supplied-pmid 23222703?>
        <pub-id pub-id-type="pmid">23222703</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18</label>
      <mixed-citation publication-type="other"><bold>Bayesembler</bold>[https://github.com/bioinformatics-centre/bayesembler]</mixed-citation>
    </ref>
    <ref id="CR19">
      <label>19</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Langmead</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>
          <bold>Fast gapped-read alignment with Bowtie 2</bold>
        </article-title>
        <source>Nat Methods</source>
        <year>2012</year>
        <volume>9</volume>
        <fpage>357</fpage>
        <lpage>359</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.1923</pub-id>
        <?supplied-pmid 22388286?>
        <pub-id pub-id-type="pmid">22388286</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

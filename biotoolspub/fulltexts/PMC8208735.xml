<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">8208735</article-id>
    <article-id pub-id-type="pmid">33226067</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btaa984</article-id>
    <article-id pub-id-type="publisher-id">btaa984</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Original Papers</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Genome Analysis</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Casboundary: automated definition of integral Cas cassettes</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Padilha</surname>
          <given-names>Victor A</given-names>
        </name>
        <aff><institution>Institute of Mathematics and Computer Sciences, University of São Paulo</institution>, São Carlos, SP 13566-590, <country country="BR">Brazil</country></aff>
        <xref rid="btaa984-FM1" ref-type="author-notes"/>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-8088-590X</contrib-id>
        <name>
          <surname>Alkhnbashi</surname>
          <given-names>Omer S</given-names>
        </name>
        <xref rid="btaa984-cor1" ref-type="corresp"/>
        <aff><institution>Bioinformatics Group, Department of Computer Science, University of Freiburg</institution>, 79110 Freiburg, <country country="DE">Germany</country></aff>
        <xref rid="btaa984-FM1" ref-type="author-notes"/>
        <!--alkhanbo@informatik.uni-freiburg.de-->
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-7357-4959</contrib-id>
        <name>
          <surname>Tran</surname>
          <given-names>Van Dinh</given-names>
        </name>
        <aff><institution>Bioinformatics Group, Department of Computer Science, University of Freiburg</institution>, 79110 Freiburg, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Shah</surname>
          <given-names>Shiraz A</given-names>
        </name>
        <aff><institution>COPSAC, Copenhagen University Hospitals Herlev and Gentofte</institution>, DK-2820 Gentofte, <country country="DK">Denmark</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Carvalho</surname>
          <given-names>André C P L F</given-names>
        </name>
        <aff><institution>Institute of Mathematics and Computer Sciences, University of São Paulo</institution>, São Carlos, SP 13566-590, <country country="BR">Brazil</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Backofen</surname>
          <given-names>Rolf</given-names>
        </name>
        <xref rid="btaa984-cor1" ref-type="corresp"/>
        <aff><institution>Bioinformatics Group, Department of Computer Science, University of Freiburg</institution>, 79110 Freiburg, <country country="DE">Germany</country></aff>
        <aff><institution>Signalling Research Centres BIOSS and CIBSS, University of Freiburg</institution>, 79104 Freiburg, <country country="DE">Germany</country></aff>
        <!--backofen@informatik.uni-freiburg.de-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Peter</surname>
          <given-names>Robinson</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <fn id="btaa984-FM1">
        <p>The authors wish it to be known that, in their opinion, the first two authors should be regarded as Joint First Authors.</p>
      </fn>
      <corresp id="btaa984-cor1">To whom correspondence should be addressed. <email>alkhanbo@informatik.uni-freiburg.de</email> or <email>backofen@informatik.uni-freiburg.de</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <day>15</day>
      <month>5</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2020-12-06">
      <day>06</day>
      <month>12</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>06</day>
      <month>12</month>
      <year>2020</year>
    </pub-date>
    <volume>37</volume>
    <issue>10</issue>
    <fpage>1352</fpage>
    <lpage>1359</lpage>
    <history>
      <date date-type="received">
        <day>19</day>
        <month>8</month>
        <year>2020</year>
      </date>
      <date date-type="rev-recd">
        <day>28</day>
        <month>10</month>
        <year>2020</year>
      </date>
      <date date-type="editorial-decision">
        <day>09</day>
        <month>11</month>
        <year>2020</year>
      </date>
      <date date-type="accepted">
        <day>11</day>
        <month>11</month>
        <year>2020</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2020. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2020</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btaa984.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>CRISPR-Cas are important systems found in most archaeal and many bacterial genomes, providing adaptive immunity against mobile genetic elements in prokaryotes. The CRISPR-Cas systems are encoded by a set of consecutive <italic toggle="yes">cas</italic> genes, here termed cassette. The identification of cassette boundaries is key for finding cassettes in CRISPR research field. This is often carried out by using Hidden Markov Models and manual annotation. In this article, we propose the first method able to automatically define the cassette boundaries. In addition, we present a Cas-type predictive model used by the method to assign each gene located in the region defined by a cassette’s boundaries a Cas label from a set of pre-defined Cas types. Furthermore, the proposed method can detect potentially new <italic toggle="yes">cas</italic> genes and decompose a cassette into its modules.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>We evaluate the predictive performance of our proposed method on data collected from the two most recent CRISPR classification studies. In our experiments, we obtain an average similarity of 0.86 between the predicted and expected cassettes. Besides, we achieve <italic toggle="yes">F</italic>-scores above 0.9 for the classification of <italic toggle="yes">cas</italic> genes of known types and 0.73 for the unknown ones. Finally, we conduct two additional study cases, where we investigate the occurrence of potentially new <italic toggle="yes">cas</italic> genes and the occurrence of module exchange between different genomes.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p><ext-link xlink:href="https://github.com/BackofenLab/Casboundary" ext-link-type="uri">https://github.com/BackofenLab/Casboundary</ext-link>.</p>
      </sec>
      <sec id="s5">
        <title>Supplementary information</title>
        <p><xref rid="sup1" ref-type="supplementary-material">Supplementary data</xref> are available at <italic toggle="yes">Bioinformatics</italic> online.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Deutsche Forschungsgemeinschaft</institution>
            <institution-id institution-id-type="DOI">10.13039/501100001659</institution-id>
          </institution-wrap>
        </funding-source>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>German Research Foundation</institution>
          </institution-wrap>
        </funding-source>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Germany’s Excellence Strategy—EXC-2189—Project</institution>
          </institution-wrap>
        </funding-source>
        <award-id>390939984</award-id>
        <award-id>BA 2168/11-1</award-id>
        <award-id>SPP 1738</award-id>
        <award-id>BA2168/11-2 SPP 1738</award-id>
        <award-id>BA 2168/3-3</award-id>
        <award-id>GRK 2344/1 2017</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>MeInBio</institution>
          </institution-wrap>
        </funding-source>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>São Paulo Research Foundation</institution>
            <institution-id institution-id-type="DOI">10.13039/501100001807</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>2013/07375-0</award-id>
        <award-id>2019/21300-9</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="8"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Prokaryotes face tremendous evolutionary pressures from viral predators, such as bacteriophages, which are responsible for eradicating almost half of the earth’s bacterial population each day (<xref rid="btaa984-B31" ref-type="bibr">Suttle, 2016</xref>). This constant threat has been hypothesized to comprise the single most important driver of the planet life evolution (<xref rid="btaa984-B16" ref-type="bibr">Koonin et al., 2020</xref>). Bacteria and archaea face an enormous incentive to defend themselves against viral invaders by evolving defense systems, some of which are innate and others adaptive. Clustered Regularly Interspaced Short Palindromic Repeats (CRISPRs) constitute one such nucleic acid based adaptive immune system, which functions through three distinct stages: acquisition, processing and interference. Upon a naive infection, a piece of viral nucleic acid is incorporated as a spacer between the repeats of the CRISPR locus on the host chromosome during its acquisition. The whole CRISPR locus, which includes memories from dozens of past viral infections, is transcribed into a long piece of RNA that is processed into small mature CRISPR RNAs (crRNAs), each corresponding to a different acquired viral epitope. crRNAs are loaded onto the Cas (Crispr ASsociated) interference complex, which then scans all intracellular nucleic acid for a matching nucleotide sequence, in which case the target nucleic acid is cleaved, effectively protecting the cell from reinfection by any virus for which a matching spacer exists.</p>
    <p>Bacteriophages and archaeal viruses evade CRISPR immunity by several mechanisms. Known mechanisms include direct mutations of the nucleic acid such that it is no longer targeted by the host (<xref rid="btaa984-B13" ref-type="bibr">Horvath et al., 2008</xref>), or the evolution of small anti-CRISPR proteins. These proteins interfere with the proper function of the Cas proteins that mediate CRISPR immunity by either clogging catalytic sites or preventing complex assembly. Hosts evade such anti-CRISPR immunity by carrying several distantly related CRISPR-Cas systems at once, and by frequently exchanging their CRISPR-Cas systems for different ones through horizontal gene transfer. This dynamic has driven the diversification of CRISPR-Cas systems into six types that are further subdivided into 33 subtypes (<xref rid="btaa984-B21" ref-type="bibr">Makarova et al., 2020</xref>), each with its own evolutionary trajectory. Corresponding Cas protein subunits from two different hosts, even when belonging to the same subtype, can have sequences so distant that they are unalignable despite sharing the same underlying protein structure. Such extreme diversification is caused by Cas proteins mutating in order to avoid being inactivated by phage anti-CRISPRs. The rapid evolution of CRISPR-Cas systems makes their detection difficulty in metagenomic sequences of uncultured bacteria and archaea, because none of the existing known CRISPR-Cas systems in completely sequenced genomes is a close enough match. Although the new Cas proteins are structurally similar to known Cas proteins, the amino acid sequences have diverged to an extent that makes them difficult to detect even using the most sensitive sequence alignment methods (<xref rid="btaa984-B26" ref-type="bibr">Remmert et al., 2012</xref>). While some Cas proteins such as Cas1 are easy to detect due to its very conserved sequence, other proteins, such as Cas8, are notoriously difficult to identify, owing to their strong sequence heterogeneity. Thus, even the most modern bioinformatics pipelines for annotation of genomic CRISPRCas loci have difficulties in detecting all <italic toggle="yes">cas</italic> genes comprising a complete CRISPR cassette.</p>
    <p>According to comparative genomics studies of chromosomally encoded CRISPR-Cas systems (<xref rid="btaa984-B7" ref-type="bibr">Garrett et al., 2011</xref>; <xref rid="btaa984-B20" ref-type="bibr">Makarova et al., 2015</xref>; <xref rid="btaa984-B28" ref-type="bibr">Shah et al., 2018</xref>; <xref rid="btaa984-B33" ref-type="bibr">Vestergaard et al., 2014</xref>), these systems are carried on genomic cassettes, which are further divided into modules corresponding to the different functional stages of the immune response. Cassettes, as well as modules, are normally integral, meaning they have defined boundaries and are not intermixed with foreign genes. Thus, a typical bacterium may carry several Cas cassettes, and each cassette can be further divided into several operons, each corresponding to a functional module. Class 1 systems, in particular, have elaborated heteromultimeric interference complexes typically consisting of between four and eight genes. Knowing where the module starts and ends on the genome narrows down the possibilities and is an invaluable aid in annotating the <italic toggle="yes">cas</italic> genes that do not yield matches to any known Cas proteins.</p>
    <p>Current bioinformatics pipelines for annotating <italic toggle="yes">cas</italic> genes treat each gene separately, while a cassette-aware pipeline could infer the identities of missing genes by simple exclusion (<xref rid="btaa984-B3" ref-type="bibr">Alkhnbashi et al., 2014</xref>, <xref rid="btaa984-B1" ref-type="bibr">2016</xref>, <xref rid="btaa984-B2" ref-type="bibr">2020</xref>; <xref rid="btaa984-B5" ref-type="bibr">Couvin et al., 2018</xref>; <xref rid="btaa984-B6" ref-type="bibr">Crawley et al., 2018</xref>; <xref rid="btaa984-B17" ref-type="bibr">Lange et al., 2013</xref>; <xref rid="btaa984-B36" ref-type="bibr">Zhang and Ye, 2017</xref>).</p>
    <p>In this article, we propose a new method to automatically define the boundaries of a CRISPR cassette. The proposed method takes into account the relation of a potential signature gene and genes that are contained in its neighboring region. Furthermore, the method labels the <italic toggle="yes">cas</italic> genes after the cassette boundaries have been defined, being also able to indicate genes that may belong to new putative types.</p>
  </sec>
  <sec>
    <title>2 Materials and methods</title>
    <p>This section introduces notation, definitions and problems addressed in this article. Afterwards, it describes our proposed method for cassette boundary detection and Cas type prediction in details.</p>
    <sec>
      <title>2.1 Problem statement and notations</title>
      <p>For a given genome, let <inline-formula id="IE1"><mml:math id="IM1" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> be all genes of the genome ordered by its genomic location (i.e. <italic toggle="yes">g<sub>i</sub></italic> is located between <inline-formula id="IE2"><mml:math id="IM2" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE3"><mml:math id="IM3" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> on the genome), and let <inline-formula id="IE4"><mml:math id="IM4" display="inline" overflow="scroll"><mml:mrow><mml:mi mathvariant="script">G</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> be the set of all genes in the genome. With <inline-formula id="IE5"><mml:math id="IM5" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">G</mml:mi><mml:mi>c</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> we denote the set of all <italic toggle="yes">cas</italic> genes in this genome, and the set of all <italic toggle="yes">cas</italic> signature genes by <inline-formula id="IE6"><mml:math id="IM6" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">G</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>. <inline-formula id="IE7"><mml:math id="IM7" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">G</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi mathvariant="script">G</mml:mi><mml:mo>\</mml:mo><mml:msub><mml:mi mathvariant="script">G</mml:mi><mml:mi>c</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is the set of all <italic toggle="yes">non-cas</italic> genes.</p>
      <p>We denote <inline-formula id="IE8"><mml:math id="IM8" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>⊆</mml:mo><mml:mi mathvariant="script">G</mml:mi></mml:mrow></mml:math></inline-formula> as a set of consecutive genes <inline-formula id="IE9"><mml:math id="IM9" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> and the set of all its consecutive subsets as <inline-formula id="IE10"><mml:math id="IM10" display="inline" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold">S</mml:mi><mml:mi mathvariant="bold">u</mml:mi><mml:mi mathvariant="bold">b</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="normal">S</mml:mi><mml:mrow><mml:mtext>ij</mml:mtext></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. Note that <inline-formula id="IE11"><mml:math id="IM11" display="inline" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold">S</mml:mi><mml:mi mathvariant="bold">u</mml:mi><mml:mi mathvariant="bold">b</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="normal">S</mml:mi><mml:mrow><mml:mtext>ij</mml:mtext></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is not exponential in size as we considering only subsets that contain all genes in a genomic region. A consecutive subset <italic toggle="yes">C</italic> is called a <italic toggle="yes">cassette</italic> if it contains a sufficient number of <italic toggle="yes">cas</italic> genes and not too long stretches of <italic toggle="yes">non-cas</italic> genes. Formally, <inline-formula id="IE12"><mml:math id="IM12" display="inline" overflow="scroll"><mml:mrow><mml:mi>C</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>q</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> is a cassette if
</p>
      <list list-type="order">
        <list-item>
          <p><inline-formula id="IE13"><mml:math id="IM13" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mi>p</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">G</mml:mi><mml:mi>c</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE14"><mml:math id="IM14" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mi>q</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">G</mml:mi><mml:mi>c</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> (first and last gene is a <italic toggle="yes">cas</italic> gene)</p>
        </list-item>
        <list-item>
          <p><inline-formula id="IE15"><mml:math id="IM15" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:menclose notation="updiagonalstrike"><mml:mo>∈</mml:mo></mml:menclose><mml:msub><mml:mi mathvariant="script">G</mml:mi><mml:mi>c</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE16"><mml:math id="IM16" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>q</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:menclose notation="updiagonalstrike"><mml:mo>∈</mml:mo></mml:menclose><mml:msub><mml:mi mathvariant="script">G</mml:mi><mml:mi>c</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> (the cassette is maximal)</p>
        </list-item>
        <list-item>
          <p><inline-formula id="IE17"><mml:math id="IM17" display="inline" overflow="scroll"><mml:mrow><mml:mi>p</mml:mi><mml:mo>−</mml:mo><mml:mi>q</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>≥</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math></inline-formula> (the cassette contains at least three genes)</p>
        </list-item>
        <list-item>
          <p><inline-formula id="IE18"><mml:math id="IM18" display="inline" overflow="scroll"><mml:mrow><mml:mo>∀</mml:mo><mml:mi>U</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="bold">S</mml:mi><mml:mi mathvariant="bold">u</mml:mi><mml:mi mathvariant="bold">b</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="normal">S</mml:mi><mml:mrow><mml:mtext>pq</mml:mtext></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>:</mml:mo><mml:mi mathvariant="normal">U</mml:mi><mml:mo>⊆</mml:mo><mml:msub><mml:mi mathvariant="script">G</mml:mi><mml:mi mathvariant="normal">u</mml:mi></mml:msub><mml:mo>→</mml:mo><mml:mo>|</mml:mo><mml:mi mathvariant="normal">U</mml:mi><mml:mo>|</mml:mo><mml:mo>≤</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math></inline-formula> (each consecutive subset of non-cas genes (called <italic toggle="yes">gap</italic>) is smaller than 3).</p>
        </list-item>
      </list>
      <p>We call <italic toggle="yes">g<sub>p</sub></italic> and <italic toggle="yes">g<sub>q</sub></italic> lower bound and upper bound of the cassette, respectively. A cassette is often recognized by the presence of its signature gene, <inline-formula id="IE19"><mml:math id="IM19" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>. The set of all cassettes is notated as <inline-formula id="IE20"><mml:math id="IM20" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">G</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>.</p>
      <p>We formalize the problems addressed in this article as follows:
</p>
      <list list-type="bullet">
        <list-item>
          <p><italic toggle="yes">Cassette boundary detection</italic>: in the first task, we aim at detecting the boundary for each cassette, given its signature <italic toggle="yes">cas</italic> gene. For such, we define a function <inline-formula id="IE21"><mml:math id="IM21" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mi>c</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>R</mml:mi><mml:mo>,</mml:mo><mml:msubsup><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> that takes a potential region <italic toggle="yes">R</italic> and a signature gene <inline-formula id="IE22"><mml:math id="IM22" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:mo>∈</mml:mo><mml:mi>R</mml:mi></mml:mrow></mml:math></inline-formula> as its input and returns the boundaries of the maximal cassette <inline-formula id="IE23"><mml:math id="IM23" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>q</mml:mi></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">G</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula id="IE24"><mml:math id="IM24" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>⊆</mml:mo><mml:mi>R</mml:mi></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE25"><mml:math id="IM25" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:mo>∈</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>.</p>
        </list-item>
        <list-item>
          <p><italic toggle="yes">Cas type prediction</italic>: in the second task, we want to determine the label for every <italic toggle="yes">cas</italic> gene. Formally, we define function <inline-formula id="IE26"><mml:math id="IM26" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>:</mml:mo><mml:msub><mml:mi mathvariant="script">G</mml:mi><mml:mi>c</mml:mi></mml:msub><mml:mo>→</mml:mo><mml:mi>L</mml:mi><mml:mo>∪</mml:mo><mml:mo>{</mml:mo><mml:mi>N</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>, which maps a <italic toggle="yes">cas</italic> gene in <inline-formula id="IE27"><mml:math id="IM27" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">G</mml:mi><mml:mi>c</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> to a label in <inline-formula id="IE28"><mml:math id="IM28" display="inline" overflow="scroll"><mml:mrow><mml:mi>L</mml:mi><mml:mo>∪</mml:mo><mml:mo>{</mml:mo><mml:mi>N</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>, where <italic toggle="yes">L</italic> is the set of known Cas labels (such as Cas1, Cas2 etc.) and <italic toggle="yes">N</italic> is the label for unannotated <italic toggle="yes">cas</italic> genes.</p>
        </list-item>
      </list>
    </sec>
    <sec>
      <title>2.2 Detection of cassette boundaries</title>
      <p>In this section, we describe our proposed method for cassette boundary detection implementing the function <italic toggle="yes">f<sub>c</sub></italic>. Our method is based on our assumption that the relation between a <italic toggle="yes">cas</italic> gene in a cassette and its signature gene is stronger than the relation for a gene that does not belong to that cassette. This assumption is motivated by the common understanding that signature genes <inline-formula id="IE29"><mml:math id="IM29" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mi>g</mml:mi><mml:mi>s</mml:mi></mml:msup><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">G</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> play an important role in defining the cassettes (<xref rid="btaa984-B20" ref-type="bibr">Makarova <italic toggle="yes">et al.</italic>, 2015</xref>, <xref rid="btaa984-B21" ref-type="bibr">2020</xref>) and should be used as an anchor point in learning the cassette detection function <italic toggle="yes">f<sub>c</sub></italic>. Furthermore, to simplify the problem of cassette detection, we define an auxiliary function <inline-formula id="IE30"><mml:math id="IM30" display="inline" overflow="scroll"><mml:mrow><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msubsup><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> that is 1 (positive) if both genes are located in the same cassette and 0 (negative) otherwise. Thus, the first step of our method is to train a binary classification model for this auxiliary function <italic toggle="yes">f</italic>. We then use this trained model to detect cassette boundaries in a incremental manner as follows.</p>
      <p>First, we slide over the genome. Whenever a signature gene <inline-formula id="IE31"><mml:math id="IM31" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> is identified, a potential region, <italic toggle="yes">R</italic>, is defined for detecting the cassette boundary as <inline-formula id="IE32"><mml:math id="IM32" display="inline" overflow="scroll"><mml:mrow><mml:mi>R</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, where <italic toggle="yes">k </italic>&gt;<italic toggle="yes"> </italic>0 is large enough such that the full cassette is located inside this region. Next, the model is applied to predict the label for every tuple <inline-formula id="IE33"><mml:math id="IM33" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msubsup><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo> </mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mi>R</mml:mi></mml:mrow></mml:math></inline-formula> starting from the genes located next to <inline-formula id="IE34"><mml:math id="IM34" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> and extending the range in a stepwise manner. Finally, the boundaries <italic toggle="yes">p</italic>, <italic toggle="yes">g</italic> are predicted by <xref rid="btaa984-F7" ref-type="fig">Algorithm 1</xref>.<statement id="mthst1"><p><sc>Theorem</sc> Let <inline-formula id="IE35"><mml:math id="IM35" display="inline" overflow="scroll"><mml:mrow><mml:mi>R</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> be the region around a signature gene <inline-formula id="IE36"><mml:math id="IM36" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> and <italic toggle="yes">S<sub>pq</sub></italic> be the associated cassette predicted by <xref rid="btaa984-F7" ref-type="fig">Algorithm 1</xref>. Then <inline-formula id="IE37"><mml:math id="IM37" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>q</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mi>c</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>R</mml:mi><mml:mo>,</mml:mo><mml:msubsup><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>.</p></statement>
 <statement id="mthst2"><p><sc>Proof</sc> Let <inline-formula id="IE38"><mml:math id="IM38" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mi>c</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>R</mml:mi><mml:mo>,</mml:mo><mml:msubsup><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">G</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>. First we note that <inline-formula id="IE39"><mml:math id="IM39" display="inline" overflow="scroll"><mml:mrow><mml:mi>R</mml:mi><mml:mo>∩</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>q</mml:mi></mml:mrow></mml:msub><mml:mo>≠</mml:mo><mml:mo>∅</mml:mo></mml:mrow></mml:math></inline-formula> as both <italic toggle="yes">R</italic> and <italic toggle="yes">S<sub>pq</sub></italic> contain <inline-formula id="IE40"><mml:math id="IM40" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>. To show equality, we proof by contradiction that there are no left-handed differences. The right-handed cases are analogous. Now lets assume that <italic toggle="yes">s </italic>&lt;<italic toggle="yes"> p</italic>. In this case, let <italic toggle="yes">r</italic> be maximal in <inline-formula id="IE41"><mml:math id="IM41" display="inline" overflow="scroll"><mml:mrow><mml:mi>s</mml:mi><mml:mo>≤</mml:mo><mml:mi>r</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>p</mml:mi><mml:mo>≤</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:math></inline-formula> such that <inline-formula id="IE42"><mml:math id="IM42" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">G</mml:mi><mml:mi>c</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, which must exists as <inline-formula id="IE43"><mml:math id="IM43" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">G</mml:mi><mml:mi>c</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> by definition of a cassette. Then <inline-formula id="IE44"><mml:math id="IM44" display="inline" overflow="scroll"><mml:mrow><mml:mi>U</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>}</mml:mo><mml:mo>⊆</mml:mo><mml:msub><mml:mi mathvariant="script">G</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> by construction. As <italic toggle="yes">S<sub>st</sub></italic> is a cassette and <inline-formula id="IE45"><mml:math id="IM45" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>∧</mml:mo><mml:msubsup><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:mo>∈</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, we know that <inline-formula id="IE46"><mml:math id="IM46" display="inline" overflow="scroll"><mml:mrow><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msubsup><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE47"><mml:math id="IM47" display="inline" overflow="scroll"><mml:mrow><mml:mo>|</mml:mo><mml:mi>U</mml:mi><mml:mo>|</mml:mo><mml:mo>≤</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math></inline-formula>. Hence, <italic toggle="yes">g<sub>r</sub></italic> would have been detected on the first loop of <xref rid="btaa984-F7" ref-type="fig">Algorithm 1</xref> as it started from position <italic toggle="yes">i </italic>&gt;<italic toggle="yes"> p</italic> and must have considered position <italic toggle="yes">p</italic>, which is a contradiction.</p><p>For the other case let’s assume <italic toggle="yes">p </italic>&lt;<italic toggle="yes"> s</italic>. Note that <italic toggle="yes">s</italic> must have been visited in the first loop of <xref rid="btaa984-F7" ref-type="fig">Algorithm 1</xref> as <inline-formula id="IE48"><mml:math id="IM48" display="inline" overflow="scroll"><mml:mrow><mml:mi>s</mml:mi><mml:mo>≤</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:math></inline-formula>. Let be <italic toggle="yes">g<sub>r</sub></italic> be a <italic toggle="yes">cas</italic> gene with <inline-formula id="IE49"><mml:math id="IM49" display="inline" overflow="scroll"><mml:mrow><mml:mi>p</mml:mi><mml:mo>≤</mml:mo><mml:mi>r</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>s</mml:mi><mml:mo>≤</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:math></inline-formula> and <italic toggle="yes">r</italic> maximal. This must exist as <inline-formula id="IE50"><mml:math id="IM50" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mi>p</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">G</mml:mi><mml:mi>c</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> by the stop condition of the first loop in Algorithm 1. Let <inline-formula id="IE51"><mml:math id="IM51" display="inline" overflow="scroll"><mml:mrow><mml:mi>U</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>. By the first loop of Algorithm 1, we know <inline-formula id="IE52"><mml:math id="IM52" display="inline" overflow="scroll"><mml:mrow><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msubsup><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE53"><mml:math id="IM53" display="inline" overflow="scroll"><mml:mrow><mml:mo>|</mml:mo><mml:mi>U</mml:mi><mml:mo>|</mml:mo><mml:mo>≤</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math></inline-formula>. Thus, <inline-formula id="IE54"><mml:math id="IM54" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>⊃</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> is a larger cassette, which is a contradiction to the maximality of <inline-formula id="IE55"><mml:math id="IM55" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>.</p><p>Finally, we get <italic toggle="yes">s </italic>=<italic toggle="yes"> p</italic> and analogously <italic toggle="yes">t </italic>=<italic toggle="yes"> q</italic>, which proofs our claim.</p></statement></p>
      <fig position="float" id="btaa984-F7">
        <graphic xlink:href="btaa984f7" position="float"/>
      </fig>
    </sec>
    <sec>
      <title>2.3 Classification of Cas proteins</title>
      <p>Given the boundaries of a cassette, it is important to know the type of each <italic toggle="yes">cas</italic> gene in the cassette. A <italic toggle="yes">cas</italic> gene may belong to a set of predefined types or to a new type (i.e. previously undefined). To create a model able to identify the type of a <italic toggle="yes">cas</italic> gene, we train a multiclass classification model whose output indicates the probabilities of a given <italic toggle="yes">cas</italic> gene to belong to each Cas type. For such, we follow the procedure for word classification proposed in <xref rid="btaa984-B29" ref-type="bibr">Shu et al. (2017)</xref>, briefly described next:
</p>
      <list list-type="order">
        <list-item>
          <p>We assume that the probability values of all examples <italic toggle="yes">g<sub>i</sub></italic> that belong to each class <italic toggle="yes">C<sub>j</sub></italic> are normally distributed and centered at <inline-formula id="IE77"><mml:math id="IM56" display="inline" overflow="scroll"><mml:mrow><mml:mo>μ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>. To create the other half of the distribution, we mirror each of these probability values around <inline-formula id="IE78"><mml:math id="IM57" display="inline" overflow="scroll"><mml:mrow><mml:mo>μ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> (i.e. for each probability value <inline-formula id="IE79"><mml:math id="IM58" display="inline" overflow="scroll"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> associated to a training example <italic toggle="yes">g<sub>i</sub></italic>, we create the artificial point <inline-formula id="IE80"><mml:math id="IM59" display="inline" overflow="scroll"><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>).</p>
        </list-item>
        <list-item>
          <p>We estimate the standard deviation <inline-formula id="IE81"><mml:math id="IM60" display="inline" overflow="scroll"><mml:mrow><mml:mo>σ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> using the obtained probabilities and the artificial mirrored values.</p>
        </list-item>
        <list-item>
          <p>Finally, for each class <italic toggle="yes">C<sub>j</sub></italic>, if the predicted probability for a test example <italic toggle="yes">g<sub>k</sub></italic> is below the threshold <inline-formula id="IE82"><mml:math id="IM61" display="inline" overflow="scroll"><mml:mrow><mml:mi>t</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>max</mml:mi><mml:mo>⁡</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>0.5</mml:mn><mml:mo>,</mml:mo><mml:mo> </mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mo>α</mml:mo><mml:mo> </mml:mo><mml:mo>σ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, <italic toggle="yes">g<sub>k</sub></italic> is considered as an outlier for <italic toggle="yes">C<sub>j</sub></italic>. If the example is considered as an outlier for all classes, we label it as <italic toggle="yes">N</italic> (unnanotated). As suggested by <xref rid="btaa984-B29" ref-type="bibr">Shu <italic toggle="yes">et al.</italic> (2017)</xref>, we used <italic toggle="yes">α</italic> = 3. Otherwise, if the <italic toggle="yes">cas</italic> gene is not considered as an outlier, we assign to it the label with the highest probability.</p>
        </list-item>
      </list>
      <p>In the original paper, <xref rid="btaa984-B29" ref-type="bibr">Shu <italic toggle="yes">et al.</italic> (2017)</xref> used the training examples to estimate all thresholds <inline-formula id="IE83"><mml:math id="IM62" display="inline" overflow="scroll"><mml:mrow><mml:mi>t</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. However, in our study, we found out that this approach may yield overly optimistic estimations. To overcome this limitation, we used instead a validation set to estimate the thresholds.</p>
    </sec>
    <sec>
      <title>2.4 Cassette modularization</title>
      <p>Earlier studies (<xref rid="btaa984-B7" ref-type="bibr">Garrett <italic toggle="yes">et al.</italic>, 2011</xref>; <xref rid="btaa984-B27" ref-type="bibr">Shah et al., 2011</xref>; <xref rid="btaa984-B33" ref-type="bibr">Vestergaard <italic toggle="yes">et al.</italic>, 2014</xref>) have found that Cas cassettes can be subdivided into discrete functional modules, with each module carrying out a separate function, and with its genes being spatially separate from other modules within the cassette. Annotating the constituent modules inside a cassette can reveal important information in terms of the functional organization of the CRISPR-Cas system. Typically, a cassette is composed by three types of modules: adaptation, processing and interference. The processing module typically consists of a single <italic toggle="yes">cas</italic> gene, which is located either close by the interference module or far away from the region defined by the cassette boundaries. For these reasons, we take only the adaptation and interference modules into account. The adaptation module contains genes that are the most conserved across different genomes, being easy to detect. Therefore, in the first step of our method, we want to detect the adaptation module by searching for a sub-region containing Cas1, Cas2 and/or Cas4. Next, the sub-regions which are adjacent to the adaptation module will be considered as the interference modules.</p>
      <p>In CRISPR-Cas field, a cassette can have one or more interference modules. Based on the number of interference modules, we define cassettes with a single interference module as <italic toggle="yes">single cassettes</italic> and cassettes with more than one interference modules as <italic toggle="yes">multi-module cassettes</italic>. Note that the interference modules in a multi-module cassette might be overlapped or separated.</p>
    </sec>
  </sec>
  <sec>
    <title>3 Empirical evaluation</title>
    <sec>
      <title>3.1 Data collection and preprocessing</title>
      <p>We collect CRISPR data publicly available from <xref rid="btaa984-B20" ref-type="bibr">Makarova <italic toggle="yes">et al.</italic> (2015</xref>, <xref rid="btaa984-B21" ref-type="bibr">2020</xref>). Our dataset has 52730 Cas proteins, with 7793 CRISPR cassettes distributed into 22 different subtypes (see <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S1</xref>). We download the genomes from the NCBI database and extract the Cas protein sequences by applying the Prodigal tool v2.6.3 (<xref rid="btaa984-B14" ref-type="bibr">Hyatt et al., 2010</xref>) on the respective gene sequences. For each CRISPR cassette, we identify its signature gene <inline-formula id="IE84"><mml:math id="IM63" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>, the most important gene to define the cassette of interest (<xref rid="btaa984-B20" ref-type="bibr">Makarova <italic toggle="yes">et al.</italic>, 2015</xref>, <xref rid="btaa984-B21" ref-type="bibr">2020</xref>). Next, we extract <italic toggle="yes">k</italic> genes downstream and <italic toggle="yes">k</italic> genes upstream to <italic toggle="yes">g<sub>s</sub></italic>. Usually, the length of a CRISPR cassette ranges from 3 to 15 genes (<xref rid="btaa984-B20" ref-type="bibr">Makarova <italic toggle="yes">et al.</italic>, 2015</xref>, <xref rid="btaa984-B21" ref-type="bibr">2020</xref>). Thus, we set <italic toggle="yes">k </italic>=<italic toggle="yes"> </italic>50, which safely includes the full cassette in the extracted region.</p>
      <p>To define the features for each gene, we use three different types of features, described as follows:
</p>
      <list list-type="order">
        <list-item>
          <p><italic toggle="yes">General HMM features</italic>: we collect all available Hidden Markov Models (HMM) from the following public databases: TIGRFAM (<xref rid="btaa984-B11" ref-type="bibr">Haft, 2003</xref>), Pfam (<xref rid="btaa984-B4" ref-type="bibr">Bateman, 2004</xref>), COG (<xref rid="btaa984-B32" ref-type="bibr">Tatusov, 2000</xref>) and CDD (<xref rid="btaa984-B23" ref-type="bibr">Marchler-Bauer et al., 2011</xref>), totalizing 38847 HMMs. For each protein sequence, the features are defined as the bitscores generated by each HMM. We reduce the number of features to 500 using the Truncated Singular Value Decomposition (<xref rid="btaa984-B22" ref-type="bibr">Manning et al., 2009</xref>), with 60% of the original data variance preserved.</p>
        </list-item>
        <list-item>
          <p><italic toggle="yes">Protein properties features</italic>: we calculate 12 features related to the properties of each extracted protein, such as: molecular weight, length, isoelectric point, number of negatively charged residues, number of positively charged residues, extinction coefficient (with and without cysteine), instability index, hydrophobicity and secondary structure properties (fraction of turn, sheet and helix).</p>
        </list-item>
        <list-item>
          <p><italic toggle="yes">Specific HMM features</italic>: we build 623 HMM models for the different Cas protein models based on the core and signature genes from the dataset used (<xref rid="btaa984-B20" ref-type="bibr">Makarova <italic toggle="yes">et al.</italic>, 2015</xref>, <xref rid="btaa984-B21" ref-type="bibr">2020</xref>). Since these HMM models are more specific to the CRISPR domain, we believe that they may be better suited for the task of identifying potentially new Cas types.</p>
        </list-item>
      </list>
      <p>We create a dataset of 7793 cassettes, out of which 7687 are single cassettes, such as those illustrated in<xref rid="btaa984-F1" ref-type="fig">Figure 1</xref>. Each one of the remaining 106 cassettes, which are multi-module cassettes, can be decomposed into two or three single cassettes whose signatures are close in the genome. We divide these 106 cassettes into 2 subgroups: (i) the <italic toggle="yes">Separated set</italic>, which contains 74 multi-module cassettes that can be broken up into 145 single cassettes that do not overlap (e.g. see <xref rid="btaa984-F2" ref-type="fig">Fig. 2a</xref>); and (ii) the <italic toggle="yes">Overlapped set</italic>, which contains 32 multi-module cassettes that can be broken up into 70 single cassettes that present some degree of overlap (e.g. see <xref rid="btaa984-F2" ref-type="fig">Fig. 2b</xref>).</p>
      <fig position="float" id="btaa984-F1">
        <label>Fig. 1.</label>
        <caption>
          <p>Examples of the structure of CRISPR cassettes: (<bold>a</bold>) single CRISPR cassette; and (<bold>b</bold>) single CRISPR cassette with a gap. The signature genes are in bold. Blue arrows are interference genes while purple arrows are adaptation genes</p>
        </caption>
        <graphic xlink:href="btaa984f1" position="float"/>
      </fig>
      <fig position="float" id="btaa984-F2">
        <label>Fig. 2.</label>
        <caption>
          <p>Examples of the structure of multi-module CRISPR cassettes: (<bold>a</bold>) multi-module cassette without overlap; and (<bold>b</bold>) multi-module cassette with overlap. The signature genes are in bold. The blue and red arrows are interference genes, yellow arrows are processing genes and purple arrows are adaptation genes</p>
        </caption>
        <graphic xlink:href="btaa984f2" position="float"/>
      </fig>
    </sec>
    <sec>
      <title>3.2 Machine learning algorithms</title>
      <p>Our method for cassette boundary detection requires a binary classification model, whereas the Cas type prediction demands a multiclass classification model. In our experiments, we use two algorithms to train them which, in addition to be known for their good performance in several tasks, have different learning biases:
</p>
      <list list-type="bullet">
        <list-item>
          <p><italic toggle="yes">Extremely Randomized Trees (ERT)</italic> (<xref rid="btaa984-B8" ref-type="bibr">Geurts et al., 2006</xref>), which is a classifier that integrates multiple decision trees in an ensemble. To define the splits for each tree, this method selects, at each step, a random subset of <italic toggle="yes">v</italic> features and a subset of <italic toggle="yes">v</italic> thresholds (one for each feature). Afterwards, the feature that contains the best randomly chosen threshold according to the quality criterion is selected. After training, the class predicted for unseen examples is defined by the majority vote of all trees.</p>
        </list-item>
        <list-item>
          <p><italic toggle="yes">Deep Neural Networks (DNNs)</italic> (<xref rid="btaa984-B9" ref-type="bibr">Goodfellow et al., 2016</xref>), which are neural networks with a large number of layers whose neurons’ total input is a dot product between a numeric vector input and the neuron’s synaptic weights followed by the application of a non-linear activation function. By using the first layers to extract relevant features, DNNs can learn highly complex functions. DNNs are usually computationally expensive to train. However, with the recent advances in the computer processing power, they have obtained the best predictive performance in a wide range of applications (<xref rid="btaa984-B18" ref-type="bibr">Liu et al., 2017</xref>).</p>
        </list-item>
      </list>
    </sec>
    <sec>
      <title>3.3 Experimental setup</title>
      <p>Two experiments are carried out to evaluate the predictive performance of the proposed method. The first assesses the ability of our method to detect cassette boundaries. For such, we use 10-fold cross-validation for the dataset with 7687 single cassettes, separating one of the training folds for validation, and hold-out for the dataset with 106 multi-module cassettes. The second experiment evaluates how well the proposed method classifies Cas proteins. In this experiment, we employ hold-out for a dataset with 52730 Cas proteins.</p>
      <p><italic toggle="yes">Cross-validation</italic>. We split the data into 10-folds. Before training, we undersample the majority (negative) class, to mitigate the negative effect of data imbalance on the model training. We repeat the experiment 10 times and report the average and standard deviation of the performance over the 10 × 10 runs.</p>
      <p><italic toggle="yes">Hold-out</italic>. For the Cas type classification, we leave 20% of the data out for testing and the remaining for training (80%) and a fifth of the training set, for validation. To evaluate the performance for undefined <italic toggle="yes">cas</italic> genes, we leave in turn one and three Cas types out of the training and validation set to simulate undefined Cas types scenarios. We repeat this procedure to ensure that every Cas type is left out once. We run the experiment 10 times. Regarding the boundaries detection for multi-module cassettes, we use the 7687 single cassettes as a training and validation set and the 106 multi-module cassettes as the test set.</p>
      <p><italic toggle="yes">Model selection</italic>. To tune the hyperparameters of each learning algorithm, we employ the grid search with 32 different hyperparameter combinations. For ERT, we tune the number of trees in <inline-formula id="IE85"><mml:math id="IM64" display="inline" overflow="scroll"><mml:mrow><mml:mo>{</mml:mo><mml:mn>50</mml:mn><mml:mo>,</mml:mo><mml:mn>100</mml:mn><mml:mo>,</mml:mo><mml:mn>150</mml:mn><mml:mo>,</mml:mo><mml:mn>200</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>, the number of features randomly selected for each split in <inline-formula id="IE86"><mml:math id="IM65" display="inline" overflow="scroll"><mml:mrow><mml:mo>{</mml:mo><mml:msqrt><mml:mi>m</mml:mi></mml:msqrt><mml:mo>,</mml:mo><mml:mo> </mml:mo><mml:msub><mml:mrow><mml:mtext>log</mml:mtext><mml:mo>⁡</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mi>m</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> and the minimum number of examples to be at a leaf node in <inline-formula id="IE87"><mml:math id="IM66" display="inline" overflow="scroll"><mml:mrow><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mn>7</mml:mn><mml:mo>,</mml:mo><mml:mn>10</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>. For DNNs, we use two hidden layers and vary their numbers of neurons in <inline-formula id="IE88"><mml:math id="IM67" display="inline" overflow="scroll"><mml:mrow><mml:mo>{</mml:mo><mml:mn>25</mml:mn><mml:mo>,</mml:mo><mml:mn>50</mml:mn><mml:mo>,</mml:mo><mml:mn>75</mml:mn><mml:mo>,</mml:mo><mml:mn>100</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>, the Adam optimizer (<xref rid="btaa984-B15" ref-type="bibr">Kingma and Ba, 2015</xref>) and consider the learning rate values in <inline-formula id="IE89"><mml:math id="IM68" display="inline" overflow="scroll"><mml:mrow><mml:mo>{</mml:mo><mml:mn>0.01</mml:mn><mml:mo>,</mml:mo><mml:mn>0.001</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>. Concerning maximum gaps, we consider values between 0 and 3.</p>
      <p><italic toggle="yes">Evaluation metrics</italic>. For the evaluation of cassette boundaries detection, we use the following measures:
where <inline-formula id="IE91"><mml:math id="IM69" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mi mathvariant="script">C</mml:mi><mml:mi>t</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE92"><mml:math id="IM70" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mi mathvariant="script">C</mml:mi><mml:mi>p</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula> are the true and the predicted cassette, respectively. This measure lies in the interval <inline-formula id="IE93"><mml:math id="IM71" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> where 1 indicates a perfect match.
where <italic toggle="yes">p<sup>t</sup></italic> (resp. <italic toggle="yes">p<sup>p</sup></italic>) and <italic toggle="yes">q<sup>t</sup></italic> (resp. <italic toggle="yes">q<sup>p</sup></italic>) refer to the index of the first and the last gene of the true (resp. predicted) cassette, respectively. This measure lies in the interval <inline-formula id="IE95"><mml:math id="IM72" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mo>∞</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> where 0 indicates a perfect match, i.e. the boundaries of the predicted cassette are in perfect agreement with true cassette. Intuitively, CL denotes the average boundary deviation for the left and right end together.</p>
      <list list-type="bullet">
        <list-item>
          <p>The Jaccard Similarity (JS), which is a popular measure for comparing different sets and is defined as:</p>
        </list-item>
        <list-item>
          <p>
            <inline-formula id="IE90">
              <mml:math id="IM73" display="inline" overflow="scroll">
                <mml:mrow>
                  <mml:mtext>JS</mml:mtext>
                  <mml:mo stretchy="false">(</mml:mo>
                  <mml:msup>
                    <mml:mi mathvariant="script">C</mml:mi>
                    <mml:mi>t</mml:mi>
                  </mml:msup>
                  <mml:mo>,</mml:mo>
                  <mml:msup>
                    <mml:mi mathvariant="script">C</mml:mi>
                    <mml:mi>p</mml:mi>
                  </mml:msup>
                  <mml:mo stretchy="false">)</mml:mo>
                  <mml:mo>=</mml:mo>
                  <mml:mfrac>
                    <mml:mrow>
                      <mml:mo>|</mml:mo>
                      <mml:msup>
                        <mml:mi mathvariant="script">C</mml:mi>
                        <mml:mi>t</mml:mi>
                      </mml:msup>
                      <mml:mo>∩</mml:mo>
                      <mml:msup>
                        <mml:mi mathvariant="script">C</mml:mi>
                        <mml:mi>p</mml:mi>
                      </mml:msup>
                      <mml:mo>|</mml:mo>
                    </mml:mrow>
                    <mml:mrow>
                      <mml:mo>|</mml:mo>
                      <mml:msup>
                        <mml:mi mathvariant="script">C</mml:mi>
                        <mml:mi>t</mml:mi>
                      </mml:msup>
                      <mml:mo>∪</mml:mo>
                      <mml:msup>
                        <mml:mi mathvariant="script">C</mml:mi>
                        <mml:mi>p</mml:mi>
                      </mml:msup>
                      <mml:mo>|</mml:mo>
                    </mml:mrow>
                  </mml:mfrac>
                  <mml:mo>,</mml:mo>
                </mml:mrow>
              </mml:math>
            </inline-formula>
          </p>
        </list-item>
      </list>
      <list list-type="bullet">
        <list-item>
          <p>The Cassette Loss (CL), which is an adaptation of the mean absolute error, a popular measure for the evaluation of regression tasks. CL quantifies the gene-wise mean absolute error and is defined as:</p>
        </list-item>
        <list-item>
          <p>
            <inline-formula id="IE94">
              <mml:math id="IM74" display="inline" overflow="scroll">
                <mml:mrow>
                  <mml:mtext>CL</mml:mtext>
                  <mml:mo stretchy="false">(</mml:mo>
                  <mml:msup>
                    <mml:mi mathvariant="script">C</mml:mi>
                    <mml:mi>t</mml:mi>
                  </mml:msup>
                  <mml:mo>,</mml:mo>
                  <mml:msup>
                    <mml:mi mathvariant="script">C</mml:mi>
                    <mml:mi>p</mml:mi>
                  </mml:msup>
                  <mml:mo stretchy="false">)</mml:mo>
                  <mml:mo>=</mml:mo>
                  <mml:mfrac>
                    <mml:mrow>
                      <mml:mo>|</mml:mo>
                      <mml:msup>
                        <mml:mi>p</mml:mi>
                        <mml:mi>t</mml:mi>
                      </mml:msup>
                      <mml:mo>−</mml:mo>
                      <mml:msup>
                        <mml:mi>p</mml:mi>
                        <mml:mi>p</mml:mi>
                      </mml:msup>
                      <mml:mo>|</mml:mo>
                      <mml:mo>+</mml:mo>
                      <mml:mo>|</mml:mo>
                      <mml:msup>
                        <mml:mi>q</mml:mi>
                        <mml:mi>t</mml:mi>
                      </mml:msup>
                      <mml:mo>−</mml:mo>
                      <mml:msup>
                        <mml:mi>q</mml:mi>
                        <mml:mi>p</mml:mi>
                      </mml:msup>
                      <mml:mo>|</mml:mo>
                    </mml:mrow>
                    <mml:mn>2</mml:mn>
                  </mml:mfrac>
                  <mml:mo>,</mml:mo>
                </mml:mrow>
              </mml:math>
            </inline-formula>
          </p>
        </list-item>
      </list>
      <p>For the evaluation of the Cas protein classification, we use the <italic toggle="yes">F</italic>-score with macro-averaging. Given a binary classification task where we have a specific class of interest (positive class), the classical <italic toggle="yes">F</italic>-score is defined as:
<disp-formula id="E1"><mml:math id="M1" display="block" overflow="scroll"><mml:mrow><mml:mi mathvariant="normal">F</mml:mi><mml:mo>-</mml:mo><mml:mtext>score</mml:mtext><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>2</mml:mn><mml:mtext>TP</mml:mtext></mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mtext>TP</mml:mtext><mml:mo>+</mml:mo><mml:mtext>FP</mml:mtext><mml:mo>+</mml:mo><mml:mtext>FN</mml:mtext></mml:mrow></mml:mfrac></mml:mrow></mml:math></disp-formula>where TP, FP and FN correspond to the number of true positives, false positives and false negatives, respectively. For the multiclass scenario, the macro-averaging consists of calculating the <italic toggle="yes">F</italic>-score for each individual class and reporting the average <italic toggle="yes">F</italic>-score as the global performance measure. The main advantage of macro-averaging is that it treats all classes with the same weight, independently of the number of examples that they contain (<xref rid="btaa984-B30" ref-type="bibr">Sokolova and Lapalme, 2009</xref>).</p>
    </sec>
  </sec>
  <sec>
    <title>4 Results and discussion</title>
    <p>In this section, we report and analyze the results obtained from our experiments.</p>
    <sec>
      <title>4.1 Detection of cassette boundaries</title>
      <p>We report the histogram of JS and CL values for single cassette prediction in <xref rid="btaa984-F3" ref-type="fig">Figure 3</xref>, using only the general HMM features, which were our best results. For the histograms of other types of features, please check our <xref rid="sup1" ref-type="supplementary-material">Supplementary Material</xref> (<xref rid="sup1" ref-type="supplementary-material">Supplementary Figs S1 and S2</xref>). From <xref rid="btaa984-F3" ref-type="fig">Figures 3a and c</xref>, it can be noticed that most of the JS values are 1.0 and CL values are 0.0, indicating that our model is able to correctly predict most of the cassettes. In addition, in <xref rid="btaa984-T1" ref-type="table">Table 1</xref>, we show the average JS and CL values that we obtained for both single and multi-module cassettes. When comparing our results to those achieved by CRISPRCasFinder (<xref rid="btaa984-B5" ref-type="bibr">Couvin <italic toggle="yes">et al.</italic>, 2018</xref>), the closest tool to our method, it is possible to note that we achieved around 16% of JS improvement in the best case for single cassettes. In particular, our tool would predict cassette boundaries correctly with a precision of roughly one position, whereas CRISPRCasFinder would be roughly five positions away on average. Regarding multi-module cassettes, we obtained JS values above 0.70, while CRISPRCasFinder achieved extremely low JS values which are less than 0.15 in both separated and overlapped cases. It confirms the superiority of our method over CRISPRCasFinder in the detection of cassette boundaries. Besides, to illustrate the capability of our method in this scenario, we present in <xref rid="btaa984-F4" ref-type="fig">Figure 4</xref> an example of cassette prediction for the organism Thermotoga sp. RQ2.</p>
      <fig position="float" id="btaa984-F3">
        <label>Fig. 3.</label>
        <caption>
          <p>Histogram containing 100 equally sized bins of the Jaccard Similarity and Loss for single cassette prediction using ERT (<bold>a, b</bold>) and DNN (<bold>c, d</bold>). The inner figures are the zoom of the corresponding outer ones without considering the most dominant bin</p>
        </caption>
        <graphic xlink:href="btaa984f3" position="float"/>
      </fig>
      <fig position="float" id="btaa984-F4">
        <label>Fig. 4.</label>
        <caption>
          <p>Examples of our method’s cassette prediction for the organism Thermotoga sp. RQ2. Specifically, it found two cassettes composed by single interference modules, represented by the orange and green arrows, and a multi-module cassette with two interference modules (blue and red arrows) and an adaptation module (purple arrows). See <xref rid="sup1" ref-type="supplementary-material">Figure S3</xref> for more details</p>
        </caption>
        <graphic xlink:href="btaa984f4" position="float"/>
      </fig>
      <table-wrap position="float" id="btaa984-T1">
        <label>Table 1.</label>
        <caption>
          <p>Performance of our method and CRISPRcasFinder for the identification of single and multi-module cassettes in terms of JS and CL</p>
        </caption>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="center" span="1"/>
            <col valign="top" align="center" span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th rowspan="3" colspan="1">Method</th>
              <th colspan="2" rowspan="2">Single cassettes<hr/></th>
              <th colspan="4" rowspan="1">Multi-module cassettes<hr/></th>
            </tr>
            <tr>
              <th colspan="2" rowspan="1">Separated set<hr/></th>
              <th colspan="2" rowspan="1">Overlapped set<hr/></th>
            </tr>
            <tr>
              <th rowspan="1" colspan="1">JS</th>
              <th rowspan="1" colspan="1">CL</th>
              <th rowspan="1" colspan="1">JS</th>
              <th rowspan="1" colspan="1">CL</th>
              <th rowspan="1" colspan="1">JS</th>
              <th rowspan="1" colspan="1">CL</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">ERT</td>
              <td rowspan="1" colspan="1">0.86 ± 0.01</td>
              <td rowspan="1" colspan="1">1.09 ± 0.12</td>
              <td rowspan="1" colspan="1">0.79</td>
              <td rowspan="1" colspan="1">1.10</td>
              <td rowspan="1" colspan="1">0.72</td>
              <td rowspan="1" colspan="1">1.93</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">DNN</td>
              <td rowspan="1" colspan="1">0.83 ± 0.01</td>
              <td rowspan="1" colspan="1">1.39 ± 0.20</td>
              <td rowspan="1" colspan="1">0.74</td>
              <td rowspan="1" colspan="1">1.77</td>
              <td rowspan="1" colspan="1">0.73</td>
              <td rowspan="1" colspan="1">2.21</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">CRISPRcasFinder</td>
              <td rowspan="1" colspan="1">0.70</td>
              <td rowspan="1" colspan="1">4.87</td>
              <td rowspan="1" colspan="1">0.13</td>
              <td rowspan="1" colspan="1">30.52</td>
              <td rowspan="1" colspan="1">0.10</td>
              <td rowspan="1" colspan="1">19.88</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <fn id="tblfn1">
            <p><italic toggle="yes">Note</italic>: For multi-module cassettes, the prediction quality for boundary detection drastically drops for CRISPRcasFinder, whereas our tool has similar performance to the single cassette case.</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
    </sec>
    <sec>
      <title>4.2 Classification of Cas proteins</title>
      <p>In <xref rid="btaa984-F5" ref-type="fig">Figure 5</xref>, the average <italic toggle="yes">F</italic>-scores for Cas type prediction of our method using a combination of specific HMMs and gene properties features are shown. For details of the performance of the models using different types of features, please see our <xref rid="sup1" ref-type="supplementary-material">Supplementary Material</xref> (Supplementary Figs S3–S11).</p>
      <fig position="float" id="btaa984-F5">
        <label>Fig. 5.</label>
        <caption>
          <p>Comparison of Cas type prediction <italic toggle="yes">F</italic>-scores between our models (using a combination of the specific HMM and protein properties features) and CRISPRCasFinder. For a comparison between the runtime of Casboundary and CRISPRCasFinder, see <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S3</xref></p>
        </caption>
        <graphic xlink:href="btaa984f5" position="float"/>
      </fig>
      <p>Overall, our method achieved high predictive performances for all Cas types using both ML models. More precisely, for the known Cas types predictions most values are equal to or higher than 0.9. Regarding the prediction of unknown Cas types, ERT and DNN achieved average <italic toggle="yes">F</italic>-scores of 0.73 and 0.80, respectively. Although the results for unknown Cas types are relatively lower than those of known Cas types, this reduction is expected, given the difficulty of the task for detecting new classes caused by the balancing between the high <italic toggle="yes">F</italic>-scores for known classes and the ability to potentially point out new genes. The high predictive performance of our models shows their potential for the classification of Cas types for genes in general and for un-predefined <italic toggle="yes">cas</italic> genes observed in many cassettes in particular.</p>
    </sec>
    <sec>
      <title>4.3 Prediction of potentially new Cas proteins</title>
      <p>In this task, we use our method to investigate the problem of predicting (potentially) new Cas proteins, which is a typical scenario for the analysis of novel cassettes. For such we integrated into our method the best ML models that we obtained in the previous section. They are able not only to integrate the knowledge extracted from multiple HMM models and protein properties, but also to generalize the relations among those features.</p>
      <p>First, given the cassette boundaries for a genome, we applied our classification methods to label each protein contained in it. Then, we analyzed the proteins that were labeled as ‘unknown’, by performing a clustering search against our database. In <xref rid="btaa984-F6" ref-type="fig">Figure 6a</xref>, our method labeled two proteins as potentially new. One of them presented a good degree of similarity with a few Cas8 proteins (see our <xref rid="sup1" ref-type="supplementary-material">Supplementary Material</xref>, Supplementary Figs S10–S12). Since this family is very diverse, this result suggests that it may belong to a new Cas8 subfamily and we labeled the respective gene as ‘putative cas8’. In <xref rid="btaa984-F6" ref-type="fig">Figure 6b</xref>, our method labeled two genes as potentially new. We did not find any convincing resemblance with the proteins we had in our database. Thus, we believe that such proteins may represent new protein families and we label the respective genes as ‘putative new <italic toggle="yes">cas</italic> gene’. See the <xref rid="sup1" ref-type="supplementary-material">Supplementary Material</xref> for more details.</p>
      <fig position="float" id="btaa984-F6">
        <label>Fig. 6.</label>
        <caption>
          <p>Examples of the application of our method for the identification of potentially new Cas proteins, which are marked in bold. In (<bold>a</bold>), our method predicted two proteins as ‘new’, where one of them has some similarity with Cas8 proteins and may be a new subfamily of Cas8. In (<bold>b</bold>), our method predicted two proteins as ‘new’, which do not have any similarity to other known Cas proteins and may indicate two new genes</p>
        </caption>
        <graphic xlink:href="btaa984f6" position="float"/>
      </fig>
    </sec>
    <sec>
      <title>4.4 Occurrence of exchangeable modules</title>
      <p>CRISPR cassettes are multi-module structures which are made up of several functional modules each responsible for their own stage of the immune response (<xref rid="btaa984-B33" ref-type="bibr">Vestergaard <italic toggle="yes">et al.</italic>, 2014</xref>), including adaptation, processing and interference, in addition of optional accessory modules. The genes comprising each module within a cassette are separated from each other into distinct operons, such that the modules themselves are integral (<xref rid="btaa984-B27" ref-type="bibr">Shah <italic toggle="yes">et al.</italic>, 2011</xref>). Such a structure enables differential regulation of the expression of the different immune stages, but also enables independent horizontal transfer of a module within a cassette without affecting the functionality of the rest of the immune response. There have been previous reports of CRISPR cassettes from related organisms having undergone such shuffling of modules (<xref rid="btaa984-B7" ref-type="bibr">Garrett <italic toggle="yes">et al.</italic>, 2011</xref>), although no systematic survey has been made. The capability of our method to define the edges of both Cas modules and cassettes was employed on a database of bacterial and archaeal genomes (Section 3.1) and the identities of the detected modules were compared in order to gauge the extent of modular exchange in natural CRISPR-Cas systems.</p>
      <p>All cassettes consisting of no more than a single adaptation module and a single interference module were included in the analysis. Adaptation modules from different cassettes were aligned against each other in order to determine their similarity degree (see the <xref rid="sup1" ref-type="supplementary-material">Supplementary Material</xref>). The subtype of each cassette was determined by looking at the interference module. Finally, for each adaptation module, the subtype of its closest match from a different cassette was recorded in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S2</xref>.</p>
      <p>Subtypes with a high diagonal percentage close to 100 almost never share their adaptation module with other subtypes of interference modules. I-E and I-F are a good examples of such subtypes, and this observation is consistent with that fact that the adaptation and inferencence stages are coupled in systems of these subtypes, with Cas3 being involved in both stages (<xref rid="btaa984-B34" ref-type="bibr">Vorontsova et al., 2015</xref>; <xref rid="btaa984-B35" ref-type="bibr">Westra et al., 2012</xref>). On the contrary, and consistent with earlier reports (<xref rid="btaa984-B7" ref-type="bibr">Garrett <italic toggle="yes">et al.</italic>, 2011</xref>; <xref rid="btaa984-B33" ref-type="bibr">Vestergaard <italic toggle="yes">et al.</italic>, 2014</xref>), subtypes I-A, I-B, I-D frequently engage in modular exchange, probably because the adaptation and interference stages are independent in these subtypes (<xref rid="btaa984-B25" ref-type="bibr">Plagens et al., 2012</xref>). Besides, most Type III systems have been known for long to piggyback on adaptation and processing machineries of co-occurring Type I systems (<xref rid="btaa984-B10" ref-type="bibr">Haft et al., 2005</xref>; <xref rid="btaa984-B12" ref-type="bibr">Hale et al., 2009</xref>; <xref rid="btaa984-B19" ref-type="bibr">Makarova et al., 2011</xref>) because they have no such modules of their own, explaining their particularly low diagonal percentages. The extremely low diagonal percentage (37) found for subtype I-U suggests very frequent modular exchange comparable to Type III systems. This result indicates that the subtype co-functions with other CRISPR-Cas systems belonging to subtypes as I-A, I-C and Type III. This subtype may not have specific adaptation system of its own, like Type III systems. Given that very little experimental data exists on subtype I-U systems, these observations still need confirmation.</p>
    </sec>
    <sec>
      <title>4.5 Automated annotation of Cas Cassettes and modules</title>
      <p>We made our method available as an open source tool in GitHub. It was implemented in Python and is based on the method that integrates our best ML models. Casboundary accepts a complete or partial genome sequence as input, identifies the potential signature genes by using Cas-specific HMM models (<xref rid="btaa984-B21" ref-type="bibr">Makarova <italic toggle="yes">et al.</italic>, 2020</xref>) (see Section 3.1), and provides a full identification of the CRISPR cassettes. Next, it labels the genes of the cassette and, as a post-processing step, it can also perform the decomposition of the identified cassette into modules.</p>
      <p>Casboundary can be easily integrated with CRISPRcasIdentifier (<xref rid="btaa984-B24" ref-type="bibr">Padilha et al., 2020</xref>), a recent tool for the classification of CRISPR cassettes. Casboundary outputs a set of Fasta files containing the identified cassettes, which can be given as input to CRISPRcasIdentifier.cAs a next step, CRISPRcasIdentifier can classify each cassette into its respective subtype and also predict potentially missing proteins in it. By integrating these tools, the users have a complete CRISPR detection and classification pipeline.</p>
    </sec>
  </sec>
  <sec>
    <title>5 Conclusion</title>
    <p>In this article, we introduce the first method for automated cassette boundary detection, Cas protein annotation and classification. We apply our method on the datasets from <xref rid="btaa984-B20" ref-type="bibr">Makarova <italic toggle="yes">et al.</italic> (2015</xref>, <xref rid="btaa984-B21" ref-type="bibr">2020</xref>), which comprise single and multi-module cassettes. Additionally, we also present two real study cases, where we analyze the occurrence of exchangeable models and the prediction of potentially new Cas protein classes.</p>
    <p>With respect to boundary detection, the approach followed by our method combines the information available for different genes and a potential signature gene of interest. In our experiments, the method obtains promising predictive performance results as measured by the JS and CL. For single cassettes, we obtain an average JS of 0.86 and CL below 1.09 with the best ML model. For composite cassettes, such a model reaches average JS (resp. CL) values of 0.79 (resp. 1.10) and 0.72 (resp. 1.93) for separated and overlapped cassettes, respectively.</p>
    <p>Concerning the Cas protein classification, our method is not only able to assign the Cas type labels for known Cas proteins but also to label a Cas protein as a potentially new type. In our experiments, where we simulate the occurrence of new Cas types by leaving out either 1 or 3 subtypes, our models achieve <italic toggle="yes">F</italic>-scores above 0.9 for known cas types. Besides, we perform a real study case where our method is able to suggest new putative <italic toggle="yes">cas</italic> genes. Moreover, we conduct another study case to analyze the occurrence of exchangeable models in CRISPR-Cas systems. Our analysis presents evidence of the exchange of adaptation and interference modules in different archea and bacteria CRISPR-Cas systems.</p>
    <p>Finally, our method is available as an open source tool in GitHub. At each run, it loads our best ML models and allows the user to apply all the developed methods in an easy and pragmatic way to new CRISPR cassettes.</p>
  </sec>
  <sec>
    <title>Funding</title>
    <p>This work was funded by the Deutsche Forschungsgemeinschaft (DFG, German Research Foundation) under Germany’s Excellence Strategy—EXC-2189—Project ID: 390939984, BA 2168/11-1 SPP 1738 and BA2168/11-2 SPP 1738, BA 2168/3-3, and GRK 2344/1 2017 MeInBio, and the São Paulo Research Foundation (FAPESP) [2013/07375-0 and 2019/21300-9].</p>
    <p><bold>Conflict of Interest:</bold> None declared.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>btaa984_Supplementary_Data</label>
      <media xlink:href="btaa984_supplementary_data.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btaa984-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Alkhnbashi</surname><given-names>O.S.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2016</year>) 
<article-title>Characterizing leader sequences of crispr loci</article-title>. <source>Bioinformatics</source>, <volume>32</volume>, <fpage>i576</fpage>–<lpage>i585</lpage>.<pub-id pub-id-type="pmid">27587677</pub-id></mixed-citation>
    </ref>
    <ref id="btaa984-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Alkhnbashi</surname><given-names>O.S.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2020</year>) 
<article-title>CRISPR-cas bioinformatics</article-title>. <source>Methods</source>, <volume>172</volume>, <fpage>3</fpage>–<lpage>11</lpage>.<pub-id pub-id-type="pmid">31326596</pub-id></mixed-citation>
    </ref>
    <ref id="btaa984-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Alkhnbashi</surname><given-names>O.S.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2014</year>) 
<article-title>CRISPRstrand: predicting repeat orientations to determine the crRNA-encoding strand at CRISPR loci</article-title>. <source>Bioinformatics (Oxford, England)</source>, <volume>30</volume>, <fpage>i489</fpage>–<lpage>496</lpage>.<pub-id pub-id-type="pmid">25161238</pub-id></mixed-citation>
    </ref>
    <ref id="btaa984-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bateman</surname><given-names>A.</given-names></string-name></person-group> (<year>2004</year>) 
<article-title>The pfam protein families database</article-title>. <source>Nucleic Acids Res</source>., <volume>32</volume>, <fpage>D138</fpage>–<lpage>D141</lpage>.<pub-id pub-id-type="pmid">14681378</pub-id></mixed-citation>
    </ref>
    <ref id="btaa984-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Couvin</surname><given-names>D.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2018</year>) 
<article-title>CRISPRCasFinder, an update of CRISRFinder, includes a portable version, enhanced performance and integrates search for Cas proteins</article-title>. <source>Nucleic Acids Res</source>., <volume>46</volume>, <fpage>W246</fpage>–<lpage>W251</lpage>.<pub-id pub-id-type="pmid">29790974</pub-id></mixed-citation>
    </ref>
    <ref id="btaa984-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Crawley</surname><given-names>A.B.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2018</year>) 
<article-title>CRISPRdisco: an automated pipeline for the discovery and analysis of CRISPR-cas systems</article-title>. <source>CRISPR J</source>., <volume>1</volume>, <fpage>171</fpage>–<lpage>181</lpage>.<pub-id pub-id-type="pmid">31021201</pub-id></mixed-citation>
    </ref>
    <ref id="btaa984-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Garrett</surname><given-names>R.A.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2011</year>) 
<article-title>Archaeal CRISPR-based immune systems: exchangeable functional modules</article-title>. <source>Trends Microbiol</source>., <volume>19</volume>, <fpage>549</fpage>–<lpage>556</lpage>.<pub-id pub-id-type="pmid">21945420</pub-id></mixed-citation>
    </ref>
    <ref id="btaa984-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Geurts</surname><given-names>P.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2006</year>) 
<article-title>Extremely randomized trees</article-title>. <source>Mach. Learn</source>., <volume>63</volume>, <fpage>3</fpage>–<lpage>42</lpage>.</mixed-citation>
    </ref>
    <ref id="btaa984-B9">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Goodfellow</surname><given-names>I.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2016</year>) <source>Deep Learning</source>. 
<publisher-name>MIT Press Bookstore, Cambridge, MA</publisher-name>. <ext-link xlink:href="http://www.deeplearningbook.org" ext-link-type="uri">http://www.deeplearningbook.org</ext-link>.</mixed-citation>
    </ref>
    <ref id="btaa984-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Haft</surname><given-names>D.H.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2005</year>) 
<article-title>A guild of 45 CRISPR-associated (Cas) protein families and multiple CRISPR/Cas subtypes exist in prokaryotic genomes</article-title>. <source>PLoS Comput. Biol</source>., <volume>1</volume>, <fpage>e60</fpage>.<pub-id pub-id-type="pmid">16292354</pub-id></mixed-citation>
    </ref>
    <ref id="btaa984-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Haft</surname><given-names>D.H.</given-names></string-name></person-group> (<year>2003</year>) 
<article-title>The tigrfams database of protein families</article-title>. <source>Nucleic Acids Res</source>., <volume>31</volume>, <fpage>371</fpage>–<lpage>373</lpage>.<pub-id pub-id-type="pmid">12520025</pub-id></mixed-citation>
    </ref>
    <ref id="btaa984-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hale</surname><given-names>C.R.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2009</year>) 
<article-title>RNA-guided RNA cleavage by a CRISPR RNA-cas protein complex</article-title>. <source>Cell</source>, <volume>139</volume>, <fpage>945</fpage>–<lpage>956</lpage>.<pub-id pub-id-type="pmid">19945378</pub-id></mixed-citation>
    </ref>
    <ref id="btaa984-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Horvath</surname><given-names>P.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2008</year>) 
<article-title>Diversity, activity, and evolution of crispr loci in streptococcus thermophilus</article-title>. <source>J. Bacteriol</source>., <volume>190</volume>, <fpage>1401</fpage>–<lpage>1412</lpage>.<pub-id pub-id-type="pmid">18065539</pub-id></mixed-citation>
    </ref>
    <ref id="btaa984-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hyatt</surname><given-names>D.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2010</year>) 
<article-title>Prodigal: prokaryotic gene recognition and translation initiation site identification</article-title>. <source>BMC Bioinformatics</source>, <volume>11</volume>, <fpage>119</fpage>.<pub-id pub-id-type="pmid">20211023</pub-id></mixed-citation>
    </ref>
    <ref id="btaa984-B15">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Kingma</surname><given-names>D.P.</given-names></string-name>, <string-name><surname>Ba</surname><given-names>J.</given-names></string-name></person-group> (<year>2015</year>) Adam: a method for stochastic optimization. In <italic toggle="yes">Proceedings of the 3rd International Conference on Learning Representations</italic>, San Diego, CA, USA. <ext-link xlink:href="https://arxiv.org/abs/1412.6980" ext-link-type="uri">https://arxiv.org/abs/1412.6980</ext-link></mixed-citation>
    </ref>
    <ref id="btaa984-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Koonin</surname>,<given-names>E. V.</given-names></string-name>  <etal>et al</etal>. </person-group> (<year>2020</year>) 
<article-title>Evolutionary entanglement of mobile genetic elements and host defence systems: guns for hire</article-title>. <source><italic toggle="yes">Nature Reviews Genetics</italic></source>, <volume>21</volume>, <fpage>119</fpage>–<lpage>131</lpage>. <pub-id pub-id-type="doi">10.1038/s41576-019-0172-9</pub-id></mixed-citation>
    </ref>
    <ref id="btaa984-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lange</surname><given-names>S.J.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2013</year>) 
<article-title>CRISPRmap: an automated classification of repeat conservation in prokaryotic adaptive immune systems</article-title>. <source>Nucleic Acids Res</source>., <volume>41</volume>, <fpage>8034</fpage>–<lpage>8044</lpage>.<pub-id pub-id-type="pmid">23863837</pub-id></mixed-citation>
    </ref>
    <ref id="btaa984-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Liu</surname><given-names>W.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2017</year>) 
<article-title>A survey of deep neural network architectures and their applications</article-title>. <source>Neurocomputing</source>, <volume>234</volume>, <fpage>11</fpage>–<lpage>26</lpage>.</mixed-citation>
    </ref>
    <ref id="btaa984-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Makarova</surname><given-names>K.S.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2011</year>) 
<article-title>Evolution and classification of the CRISPR-Cas systems</article-title>. <source>Nat. Rev. Microbiol</source>., <volume>9</volume>, <fpage>467</fpage>–<lpage>477</lpage>.<pub-id pub-id-type="pmid">21552286</pub-id></mixed-citation>
    </ref>
    <ref id="btaa984-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Makarova</surname><given-names>K.S.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2015</year>) 
<article-title>An updated evolutionary classification of CRISPR-Cas systems</article-title>. <source>Nat. Rev. Microbiol</source>., <volume>13</volume>, <fpage>722</fpage>–<lpage>736</lpage>.<pub-id pub-id-type="pmid">26411297</pub-id></mixed-citation>
    </ref>
    <ref id="btaa984-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Makarova</surname>,<given-names>K. S.</given-names></string-name>  <etal>et al</etal>. </person-group> (<year>2020</year>) 
<article-title>Evolutionary classification of CRISPR–Cas systems: a burst of class 2 and derived variants</article-title>. <source><italic toggle="yes">Nature Reviews Microbiology</italic></source>, <volume>18</volume>, <fpage>67</fpage>–<lpage>83</lpage>. <pub-id pub-id-type="doi">10.1038/s41579-019-0299-x</pub-id><pub-id pub-id-type="pmid">31857715</pub-id></mixed-citation>
    </ref>
    <ref id="btaa984-B22">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Manning</surname><given-names>C.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2009</year>) <source>Introduction to Information Retrieval</source>. 
<publisher-name>The MIT Press, US One Rogers Street, Cambridge, MA 02142-1209</publisher-name>.</mixed-citation>
    </ref>
    <ref id="btaa984-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Marchler-Bauer</surname><given-names>A.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2011</year>) 
<article-title>Cdd: a conserved domain database for the functional annotation of proteins</article-title>. <source>Nucleic Acids Res</source>., <volume>39</volume>, <fpage>D225</fpage>–<lpage>D229</lpage>.<pub-id pub-id-type="pmid">21109532</pub-id></mixed-citation>
    </ref>
    <ref id="btaa984-B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Padilha</surname><given-names>V.A.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2020</year>) 
<article-title>Crisprcasidentifier: machine learning for accurate identification and classification of CRISPR-Cas systems</article-title>. <source>GigaScience</source>, <volume>9</volume>, <fpage>giaa062</fpage>.<pub-id pub-id-type="pmid">32556168</pub-id></mixed-citation>
    </ref>
    <ref id="btaa984-B25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Plagens</surname><given-names>A.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2012</year>) 
<article-title>Characterization of the CRISPR/Cas subtype I—a system of the hyperthermophilic crenarchaeon thermoproteus tenax</article-title>. <source>J. Bacteriol</source>., <volume>194</volume>, <fpage>2491</fpage>–<lpage>2500</lpage>.<pub-id pub-id-type="pmid">22408157</pub-id></mixed-citation>
    </ref>
    <ref id="btaa984-B26">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Remmert</surname><given-names>M.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2012</year>) 
<article-title>Hhblits: lightning-fast iterative protein sequence searching by hmm-hmm alignment</article-title>. <source>Nat. Methods</source>, <volume>9</volume>, <fpage>173</fpage>–<lpage>175</lpage>.</mixed-citation>
    </ref>
    <ref id="btaa984-B27">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Shah</surname><given-names>S.A.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2011</year>) 
<article-title>CRISPR/cas and cmr modules, mobility and evolution of adaptive immune systems</article-title>. <source>Res. Microbiol</source>., <volume>162</volume>, <fpage>27</fpage>–<lpage>38</lpage>.<pub-id pub-id-type="pmid">20863886</pub-id></mixed-citation>
    </ref>
    <ref id="btaa984-B28">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Shah</surname><given-names>S.A.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2018</year>) 
<article-title>Comprehensive search for accessory proteins encoded with archaeal and bacterial type III CRISPR-Cas gene cassettes reveals 39 new cas gene families</article-title>. <source>RNA Biol</source>., <volume>0</volume>, <fpage>1</fpage>–<lpage>13</lpage>.</mixed-citation>
    </ref>
    <ref id="btaa984-B29">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Shu</surname><given-names>L.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2017</year>). DOC: Deep open classification of text documents. In <italic toggle="yes">Proceedings of the 2017 Conference on Empirical Methods in Natural Language Processing</italic>, Association for Computational Linguistics, Copenhagen, Denmark. pp. <fpage>2911</fpage>–<lpage>2916</lpage>.</mixed-citation>
    </ref>
    <ref id="btaa984-B30">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sokolova</surname><given-names>M.</given-names></string-name>, <string-name><surname>Lapalme</surname><given-names>G.</given-names></string-name></person-group> (<year>2009</year>) 
<article-title>A systematic analysis of performance measures for classification tasks</article-title>. <source>Inf. Process. Manag</source>., <volume>45</volume>, <fpage>427</fpage>–<lpage>437</lpage>.</mixed-citation>
    </ref>
    <ref id="btaa984-B31">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Suttle</surname><given-names>C.A.</given-names></string-name></person-group> (<year>2016</year>) 
<article-title>Environmental microbiology: viral diversity on the global stage</article-title>. <source>Nat. Microbiol</source>., <volume>1</volume>, <fpage>16205</fpage>–<lpage>16211</lpage>.<pub-id pub-id-type="pmid">27782140</pub-id></mixed-citation>
    </ref>
    <ref id="btaa984-B32">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Tatusov</surname><given-names>R.L.</given-names></string-name></person-group> (<year>2000</year>) 
<article-title>The cog database: a tool for genome-scale analysis of protein functions and evolution</article-title>. <source>Nucleic Acids Res</source>., <volume>28</volume>, <fpage>33</fpage>–<lpage>36</lpage>.<pub-id pub-id-type="pmid">10592175</pub-id></mixed-citation>
    </ref>
    <ref id="btaa984-B33">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Vestergaard</surname><given-names>G.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2014</year>) 
<article-title>CRISPR adaptive immune systems of archaea</article-title>. <source>RNA Biol</source>., <volume>11</volume>, <fpage>156</fpage>–<lpage>167</lpage>.<pub-id pub-id-type="pmid">24531374</pub-id></mixed-citation>
    </ref>
    <ref id="btaa984-B34">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Vorontsova</surname><given-names>D.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2015</year>) 
<article-title>Foreign DNA acquisition by the I-F CRISPR–Cas system requires all components of the interference machinery</article-title>. <source>Nucleic Acids Res</source>., <volume>43</volume>, <fpage>10848</fpage>–<lpage>10860</lpage>.<pub-id pub-id-type="pmid">26586803</pub-id></mixed-citation>
    </ref>
    <ref id="btaa984-B35">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Westra</surname>,<given-names>E.</given-names></string-name>  <etal>et al</etal>. </person-group> (<year>2012</year>) 
<article-title>CRISPR Immunity Relies on the Consecutive Binding and Degradation of Negatively Supercoiled Invader DNA by Cascade and Cas3</article-title>. <source><italic toggle="yes">Molecular Cell</italic></source>, <volume>46</volume>, <fpage>595</fpage>–<lpage>605</lpage>. <pub-id pub-id-type="doi">10.1016/j.molcel.2012.03.018</pub-id><pub-id pub-id-type="pmid">22521689</pub-id></mixed-citation>
    </ref>
    <ref id="btaa984-B36">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zhang</surname><given-names>Q.</given-names></string-name>, <string-name><surname>Ye</surname><given-names>Y.</given-names></string-name></person-group> (<year>2017</year>) 
<article-title>Not all predicted CRISPR–Cas systems are equal: isolated cas genes and classes of crispr like elements</article-title>. <source>BMC Bioinformatics</source>, <volume>18</volume>(<issue>1</issue>), 92.</mixed-citation>
    </ref>
  </ref-list>
</back>

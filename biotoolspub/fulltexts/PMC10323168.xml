<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10323168</article-id>
    <article-id pub-id-type="pmid">37369033</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btad404</article-id>
    <article-id pub-id-type="publisher-id">btad404</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Original Paper</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Gene Expression</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Accelerating open modification spectral library searching on tensor core in high-dimensional space</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0003-1048-1285</contrib-id>
        <name>
          <surname>Kang</surname>
          <given-names>Jaeyoung</given-names>
        </name>
        <aff><institution>Department of Electrical and Computer Engineering, University of California San Diego, San Diego</institution>, CA 92093, <country country="US">United States</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Xu</surname>
          <given-names>Weihong</given-names>
        </name>
        <aff><institution>Department of Computer Science and Engineering, University of California San Diego, San Diego</institution>, CA 92093, <country country="US">United States</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-3105-1359</contrib-id>
        <name>
          <surname>Bittremieux</surname>
          <given-names>Wout</given-names>
        </name>
        <aff><institution>Department of Computer Science, University of Antwerp</institution>, Antwerpen 2020, <country country="BE">Belgium</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0003-2209-8128</contrib-id>
        <name>
          <surname>Moshiri</surname>
          <given-names>Niema</given-names>
        </name>
        <aff><institution>Department of Computer Science and Engineering, University of California San Diego, San Diego</institution>, CA 92093, <country country="US">United States</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Rosing</surname>
          <given-names>Tajana</given-names>
        </name>
        <aff><institution>Department of Computer Science and Engineering, University of California San Diego, San Diego</institution>, CA 92093, <country country="US">United States</country></aff>
        <xref rid="btad404-cor1" ref-type="corresp"/>
        <!--tajana@ucsd.edu-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Kelso</surname>
          <given-names>Janet</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="btad404-cor1">Corresponding author. Department of Computer Science and Engineering, University of California San Diego, CA 92093, USA. E-mail: <email>tajana@ucsd.edu</email> (T.R.)</corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <month>7</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2023-06-27">
      <day>27</day>
      <month>6</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>27</day>
      <month>6</month>
      <year>2023</year>
    </pub-date>
    <volume>39</volume>
    <issue>7</issue>
    <elocation-id>btad404</elocation-id>
    <history>
      <date date-type="received">
        <day>03</day>
        <month>2</month>
        <year>2023</year>
      </date>
      <date date-type="rev-recd">
        <day>09</day>
        <month>5</month>
        <year>2023</year>
      </date>
      <date date-type="editorial-decision">
        <day>15</day>
        <month>6</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>26</day>
        <month>6</month>
        <year>2023</year>
      </date>
      <date date-type="corrected-typeset">
        <day>05</day>
        <month>7</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2023. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2023</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btad404.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>Driven by technological advances, the throughput and cost of mass spectrometry (MS) proteomics experiments have improved by orders of magnitude in recent decades. Spectral library searching is a common approach to annotating experimental mass spectra by matching them against large libraries of reference spectra corresponding to known peptides. An important disadvantage, however, is that only peptides included in the spectral library can be found, whereas novel peptides, such as those with unexpected post-translational modifications (PTMs), will remain unknown. Open modification searching (OMS) is an increasingly popular approach to annotate modified peptides based on partial matches against their unmodified counterparts. Unfortunately, this leads to very large search spaces and excessive runtimes, which is especially problematic considering the continuously increasing sizes of MS proteomics datasets.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>We propose an OMS algorithm, called HOMS-TC, that fully exploits parallelism in the entire pipeline of spectral library searching. We designed a new highly parallel encoding method based on the principle of hyperdimensional computing to encode mass spectral data to hypervectors while minimizing information loss. This process can be easily parallelized since each dimension is calculated independently. HOMS-TC processes two stages of existing cascade search in parallel and selects the most similar spectra while considering PTMs. We accelerate HOMS-TC on NVIDIA’s tensor core units, which is emerging and readily available in the recent graphics processing unit (GPU). Our evaluation shows that HOMS-TC is <inline-formula id="IE1"><mml:math id="IM1" display="inline" overflow="scroll"><mml:mrow><mml:mn>31</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> faster on average than alternative search engines and provides comparable accuracy to competing search tools.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p>HOMS-TC is freely available under the Apache 2.0 license as an open-source software project at <ext-link xlink:href="https://github.com/tycheyoung/homs-tc" ext-link-type="uri">https://github.com/tycheyoung/homs-tc</ext-link>.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Global Research Collaboration</institution>
          </institution-wrap>
        </funding-source>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>National Science Foundation</institution>
            <institution-id institution-id-type="DOI">10.13039/100000001</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>1826967</award-id>
        <award-id>1911095</award-id>
        <award-id>2052809</award-id>
        <award-id>2112665</award-id>
        <award-id>2112167</award-id>
        <award-id>2100237</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="8"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Mass spectrometry (MS) is a powerful analytical technique to identify and quantify peptides and proteins present in complex biological samples. A common strategy to analyze data from shotgun proteomics experiments is using spectral library searching, which matches experimental MS/MS spectra to reference MS/MS spectra corresponding to known peptides and transfers peptide labels to high-scoring matches (<xref rid="btad404-B14" ref-type="bibr">Griss 2016</xref>, <xref rid="btad404-B38" ref-type="bibr">Shao and Lam 2017</xref>). An important disadvantage of this approach, however, is that only peptides that are included in the spectral library can be found, while novel peptides will remain unknown. Even though spectral libraries are becoming increasingly comprehensive, they cannot provide coverage of the full proteome. Notably, current spectral libraries predominantly contain unmodified peptides, whereas a significant portion of experimental spectra that remain unannotated might correspond to peptides that include post-translational modifications (PTMs) (<xref rid="btad404-B6" ref-type="bibr">Chick <italic toggle="yes">et al.</italic> 2015</xref>).</p>
    <p>An increasingly popular approach to identifying modified peptides is open modification searching (OMS). Unlike standard spectral library searching, which only compares experimental MS/MS spectra to library candidates with a similar precursor mass, OMS matches spectra irrespective of their precursor mass. This makes it possible to compare spectra corresponding to modified and unmodified peptides, even when their precursor masses differ due to PTMs. An important downside of OMS is that, because the precursor mass filter can no longer be used and instead each experimental spectrum has to be compared against the full spectral library, it suffers from a very large search space, which can lead to excessive runtimes. This is especially relevant as available spectral libraries have grown significantly in size over the past few years (<xref rid="btad404-B15" ref-type="bibr">Griss <italic toggle="yes">et al.</italic> 2013</xref>, <xref rid="btad404-B16" ref-type="bibr">Griss <italic toggle="yes">et al.</italic> 2016</xref>, <xref rid="btad404-B41" ref-type="bibr">Wang <italic toggle="yes">et al.</italic> 2018</xref>, <xref rid="btad404-B42" ref-type="bibr">Xu <italic toggle="yes">et al.</italic> 2022</xref>). For example, PRIDE-Cluster (<xref rid="btad404-B15" ref-type="bibr">Griss <italic toggle="yes">et al.</italic>, 2013</xref>, <xref rid="btad404-B16" ref-type="bibr">2016</xref>) and MassIVE-KB (<xref rid="btad404-B41" ref-type="bibr">Wang <italic toggle="yes">et al.</italic> 2018</xref>) have been generated by repository-scale reprocessing of public data on the PRIDE (<xref rid="btad404-B31" ref-type="bibr">Martens <italic toggle="yes">et al.</italic> 2005</xref>) and MassIVE data repositories, respectively, and consist of millions of reference MS/MS spectra.</p>
    <p>To cope with the computational demand, various tools that use algorithmic advances to efficiently process large search spaces have been proposed, such as MSFragger (<xref rid="btad404-B26" ref-type="bibr">Kong <italic toggle="yes">et al.</italic> 2017</xref>), Open-pFind (<xref rid="btad404-B5" ref-type="bibr">Chi <italic toggle="yes">et al.</italic> 2018</xref>), TagGraph (<xref rid="btad404-B8" ref-type="bibr">Devabhaktuni <italic toggle="yes">et al.</italic> 2019</xref>), MetaMorpheus (<xref rid="btad404-B39" ref-type="bibr">Solntsev <italic toggle="yes">et al.</italic> 2018</xref>), ANN-SoLo (<xref rid="btad404-B2" ref-type="bibr">Bittremieux <italic toggle="yes">et al.</italic> 2018</xref>, <xref rid="btad404-B3" ref-type="bibr">2019</xref>), and others. Some tools can use specialized hardware, such as graphics processing units (GPUs), to speed up OMS (<xref rid="btad404-B3" ref-type="bibr">Bittremieux <italic toggle="yes">et al.</italic> 2019</xref>). Although spectrum identification is generally not the bottleneck compared with the data acquisition time, because there is a strong effort to reduce experimental runtimes, e.g. by using very short liquid chromatography gradients (<xref rid="btad404-B32" ref-type="bibr">Messner <italic toggle="yes">et al.</italic> 2021</xref>), computational efficiency is still an important point of attention. Additionally, as the amount of MS data that is available in public data repositories, such as PRIDE (<xref rid="btad404-B31" ref-type="bibr">Martens <italic toggle="yes">et al.</italic> 2005</xref>) and MassIVE, continuously keeps growing, efficient bioinformatics tools are essential for large-scale public data reanalysis efforts. Unfortunately, however, due to the complexities of spectral data processing, in practice, most OMS tools under-utilize the hardware resources and still suffer from long runtimes.</p>
    <p>In this work, we propose Hyperdimensional Open Modification Search with Tensor Core (HOMS-TC) acceleration, a novel spectral library searching framework that supports OMS. Our solution redesigns the MS/MS spectral matching algorithm based on the principle of hyperdimensional computing (HDC). HDC is designed to mimic the efficiency of human memory in pattern-oriented computations by representing data with high-dimensional (HD) vectors, called <italic toggle="yes">hypervectors</italic> (HVs) (<xref rid="btad404-B19" ref-type="bibr">Kanerva 1988</xref>, <xref rid="btad404-B20" ref-type="bibr">2009</xref>). HDC has been used to enable parallel processing of pattern-matching tasks, such as sequence alignment (<xref rid="btad404-B25" ref-type="bibr">Kim <italic toggle="yes">et al.</italic> 2020</xref>, <xref rid="btad404-B43" ref-type="bibr">Zou <italic toggle="yes">et al.</italic> 2022</xref>) and image matching (<xref rid="btad404-B33" ref-type="bibr">Neubert and Schubert 2021</xref>).</p>
    <p>Based on HDC, HOMS-TC simplifies spectral library matching to efficient cosine similarity searching of HVs. Our HV encoding captures spectral similarity by incorporating peak position and intensity and is tolerant to changes in peak intensity due to instrument errors or noise. Furthermore, the encoding natively supports adding additional reference spectra when the spectral library is updated because each data point is independent. To this end, the proposed algorithm is parallelizable and can be easily accelerated with hardware as they are highly regularized. Thanks to a simplified pipeline and scoring metric, HOMS-TC can be implemented using state-of-the-art hardware accelerators, such as the emerging tensor core units (TCUs). TCUs outperform CUDA cores for matrix multiplication operations and are readily available and programmable in modern NVIDIA GPUs. We evaluate the proposed algorithm using CUDA v11.8 on an NVIDIA GeForce RTX 4090 GPU. Compared with ANN-SoLo, which is a traditional GPU-based OMS solution, HOMS-TC is <inline-formula id="IE2"><mml:math id="IM2" display="inline" overflow="scroll"><mml:mrow><mml:mn>31</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> faster while offering comparable quality as other competing search tools.</p>
  </sec>
  <sec>
    <title>2 HDC preliminaries</title>
    <p>HDC is an emerging computing paradigm that mathematically models features of the neuronal circuits in the human brain by representing data with HVs. Using the following operations, HDC mimics the way human memory works; memorizing information, associating different pieces of information, and understanding relationships between data.</p>
    <p><bold>Reasoning:</bold> The reasoning is done by measuring the similarity between two HVs. For example, we can distinguish between two HVs, <inline-formula id="IE3"><mml:math id="IM3" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">H</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE4"><mml:math id="IM4" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">H</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, by examining the similarity between them, i.e. <inline-formula id="IE5"><mml:math id="IM5" display="inline" overflow="scroll"><mml:mrow><mml:mo>δ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">H</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">H</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. If this value is close to zero, indicating that the HVs are nearly orthogonal, then we can conclude that they are distinct. Here, hamming distance and cosine similarity can be used for binary HVs and non-binary HVs, respectively.</p>
    <p><bold>Bundling:</bold> The bundling operation mimics memorization. It is done by element-wise vector addition between HVs. For example, let <inline-formula id="IE6"><mml:math id="IM6" display="inline" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold">H</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">A</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">A</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">A</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. <inline-formula id="IE7"><mml:math id="IM7" display="inline" overflow="scroll"><mml:mi mathvariant="bold">H</mml:mi></mml:math></inline-formula> memorizes patterns of HV <inline-formula id="IE8"><mml:math id="IM8" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">A</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula id="IE9"><mml:math id="IM9" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">A</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, and <inline-formula id="IE10"><mml:math id="IM10" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">A</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>; <inline-formula id="IE11"><mml:math id="IM11" display="inline" overflow="scroll"><mml:mrow><mml:mo>δ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">H</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">A</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>≫</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> for <inline-formula id="IE12"><mml:math id="IM12" display="inline" overflow="scroll"><mml:mrow><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>. Besides, for randomly generated HV <inline-formula id="IE13"><mml:math id="IM13" display="inline" overflow="scroll"><mml:mi mathvariant="bold">X</mml:mi></mml:math></inline-formula>, <inline-formula id="IE14"><mml:math id="IM14" display="inline" overflow="scroll"><mml:mrow><mml:mo>δ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">H</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold">X</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>≃</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> as <inline-formula id="IE15"><mml:math id="IM15" display="inline" overflow="scroll"><mml:mi mathvariant="bold">H</mml:mi></mml:math></inline-formula> does not contain the information of <inline-formula id="IE16"><mml:math id="IM16" display="inline" overflow="scroll"><mml:mi mathvariant="bold">X</mml:mi></mml:math></inline-formula>.</p>
    <p><bold>Binding:</bold> Using the coordinate-wise vector multiplication (<inline-formula id="IE17"><mml:math id="IM17" display="inline" overflow="scroll"><mml:mo>⊗</mml:mo></mml:math></inline-formula>), we can associate different information. This HDC operation is called binding. The resulting HV represents new information, which is nearly orthogonal (dissimilar) to both operand HVs, i.e. <inline-formula id="IE18"><mml:math id="IM18" display="inline" overflow="scroll"><mml:mrow><mml:mo>δ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">A</mml:mi><mml:mo>⊗</mml:mo><mml:mi mathvariant="bold">B</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold">A</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>≃</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula>.</p>
    <p><bold>Flip:</bold> To achieve the desired level of similarity between HVs, we use the flip operation, which involves changing the sign bit of HV elements. For example, flipping <inline-formula id="IE19"><mml:math id="IM19" display="inline" overflow="scroll"><mml:mrow><mml:mi>D</mml:mi><mml:mo>/</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math></inline-formula> elements of the HV represented by <inline-formula id="IE20"><mml:math id="IM20" display="inline" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold">H</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:mrow><mml:mi>D</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> produces an HV that is 50% similar to the original HV.</p>
    <p><bold>Permutation:</bold> The permutation operation, <inline-formula id="IE21"><mml:math id="IM21" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mo>ρ</mml:mo></mml:mrow><mml:mi>n</mml:mi></mml:msup></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">H</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> shuffles the components of <inline-formula id="IE22"><mml:math id="IM22" display="inline" overflow="scroll"><mml:mi mathvariant="bold">H</mml:mi></mml:math></inline-formula> with an <italic toggle="yes">n</italic>-bit rotation. The result is a near-orthogonal HV, i.e. <inline-formula id="IE23"><mml:math id="IM23" display="inline" overflow="scroll"><mml:mrow><mml:mo>δ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mo>ρ</mml:mo></mml:mrow><mml:mi>n</mml:mi></mml:msup></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">H</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mi mathvariant="bold">H</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>≃</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> for non-zero <italic toggle="yes">n</italic>.</p>
    <p>We can aggregate peak information to HVs with these operations. In the following, we show how HOMS-TC utilizes HDC operations to combine peak data from MS/MS spectra to represent them in an HV format.</p>
  </sec>
  <sec>
    <title>3 Methods</title>
    <p>HOMS-TC is an HDC-based OMS tool that can be parallelized and accelerated with GPU. It consists of two stages: (i) an encoding stage during which MS/MS spectra are converted to HVs and (ii) a search stage that matches query HVs to library HVs to annotate the query spectra.</p>
    <sec>
      <title>3.1 Data preprocessing and spectra vectorization</title>
      <p>Before proceeding to the encoding stage, HOMS-TC enhances the search quality by refining spectra using the <monospace>spectrum_utils</monospace> package (<xref rid="btad404-B1" ref-type="bibr">Bittremieux 2020</xref>). The refined spectra are then vectorized and saved in a compressed format (<xref rid="btad404-F1" ref-type="fig">Fig. 1</xref>). During refinement, HOMS-TC first limits the mass-to-charge ratio (<italic toggle="yes">m</italic>/<italic toggle="yes">z</italic>) range and removes peaks outside the given <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> range. Next, low-quality peaks are discarded, including those whose intensity is less than 1% of the most intense peak in the spectrum. Only the <italic toggle="yes">N</italic> most intense peaks are retained, with previous studies (<xref rid="btad404-B27" ref-type="bibr">Lam <italic toggle="yes">et al.</italic> 2007</xref>, <xref rid="btad404-B3" ref-type="bibr">Bittremieux <italic toggle="yes">et al.</italic> 2019</xref>) showing that empirically setting <italic toggle="yes">N</italic> between 50 and 150 effectively eliminates noise. Finally, peak intensities are normalized to further enhance the accuracy of the results.</p>
      <fig position="float" id="btad404-F1">
        <label>Figure 1.</label>
        <caption>
          <p>Spectrum vector representation. Preprocessed spectra are converted to spectrum vectors by binning the <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> range, after which the resulting vectors are compressed using the CSR format.</p>
        </caption>
        <graphic xlink:href="btad404f1" position="float"/>
      </fig>
      <p>To vectorize spectra, the <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> range is discretized, resulting in <italic toggle="yes">spectrum vectors—</italic>sparse vectors of floating-point values (intensities). This is realized by dividing the <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> range into bins and assigning each peak in a spectrum to a bin based on its <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> value. If multiple peaks fall into the same bin, their intensities are summed up. The bin width determines the level of detail in the vectorized spectrum. A larger bin width leads to a loss of information, while a smaller bin width results in a higher dimensionality for the spectrum vector. For instance, if the mass range is <inline-formula id="IE24"><mml:math id="IM24" display="inline" overflow="scroll"><mml:mrow><mml:mn>0</mml:mn><mml:mo>−</mml:mo><mml:mn>2000</mml:mn><mml:mo> </mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:math></inline-formula>/<italic toggle="yes">z</italic> and the bin width is 0.04 Da (based on the mass spectrometer resolution), the spectrum vector would have a dimensionality of 50 000. Note that the current HOMS-TC only supports the Da-level bin width, which is ideal for low-resolution ion traps where <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> errors do not increase with the <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic>.</p>
      <p>Vectorizing spectra produce HD, sparse vectors with a sparsity of around 0.1%, which need to be efficiently represented and stored. To accomplish this, we use the compressed sparse row (CSR) format to compress a matrix of spectrum vectors. <italic toggle="yes">The compressed spectrum vector</italic> consists of three one-dimensional arrays: (i) <monospace>intensity_arr</monospace> contains peak intensities for all spectra, (ii) <monospace>idx_arr</monospace> contains the <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> bin indexes matching intensity values for all spectra, and (iii) <monospace>idx_start_arr</monospace> contains the start indices of each spectrum in the <monospace>intensity_arr</monospace> and <monospace>idx_arr</monospace> arrays. By doing so, only non-zero intensity values are stored, resulting in optimal data reduction, and individual spectra can be accessed efficiently. During preprocessing, library spectra and query spectra are encoded in a similar manner and saved to disk for efficient reuse in subsequent analyses. Note that HOMS-TC splits spectra based on their precursor charge since matched spectra must have the same charge.</p>
    </sec>
    <sec>
      <title>3.2 HV encoding</title>
      <p>In the encoding stage, spectrum vectors are converted to HVs. It captures the <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> values and intensities of peaks and spreads this information over all vector dimensions while also reducing the dimensionality of the original spectrum vectors. The encoding process is illustrated in <xref rid="btad404-F2" ref-type="fig">Fig. 2</xref>. First, the <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> locations of the fragments (<monospace>idx_arr</monospace>) are captured using “position HVs” denoted as <inline-formula id="IE25"><mml:math id="IM25" display="inline" overflow="scroll"><mml:mi mathvariant="bold">P</mml:mi></mml:math></inline-formula>. Each bin index is assigned a unique HV <inline-formula id="IE26"><mml:math id="IM26" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula id="IE27"><mml:math id="IM27" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> corresponds to bin <italic toggle="yes">i</italic> and <inline-formula id="IE28"><mml:math id="IM28" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is a member of the set <inline-formula id="IE29"><mml:math id="IM29" display="inline" overflow="scroll"><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow><mml:mi>f</mml:mi></mml:msub></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>, with <italic toggle="yes">f</italic> being the dimensionality of the spectrum vector. Furthermore, we require that all HVs are orthogonal to each other. Orthogonality helps to ensure that each bin index is represented by a unique position HV, which is important for accurately capturing the <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> locations of fragments in the spectrum. Without orthogonality, it would be difficult to distinguish between different bin indices, which could lead to errors in the search process. To ensure that <inline-formula id="IE30"><mml:math id="IM30" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE31"><mml:math id="IM31" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> are orthogonal for <inline-formula id="IE32"><mml:math id="IM32" display="inline" overflow="scroll"><mml:mrow><mml:mi>i</mml:mi><mml:mo>≠</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:math></inline-formula>, previous works used a permutation-based method (<xref rid="btad404-B35" ref-type="bibr">Salamat <italic toggle="yes">et al.</italic> 2019</xref>, <xref rid="btad404-B36" ref-type="bibr">2020</xref>). However, <inline-formula id="IE33"><mml:math id="IM33" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE34"><mml:math id="IM34" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> can be the same when using a permutation-based method if the dimensionality of the HV (<italic toggle="yes">D</italic>) is smaller than that of the spectrum vectors (<italic toggle="yes">f</italic>), for some <italic toggle="yes">i</italic> and <italic toggle="yes">j</italic>. Instead, each element of the position HV <inline-formula id="IE35"><mml:math id="IM35" display="inline" overflow="scroll"><mml:mi mathvariant="bold">P</mml:mi></mml:math></inline-formula> is randomly generated by drawing it from a normal distribution with mean zero and standard deviation one in HOMS-TC. In this way, <inline-formula id="IE36"><mml:math id="IM36" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE37"><mml:math id="IM37" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> are nearly orthogonal for bin index <italic toggle="yes">i</italic> and <italic toggle="yes">j</italic> where <inline-formula id="IE38"><mml:math id="IM38" display="inline" overflow="scroll"><mml:mrow><mml:mi>i</mml:mi><mml:mo>≠</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:math></inline-formula>. In other words, we can distinguish the position of each peak even when <inline-formula id="IE39"><mml:math id="IM39" display="inline" overflow="scroll"><mml:mrow><mml:mi>f</mml:mi><mml:mo>&gt;</mml:mo><mml:mi>D</mml:mi></mml:mrow></mml:math></inline-formula>.</p>
      <fig position="float" id="btad404-F2">
        <label>Figure 2.</label>
        <caption>
          <p>Encoding spectrum vectors to HVs with <italic toggle="yes">D</italic> dimensions using HDC operations. The peak <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> values are captured by the position HVs <inline-formula id="IE40"><mml:math id="IM40" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. The peak intensity values are quantized and captured by the level HVs <inline-formula id="IE41"><mml:math id="IM41" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">L</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. The spectrum HVs <inline-formula id="IE42"><mml:math id="IM42" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">I</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> are computed using element-wise multiplication between <inline-formula id="IE43"><mml:math id="IM43" display="inline" overflow="scroll"><mml:mi mathvariant="bold">P</mml:mi></mml:math></inline-formula> and <inline-formula id="IE44"><mml:math id="IM44" display="inline" overflow="scroll"><mml:mi mathvariant="bold">L</mml:mi></mml:math></inline-formula>. The encoding stage is accelerated using CUDA cores.</p>
        </caption>
        <graphic xlink:href="btad404f2" position="float"/>
      </fig>
      <p>To capture the peak intensities (<monospace>intensity_arr</monospace>), we use “level HVs.” This involves first uniformly discretizing the peak intensities into a finite set of values. Next, we assign a HV <inline-formula id="IE45"><mml:math id="IM45" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">L</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> to each quantization level <italic toggle="yes">i</italic>, with the number of levels <italic toggle="yes">Q</italic>, where <inline-formula id="IE46"><mml:math id="IM46" display="inline" overflow="scroll"><mml:mrow><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>Q</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE47"><mml:math id="IM47" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">L</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo>∈</mml:mo><mml:mo>{</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">L</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">L</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">L</mml:mi></mml:mrow><mml:mi>Q</mml:mi></mml:msub></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>. Note that the encoder does not use <inline-formula id="IE48"><mml:math id="IM48" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">L</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> since the intensity of a peak is always greater than 0. Here, the assigned HVs <inline-formula id="IE49"><mml:math id="IM49" display="inline" overflow="scroll"><mml:mi mathvariant="bold">L</mml:mi></mml:math></inline-formula> for each level should reflect the similarity of the corresponding intensities, given that intensity is originally continuous. In other words, the similarity between <inline-formula id="IE50"><mml:math id="IM50" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">L</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE51"><mml:math id="IM51" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">L</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> should be greater than that between <inline-formula id="IE52"><mml:math id="IM52" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">L</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE53"><mml:math id="IM53" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">L</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mi>x</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> where <inline-formula id="IE54"><mml:math id="IM54" display="inline" overflow="scroll"><mml:mrow><mml:mi>x</mml:mi><mml:mo>&gt;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>. The flip operation is used to achieve this closeness. To obtain the level HV <inline-formula id="IE55"><mml:math id="IM55" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">L</mml:mi></mml:mrow><mml:mi>q</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> for a target level <italic toggle="yes">p</italic> among a total of <italic toggle="yes">Q</italic> levels, we flip <inline-formula id="IE56"><mml:math id="IM56" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>D</mml:mi><mml:mo>/</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>×</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>q</mml:mi><mml:mo>/</mml:mo><mml:mi>Q</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> elements of <inline-formula id="IE57"><mml:math id="IM57" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">L</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. Note that reflecting intensity similarities using level HVs in this way is robust to changes in peak intensities, e.g. due to experimental variability.</p>
      <p>Finally, given a set of position HVs <inline-formula id="IE58"><mml:math id="IM58" display="inline" overflow="scroll"><mml:mi mathvariant="bold">P</mml:mi></mml:math></inline-formula> and level HVs <inline-formula id="IE59"><mml:math id="IM59" display="inline" overflow="scroll"><mml:mi mathvariant="bold">L</mml:mi></mml:math></inline-formula>, we aggregate peak information in a spectrum into an HV by binding the HVs <inline-formula id="IE60"><mml:math id="IM60" display="inline" overflow="scroll"><mml:mi mathvariant="bold">P</mml:mi></mml:math></inline-formula> and <inline-formula id="IE61"><mml:math id="IM61" display="inline" overflow="scroll"><mml:mi mathvariant="bold">L</mml:mi></mml:math></inline-formula>, which correspond to peak positions and intensities, respectively. In turn, we bundle those results to memorize patterns in a spectrum HV <inline-formula id="IE62"><mml:math id="IM62" display="inline" overflow="scroll"><mml:mi mathvariant="bold">I</mml:mi></mml:math></inline-formula> as follows:
with <inline-formula id="IE63"><mml:math id="IM63" display="inline" overflow="scroll"><mml:mi mathvariant="double-struck">P</mml:mi></mml:math></inline-formula> the set of tuples <inline-formula id="IE64"><mml:math id="IM64" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, where <italic toggle="yes">i</italic> is the peak index and <italic toggle="yes">j</italic> the quantized level of its intensity in the spectrum vector. In this fashion, both the positional information and intensity of each peak are captured and aggregated into the spectrum HV <inline-formula id="IE65"><mml:math id="IM65" display="inline" overflow="scroll"><mml:mi mathvariant="bold">I</mml:mi></mml:math></inline-formula>. A key aspect of the HV representation is its robustness to spectrum variability. For varying peak intensities, only a few elements (fewer than the HV’s dimensionality) in the level HV will change. Hence, the similarity between the HVs of matched reference and query pairs remains stable. Additionally, if peaks are added or removed, the bundling operation used to memorize the peak information in <inline-formula id="IE66"><mml:math id="IM66" display="inline" overflow="scroll"><mml:mi mathvariant="bold">I</mml:mi></mml:math></inline-formula> ensures that the remaining peak information is memorized, and thus the similarity is well-preserved.</p>
      <disp-formula id="E1">
        <label>(1)</label>
        <mml:math id="M1" display="block" overflow="scroll">
          <mml:mrow>
            <mml:mi mathvariant="bold">I</mml:mi>
            <mml:mo>=</mml:mo>
            <mml:mrow>
              <mml:munder>
                <mml:mo>∑</mml:mo>
                <mml:mrow>
                  <mml:mo stretchy="false">(</mml:mo>
                  <mml:mi>i</mml:mi>
                  <mml:mo>,</mml:mo>
                  <mml:mi>j</mml:mi>
                  <mml:mo stretchy="false">)</mml:mo>
                  <mml:mo>∈</mml:mo>
                  <mml:mi mathvariant="double-struck">P</mml:mi>
                </mml:mrow>
              </mml:munder>
            </mml:mrow>
            <mml:mrow>
              <mml:mrow>
                <mml:msub>
                  <mml:mrow>
                    <mml:mi mathvariant="bold">P</mml:mi>
                  </mml:mrow>
                  <mml:mi>i</mml:mi>
                </mml:msub>
              </mml:mrow>
            </mml:mrow>
            <mml:mo>⊗</mml:mo>
            <mml:mrow>
              <mml:msub>
                <mml:mrow>
                  <mml:mi mathvariant="bold">L</mml:mi>
                </mml:mrow>
                <mml:mi>j</mml:mi>
              </mml:msub>
            </mml:mrow>
            <mml:mo>,</mml:mo>
          </mml:mrow>
        </mml:math>
      </disp-formula>
      <p>Unlike the existing HDC encoding method, ID-Level encoding (<xref rid="btad404-B18" ref-type="bibr">Imani <italic toggle="yes">et al.</italic> 2017</xref>), the proposed encoder skips the spectrum vector component with zero values. The capture of these values works as an offset in the HV. Exploiting the sparsity of the spectrum vector reduces the number of additions dramatically. Since there are up to 150 peaks per spectrum (after preprocessing) and 30 000 bins in most cases, the required number of addition is reduced by one or two orders of magnitude.</p>
    </sec>
    <sec>
      <title>3.3 Spectral library search</title>
      <p>HOMS-TC uses a two-step cascade search strategy (<xref rid="btad404-B24" ref-type="bibr">Kertesz-Farkas <italic toggle="yes">et al.</italic> 2015</xref>) to optimize the identification of unmodified and modified peptides while controlling the false discovery rate (FDR). During the first step, unmodified peptides are identified using a small precursor <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> tolerance, while during the second step, a wide precursor <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> tolerance is used to identify modified peptides using OMS. FDRs are computed after each step based on the target-decoy strategy (<xref rid="btad404-B9" ref-type="bibr">Elias and Gygi 2007</xref>). During the first step of the cascade search, FDR calculations proceed in the standard fashion. In contrast, during the second step of the cascade search, a subgroup FDR strategy (<xref rid="btad404-B10" ref-type="bibr">Fu 2012</xref>, <xref rid="btad404-B11" ref-type="bibr">Fu and Qian 2014</xref>) is used to capture variations in the score distributions incurred by different PTMs (<xref rid="btad404-B2" ref-type="bibr">Bittremieux <italic toggle="yes">et al.</italic> 2018</xref>).</p>
      <p><xref rid="btad404-F3" ref-type="fig">Figure 3</xref> illustrates the flow of the spectrum search, including selecting candidates from the spectral library based on the precursor <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> tolerance and the pairwise similarity computations. Both library and query spectra are encoded into HVs, which are used to identify the best match between a query spectrum and a library spectrum based on cosine similarity. Note that we use the same similarity value for two levels. As such, for efficiency, HOMS-TC processes <italic toggle="yes">both levels of the cascade search in parallel</italic> and the accepted identifications are merged at the end. In other words, HOMS-TC overlaps the two levels of cascade search, thereby avoiding redundant computations and maximizing parallelism.</p>
      <fig position="float" id="btad404-F3">
        <label>Figure 3.</label>
        <caption>
          <p>Search stage in HOMS-TC. TCUs and CUDA cores perform similarity computation and search, respectively. Search using two window conditions is done in parallel.</p>
        </caption>
        <graphic xlink:href="btad404f3" position="float"/>
      </fig>
    </sec>
    <sec>
      <title>3.4 Acceleration using GPUs</title>
      <p>Two stages of HOMS-TC are parallelizable using GPUs. The encoding stage can be parallelized across HV dimensions and datapoints as they are independent of each other. It can be implemented in a similar way to existing GPU-based HDC framework (<xref rid="btad404-B21" ref-type="bibr">Kang <italic toggle="yes">et al.</italic> 2022a</xref>,<xref rid="btad404-B22" ref-type="bibr">b</xref>). The CUDA cores in the GPU process the encoding and store spectrum HVs in the GPU global memory. For the encoding stage, HOMS-TC generates HVs for query and reference spectra on-the-fly, not saving the encoded results to the disk. Like other tools, e.g. ANN-SoLo (<xref rid="btad404-B2" ref-type="bibr">Bittremieux <italic toggle="yes">et al.</italic> 2018</xref>, <xref rid="btad404-B3" ref-type="bibr">2019</xref>), the encoded reference HVs can be reused. However, our results show that generating HVs in place is faster due to the data transfer time from the disk to the host memory and from the host memory to GPU memory.</p>
      <p>The search stage consists of score calculation and top-1 reference HV search (<xref rid="btad404-F3" ref-type="fig">Fig. 3</xref>). Here, the score calculation is inherently equivalent to matrix multiplication. Recent GPUs have TCUs that are specialized for such operations, which can be easily used with CUTLASS (<xref rid="btad404-B23" ref-type="bibr">Kerr <italic toggle="yes">et al.</italic> 2022</xref>) or the CUBLAS (<xref rid="btad404-B34" ref-type="bibr">NVIDIA 2022)</xref> application programming interface. By using TCUs to calculate similarity scores, throughput can be maximized. Note that using TCUs does not result in data movements since TCUs and CUDA cores share the same GPU global memory. However, to exploit TCU hardware, several constraints need to be satisfied. First, the HV dimensionality and the batch size need to be multiples of 8. Also, the choice of HV precision is limited. Using half-precision floating-point (FP16) or eight-bit integer (INT8) precision is required. In HOMS-TC, the precision determines the amount of information that the HVs can represent, which can affect search quality. <xref rid="btad404-F4" ref-type="fig">Figure 4</xref> illustrates how HOMS-TC can manage the precision of the encoded HVs. FP16 spectrum HVs can be obtained by using FP16 position HVs. To use INT8 precision for <inline-formula id="IE67"><mml:math id="IM67" display="inline" overflow="scroll"><mml:mi mathvariant="bold">I</mml:mi></mml:math></inline-formula>, we binarize the position HV by taking the sign bit for each component. The level HV is <inline-formula id="IE68"><mml:math id="IM68" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:mrow><mml:mi>D</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>. If there are up to 50 peaks per spectra, each component of the spectrum HV is in the range between <inline-formula id="IE69"><mml:math id="IM69" display="inline" overflow="scroll"><mml:mrow><mml:mo>−</mml:mo><mml:mn>50</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE70"><mml:math id="IM70" display="inline" overflow="scroll"><mml:mrow><mml:mo>+</mml:mo><mml:mn>50</mml:mn></mml:mrow></mml:math></inline-formula>, satisfying the range of INT8 ([−128, 127]). Empirically, we found that INT8 is enough to get sufficient search quality. We discuss the impact of precision in Section 4.3.1.</p>
      <fig position="float" id="btad404-F4">
        <label>Figure 4.</label>
        <caption>
          <p>Various spectrum HV precision used in HOMS-TC. (a) FP32 precision, (b) FP16 precision, and (c) INT8 precision. Depending on the precision, HOMS-TC is run on either CUDA cores or TCUs.</p>
        </caption>
        <graphic xlink:href="btad404f4" position="float"/>
      </fig>
      <p>The top-1 reference HV search part is accelerated using CUDA cores. We use a conventional parallel maximum reduction strategy (<xref rid="btad404-B17" ref-type="bibr">Harris 2007</xref>) while satisfying precursor <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> tolerance conditions. HOMS-TC targets OMS with cascade search; searching with two precursor <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> conditions runs in parallel. Finally, the CPU processes subsequent FDR filtering and merges the results from both levels of the cascade search.</p>
    </sec>
  </sec>
  <sec>
    <title>4 Results</title>
    <sec>
      <title>4.1 Experimental setup</title>
      <sec>
        <title>4.1.1 System configuration</title>
        <p>The evaluation was conducted on a system with an Intel i7-11700K CPU and 64 GB of RAM, and NVIDIA Geforce RTX 4090 with 24 GB of VRAM and fourth-generation TCUs. The HOMS-TC algorithm was implemented on the GPU using a state-of-the-art GPU-based HDC framework (<xref rid="btad404-B21" ref-type="bibr">Kang <italic toggle="yes">et al.</italic> 2022a</xref>,<xref rid="btad404-B22" ref-type="bibr">b</xref>). Due to the limited memory on the GPU, the reference and query data were divided into batches. The batch size was set to use the maximum amount of VRAM available for GPU-based solutions.</p>
      </sec>
      <sec>
        <title>4.1.2 Dataset</title>
        <p>We tested the performance of HOMS-TC on two real-world datasets. The first dataset consists of the iPRG2012 dataset (<xref rid="btad404-B4" ref-type="bibr">Chalkley <italic toggle="yes">et al.</italic> 2014</xref>) with 17 993 query spectra, which was searched against a combined reference library derived from a TripleTOF yeast spectral library (<xref rid="btad404-B37" ref-type="bibr">Selevsek <italic toggle="yes">et al.</italic> 2015</xref>) and a human HCD spectral library compiled by NIST (version 2016/09/12), totaling 1 188 168 library spectra. To create the spectral library, we removed decoy hits from the yeast spectral library and concatenated it to the human HCD spectral library using SpectraST (<xref rid="btad404-B27" ref-type="bibr">Lam <italic toggle="yes">et al.</italic> 2007</xref>). Additionally, duplicates were removed and decoy spectra were added in a 1:1 ratio using the shuffle-and-reposition method (<xref rid="btad404-B28" ref-type="bibr">Lam <italic toggle="yes">et al.</italic> 2010</xref>).</p>
        <p>The second dataset consists of HEK293 data from 24 peak files, with on average 46 715 spectra per file (<xref rid="btad404-B6" ref-type="bibr">Chick <italic toggle="yes">et al.</italic> 2015</xref>). These data were searched against the MassIVE-KB spectral library (version 2017/11/27) (<xref rid="btad404-B41" ref-type="bibr">Wang <italic toggle="yes">et al.</italic> 2018</xref>), which was compiled using repository-scale reprocessing of public human proteomics data on MassIVE, and contains 3 009 902 spectra. Library spectra were processed as described above to remove duplicate spectra and add decoy spectra.</p>
        <p>The query and library spectra were preprocessed using the hyperparameters listed in <xref rid="btad404-T1" ref-type="table">Table 1</xref>. Additionally, low-quality spectra with less than 10 peaks and a 250 <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> mass range were discarded, and peaks within a 0.05 <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> window around the precursor <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> were removed. After preprocessing, there were 15 867 query spectra and 1 162 392 library spectra in the iPRG2012 dataset remaining. For the HEK293 dataset, on average 46 665 query spectra per peak file remained, as well as 2 992 672 library spectra. All MS data, spectral libraries, preprocessed spectra, and identification results are available on the MassIVE repository with the dataset identifier MSV000091183.</p>
        <table-wrap position="float" id="btad404-T1">
          <label>Table 1.</label>
          <caption>
            <p>Parameters used for the evaluation.</p>
          </caption>
          <table frame="hsides" rules="groups">
            <colgroup span="1">
              <col valign="top" align="left" span="1"/>
              <col valign="top" align="center" span="1"/>
              <col valign="top" align="center" span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th rowspan="1" colspan="1"/>
                <th colspan="2" rowspan="1">Dataset<hr/></th>
              </tr>
              <tr>
                <th rowspan="1" colspan="1">Parameter</th>
                <th rowspan="1" colspan="1">iPRG2012</th>
                <th rowspan="1" colspan="1">HEK293</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="1" colspan="1">Max peaks per spectrum</td>
                <td colspan="2" rowspan="1">50</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Min/Max <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic></td>
                <td colspan="2" rowspan="1">101/1500</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Bin size</td>
                <td rowspan="1" colspan="1">0.05 Da</td>
                <td rowspan="1" colspan="1">0.04 Da</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Precursor <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> tolerance (narrow)</td>
                <td rowspan="1" colspan="1">20ppm</td>
                <td rowspan="1" colspan="1">5ppm</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Precursor <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> tolerance (wide)</td>
                <td rowspan="1" colspan="1">500 Da</td>
                <td rowspan="1" colspan="1">500 Da</td>
              </tr>
            </tbody>
          </table>
        </table-wrap>
      </sec>
    </sec>
    <sec>
      <title>4.2 Baselines</title>
      <p>We evaluate HOMS-TC in terms of search quality and speed improvement. Also, we show HOMS-TC performance according to the three key parameters in HDC: HV precision, HV dimensionality, and quantization level. We compare them to those obtained using existing search tools, including the state-of-the-art OMS solution running on GPU, ANN-SoLo GPU v0.3.3 (<xref rid="btad404-B3" ref-type="bibr">Bittremieux <italic toggle="yes">et al.</italic> 2019</xref>), and the CPU-based OMS tools, ANN-SoLo CPU v0.3.3 (<xref rid="btad404-B2" ref-type="bibr">Bittremieux <italic toggle="yes">et al.</italic> 2018</xref>), MSFragger v3.3 (<xref rid="btad404-B26" ref-type="bibr">Kong <italic toggle="yes">et al.</italic> 2017</xref>), and SpectraST v5.0 (<xref rid="btad404-B27" ref-type="bibr">Lam <italic toggle="yes">et al.</italic> 2007</xref>, <xref rid="btad404-B30" ref-type="bibr">Ma and Lam 2014</xref>). For ANN-SoLo, we set the number of clusters (<italic toggle="yes">C</italic>), the number of clusters to visit (<italic toggle="yes">N</italic>), and batch size (<italic toggle="yes">B</italic>) to 512, 128, and 8192, respectively, to fully utilize GPU memory in the HEK293 dataset case. The same <italic toggle="yes">C</italic>, <italic toggle="yes">N</italic>, and <italic toggle="yes">B</italic> are used for all datasets for fair speed comparison. We evaluated all search results at a fixed FDR threshold of 1% using Pyteomics (<xref rid="btad404-B13" ref-type="bibr">Goloborodko <italic toggle="yes">et al.</italic> 2013</xref>). Note that we compare the speed of HOMS-TC to ANN-SoLo only, which is currently the fastest OMS tool. We sum all the execution times for each precursor charge. For the HEK293 dataset, we run the search tool for all query files and compute an average of the runtime. Also, we assume that the preprocessing was done offline, as this only needs to be done once.</p>
    </sec>
    <sec>
      <title>4.3 Impact of HV configuration</title>
      <sec>
        <title>4.3.1 HV precision</title>
        <p>The precision of the HV impacts the amount of information they are able to represent. While limited precision has the advantage that the data can be compressed more efficiently and specific precision such as FP16 and INT8 can enable the use of TCUs, it may reduce the search quality. We evaluate the search quality and the runtime according to the precision of the spectrum HVs, <inline-formula id="IE71"><mml:math id="IM71" display="inline" overflow="scroll"><mml:mi mathvariant="bold">I</mml:mi></mml:math></inline-formula>. Here, we fixed the HV dimension and quantization level to 8192 and 32, respectively. As shown in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S1</xref>, using FP16 or INT8 offers similar search quality to the single-precision floating-point (FP32) case. However, the spectral library search stage in HOMS-TC can be accelerated with TCUs when using FP16 and INT8 spectrum HV. Thanks to the TCU acceleration, using INT8 (FP16) can accelerate the search stage by up to <inline-formula id="IE72"><mml:math id="IM72" display="inline" overflow="scroll"><mml:mrow><mml:mn>3.5</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> (<inline-formula id="IE73"><mml:math id="IM73" display="inline" overflow="scroll"><mml:mrow><mml:mn>2.4</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula>) and the end-to-end HOMS-TC by up to <inline-formula id="IE74"><mml:math id="IM74" display="inline" overflow="scroll"><mml:mrow><mml:mn>2.9</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> (<inline-formula id="IE75"><mml:math id="IM75" display="inline" overflow="scroll"><mml:mrow><mml:mn>2.1</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula>) compared with the FP32 case that uses CUDA cores (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S1</xref>). Since at most 50 peaks exist in our evaluation, we use INT8 precision in HOMS-TC, considering the search quality and performance tradeoff.</p>
      </sec>
      <sec>
        <title>4.3.2 HV dimensionality</title>
        <p>Another important hyperparameter that allows a trade-off between search results and runtime is the HV dimensionality (<italic toggle="yes">D</italic>). Because the time complexity of the cosine similarity calculations is proportional to <italic toggle="yes">D</italic>, a higher dimensionality will lead to increased runtimes (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S2</xref>). In contrast, an overly low dimensionality limits the fidelity with which the HVs can encode the spectral data, negatively impacting the identification performance. We can clearly observe the influence of <italic toggle="yes">D</italic> on the identification performance (<xref rid="sup1" ref-type="supplementary-material">Supplementary Table S2</xref>). Note that we use INT8 HV and 32 quantization level. Optimal identification performance is achieved at high <italic toggle="yes">D</italic>, while the number of identified spectra decreases for lower HV dimensionalities. Therefore, a sufficiently high HV dimensionality is required to achieve a good search quality. We use <inline-formula id="IE76"><mml:math id="IM76" display="inline" overflow="scroll"><mml:mrow><mml:mi>D</mml:mi><mml:mo>=</mml:mo><mml:mn>8192</mml:mn></mml:mrow></mml:math></inline-formula> since search quality is saturated at this value.</p>
      </sec>
      <sec>
        <title>4.3.3 Quantization level</title>
        <p>High quantization levels may not be flexible to the peak intensity changes due to noise and PTMs. A low quantization level leads to low resolution in intensity capturing of the encoder. To observe the impact of <italic toggle="yes">Q</italic>, we fixed <italic toggle="yes">D</italic> to 8192 and HV precision to INT8. We set the quantization level <italic toggle="yes">Q</italic> from 8 to 64 and measured the search quality. As shown in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S3</xref>, the search quality is less sensitive to <italic toggle="yes">Q</italic>. We set the default value for the <italic toggle="yes">Q</italic> to 32.</p>
      </sec>
    </sec>
    <sec>
      <title>4.4 Search quality</title>
      <p>To compare search quality, we count the number of identified spectra after FDR filtering. Note that the high-performing (in general) hyperparameters are used for HOMS-TC: HV precision, HV dimensionality (<italic toggle="yes">D</italic>), and quantization level (<italic toggle="yes">Q</italic>) are set to INT8, 8192, and 32, respectively. For the iPRG2012 dataset, we compare the search results to the consensus identifications from multiple participants of the iPRG2012 study (<xref rid="btad404-B4" ref-type="bibr">Chalkley <italic toggle="yes">et al.</italic> 2014</xref>). The analysis result shows that HOMS-TC is able to correctly identify around 60% of identical spectra of the iPRG2012 consensus results (see <xref rid="btad404-F5" ref-type="fig">Fig. 5a</xref>). Although HOMS-TC identifies slightly fewer spectra than ANN-SoLo, the extra ANN-SoLo identifications predominantly do not match or conflict with the iPRG2012 consensus results, and thus are presumably less reliable.</p>
      <fig position="float" id="btad404-F5">
        <label>Figure 5.</label>
        <caption>
          <p>Comparison of the search quality (the number of unique peptides) of HOMS-TC to baselines visualized with UpSet plot. (a) HOMS-TC versus ANN-SoLo and consensus results on iPRG2012 dataset. (b) HOMS-TC versus baseline identification results on HEK293 dataset.</p>
        </caption>
        <graphic xlink:href="btad404f5" position="float"/>
      </fig>
      <p>Additionally, we compare the search results of HOMS-TC to ANN-SoLo, MSFragger, and SpectraST using the larger HEK293 dataset. As no ground truth is available for the HEK293 dataset, we compare the number of identified spectra and unique identified peptides from HOMS-TC and baseline OMS tools, SpectraST (<xref rid="btad404-B27" ref-type="bibr">Lam <italic toggle="yes">et al.</italic> 2007</xref>, <xref rid="btad404-B30" ref-type="bibr">Ma and Lam 2014</xref>), ANN-SoLo (<xref rid="btad404-B2" ref-type="bibr">Bittremieux <italic toggle="yes">et al.</italic> 2018</xref>, <xref rid="btad404-B3" ref-type="bibr">2019</xref>), and MSFragger (<xref rid="btad404-B26" ref-type="bibr">Kong <italic toggle="yes">et al.</italic> 2017</xref>). The results indicate that HOMS-TC identified a similar number of spectra as SpectraST and MSFragger. Although ANN-SoLo managed to identify more spectra, a significant number of identifications were only unique to ANN-SoLo, while the number of spectra commonly identified by HOMS-TC, ANN-SoLo, and SpectraST was similar (see <xref rid="btad404-F5" ref-type="fig">Fig. 5b</xref>). Meanwhile, a high portion of identifications from MSFragger is unique or conflicting matches compared with ANN-SoLo, SpectraST, and HOMS-TC. MSFragger adopts a different approach to perform OMS, a sequence database search, and it uses a sequence database containing the entire human proteome. These results clearly demonstrate that HOMS-TC achieves a similar spectrum identification performance as alternative spectral library search engines.</p>
      <p><xref rid="btad404-F6" ref-type="fig">Figure 6</xref> shows the possible modifications on the protein sample based on the precursor mass difference of the identified spectra. Specifically, we compute the precursor mass difference, collect only modified peptides, and compare results with the Unimod public database of protein modifications (<xref rid="btad404-B7" ref-type="bibr">Creasy and Cottrell 2004</xref>). For example, for the HEK293 dataset, the mass shift caused by various amino acid substitutions, such as Asn to Ala and Phe to Tyr, was observed. Also, HOMS-TC detected chemical changes such as oxidation, and hydroxylation, as well. The modification, including GlyGly, acetylation, and phosphorylation, was also observed at a lower rate. This implies that HOMS-TC can identify biologically relevant PTMs through the OMS. Note that HOMS-TC does not determine modification identities, but they can be obtained from the precursor mass difference using post-processing tools like PTM-Shepherd (<xref rid="btad404-B12" ref-type="bibr">Geiszler <italic toggle="yes">et al.</italic> 2021</xref>) and AA_stat (<xref rid="btad404-B29" ref-type="bibr">Levitsky <italic toggle="yes">et al.</italic> 2021</xref>).</p>
      <fig position="float" id="btad404-F6">
        <label>Figure 6.</label>
        <caption>
          <p>Precursor mass difference of unique identified peptides from HOMS-TC. Only non-zero precursor mass differences are visualized and the five most frequent modifications are annotated. (a) iPRG2012 dataset. (b) HEK293 dataset.</p>
        </caption>
        <graphic xlink:href="btad404f6" position="float"/>
      </fig>
    </sec>
    <sec>
      <title>4.5 Speed improvement and analysis</title>
      <p>We compare the runtime of HOMS-TC to ANN-SoLo using GPU acceleration (<xref rid="btad404-B3" ref-type="bibr">Bittremieux <italic toggle="yes">et al.</italic> 2019</xref>), which offers the fastest spectral search speed among competing tools. ANN-SoLo first needs to build an index or encode the original data, which can be reused for subsequent processing. For the first run of ANN-SoLo, which includes the reference indexing time, HOMS-TC is <inline-formula id="IE77"><mml:math id="IM77" display="inline" overflow="scroll"><mml:mrow><mml:mn>32</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> faster than ANN-SoLo GPU on average. When indexes are reused on ANN-SoLo, HOMS-TC achieves <inline-formula id="IE78"><mml:math id="IM78" display="inline" overflow="scroll"><mml:mrow><mml:mn>35</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE79"><mml:math id="IM79" display="inline" overflow="scroll"><mml:mrow><mml:mn>28</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> speedup on iPRG2012 and HEK293 dataset, respectively, resulting in <inline-formula id="IE80"><mml:math id="IM80" display="inline" overflow="scroll"><mml:mrow><mml:mn>31</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> speedup on average (geomean) over the baseline (see <xref rid="btad404-T2" ref-type="table">Table 2</xref>). Due to massive parallelization and simplified pipeline, the search stage itself is <inline-formula id="IE81"><mml:math id="IM81" display="inline" overflow="scroll"><mml:mrow><mml:mn>51</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> faster on average. Note that we averaged the execution time of run for each query file on the HEK293 experiment. In other words, HOMS-TC generates the reference HVs for every run in an on-the-fly manner. The baseline tool does not find the most similar spectra directly. Instead, it first reduces the search space and subsequently computes similarity scores, with this final score calculation step amounting to <inline-formula id="IE82"><mml:math id="IM82" display="inline" overflow="scroll"><mml:mrow><mml:mn>53</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> of the total search time on average. In contrast, HOMS-TC performs a one-pass search, leading to a significant speedup. Also, while ANN-SoLo uses CUDA cores with FP16 precision during the candidate selection, the proposed tool utilizes TCUs with lower precision (INT8).</p>
      <table-wrap position="float" id="btad404-T2">
        <label>Table 2.</label>
        <caption>
          <p>HOMS-TC speedup over the state-of-the-art high-performance OMS tool [ANN-SoLo GPU (<xref rid="btad404-B3" ref-type="bibr">Bittremieux <italic toggle="yes">et al.</italic> 2019</xref>)].</p>
        </caption>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th rowspan="1" colspan="1"/>
              <th colspan="2" align="center" rowspan="1">End-to-end (second run)<hr/></th>
              <th colspan="2" align="center" rowspan="1">Reference encoding (indexing)<hr/></th>
            </tr>
            <tr>
              <th rowspan="1" colspan="1"/>
              <th align="center" rowspan="1" colspan="1">iPRG2012</th>
              <th align="center" rowspan="1" colspan="1">HEK293</th>
              <th align="center" rowspan="1" colspan="1">iPRG2012</th>
              <th align="center" rowspan="1" colspan="1">HEK293</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">ANN-SoLo</td>
              <td rowspan="1" colspan="1">72.77s (1<inline-formula id="IE83"><mml:math id="IM83" display="inline" overflow="scroll"><mml:mo>×</mml:mo></mml:math></inline-formula>)</td>
              <td rowspan="1" colspan="1">290.08s (1<inline-formula id="IE84"><mml:math id="IM84" display="inline" overflow="scroll"><mml:mo>×</mml:mo></mml:math></inline-formula>)</td>
              <td rowspan="1" colspan="1">12.01s (1<inline-formula id="IE85"><mml:math id="IM85" display="inline" overflow="scroll"><mml:mo>×</mml:mo></mml:math></inline-formula>)</td>
              <td rowspan="1" colspan="1">20.82s (1<inline-formula id="IE86"><mml:math id="IM86" display="inline" overflow="scroll"><mml:mo>×</mml:mo></mml:math></inline-formula>)</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">HOMS-TC</td>
              <td rowspan="1" colspan="1">2.08s (35<inline-formula id="IE87"><mml:math id="IM87" display="inline" overflow="scroll"><mml:mo>×</mml:mo></mml:math></inline-formula>)</td>
              <td rowspan="1" colspan="1">10.4s (28<inline-formula id="IE88"><mml:math id="IM88" display="inline" overflow="scroll"><mml:mo>×</mml:mo></mml:math></inline-formula>)</td>
              <td rowspan="1" colspan="1">0.95s (12.6<inline-formula id="IE89"><mml:math id="IM89" display="inline" overflow="scroll"><mml:mo>×</mml:mo></mml:math></inline-formula>)</td>
              <td rowspan="1" colspan="1">2.21s (9.4<inline-formula id="IE90"><mml:math id="IM90" display="inline" overflow="scroll"><mml:mo>×</mml:mo></mml:math></inline-formula>)</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <fn id="tblfn1">
            <p>In the HEK293 experiment, the runtime was averaged over the execution of each query file.</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
      <p>Meanwhile, as spectral libraries are continuously growing, their efficient indexing of them is significant. HOMS-TC improves the indexing time by parallelizing across HV dimensions and datapoints, which can be accelerated with GPUs. As shown in <xref rid="btad404-T2" ref-type="table">Table 2</xref>, the encoding of reference spectra using HOMS-TC shows <inline-formula id="IE91"><mml:math id="IM91" display="inline" overflow="scroll"><mml:mrow><mml:mn>10.9</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> speedup on average compared with the baseline. Note that the encoding of new datapoints in HOMS-TC is independent of previous data, which can be easily parallelized.</p>
      <p>According to the profiling results, we found that during the encoding stage and the search stage, <inline-formula id="IE92"><mml:math id="IM92" display="inline" overflow="scroll"><mml:mrow><mml:mn>70</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> of the CUDA core and <inline-formula id="IE93"><mml:math id="IM93" display="inline" overflow="scroll"><mml:mrow><mml:mn>95.01</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> of the TCU were utilized, respectively. The entire HOMS-TC process was executed on GPUs, resulting in high hardware utilization when compared with ANN-SoLo GPU (<xref rid="btad404-B3" ref-type="bibr">Bittremieux <italic toggle="yes">et al.</italic> 2019</xref>), which only utilizes GPUs for the nearest neighbor search step. <xref rid="btad404-F7" ref-type="fig">Figure 7</xref> illustrates the breakdown of HOMS-TC by stage. The miscellaneous section includes the time taken for GPU memory allocation and memory copying from the CPU (host) to the GPU.</p>
      <fig position="float" id="btad404-F7">
        <label>Figure 7.</label>
        <caption>
          <p>HOMS-TC runtime breakdown by stage. On larger datasets, the portion of the search stage increases.</p>
        </caption>
        <graphic xlink:href="btad404f7" position="float"/>
      </fig>
      <p>The encoding of query spectra has a low impact on the overall runtime, accounting for only <inline-formula id="IE94"><mml:math id="IM94" display="inline" overflow="scroll"><mml:mrow><mml:mn>1.5</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> of the total execution time on average. The search stage’s contribution to the total runtime increases from <inline-formula id="IE95"><mml:math id="IM95" display="inline" overflow="scroll"><mml:mrow><mml:mn>51</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> to <inline-formula id="IE96"><mml:math id="IM96" display="inline" overflow="scroll"><mml:mrow><mml:mn>73</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> in the HEK293 dataset. Encoding reference spectra takes up <inline-formula id="IE97"><mml:math id="IM97" display="inline" overflow="scroll"><mml:mrow><mml:mn>33</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> of the total runtime on average. HOMS-TC encodes the reference spectra on-the-fly, but this can be minimized when reference HVs are reused, like the HEK293 dataset that shares the same reference database for multiple query files.</p>
    </sec>
    <sec>
      <title>4.6 Discussion and future work</title>
      <p>In order to further improve the search quality, an advanced encoding method that takes into account other OMS characteristics can be developed. One potential approach is to use population-based discretization of peak intensities, similar to MyriMatch (<xref rid="btad404-B40" ref-type="bibr">Tabb <italic toggle="yes">et al.</italic> 2007</xref>), to generate level HVs. Additionally, we can consider various peak changes resulting from PTMs, such as peak shifts during the encoding.</p>
      <p>Two approaches can accelerate HOMS-TC further. First, since the search stage is mainly handled by TCUs, we expect that a future GPU with the next-generation TCU can enhance the performance of our tool. For example, when compared with HOMS-TC running on NVIDIA Geforce RTX 3090 with previous (third) generation TCU, we can get <inline-formula id="IE98"><mml:math id="IM98" display="inline" overflow="scroll"><mml:mrow><mml:mn>1.8</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> speedup on the search stage using the latest GPU used in the evaluation. Secondly, we can scale HOMS-TC to multiple GPUs. We have demonstrated the spectral library search acceleration on a single GPU in this article, and it runs in a batched manner due to memory capacity limitation and limited TCUs. Exploiting multiple GPUs with TCUs can offer more parallelism and lead to execution time reduction; this remains our future work.</p>
    </sec>
  </sec>
  <sec>
    <title>5 Conclusion</title>
    <p>In this article, we proposed an HDC-based OMS solution accelerated with TCUs dubbed HOMS-TC. HOMS-TC encodes spectra into HVs that reflect the position and intensity of peaks and are tolerant to peak intensity changes. We enable OMS in one shot. Every dimension of the HVs can be computed independently, which makes the algorithm easily parallelizable. As HOMS-TC employs a simplified OMS pipeline and cosine similarity metric with reduced precision, the algorithm can be accelerated with TCUs. In addition, our proposed encoding method achieves <inline-formula id="IE99"><mml:math id="IM99" display="inline" overflow="scroll"><mml:mrow><mml:mn>10.9</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> speedup on average, which implies that HOMS-TC can effectively handle the constantly growing spectral libraries. The evaluation results show that HOMS-TC offers comparable search quality to existing OMS tools, with <inline-formula id="IE100"><mml:math id="IM100" display="inline" overflow="scroll"><mml:mrow><mml:mn>31</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> faster execution time on average compared with the state-of-the-art tool running on GPU.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>btad404_Supplementary_Data</label>
      <media xlink:href="btad404_supplementary_data.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack id="ack1">
    <title>Acknowledgements</title>
    <p>We thank Ameen Akel, Justin Eno, and Ken Curewitz at Micron Technology for their valuable comments on the performance profiling.</p>
  </ack>
  <sec>
    <title>Supplementary data</title>
    <p><xref rid="sup1" ref-type="supplementary-material">Supplementary data</xref> are available at <italic toggle="yes">Bioinformatics</italic> online.</p>
  </sec>
  <sec sec-type="COI-statement">
    <title>Conflict of interest</title>
    <p>None declared.</p>
  </sec>
  <sec>
    <title>Funding</title>
    <p>This work was supported by Processing with Intelligent Storage and Memory (PRISM) and Center for the Co-Design of Cognitive Systems (CoCoSys), centers in Joint University Microelectronics Program (JUMP) 2.0 Semiconductor Research Corporation (SRC) Global Research Collaboration (GRC) grant; and National Science Foundation (NSF) grants [1826967, 1911095, 2052809, 2112665, 2112167, and 2100237].</p>
  </sec>
  <sec sec-type="data-availability">
    <title>Data availability</title>
    <p>The data underlying this article will be shared on reasonable request to the corresponding author.</p>
  </sec>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btad404-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bittremieux</surname><given-names>W.</given-names></string-name></person-group><article-title>Spectrum_utils: a python package for mass spectrometry data processing and visualization</article-title>. <source>Anal Chem</source><year>2020</year>;<volume>92</volume>:<fpage>659</fpage>–<lpage>61</lpage>.<pub-id pub-id-type="pmid">31809021</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bittremieux</surname><given-names>W</given-names></string-name>, <string-name><surname>Meysman</surname><given-names>P</given-names></string-name>, <string-name><surname>Noble</surname><given-names>WS</given-names></string-name></person-group><etal>et al</etal><article-title>Fast open modification spectral library searching through approximate nearest neighbor indexing</article-title>. <source>J Proteome Res</source><year>2018</year>;<volume>17</volume>:<fpage>3463</fpage>–<lpage>74</lpage>.<pub-id pub-id-type="pmid">30184435</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bittremieux</surname><given-names>W</given-names></string-name>, <string-name><surname>Laukens</surname><given-names>K</given-names></string-name>, <string-name><surname>Noble</surname><given-names>WS</given-names></string-name></person-group><etal>et al</etal><article-title>Extremely fast and accurate open modification spectral library searching of high-resolution mass spectra using feature hashing and graphics processing units</article-title>. <source>J Proteome Res</source><year>2019</year>;<volume>18</volume>:<fpage>3792</fpage>–<lpage>9</lpage>.<pub-id pub-id-type="pmid">31448616</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chalkley</surname><given-names>RJ</given-names></string-name>, <string-name><surname>Bandeira</surname><given-names>N</given-names></string-name>, <string-name><surname>Chambers</surname><given-names>MC</given-names></string-name></person-group><etal>et al</etal><article-title>Proteome informatics research group (iPRG)_2012: a study on detecting modified peptides in a complex mixture</article-title>. <source>Mol Cell Proteomics</source><year>2014</year>;<volume>13</volume>:<fpage>360</fpage>–<lpage>71</lpage>.<pub-id pub-id-type="pmid">24187338</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chi</surname><given-names>H</given-names></string-name>, <string-name><surname>Liu</surname><given-names>C</given-names></string-name>, <string-name><surname>Yang</surname><given-names>H</given-names></string-name></person-group><etal>et al</etal><article-title>Comprehensive identification of peptides in tandem mass spectra using an efficient open search engine</article-title>. <source>Nat Biotechnol</source><year>2018</year>;<volume>36</volume>:<fpage>1059</fpage>–<lpage>61</lpage>.</mixed-citation>
    </ref>
    <ref id="btad404-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chick</surname><given-names>JM</given-names></string-name>, <string-name><surname>Kolippakkam</surname><given-names>D</given-names></string-name>, <string-name><surname>Nusinow</surname><given-names>DP</given-names></string-name></person-group><etal>et al</etal><article-title>A mass-tolerant database search identifies a large proportion of unassigned spectra in shotgun proteomics as modified peptides</article-title>. <source>Nat Biotechnol</source><year>2015</year>;<volume>33</volume>:<fpage>743</fpage>–<lpage>9</lpage>.<pub-id pub-id-type="pmid">26076430</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Creasy</surname><given-names>DM</given-names></string-name>, <string-name><surname>Cottrell</surname><given-names>JS.</given-names></string-name></person-group><article-title>Unimod: protein modifications for mass spectrometry</article-title>. <source>Proteomics</source><year>2004</year>;<volume>4</volume>:<fpage>1534</fpage>–<lpage>6</lpage>.<pub-id pub-id-type="pmid">15174123</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Devabhaktuni</surname><given-names>A</given-names></string-name>, <string-name><surname>Lin</surname><given-names>S</given-names></string-name>, <string-name><surname>Zhang</surname><given-names>L</given-names></string-name></person-group><etal>et al</etal><article-title>TagGraph reveals vast protein modification landscapes from large tandem mass spectrometry datasets</article-title>. <source>Nat Biotechnol</source><year>2019</year>;<volume>37</volume>:<fpage>469</fpage>–<lpage>79</lpage>.<pub-id pub-id-type="pmid">30936560</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Elias</surname><given-names>JE</given-names></string-name>, <string-name><surname>Gygi</surname><given-names>SP.</given-names></string-name></person-group><article-title>Target-decoy search strategy for increased confidence in large-scale protein identifications by mass spectrometry</article-title>. <source>Nat Methods</source><year>2007</year>;<volume>4</volume>:<fpage>207</fpage>–<lpage>14</lpage>.<pub-id pub-id-type="pmid">17327847</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Fu</surname><given-names>Y.</given-names></string-name></person-group><article-title>Bayesian false discovery rates for post-translational modification proteomics</article-title>. <source>Stat Interface</source><year>2012</year>;<volume>5</volume>:<fpage>47</fpage>–<lpage>59</lpage>.</mixed-citation>
    </ref>
    <ref id="btad404-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Fu</surname><given-names>Y</given-names></string-name>, <string-name><surname>Qian</surname><given-names>X.</given-names></string-name></person-group><article-title>Transferred subgroup false discovery rate for rare post-translational modifications detected by mass spectrometry</article-title>. <source>Mol Cell Proteomics</source><year>2014</year>;<volume>13</volume>:<fpage>1359</fpage>–<lpage>68</lpage>.<pub-id pub-id-type="pmid">24200586</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Geiszler</surname><given-names>DJ</given-names></string-name>, <string-name><surname>Kong</surname><given-names>AT</given-names></string-name>, <string-name><surname>Avtonomov</surname><given-names>DM</given-names></string-name></person-group><etal>et al</etal><article-title>PTM-shepherd: analysis and summarization of post-translational and chemical modifications from open search results</article-title>. <source>Mol Cell Proteomics</source><year>2021</year>;<volume>20</volume>:<fpage>100018</fpage>.<pub-id pub-id-type="pmid">33568339</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Goloborodko</surname><given-names>AA</given-names></string-name>, <string-name><surname>Levitsky</surname><given-names>LI</given-names></string-name>, <string-name><surname>Ivanov</surname><given-names>MV</given-names></string-name></person-group><etal>et al</etal><article-title>Pyteomics—a python framework for exploratory data analysis and rapid software prototyping in proteomics</article-title>. <source>J Am Soc Mass Spectrom</source><year>2013</year>;<volume>24</volume>:<fpage>301</fpage>–<lpage>4</lpage>.<pub-id pub-id-type="pmid">23292976</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Griss</surname><given-names>J.</given-names></string-name></person-group><article-title>Spectral library searching in proteomics</article-title>. <source>Proteomics</source><year>2016</year>;<volume>16</volume>:<fpage>729</fpage>–<lpage>40</lpage>.<pub-id pub-id-type="pmid">26616598</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Griss</surname><given-names>J</given-names></string-name>, <string-name><surname>Foster</surname><given-names>JM</given-names></string-name>, <string-name><surname>Hermjakob</surname><given-names>H</given-names></string-name></person-group><etal>et al</etal><article-title>PRIDE cluster: building a consensus of proteomics data</article-title>. <source>Nat Methods</source><year>2013</year>;<volume>10</volume>:<fpage>95</fpage>–<lpage>6</lpage>.<pub-id pub-id-type="pmid">23361086</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Griss</surname><given-names>J</given-names></string-name>, <string-name><surname>Perez-Riverol</surname><given-names>Y</given-names></string-name>, <string-name><surname>Lewis</surname><given-names>S</given-names></string-name></person-group><etal>et al</etal><article-title>Recognizing millions of consistently unidentified spectra across hundreds of shotgun proteomics datasets</article-title>. <source>Nat Methods</source><year>2016</year>;<volume>13</volume>:<fpage>651</fpage>–<lpage>6</lpage>.<pub-id pub-id-type="pmid">27493588</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B17">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Harris</surname><given-names>M.</given-names></string-name></person-group><source>Optimizing Parallel Reduction in CUDA</source>. <publisher-name>NVIDIA Developer Technology</publisher-name>, <year>2007</year>.</mixed-citation>
    </ref>
    <ref id="btad404-B18">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Imani</surname><given-names>M</given-names></string-name>, <string-name><surname>Kong</surname><given-names>D</given-names></string-name>, <string-name><surname>Rahimi</surname><given-names>A</given-names></string-name></person-group><etal>et al</etal> Voicehd: Hyperdimensional computing for efficient speech recognition. In: <italic toggle="yes">2017 IEEE International Conference on Rebooting Computing (ICRC</italic>), IEEE, <year>2017</year>, <fpage>1</fpage>–<lpage>8</lpage>.</mixed-citation>
    </ref>
    <ref id="btad404-B19">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Kanerva</surname><given-names>P.</given-names></string-name></person-group><year>1988</year>. <source>Sparse Distributed Memory</source>. <publisher-name>MIT Press</publisher-name>.</mixed-citation>
    </ref>
    <ref id="btad404-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kanerva</surname><given-names>P.</given-names></string-name></person-group><article-title>Hyperdimensional computing: an introduction to computing in distributed representation with high-dimensional random vectors</article-title>. <source>Cogn Comput</source><year>2009</year>;<volume>1</volume>:<fpage>139</fpage>–<lpage>59</lpage>.</mixed-citation>
    </ref>
    <ref id="btad404-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kang</surname><given-names>J</given-names></string-name>, <string-name><surname>Khaleghi</surname><given-names>B</given-names></string-name>, <string-name><surname>Rosing</surname><given-names>T</given-names></string-name></person-group><etal>et al</etal><article-title>OpenHD: a GPU-powered framework for hyperdimensional computing</article-title>. <source>IEEE Trans Comput</source><year>2022a</year>;<volume>71</volume>:<fpage>2753</fpage>–<lpage>65</lpage>.</mixed-citation>
    </ref>
    <ref id="btad404-B22">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Kang</surname><given-names>J</given-names></string-name></person-group><etal>et al</etal> Xcelhd: an efficient GPU-powered hyperdimensional computing with parallelized training. In <italic toggle="yes">2022 27th Asia and South Pacific Design Automation Conference (ASP-DAC)</italic>, <year>2022b</year>, <fpage>220</fpage>–<lpage>5</lpage>.</mixed-citation>
    </ref>
    <ref id="btad404-B23">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Kerr</surname><given-names>A</given-names></string-name></person-group><etal>et al</etal><year>2022</year>. <source>CUTLASS</source>, NVIDIA. <ext-link xlink:href="https://www.nvidia.com/en-us/on-demand/session/gtcsiliconvalley2018-s8854/" ext-link-type="uri">https://www.nvidia.com/en-us/on-demand/session/gtcsiliconvalley2018-s8854/</ext-link>.</mixed-citation>
    </ref>
    <ref id="btad404-B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kertesz-Farkas</surname><given-names>A</given-names></string-name>, <string-name><surname>Keich</surname><given-names>U</given-names></string-name>, <string-name><surname>Noble</surname><given-names>WS</given-names></string-name></person-group><etal>et al</etal><article-title>Tandem mass spectrum identification via cascaded search</article-title>. <source>J Proteome Res</source><year>2015</year>;<volume>14</volume>:<fpage>3027</fpage>–<lpage>38</lpage>.<pub-id pub-id-type="pmid">26084232</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B25">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Kim</surname><given-names>Y</given-names></string-name></person-group><etal>et al</etal> Geniehd: efficient DNA pattern matching accelerator using hyperdimensional computing. In <italic toggle="yes">2020 Design, Automation &amp; Test in Europe Conference &amp; Exhibition (DATE)</italic>, IEEE, <year>2020</year>, <fpage>115</fpage>–<lpage>20</lpage>.</mixed-citation>
    </ref>
    <ref id="btad404-B26">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kong</surname><given-names>AT</given-names></string-name>, <string-name><surname>Leprevost</surname><given-names>FV</given-names></string-name>, <string-name><surname>Avtonomov</surname><given-names>DM</given-names></string-name></person-group><etal>et al</etal><article-title>MSFragger: ultrafast and comprehensive peptide identification in mass spectrometry-based proteomics</article-title>. <source>Nat Methods</source><year>2017</year>;<volume>14</volume>:<fpage>513</fpage>–<lpage>20</lpage>.<pub-id pub-id-type="pmid">28394336</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B27">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lam</surname><given-names>H</given-names></string-name>, <string-name><surname>Deutsch</surname><given-names>EW</given-names></string-name>, <string-name><surname>Eddes</surname><given-names>JS</given-names></string-name></person-group><etal>et al</etal><article-title>Development and validation of a spectral library searching method for peptide identification from MS/MS</article-title>. <source>Proteomics</source><year>2007</year>;<volume>7</volume>:<fpage>655</fpage>–<lpage>67</lpage>.<pub-id pub-id-type="pmid">17295354</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B28">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lam</surname><given-names>H</given-names></string-name>, <string-name><surname>Deutsch</surname><given-names>EW</given-names></string-name>, <string-name><surname>Aebersold</surname><given-names>R</given-names></string-name></person-group><etal>et al</etal><article-title>Artificial decoy spectral libraries for false discovery rate estimation in spectral library searching in proteomics</article-title>. <source>J Proteome Res</source><year>2010</year>;<volume>9</volume>:<fpage>605</fpage>–<lpage>10</lpage>.<pub-id pub-id-type="pmid">19916561</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B29">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Levitsky</surname><given-names>LI</given-names></string-name>, <string-name><surname>Bubis</surname><given-names>JA</given-names></string-name>, <string-name><surname>Gorshkov</surname><given-names>MV</given-names></string-name></person-group><etal>et al</etal><article-title>Aa_stat: intelligent profiling of in vivo and in vitro modifications from open search results</article-title>. <source>J Proteomics</source><year>2021</year>;<volume>248</volume>:<fpage>104350</fpage>.<pub-id pub-id-type="pmid">34389500</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B30">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ma</surname><given-names>CWM</given-names></string-name>, <string-name><surname>Lam</surname><given-names>H.</given-names></string-name></person-group><article-title>Hunting for unexpected post-translational modifications by spectral library searching with tier-wise scoring</article-title>. <source>J Proteome Res</source><year>2014</year>;<volume>13</volume>:<fpage>2262</fpage>–<lpage>71</lpage>.<pub-id pub-id-type="pmid">24661115</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B31">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Martens</surname><given-names>L</given-names></string-name>, <string-name><surname>Hermjakob</surname><given-names>H</given-names></string-name>, <string-name><surname>Jones</surname><given-names>P</given-names></string-name></person-group><etal>et al</etal><article-title>Pride: the proteomics identifications database</article-title>. <source>Proteomics</source><year>2005</year>;<volume>5</volume>:<fpage>3537</fpage>–<lpage>45</lpage>.<pub-id pub-id-type="pmid">16041671</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B32">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Messner</surname><given-names>CB</given-names></string-name>, <string-name><surname>Demichev</surname><given-names>V</given-names></string-name>, <string-name><surname>Bloomfield</surname><given-names>N</given-names></string-name></person-group><etal>et al</etal><article-title>Ultra-fast proteomics with scanning swath</article-title>. <source>Nat Biotechnol</source><year>2021</year>;<volume>39</volume>:<fpage>846</fpage>–<lpage>54</lpage>.<pub-id pub-id-type="pmid">33767396</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B33">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Neubert</surname><given-names>P</given-names></string-name>, <string-name><surname>Schubert</surname><given-names>S.</given-names></string-name></person-group> Hyperdimensional computing as a framework for systematic aggregation of image descriptors. In: <italic toggle="yes">Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, Nashville, TN</italic>, <year>2021</year>, <fpage>16938</fpage>–<lpage>47</lpage>.</mixed-citation>
    </ref>
    <ref id="btad404-B34">
      <mixed-citation publication-type="other"><collab>NVIDIA</collab>. <italic toggle="yes">Basic linear algebra on nvidia gpus</italic>, <year>2022</year>. <ext-link xlink:href="https://developer.nvidia.com/cublas" ext-link-type="uri">https://developer.nvidia.com/cublas</ext-link>.</mixed-citation>
    </ref>
    <ref id="btad404-B35">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Salamat</surname><given-names>S</given-names></string-name></person-group><etal>et al</etal> F5-hd: Fast flexible FPGA-based framework for refreshing hyperdimensional computing. In <italic toggle="yes">Proceedings of the 2019 ACM/SIGDA International Symposium on Field-Programmable Gate Arrays</italic>, ACM, <year>2019</year>, <fpage>53</fpage>–<lpage>62</lpage>.</mixed-citation>
    </ref>
    <ref id="btad404-B36">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Salamat</surname><given-names>S</given-names></string-name>, <string-name><surname>Imani</surname><given-names>M</given-names></string-name>, <string-name><surname>Rosing</surname><given-names>T</given-names></string-name></person-group><etal>et al</etal><article-title>Accelerating hyperdimensional computing on FPGAs by exploiting computational reuse</article-title>. <source>IEEE Trans Comput</source><year>2020</year>;<volume>69</volume>:<fpage>1159</fpage>–<lpage>71</lpage>.</mixed-citation>
    </ref>
    <ref id="btad404-B37">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Selevsek</surname><given-names>N</given-names></string-name>, <string-name><surname>Chang</surname><given-names>C-Y</given-names></string-name>, <string-name><surname>Gillet</surname><given-names>LC</given-names></string-name></person-group><etal>et al</etal><article-title>Reproducible and consistent quantification of the saccharomyces cerevisiae proteome by SWATH-mass spectrometry</article-title>. <source>Mol Cell Proteomics</source><year>2015</year>;<volume>14</volume>:<fpage>739</fpage>–<lpage>49</lpage>.<pub-id pub-id-type="pmid">25561506</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B38">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Shao</surname><given-names>W</given-names></string-name>, <string-name><surname>Lam</surname><given-names>H.</given-names></string-name></person-group><article-title>Tandem mass spectral libraries of peptides and their roles in proteomics research</article-title>. <source>Mass Spectrom Rev</source><year>2017</year>;<volume>36</volume>:<fpage>634</fpage>–<lpage>48</lpage>.<pub-id pub-id-type="pmid">27403644</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B39">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Solntsev</surname><given-names>SK</given-names></string-name>, <string-name><surname>Shortreed</surname><given-names>MR</given-names></string-name>, <string-name><surname>Frey</surname><given-names>BL</given-names></string-name></person-group><etal>et al</etal><article-title>Enhanced global post-translational modification discovery with metamorpheus</article-title>. <source>J Proteome Res</source><year>2018</year>;<volume>17</volume>:<fpage>1844</fpage>–<lpage>51</lpage>.<pub-id pub-id-type="pmid">29578715</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B40">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Tabb</surname><given-names>DL</given-names></string-name>, <string-name><surname>Fernando</surname><given-names>CG</given-names></string-name>, <string-name><surname>Chambers</surname><given-names>MC</given-names></string-name></person-group><etal>et al</etal><article-title>Myrimatch: highly accurate tandem mass spectral peptide identification by multivariate hypergeometric analysis</article-title>. <source>J Proteome Res</source><year>2007</year>;<volume>6</volume>:<fpage>654</fpage>–<lpage>61</lpage>.<pub-id pub-id-type="pmid">17269722</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B41">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wang</surname><given-names>M</given-names></string-name>, <string-name><surname>Wang</surname><given-names>J</given-names></string-name>, <string-name><surname>Carver</surname><given-names>J</given-names></string-name></person-group><etal>et al</etal><article-title>Assembling the community-scale discoverable human proteome</article-title>. <source>Cell Syst</source><year>2018</year>;<volume>7</volume>:<fpage>412</fpage>–<lpage>21.e5</lpage>.<pub-id pub-id-type="pmid">30172843</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B42">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Xu</surname><given-names>W</given-names></string-name></person-group><etal>et al</etal> A near-storage framework for boosted data preprocessing of mass spectrum clustering. In: <italic toggle="yes">Proceedings of the 59th ACM/IEEE Design Automation Conference</italic>, DAC ’22, New York, NY: Association for Computing Machinery, <year>2022</year>, <fpage>313</fpage>–<lpage>8</lpage>.</mixed-citation>
    </ref>
    <ref id="btad404-B43">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Zou</surname><given-names>Z</given-names></string-name></person-group><etal>et al</etal> BioHD: an efficient genome sequence search platform using hyperdimensional memorization. In: <italic toggle="yes">Proceedings of the 49th Annual International Symposium on Computer Architecture, New York, NY</italic>, <year>2022</year>, <fpage>656</fpage>–<lpage>69</lpage>.</mixed-citation>
    </ref>
  </ref-list>
</back>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10323168</article-id>
    <article-id pub-id-type="pmid">37369033</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btad404</article-id>
    <article-id pub-id-type="publisher-id">btad404</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Original Paper</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Gene Expression</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Accelerating open modification spectral library searching on tensor core in high-dimensional space</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0003-1048-1285</contrib-id>
        <name>
          <surname>Kang</surname>
          <given-names>Jaeyoung</given-names>
        </name>
        <aff><institution>Department of Electrical and Computer Engineering, University of California San Diego, San Diego</institution>, CA 92093, <country country="US">United States</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Xu</surname>
          <given-names>Weihong</given-names>
        </name>
        <aff><institution>Department of Computer Science and Engineering, University of California San Diego, San Diego</institution>, CA 92093, <country country="US">United States</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-3105-1359</contrib-id>
        <name>
          <surname>Bittremieux</surname>
          <given-names>Wout</given-names>
        </name>
        <aff><institution>Department of Computer Science, University of Antwerp</institution>, Antwerpen 2020, <country country="BE">Belgium</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0003-2209-8128</contrib-id>
        <name>
          <surname>Moshiri</surname>
          <given-names>Niema</given-names>
        </name>
        <aff><institution>Department of Computer Science and Engineering, University of California San Diego, San Diego</institution>, CA 92093, <country country="US">United States</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Rosing</surname>
          <given-names>Tajana</given-names>
        </name>
        <aff><institution>Department of Computer Science and Engineering, University of California San Diego, San Diego</institution>, CA 92093, <country country="US">United States</country></aff>
        <xref rid="btad404-cor1" ref-type="corresp"/>
        <!--tajana@ucsd.edu-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Kelso</surname>
          <given-names>Janet</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="btad404-cor1">Corresponding author. Department of Computer Science and Engineering, University of California San Diego, CA 92093, USA. E-mail: <email>tajana@ucsd.edu</email> (T.R.)</corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <month>7</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2023-06-27">
      <day>27</day>
      <month>6</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>27</day>
      <month>6</month>
      <year>2023</year>
    </pub-date>
    <volume>39</volume>
    <issue>7</issue>
    <elocation-id>btad404</elocation-id>
    <history>
      <date date-type="received">
        <day>03</day>
        <month>2</month>
        <year>2023</year>
      </date>
      <date date-type="rev-recd">
        <day>09</day>
        <month>5</month>
        <year>2023</year>
      </date>
      <date date-type="editorial-decision">
        <day>15</day>
        <month>6</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>26</day>
        <month>6</month>
        <year>2023</year>
      </date>
      <date date-type="corrected-typeset">
        <day>05</day>
        <month>7</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2023. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2023</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btad404.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>Driven by technological advances, the throughput and cost of mass spectrometry (MS) proteomics experiments have improved by orders of magnitude in recent decades. Spectral library searching is a common approach to annotating experimental mass spectra by matching them against large libraries of reference spectra corresponding to known peptides. An important disadvantage, however, is that only peptides included in the spectral library can be found, whereas novel peptides, such as those with unexpected post-translational modifications (PTMs), will remain unknown. Open modification searching (OMS) is an increasingly popular approach to annotate modified peptides based on partial matches against their unmodified counterparts. Unfortunately, this leads to very large search spaces and excessive runtimes, which is especially problematic considering the continuously increasing sizes of MS proteomics datasets.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>We propose an OMS algorithm, called HOMS-TC, that fully exploits parallelism in the entire pipeline of spectral library searching. We designed a new highly parallel encoding method based on the principle of hyperdimensional computing to encode mass spectral data to hypervectors while minimizing information loss. This process can be easily parallelized since each dimension is calculated independently. HOMS-TC processes two stages of existing cascade search in parallel and selects the most similar spectra while considering PTMs. We accelerate HOMS-TC on NVIDIA’s tensor core units, which is emerging and readily available in the recent graphics processing unit (GPU). Our evaluation shows that HOMS-TC is <inline-formula id="IE1"><mml:math id="IM1" display="inline" overflow="scroll"><mml:mrow><mml:mn>31</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> faster on average than alternative search engines and provides comparable accuracy to competing search tools.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p>HOMS-TC is freely available under the Apache 2.0 license as an open-source software project at <ext-link xlink:href="https://github.com/tycheyoung/homs-tc" ext-link-type="uri">https://github.com/tycheyoung/homs-tc</ext-link>.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Global Research Collaboration</institution>
          </institution-wrap>
        </funding-source>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>National Science Foundation</institution>
            <institution-id institution-id-type="DOI">10.13039/100000001</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>1826967</award-id>
        <award-id>1911095</award-id>
        <award-id>2052809</award-id>
        <award-id>2112665</award-id>
        <award-id>2112167</award-id>
        <award-id>2100237</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="8"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Mass spectrometry (MS) is a powerful analytical technique to identify and quantify peptides and proteins present in complex biological samples. A common strategy to analyze data from shotgun proteomics experiments is using spectral library searching, which matches experimental MS/MS spectra to reference MS/MS spectra corresponding to known peptides and transfers peptide labels to high-scoring matches (<xref rid="btad404-B14" ref-type="bibr">Griss 2016</xref>, <xref rid="btad404-B38" ref-type="bibr">Shao and Lam 2017</xref>). An important disadvantage of this approach, however, is that only peptides that are included in the spectral library can be found, while novel peptides will remain unknown. Even though spectral libraries are becoming increasingly comprehensive, they cannot provide coverage of the full proteome. Notably, current spectral libraries predominantly contain unmodified peptides, whereas a significant portion of experimental spectra that remain unannotated might correspond to peptides that include post-translational modifications (PTMs) (<xref rid="btad404-B6" ref-type="bibr">Chick <italic toggle="yes">et al.</italic> 2015</xref>).</p>
    <p>An increasingly popular approach to identifying modified peptides is open modification searching (OMS). Unlike standard spectral library searching, which only compares experimental MS/MS spectra to library candidates with a similar precursor mass, OMS matches spectra irrespective of their precursor mass. This makes it possible to compare spectra corresponding to modified and unmodified peptides, even when their precursor masses differ due to PTMs. An important downside of OMS is that, because the precursor mass filter can no longer be used and instead each experimental spectrum has to be compared against the full spectral library, it suffers from a very large search space, which can lead to excessive runtimes. This is especially relevant as available spectral libraries have grown significantly in size over the past few years (<xref rid="btad404-B15" ref-type="bibr">Griss <italic toggle="yes">et al.</italic> 2013</xref>, <xref rid="btad404-B16" ref-type="bibr">Griss <italic toggle="yes">et al.</italic> 2016</xref>, <xref rid="btad404-B41" ref-type="bibr">Wang <italic toggle="yes">et al.</italic> 2018</xref>, <xref rid="btad404-B42" ref-type="bibr">Xu <italic toggle="yes">et al.</italic> 2022</xref>). For example, PRIDE-Cluster (<xref rid="btad404-B15" ref-type="bibr">Griss <italic toggle="yes">et al.</italic>, 2013</xref>, <xref rid="btad404-B16" ref-type="bibr">2016</xref>) and MassIVE-KB (<xref rid="btad404-B41" ref-type="bibr">Wang <italic toggle="yes">et al.</italic> 2018</xref>) have been generated by repository-scale reprocessing of public data on the PRIDE (<xref rid="btad404-B31" ref-type="bibr">Martens <italic toggle="yes">et al.</italic> 2005</xref>) and MassIVE data repositories, respectively, and consist of millions of reference MS/MS spectra.</p>
    <p>To cope with the computational demand, various tools that use algorithmic advances to efficiently process large search spaces have been proposed, such as MSFragger (<xref rid="btad404-B26" ref-type="bibr">Kong <italic toggle="yes">et al.</italic> 2017</xref>), Open-pFind (<xref rid="btad404-B5" ref-type="bibr">Chi <italic toggle="yes">et al.</italic> 2018</xref>), TagGraph (<xref rid="btad404-B8" ref-type="bibr">Devabhaktuni <italic toggle="yes">et al.</italic> 2019</xref>), MetaMorpheus (<xref rid="btad404-B39" ref-type="bibr">Solntsev <italic toggle="yes">et al.</italic> 2018</xref>), ANN-SoLo (<xref rid="btad404-B2" ref-type="bibr">Bittremieux <italic toggle="yes">et al.</italic> 2018</xref>, <xref rid="btad404-B3" ref-type="bibr">2019</xref>), and others. Some tools can use specialized hardware, such as graphics processing units (GPUs), to speed up OMS (<xref rid="btad404-B3" ref-type="bibr">Bittremieux <italic toggle="yes">et al.</italic> 2019</xref>). Although spectrum identification is generally not the bottleneck compared with the data acquisition time, because there is a strong effort to reduce experimental runtimes, e.g. by using very short liquid chromatography gradients (<xref rid="btad404-B32" ref-type="bibr">Messner <italic toggle="yes">et al.</italic> 2021</xref>), computational efficiency is still an important point of attention. Additionally, as the amount of MS data that is available in public data repositories, such as PRIDE (<xref rid="btad404-B31" ref-type="bibr">Martens <italic toggle="yes">et al.</italic> 2005</xref>) and MassIVE, continuously keeps growing, efficient bioinformatics tools are essential for large-scale public data reanalysis efforts. Unfortunately, however, due to the complexities of spectral data processing, in practice, most OMS tools under-utilize the hardware resources and still suffer from long runtimes.</p>
    <p>In this work, we propose Hyperdimensional Open Modification Search with Tensor Core (HOMS-TC) acceleration, a novel spectral library searching framework that supports OMS. Our solution redesigns the MS/MS spectral matching algorithm based on the principle of hyperdimensional computing (HDC). HDC is designed to mimic the efficiency of human memory in pattern-oriented computations by representing data with high-dimensional (HD) vectors, called <italic toggle="yes">hypervectors</italic> (HVs) (<xref rid="btad404-B19" ref-type="bibr">Kanerva 1988</xref>, <xref rid="btad404-B20" ref-type="bibr">2009</xref>). HDC has been used to enable parallel processing of pattern-matching tasks, such as sequence alignment (<xref rid="btad404-B25" ref-type="bibr">Kim <italic toggle="yes">et al.</italic> 2020</xref>, <xref rid="btad404-B43" ref-type="bibr">Zou <italic toggle="yes">et al.</italic> 2022</xref>) and image matching (<xref rid="btad404-B33" ref-type="bibr">Neubert and Schubert 2021</xref>).</p>
    <p>Based on HDC, HOMS-TC simplifies spectral library matching to efficient cosine similarity searching of HVs. Our HV encoding captures spectral similarity by incorporating peak position and intensity and is tolerant to changes in peak intensity due to instrument errors or noise. Furthermore, the encoding natively supports adding additional reference spectra when the spectral library is updated because each data point is independent. To this end, the proposed algorithm is parallelizable and can be easily accelerated with hardware as they are highly regularized. Thanks to a simplified pipeline and scoring metric, HOMS-TC can be implemented using state-of-the-art hardware accelerators, such as the emerging tensor core units (TCUs). TCUs outperform CUDA cores for matrix multiplication operations and are readily available and programmable in modern NVIDIA GPUs. We evaluate the proposed algorithm using CUDA v11.8 on an NVIDIA GeForce RTX 4090 GPU. Compared with ANN-SoLo, which is a traditional GPU-based OMS solution, HOMS-TC is <inline-formula id="IE2"><mml:math id="IM2" display="inline" overflow="scroll"><mml:mrow><mml:mn>31</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> faster while offering comparable quality as other competing search tools.</p>
  </sec>
  <sec>
    <title>2 HDC preliminaries</title>
    <p>HDC is an emerging computing paradigm that mathematically models features of the neuronal circuits in the human brain by representing data with HVs. Using the following operations, HDC mimics the way human memory works; memorizing information, associating different pieces of information, and understanding relationships between data.</p>
    <p><bold>Reasoning:</bold> The reasoning is done by measuring the similarity between two HVs. For example, we can distinguish between two HVs, <inline-formula id="IE3"><mml:math id="IM3" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">H</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE4"><mml:math id="IM4" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">H</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, by examining the similarity between them, i.e. <inline-formula id="IE5"><mml:math id="IM5" display="inline" overflow="scroll"><mml:mrow><mml:mo>δ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">H</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">H</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. If this value is close to zero, indicating that the HVs are nearly orthogonal, then we can conclude that they are distinct. Here, hamming distance and cosine similarity can be used for binary HVs and non-binary HVs, respectively.</p>
    <p><bold>Bundling:</bold> The bundling operation mimics memorization. It is done by element-wise vector addition between HVs. For example, let <inline-formula id="IE6"><mml:math id="IM6" display="inline" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold">H</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">A</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">A</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">A</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. <inline-formula id="IE7"><mml:math id="IM7" display="inline" overflow="scroll"><mml:mi mathvariant="bold">H</mml:mi></mml:math></inline-formula> memorizes patterns of HV <inline-formula id="IE8"><mml:math id="IM8" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">A</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula id="IE9"><mml:math id="IM9" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">A</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, and <inline-formula id="IE10"><mml:math id="IM10" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">A</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>; <inline-formula id="IE11"><mml:math id="IM11" display="inline" overflow="scroll"><mml:mrow><mml:mo>δ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">H</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">A</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>≫</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> for <inline-formula id="IE12"><mml:math id="IM12" display="inline" overflow="scroll"><mml:mrow><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>. Besides, for randomly generated HV <inline-formula id="IE13"><mml:math id="IM13" display="inline" overflow="scroll"><mml:mi mathvariant="bold">X</mml:mi></mml:math></inline-formula>, <inline-formula id="IE14"><mml:math id="IM14" display="inline" overflow="scroll"><mml:mrow><mml:mo>δ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">H</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold">X</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>≃</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> as <inline-formula id="IE15"><mml:math id="IM15" display="inline" overflow="scroll"><mml:mi mathvariant="bold">H</mml:mi></mml:math></inline-formula> does not contain the information of <inline-formula id="IE16"><mml:math id="IM16" display="inline" overflow="scroll"><mml:mi mathvariant="bold">X</mml:mi></mml:math></inline-formula>.</p>
    <p><bold>Binding:</bold> Using the coordinate-wise vector multiplication (<inline-formula id="IE17"><mml:math id="IM17" display="inline" overflow="scroll"><mml:mo>⊗</mml:mo></mml:math></inline-formula>), we can associate different information. This HDC operation is called binding. The resulting HV represents new information, which is nearly orthogonal (dissimilar) to both operand HVs, i.e. <inline-formula id="IE18"><mml:math id="IM18" display="inline" overflow="scroll"><mml:mrow><mml:mo>δ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">A</mml:mi><mml:mo>⊗</mml:mo><mml:mi mathvariant="bold">B</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold">A</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>≃</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula>.</p>
    <p><bold>Flip:</bold> To achieve the desired level of similarity between HVs, we use the flip operation, which involves changing the sign bit of HV elements. For example, flipping <inline-formula id="IE19"><mml:math id="IM19" display="inline" overflow="scroll"><mml:mrow><mml:mi>D</mml:mi><mml:mo>/</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math></inline-formula> elements of the HV represented by <inline-formula id="IE20"><mml:math id="IM20" display="inline" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold">H</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:mrow><mml:mi>D</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> produces an HV that is 50% similar to the original HV.</p>
    <p><bold>Permutation:</bold> The permutation operation, <inline-formula id="IE21"><mml:math id="IM21" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mo>ρ</mml:mo></mml:mrow><mml:mi>n</mml:mi></mml:msup></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">H</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> shuffles the components of <inline-formula id="IE22"><mml:math id="IM22" display="inline" overflow="scroll"><mml:mi mathvariant="bold">H</mml:mi></mml:math></inline-formula> with an <italic toggle="yes">n</italic>-bit rotation. The result is a near-orthogonal HV, i.e. <inline-formula id="IE23"><mml:math id="IM23" display="inline" overflow="scroll"><mml:mrow><mml:mo>δ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mo>ρ</mml:mo></mml:mrow><mml:mi>n</mml:mi></mml:msup></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">H</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mi mathvariant="bold">H</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>≃</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> for non-zero <italic toggle="yes">n</italic>.</p>
    <p>We can aggregate peak information to HVs with these operations. In the following, we show how HOMS-TC utilizes HDC operations to combine peak data from MS/MS spectra to represent them in an HV format.</p>
  </sec>
  <sec>
    <title>3 Methods</title>
    <p>HOMS-TC is an HDC-based OMS tool that can be parallelized and accelerated with GPU. It consists of two stages: (i) an encoding stage during which MS/MS spectra are converted to HVs and (ii) a search stage that matches query HVs to library HVs to annotate the query spectra.</p>
    <sec>
      <title>3.1 Data preprocessing and spectra vectorization</title>
      <p>Before proceeding to the encoding stage, HOMS-TC enhances the search quality by refining spectra using the <monospace>spectrum_utils</monospace> package (<xref rid="btad404-B1" ref-type="bibr">Bittremieux 2020</xref>). The refined spectra are then vectorized and saved in a compressed format (<xref rid="btad404-F1" ref-type="fig">Fig. 1</xref>). During refinement, HOMS-TC first limits the mass-to-charge ratio (<italic toggle="yes">m</italic>/<italic toggle="yes">z</italic>) range and removes peaks outside the given <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> range. Next, low-quality peaks are discarded, including those whose intensity is less than 1% of the most intense peak in the spectrum. Only the <italic toggle="yes">N</italic> most intense peaks are retained, with previous studies (<xref rid="btad404-B27" ref-type="bibr">Lam <italic toggle="yes">et al.</italic> 2007</xref>, <xref rid="btad404-B3" ref-type="bibr">Bittremieux <italic toggle="yes">et al.</italic> 2019</xref>) showing that empirically setting <italic toggle="yes">N</italic> between 50 and 150 effectively eliminates noise. Finally, peak intensities are normalized to further enhance the accuracy of the results.</p>
      <fig position="float" id="btad404-F1">
        <label>Figure 1.</label>
        <caption>
          <p>Spectrum vector representation. Preprocessed spectra are converted to spectrum vectors by binning the <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> range, after which the resulting vectors are compressed using the CSR format.</p>
        </caption>
        <graphic xlink:href="btad404f1" position="float"/>
      </fig>
      <p>To vectorize spectra, the <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> range is discretized, resulting in <italic toggle="yes">spectrum vectors—</italic>sparse vectors of floating-point values (intensities). This is realized by dividing the <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> range into bins and assigning each peak in a spectrum to a bin based on its <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> value. If multiple peaks fall into the same bin, their intensities are summed up. The bin width determines the level of detail in the vectorized spectrum. A larger bin width leads to a loss of information, while a smaller bin width results in a higher dimensionality for the spectrum vector. For instance, if the mass range is <inline-formula id="IE24"><mml:math id="IM24" display="inline" overflow="scroll"><mml:mrow><mml:mn>0</mml:mn><mml:mo>−</mml:mo><mml:mn>2000</mml:mn><mml:mo> </mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:math></inline-formula>/<italic toggle="yes">z</italic> and the bin width is 0.04 Da (based on the mass spectrometer resolution), the spectrum vector would have a dimensionality of 50 000. Note that the current HOMS-TC only supports the Da-level bin width, which is ideal for low-resolution ion traps where <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> errors do not increase with the <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic>.</p>
      <p>Vectorizing spectra produce HD, sparse vectors with a sparsity of around 0.1%, which need to be efficiently represented and stored. To accomplish this, we use the compressed sparse row (CSR) format to compress a matrix of spectrum vectors. <italic toggle="yes">The compressed spectrum vector</italic> consists of three one-dimensional arrays: (i) <monospace>intensity_arr</monospace> contains peak intensities for all spectra, (ii) <monospace>idx_arr</monospace> contains the <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> bin indexes matching intensity values for all spectra, and (iii) <monospace>idx_start_arr</monospace> contains the start indices of each spectrum in the <monospace>intensity_arr</monospace> and <monospace>idx_arr</monospace> arrays. By doing so, only non-zero intensity values are stored, resulting in optimal data reduction, and individual spectra can be accessed efficiently. During preprocessing, library spectra and query spectra are encoded in a similar manner and saved to disk for efficient reuse in subsequent analyses. Note that HOMS-TC splits spectra based on their precursor charge since matched spectra must have the same charge.</p>
    </sec>
    <sec>
      <title>3.2 HV encoding</title>
      <p>In the encoding stage, spectrum vectors are converted to HVs. It captures the <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> values and intensities of peaks and spreads this information over all vector dimensions while also reducing the dimensionality of the original spectrum vectors. The encoding process is illustrated in <xref rid="btad404-F2" ref-type="fig">Fig. 2</xref>. First, the <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> locations of the fragments (<monospace>idx_arr</monospace>) are captured using “position HVs” denoted as <inline-formula id="IE25"><mml:math id="IM25" display="inline" overflow="scroll"><mml:mi mathvariant="bold">P</mml:mi></mml:math></inline-formula>. Each bin index is assigned a unique HV <inline-formula id="IE26"><mml:math id="IM26" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula id="IE27"><mml:math id="IM27" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> corresponds to bin <italic toggle="yes">i</italic> and <inline-formula id="IE28"><mml:math id="IM28" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is a member of the set <inline-formula id="IE29"><mml:math id="IM29" display="inline" overflow="scroll"><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow><mml:mi>f</mml:mi></mml:msub></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>, with <italic toggle="yes">f</italic> being the dimensionality of the spectrum vector. Furthermore, we require that all HVs are orthogonal to each other. Orthogonality helps to ensure that each bin index is represented by a unique position HV, which is important for accurately capturing the <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> locations of fragments in the spectrum. Without orthogonality, it would be difficult to distinguish between different bin indices, which could lead to errors in the search process. To ensure that <inline-formula id="IE30"><mml:math id="IM30" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE31"><mml:math id="IM31" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> are orthogonal for <inline-formula id="IE32"><mml:math id="IM32" display="inline" overflow="scroll"><mml:mrow><mml:mi>i</mml:mi><mml:mo>≠</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:math></inline-formula>, previous works used a permutation-based method (<xref rid="btad404-B35" ref-type="bibr">Salamat <italic toggle="yes">et al.</italic> 2019</xref>, <xref rid="btad404-B36" ref-type="bibr">2020</xref>). However, <inline-formula id="IE33"><mml:math id="IM33" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE34"><mml:math id="IM34" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> can be the same when using a permutation-based method if the dimensionality of the HV (<italic toggle="yes">D</italic>) is smaller than that of the spectrum vectors (<italic toggle="yes">f</italic>), for some <italic toggle="yes">i</italic> and <italic toggle="yes">j</italic>. Instead, each element of the position HV <inline-formula id="IE35"><mml:math id="IM35" display="inline" overflow="scroll"><mml:mi mathvariant="bold">P</mml:mi></mml:math></inline-formula> is randomly generated by drawing it from a normal distribution with mean zero and standard deviation one in HOMS-TC. In this way, <inline-formula id="IE36"><mml:math id="IM36" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE37"><mml:math id="IM37" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> are nearly orthogonal for bin index <italic toggle="yes">i</italic> and <italic toggle="yes">j</italic> where <inline-formula id="IE38"><mml:math id="IM38" display="inline" overflow="scroll"><mml:mrow><mml:mi>i</mml:mi><mml:mo>≠</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:math></inline-formula>. In other words, we can distinguish the position of each peak even when <inline-formula id="IE39"><mml:math id="IM39" display="inline" overflow="scroll"><mml:mrow><mml:mi>f</mml:mi><mml:mo>&gt;</mml:mo><mml:mi>D</mml:mi></mml:mrow></mml:math></inline-formula>.</p>
      <fig position="float" id="btad404-F2">
        <label>Figure 2.</label>
        <caption>
          <p>Encoding spectrum vectors to HVs with <italic toggle="yes">D</italic> dimensions using HDC operations. The peak <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> values are captured by the position HVs <inline-formula id="IE40"><mml:math id="IM40" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. The peak intensity values are quantized and captured by the level HVs <inline-formula id="IE41"><mml:math id="IM41" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">L</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. The spectrum HVs <inline-formula id="IE42"><mml:math id="IM42" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">I</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> are computed using element-wise multiplication between <inline-formula id="IE43"><mml:math id="IM43" display="inline" overflow="scroll"><mml:mi mathvariant="bold">P</mml:mi></mml:math></inline-formula> and <inline-formula id="IE44"><mml:math id="IM44" display="inline" overflow="scroll"><mml:mi mathvariant="bold">L</mml:mi></mml:math></inline-formula>. The encoding stage is accelerated using CUDA cores.</p>
        </caption>
        <graphic xlink:href="btad404f2" position="float"/>
      </fig>
      <p>To capture the peak intensities (<monospace>intensity_arr</monospace>), we use “level HVs.” This involves first uniformly discretizing the peak intensities into a finite set of values. Next, we assign a HV <inline-formula id="IE45"><mml:math id="IM45" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">L</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> to each quantization level <italic toggle="yes">i</italic>, with the number of levels <italic toggle="yes">Q</italic>, where <inline-formula id="IE46"><mml:math id="IM46" display="inline" overflow="scroll"><mml:mrow><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>Q</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE47"><mml:math id="IM47" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">L</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo>∈</mml:mo><mml:mo>{</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">L</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">L</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">L</mml:mi></mml:mrow><mml:mi>Q</mml:mi></mml:msub></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>. Note that the encoder does not use <inline-formula id="IE48"><mml:math id="IM48" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">L</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> since the intensity of a peak is always greater than 0. Here, the assigned HVs <inline-formula id="IE49"><mml:math id="IM49" display="inline" overflow="scroll"><mml:mi mathvariant="bold">L</mml:mi></mml:math></inline-formula> for each level should reflect the similarity of the corresponding intensities, given that intensity is originally continuous. In other words, the similarity between <inline-formula id="IE50"><mml:math id="IM50" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">L</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE51"><mml:math id="IM51" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">L</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> should be greater than that between <inline-formula id="IE52"><mml:math id="IM52" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">L</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE53"><mml:math id="IM53" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">L</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mi>x</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> where <inline-formula id="IE54"><mml:math id="IM54" display="inline" overflow="scroll"><mml:mrow><mml:mi>x</mml:mi><mml:mo>&gt;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>. The flip operation is used to achieve this closeness. To obtain the level HV <inline-formula id="IE55"><mml:math id="IM55" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">L</mml:mi></mml:mrow><mml:mi>q</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> for a target level <italic toggle="yes">p</italic> among a total of <italic toggle="yes">Q</italic> levels, we flip <inline-formula id="IE56"><mml:math id="IM56" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>D</mml:mi><mml:mo>/</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>×</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>q</mml:mi><mml:mo>/</mml:mo><mml:mi>Q</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> elements of <inline-formula id="IE57"><mml:math id="IM57" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">L</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. Note that reflecting intensity similarities using level HVs in this way is robust to changes in peak intensities, e.g. due to experimental variability.</p>
      <p>Finally, given a set of position HVs <inline-formula id="IE58"><mml:math id="IM58" display="inline" overflow="scroll"><mml:mi mathvariant="bold">P</mml:mi></mml:math></inline-formula> and level HVs <inline-formula id="IE59"><mml:math id="IM59" display="inline" overflow="scroll"><mml:mi mathvariant="bold">L</mml:mi></mml:math></inline-formula>, we aggregate peak information in a spectrum into an HV by binding the HVs <inline-formula id="IE60"><mml:math id="IM60" display="inline" overflow="scroll"><mml:mi mathvariant="bold">P</mml:mi></mml:math></inline-formula> and <inline-formula id="IE61"><mml:math id="IM61" display="inline" overflow="scroll"><mml:mi mathvariant="bold">L</mml:mi></mml:math></inline-formula>, which correspond to peak positions and intensities, respectively. In turn, we bundle those results to memorize patterns in a spectrum HV <inline-formula id="IE62"><mml:math id="IM62" display="inline" overflow="scroll"><mml:mi mathvariant="bold">I</mml:mi></mml:math></inline-formula> as follows:
with <inline-formula id="IE63"><mml:math id="IM63" display="inline" overflow="scroll"><mml:mi mathvariant="double-struck">P</mml:mi></mml:math></inline-formula> the set of tuples <inline-formula id="IE64"><mml:math id="IM64" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, where <italic toggle="yes">i</italic> is the peak index and <italic toggle="yes">j</italic> the quantized level of its intensity in the spectrum vector. In this fashion, both the positional information and intensity of each peak are captured and aggregated into the spectrum HV <inline-formula id="IE65"><mml:math id="IM65" display="inline" overflow="scroll"><mml:mi mathvariant="bold">I</mml:mi></mml:math></inline-formula>. A key aspect of the HV representation is its robustness to spectrum variability. For varying peak intensities, only a few elements (fewer than the HV’s dimensionality) in the level HV will change. Hence, the similarity between the HVs of matched reference and query pairs remains stable. Additionally, if peaks are added or removed, the bundling operation used to memorize the peak information in <inline-formula id="IE66"><mml:math id="IM66" display="inline" overflow="scroll"><mml:mi mathvariant="bold">I</mml:mi></mml:math></inline-formula> ensures that the remaining peak information is memorized, and thus the similarity is well-preserved.</p>
      <disp-formula id="E1">
        <label>(1)</label>
        <mml:math id="M1" display="block" overflow="scroll">
          <mml:mrow>
            <mml:mi mathvariant="bold">I</mml:mi>
            <mml:mo>=</mml:mo>
            <mml:mrow>
              <mml:munder>
                <mml:mo>∑</mml:mo>
                <mml:mrow>
                  <mml:mo stretchy="false">(</mml:mo>
                  <mml:mi>i</mml:mi>
                  <mml:mo>,</mml:mo>
                  <mml:mi>j</mml:mi>
                  <mml:mo stretchy="false">)</mml:mo>
                  <mml:mo>∈</mml:mo>
                  <mml:mi mathvariant="double-struck">P</mml:mi>
                </mml:mrow>
              </mml:munder>
            </mml:mrow>
            <mml:mrow>
              <mml:mrow>
                <mml:msub>
                  <mml:mrow>
                    <mml:mi mathvariant="bold">P</mml:mi>
                  </mml:mrow>
                  <mml:mi>i</mml:mi>
                </mml:msub>
              </mml:mrow>
            </mml:mrow>
            <mml:mo>⊗</mml:mo>
            <mml:mrow>
              <mml:msub>
                <mml:mrow>
                  <mml:mi mathvariant="bold">L</mml:mi>
                </mml:mrow>
                <mml:mi>j</mml:mi>
              </mml:msub>
            </mml:mrow>
            <mml:mo>,</mml:mo>
          </mml:mrow>
        </mml:math>
      </disp-formula>
      <p>Unlike the existing HDC encoding method, ID-Level encoding (<xref rid="btad404-B18" ref-type="bibr">Imani <italic toggle="yes">et al.</italic> 2017</xref>), the proposed encoder skips the spectrum vector component with zero values. The capture of these values works as an offset in the HV. Exploiting the sparsity of the spectrum vector reduces the number of additions dramatically. Since there are up to 150 peaks per spectrum (after preprocessing) and 30 000 bins in most cases, the required number of addition is reduced by one or two orders of magnitude.</p>
    </sec>
    <sec>
      <title>3.3 Spectral library search</title>
      <p>HOMS-TC uses a two-step cascade search strategy (<xref rid="btad404-B24" ref-type="bibr">Kertesz-Farkas <italic toggle="yes">et al.</italic> 2015</xref>) to optimize the identification of unmodified and modified peptides while controlling the false discovery rate (FDR). During the first step, unmodified peptides are identified using a small precursor <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> tolerance, while during the second step, a wide precursor <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> tolerance is used to identify modified peptides using OMS. FDRs are computed after each step based on the target-decoy strategy (<xref rid="btad404-B9" ref-type="bibr">Elias and Gygi 2007</xref>). During the first step of the cascade search, FDR calculations proceed in the standard fashion. In contrast, during the second step of the cascade search, a subgroup FDR strategy (<xref rid="btad404-B10" ref-type="bibr">Fu 2012</xref>, <xref rid="btad404-B11" ref-type="bibr">Fu and Qian 2014</xref>) is used to capture variations in the score distributions incurred by different PTMs (<xref rid="btad404-B2" ref-type="bibr">Bittremieux <italic toggle="yes">et al.</italic> 2018</xref>).</p>
      <p><xref rid="btad404-F3" ref-type="fig">Figure 3</xref> illustrates the flow of the spectrum search, including selecting candidates from the spectral library based on the precursor <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> tolerance and the pairwise similarity computations. Both library and query spectra are encoded into HVs, which are used to identify the best match between a query spectrum and a library spectrum based on cosine similarity. Note that we use the same similarity value for two levels. As such, for efficiency, HOMS-TC processes <italic toggle="yes">both levels of the cascade search in parallel</italic> and the accepted identifications are merged at the end. In other words, HOMS-TC overlaps the two levels of cascade search, thereby avoiding redundant computations and maximizing parallelism.</p>
      <fig position="float" id="btad404-F3">
        <label>Figure 3.</label>
        <caption>
          <p>Search stage in HOMS-TC. TCUs and CUDA cores perform similarity computation and search, respectively. Search using two window conditions is done in parallel.</p>
        </caption>
        <graphic xlink:href="btad404f3" position="float"/>
      </fig>
    </sec>
    <sec>
      <title>3.4 Acceleration using GPUs</title>
      <p>Two stages of HOMS-TC are parallelizable using GPUs. The encoding stage can be parallelized across HV dimensions and datapoints as they are independent of each other. It can be implemented in a similar way to existing GPU-based HDC framework (<xref rid="btad404-B21" ref-type="bibr">Kang <italic toggle="yes">et al.</italic> 2022a</xref>,<xref rid="btad404-B22" ref-type="bibr">b</xref>). The CUDA cores in the GPU process the encoding and store spectrum HVs in the GPU global memory. For the encoding stage, HOMS-TC generates HVs for query and reference spectra on-the-fly, not saving the encoded results to the disk. Like other tools, e.g. ANN-SoLo (<xref rid="btad404-B2" ref-type="bibr">Bittremieux <italic toggle="yes">et al.</italic> 2018</xref>, <xref rid="btad404-B3" ref-type="bibr">2019</xref>), the encoded reference HVs can be reused. However, our results show that generating HVs in place is faster due to the data transfer time from the disk to the host memory and from the host memory to GPU memory.</p>
      <p>The search stage consists of score calculation and top-1 reference HV search (<xref rid="btad404-F3" ref-type="fig">Fig. 3</xref>). Here, the score calculation is inherently equivalent to matrix multiplication. Recent GPUs have TCUs that are specialized for such operations, which can be easily used with CUTLASS (<xref rid="btad404-B23" ref-type="bibr">Kerr <italic toggle="yes">et al.</italic> 2022</xref>) or the CUBLAS (<xref rid="btad404-B34" ref-type="bibr">NVIDIA 2022)</xref> application programming interface. By using TCUs to calculate similarity scores, throughput can be maximized. Note that using TCUs does not result in data movements since TCUs and CUDA cores share the same GPU global memory. However, to exploit TCU hardware, several constraints need to be satisfied. First, the HV dimensionality and the batch size need to be multiples of 8. Also, the choice of HV precision is limited. Using half-precision floating-point (FP16) or eight-bit integer (INT8) precision is required. In HOMS-TC, the precision determines the amount of information that the HVs can represent, which can affect search quality. <xref rid="btad404-F4" ref-type="fig">Figure 4</xref> illustrates how HOMS-TC can manage the precision of the encoded HVs. FP16 spectrum HVs can be obtained by using FP16 position HVs. To use INT8 precision for <inline-formula id="IE67"><mml:math id="IM67" display="inline" overflow="scroll"><mml:mi mathvariant="bold">I</mml:mi></mml:math></inline-formula>, we binarize the position HV by taking the sign bit for each component. The level HV is <inline-formula id="IE68"><mml:math id="IM68" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:mrow><mml:mi>D</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>. If there are up to 50 peaks per spectra, each component of the spectrum HV is in the range between <inline-formula id="IE69"><mml:math id="IM69" display="inline" overflow="scroll"><mml:mrow><mml:mo>−</mml:mo><mml:mn>50</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE70"><mml:math id="IM70" display="inline" overflow="scroll"><mml:mrow><mml:mo>+</mml:mo><mml:mn>50</mml:mn></mml:mrow></mml:math></inline-formula>, satisfying the range of INT8 ([−128, 127]). Empirically, we found that INT8 is enough to get sufficient search quality. We discuss the impact of precision in Section 4.3.1.</p>
      <fig position="float" id="btad404-F4">
        <label>Figure 4.</label>
        <caption>
          <p>Various spectrum HV precision used in HOMS-TC. (a) FP32 precision, (b) FP16 precision, and (c) INT8 precision. Depending on the precision, HOMS-TC is run on either CUDA cores or TCUs.</p>
        </caption>
        <graphic xlink:href="btad404f4" position="float"/>
      </fig>
      <p>The top-1 reference HV search part is accelerated using CUDA cores. We use a conventional parallel maximum reduction strategy (<xref rid="btad404-B17" ref-type="bibr">Harris 2007</xref>) while satisfying precursor <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> tolerance conditions. HOMS-TC targets OMS with cascade search; searching with two precursor <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> conditions runs in parallel. Finally, the CPU processes subsequent FDR filtering and merges the results from both levels of the cascade search.</p>
    </sec>
  </sec>
  <sec>
    <title>4 Results</title>
    <sec>
      <title>4.1 Experimental setup</title>
      <sec>
        <title>4.1.1 System configuration</title>
        <p>The evaluation was conducted on a system with an Intel i7-11700K CPU and 64 GB of RAM, and NVIDIA Geforce RTX 4090 with 24 GB of VRAM and fourth-generation TCUs. The HOMS-TC algorithm was implemented on the GPU using a state-of-the-art GPU-based HDC framework (<xref rid="btad404-B21" ref-type="bibr">Kang <italic toggle="yes">et al.</italic> 2022a</xref>,<xref rid="btad404-B22" ref-type="bibr">b</xref>). Due to the limited memory on the GPU, the reference and query data were divided into batches. The batch size was set to use the maximum amount of VRAM available for GPU-based solutions.</p>
      </sec>
      <sec>
        <title>4.1.2 Dataset</title>
        <p>We tested the performance of HOMS-TC on two real-world datasets. The first dataset consists of the iPRG2012 dataset (<xref rid="btad404-B4" ref-type="bibr">Chalkley <italic toggle="yes">et al.</italic> 2014</xref>) with 17 993 query spectra, which was searched against a combined reference library derived from a TripleTOF yeast spectral library (<xref rid="btad404-B37" ref-type="bibr">Selevsek <italic toggle="yes">et al.</italic> 2015</xref>) and a human HCD spectral library compiled by NIST (version 2016/09/12), totaling 1 188 168 library spectra. To create the spectral library, we removed decoy hits from the yeast spectral library and concatenated it to the human HCD spectral library using SpectraST (<xref rid="btad404-B27" ref-type="bibr">Lam <italic toggle="yes">et al.</italic> 2007</xref>). Additionally, duplicates were removed and decoy spectra were added in a 1:1 ratio using the shuffle-and-reposition method (<xref rid="btad404-B28" ref-type="bibr">Lam <italic toggle="yes">et al.</italic> 2010</xref>).</p>
        <p>The second dataset consists of HEK293 data from 24 peak files, with on average 46 715 spectra per file (<xref rid="btad404-B6" ref-type="bibr">Chick <italic toggle="yes">et al.</italic> 2015</xref>). These data were searched against the MassIVE-KB spectral library (version 2017/11/27) (<xref rid="btad404-B41" ref-type="bibr">Wang <italic toggle="yes">et al.</italic> 2018</xref>), which was compiled using repository-scale reprocessing of public human proteomics data on MassIVE, and contains 3 009 902 spectra. Library spectra were processed as described above to remove duplicate spectra and add decoy spectra.</p>
        <p>The query and library spectra were preprocessed using the hyperparameters listed in <xref rid="btad404-T1" ref-type="table">Table 1</xref>. Additionally, low-quality spectra with less than 10 peaks and a 250 <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> mass range were discarded, and peaks within a 0.05 <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> window around the precursor <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> were removed. After preprocessing, there were 15 867 query spectra and 1 162 392 library spectra in the iPRG2012 dataset remaining. For the HEK293 dataset, on average 46 665 query spectra per peak file remained, as well as 2 992 672 library spectra. All MS data, spectral libraries, preprocessed spectra, and identification results are available on the MassIVE repository with the dataset identifier MSV000091183.</p>
        <table-wrap position="float" id="btad404-T1">
          <label>Table 1.</label>
          <caption>
            <p>Parameters used for the evaluation.</p>
          </caption>
          <table frame="hsides" rules="groups">
            <colgroup span="1">
              <col valign="top" align="left" span="1"/>
              <col valign="top" align="center" span="1"/>
              <col valign="top" align="center" span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th rowspan="1" colspan="1"/>
                <th colspan="2" rowspan="1">Dataset<hr/></th>
              </tr>
              <tr>
                <th rowspan="1" colspan="1">Parameter</th>
                <th rowspan="1" colspan="1">iPRG2012</th>
                <th rowspan="1" colspan="1">HEK293</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="1" colspan="1">Max peaks per spectrum</td>
                <td colspan="2" rowspan="1">50</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Min/Max <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic></td>
                <td colspan="2" rowspan="1">101/1500</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Bin size</td>
                <td rowspan="1" colspan="1">0.05 Da</td>
                <td rowspan="1" colspan="1">0.04 Da</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Precursor <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> tolerance (narrow)</td>
                <td rowspan="1" colspan="1">20ppm</td>
                <td rowspan="1" colspan="1">5ppm</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Precursor <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> tolerance (wide)</td>
                <td rowspan="1" colspan="1">500 Da</td>
                <td rowspan="1" colspan="1">500 Da</td>
              </tr>
            </tbody>
          </table>
        </table-wrap>
      </sec>
    </sec>
    <sec>
      <title>4.2 Baselines</title>
      <p>We evaluate HOMS-TC in terms of search quality and speed improvement. Also, we show HOMS-TC performance according to the three key parameters in HDC: HV precision, HV dimensionality, and quantization level. We compare them to those obtained using existing search tools, including the state-of-the-art OMS solution running on GPU, ANN-SoLo GPU v0.3.3 (<xref rid="btad404-B3" ref-type="bibr">Bittremieux <italic toggle="yes">et al.</italic> 2019</xref>), and the CPU-based OMS tools, ANN-SoLo CPU v0.3.3 (<xref rid="btad404-B2" ref-type="bibr">Bittremieux <italic toggle="yes">et al.</italic> 2018</xref>), MSFragger v3.3 (<xref rid="btad404-B26" ref-type="bibr">Kong <italic toggle="yes">et al.</italic> 2017</xref>), and SpectraST v5.0 (<xref rid="btad404-B27" ref-type="bibr">Lam <italic toggle="yes">et al.</italic> 2007</xref>, <xref rid="btad404-B30" ref-type="bibr">Ma and Lam 2014</xref>). For ANN-SoLo, we set the number of clusters (<italic toggle="yes">C</italic>), the number of clusters to visit (<italic toggle="yes">N</italic>), and batch size (<italic toggle="yes">B</italic>) to 512, 128, and 8192, respectively, to fully utilize GPU memory in the HEK293 dataset case. The same <italic toggle="yes">C</italic>, <italic toggle="yes">N</italic>, and <italic toggle="yes">B</italic> are used for all datasets for fair speed comparison. We evaluated all search results at a fixed FDR threshold of 1% using Pyteomics (<xref rid="btad404-B13" ref-type="bibr">Goloborodko <italic toggle="yes">et al.</italic> 2013</xref>). Note that we compare the speed of HOMS-TC to ANN-SoLo only, which is currently the fastest OMS tool. We sum all the execution times for each precursor charge. For the HEK293 dataset, we run the search tool for all query files and compute an average of the runtime. Also, we assume that the preprocessing was done offline, as this only needs to be done once.</p>
    </sec>
    <sec>
      <title>4.3 Impact of HV configuration</title>
      <sec>
        <title>4.3.1 HV precision</title>
        <p>The precision of the HV impacts the amount of information they are able to represent. While limited precision has the advantage that the data can be compressed more efficiently and specific precision such as FP16 and INT8 can enable the use of TCUs, it may reduce the search quality. We evaluate the search quality and the runtime according to the precision of the spectrum HVs, <inline-formula id="IE71"><mml:math id="IM71" display="inline" overflow="scroll"><mml:mi mathvariant="bold">I</mml:mi></mml:math></inline-formula>. Here, we fixed the HV dimension and quantization level to 8192 and 32, respectively. As shown in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S1</xref>, using FP16 or INT8 offers similar search quality to the single-precision floating-point (FP32) case. However, the spectral library search stage in HOMS-TC can be accelerated with TCUs when using FP16 and INT8 spectrum HV. Thanks to the TCU acceleration, using INT8 (FP16) can accelerate the search stage by up to <inline-formula id="IE72"><mml:math id="IM72" display="inline" overflow="scroll"><mml:mrow><mml:mn>3.5</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> (<inline-formula id="IE73"><mml:math id="IM73" display="inline" overflow="scroll"><mml:mrow><mml:mn>2.4</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula>) and the end-to-end HOMS-TC by up to <inline-formula id="IE74"><mml:math id="IM74" display="inline" overflow="scroll"><mml:mrow><mml:mn>2.9</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> (<inline-formula id="IE75"><mml:math id="IM75" display="inline" overflow="scroll"><mml:mrow><mml:mn>2.1</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula>) compared with the FP32 case that uses CUDA cores (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S1</xref>). Since at most 50 peaks exist in our evaluation, we use INT8 precision in HOMS-TC, considering the search quality and performance tradeoff.</p>
      </sec>
      <sec>
        <title>4.3.2 HV dimensionality</title>
        <p>Another important hyperparameter that allows a trade-off between search results and runtime is the HV dimensionality (<italic toggle="yes">D</italic>). Because the time complexity of the cosine similarity calculations is proportional to <italic toggle="yes">D</italic>, a higher dimensionality will lead to increased runtimes (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S2</xref>). In contrast, an overly low dimensionality limits the fidelity with which the HVs can encode the spectral data, negatively impacting the identification performance. We can clearly observe the influence of <italic toggle="yes">D</italic> on the identification performance (<xref rid="sup1" ref-type="supplementary-material">Supplementary Table S2</xref>). Note that we use INT8 HV and 32 quantization level. Optimal identification performance is achieved at high <italic toggle="yes">D</italic>, while the number of identified spectra decreases for lower HV dimensionalities. Therefore, a sufficiently high HV dimensionality is required to achieve a good search quality. We use <inline-formula id="IE76"><mml:math id="IM76" display="inline" overflow="scroll"><mml:mrow><mml:mi>D</mml:mi><mml:mo>=</mml:mo><mml:mn>8192</mml:mn></mml:mrow></mml:math></inline-formula> since search quality is saturated at this value.</p>
      </sec>
      <sec>
        <title>4.3.3 Quantization level</title>
        <p>High quantization levels may not be flexible to the peak intensity changes due to noise and PTMs. A low quantization level leads to low resolution in intensity capturing of the encoder. To observe the impact of <italic toggle="yes">Q</italic>, we fixed <italic toggle="yes">D</italic> to 8192 and HV precision to INT8. We set the quantization level <italic toggle="yes">Q</italic> from 8 to 64 and measured the search quality. As shown in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S3</xref>, the search quality is less sensitive to <italic toggle="yes">Q</italic>. We set the default value for the <italic toggle="yes">Q</italic> to 32.</p>
      </sec>
    </sec>
    <sec>
      <title>4.4 Search quality</title>
      <p>To compare search quality, we count the number of identified spectra after FDR filtering. Note that the high-performing (in general) hyperparameters are used for HOMS-TC: HV precision, HV dimensionality (<italic toggle="yes">D</italic>), and quantization level (<italic toggle="yes">Q</italic>) are set to INT8, 8192, and 32, respectively. For the iPRG2012 dataset, we compare the search results to the consensus identifications from multiple participants of the iPRG2012 study (<xref rid="btad404-B4" ref-type="bibr">Chalkley <italic toggle="yes">et al.</italic> 2014</xref>). The analysis result shows that HOMS-TC is able to correctly identify around 60% of identical spectra of the iPRG2012 consensus results (see <xref rid="btad404-F5" ref-type="fig">Fig. 5a</xref>). Although HOMS-TC identifies slightly fewer spectra than ANN-SoLo, the extra ANN-SoLo identifications predominantly do not match or conflict with the iPRG2012 consensus results, and thus are presumably less reliable.</p>
      <fig position="float" id="btad404-F5">
        <label>Figure 5.</label>
        <caption>
          <p>Comparison of the search quality (the number of unique peptides) of HOMS-TC to baselines visualized with UpSet plot. (a) HOMS-TC versus ANN-SoLo and consensus results on iPRG2012 dataset. (b) HOMS-TC versus baseline identification results on HEK293 dataset.</p>
        </caption>
        <graphic xlink:href="btad404f5" position="float"/>
      </fig>
      <p>Additionally, we compare the search results of HOMS-TC to ANN-SoLo, MSFragger, and SpectraST using the larger HEK293 dataset. As no ground truth is available for the HEK293 dataset, we compare the number of identified spectra and unique identified peptides from HOMS-TC and baseline OMS tools, SpectraST (<xref rid="btad404-B27" ref-type="bibr">Lam <italic toggle="yes">et al.</italic> 2007</xref>, <xref rid="btad404-B30" ref-type="bibr">Ma and Lam 2014</xref>), ANN-SoLo (<xref rid="btad404-B2" ref-type="bibr">Bittremieux <italic toggle="yes">et al.</italic> 2018</xref>, <xref rid="btad404-B3" ref-type="bibr">2019</xref>), and MSFragger (<xref rid="btad404-B26" ref-type="bibr">Kong <italic toggle="yes">et al.</italic> 2017</xref>). The results indicate that HOMS-TC identified a similar number of spectra as SpectraST and MSFragger. Although ANN-SoLo managed to identify more spectra, a significant number of identifications were only unique to ANN-SoLo, while the number of spectra commonly identified by HOMS-TC, ANN-SoLo, and SpectraST was similar (see <xref rid="btad404-F5" ref-type="fig">Fig. 5b</xref>). Meanwhile, a high portion of identifications from MSFragger is unique or conflicting matches compared with ANN-SoLo, SpectraST, and HOMS-TC. MSFragger adopts a different approach to perform OMS, a sequence database search, and it uses a sequence database containing the entire human proteome. These results clearly demonstrate that HOMS-TC achieves a similar spectrum identification performance as alternative spectral library search engines.</p>
      <p><xref rid="btad404-F6" ref-type="fig">Figure 6</xref> shows the possible modifications on the protein sample based on the precursor mass difference of the identified spectra. Specifically, we compute the precursor mass difference, collect only modified peptides, and compare results with the Unimod public database of protein modifications (<xref rid="btad404-B7" ref-type="bibr">Creasy and Cottrell 2004</xref>). For example, for the HEK293 dataset, the mass shift caused by various amino acid substitutions, such as Asn to Ala and Phe to Tyr, was observed. Also, HOMS-TC detected chemical changes such as oxidation, and hydroxylation, as well. The modification, including GlyGly, acetylation, and phosphorylation, was also observed at a lower rate. This implies that HOMS-TC can identify biologically relevant PTMs through the OMS. Note that HOMS-TC does not determine modification identities, but they can be obtained from the precursor mass difference using post-processing tools like PTM-Shepherd (<xref rid="btad404-B12" ref-type="bibr">Geiszler <italic toggle="yes">et al.</italic> 2021</xref>) and AA_stat (<xref rid="btad404-B29" ref-type="bibr">Levitsky <italic toggle="yes">et al.</italic> 2021</xref>).</p>
      <fig position="float" id="btad404-F6">
        <label>Figure 6.</label>
        <caption>
          <p>Precursor mass difference of unique identified peptides from HOMS-TC. Only non-zero precursor mass differences are visualized and the five most frequent modifications are annotated. (a) iPRG2012 dataset. (b) HEK293 dataset.</p>
        </caption>
        <graphic xlink:href="btad404f6" position="float"/>
      </fig>
    </sec>
    <sec>
      <title>4.5 Speed improvement and analysis</title>
      <p>We compare the runtime of HOMS-TC to ANN-SoLo using GPU acceleration (<xref rid="btad404-B3" ref-type="bibr">Bittremieux <italic toggle="yes">et al.</italic> 2019</xref>), which offers the fastest spectral search speed among competing tools. ANN-SoLo first needs to build an index or encode the original data, which can be reused for subsequent processing. For the first run of ANN-SoLo, which includes the reference indexing time, HOMS-TC is <inline-formula id="IE77"><mml:math id="IM77" display="inline" overflow="scroll"><mml:mrow><mml:mn>32</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> faster than ANN-SoLo GPU on average. When indexes are reused on ANN-SoLo, HOMS-TC achieves <inline-formula id="IE78"><mml:math id="IM78" display="inline" overflow="scroll"><mml:mrow><mml:mn>35</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE79"><mml:math id="IM79" display="inline" overflow="scroll"><mml:mrow><mml:mn>28</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> speedup on iPRG2012 and HEK293 dataset, respectively, resulting in <inline-formula id="IE80"><mml:math id="IM80" display="inline" overflow="scroll"><mml:mrow><mml:mn>31</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> speedup on average (geomean) over the baseline (see <xref rid="btad404-T2" ref-type="table">Table 2</xref>). Due to massive parallelization and simplified pipeline, the search stage itself is <inline-formula id="IE81"><mml:math id="IM81" display="inline" overflow="scroll"><mml:mrow><mml:mn>51</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> faster on average. Note that we averaged the execution time of run for each query file on the HEK293 experiment. In other words, HOMS-TC generates the reference HVs for every run in an on-the-fly manner. The baseline tool does not find the most similar spectra directly. Instead, it first reduces the search space and subsequently computes similarity scores, with this final score calculation step amounting to <inline-formula id="IE82"><mml:math id="IM82" display="inline" overflow="scroll"><mml:mrow><mml:mn>53</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> of the total search time on average. In contrast, HOMS-TC performs a one-pass search, leading to a significant speedup. Also, while ANN-SoLo uses CUDA cores with FP16 precision during the candidate selection, the proposed tool utilizes TCUs with lower precision (INT8).</p>
      <table-wrap position="float" id="btad404-T2">
        <label>Table 2.</label>
        <caption>
          <p>HOMS-TC speedup over the state-of-the-art high-performance OMS tool [ANN-SoLo GPU (<xref rid="btad404-B3" ref-type="bibr">Bittremieux <italic toggle="yes">et al.</italic> 2019</xref>)].</p>
        </caption>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th rowspan="1" colspan="1"/>
              <th colspan="2" align="center" rowspan="1">End-to-end (second run)<hr/></th>
              <th colspan="2" align="center" rowspan="1">Reference encoding (indexing)<hr/></th>
            </tr>
            <tr>
              <th rowspan="1" colspan="1"/>
              <th align="center" rowspan="1" colspan="1">iPRG2012</th>
              <th align="center" rowspan="1" colspan="1">HEK293</th>
              <th align="center" rowspan="1" colspan="1">iPRG2012</th>
              <th align="center" rowspan="1" colspan="1">HEK293</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">ANN-SoLo</td>
              <td rowspan="1" colspan="1">72.77s (1<inline-formula id="IE83"><mml:math id="IM83" display="inline" overflow="scroll"><mml:mo>×</mml:mo></mml:math></inline-formula>)</td>
              <td rowspan="1" colspan="1">290.08s (1<inline-formula id="IE84"><mml:math id="IM84" display="inline" overflow="scroll"><mml:mo>×</mml:mo></mml:math></inline-formula>)</td>
              <td rowspan="1" colspan="1">12.01s (1<inline-formula id="IE85"><mml:math id="IM85" display="inline" overflow="scroll"><mml:mo>×</mml:mo></mml:math></inline-formula>)</td>
              <td rowspan="1" colspan="1">20.82s (1<inline-formula id="IE86"><mml:math id="IM86" display="inline" overflow="scroll"><mml:mo>×</mml:mo></mml:math></inline-formula>)</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">HOMS-TC</td>
              <td rowspan="1" colspan="1">2.08s (35<inline-formula id="IE87"><mml:math id="IM87" display="inline" overflow="scroll"><mml:mo>×</mml:mo></mml:math></inline-formula>)</td>
              <td rowspan="1" colspan="1">10.4s (28<inline-formula id="IE88"><mml:math id="IM88" display="inline" overflow="scroll"><mml:mo>×</mml:mo></mml:math></inline-formula>)</td>
              <td rowspan="1" colspan="1">0.95s (12.6<inline-formula id="IE89"><mml:math id="IM89" display="inline" overflow="scroll"><mml:mo>×</mml:mo></mml:math></inline-formula>)</td>
              <td rowspan="1" colspan="1">2.21s (9.4<inline-formula id="IE90"><mml:math id="IM90" display="inline" overflow="scroll"><mml:mo>×</mml:mo></mml:math></inline-formula>)</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <fn id="tblfn1">
            <p>In the HEK293 experiment, the runtime was averaged over the execution of each query file.</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
      <p>Meanwhile, as spectral libraries are continuously growing, their efficient indexing of them is significant. HOMS-TC improves the indexing time by parallelizing across HV dimensions and datapoints, which can be accelerated with GPUs. As shown in <xref rid="btad404-T2" ref-type="table">Table 2</xref>, the encoding of reference spectra using HOMS-TC shows <inline-formula id="IE91"><mml:math id="IM91" display="inline" overflow="scroll"><mml:mrow><mml:mn>10.9</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> speedup on average compared with the baseline. Note that the encoding of new datapoints in HOMS-TC is independent of previous data, which can be easily parallelized.</p>
      <p>According to the profiling results, we found that during the encoding stage and the search stage, <inline-formula id="IE92"><mml:math id="IM92" display="inline" overflow="scroll"><mml:mrow><mml:mn>70</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> of the CUDA core and <inline-formula id="IE93"><mml:math id="IM93" display="inline" overflow="scroll"><mml:mrow><mml:mn>95.01</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> of the TCU were utilized, respectively. The entire HOMS-TC process was executed on GPUs, resulting in high hardware utilization when compared with ANN-SoLo GPU (<xref rid="btad404-B3" ref-type="bibr">Bittremieux <italic toggle="yes">et al.</italic> 2019</xref>), which only utilizes GPUs for the nearest neighbor search step. <xref rid="btad404-F7" ref-type="fig">Figure 7</xref> illustrates the breakdown of HOMS-TC by stage. The miscellaneous section includes the time taken for GPU memory allocation and memory copying from the CPU (host) to the GPU.</p>
      <fig position="float" id="btad404-F7">
        <label>Figure 7.</label>
        <caption>
          <p>HOMS-TC runtime breakdown by stage. On larger datasets, the portion of the search stage increases.</p>
        </caption>
        <graphic xlink:href="btad404f7" position="float"/>
      </fig>
      <p>The encoding of query spectra has a low impact on the overall runtime, accounting for only <inline-formula id="IE94"><mml:math id="IM94" display="inline" overflow="scroll"><mml:mrow><mml:mn>1.5</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> of the total execution time on average. The search stage’s contribution to the total runtime increases from <inline-formula id="IE95"><mml:math id="IM95" display="inline" overflow="scroll"><mml:mrow><mml:mn>51</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> to <inline-formula id="IE96"><mml:math id="IM96" display="inline" overflow="scroll"><mml:mrow><mml:mn>73</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> in the HEK293 dataset. Encoding reference spectra takes up <inline-formula id="IE97"><mml:math id="IM97" display="inline" overflow="scroll"><mml:mrow><mml:mn>33</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> of the total runtime on average. HOMS-TC encodes the reference spectra on-the-fly, but this can be minimized when reference HVs are reused, like the HEK293 dataset that shares the same reference database for multiple query files.</p>
    </sec>
    <sec>
      <title>4.6 Discussion and future work</title>
      <p>In order to further improve the search quality, an advanced encoding method that takes into account other OMS characteristics can be developed. One potential approach is to use population-based discretization of peak intensities, similar to MyriMatch (<xref rid="btad404-B40" ref-type="bibr">Tabb <italic toggle="yes">et al.</italic> 2007</xref>), to generate level HVs. Additionally, we can consider various peak changes resulting from PTMs, such as peak shifts during the encoding.</p>
      <p>Two approaches can accelerate HOMS-TC further. First, since the search stage is mainly handled by TCUs, we expect that a future GPU with the next-generation TCU can enhance the performance of our tool. For example, when compared with HOMS-TC running on NVIDIA Geforce RTX 3090 with previous (third) generation TCU, we can get <inline-formula id="IE98"><mml:math id="IM98" display="inline" overflow="scroll"><mml:mrow><mml:mn>1.8</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> speedup on the search stage using the latest GPU used in the evaluation. Secondly, we can scale HOMS-TC to multiple GPUs. We have demonstrated the spectral library search acceleration on a single GPU in this article, and it runs in a batched manner due to memory capacity limitation and limited TCUs. Exploiting multiple GPUs with TCUs can offer more parallelism and lead to execution time reduction; this remains our future work.</p>
    </sec>
  </sec>
  <sec>
    <title>5 Conclusion</title>
    <p>In this article, we proposed an HDC-based OMS solution accelerated with TCUs dubbed HOMS-TC. HOMS-TC encodes spectra into HVs that reflect the position and intensity of peaks and are tolerant to peak intensity changes. We enable OMS in one shot. Every dimension of the HVs can be computed independently, which makes the algorithm easily parallelizable. As HOMS-TC employs a simplified OMS pipeline and cosine similarity metric with reduced precision, the algorithm can be accelerated with TCUs. In addition, our proposed encoding method achieves <inline-formula id="IE99"><mml:math id="IM99" display="inline" overflow="scroll"><mml:mrow><mml:mn>10.9</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> speedup on average, which implies that HOMS-TC can effectively handle the constantly growing spectral libraries. The evaluation results show that HOMS-TC offers comparable search quality to existing OMS tools, with <inline-formula id="IE100"><mml:math id="IM100" display="inline" overflow="scroll"><mml:mrow><mml:mn>31</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> faster execution time on average compared with the state-of-the-art tool running on GPU.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>btad404_Supplementary_Data</label>
      <media xlink:href="btad404_supplementary_data.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack id="ack1">
    <title>Acknowledgements</title>
    <p>We thank Ameen Akel, Justin Eno, and Ken Curewitz at Micron Technology for their valuable comments on the performance profiling.</p>
  </ack>
  <sec>
    <title>Supplementary data</title>
    <p><xref rid="sup1" ref-type="supplementary-material">Supplementary data</xref> are available at <italic toggle="yes">Bioinformatics</italic> online.</p>
  </sec>
  <sec sec-type="COI-statement">
    <title>Conflict of interest</title>
    <p>None declared.</p>
  </sec>
  <sec>
    <title>Funding</title>
    <p>This work was supported by Processing with Intelligent Storage and Memory (PRISM) and Center for the Co-Design of Cognitive Systems (CoCoSys), centers in Joint University Microelectronics Program (JUMP) 2.0 Semiconductor Research Corporation (SRC) Global Research Collaboration (GRC) grant; and National Science Foundation (NSF) grants [1826967, 1911095, 2052809, 2112665, 2112167, and 2100237].</p>
  </sec>
  <sec sec-type="data-availability">
    <title>Data availability</title>
    <p>The data underlying this article will be shared on reasonable request to the corresponding author.</p>
  </sec>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btad404-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bittremieux</surname><given-names>W.</given-names></string-name></person-group><article-title>Spectrum_utils: a python package for mass spectrometry data processing and visualization</article-title>. <source>Anal Chem</source><year>2020</year>;<volume>92</volume>:<fpage>659</fpage>–<lpage>61</lpage>.<pub-id pub-id-type="pmid">31809021</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bittremieux</surname><given-names>W</given-names></string-name>, <string-name><surname>Meysman</surname><given-names>P</given-names></string-name>, <string-name><surname>Noble</surname><given-names>WS</given-names></string-name></person-group><etal>et al</etal><article-title>Fast open modification spectral library searching through approximate nearest neighbor indexing</article-title>. <source>J Proteome Res</source><year>2018</year>;<volume>17</volume>:<fpage>3463</fpage>–<lpage>74</lpage>.<pub-id pub-id-type="pmid">30184435</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bittremieux</surname><given-names>W</given-names></string-name>, <string-name><surname>Laukens</surname><given-names>K</given-names></string-name>, <string-name><surname>Noble</surname><given-names>WS</given-names></string-name></person-group><etal>et al</etal><article-title>Extremely fast and accurate open modification spectral library searching of high-resolution mass spectra using feature hashing and graphics processing units</article-title>. <source>J Proteome Res</source><year>2019</year>;<volume>18</volume>:<fpage>3792</fpage>–<lpage>9</lpage>.<pub-id pub-id-type="pmid">31448616</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chalkley</surname><given-names>RJ</given-names></string-name>, <string-name><surname>Bandeira</surname><given-names>N</given-names></string-name>, <string-name><surname>Chambers</surname><given-names>MC</given-names></string-name></person-group><etal>et al</etal><article-title>Proteome informatics research group (iPRG)_2012: a study on detecting modified peptides in a complex mixture</article-title>. <source>Mol Cell Proteomics</source><year>2014</year>;<volume>13</volume>:<fpage>360</fpage>–<lpage>71</lpage>.<pub-id pub-id-type="pmid">24187338</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chi</surname><given-names>H</given-names></string-name>, <string-name><surname>Liu</surname><given-names>C</given-names></string-name>, <string-name><surname>Yang</surname><given-names>H</given-names></string-name></person-group><etal>et al</etal><article-title>Comprehensive identification of peptides in tandem mass spectra using an efficient open search engine</article-title>. <source>Nat Biotechnol</source><year>2018</year>;<volume>36</volume>:<fpage>1059</fpage>–<lpage>61</lpage>.</mixed-citation>
    </ref>
    <ref id="btad404-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chick</surname><given-names>JM</given-names></string-name>, <string-name><surname>Kolippakkam</surname><given-names>D</given-names></string-name>, <string-name><surname>Nusinow</surname><given-names>DP</given-names></string-name></person-group><etal>et al</etal><article-title>A mass-tolerant database search identifies a large proportion of unassigned spectra in shotgun proteomics as modified peptides</article-title>. <source>Nat Biotechnol</source><year>2015</year>;<volume>33</volume>:<fpage>743</fpage>–<lpage>9</lpage>.<pub-id pub-id-type="pmid">26076430</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Creasy</surname><given-names>DM</given-names></string-name>, <string-name><surname>Cottrell</surname><given-names>JS.</given-names></string-name></person-group><article-title>Unimod: protein modifications for mass spectrometry</article-title>. <source>Proteomics</source><year>2004</year>;<volume>4</volume>:<fpage>1534</fpage>–<lpage>6</lpage>.<pub-id pub-id-type="pmid">15174123</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Devabhaktuni</surname><given-names>A</given-names></string-name>, <string-name><surname>Lin</surname><given-names>S</given-names></string-name>, <string-name><surname>Zhang</surname><given-names>L</given-names></string-name></person-group><etal>et al</etal><article-title>TagGraph reveals vast protein modification landscapes from large tandem mass spectrometry datasets</article-title>. <source>Nat Biotechnol</source><year>2019</year>;<volume>37</volume>:<fpage>469</fpage>–<lpage>79</lpage>.<pub-id pub-id-type="pmid">30936560</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Elias</surname><given-names>JE</given-names></string-name>, <string-name><surname>Gygi</surname><given-names>SP.</given-names></string-name></person-group><article-title>Target-decoy search strategy for increased confidence in large-scale protein identifications by mass spectrometry</article-title>. <source>Nat Methods</source><year>2007</year>;<volume>4</volume>:<fpage>207</fpage>–<lpage>14</lpage>.<pub-id pub-id-type="pmid">17327847</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Fu</surname><given-names>Y.</given-names></string-name></person-group><article-title>Bayesian false discovery rates for post-translational modification proteomics</article-title>. <source>Stat Interface</source><year>2012</year>;<volume>5</volume>:<fpage>47</fpage>–<lpage>59</lpage>.</mixed-citation>
    </ref>
    <ref id="btad404-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Fu</surname><given-names>Y</given-names></string-name>, <string-name><surname>Qian</surname><given-names>X.</given-names></string-name></person-group><article-title>Transferred subgroup false discovery rate for rare post-translational modifications detected by mass spectrometry</article-title>. <source>Mol Cell Proteomics</source><year>2014</year>;<volume>13</volume>:<fpage>1359</fpage>–<lpage>68</lpage>.<pub-id pub-id-type="pmid">24200586</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Geiszler</surname><given-names>DJ</given-names></string-name>, <string-name><surname>Kong</surname><given-names>AT</given-names></string-name>, <string-name><surname>Avtonomov</surname><given-names>DM</given-names></string-name></person-group><etal>et al</etal><article-title>PTM-shepherd: analysis and summarization of post-translational and chemical modifications from open search results</article-title>. <source>Mol Cell Proteomics</source><year>2021</year>;<volume>20</volume>:<fpage>100018</fpage>.<pub-id pub-id-type="pmid">33568339</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Goloborodko</surname><given-names>AA</given-names></string-name>, <string-name><surname>Levitsky</surname><given-names>LI</given-names></string-name>, <string-name><surname>Ivanov</surname><given-names>MV</given-names></string-name></person-group><etal>et al</etal><article-title>Pyteomics—a python framework for exploratory data analysis and rapid software prototyping in proteomics</article-title>. <source>J Am Soc Mass Spectrom</source><year>2013</year>;<volume>24</volume>:<fpage>301</fpage>–<lpage>4</lpage>.<pub-id pub-id-type="pmid">23292976</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Griss</surname><given-names>J.</given-names></string-name></person-group><article-title>Spectral library searching in proteomics</article-title>. <source>Proteomics</source><year>2016</year>;<volume>16</volume>:<fpage>729</fpage>–<lpage>40</lpage>.<pub-id pub-id-type="pmid">26616598</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Griss</surname><given-names>J</given-names></string-name>, <string-name><surname>Foster</surname><given-names>JM</given-names></string-name>, <string-name><surname>Hermjakob</surname><given-names>H</given-names></string-name></person-group><etal>et al</etal><article-title>PRIDE cluster: building a consensus of proteomics data</article-title>. <source>Nat Methods</source><year>2013</year>;<volume>10</volume>:<fpage>95</fpage>–<lpage>6</lpage>.<pub-id pub-id-type="pmid">23361086</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Griss</surname><given-names>J</given-names></string-name>, <string-name><surname>Perez-Riverol</surname><given-names>Y</given-names></string-name>, <string-name><surname>Lewis</surname><given-names>S</given-names></string-name></person-group><etal>et al</etal><article-title>Recognizing millions of consistently unidentified spectra across hundreds of shotgun proteomics datasets</article-title>. <source>Nat Methods</source><year>2016</year>;<volume>13</volume>:<fpage>651</fpage>–<lpage>6</lpage>.<pub-id pub-id-type="pmid">27493588</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B17">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Harris</surname><given-names>M.</given-names></string-name></person-group><source>Optimizing Parallel Reduction in CUDA</source>. <publisher-name>NVIDIA Developer Technology</publisher-name>, <year>2007</year>.</mixed-citation>
    </ref>
    <ref id="btad404-B18">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Imani</surname><given-names>M</given-names></string-name>, <string-name><surname>Kong</surname><given-names>D</given-names></string-name>, <string-name><surname>Rahimi</surname><given-names>A</given-names></string-name></person-group><etal>et al</etal> Voicehd: Hyperdimensional computing for efficient speech recognition. In: <italic toggle="yes">2017 IEEE International Conference on Rebooting Computing (ICRC</italic>), IEEE, <year>2017</year>, <fpage>1</fpage>–<lpage>8</lpage>.</mixed-citation>
    </ref>
    <ref id="btad404-B19">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Kanerva</surname><given-names>P.</given-names></string-name></person-group><year>1988</year>. <source>Sparse Distributed Memory</source>. <publisher-name>MIT Press</publisher-name>.</mixed-citation>
    </ref>
    <ref id="btad404-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kanerva</surname><given-names>P.</given-names></string-name></person-group><article-title>Hyperdimensional computing: an introduction to computing in distributed representation with high-dimensional random vectors</article-title>. <source>Cogn Comput</source><year>2009</year>;<volume>1</volume>:<fpage>139</fpage>–<lpage>59</lpage>.</mixed-citation>
    </ref>
    <ref id="btad404-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kang</surname><given-names>J</given-names></string-name>, <string-name><surname>Khaleghi</surname><given-names>B</given-names></string-name>, <string-name><surname>Rosing</surname><given-names>T</given-names></string-name></person-group><etal>et al</etal><article-title>OpenHD: a GPU-powered framework for hyperdimensional computing</article-title>. <source>IEEE Trans Comput</source><year>2022a</year>;<volume>71</volume>:<fpage>2753</fpage>–<lpage>65</lpage>.</mixed-citation>
    </ref>
    <ref id="btad404-B22">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Kang</surname><given-names>J</given-names></string-name></person-group><etal>et al</etal> Xcelhd: an efficient GPU-powered hyperdimensional computing with parallelized training. In <italic toggle="yes">2022 27th Asia and South Pacific Design Automation Conference (ASP-DAC)</italic>, <year>2022b</year>, <fpage>220</fpage>–<lpage>5</lpage>.</mixed-citation>
    </ref>
    <ref id="btad404-B23">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Kerr</surname><given-names>A</given-names></string-name></person-group><etal>et al</etal><year>2022</year>. <source>CUTLASS</source>, NVIDIA. <ext-link xlink:href="https://www.nvidia.com/en-us/on-demand/session/gtcsiliconvalley2018-s8854/" ext-link-type="uri">https://www.nvidia.com/en-us/on-demand/session/gtcsiliconvalley2018-s8854/</ext-link>.</mixed-citation>
    </ref>
    <ref id="btad404-B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kertesz-Farkas</surname><given-names>A</given-names></string-name>, <string-name><surname>Keich</surname><given-names>U</given-names></string-name>, <string-name><surname>Noble</surname><given-names>WS</given-names></string-name></person-group><etal>et al</etal><article-title>Tandem mass spectrum identification via cascaded search</article-title>. <source>J Proteome Res</source><year>2015</year>;<volume>14</volume>:<fpage>3027</fpage>–<lpage>38</lpage>.<pub-id pub-id-type="pmid">26084232</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B25">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Kim</surname><given-names>Y</given-names></string-name></person-group><etal>et al</etal> Geniehd: efficient DNA pattern matching accelerator using hyperdimensional computing. In <italic toggle="yes">2020 Design, Automation &amp; Test in Europe Conference &amp; Exhibition (DATE)</italic>, IEEE, <year>2020</year>, <fpage>115</fpage>–<lpage>20</lpage>.</mixed-citation>
    </ref>
    <ref id="btad404-B26">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kong</surname><given-names>AT</given-names></string-name>, <string-name><surname>Leprevost</surname><given-names>FV</given-names></string-name>, <string-name><surname>Avtonomov</surname><given-names>DM</given-names></string-name></person-group><etal>et al</etal><article-title>MSFragger: ultrafast and comprehensive peptide identification in mass spectrometry-based proteomics</article-title>. <source>Nat Methods</source><year>2017</year>;<volume>14</volume>:<fpage>513</fpage>–<lpage>20</lpage>.<pub-id pub-id-type="pmid">28394336</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B27">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lam</surname><given-names>H</given-names></string-name>, <string-name><surname>Deutsch</surname><given-names>EW</given-names></string-name>, <string-name><surname>Eddes</surname><given-names>JS</given-names></string-name></person-group><etal>et al</etal><article-title>Development and validation of a spectral library searching method for peptide identification from MS/MS</article-title>. <source>Proteomics</source><year>2007</year>;<volume>7</volume>:<fpage>655</fpage>–<lpage>67</lpage>.<pub-id pub-id-type="pmid">17295354</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B28">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lam</surname><given-names>H</given-names></string-name>, <string-name><surname>Deutsch</surname><given-names>EW</given-names></string-name>, <string-name><surname>Aebersold</surname><given-names>R</given-names></string-name></person-group><etal>et al</etal><article-title>Artificial decoy spectral libraries for false discovery rate estimation in spectral library searching in proteomics</article-title>. <source>J Proteome Res</source><year>2010</year>;<volume>9</volume>:<fpage>605</fpage>–<lpage>10</lpage>.<pub-id pub-id-type="pmid">19916561</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B29">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Levitsky</surname><given-names>LI</given-names></string-name>, <string-name><surname>Bubis</surname><given-names>JA</given-names></string-name>, <string-name><surname>Gorshkov</surname><given-names>MV</given-names></string-name></person-group><etal>et al</etal><article-title>Aa_stat: intelligent profiling of in vivo and in vitro modifications from open search results</article-title>. <source>J Proteomics</source><year>2021</year>;<volume>248</volume>:<fpage>104350</fpage>.<pub-id pub-id-type="pmid">34389500</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B30">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ma</surname><given-names>CWM</given-names></string-name>, <string-name><surname>Lam</surname><given-names>H.</given-names></string-name></person-group><article-title>Hunting for unexpected post-translational modifications by spectral library searching with tier-wise scoring</article-title>. <source>J Proteome Res</source><year>2014</year>;<volume>13</volume>:<fpage>2262</fpage>–<lpage>71</lpage>.<pub-id pub-id-type="pmid">24661115</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B31">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Martens</surname><given-names>L</given-names></string-name>, <string-name><surname>Hermjakob</surname><given-names>H</given-names></string-name>, <string-name><surname>Jones</surname><given-names>P</given-names></string-name></person-group><etal>et al</etal><article-title>Pride: the proteomics identifications database</article-title>. <source>Proteomics</source><year>2005</year>;<volume>5</volume>:<fpage>3537</fpage>–<lpage>45</lpage>.<pub-id pub-id-type="pmid">16041671</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B32">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Messner</surname><given-names>CB</given-names></string-name>, <string-name><surname>Demichev</surname><given-names>V</given-names></string-name>, <string-name><surname>Bloomfield</surname><given-names>N</given-names></string-name></person-group><etal>et al</etal><article-title>Ultra-fast proteomics with scanning swath</article-title>. <source>Nat Biotechnol</source><year>2021</year>;<volume>39</volume>:<fpage>846</fpage>–<lpage>54</lpage>.<pub-id pub-id-type="pmid">33767396</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B33">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Neubert</surname><given-names>P</given-names></string-name>, <string-name><surname>Schubert</surname><given-names>S.</given-names></string-name></person-group> Hyperdimensional computing as a framework for systematic aggregation of image descriptors. In: <italic toggle="yes">Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, Nashville, TN</italic>, <year>2021</year>, <fpage>16938</fpage>–<lpage>47</lpage>.</mixed-citation>
    </ref>
    <ref id="btad404-B34">
      <mixed-citation publication-type="other"><collab>NVIDIA</collab>. <italic toggle="yes">Basic linear algebra on nvidia gpus</italic>, <year>2022</year>. <ext-link xlink:href="https://developer.nvidia.com/cublas" ext-link-type="uri">https://developer.nvidia.com/cublas</ext-link>.</mixed-citation>
    </ref>
    <ref id="btad404-B35">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Salamat</surname><given-names>S</given-names></string-name></person-group><etal>et al</etal> F5-hd: Fast flexible FPGA-based framework for refreshing hyperdimensional computing. In <italic toggle="yes">Proceedings of the 2019 ACM/SIGDA International Symposium on Field-Programmable Gate Arrays</italic>, ACM, <year>2019</year>, <fpage>53</fpage>–<lpage>62</lpage>.</mixed-citation>
    </ref>
    <ref id="btad404-B36">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Salamat</surname><given-names>S</given-names></string-name>, <string-name><surname>Imani</surname><given-names>M</given-names></string-name>, <string-name><surname>Rosing</surname><given-names>T</given-names></string-name></person-group><etal>et al</etal><article-title>Accelerating hyperdimensional computing on FPGAs by exploiting computational reuse</article-title>. <source>IEEE Trans Comput</source><year>2020</year>;<volume>69</volume>:<fpage>1159</fpage>–<lpage>71</lpage>.</mixed-citation>
    </ref>
    <ref id="btad404-B37">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Selevsek</surname><given-names>N</given-names></string-name>, <string-name><surname>Chang</surname><given-names>C-Y</given-names></string-name>, <string-name><surname>Gillet</surname><given-names>LC</given-names></string-name></person-group><etal>et al</etal><article-title>Reproducible and consistent quantification of the saccharomyces cerevisiae proteome by SWATH-mass spectrometry</article-title>. <source>Mol Cell Proteomics</source><year>2015</year>;<volume>14</volume>:<fpage>739</fpage>–<lpage>49</lpage>.<pub-id pub-id-type="pmid">25561506</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B38">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Shao</surname><given-names>W</given-names></string-name>, <string-name><surname>Lam</surname><given-names>H.</given-names></string-name></person-group><article-title>Tandem mass spectral libraries of peptides and their roles in proteomics research</article-title>. <source>Mass Spectrom Rev</source><year>2017</year>;<volume>36</volume>:<fpage>634</fpage>–<lpage>48</lpage>.<pub-id pub-id-type="pmid">27403644</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B39">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Solntsev</surname><given-names>SK</given-names></string-name>, <string-name><surname>Shortreed</surname><given-names>MR</given-names></string-name>, <string-name><surname>Frey</surname><given-names>BL</given-names></string-name></person-group><etal>et al</etal><article-title>Enhanced global post-translational modification discovery with metamorpheus</article-title>. <source>J Proteome Res</source><year>2018</year>;<volume>17</volume>:<fpage>1844</fpage>–<lpage>51</lpage>.<pub-id pub-id-type="pmid">29578715</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B40">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Tabb</surname><given-names>DL</given-names></string-name>, <string-name><surname>Fernando</surname><given-names>CG</given-names></string-name>, <string-name><surname>Chambers</surname><given-names>MC</given-names></string-name></person-group><etal>et al</etal><article-title>Myrimatch: highly accurate tandem mass spectral peptide identification by multivariate hypergeometric analysis</article-title>. <source>J Proteome Res</source><year>2007</year>;<volume>6</volume>:<fpage>654</fpage>–<lpage>61</lpage>.<pub-id pub-id-type="pmid">17269722</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B41">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wang</surname><given-names>M</given-names></string-name>, <string-name><surname>Wang</surname><given-names>J</given-names></string-name>, <string-name><surname>Carver</surname><given-names>J</given-names></string-name></person-group><etal>et al</etal><article-title>Assembling the community-scale discoverable human proteome</article-title>. <source>Cell Syst</source><year>2018</year>;<volume>7</volume>:<fpage>412</fpage>–<lpage>21.e5</lpage>.<pub-id pub-id-type="pmid">30172843</pub-id></mixed-citation>
    </ref>
    <ref id="btad404-B42">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Xu</surname><given-names>W</given-names></string-name></person-group><etal>et al</etal> A near-storage framework for boosted data preprocessing of mass spectrum clustering. In: <italic toggle="yes">Proceedings of the 59th ACM/IEEE Design Automation Conference</italic>, DAC ’22, New York, NY: Association for Computing Machinery, <year>2022</year>, <fpage>313</fpage>–<lpage>8</lpage>.</mixed-citation>
    </ref>
    <ref id="btad404-B43">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Zou</surname><given-names>Z</given-names></string-name></person-group><etal>et al</etal> BioHD: an efficient genome sequence search platform using hyperdimensional memorization. In: <italic toggle="yes">Proceedings of the 49th Annual International Symposium on Computer Architecture, New York, NY</italic>, <year>2022</year>, <fpage>656</fpage>–<lpage>69</lpage>.</mixed-citation>
    </ref>
  </ref-list>
</back>

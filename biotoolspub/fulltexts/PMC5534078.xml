<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Syst Biol</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Syst Biol</journal-id>
    <journal-title-group>
      <journal-title>BMC Systems Biology</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1752-0509</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">5534078</article-id>
    <article-id pub-id-type="publisher-id">449</article-id>
    <article-id pub-id-type="doi">10.1186/s12918-017-0449-6</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Snoopy’s hybrid simulator: a tool to construct and simulate hybrid biological models</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" equal-contrib="yes">
        <name>
          <surname>Herajy</surname>
          <given-names>Mostafa</given-names>
        </name>
        <address>
          <email>mherajy@sci.psu.edu.eg</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes" equal-contrib="yes">
        <name>
          <surname>Liu</surname>
          <given-names>Fei</given-names>
        </name>
        <address>
          <email>feiliu@scut.edu.cn</email>
        </address>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Rohr</surname>
          <given-names>Christian</given-names>
        </name>
        <address>
          <email>christian.rohr@b-tu.de</email>
        </address>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Heiner</surname>
          <given-names>Monika</given-names>
        </name>
        <address>
          <email>monika.heiner@b-tu.de</email>
        </address>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0004 0578 4430</institution-id><institution-id institution-id-type="GRID">grid.440879.6</institution-id><institution>Department of Mathematics and Computer Science, </institution><institution>Faculty of Science, Port Said University, </institution></institution-wrap>Port Said, 42521 Egypt </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0004 1764 3838</institution-id><institution-id institution-id-type="GRID">grid.79703.3a</institution-id><institution/><institution>School of Software Engineering, South China University of Technology, </institution></institution-wrap>Guangzhou, 510006 People’s Republic of China </aff>
      <aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 2188 0404</institution-id><institution-id institution-id-type="GRID">grid.8842.6</institution-id><institution>Computer Science Institute, </institution><institution>Brandenburg University of Technology, </institution></institution-wrap>Cottbus, 10 13 44 Germany </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>28</day>
      <month>7</month>
      <year>2017</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>28</day>
      <month>7</month>
      <year>2017</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2017</year>
    </pub-date>
    <volume>11</volume>
    <elocation-id>71</elocation-id>
    <history>
      <date date-type="received">
        <day>1</day>
        <month>2</month>
        <year>2017</year>
      </date>
      <date date-type="accepted">
        <day>19</day>
        <month>7</month>
        <year>2017</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2017</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold> This article is distributed under the terms of the Creative Commons Attribution 4.0 International License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The Creative Commons Public Domain Dedication waiver(<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p>Hybrid simulation of (computational) biochemical reaction networks, which combines stochastic and deterministic dynamics, is an important direction to tackle future challenges due to complex and multi-scale models. Inherently hybrid computational models of biochemical networks entail two time scales: fast and slow. Therefore, it is intricate to efficiently and accurately analyse them using only either deterministic or stochastic simulation. However, there are only a few software tools that support such an approach. These tools are often limited with respect to the number as well as the functionalities of the provided hybrid simulation algorithms.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>We present Snoopy’s hybrid simulator, an efficient hybrid simulation software which builds on Snoopy, a tool to construct and simulate Petri nets. Snoopy’s hybrid simulator provides a wide range of state-of-the-art hybrid simulation algorithms. Using this tool, a computational model of biochemical networks can be constructed using a (coloured) hybrid Petri net’s graphical notations, or imported from other compatible formats (e.g. SBML), and afterwards executed via dynamic or static hybrid simulation.</p>
      </sec>
      <sec>
        <title>Conclusion</title>
        <p>Snoopy’s hybrid simulator is a platform-independent tool providing an accurate and efficient simulation of hybrid (biological) models. It can be downloaded free of charge as part of Snoopy from <ext-link ext-link-type="uri" xlink:href="http://www-dssz.informatik.tu-cottbus.de/DSSZ/Software/Snoopy">http://www-dssz.informatik.tu-cottbus.de/DSSZ/Software/Snoopy</ext-link>.</p>
      </sec>
      <sec>
        <title>Electronic supplementary material</title>
        <p>The online version of this article (doi:10.1186/s12918-017-0449-6) contains supplementary material, which is available to authorized users.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Hybrid simulation</kwd>
      <kwd>Hybrid Petri nets</kwd>
      <kwd>Hybrid biological models</kwd>
      <kwd>Snoopy</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100001809</institution-id>
            <institution>National Natural Science Foundation of China</institution>
          </institution-wrap>
        </funding-source>
        <award-id>61273226</award-id>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2017</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p>In order to study the dynamics of biological models, a simulation procedure is usually employed to emulate reaction firings. A vector representing the state of a system serves to track the species concentrations and/or the corresponding number of molecules as the simulation advances with respect to time. The chosen simulation procedure determines how the system state vector is updated as well as the progression of the simulation time. There are various approaches to capture reaction firings as well as their effects on the system state. However, all available algorithms can be grouped into four categories: stochastic, approximate stochastic, deterministic, and hybrid simulation approaches [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR2">2</xref>].</p>
    <p>Stochastic simulation methods [<xref ref-type="bibr" rid="CR2">2</xref>–<xref ref-type="bibr" rid="CR4">4</xref>] consider reaction firings as a random process and each reaction is executed individually. Therefore, stochastic simulation is very accurate compared to approximate approaches (e.g., approximate stochastic methods and deterministic ones). However stochastic simulation algorithms (SSA) are often referred to as computationally inefficient as they may consume much runtime to accomplish the discrete and individual firing of reactions. They can be used to simulate models with a moderate amount of reactions that do not fire too frequently, since, increasing the number of reactions could at the same time increase the number of stochastic events. As an improvement of the exact stochastic simulation, approximate stochastic simulation algorithms [<xref ref-type="bibr" rid="CR5">5</xref>] group and fire multiple reactions at every step. Thus, they can save considerable runtime. Nevertheless, they will still require rather expensive computations.</p>
    <p>On the contrary, deterministic simulation offers a completely different approach by considering reaction firing as a deterministic process which approximates reaction firings by constructing a system of ordinary differential equations (ODEs) or by using other approximation techniques (e.g., see [<xref ref-type="bibr" rid="CR6">6</xref>]). Although deterministic simulation is computationally efficient, the results are not accurate for all kinds of computational models of biochemical reaction networks [<xref ref-type="bibr" rid="CR2">2</xref>]. For instance, deterministic simulation is not applicable for many experiments, where molecular fluctuations of species with a few number of molecules drive the overall model behaviour (for examples see [<xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR8">8</xref>]).</p>
    <p>As a combined approach, hybrid simulation [<xref ref-type="bibr" rid="CR9">9</xref>–<xref ref-type="bibr" rid="CR15">15</xref>] merges exact stochastic and approximate algorithms. Thus, it takes advantage of computational efficiency, while avoiding result inaccuracy. Hybrid simulation works by first partitioning the set of reactions into stochastic and deterministic ones and correspondingly classifying the set of species into discrete and continuous ones. Afterwards, a system of ODEs is constructed for the deterministic regime using kinetic rate laws as specified (e.g., mass action). The system of ODEs is numerically integrated until a stochastic reaction is to occur and then the stochastic reaction takes place. The whole procedure is repeated until the end of the simulation time is reached.</p>
    <p>However, the implementation of hybrid simulation is not a straightforward task compared with the comparably simple stochastic simulation methods, since it requires the interplay and integration of an ODE solver in addition to the SSA. Hence, it becomes intricate to write a dedicated and efficient simulation code for each model. Therefore efficient hybrid simulation software tools are required to accelerate the model development and execution. Unlike stochastic simulation, there are only a few software tools that currently support hybrid simulation (see e.g., [<xref ref-type="bibr" rid="CR16">16</xref>, <xref ref-type="bibr" rid="CR17">17</xref>]). Furthermore, the original hybrid simulation algorithm introduced in [<xref ref-type="bibr" rid="CR9">9</xref>] is not efficient to simulate all kinds of models. For example, a high frequency of reaction events leads to a performance drop. Therefore, recent hybrid approaches employ more sophisticated techniques in order to achieve a better performance (see e.g., [<xref ref-type="bibr" rid="CR6">6</xref>, <xref ref-type="bibr" rid="CR12">12</xref>, <xref ref-type="bibr" rid="CR13">13</xref>]). Besides, hybrid simulation tools should continuously evolve and support the state of the art of hybrid simulation approaches such that they can cope with the continuously growing interest in systems biology.</p>
    <p>In this paper, we present Snoopy’s hybrid simulator, an efficient and generic (i.e., it does not assume a special kind of biochemical network models) hybrid simulator that supports state-of-the-art hybrid simulation approaches. Snoopy’s hybrid simulator is deployed as a component of the Petri net tool Snoopy [<xref ref-type="bibr" rid="CR18">18</xref>] and its steering server [<xref ref-type="bibr" rid="CR19">19</xref>]. The latter tool permits different simulation scenarios than the one discussed in this paper (please see [<xref ref-type="bibr" rid="CR20">20</xref>] for more details). Snoopy’s hybrid simulator has been recently restructured to support recent advances in hybrid simulation algorithms. Moreover, it admits a graphical representation of biochemical reactions by means of Petri nets (see below), while complex models that exhibit repeated components can be easily constructed as coloured Petri nets [<xref ref-type="bibr" rid="CR15">15</xref>]. Snoopy’s hybrid simulator is a free software tool that can run on many well-known platforms including MS Window, MacOSX and some Linux distributions. A comprehensive user manual is available at [<xref ref-type="bibr" rid="CR21">21</xref>].</p>
    <p><bold>Modelling biochemical networks via Petri nets.</bold> Petri nets, as a discrete modelling approach, have been widely applied in many fields, including systems biology [<xref ref-type="bibr" rid="CR22">22</xref>, <xref ref-type="bibr" rid="CR23">23</xref>]. In Petri nets, tokens on places represent discrete quantities of species such as the number of molecules or levels of species concentration. To accommodate different modelling scenarios, Petri nets have been extended in many ways [<xref ref-type="bibr" rid="CR23">23</xref>]. For instance, stochastic Petri nets (<inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {SPN}$\end{document}</tex-math><mml:math id="M2"><mml:mi mathvariant="script">S</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq1.gif"/></alternatives></inline-formula>) [<xref ref-type="bibr" rid="CR22">22</xref>] were proposed by associating each transition with an exponentially distributed waiting time, and continuous Petri nets (<inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {CPN}$\end{document}</tex-math><mml:math id="M4"><mml:mi mathvariant="script">C</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq2.gif"/></alternatives></inline-formula>) have been introduced to support continuous markings (cf., [<xref ref-type="bibr" rid="CR22">22</xref>, <xref ref-type="bibr" rid="CR24">24</xref>]). The underlying semantics of a <inline-formula id="IEq3"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {CPN}}$\end{document}</tex-math><mml:math id="M6"><mml:mi mathvariant="script">C</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq3.gif"/></alternatives></inline-formula> model is a system of ODEs. However, there are different <inline-formula id="IEq4"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {CPN}}$\end{document}</tex-math><mml:math id="M8"><mml:mi mathvariant="script">C</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq4.gif"/></alternatives></inline-formula> interpretations. We adopt a special semantics of <inline-formula id="IEq5"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {CPN}}$\end{document}</tex-math><mml:math id="M10"><mml:mi mathvariant="script">C</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq5.gif"/></alternatives></inline-formula> called bio-semantics (cf., [<xref ref-type="bibr" rid="CR25">25</xref>]). In the bio-semantics, we assume that transition rate equations are defined in terms of kinetic rate laws (e.g., mass action) that are commonly used to model biochemical networks. This assumption will considerably simplify the <inline-formula id="IEq6"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {CPN}}$\end{document}</tex-math><mml:math id="M12"><mml:mi mathvariant="script">C</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq6.gif"/></alternatives></inline-formula> simulation and its implementation for this particular application.</p>
    <p>Furthermore, in order to allow discrete and continuous entities to coexist in one model, different types of hybrid Petri nets (<inline-formula id="IEq7"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {HPN}}$\end{document}</tex-math><mml:math id="M14"><mml:mi mathvariant="script">ℋ</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq7.gif"/></alternatives></inline-formula>) were proposed for different purposes [<xref ref-type="bibr" rid="CR24">24</xref>]. We employ a special class of <inline-formula id="IEq8"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {HPN}}$\end{document}</tex-math><mml:math id="M16"><mml:mi mathvariant="script">ℋ</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq8.gif"/></alternatives></inline-formula> called generalised hybrid Petri nets (<inline-formula id="IEq9"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {GHPN}}$\end{document}</tex-math><mml:math id="M18"><mml:mi mathvariant="script">G</mml:mi><mml:mi mathvariant="script">ℋ</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq9.gif"/></alternatives></inline-formula>) [<xref ref-type="bibr" rid="CR11">11</xref>] which is specifically tailored to the modelling of biochemical reaction networks. <inline-formula id="IEq10"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {GHPN}}$\end{document}</tex-math><mml:math id="M20"><mml:mi mathvariant="script">G</mml:mi><mml:mi mathvariant="script">ℋ</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq10.gif"/></alternatives></inline-formula> offer two types of places and five types of transitions, which permit together the convenient modelling of various kinds of (biological) processes. A detailed description of <inline-formula id="IEq11"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {GHPN}}$\end{document}</tex-math><mml:math id="M22"><mml:mi mathvariant="script">G</mml:mi><mml:mi mathvariant="script">ℋ</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq11.gif"/></alternatives></inline-formula> can be found in [<xref ref-type="bibr" rid="CR11">11</xref>, <xref ref-type="bibr" rid="CR21">21</xref>].</p>
    <p>Figure <xref rid="Fig1" ref-type="fig">1</xref> presents an introductory example of using <inline-formula id="IEq12"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {GHPN}}$\end{document}</tex-math><mml:math id="M24"><mml:mi mathvariant="script">G</mml:mi><mml:mi mathvariant="script">ℋ</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq12.gif"/></alternatives></inline-formula> to model biochemical reaction networks. We follow a simplified scenario of the calcium dynamics detailed in [<xref ref-type="bibr" rid="CR26">26</xref>]. Intracellular calcium dynamics is a complex process which requires hybrid modelling where channel opening and closing are stochastic processes while calcium diffusion is more efficiently modelled as a deterministic process [<xref ref-type="bibr" rid="CR26">26</xref>]. In this example we assume the existence of only one channel which permits the flow of calcium to the cytoplasm when it is in the open state. We use two discrete places, <italic>open</italic> and <italic>close</italic>, to model the channel states, open and close, respectively. Likewise, the two stochastic transitions, <italic>ch_open</italic> and <italic>ch_close</italic>, model the processes of opening and closing the channel, respectively. When the channel is in the open state, the calcium can flow from the endoplasmic reticulum (not represented in this example) and enter the cytoplasm, which is represented by the continuous place <italic>Ca</italic>. The continuous transition <italic>Ca_inflow</italic> models this process. Finally, calcium can return back to the endoplasmic reticulum through a process called pump [<xref ref-type="bibr" rid="CR26">26</xref>]. We model this process using the continuous transition <italic>C</italic>
<italic>a</italic>_<italic>p</italic>
<italic>u</italic>
<italic>m</italic>
<italic>p</italic>. Figure <xref rid="Fig1" ref-type="fig">1</xref>
<xref rid="Fig1" ref-type="fig">b</xref> depicts the dynamics of channel opening and closing, while Fig. <xref rid="Fig1" ref-type="fig">1</xref>
<xref rid="Fig1" ref-type="fig">c</xref> provides the corresponding calcium concentrations. For the purpose of this example we have set the parameter values so that we can demonstrate the basic idea which has no immediate biological relevance. The corresponding Snoopy file is given in the Additional file <xref rid="MOESM1" ref-type="media">1</xref>: S1.
<fig id="Fig1"><label>Fig. 1</label><caption><p>A simple example illustrating the operation of hybrid Petri nets: (<bold>a</bold>) the HPN representation of simplified calcium dynamics, (<bold>b</bold>) a time course of opening and closing of the calcium channel, and (<bold>c</bold>) the corresponding calcium concentration. The two discrete places <italic>close</italic> and <italic>open</italic> represent the channel states, closed and opened, respectively. The two stochastic transitions: <italic>ch_open</italic> and <italic>ch_close</italic> model the state transition of the channel. The continuous place <italic>Ca</italic> models the calcium concentration. The calcium inflow is modelled via the continuous transition <italic>Ca_inflow</italic> which has a rate proportional to the open state of the channel. The outflow of the calcium is modelled using the transition <italic>Ca_pump</italic>. The simulation result of the model is given in (<bold>b</bold>) and (<bold>c</bold>)</p></caption><graphic xlink:href="12918_2017_449_Fig1_HTML" id="MO1"/></fig>
</p>
    <p>Beyond these extensions, Petri nets have also been extended in a parameterised way. Such an extension is called coloured Petri nets (<inline-formula id="IEq13"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {PN^{C}}}$\end{document}</tex-math><mml:math id="M26"><mml:mi mathvariant="script">P</mml:mi><mml:msup><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq13.gif"/></alternatives></inline-formula>) [<xref ref-type="bibr" rid="CR27">27</xref>, <xref ref-type="bibr" rid="CR28">28</xref>]. In a <inline-formula id="IEq14"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {PN^{C}}}$\end{document}</tex-math><mml:math id="M28"><mml:mi mathvariant="script">P</mml:mi><mml:msup><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq14.gif"/></alternatives></inline-formula>, a group of similar components can be abstracted into one component (similar to a variable), each of which is defined as and thus distinguished by a colour (a specific value of the variable). In a <inline-formula id="IEq15"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {PN^{C}}}$\end{document}</tex-math><mml:math id="M30"><mml:mi mathvariant="script">P</mml:mi><mml:msup><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq15.gif"/></alternatives></inline-formula>, one or more colour sets have to be defined, and a colour set is assigned to each place. The tokens on a place are now distinguishable by colours. A guard, which is a Boolean expression, is assigned to each transition. For enabling a coloured transition, we not only check if the preplaces of the transition have sufficient and appropriate tokens, which is similar to what is done in standard Petri nets, but also have to evaluate the guard, which has to yield true. Each uncoloured Petri net class can have a coloured counterpart. Thus by combining the parameterised modelling capability of <inline-formula id="IEq16"><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {PN^{C}}}$\end{document}</tex-math><mml:math id="M32"><mml:mi mathvariant="script">P</mml:mi><mml:msup><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq16.gif"/></alternatives></inline-formula> and the hybrid representation capability of <inline-formula id="IEq17"><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {GHPN}}$\end{document}</tex-math><mml:math id="M34"><mml:mi mathvariant="script">G</mml:mi><mml:mi mathvariant="script">ℋ</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq17.gif"/></alternatives></inline-formula>, we obtain coloured hybrid Petri nets (<inline-formula id="IEq18"><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {GHPN^{C}}}$\end{document}</tex-math><mml:math id="M36"><mml:mi mathvariant="script">G</mml:mi><mml:mi mathvariant="script">ℋ</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:msup><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq18.gif"/></alternatives></inline-formula>) [<xref ref-type="bibr" rid="CR15">15</xref>], which can conveniently model a system having both multiple spatial and temporal scales. In what follows we refer to <inline-formula id="IEq19"><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {GHPN}}$\end{document}</tex-math><mml:math id="M38"><mml:mi mathvariant="script">G</mml:mi><mml:mi mathvariant="script">ℋ</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq19.gif"/></alternatives></inline-formula> and <inline-formula id="IEq20"><alternatives><tex-math id="M39">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {GHPN^{C}}}$\end{document}</tex-math><mml:math id="M40"><mml:mi mathvariant="script">G</mml:mi><mml:mi mathvariant="script">ℋ</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:msup><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq20.gif"/></alternatives></inline-formula> simply by <inline-formula id="IEq21"><alternatives><tex-math id="M41">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {HPN}}$\end{document}</tex-math><mml:math id="M42"><mml:mi mathvariant="script">ℋ</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq21.gif"/></alternatives></inline-formula> and <inline-formula id="IEq22"><alternatives><tex-math id="M43">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {HPN^{C}}}$\end{document}</tex-math><mml:math id="M44"><mml:mi mathvariant="script">ℋ</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:msup><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq22.gif"/></alternatives></inline-formula>, respectively, unless explicitly stated otherwise.</p>
    <p>To demonstrate the basic idea of <inline-formula id="IEq23"><alternatives><tex-math id="M45">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {HPN^{C}}}$\end{document}</tex-math><mml:math id="M46"><mml:mi mathvariant="script">ℋ</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:msup><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq23.gif"/></alternatives></inline-formula>, we extend the example presented in Fig. <xref rid="Fig1" ref-type="fig">1</xref> to include more than one channel arranged in one cluster and account for the spatial behaviour of calcium diffusion. This scenario will be much more realistic than the simple one presented in Fig. <xref rid="Fig1" ref-type="fig">1</xref>. Figure <xref rid="Fig2" ref-type="fig">2</xref>
<xref rid="Fig2" ref-type="fig">a</xref> shows a simple example of the calcium dynamics modelled as <inline-formula id="IEq24"><alternatives><tex-math id="M47">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {HPN^{C}}}$\end{document}</tex-math><mml:math id="M48"><mml:mi mathvariant="script">ℋ</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:msup><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq24.gif"/></alternatives></inline-formula>. The corresponding colour declarations are given in Fig. <xref rid="Fig1" ref-type="fig">1</xref>
<xref rid="Fig1" ref-type="fig">b</xref>. Now the coloured discrete place <italic>closed</italic> is parameterised with the coloured set <italic>chCS</italic> which contains the colours from 1 to 3. Therefore it represents the state of three channels when they are closed, so does the coloured discrete place <italic>opened</italic>. In this coloured model version the two transitions <italic>ch_open</italic> and <italic>ch_close</italic> are bound with each colour in the colour set <italic>chCS</italic>. That is each transition has three different instances corresponding to the number of channels. Moreover, the calcium concentration is modelled by the continuous place <italic>Ca</italic>, which is associated with the colour set <italic>G</italic>
<italic>r</italic>
<italic>i</italic>
<italic>d</italic>2<italic>D</italic> to represent a two-dimensional grid of 100×100 cells (colours). Each of them represents a spatial calcium location. The calcium flow is modelled by the continuous transition <italic>C</italic>
<italic>a</italic>_<italic>i</italic>
<italic>n</italic>
<italic>f</italic>
<italic>l</italic>
<italic>o</italic>
<italic>w</italic> which adds calcium to the cluster location (here assumed to be in the middle of the grid: (50,50). The rate of the transition <italic>C</italic>
<italic>a</italic>_<italic>i</italic>
<italic>n</italic>
<italic>f</italic>
<italic>l</italic>
<italic>o</italic>
<italic>w</italic> is proportional to the total number of open channels in the cluster (see [<xref ref-type="bibr" rid="CR26">26</xref>] for more details). The calcium diffusion is modelled by the continuous transition <italic>diffuse</italic> which diffuses the calcium to the four neighbouring cells of a calcium position. The calcium pump is done via the coloured continuous transition <italic>C</italic>
<italic>a</italic>_<italic>p</italic>
<italic>u</italic>
<italic>m</italic>
<italic>p</italic> which positions a transition at each location in the grid. Figure <xref rid="Fig2" ref-type="fig">2</xref>
<xref rid="Fig2" ref-type="fig">c</xref> depicts the total number of channels in the open state, while Fig. <xref rid="Fig2" ref-type="fig">2</xref>
<xref rid="Fig2" ref-type="fig">d</xref> shows the calcium diffusion in the two dimension coordinates. In this example we can easily carry out different experiments by reconfiguring the model parameters. For instance, the number of channels in the cluster can be increased by just increasing the number of colours in the coloured set <italic>chCS</italic>. Similarly, the grid coordinates can be adjusted by changing the colour set <italic>G</italic>
<italic>r</italic>
<italic>i</italic>
<italic>d</italic>2<italic>D</italic>. The Snoopy file for this introductory example is given in the Additional file <xref rid="MOESM2" ref-type="media">2</xref>: S2. A detailed discussion of simulating this coloured model is provided in the “<xref rid="Sec2" ref-type="sec">Implementation</xref>” section.
<fig id="Fig2"><label>Fig. 2</label><caption><p>A simple example representing the operation of <inline-formula id="IEq25"><alternatives><tex-math id="M49">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {HPN^{C}}}$\end{document}</tex-math><mml:math id="M50"><mml:mi mathvariant="script">ℋ</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:msup><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq25.gif"/></alternatives></inline-formula>: (<bold>a</bold>) the <inline-formula id="IEq26"><alternatives><tex-math id="M51">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {HPN^{C}}}$\end{document}</tex-math><mml:math id="M52"><mml:mi mathvariant="script">ℋ</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:msup><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq26.gif"/></alternatives></inline-formula> representation of spatial calcium dynamics, (<bold>b</bold>) the corresponding colour definitions, (<bold>c</bold>) a time course representing the number of channels in the open state, and (<bold>d</bold>) a matrix plot representing the calcium diffusion. In this model, we use three channels arranged in one cluster. The colour set <italic>chCS</italic> provides the number of channels (in this case three). The variable <italic>m</italic> is used in combination with the transition <italic>ch_open</italic> to model the transition of a certain channel. The coloured place <italic>open</italic> provides the total number of channels in the open state, which is used as a rate for the continuous transition <italic>Ca_inflow</italic>. The calcium is represented by the coloured place <italic>Ca</italic>, which when unfolded gives a number of places equal to the colours in the colour set <italic>Grid2D</italic> (in this case <italic>Grid2D</italic> is a two dimensional coloured set, each dimension being 100). Calcium diffusion is modelled via the continuous transition <italic>diffuse</italic>. When the continuous transition <italic>Ca_inflow</italic> fires, it adds calcium to the position of the cluster in the grid (here in the middle of the grid (50,50)). The calcium outflow is modelled by the continuous transition called <italic>Ca_pump</italic>
</p></caption><graphic xlink:href="12918_2017_449_Fig2_HTML" id="MO2"/></fig>
</p>
  </sec>
  <sec id="Sec2">
    <title>Implementation</title>
    <p>In this section we briefly describe the implementation of Snoopy’s hybrid simulator by considering the architecture, available algorithms, export and import, and the deployed external libraries.</p>
    <sec id="Sec3">
      <title>Architecture</title>
      <p>Figure <xref rid="Fig3" ref-type="fig">3</xref> presents the architecture of Snoopy’s hybrid simulator. This architecture consists of three components: the user interface, which comprises the model editor and the simulation dialog; the simulator, which implements the simulation algorithms as well as storing the currently running models and the corresponding result views; and the Snoopy manager, which connects the user interface with the simulation module. Snoopy’s hybrid simulator deploys a simple graphical user interface to permit a rapid configuration of the core simulation procedure. Figure <xref rid="Fig4" ref-type="fig">4</xref> depicts the user interface; in the following, we discuss each of these components.
<fig id="Fig3"><label>Fig. 3</label><caption><p>Architecture of Snoopy’s hybrid simulator. The different components of the architecture can be divided into three layers: user interface, communication, and simulation layer. The user interface is the user access point to construct and execute hybrid models. The simulation layer comprises the simulator as well as the simulation version of the constructed model definition. The communication layer connects the simulation component with the user interface</p></caption><graphic xlink:href="12918_2017_449_Fig3_HTML" id="MO3"/></fig>
<fig id="Fig4"><label>Fig. 4</label><caption><p>Screenshot of Snoopy’s graphical user interface. The simulation window is divided into two parts: configuration and viewer subwindows. The configuration window (<italic>left</italic>) permits to configure and control the simulation while the viewer window (<italic>right</italic>) is used to display the simulation results. Multiple viewer windows can be opened simultaneously to show the results from different perspectives. The viewer curves can be exported into CSV file for further analysis of the simulation results</p></caption><graphic xlink:href="12918_2017_449_Fig4_HTML" id="MO4"/></fig>
</p>
      <sec id="Sec4">
        <title>Model editor</title>
        <p>The model editor permits the graphical construction of hybrid models using (coloured) hybrid Petri net notations defined in [<xref ref-type="bibr" rid="CR11">11</xref>]. Reactions are represented by transitions, while species are denoted by places. More information about hybrid Petri net notations can be found in [<xref ref-type="bibr" rid="CR11">11</xref>, <xref ref-type="bibr" rid="CR19">19</xref>, <xref ref-type="bibr" rid="CR29">29</xref>] as well as in Snoopy’s hybrid simulator user manual [<xref ref-type="bibr" rid="CR21">21</xref>]. In addition to specifying all reactions, the model editor provides other features to configure the model parameters as well as the initial state. The model editor is applied as a pre-step before executing the simulation.</p>
      </sec>
      <sec id="Sec5">
        <title>Simulation dialog</title>
        <p>The simulation dialog is the user tool to run and manage the simulation. Through it the simulation experiment can be configured and then executed. Moreover, the simulation dialog provides access to the simulation algorithms that are implemented in Snoopy’s hybrid simulator. Once a model has been constructed, a user can access the simulation dialog through Snoopy’s menu bar. The simulation dialog consists of four parts: model configuration, simulator configuration, import/export, and simulation state (compare Fig. <xref rid="Fig4" ref-type="fig">4</xref>).</p>
        <p>The model configuration section permits to adjust model settings including initial state, reaction rates and other similar parameters. The simulation configuration section deals with specifying the simulation options including the start and end time point of the simulation, the type of the ODE solver, and the hybrid synchronisation method. The import/export section allows users to configure how Snoopy performs any export or import of simulation results. Finally, the simulation state section serves to start and stop the simulation as well as to monitor the simulation state.</p>
        <p>The simulation results can be examined using views. Different result views can be defined to explore the simulation output from different perspectives. Each view has its own window to display the results using a dedicated result viewer. Result viewers permit to render the final data using different plotting techniques such as xy-plot. Finally, view curves can be exported into comma separated files (CSV) for further processing.</p>
      </sec>
      <sec id="Sec6">
        <title>Simulation model</title>
        <p>After a model is constructed, e.g. using the model editor, it can be sent to the simulator for execution. The simulation module takes a copy of the hybrid Petri net model, but ignoring the layout information. Usually, the model is a collection of species, reactions, stoichiometries as well as associated data such as kinetic rates and kinetic rate constants. Nevertheless, this information is mapped in terms of Petri net components. When the simulation model is partitioned into deterministic and stochastic parts, reactions and species are assigned to either of the two regimes. Unlike other implementations (e.g., in [<xref ref-type="bibr" rid="CR10">10</xref>]), we consider only one version of the species: either discrete or continuous. Later, if a transformation is required (e.g., from number of molecules to concentration, or vice versa), this can be easily done at the position where such a conversion is required (e.g., in the rate equation). Similarly, when considering the simulation output, such a transformation can also be easily applied. However, if a species is manipulated by both a deterministic and a stochastic reaction, it needs to be represented as a continuous species.</p>
      </sec>
      <sec id="Sec7">
        <title>Simulator</title>
        <p>The simulation algorithms are implemented as a stand-alone, but built-in simulation library. The simulator module reads the model to be simulated and carries out the execution. A number of algorithms, which will be discussed in the next section, are available to execute a hybrid model. Please note, although the core simulator is implemented as a stand-alone library, it can currently not be used as a stand-alone application. However, we are working on this to achieve a stand-alone application (see the “<xref rid="Sec30" ref-type="sec">Future improvements</xref>” section).</p>
      </sec>
      <sec id="Sec8">
        <title>Views</title>
        <p>Views are associated with models. Each view is defined over a set of places or transitions of which the dynamic behaviour shall be displayed when the simulation starts. These place/transition sets can be specified by a regular expression. Multiple views can be defined for the same model. A view is also associated with a viewer that displays the selected information. Views can be manipulated or removed after they were initially added to a model.</p>
      </sec>
      <sec id="Sec9">
        <title>Snoopy manager</title>
        <p>The communication between the user interface and the simulator is done via the Snoopy manager. The Snoopy manager acts as an intermediate agent that sends the GUI command to the simulator and gets the result back to visualise or export them to the chosen file format. As Snoopy is a stand-alone application, the communication between the user interface and the simulation module is done internally and not through a physical communication channel.</p>
      </sec>
    </sec>
    <sec id="Sec10">
      <title>Available algorithms</title>
      <p>Snoopy’s hybrid simulator encompasses a set of simulation algorithms that together provide a convenient execution of hybrid biological models. The general idea of the hybrid simulation algorithms implemented in Snoopy is as follow. First, the synchronisation module (the hybrid algorithm) prepares the jump equation (see below). Afterwards, the ODE solver numerically integrates the system of ODEs due to the deterministic part until the jump equation is fulfilled. At this point, the synchronisation module switches the control to the stochastic module to select and fire a stochastic reaction. The exact time point of the stochastic event is determined by the jump equation. In what follows, we outline each of these algorithms.</p>
      <sec id="Sec11">
        <title>Haseltine and Rawlings algorithm</title>
        <p>This is the realisation of the hybrid simulation idea proposed by Haseltine and Rawlings in [<xref ref-type="bibr" rid="CR9">9</xref>]. According to this method, a system of ODEs is numerically solved until a stochastic event is to occur. The exact occurrence time of the stochastic event is captured through (<xref rid="Equ1" ref-type="">1</xref>). 
<disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="M53">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ \int_{t}^{t+\tau}{\sum\limits_{j=0}^{N}{a_{j}^{s}}(\mathbf{x})dt}=-log(r) \,,   $$ \end{document}</tex-math><mml:math id="M54"><mml:munderover><mml:mrow><mml:mo>∫</mml:mo></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mi>τ</mml:mi></mml:mrow></mml:munderover><mml:munderover accent="false" accentunder="false"><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mi>N</mml:mi></mml:mrow></mml:munderover><mml:msubsup><mml:mrow><mml:mi>a</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msubsup><mml:mo>(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo>)</mml:mo><mml:mtext mathvariant="italic">dt</mml:mtext><mml:mo>=</mml:mo><mml:mo>−</mml:mo><mml:mtext mathvariant="italic">log</mml:mtext><mml:mo>(</mml:mo><mml:mi>r</mml:mi><mml:mo>)</mml:mo><mml:mspace width="0.3em"/><mml:mo>,</mml:mo></mml:math><graphic xlink:href="12918_2017_449_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula>
</p>
        <p>where <bold>x</bold> is the state vector of the model at time <italic>t</italic>, <italic>τ</italic> is the firing time of the next slow reaction, <italic>r</italic> is a random number uniformly distributed in the interval <italic>U</italic>(0,1), <inline-formula id="IEq27"><alternatives><tex-math id="M55">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$a_{j}^{s}(\mathbf {x})$\end{document}</tex-math><mml:math id="M56"><mml:msubsup><mml:mrow><mml:mi>a</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msubsup><mml:mo>(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq27.gif"/></alternatives></inline-formula> is the propensity of the <italic>j</italic>
<sup><italic>t</italic><italic>h</italic></sup> slow reaction, and <italic>N</italic> is the number of stochastic reactions.</p>
        <p>In (<xref rid="Equ1" ref-type="">1</xref>) we aim to determine the value of <italic>τ</italic>. This is achieved by first generating a random number from <italic>U</italic>(0,1) and then integrating the propensity equations of all slow reactions together with the system of ODEs due to the deterministic part from the current simulation time <italic>t</italic> until (<xref rid="Equ1" ref-type="">1</xref>) is satisfied. At this point we know that there is a stochastic event which needs to be fired.</p>
        <p>Although this method is very accurate, it requires considerable time to switch from stochastic to deterministic simulation [<xref ref-type="bibr" rid="CR13">13</xref>]. The performance of this method drops rapidly as soon as the number of stochastic events increases. Thus it is suitable only for simple models where the number of potential stochastic events is limited. Moreover, it can produce better results with ODE solvers that do not collect and use history information to advance the numerical integration time.</p>
      </sec>
      <sec id="Sec12">
        <title>Accelerated Hybrid Simulation</title>
        <p>To overcome the limitation of the Haseltine and Rawlings method, we follow an accelerated approach introduced in [<xref ref-type="bibr" rid="CR13">13</xref>]. The accelerated algorithm takes advantage of the model structure to boost the overall simulation performance. According to this method, stochastic reactions are classified into two groups: dependent and independent. Dependent reactions affect the system state of the ODE solvers when they occur, while independent reactions have no effects. Therefore, the ODE solver is reinitialised only when a reaction in the dependent group is fired. Thus, the simulation performance becomes better than for the Haseltine and Rawlings method, particularly for bigger models. For instance, in [<xref ref-type="bibr" rid="CR13">13</xref>] we compared the performance of the Haseltine &amp; Rawlings method and the accelerated approach using three models. We found that there is a notable performance improvement for all three case studies and for certain models; the latter approach is ten times faster than the former one. This save in runtime is mainly due to the reduction of the number of times where the ODE solver is reinitialised. In order to achieve the better performance, the accelerated method approximates the exact capture of the stochastic event occurrence time given by (<xref rid="Equ1" ref-type="">1</xref>) by another equation given in (<xref rid="Equ2" ref-type="">2</xref>). 
<disp-formula id="Equ2"><label>2</label><alternatives><tex-math id="M57">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ {\sum\limits_{j=0}^{N}{a_{j}^{s}}(\mathbf{x})}\cdot \Delta \tau =-log(r)\,,   $$ \end{document}</tex-math><mml:math id="M58"><mml:munderover accent="false" accentunder="false"><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mi>N</mml:mi></mml:mrow></mml:munderover><mml:msubsup><mml:mrow><mml:mi>a</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msubsup><mml:mo>(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo>)</mml:mo><mml:mo>·</mml:mo><mml:mi>Δτ</mml:mi><mml:mo>=</mml:mo><mml:mo>−</mml:mo><mml:mtext mathvariant="italic">log</mml:mtext><mml:mo>(</mml:mo><mml:mi>r</mml:mi><mml:mo>)</mml:mo><mml:mspace width="0.3em"/><mml:mo>,</mml:mo></mml:math><graphic xlink:href="12918_2017_449_Article_Equ2.gif" position="anchor"/></alternatives></disp-formula>
</p>
        <p>where <italic>Δ</italic>
<italic>τ</italic> is the time difference between the occurrence time of the previous event and the current event. Eqs. <xref rid="Equ1" ref-type="">1</xref> or (<xref rid="Equ2" ref-type="">2</xref>) has to be satisfied during the integration, when the Haseltine and Rawlings or accelerated method is used, respectively, until the ODE solver stops and returns the control back to the stochastic regime. Please note that although our approach mainly intends to reduce the reinitialisation of ODE solvers employing history information to advance the simulation time (e.g., multi-step ODE solver; see below), it can also be used with single step solvers (e.g., Runge-Kutta) to reduce the frequent recalculation of the step size after each firing of a discrete event.</p>
      </sec>
      <sec id="Sec13">
        <title>Improved hybrid rejection-based stochastic simulation</title>
        <p>The numerical integration of (<xref rid="Equ1" ref-type="">1</xref>) as well as its approximation in (<xref rid="Equ2" ref-type="">2</xref>) are computationally expensive to be satisfied. Therefore, in [<xref ref-type="bibr" rid="CR12">12</xref>] a new hybrid simulation method was proposed based on the rejection-based stochastic simulation algorithm (RSSA) introduced in [<xref ref-type="bibr" rid="CR30">30</xref>] which avoids the calculation of (<xref rid="Equ1" ref-type="">1</xref>) and (<xref rid="Equ2" ref-type="">2</xref>). The RSSA algorithm defines lower and upper bounds of the reaction propensities to minimise the propensity updates. The propensity lower and upper bounds are calculated based on a lower and upper bound of the system state values called fluctuation interval. Propensities are updated only when one or more of the system state entries move completely outside the defined fluctuation interval. The Hybrid Rejection-based Stochastic Simulation Algorithm (HRSSA) exploits this opportunity by switching from the deterministic to the stochastic regime only when the ODE solver reaches the time of a stochastic event or when any of the system state entries is outside the fluctuation interval. In the former case, the discrete regime does not affect the continuous one, while in the latter case the deterministic regime changes the state of the discrete species during the numerical integration. We apply an improved implementation of this method which combines the accelerated and hybrid rejection-based methods. Currently, the improved hybrid rejection stochastic simulation method is tested as the best hybrid algorithm implemented in our tool in terms of performance (compare Table <xref rid="Tab2" ref-type="table">2</xref>). In [<xref ref-type="bibr" rid="CR12">12</xref>], the performance of the HRSSA algorithm has been compared with state of the art hybrid simulation algorithms using five benchmark models. It turned out that the HRSSA outperforms all competing algorithms.</p>
      </sec>
      <sec id="Sec14">
        <title>Dynamic hybrid simulation</title>
        <p>The previously discussed simulation approaches are based on static partitioning. Static partitioning adopts a predefined classification of the model reactions into stochastic and deterministic ones. The partitioning itself is usually performed by the user and exploited afterwards by the simulator during the whole simulation process. This approach is constructive for many applications with a clear cut between reactions which have to be simulated stochastically and those which should be simulated deterministically. For instance, in [<xref ref-type="bibr" rid="CR31">31</xref>] and in many other similar publications that study cell fate, reactions related to the cell nucleus are considered as stochastic, while those happening inside the cytoplasm are considered as deterministic. However, such a clear cut is not always possible to be achieved for all models during the whole simulation period. Reactions can change their state from slow to fast and vice versa during the simulation. For example, in oscillating biological systems, reaction rates also oscillate with respect to time from fast to slow and the other way around. In this case, dynamic partitioning, where reactions are partitioned repeatedly during the simulation, can play a role in speeding up the whole simulation procedure. Our implementation of the dynamic hybrid simulation is based on the improved hybrid rejection method. Using this approach, reactions are repartitioned as soon as any of the state vector entries leaves the fluctuation interval. This will indeed eliminate the need for frequent checks of whether the set of reactions requires repartitioning.</p>
      </sec>
      <sec id="Sec15">
        <title>Pure stochastic and pure deterministic simulation</title>
        <p>To improve the comfort when simulating biological models with Snoopy’s hybrid simulator, the user has the option to perform a pure stochastic or a pure deterministic simulation of a hybrid model. The direct method [<xref ref-type="bibr" rid="CR3">3</xref>] is applied to implement the stochastic simulation, while the SUNDIAL CVODE [<xref ref-type="bibr" rid="CR32">32</xref>] is used to carry out the deterministic simulation. This is a worthwhile feature during the experimentation phase to compare the hybrid results with the pure stochastic and pure deterministic ones. Using this feature, Snoopy’s hybrid simulator ignores any reaction partitioning specified by the user and reads all model reactions as stochastic or deterministic ones, depending on the selected simulation algorithm.</p>
      </sec>
      <sec id="Sec16">
        <title>Parallel multi-run simulation</title>
        <p>Similar to stochastic simulation, hybrid simulation of biological models might require the execution of multiple runs to calculate average statistics. Snoopy’s hybrid simulator permits the concurrent execution of different runs to take advantage of the existence of multiple cores in the user’s machine.</p>
      </sec>
    </sec>
    <sec id="Sec17">
      <title>Simulation of coloured models</title>
      <p>A coloured model (such as <inline-formula id="IEq28"><alternatives><tex-math id="M59">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {HPN^{C}}}$\end{document}</tex-math><mml:math id="M60"><mml:mi mathvariant="script">ℋ</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:msup><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq28.gif"/></alternatives></inline-formula>) with finite colour sets can be automatically unfolded to an uncoloured model (such as <inline-formula id="IEq29"><alternatives><tex-math id="M61">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {HPN}}$\end{document}</tex-math><mml:math id="M62"><mml:mi mathvariant="script">ℋ</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq29.gif"/></alternatives></inline-formula>). See [<xref ref-type="bibr" rid="CR33">33</xref>] for one of the unfolding algorithms deployed in Snoopy. Thus, the simulation of an <inline-formula id="IEq30"><alternatives><tex-math id="M63">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {HPN^{C}}}$\end{document}</tex-math><mml:math id="M64"><mml:mi mathvariant="script">ℋ</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:msup><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq30.gif"/></alternatives></inline-formula> model is done on the automatically unfolded <inline-formula id="IEq31"><alternatives><tex-math id="M65">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {HPN}}$\end{document}</tex-math><mml:math id="M66"><mml:mi mathvariant="script">ℋ</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq31.gif"/></alternatives></inline-formula> model. When the user starts the simulation of an <inline-formula id="IEq32"><alternatives><tex-math id="M67">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {HPN^{C}}}$\end{document}</tex-math><mml:math id="M68"><mml:mi mathvariant="script">ℋ</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:msup><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq32.gif"/></alternatives></inline-formula> model, an unfolding dialogue will be triggered, where the user can select an appropriate unfolding method to perform the unfolding. Afterwards, the simulation methods discussed in this section can be used to execute the unfolded model.</p>
      <p>To better explain this idea, we consider the <inline-formula id="IEq33"><alternatives><tex-math id="M69">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {HPN^{C}}}$\end{document}</tex-math><mml:math id="M70"><mml:mi mathvariant="script">ℋ</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:msup><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq33.gif"/></alternatives></inline-formula> model presented in Fig. <xref rid="Fig2" ref-type="fig">2</xref>. First, the discrete subnet, consisting of the two places: <italic>closed</italic> and <italic>open</italic> as well as the two transitions: <italic>c</italic>
<italic>h</italic>_<italic>o</italic>
<italic>p</italic>
<italic>e</italic>
<italic>n</italic> and <italic>c</italic>
<italic>h</italic>_<italic>c</italic>
<italic>l</italic>
<italic>o</italic>
<italic>s</italic>
<italic>e</italic>, is unfolded into three identical subnets (because the colour set <italic>chCS</italic> consists of three colours). In other modelling scenarios where the unfolded subnets are not identical we can make use of transition guards to imply the required constraints. Similarly, the continuous subnet, consisting of the place <italic>Ca</italic> and the two transitions <italic>C</italic>
<italic>a</italic>_<italic>p</italic>
<italic>u</italic>
<italic>m</italic>
<italic>p</italic> and <italic>diffuse</italic> is unfolded into 10,000 identical subsets (because the colour set <italic>G</italic>
<italic>r</italic>
<italic>i</italic>
<italic>d</italic>2<italic>D</italic> consists of 100×100 colours). However, because the transition <italic>diffuse</italic> has a guard expression, only transitions for the colours satisfying this Boolean expression are added. The transition <italic>C</italic>
<italic>a</italic>_<italic>i</italic>
<italic>n</italic>
<italic>f</italic>
<italic>l</italic>
<italic>o</italic>
<italic>w</italic> will have only one copy in the unfolded net because the input and output arcs contain a constant expression. Nevertheless, this procedure does not need to be implemented iteratively as we do in this small example. Instead, it can be viewed as a constraint satisfaction problem (CSP) which can be solved by a dedicated CSP solver (e.g. [<xref ref-type="bibr" rid="CR34">34</xref>]).</p>
    </sec>
    <sec id="Sec18">
      <title>Export and import</title>
      <p>Snoopy supports the import/export of Petri net models from/to other tools and formats. First, Snoopy imports and exports the (C)ANDL format (cf. [<xref ref-type="bibr" rid="CR21">21</xref>]) which is a human readable file format used by other software tools (e.g., Marcie [<xref ref-type="bibr" rid="CR35">35</xref>] and Charlie [<xref ref-type="bibr" rid="CR36">36</xref>]) which can be employed for a formal analysis of Petri net models (e.g., structure analysis, model checking, etc.). Moreover, Snoopy reads and writes SBML files [<xref ref-type="bibr" rid="CR37">37</xref>] according to SBML level 2 version 4 by using libSBML [<xref ref-type="bibr" rid="CR38">38</xref>]. However, we support only a subset of SBML elements that is compatible to our net classes; specifically we do not support any kind of rules or events. Snoopy passes all tests of the SBML Test Suite comprising supported elements. However, the partitioning of hybrid models is lost when exporting to SBML, because SBML has no support for hybrid models yet. The user has to decide whether the exported model has to be treated stochastically or continuously. Furthermore, a coloured model is exported to SBML by first unfolding it into the low level representation and then performing the export.</p>
    </sec>
    <sec id="Sec19">
      <title>Implementation language and external libraries</title>
      <p>Snoopy’s Hybrid Simulator has been implemented using standard C++. As a component of Snoopy, it adopts wxWidget [<xref ref-type="bibr" rid="CR39">39</xref>] to implement the graphical user interface under different operating systems. Moreover, the stochastic and deterministic simulation components are implemented in a modular way such that different algorithms can be easily exchanged to execute the stochastic and deterministic regimes. Snoopy’s hybrid simulator adopts internally an external library, SUNDIAL CVODE [<xref ref-type="bibr" rid="CR32">32</xref>], to solve a system of ODEs. The ODE library provides two main algorithms: one for stiff and one for non-stiff ODEs. Additional ODE solver modules can easily be added in future releases. We also make use of the C++ library Boost [<xref ref-type="bibr" rid="CR40">40</xref>] to carry out routine tasks such as input parsing and multithreading support.</p>
    </sec>
  </sec>
  <sec id="Sec20" sec-type="results">
    <title>Results</title>
    <sec id="Sec21">
      <title>Snoopy’s hybrid simulator provides a graphical and convenient way to construct hybrid models</title>
      <p>Before using Snoopy’s hybrid simulator, a model needs to be constructed by specifying reactions, species, stoichiometries, kinetic rates, etc. In Snoopy a model is usually constructed using Petri net notations. However, existing models can also be imported from other formats including the well known SBML. In what follows, we present two methods that permit the construction of hybrid models in Snoopy.</p>
      <sec id="Sec22">
        <title>Simple models</title>
        <p>For simple models which involve a limited number of reactions and species (e.g., both less than 100), we use <inline-formula id="IEq34"><alternatives><tex-math id="M71">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {HPN}}$\end{document}</tex-math><mml:math id="M72"><mml:mi mathvariant="script">ℋ</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq34.gif"/></alternatives></inline-formula> to construct them. Snoopy’s hybrid simulator supports two types of places, five types of transitions and six arc types to facilitate the convenient modelling of hybrid biological systems. A complete description of these elements is provided in the user manual [<xref ref-type="bibr" rid="CR21">21</xref>]. Unlike other hybrid Petri net tools and similar to the semantics discussed in [<xref ref-type="bibr" rid="CR25">25</xref>], we apply the bio-semantics to execute the continuous part of the <inline-formula id="IEq35"><alternatives><tex-math id="M73">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {HPN}}$\end{document}</tex-math><mml:math id="M74"><mml:mi mathvariant="script">ℋ</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq35.gif"/></alternatives></inline-formula> (see also the “<xref rid="Sec1" ref-type="sec">Background</xref>” section), which is more efficient than the adaptive semantics when simulating biological models.</p>
      </sec>
      <sec id="Sec23">
        <title>Coloured models</title>
        <p>For large-scale biological systems, the corresponding <inline-formula id="IEq36"><alternatives><tex-math id="M75">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {HPN}}$\end{document}</tex-math><mml:math id="M76"><mml:mi mathvariant="script">ℋ</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq36.gif"/></alternatives></inline-formula> models become difficult to manage. In this case, we may use <inline-formula id="IEq37"><alternatives><tex-math id="M77">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {HPN^{C}}}$\end{document}</tex-math><mml:math id="M78"><mml:mi mathvariant="script">ℋ</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:msup><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq37.gif"/></alternatives></inline-formula> (see the “<xref rid="Sec1" ref-type="sec">Background</xref>” section) for model construction. These models may exhibit many repeated components as well as spatial behaviour (see Fig. <xref rid="Fig2" ref-type="fig">2</xref> for an example). Colours have been successfully deployed to model many real biological applications (for examples see [<xref ref-type="bibr" rid="CR28">28</xref>, <xref ref-type="bibr" rid="CR41">41</xref>, <xref ref-type="bibr" rid="CR42">42</xref>]).</p>
      </sec>
    </sec>
    <sec id="Sec24">
      <title>Snoopy’s hybrid simulator provides an efficient way to execute hybrid models</title>
      <p>Once a model has been created, it can be simulated using one of the algorithms discussed in the previous section. The simulation dialog has been designed to be intuitive with many options to configure the simulation. Furthermore, the resulting time course data can either be viewed inside Snoopy or exported for further processing. In the following we summarise the required steps to execute a hybrid model. A more detailed discussion can be found in [<xref ref-type="bibr" rid="CR21">21</xref>]. 
<list list-type="order"><list-item><p><bold>Configure the constructed model:</bold> Before running the simulation, you may need to adjust the model setting (see the model configuration section in Fig. <xref rid="Fig2" ref-type="fig">2</xref>), which includes choosing the initial state and/or the kinetic rate constants.</p></list-item><list-item><p><bold>Configure the chosen simulator:</bold> To run a hybrid simulator you have to select an appropriate synchronisation algorithm, which is one of the discussed hybrid simulation methods, as well as the type of the ODE solver. Moreover, depending on the specific model, a user might need to adjust the options of the ODE solver. For many hybrid models, the default settings can be kept. However, Snoopy’s hybrid simulator offers a wide range of other options for complex hybrid models that require special treatment (see the simulation configuration section in Fig. <xref rid="Fig2" ref-type="fig">2</xref>).</p></list-item><list-item><p><bold>Run the simulation and explore the results:</bold> After the model and the simulator are configured, the simulation can be started. You may need to create a new result view to explore the simulation output.</p></list-item><list-item><p><bold>Export the simulation results:</bold> As a final step, the resulting data can be exported to a CSV file for further post-processing.</p></list-item></list>
</p>
    </sec>
    <sec id="Sec25">
      <title>Example of using Snoopy’s hybrid simulator</title>
      <p>To demonstrate how Snoopy’s hybrid simulator can be used to deal with hybrid biological models, we include a sample application and show how this model can be constructed using <inline-formula id="IEq38"><alternatives><tex-math id="M79">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {HPN}}$\end{document}</tex-math><mml:math id="M80"><mml:mi mathvariant="script">ℋ</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq38.gif"/></alternatives></inline-formula> notations and then executed via a hybrid simulation algorithm.</p>
      <p>When studying cell fate behaviour, where a cell decides either to undergo cell cycle arrest or commit apoptosis [<xref ref-type="bibr" rid="CR43">43</xref>–<xref ref-type="bibr" rid="CR45">45</xref>] in response to DNA damage, a model describing this phenomenon can be clearly divided into two parts: one with species exhibiting low number of molecules and the other one involving species with high number of molecules. In such cases, it may not be feasible to apply stochastic simulation due to the huge number of stochastic events.</p>
      <p>We deploy a recent model from [<xref ref-type="bibr" rid="CR31">31</xref>] as a sample use case for illustrating Snoopy’s hybrid simulator. This model permits to investigate the importance of various DDR (DNA Damage Response) elements after DNA damage induction during cell fate determination. More specifically, the model studies the ATM/p53/NF- <italic>κ</italic>B pathway, consisting of four main modules: p53 (a tumor suppressor protein), ATM (ataxia telangiectasia mutated), NF- <italic>κ</italic>B (a nuclear transcriptional factor) and Wip1 (a p53-induced protein phosphatase), and involves three different compartments: nucleus, cytoplasm, and extracellular matrix [<xref ref-type="bibr" rid="CR31">31</xref>]. The main aim of the model is to explore the connection between these four key proteins and protein phosphates in order to understand cellular response to DNA damage which is important to understand cell fate determination. A key model component is Wip1, which is increased to a level that can block the corresponding cell apoptotic decision when DNA repair is successful [<xref ref-type="bibr" rid="CR31">31</xref>]. However, the level of Wip1 should not stay high after DNA repair; otherwise the cell will not be sensitive to future damage. The model is divided into the following stochastic and deterministic parts. All the genes such as Wip and ATM are considered as discrete places, and all reactions related to genes (gene expression and degradation) are kept stochastic, while all the other species are considered as continuous places, and all other reactions, except those related to DSB (DNA double-strand breaks) creation and repair, are modelled as deterministic transitions. The output of the model consist of the levels of molecules with respect to time after irradiation and also the cell fate decision. Figure <xref rid="Fig5" ref-type="fig">5</xref> depicts the Snoopy implementation of this model.
<fig id="Fig5"><label>Fig. 5</label><caption><p>Implementing the ATM/P53/NF- <italic>κ</italic>B pathway model from [<xref ref-type="bibr" rid="CR31">31</xref>] using Snoopy’s hybrid simulator. <italic>Circles</italic> (places) represent species, <italic>squares</italic> (transitions) represent reactions, and arcs denote connections between the two node types. More information about these notations can be found in [<xref ref-type="bibr" rid="CR11">11</xref>, <xref ref-type="bibr" rid="CR21">21</xref>]. <italic>Coloured circles</italic> represent discrete species, while the uncoloured ones represent continuous species. Similarly, <italic>coloured squares</italic> represent stochastic reactions, while uncoloured ones denote continuous reactions. <italic>Solid black arcs</italic> represent connections that consume molecules when the corresponding reaction fires, while <italic>dashed coloured</italic> ones just permit the use of substrates for defining reaction rates. <italic>Grey</italic> nodes are logical places that are repeated to simplify the network layout. Please note, inhibitor arcs (arc with <italic>small circles</italic>) enforce the number of genes to be at most two [<xref ref-type="bibr" rid="CR31">31</xref>]. The complete Snoopy file is provided in the Additional file <xref rid="MOESM2" ref-type="media">2</xref>: S2.</p></caption><graphic xlink:href="12918_2017_449_Fig5_HTML" id="MO5"/></fig>
</p>
      <p>The accelerated hybrid simulation algorithm [<xref ref-type="bibr" rid="CR13">13</xref>] is chosen to execute this model due to the weak coupling between the two reaction regimes. Figure <xref rid="Fig6" ref-type="fig">6</xref> gives a screenshot of simulating the model using Snoopy’s hybrid simulator which includes the time course behaviour of two versions of the gene Checkpoint kinase 2 (CHK2): inactive (CHK2_n,) and active (CHK2_pn,), in addition to the negative regulator protein of the p53 (denoted by MDM2), and the nuclear version of Wip1 (Wip1_n). The simulator output in Fig. <xref rid="Fig6" ref-type="fig">6</xref> can also be exported to a CSV file for further processing. For example, in this model it may be required to count the number of cells that undergo apoptosis and those which exhibit cell cycle arrest. A threshold of the concentration of species p53, P21 (representing the p21 protein) and Bax (denoting the Bax protein) can be used to extract this information [<xref ref-type="bibr" rid="CR31">31</xref>]. Such post-processing can be done by help of the exported simulation traces. Moreover, a performance comparison of three simulation algorithms when executing this model is provided in Table <xref rid="Tab2" ref-type="table">2</xref>. The Snoopy file is included in the Additional file <xref rid="MOESM3" ref-type="media">3</xref>: S3, while a short description of how to execute the model is given in the Additional file <xref rid="MOESM4" ref-type="media">4</xref>: S4.
<fig id="Fig6"><label>Fig. 6</label><caption><p>A screenshot of simulating the ATM/P53/NF- <italic>κ</italic>B pathway model via Snoopy’s hybrid simulator. The different curves represent the time course behaviour of four model species. The simulation is done by executing the model given in Fig. <xref rid="Fig5" ref-type="fig">5</xref> for the time period from 0 to 100,000 seconds with the accelerated algorithm</p></caption><graphic xlink:href="12918_2017_449_Fig6_HTML" id="MO6"/></fig>
</p>
    </sec>
  </sec>
  <sec id="Sec26" sec-type="discussion">
    <title>Discussion</title>
    <sec id="Sec27">
      <title>Installation</title>
      <p>Snoopy’s hybrid simulation is installed as part of Snoopy. The Snoopy installation package can be run just by one click on a local computer with one of the three well-known operating systems. No additional dependencies do exist. In other words, all dependent packages are installed with Snoopy’s main package. A detailed procedure of how to install Snoopy on these platforms is given in its user manual.</p>
    </sec>
    <sec id="Sec28">
      <title>Comparison with other tools</title>
      <p>In this section we compare Snoopy’s hybrid simulator with two of the well-known software tools that provide a hybrid simulation module to systems biologists: COPASI [<xref ref-type="bibr" rid="CR16">16</xref>] and Virtual Cell (VCell) [<xref ref-type="bibr" rid="CR17">17</xref>]. Table <xref rid="Tab1" ref-type="table">1</xref> summarises the features of COPASI, Virtual Cell, and Snoopy’s hybrid simulator with respect to the hybrid simulation procedures supported by the three tools.
<table-wrap id="Tab1"><label>Table 1</label><caption><p>Comparison of Snoopy’s hybrid simulator with two other similar tools</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Features ∖Tools</th><th align="left">Snoopy’s hybrid simulator</th><th align="left">COPASI [<xref ref-type="bibr" rid="CR16">16</xref>]</th><th align="left">VCell [<xref ref-type="bibr" rid="CR17">17</xref>]</th></tr></thead><tbody><tr><td align="justify">Use of graphical notations to specify model reactions</td><td align="left">Yes</td><td align="left">No</td><td align="left">Yes</td></tr><tr><td align="justify">Use of a parameterised language to manage larger models</td><td align="left">Yes</td><td align="left">No</td><td align="left">No</td></tr><tr><td align="justify">Support unstiff ODE solvers</td><td align="left">Yes</td><td align="left">Yes</td><td align="left">Yes</td></tr><tr><td align="justify">Support stiff ODE solvers</td><td align="left">Yes</td><td align="left">Yes</td><td align="left">Yes</td></tr><tr><td align="justify">Improving simulation performance by analysing the model structure</td><td align="left">Yes</td><td align="left">No</td><td align="left">No</td></tr><tr><td align="justify">Interplay of stochastic and deterministic modules</td><td align="left">Variable</td><td align="left">Fixed</td><td align="left">Fixed</td></tr><tr><td align="justify">Exact hybrid simulation</td><td align="left">Yes</td><td align="left">Yes</td><td align="left">No</td></tr><tr><td align="justify">Platform-independent</td><td align="left">Yes</td><td align="left">Yes</td><td align="left">Yes</td></tr><tr><td align="justify">Availability</td><td align="left">Free</td><td align="left">Free</td><td align="left">Free</td></tr></tbody></table></table-wrap>
</p>
      <p>COPASI [<xref ref-type="bibr" rid="CR16">16</xref>] is a general-purpose software tool for constructing and executing computational biological models. It provides tables and widgets as user interface to specify compartments, reactions, species and other related parameters. It reads and writes models written in SBML. For hybrid simulation, COPASI adopts a version similar to the Haseltine and Rawlings method, which has been independently developed at the same time [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR16">16</xref>]. However, it deploys a tight coupling of the SSA and a specific ODE solver. To be precise, COPASI offers an hybrid Runge-Kutta/SSA algorithm, combining the classical Runge-Kutta ODE solver with the SSA algorithm, an LSODA/SSA, combining LSODA – a dynamic switching between stiff/nonstiff solvers – with the SSA algorithm, and recently it has been extended to support HybridRK-45. COPASI is platform-independent and is available free of charge.</p>
      <p>The Virtual Cell [<xref ref-type="bibr" rid="CR17">17</xref>] modelling and analysis tool also provides a module to execute hybrid models. Virtual Cell is deployed as a distributed application that can be downloaded free of charge. It uses the BioModel as well as VCell Markup Language to construct cell models. Three hybrid algorithms are supported: Hybrid (Gibson/Euler–Maruyama), Hybrid (Gibson/Milstein), and Hybrid (Adaptive Gibson/ Milstein).</p>
      <p>Compared with COPASI and Virtual Cell, Snoopy’s hybrid simulator offers a set of features that can improve the performance as well as the productivity of constructing and executing hybrid biological models. These include: analysing reaction networks to accelerate the simulation, implementing a modular design of the stochastic and deterministic procedures, implementing the state of the art of hybrid simulation algorithms, deploying accurate and efficient hybrid simulation algorithms, and utilising a parameterised language (coloured hybrid Petri nets) to construct large scale biological models.</p>
      <p>On the one hand, Snoopy’s hybrid simulator makes use of the structural information of the underlying reaction network to boost the overall simulation performance. For instance, the accelerated hybrid simulation algorithm, presented in [<xref ref-type="bibr" rid="CR13">13</xref>], increases the performance of some hybrid models by ten times compared to the classical Haseltine and Rawlings method as it has been asserted in [<xref ref-type="bibr" rid="CR13">13</xref>]. This improvement in the runtime is mainly due to detection of reaction dependencies between the deterministic and stochastic regime. In other words, Snoopy’s hybrid simulator avoids unnecessary re-initialisations of the ODE solver when the system state of the ODE solver is not affected by the firing of the current discrete event.</p>
      <p>On the other hand, Snoopy’s hybrid simulator does not assume a fixed combination of the ODE solvers and the SSA algorithms as in COPASI and Virtual Cell. Instead, a user can select the appropriate type of the ODE solver, and the hybrid simulation algorithm acts as a time synchronisation module. Such modular design facilitates the support of new ODE solvers and SSA algorithms in the future with minimal efforts. Moreover, the user can take advantage of this modular design by selecting a different combination of the stochastic solver, ODE solver, and the hybrid time synchronisation procedure. This feature can be beneficial to address the issue that different models may have their own computational demands.</p>
      <p>Furthermore, Snoopy’s hybrid simulator implements the state of the art of hybrid simulation algorithms that have a better performance than the classical ones. For example, Snoopy’s hybrid simulator implements the hybrid rejection-based stochastic simulation algorithm which has been recently introduced in [<xref ref-type="bibr" rid="CR12">12</xref>]; it represents a promising direction to improve hybrid simulation when dynamic and static partitioning strategies are used.</p>
      <p>To improve the simulation performance, the previous hybrid simulation algorithm implemented in COPASI does not include time-varying propensities in the slow subsystem [<xref ref-type="bibr" rid="CR1">1</xref>] (i.e., there is no check for (<xref rid="Equ1" ref-type="">1</xref>) or any similar exact methods, e.g., [<xref ref-type="bibr" rid="CR12">12</xref>]). Although this approach can improve the simulation performance, it will affect the result accuracy. Recently, a new hybrid module (HybridRK-45,) has been added to COPASI to improve the simulation accuracy and overcome this limitation. On the contrary, Snoopy’s hybrid simulator implements three exact versions of the algorithm in [<xref ref-type="bibr" rid="CR9">9</xref>]. Moreover, recent advances of the theory of hybrid simulation (e.g,. in [<xref ref-type="bibr" rid="CR12">12</xref>] and [<xref ref-type="bibr" rid="CR13">13</xref>]) render it possible to overcome the computational overhead to check (<xref rid="Equ1" ref-type="">1</xref>) or an alternative as (<xref rid="Equ2" ref-type="">2</xref>).</p>
      <p>Finally, unlike COPASI and Virtual Cell, Snoopy’s hybrid simulator deploys a special parameterised language, coloured hybrid Petri nets, to deal with larger models which cannot be easily managed using traditional model construction approaches (see Fig. <xref rid="Fig2" ref-type="fig">2</xref> for an example).</p>
      <p>Compared with the different simulation approaches discussed in [<xref ref-type="bibr" rid="CR1">1</xref>], Snoopy’s hybrid simulator mainly supports three hybrid algorithms that consider time-varying propensities. That is the changes in the propensities of slow reactions, while the deterministically simulated reactions are evolving, are exactly captured using (<xref rid="Equ1" ref-type="">1</xref>), (<xref rid="Equ2" ref-type="">2</xref>), or using the approach introduced in [<xref ref-type="bibr" rid="CR12">12</xref>]. The biochemical reaction networks can either be partitioned by the user (i.e., the net is drawn by the user as stochastic and deterministic subnets), or it can be partitioned online by Snoopy’s hybrid simulator. In the latter case the reaction propensities as well as the number of molecules in the reaction substrates serve as criteria to carry out the partitioning.</p>
    </sec>
    <sec id="Sec29">
      <title>Performance measures</title>
      <p>To evaluate the performance of the three main algorithms implemented in Snoopy’s hybrid simulator, we give the runtimes of four case studies as performance measures. The case studies range from simple to complex ones that involve many species and reactions. These include: a T7 phage model [<xref ref-type="bibr" rid="CR8">8</xref>], a hybrid model of the eukaryotic cell cycle [<xref ref-type="bibr" rid="CR29">29</xref>] based on the stochastic one in [<xref ref-type="bibr" rid="CR7">7</xref>], the ATM/p53/NF- <italic>κ</italic>B model [<xref ref-type="bibr" rid="CR31">31</xref>] which has been discussed in the “<xref rid="Sec20" ref-type="sec">Results</xref>” section, and the simple hybrid calcium model provided in Fig. <xref rid="Fig2" ref-type="fig">2</xref>. The simulation experiments have been conducted on a Mac Pro. with 3 GHz Core i7 processor and 8GB memory.</p>
      <p>Table <xref rid="Tab2" ref-type="table">2</xref> summarises the number of species and reactions as well as the runtime of each example model when they are simulated using each of the three hybrid algorithms. For the T7 model we use the partitioning scheme discussed in [<xref ref-type="bibr" rid="CR11">11</xref>], while for the eukaryotic cell cycle model we apply the same partitioning as discussed in [<xref ref-type="bibr" rid="CR29">29</xref>]. For the purpose of performance comparison we provide the number of stochastic events produced by each model. The percentage numbers given in parentheses represent the speed of the accelerated and improved algorithms compared to the Haseltine and Rawlings algorithm, and negative values mean the latter algorithm is faster.
<table-wrap id="Tab2"><label>Table 2</label><caption><p>Performance measures of the three implemented algorithms in Snoopy’s hybrid simulator</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Measures ∖Models</th><th align="left" colspan="3">Model Information</th><th align="left" colspan="3">Runtimes of Simulation Algorithms (sec.)</th></tr><tr><th align="left"/><th align="left">Species (Discrete)</th><th align="left">Reactions (Stochastic)</th><th align="left">Stochastic Events</th><th align="left">Haseltine&amp; Rawlings <sup>∗</sup>
</th><th align="left">Accelerated Method</th><th align="left">Improved HRSSA</th></tr></thead><tbody><tr><td align="justify">T7 Phage (1,000 runs)</td><td align="justify">3 (2)</td><td align="justify">6 (4)</td><td align="justify">4,238,978</td><td align="justify">120.2</td><td align="justify">41.7 (281%)</td><td align="justify">26.6 (452%)</td></tr><tr><td align="justify">ATM/p53/NF- <italic>κ</italic>B</td><td align="justify">62 (14)</td><td align="justify">119 (24)</td><td align="justify">3,726</td><td align="justify">6.3</td><td align="justify">1.9 (332%)</td><td align="justify">0.96 (656%)</td></tr><tr><td align="justify">Cell Cycle Model</td><td align="justify">26 (14)</td><td align="justify">51 (20)</td><td align="justify">762,612</td><td align="justify">870.4</td><td align="justify">625.7 (139%)</td><td align="justify">365.5 (238%)</td></tr><tr><td align="justify">Calcium Model (Fig. <xref rid="Fig2" ref-type="fig">2</xref>)</td><td align="justify">10,006 (6)</td><td align="justify">49,607 (6)</td><td align="justify">29</td><td align="justify">215.8</td><td align="justify">220.7 (-1.1%)</td><td align="justify">190 (1.13%)</td></tr></tbody></table><table-wrap-foot><p><sup>*</sup>This refers to the algorithm version which exactly accounts for Eq. (<xref rid="Equ1" ref-type="">1</xref>)</p></table-wrap-foot></table-wrap>
</p>
      <p>In the Haseltine and Rawlings algorithm, the runtime required to simulate a model mainly depends on the number of corresponding stochastic events. This fact is illustrated by the four case studies. For instance, although the T7 phage model consists of only six reactions (four of them are simulated stochastically), it takes a considerable runtime compared to the calcium model where ten of thousands of reactions are involved. This is not the case in the accelerated and improved HRSSA algorithms, since not all of the stochastic reactions affect the deterministic solver. For instance, in the ATM/p53/NF- <italic>κ</italic>B model, there is a substantial gain in terms of the runtimes because only very few stochastic events trigger a reinitialisation of the ODE solver (compare Fig. <xref rid="Fig5" ref-type="fig">5</xref>). Moreover, the runtime for the calcium model is comparable for all three algorithms because there are only a few stochastic events and the optimisation by the accelerated and improved HRSSA algorithms does not play a role.</p>
      <p>Although the number of stochastic events in the cell cycle model is less than those in the T7 phage model, the latter model takes less runtime. The extra runtime is taken by the ODE solver, since the numerical integration of the cell cycle model exhibits more discontinuities, due to the volume division (cf. [<xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR29">29</xref>]) than the T7 phage model where only two reactions are simulated deterministically.</p>
      <p>The accuracy of the simulation results is the same for the three simulation algorithms since the core idea has not been changed. The accelerated and improved HRSSA approaches avoid the reinitialisation of the deterministic module for stochastic events which do not have an effect on the deterministic solver. This will not influence the simulation accuracy (please see [<xref ref-type="bibr" rid="CR12">12</xref>, <xref ref-type="bibr" rid="CR13">13</xref>] for more details).</p>
    </sec>
    <sec id="Sec30">
      <title>Future improvements</title>
      <p>The development of Snoopy and its hybrid simulator is still active and new features and algorithms can be added in the future to further enrich its simulation capabilities. We will continue to investigate how to further improve the performance of the hybrid simulation by exploiting the model structure. Moreover, we intend to support additional ODE solvers and other stochastic simulation algorithms to execute the semantics of different types of models. Currently, the simulation library depends on Snoopy’s graphical user interface for reading a model. As a future extension of this scenario, we intend to create a command line application that reads SBML files or the Petri net file and simulates them directly using the simulation library. We will also continue to incorporate recent hybrid algorithms to Snoopy’s hybrid simulator. The mailing list snoopy@informatik.tu-cottbus.de is dedicated to potential queries and bugs about Snoopy and its components.</p>
    </sec>
  </sec>
  <sec id="Sec31" sec-type="conclusion">
    <title>Conclusions</title>
    <p>In this paper we have presented Snoopy’s hybrid simulator, a tool to execute hybrid biological models. Snoopy’s hybrid simulator has been developed over the last five years, and reached recently a mature and reliable state. It employs a variety of hybrid simulation algorithms such that it can deal with various types of biological models that are usually encountered in systems biology. In addition to the simulation capabilities, the model can take advantage of the graphical representation via hybrid Petri nets notations when it is constructed and simulated via Snoopy’s hybrid simulator.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Additional files</title>
    <sec id="Sec32">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="12918_2017_449_MOESM1_ESM.hpn">
            <label>Additional file 1</label>
            <caption>
              <p>An example <inline-formula id="IEq39"><alternatives><tex-math id="M81">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {HPN}}$\end{document}</tex-math><mml:math id="M82"><mml:mi mathvariant="script">ℋ</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq39.gif"/></alternatives></inline-formula>model. A Snoopy file implementing the calcium dynamics using <inline-formula id="IEq40"><alternatives><tex-math id="M83">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {HPN}}$\end{document}</tex-math><mml:math id="M84"><mml:mi mathvariant="script">ℋ</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq40.gif"/></alternatives></inline-formula> notations. (HPN 56 kb)</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
      <p>
        <supplementary-material content-type="local-data" id="MOESM2">
          <media xlink:href="12918_2017_449_MOESM2_ESM.colhpn">
            <label>Additional file 2</label>
            <caption>
              <p>An example <inline-formula id="IEq41"><alternatives><tex-math id="M85">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {HPN^{C}}}$\end{document}</tex-math><mml:math id="M86"><mml:mi mathvariant="script">ℋ</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:msup><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq41.gif"/></alternatives></inline-formula>model. A Snoopy file implementing the calcium spatial dynamics using <inline-formula id="IEq42"><alternatives><tex-math id="M87">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {HPN^{C}}}$\end{document}</tex-math><mml:math id="M88"><mml:mi mathvariant="script">ℋ</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:msup><mml:mrow><mml:mi mathvariant="script">N</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="12918_2017_449_Article_IEq42.gif"/></alternatives></inline-formula> notations. (COLHPN 114 kb)</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
      <p>
        <supplementary-material content-type="local-data" id="MOESM3">
          <media xlink:href="12918_2017_449_MOESM3_ESM.hpn">
            <label>Additional file 3</label>
            <caption>
              <p>the ATM/p53/NF- <italic>κ</italic>B HPN model. A Snoopy file implementing the ATM/p53/NF- <italic>κ</italic>B. (HPN 1193 kb)</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
      <p>
        <supplementary-material content-type="local-data" id="MOESM4">
          <media xlink:href="12918_2017_449_MOESM4_ESM.pdf">
            <label>Additional file 4</label>
            <caption>
              <p>Description of the ATM/p53/NF-kB HPN model. A short description of how to open and simulate the Snoopy file of the ATM/p53/NF- <italic>κ</italic>B HPN model. (PDF 1248 kb)</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>DSB</term>
        <def>
          <p>DNA double-strand breaks</p>
        </def>
      </def-item>
      <def-item>
        <term>
          <inline-formula id="IEq43">
            <alternatives>
              <tex-math id="M89">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {GHPN}}$\end{document}</tex-math>
              <mml:math id="M90">
                <mml:mi mathvariant="script">G</mml:mi>
                <mml:mi mathvariant="script">ℋ</mml:mi>
                <mml:mi mathvariant="script">P</mml:mi>
                <mml:mi mathvariant="script">N</mml:mi>
              </mml:math>
              <inline-graphic xlink:href="12918_2017_449_Article_IEq43.gif"/>
            </alternatives>
          </inline-formula>
        </term>
        <def>
          <p>Generalised hybrid Petri nets</p>
        </def>
      </def-item>
      <def-item>
        <term>
          <inline-formula id="IEq44">
            <alternatives>
              <tex-math id="M91">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {HPN}}$\end{document}</tex-math>
              <mml:math id="M92">
                <mml:mi mathvariant="script">ℋ</mml:mi>
                <mml:mi mathvariant="script">P</mml:mi>
                <mml:mi mathvariant="script">N</mml:mi>
              </mml:math>
              <inline-graphic xlink:href="12918_2017_449_Article_IEq44.gif"/>
            </alternatives>
          </inline-formula>
        </term>
        <def>
          <p>Hybrid Petri nets</p>
        </def>
      </def-item>
      <def-item>
        <term>
          <inline-formula id="IEq45">
            <alternatives>
              <tex-math id="M93">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${\mathcal {HPN^{C}}}$\end{document}</tex-math>
              <mml:math id="M94">
                <mml:mi mathvariant="script">ℋ</mml:mi>
                <mml:mi mathvariant="script">P</mml:mi>
                <mml:msup>
                  <mml:mrow>
                    <mml:mi mathvariant="script">N</mml:mi>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:mi mathvariant="script">C</mml:mi>
                  </mml:mrow>
                </mml:msup>
              </mml:math>
              <inline-graphic xlink:href="12918_2017_449_Article_IEq45.gif"/>
            </alternatives>
          </inline-formula>
        </term>
        <def>
          <p>Coloured hybrid Petri nets</p>
        </def>
      </def-item>
      <def-item>
        <term>ODE</term>
        <def>
          <p>Ordinary differential equation</p>
        </def>
      </def-item>
      <def-item>
        <term>SBML</term>
        <def>
          <p>Systems biology markup language</p>
        </def>
      </def-item>
      <def-item>
        <term>SSA</term>
        <def>
          <p>Stochastic simulation algorithm</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Electronic supplementary material</bold>
      </p>
      <p>The online version of this article (doi:10.1186/s12918-017-0449-6) contains supplementary material, which is available to authorized users.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>None.</p>
    <sec id="d29e2749">
      <title>Funding</title>
      <p>This work was partially financed by National Natural Science Foundation of China (61273226).</p>
    </sec>
    <sec id="d29e2754">
      <title>Availability of data and materials</title>
      <p>All the data and materials used in this paper are included in the supplementary materials. Snoopy’s hybrid simulator is freely available as part of Snoopy at <ext-link ext-link-type="uri" xlink:href="http://www-dssz.informatik.tu-cottbus.de/DSSZ/Software/Snoopy">http://www-dssz.informatik.tu-cottbus.de/DSSZ/Software/Snoopy</ext-link>.</p>
    </sec>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors’ contributions</title>
    <p>MH proposed the idea. MoH (Mostafa Herajy), FL, and CR carried out the implementation. MH tested the implementation. MoH and FL wrote the draft. MH and CR read and improved the draft. All the authors read and approved the final version.</p>
  </notes>
  <notes notes-type="COI-statement">
    <sec id="d29e2770">
      <title>Ethics approval and consent to participate</title>
      <p>Not applicable.</p>
    </sec>
    <sec id="d29e2775">
      <title>Consent for publication</title>
      <p>Not applicable.</p>
    </sec>
    <sec id="d29e2780">
      <title>Competing interests</title>
      <p>The authors declare that they have no competing interests.</p>
    </sec>
    <sec id="d29e2785">
      <title>Publisher’s Note</title>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </sec>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pahle</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Biochemical simulations: stochastic, approximate stochastic and hybrid approaches</article-title>
        <source>Brief Bioinform</source>
        <year>2009</year>
        <volume>10</volume>
        <issue>1</issue>
        <fpage>53</fpage>
        <pub-id pub-id-type="doi">10.1093/bib/bbn050</pub-id>
        <?supplied-pmid 19151097?>
        <pub-id pub-id-type="pmid">19151097</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gillespie</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>Stochastic simulation of chemical kinetics,</article-title>
        <source>Annu Rev Phys Chem</source>
        <year>2007</year>
        <volume>58</volume>
        <issue>1</issue>
        <fpage>35</fpage>
        <lpage>55</lpage>
        <pub-id pub-id-type="doi">10.1146/annurev.physchem.58.032806.104637</pub-id>
        <?supplied-pmid 17037977?>
        <pub-id pub-id-type="pmid">17037977</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gillespie</surname>
            <given-names>DT</given-names>
          </name>
        </person-group>
        <article-title>A general method for numerically simulating the stochastic time evolution of coupled chemical reactions</article-title>
        <source>J Comput Phys</source>
        <year>1976</year>
        <volume>22</volume>
        <issue>4</issue>
        <fpage>403</fpage>
        <lpage>34</lpage>
        <pub-id pub-id-type="doi">10.1016/0021-9991(76)90041-3</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gillespie</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>Exact stochastic simulation of coupled chemical reactions</article-title>
        <source>J Phys Chem</source>
        <year>1977</year>
        <volume>81</volume>
        <issue>25</issue>
        <fpage>2340</fpage>
        <lpage>361</lpage>
        <pub-id pub-id-type="doi">10.1021/j100540a008</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cao</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Gillespie</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Petzold</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>Adaptive explicit-implicit tau-leaping method with automatic tau selection</article-title>
        <source>J Chem Phys</source>
        <year>2007</year>
        <volume>126</volume>
        <issue>22</issue>
        <fpage>224101</fpage>
        <pub-id pub-id-type="doi">10.1063/1.2745299</pub-id>
        <?supplied-pmid 17581038?>
        <pub-id pub-id-type="pmid">17581038</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Duncan</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Erban</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Zygalakis</surname>
            <given-names>K</given-names>
          </name>
        </person-group>
        <article-title>Hybrid framework for the simulation of stochastic chemical kinetics</article-title>
        <source>J Comput Phys</source>
        <year>2016</year>
        <volume>326</volume>
        <fpage>398</fpage>
        <lpage>419</lpage>
        <pub-id pub-id-type="doi">10.1016/j.jcp.2016.08.034</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kar</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Baumann</surname>
            <given-names>WT</given-names>
          </name>
          <name>
            <surname>Paul</surname>
            <given-names>MR</given-names>
          </name>
          <name>
            <surname>Tyson</surname>
            <given-names>JJ</given-names>
          </name>
        </person-group>
        <article-title>Exploring the roles of noise in the eukaryotic cell cycle</article-title>
        <source>Proc Natl Acad Sci U S A</source>
        <year>2009</year>
        <volume>106</volume>
        <issue>16</issue>
        <fpage>6471</fpage>
        <lpage>476</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.0810034106</pub-id>
        <?supplied-pmid 19246388?>
        <pub-id pub-id-type="pmid">19246388</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Srivastava</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>You</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Summers</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Yin</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Stochastic vs. deterministic modeling of intracellular viral kinetics</article-title>
        <source>J theor Biol</source>
        <year>2002</year>
        <volume>218</volume>
        <issue>3</issue>
        <fpage>309</fpage>
        <lpage>21</lpage>
        <pub-id pub-id-type="doi">10.1006/jtbi.2002.3078</pub-id>
        <?supplied-pmid 12381432?>
        <pub-id pub-id-type="pmid">12381432</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Haseltine</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Rawlings</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Approximate simulation of coupled fast and slow reactions for stochastic chemical kinetics</article-title>
        <source>J Chem Phys</source>
        <year>2002</year>
        <volume>117</volume>
        <issue>15</issue>
        <fpage>6959</fpage>
        <lpage>969</lpage>
        <pub-id pub-id-type="doi">10.1063/1.1505860</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kiehl</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Mattheyses</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Simmons</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Hybrid Simul Cell Behav</article-title>
        <source>Bioinformatics</source>
        <year>2004</year>
        <volume>20</volume>
        <fpage>316</fpage>
        <lpage>22</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btg409</pub-id>
        <?supplied-pmid 14960457?>
        <pub-id pub-id-type="pmid">14960457</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Herajy</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Heiner</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Hybrid representation and simulation of stiff biochemical networks</article-title>
        <source>J Nonlinear Anal Hybrid Syst</source>
        <year>2012</year>
        <volume>6</volume>
        <issue>4</issue>
        <fpage>942</fpage>
        <lpage>59</lpage>
        <pub-id pub-id-type="doi">10.1016/j.nahs.2012.05.004</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Marchetti</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Priami</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Thanh</surname>
            <given-names>VH</given-names>
          </name>
        </person-group>
        <article-title>HRSSA - efficient hybrid stochastic simulation for spatially homogeneous biochemical reaction networks</article-title>
        <source>J Comput Phys</source>
        <year>2016</year>
        <volume>317</volume>
        <fpage>301</fpage>
        <lpage>17</lpage>
        <pub-id pub-id-type="doi">10.1016/j.jcp.2016.04.056</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13</label>
      <element-citation publication-type="book">
        <person-group person-group-type="editor">
          <name>
            <surname>Cinquemani</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Donzé</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <source>Accelerated Simulation of Hybrid Biological Models with Quasi-Disjoint Deterministic and Stochastic Subnets</source>
        <year>2016</year>
        <publisher-loc>Cham</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Herajy</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Heiner</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Modeling and simulation of multi-scale environmental systems with generalized hybrid Petri nets</article-title>
        <source>Front Environ Sci</source>
        <year>2015</year>
        <volume>3</volume>
        <fpage>53</fpage>
        <pub-id pub-id-type="doi">10.3389/fenvs.2015.00053</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Herajy</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Liu</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Rohr</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>Coloured hybrid Petri nets for systems biology</article-title>
        <source>Proc. of the 5th International Workshop on Biological Processes &amp; Petri Nets (BioPPN), Satellite Event of PETRI NETS 2014. CEUR Workshop Proceedings, vol. 1159.</source>
        <year>2014</year>
        <publisher-loc>Tunisia</publisher-loc>
        <publisher-name>CEUR-WS.org</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hoops</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Sahle</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Gauges</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Lee</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Pahle</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Simus</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Singhal</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Xu</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Mendes</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Kummer</surname>
            <given-names>U</given-names>
          </name>
        </person-group>
        <article-title>Copasi—a complex pathway simulator</article-title>
        <source>Bioinformatics</source>
        <year>2006</year>
        <volume>22</volume>
        <issue>24</issue>
        <fpage>3067</fpage>
        <lpage>074</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btl485</pub-id>
        <?supplied-pmid 17032683?>
        <pub-id pub-id-type="pmid">17032683</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Resasco</surname>
            <given-names>DC</given-names>
          </name>
          <name>
            <surname>Gao</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Morgan</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Novak</surname>
            <given-names>IL</given-names>
          </name>
          <name>
            <surname>Schaff</surname>
            <given-names>JC</given-names>
          </name>
          <name>
            <surname>Slepchenko</surname>
            <given-names>BM</given-names>
          </name>
        </person-group>
        <article-title>Virtual cell: computational tools for modeling in cell biology</article-title>
        <source>Wiley Interdiscip Rev Syst Biol Med</source>
        <year>2012</year>
        <volume>4</volume>
        <issue>2</issue>
        <fpage>129</fpage>
        <lpage>40</lpage>
        <pub-id pub-id-type="doi">10.1002/wsbm.165</pub-id>
        <?supplied-pmid 22139996?>
        <pub-id pub-id-type="pmid">22139996</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18</label>
      <element-citation publication-type="book">
        <person-group person-group-type="editor">
          <name>
            <surname>Haddad</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Pomello</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <source>Snoopy – A Unifying Petri Net Tool</source>
        <year>2012</year>
        <publisher-loc>Berlin</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19</label>
      <element-citation publication-type="book">
        <person-group person-group-type="editor">
          <name>
            <surname>Ciardo</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Kindler</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <source>A Steering Server for Collaborative Simulation of Quantitative Petri Nets</source>
        <year>2014</year>
        <publisher-loc>Cham</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Herajy</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Heiner</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Petri net-based collaborative simulation and steering of biochemical reaction networks</article-title>
        <source>Fundamenta Informatica</source>
        <year>2014</year>
        <volume>129</volume>
        <issue>1-2</issue>
        <fpage>49</fpage>
        <lpage>67</lpage>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21</label>
      <mixed-citation publication-type="other">Herajy M, Liu F, Rohr C, Heiner M. (Coloured) Hybrid Petri Nets in Snoopy - User Manual. Technical Report 01-17.Brandenburg University of Technology Cottbus, Department of Computer Science; 2017. <ext-link ext-link-type="uri" xlink:href="https://opus4.kobv.de/opus4-btu/files/4157/csr_01-17.pdf">https://opus4.kobv.de/opus4-btu/files/4157/csr_01-17.pdf</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR22">
      <label>22</label>
      <element-citation publication-type="book">
        <person-group person-group-type="editor">
          <name>
            <surname>Bernardo</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Degano</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Zavattaro</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <source>Petri Nets for Systems and Synthetic Biology</source>
        <year>2008</year>
        <publisher-loc>Berlin, Heidelberg</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23</label>
      <element-citation publication-type="book">
        <person-group person-group-type="editor">
          <name>
            <surname>Chen</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Hofestädt</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <source>Petri Nets for Modeling and Analyzing Biochemical Reaction Networks</source>
        <year>2014</year>
        <publisher-loc>Berlin, Heidelberg</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>David</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Alla</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <source>Discrete, Continuous, and Hybrid Petri Nets</source>
        <year>2010</year>
        <publisher-loc>Springer Berlin Heidelberg</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Gilbert</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Heiner</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Donatelli</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Thiagarajan</surname>
            <given-names>PS</given-names>
          </name>
        </person-group>
        <article-title>From Petri Nets to Differential Equations – An Integrative Approach for Biochemical Network Analysis</article-title>
        <source>Petri Nets and Other Models of Concurrency - ICATPN 2006: 27th International Conference on Applications and Theory of Petri Nets and Other Models of Concurrency, Turku, Finland, June 26-30, 2006. Proceedings</source>
        <year>2006</year>
        <publisher-loc>Berlin, Heidelberg</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR26">
      <label>26</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rüdiger</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Shuai</surname>
            <given-names>JW</given-names>
          </name>
          <name>
            <surname>Huisinga</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Nagaiah</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Warnecke</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Parker</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Falcke</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Hybrid stochastic and deterministic simulations of calcium blips</article-title>
        <source>Biophys J</source>
        <year>2007</year>
        <volume>93</volume>
        <issue>6</issue>
        <fpage>1847</fpage>
        <lpage>1857</lpage>
        <pub-id pub-id-type="doi">10.1529/biophysj.106.099879</pub-id>
        <?supplied-pmid 17496042?>
        <pub-id pub-id-type="pmid">17496042</pub-id>
      </element-citation>
    </ref>
    <ref id="CR27">
      <label>27</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jensen</surname>
            <given-names>K</given-names>
          </name>
        </person-group>
        <article-title>Coloured Petri nets and the invariant-method</article-title>
        <source>Theor Comput Sci</source>
        <year>1981</year>
        <volume>14</volume>
        <issue>3</issue>
        <fpage>317</fpage>
        <lpage>36</lpage>
        <pub-id pub-id-type="doi">10.1016/0304-3975(81)90049-9</pub-id>
      </element-citation>
    </ref>
    <ref id="CR28">
      <label>28</label>
      <mixed-citation publication-type="other">Liu F. Colored Petri nets for systems biology. PhD thesis: Brandenburg University of Technology Cottbus; 2012.</mixed-citation>
    </ref>
    <ref id="CR29">
      <label>29</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Herajy</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Schwarick</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Heiner</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <source>Transactions on Petri Nets and Other Models of Concurrency VIII. Hybrid Petri Nets for Modelling the Eukaryotic Cell Cycle</source>
        <year>2013</year>
        <publisher-loc>Berlin</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30</label>
      <mixed-citation publication-type="other">Thanh VH, Zunino R, Priami C. On the rejection-based algorithm for simulation and analysis of large-scale reaction networks. J Chem Phys. 2015; 142(24). doi:<ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1063/1.4922923">10.1063/1.4922923</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR31">
      <label>31</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jonak</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Kurpas</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Szoltysek</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Janus</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Abramowicz</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Puszynski</surname>
            <given-names>K</given-names>
          </name>
        </person-group>
        <article-title>A novel mathematical model of ATM/p53/NF- <italic>κ</italic>B pathways points to the importance of the DDR switch-off mechanisms</article-title>
        <source>BMC Syst Biol</source>
        <year>2016</year>
        <volume>10</volume>
        <issue>1</issue>
        <fpage>75</fpage>
        <pub-id pub-id-type="doi">10.1186/s12918-016-0293-0</pub-id>
        <?supplied-pmid 27526774?>
        <pub-id pub-id-type="pmid">27526774</pub-id>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hindmarsh</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Brown</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Grant</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Lee</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Serban</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Shumaker</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Woodward</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>Sundials: Suite of nonlinear and differential/algebraic equation solvers</article-title>
        <source>ACM Trans Math Softw</source>
        <year>2005</year>
        <volume>31</volume>
        <fpage>363</fpage>
        <lpage>96</lpage>
        <pub-id pub-id-type="doi">10.1145/1089014.1089020</pub-id>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Liu</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Heiner</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Yang</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Laroque</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Himmelspach</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Pasupathy</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Rose</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Uhrmacher</surname>
            <given-names>AM</given-names>
          </name>
        </person-group>
        <article-title>An efficient method for unfolding colored petri nets</article-title>
        <source>Proceedings of the 2012 Winter Simulation Conference (WSC 2012). 978-1-4673-4781-5/12</source>
        <year>2012</year>
        <publisher-loc>Berlin</publisher-loc>
        <publisher-name>IEEE</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Tack</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <source>Constraint propagation - models, techniques, implementation. phdthesis</source>
        <year>2009</year>
        <publisher-loc>Germany</publisher-loc>
        <publisher-name>Saarland University</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR35">
      <label>35</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Heiner</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Rohr</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Schwarick</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Colom</surname>
            <given-names>J-M</given-names>
          </name>
          <name>
            <surname>Desel</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>MARCIE – Model Checking and Reachability Analysis Done Efficiently</article-title>
        <source>Application and Theory of Petri Nets and Concurrency: 34th International Conference, PETRI NETS 2013, Milan, Italy, June 24-28, 2013. Proceedings</source>
        <year>2013</year>
        <publisher-loc>Berlin, Heidelberg</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR36">
      <label>36</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Heiner</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Schwarick</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Wegener</surname>
            <given-names>JT</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Devillers</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Valmari</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Charlie – An Extensible Petri Net Analysis Tool</article-title>
        <source>Application and Theory of Petri Nets and Concurrency: 36th International Conference, PETRI NETS 2015, Brussels, Belgium, June 21-26, 2015, Proceedings</source>
        <year>2015</year>
        <publisher-loc>Cham</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR37">
      <label>37</label>
      <element-citation publication-type="book">
        <person-group person-group-type="editor">
          <name>
            <surname>Schneider</surname>
            <given-names>MV</given-names>
          </name>
        </person-group>
        <source>Supporting SBML as a Model Exchange Format in Software Applications</source>
        <year>2013</year>
        <publisher-loc>Totowa</publisher-loc>
        <publisher-name>Humana Press</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR38">
      <label>38</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bornstein</surname>
            <given-names>BJ</given-names>
          </name>
          <name>
            <surname>Keating</surname>
            <given-names>SM</given-names>
          </name>
          <name>
            <surname>Jouraku</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Hucka</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>LibSBML: an API Library for SBML</article-title>
        <source>Bioinformatics</source>
        <year>2008</year>
        <volume>24</volume>
        <issue>6</issue>
        <fpage>880</fpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btn051</pub-id>
        <?supplied-pmid 18252737?>
        <pub-id pub-id-type="pmid">18252737</pub-id>
      </element-citation>
    </ref>
    <ref id="CR39">
      <label>39</label>
      <mixed-citation publication-type="other">wxWidgets website. <ext-link ext-link-type="uri" xlink:href="http://www.wxwidgets.org/">http://www.wxwidgets.org/</ext-link>. Accessed: 8/3/2017.</mixed-citation>
    </ref>
    <ref id="CR40">
      <label>40</label>
      <mixed-citation publication-type="other">Boost website. <ext-link ext-link-type="uri" xlink:href="http://www.boost.org/">http://www.boost.org/</ext-link>. Accessed: 8/3/2017.</mixed-citation>
    </ref>
    <ref id="CR41">
      <label>41</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Liu</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Heiner</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Multiscale modelling of coupled Ca <sup>2+</sup> channels using coloured stochastic Petri nets</article-title>
        <source>IET Syst Biol</source>
        <year>2013</year>
        <volume>7</volume>
        <issue>4</issue>
        <fpage>106</fpage>
        <lpage>13</lpage>
        <pub-id pub-id-type="doi">10.1049/iet-syb.2012.0017</pub-id>
        <?supplied-pmid 23919953?>
        <pub-id pub-id-type="pmid">23919953</pub-id>
      </element-citation>
    </ref>
    <ref id="CR42">
      <label>42</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gao</surname>
            <given-names>Q</given-names>
          </name>
          <name>
            <surname>Gilbert</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Heiner</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Liu</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Maccagnola</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Tree</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>Multiscale modelling and analysis of planar cell polarity in the Drosophila wing</article-title>
        <source>IEEE/ACM Trans Comput Biol Bioinforma</source>
        <year>2013</year>
        <volume>10</volume>
        <issue>2</issue>
        <fpage>337</fpage>
        <lpage>51</lpage>
        <pub-id pub-id-type="doi">10.1109/TCBB.2012.101</pub-id>
      </element-citation>
    </ref>
    <ref id="CR43">
      <label>43</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhang</surname>
            <given-names>XP</given-names>
          </name>
          <name>
            <surname>Liu</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Cheng</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <article-title>Cell fate decision mediated by p53 pulses</article-title>
        <source>Proc Natl Acad Sci</source>
        <year>2009</year>
        <volume>106</volume>
        <issue>30</issue>
        <fpage>12245</fpage>
        <lpage>12250</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.0813088106</pub-id>
        <?supplied-pmid 19617533?>
        <pub-id pub-id-type="pmid">19617533</pub-id>
      </element-citation>
    </ref>
    <ref id="CR44">
      <label>44</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Elmore</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Apoptosis: A review of programmed cell death</article-title>
        <source>Toxicol Pathol</source>
        <year>2007</year>
        <volume>35</volume>
        <issue>4</issue>
        <fpage>495</fpage>
        <lpage>516</lpage>
        <pub-id pub-id-type="doi">10.1080/01926230701320337</pub-id>
        <?supplied-pmid 17562483?>
        <pub-id pub-id-type="pmid">17562483</pub-id>
      </element-citation>
    </ref>
    <ref id="CR45">
      <label>45</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kracikova</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Akiri</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>George</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Sachidanandam</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Aaronson</surname>
            <given-names>SA</given-names>
          </name>
        </person-group>
        <article-title>A threshold mechanism mediates p53 cell fate decision between growth arrest and apoptosis</article-title>
        <source>Cell Death Differ</source>
        <year>2013</year>
        <volume>20</volume>
        <issue>4</issue>
        <fpage>576</fpage>
        <lpage>88</lpage>
        <pub-id pub-id-type="doi">10.1038/cdd.2012.155</pub-id>
        <?supplied-pmid 23306555?>
        <pub-id pub-id-type="pmid">23306555</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

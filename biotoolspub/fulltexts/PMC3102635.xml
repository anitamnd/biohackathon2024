<?DTDIdentifier.IdentifierValue article.dtd?>
<?DTDIdentifier.IdentifierType system?>
<?SourceDTD.DTDName article.dtd?>
<?SourceDTD.Version 1.0?>
<?ConverterInfo.XSLTName bmc2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">3102635</article-id>
    <article-id pub-id-type="publisher-id">1471-2105-12-103</article-id>
    <article-id pub-id-type="pmid">21501497</article-id>
    <article-id pub-id-type="doi">10.1186/1471-2105-12-103</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Methodology Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Multithreaded comparative RNA secondary structure prediction using stochastic context-free grammars</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes" id="A1">
        <name>
          <surname>Sükösd</surname>
          <given-names>Zsuzsanna</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <xref ref-type="aff" rid="I2">2</xref>
        <email>zs@mb.au.dk</email>
      </contrib>
      <contrib contrib-type="author" id="A2">
        <name>
          <surname>Knudsen</surname>
          <given-names>Bjarne</given-names>
        </name>
        <xref ref-type="aff" rid="I3">3</xref>
        <email>bknudsen@clcbio.com</email>
      </contrib>
      <contrib contrib-type="author" id="A3">
        <name>
          <surname>Værum</surname>
          <given-names>Morten</given-names>
        </name>
        <xref ref-type="aff" rid="I3">3</xref>
        <email>mvaerum@clcbio.com</email>
      </contrib>
      <contrib contrib-type="author" id="A4">
        <name>
          <surname>Kjems</surname>
          <given-names>Jørgen</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <xref ref-type="aff" rid="I2">2</xref>
        <email>jk@mb.au.dk</email>
      </contrib>
      <contrib contrib-type="author" corresp="yes" id="A5">
        <name>
          <surname>Andersen</surname>
          <given-names>Ebbe S</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <xref ref-type="aff" rid="I2">2</xref>
        <email>esa@mb.au.dk</email>
      </contrib>
    </contrib-group>
    <aff id="I1"><label>1</label>Interdisciplinary Nanoscience Center, Aarhus University, Aarhus, Denmark</aff>
    <aff id="I2"><label>2</label>Department of Molecular Biology, Aarhus University, Aarhus, Denmark</aff>
    <aff id="I3"><label>3</label>CLC bio, Aarhus, Denmark</aff>
    <pub-date pub-type="collection">
      <year>2011</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>18</day>
      <month>4</month>
      <year>2011</year>
    </pub-date>
    <volume>12</volume>
    <fpage>103</fpage>
    <lpage>103</lpage>
    <history>
      <date date-type="received">
        <day>1</day>
        <month>12</month>
        <year>2010</year>
      </date>
      <date date-type="accepted">
        <day>18</day>
        <month>4</month>
        <year>2011</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright ©2011 Sükösd et al; licensee BioMed Central Ltd.</copyright-statement>
      <copyright-year>2011</copyright-year>
      <copyright-holder>Sükösd et al; licensee BioMed Central Ltd.</copyright-holder>
      <license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0">http://creativecommons.org/licenses/by/2.0</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="http://www.biomedcentral.com/1471-2105/12/103"/>
    <abstract>
      <sec>
        <title>Background</title>
        <p>The prediction of the structure of large RNAs remains a particular challenge in bioinformatics, due to the computational complexity and low levels of accuracy of state-of-the-art algorithms. The <italic>pfold </italic>model couples a stochastic context-free grammar to phylogenetic analysis for a high accuracy in predictions, but the time complexity of the algorithm and underflow errors have prevented its use for long alignments. Here we present <italic>PPfold</italic>, a multithreaded version of <italic>pfold</italic>, which is capable of predicting the structure of large RNA alignments accurately on practical timescales.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>We have distributed both the phylogenetic calculations and the inside-outside algorithm in <italic>PPfold</italic>, resulting in a significant reduction of runtime on multicore machines. We have addressed the floating-point underflow problems of <italic>pfold </italic>by implementing an extended-exponent datatype, enabling <italic>PPfold </italic>to be used for large-scale RNA structure predictions. We have also improved the user interface and portability: alongside standalone executable and Java source code of the program, <italic>PPfold </italic>is also available as a free plugin to the CLC Workbenches. We have evaluated the accuracy of <italic>PPfold </italic>using BRaliBase I tests, and demonstrated its practical use by predicting the secondary structure of an alignment of 24 complete HIV-1 genomes in 65 minutes on an 8-core machine and identifying several known structural elements in the prediction.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p><italic>PPfold </italic>is the first parallelized comparative RNA structure prediction algorithm to date. Based on the <italic>pfold </italic>model, <italic>PPfold </italic>is capable of fast, high-quality predictions of large RNA secondary structures, such as the genomes of RNA viruses or long genomic transcripts. The techniques used in the parallelization of this algorithm may be of general applicability to other bioinformatics algorithms.</p>
      </sec>
    </abstract>
  </article-meta>
</front>
<body>
  <sec>
    <title>Background</title>
    <p>Recent years have seen an explosion in the amount of biological data available from large-scale genome sequencing projects, but this increase has not been met by a corresponding increase in single-core computer power to bioinformatically analyze this data. It is therefore predicted that the scientific community will face serious computational problems in the coming years in their efforts to interpret genomic data. The prediction of RNA secondary structure remains a particularly challenging problem, in a large part due to its computational complexity: even without pseudoknot prediction, the execution time of state-of-the-art algorithms scales as O(<italic>L</italic><sup>3</sup>) or worse with the length of the sequence, <italic>L</italic>. One way to address this problem is by exploiting heuristics to reduce complexity, but this happens at the cost of accuracy in predictions, which is particularly detrimental in the case of already inaccurate algorithms. Another possibility is to apply emerging multithreading paradigms to more accurate algorithms, and obtain the precise results in a fraction of the time.</p>
    <p>RNA secondary structure prediction algorithms are typically based on either thermodynamic or stochastic context-free grammar (SCFG) models, and are implemented using dynamic programming. A recent review [<xref ref-type="bibr" rid="B1">1</xref>] gives an overview over existing tools. Previous attempts to parallelize RNA structure prediction algorithms have included thermodynamic prediction [<xref ref-type="bibr" rid="B2">2</xref>-<xref ref-type="bibr" rid="B5">5</xref>] and the SCFG-based profiling of RNAs [<xref ref-type="bibr" rid="B6">6</xref>], as well as massively parallel genetic algorithms [<xref ref-type="bibr" rid="B7">7</xref>] and hardware-accelerated folding on FPGA chips [<xref ref-type="bibr" rid="B8">8</xref>] and GPUs [<xref ref-type="bibr" rid="B9">9</xref>]. Despite improved runtimes, the accuracy of these algorithms remains low, due to models that may not be appropriate for very long sequences.</p>
    <p>Here we focus on <italic>pfold </italic>[<xref ref-type="bibr" rid="B10">10</xref>,<xref ref-type="bibr" rid="B11">11</xref>], which couples a phylogenetic model to a SCFG to accurately predict the consensus structure of RNA alignments in O(<italic>L</italic><sup>3</sup>) time [<xref ref-type="bibr" rid="B12">12</xref>] (Figure <xref ref-type="fig" rid="F1">1</xref>). Due to the combined approach, the <italic>pfold </italic>model is theoretically capable of obtaining high-quality predictions of large and biologically significant RNA structures, such as the genomes of RNA viruses. However, it has not been possible in practice to use <italic>pfold </italic>for such predictions: it is single-threaded, so it can take days to fold a long alignment, and it fails to predict large structures correctly due to floating-point underflow errors [<xref ref-type="bibr" rid="B12">12</xref>].</p>
    <fig id="F1" position="float">
      <label>Figure 1</label>
      <caption>
        <p><bold>Comparison of RNA secondary structure prediction algorithms</bold>. The receiver operating characteristic (ROC) plots obtained from an independent study [<xref ref-type="bibr" rid="B12">12</xref>] simultaneously display both sensitivity and selectivity for various RNA secondary structure prediction algorithms, including pfold, iterated loop matching (ILE) and RNalifold. Accuracies of the minimum free energy (MFE) methods (MFold, RNAFold and SFold) are shown to provide a base-line. Points on the line <italic>X </italic>= <italic>Y </italic>are as sensitive as they are selective, points below this line indicates a greater selectivity, points above indicate greater sensitivity. Points in the top right corner are "perfect" predictions. Where the variance is sufficiently small, these have been indicated with a closed curve. <italic>Pfold </italic>compares very favourably to other algorithms for short sequences, but for long sequences underflow errors cause both the sensitivity and the specificity to drop to zero. Figure adapted with permission from [<xref ref-type="bibr" rid="B12">12</xref>].</p>
      </caption>
      <graphic xlink:href="1471-2105-12-103-1"/>
    </fig>
    <p>In this study, we address both of these issues, and create <italic>PPfold</italic>, an improved and multithreaded version of <italic>pfold</italic>. To our knowledge, <italic>PPfold </italic>is the first example of a multithreaded comparative RNA secondary structure prediction algorithm. We demonstrate its practical use by predicting the secondary structure of an alignment of 24 HIV-1 genomes.</p>
  </sec>
  <sec>
    <title>Results and Discussion</title>
    <sec>
      <title>Algorithm</title>
      <p><italic>PPfold </italic>uses the same combined evolutionary and SCFG model as <italic>pfold </italic>[<xref ref-type="bibr" rid="B10">10</xref>,<xref ref-type="bibr" rid="B11">11</xref>]. A summary of this model is provided in the Methods section. Here we focus strictly on the parts of <italic>PPfold </italic>that present improvements on <italic>pfold</italic>.</p>
      <sec>
        <title>Multithreading the phylogenetic calculations</title>
        <p>After estimating the phylogenetic tree, the <italic>pfold </italic>algorithm calculates column- and column-pair likelihoods, based on post-order traversal through the tree. We have only distributed the calculation of column-pair likelihoods, as this is the most time-consuming part with a time complexity of O(<italic>L</italic><sup>2</sup>), where <italic>L </italic>is the length of the alignment. It is desirable to distribute the calculations as evenly as possible, so all processing units have an equal workload. As all column-pairs are treated independently, a natural division for multithreading arises by grouping a number of column pairs together in such a way that there are as many groups with equal numbers of column pairs as processing units. However, a unique mapping from the number of groups, <italic>n</italic>, to the size of each group, <italic>s</italic>, does not exist.</p>
        <p>Column-pair likelihoods are symmetric, so in total there are <inline-formula><inline-graphic xlink:href="1471-2105-12-103-i1.gif"/></inline-formula> column pairs to calculate. For simplicity, we chose to distribute these on the basis of the first iterator column: to each group, we incrementally assign as many first iterator columns (and all their pairing columns) as possible, such that the total number of column pairs in all groups up to group number <italic>k </italic>&gt; 0 does not exceed<disp-formula><graphic xlink:href="1471-2105-12-103-i2.gif"/></disp-formula></p>
        <p>This provides an approximately even distribution of workload to the processing units, and we observe a corresponding reduction in running time on multicore machines. (Figure <xref ref-type="fig" rid="F2">2</xref>)</p>
        <fig id="F2" position="float">
          <label>Figure 2</label>
          <caption>
            <p><bold>Reduction in runtime for the phylogenetic part of the algorithm</bold>. The execution time of the phylogenetic part of the algorithm is reduced proportionally to the number of cores. We used 40 divisions for the folding of 30 × 3000 nt, on a Intel(R) Xeon(R) E5420 CPU, 8 cores, 2.50 GHz, 32 GB RAM, and enabled different number of cores to be used by PPfold by varying the size of the threadpool. Here we are plotting the mean and standard deviation of 4 measurement points, scaled as a fraction of one-core runtime.</p>
          </caption>
          <graphic xlink:href="1471-2105-12-103-2"/>
        </fig>
      </sec>
      <sec>
        <title>Multithreading the inside-outside algorithm</title>
        <p>The inside-outside algorithm fills two lower triangular matrices of dimension <italic>L </italic>for each nonterminal symbol of the grammar, through dynamic programming. The Knudsen-Hein grammar contains 3 nonterminal variables, so in total there are 6 such matrices to be filled. The algorithm exhibits heavy dependencies, making its distribution into independent "jobs" nontrivial. In <italic>PPfold</italic>, we have chosen an asynchronous wavefront computational approach that exploits the geometry of the algorithm.</p>
        <p>We divide the triangle into equal-sized parallelogram-shaped "sectors" (Figure <xref ref-type="fig" rid="F3">3</xref>). We will refer to the number of sectors in the first row of the triangle by <italic>N</italic>. The dependency of the sectors on each other in the inside and outside parts of the algorithm is illustrated by Figure <xref ref-type="fig" rid="F4">4</xref>; the values for all nonterminals in each sector can be evaluated once all dependencies are completed. A "job" thus entails the evaluation of either the inside or the outside variables corresponding to a sector for all nonterminal variables in the grammar. The workload in jobs is not equally distributed, as illustrated by Figure <xref ref-type="fig" rid="F5">5</xref>.</p>
        <fig id="F3" position="float">
          <label>Figure 3</label>
          <caption>
            <p><bold>Division of calculations in the inside-outside algorithm</bold>. In order to apply the bifurcation rules of the grammar to the cell marked in black, the inside algorithm requires the values in the red cells to be known (from nonterminals L (vertical) and S (diagonal)). The products of values in cells of the same shade of red are added to the value in the black cell. Thick blue lines illustrate the defined sector boundaries, for a choice of divisions where the dimension of each sector is 3. All sectors have the same size; points that lie outside the region to be calculated (for example, negative subsequence lengths) are stored but ignored in the calculations.</p>
          </caption>
          <graphic xlink:href="1471-2105-12-103-3"/>
        </fig>
        <fig id="F4" position="float">
          <label>Figure 4</label>
          <caption>
            <p><bold>Dependencies of sectors in the inside-outside algorithm</bold>. The geometry for job divisions is inspired by the dependency structure of the (a) inside and (b) outside algorithms. For illustration purposes, here the number of divisions of the sequence is 11, giving rise to 66 sectors in total. (Sectors are numbered starting from 0, in accordance with the algorithm implementation.) In order to calculate values in the sector marked red, the indicated values in the coloured sectors must be known.</p>
          </caption>
          <graphic xlink:href="1471-2105-12-103-4"/>
        </fig>
        <fig id="F5" position="float">
          <label>Figure 5</label>
          <caption>
            <p><bold>Workload of jobs in the inside-outside algorithm</bold>. The execution time is proportional to job height, as illustrated here for the (a) inside and (b) outside algorithms. Jobs executed last take longest (top job in inside algorithm, bottom row in outside algorithm). (The expectation value calculations are analogous to the inside algorithm, but each job takes comparatively shorter time.) The linear dependence on job height gives rise to the O(<italic>n</italic><sup>3</sup>) time complexity.</p>
          </caption>
          <graphic xlink:href="1471-2105-12-103-5"/>
        </fig>
        <p>By design, jobs are self-sufficient objects created only when their dependencies are completed: they contain all data necessary for the calculation of the values in the corresponding sector in order to also allow distribution to a non-shared memory framework. Asynchronous implementation makes it possible to execute jobs immediately after the necessary dependencies are completed, rather than waiting for all jobs in the same row to complete. (Additional File <xref ref-type="supplementary-material" rid="S1">1</xref>) This is ideal for a setting where executor units have different capabilities, such as a grid of personal computers.</p>
        <p>It is important to note that multithreading is not possible for all parts of the algorithm: for example, the job at the top of the triangular matrix has to be executed by one processing unit without any simultaneous calculations. Therefore it is ideal to choose <italic>N </italic>&gt;&gt;<italic>u</italic>, where <italic>u </italic>is the number of available processing units. In the limit <italic>N </italic>→ ∞, the theoretical execution time on <italic>u </italic>processing units is reduced to <inline-formula><inline-graphic xlink:href="1471-2105-12-103-i3.gif"/></inline-formula> of the execution time on one processing unit, and this is also what we observe in practice. (Figure <xref ref-type="fig" rid="F6">6</xref>) We note that this method of divisions is generally applicable to any bifurcating SCFG, and thus may be used for the parallelization of other algorithms also.</p>
        <fig id="F6" position="float">
          <label>Figure 6</label>
          <caption>
            <p><bold>Execution time of SCFG part on multicore machines</bold>. The execution time of the SCFG part of the algorithm is reduced proportionally to the number of cores for a sufficiently high number of divisions. We used 40 divisions for the folding of 30 × 3000 nt, on Intel(R) Xeon(R) E5420 CPU, 8 cores, 2.50 GHz, 32 GB RAM, and enabled different number of cores to be used by PPfold by varying the size of the thread pool. Here we are plotting the mean and standard deviation of 4 measurement points, scaled as a fraction of one-core runtime.</p>
          </caption>
          <graphic xlink:href="1471-2105-12-103-6"/>
        </fig>
        <p>Memory use is optimized with a large number of divisions, where only the lower triangular matrices are stored. However, the space complexity of the algorithm remains O(<italic>L</italic><sup>2</sup>), and roughly 6 GB of memory are needed to fold a 10000 nucleotide-long alignment.</p>
      </sec>
      <sec>
        <title>Multithreading expectation maximization</title>
        <p>In contrast to many SCFG-based RNA secondary structure prediction programs, <italic>pfold </italic>returns the structure with the maximum number of expected correctly predicted nested structural elements, instead of the maximum likelihood estimate. To find this structure, it is necessary to calculate a matrix of expectation values for every fraction of the alignment, similarly to the inside algorithm. The details of this are described in the Methods section. As these calculations also contain bifurcations, they are distributed analogously to the inside algorithm.</p>
      </sec>
      <sec>
        <title>Underflow</title>
        <p>Floating-point underflow arises commonly in dynamic programming for the folding of long RNAs, due to the multiplication of several thousands of low probabilities with each other. It has effectively prevented the correct folding of large RNA alignments with <italic>pfold</italic>, as the values of the inside-outside variables decrease both with the length of alignment the number of sequences in it. A common solution is to calculate with log-probabilities, implementing addition as a "log sum" function with a lookup table. Other possible solutions include multiplying the rules of the grammar with a factor, such that underflow is reached more slowly, thus extending the foldable length of alignments, or multiplying a block of probabilities lower than a certain cutoff value by a scaling factor.</p>
        <p>In <italic>PPfold </italic>we have taken an alternative approach and implemented an extended exponent datatype, consisting of a <monospace>float</monospace> "fraction" and an <monospace>integer</monospace> "exponent" (base 2) part. Together, 64 bits are used to store each number - the same amount of space as a double-precision floating point number, so the overall memory requirements of the algorithm are not increased substantially. For each nonterminal symbol (in the inside, outside and expectation parts of the algorithm), we store two 2-dimensional arrays: one for the exponents and one for the fractions. For every operation, we combine numbers from these arrays using custom bitmasking and bitshifting methods.</p>
      </sec>
    </sec>
    <sec>
      <title>Implementation</title>
      <p>PPfold has been written in Java 5.0, and integrated into the CLC Workbenches using the CLC Developer Kit (version 3.31) API. The source code and executables are available for download at <ext-link ext-link-type="uri" xlink:href="http://www.daimi.au.dk/~compbio/pfold/downloads.html">http://www.daimi.au.dk/~compbio/pfold/downloads.html</ext-link>. <italic>PPfold </italic>consists of an "algorithm" package that can be compiled and run independently of the CLC Workbenches, and a "plugin" package that provides interfacing with the CLC Workbenches.</p>
      <p>The "algorithm" package includes all classes that are involved in the processing of sequences and alignments and creating the final structures. It has no dependencies on any CLC classes, is capable of taking command-line arguments and provides a simple graphical user interface for the selection of input files. Export formats currently supported by <italic>PPfold </italic>include. ct, .seq (with reliability scores) and white text, as well as basepairing probability data.</p>
      <p>The "plugin" package makes use of the CLC Developer Kit API such that PPfold becomes a full-featured plugin to the CLC Workbenches. Futhermore, integration into "minigrid-enabled" CLC Workbenches makes it possible to distribute calculations to a collaborative mini-grid of computers [<xref ref-type="bibr" rid="B13">13</xref>]. The details of this aspect of our work will be published elsewhere.</p>
    </sec>
    <sec>
      <title>Testing and benchmarking</title>
      <sec>
        <title>Performance</title>
        <p>We have evaluated the speed of our algorithm for alignments of various sizes, with a varying number of cores and divisions of calculations. (Table <xref ref-type="table" rid="T1">1</xref>) The algorithm is fast, scales well with the number of cores and makes the folding of long alignments practically possible.</p>
        <table-wrap id="T1" position="float">
          <label>Table 1</label>
          <caption>
            <p>Performance</p>
          </caption>
          <table frame="hsides" rules="groups">
            <thead>
              <tr>
                <th align="center">Alignment</th>
                <th align="center">divisions</th>
                <th align="center">1 core (sec)</th>
                <th align="center">2 cores (sec)</th>
                <th align="center">4 cores (sec)</th>
                <th align="center">8 cores (sec)</th>
                <th align="center"><italic>pfold </italic>(sec)</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td/>
                <td align="center">1</td>
                <td align="center">5.41</td>
                <td align="center">4.85</td>
                <td align="center">4.84</td>
                <td align="center">4.84</td>
                <td/>
              </tr>
              <tr>
                <td align="center">2 × 500 nt</td>
                <td align="center">4</td>
                <td align="center">5.74</td>
                <td align="center">3.06</td>
                <td align="center">2.15</td>
                <td align="center">2.16</td>
                <td align="center">0.59</td>
              </tr>
              <tr>
                <td/>
                <td align="center">35</td>
                <td align="center">3.70</td>
                <td align="center">2.05</td>
                <td align="center">1.25</td>
                <td align="center">0.92</td>
                <td/>
              </tr>
              <tr>
                <td colspan="7">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td/>
                <td align="center">1</td>
                <td align="center">51.8</td>
                <td align="center">52.0</td>
                <td align="center">51.1</td>
                <td align="center">50.4</td>
                <td/>
              </tr>
              <tr>
                <td align="center">20 × 1000 nt</td>
                <td align="center">4</td>
                <td align="center">46.6</td>
                <td align="center">27.9</td>
                <td align="center">19.0</td>
                <td align="center">19.6</td>
                <td align="center">7.3</td>
              </tr>
              <tr>
                <td/>
                <td align="center">35</td>
                <td align="center">35.7</td>
                <td align="center">18.3</td>
                <td align="center">9.7</td>
                <td align="center">5.8</td>
                <td/>
              </tr>
              <tr>
                <td colspan="7">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td/>
                <td align="center">1</td>
                <td align="center">1738</td>
                <td align="center">1640</td>
                <td align="center">1581</td>
                <td align="center">1464</td>
                <td/>
              </tr>
              <tr>
                <td align="center">30 × 3000 nt</td>
                <td align="center">4</td>
                <td align="center">1476</td>
                <td align="center">878</td>
                <td align="center">642</td>
                <td align="center">632</td>
                <td align="center">368</td>
              </tr>
              <tr>
                <td/>
                <td align="center">35</td>
                <td align="center">842</td>
                <td align="center">424</td>
                <td align="center">217</td>
                <td align="center">123</td>
                <td/>
              </tr>
            </tbody>
          </table>
          <table-wrap-foot>
            <p>The actual execution time of <italic>PPfold </italic>(including both the phylogenetic and SCFG parts) on a Dell Precision T7500 Workstation with Dual Quad Core Intel<sup>®</sup>Xeon<sup>®</sup>X5667 3.07 GHz CPU, 24 GB RAM, is shown, for alignments of different lengths, choosing different divisions, and enabling different number of cores to be used by PPfold by varying the size of the thread pool. A small number of divisions can in some circumstances result in disproportionately long runtimes, due to the higher number of extra (unnecessary) points that are present in the calculations. The algorithm is intended to be run using a high number of divisions on all architectures. For comparison, we also include the runtimes of the original <italic>pfold </italic>implementation (written in C), which suffers from underflow, making the results unreliable for alignments of these lengths.</p>
          </table-wrap-foot>
        </table-wrap>
      </sec>
      <sec>
        <title>Accuracy</title>
        <p>We have replicated the BRaliBase I benchmarking tests [<xref ref-type="bibr" rid="B12">12</xref>]. <italic>PPfold </italic>performs as well as <italic>pfold </italic>for short sequences (tRNA, RNaseP), and significantly better than <italic>pfold </italic>for longer sequences (SSU, LSU), as it does not suffer from the underflow problem. (Table <xref ref-type="table" rid="T2">2</xref>)</p>
        <table-wrap id="T2" position="float">
          <label>Table 2</label>
          <caption>
            <p>BRaliBase accuracy</p>
          </caption>
          <table frame="hsides" rules="groups">
            <thead>
              <tr>
                <th align="center">Sequence</th>
                <th align="center">Program</th>
                <th align="center">Ref. basepairs</th>
                <th align="center">Pred. basepairs</th>
                <th align="center">Sensitivity, %</th>
                <th align="center">Selectivity, %</th>
                <th align="center">Correlation, %</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="center">tRNA (M)</td>
                <td align="center">PPfold</td>
                <td align="center">20</td>
                <td align="center">21</td>
                <td align="center">100.0</td>
                <td align="center">100.0</td>
                <td align="center">100.0</td>
              </tr>
              <tr>
                <td colspan="7">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="center">tRNA (M)</td>
                <td align="center">pfold</td>
                <td align="center">20</td>
                <td align="center">21</td>
                <td align="center">100.0</td>
                <td align="center">100.0</td>
                <td align="center">100.0</td>
              </tr>
              <tr>
                <td colspan="7">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="center">tRNA (H)</td>
                <td align="center">PPfold</td>
                <td align="center">20</td>
                <td align="center">21</td>
                <td align="center">100.0</td>
                <td align="center">100.0</td>
                <td align="center">100.0</td>
              </tr>
              <tr>
                <td colspan="7">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="center">tRNA (H)</td>
                <td align="center">pfold</td>
                <td align="center">20</td>
                <td align="center">21</td>
                <td align="center">100.0</td>
                <td align="center">100.0</td>
                <td align="center">100.0</td>
              </tr>
              <tr>
                <td colspan="7">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="center">RNaseP (M)</td>
                <td align="center">PPfold</td>
                <td align="center">110</td>
                <td align="center">110</td>
                <td align="center">86.4</td>
                <td align="center">96.0</td>
                <td align="center">91.2</td>
              </tr>
              <tr>
                <td colspan="7">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="center">RNaseP (M)</td>
                <td align="center">pfold</td>
                <td align="center">110</td>
                <td align="center">110</td>
                <td align="center">86.4</td>
                <td align="center">96.0</td>
                <td align="center">91.2</td>
              </tr>
              <tr>
                <td colspan="7">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="center">RNaseP (H)</td>
                <td align="center">PPfold</td>
                <td align="center">110</td>
                <td align="center">69</td>
                <td align="center">43.6</td>
                <td align="center">71.6</td>
                <td align="center">57.6</td>
              </tr>
              <tr>
                <td colspan="7">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="center">RNaseP (H)</td>
                <td align="center">pfold</td>
                <td align="center">110</td>
                <td align="center">69</td>
                <td align="center">43.6</td>
                <td align="center">71.6</td>
                <td align="center">57.6</td>
              </tr>
              <tr>
                <td colspan="7">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="center">SSU (M)</td>
                <td align="center">PPfold</td>
                <td align="center">468</td>
                <td align="center">420</td>
                <td align="center">74.4</td>
                <td align="center">86.1</td>
                <td align="center">80.2</td>
              </tr>
              <tr>
                <td colspan="7">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="center">SSU (M)</td>
                <td align="center">pfold</td>
                <td align="center">468</td>
                <td align="center">0</td>
                <td align="center">0.0</td>
                <td align="center">0.0</td>
                <td align="center">0.0</td>
              </tr>
              <tr>
                <td colspan="7">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="center">SSU (H)</td>
                <td align="center">PPfold</td>
                <td align="center">468</td>
                <td align="center">373</td>
                <td align="center">68.4</td>
                <td align="center">89.1</td>
                <td align="center">78.8</td>
              </tr>
              <tr>
                <td colspan="7">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="center">SSU (H)</td>
                <td align="center">pfold</td>
                <td align="center">468</td>
                <td align="center">373</td>
                <td align="center">68.4</td>
                <td align="center">89.1</td>
                <td align="center">78.8</td>
              </tr>
              <tr>
                <td colspan="7">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="center">LSU (M)</td>
                <td align="center">PPfold</td>
                <td align="center">839</td>
                <td align="center">830</td>
                <td align="center">58.2</td>
                <td align="center">62.5</td>
                <td align="center">60.3</td>
              </tr>
              <tr>
                <td colspan="7">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="center">LSU (M)</td>
                <td align="center">pfold</td>
                <td align="center">839</td>
                <td align="center">0</td>
                <td align="center">0.0</td>
                <td align="center">0.0</td>
                <td align="center">0.0</td>
              </tr>
              <tr>
                <td colspan="7">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="center">LSU (H)</td>
                <td align="center">PPfold</td>
                <td align="center">839</td>
                <td align="center">754</td>
                <td align="center">52.2</td>
                <td align="center">61.0</td>
                <td align="center">56.6</td>
              </tr>
              <tr>
                <td colspan="7">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="center">LSU (H)</td>
                <td align="center">pfold</td>
                <td align="center">839</td>
                <td align="center">0</td>
                <td align="center">0.0</td>
                <td align="center">0.0</td>
                <td align="center">0.0</td>
              </tr>
            </tbody>
          </table>
          <table-wrap-foot>
            <p>The results of our tests on the BRaliBase I dataset, using the comparison script available at <ext-link ext-link-type="uri" xlink:href="http://projects.binf.ku.dk/pgardner/bralibase/bralibase1.html">http://projects.binf.ku.dk/pgardner/bralibase/bralibase1.html</ext-link>, are shown, both for <italic>pfold </italic>and <italic>PPfold</italic>. We carried out stem-extension separately on the <italic>PPfold </italic>predictions, as it is not implemented in <italic>PPfold </italic>at present. M: medium-similarity, H: high-similarity</p>
          </table-wrap-foot>
        </table-wrap>
      </sec>
      <sec>
        <title>Folding of the HIV-1 genome</title>
        <p>To demonstrate the speed and accuracy of our algorithm, we have folded an alignment of 24 full HIV-1 genomes using <italic>PPfold </italic>in 65 minutes on a Dell Precision T7500 Workstation with Dual Quad Core Intel<sup>®</sup>Xeon<sup>®</sup>X5667 3.07 GHz CPU, using 6 GB of memory. In addition to predicting the consensus structure within a practically reasonable timeframe, <italic>PPfold </italic>has also predicted a number of known RNA structures, including the TAR, poly(A), PBS, DIS, AUG hairpins, the gag-pol frameshift and the RRE region. (Figure <xref ref-type="fig" rid="F7">7</xref>) [<xref ref-type="bibr" rid="B14">14</xref>] The prediction of the full consensus secondary structure of a large viral genome alignment, including phylogenetically supported long-distance interactions, has not previously been possible on practical timescales without the need for specialized hardware.</p>
        <fig id="F7" position="float">
          <label>Figure 7</label>
          <caption>
            <p><bold>The secondary structure of 24 HIV-1 genomes</bold>. An overlay of an RNA structure arcplot of the <italic>PPfold </italic>predictions and a circularly drawn, annotated HIV-1 genome drawing made in the CLC Main Workbench is shown. <italic>PPfold </italic>has predicted a number of known structures on the basis of a non-adjusted sequence alignment. The arcplot was made with the "circular Feynman" diagram option of JViz.RNA [<xref ref-type="bibr" rid="B17">17</xref>].</p>
          </caption>
          <graphic xlink:href="1471-2105-12-103-7"/>
        </fig>
      </sec>
      <sec>
        <title>Numerical stability</title>
        <p>In <italic>PPfold</italic>, we have reduced the representation of significant digits to 23 bits (from 52 bits in <italic>pfold</italic>). To assess potential numerical errors arising from this, we have folded a large HIV alignment with different divisions, such that the same computations were carried out in a different order each time. Our results show that the inside-outside variables are correct to at least 3 significant digits for a 9840-nt long alignment of 30 sequences, which we do not consider to be significant. (Table <xref ref-type="table" rid="T3">3</xref>)</p>
        <table-wrap id="T3" position="float">
          <label>Table 3</label>
          <caption>
            <p>Numerical stability</p>
          </caption>
          <table frame="hsides" rules="groups">
            <tbody>
              <tr>
                <td colspan="2">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="center">
                  <bold>
                    <italic>Number of divisions</italic>
                  </bold>
                </td>
                <td align="center">
                  <bold><italic>P </italic>(<italic>S </italic>→ <italic>C</italic><sub>1</sub>...<italic>C<sub>n</sub></italic>)</bold>
                </td>
              </tr>
              <tr>
                <td colspan="2">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="center">20</td>
                <td align="center">1.7616063 × 2<sup>-148446</sup></td>
              </tr>
              <tr>
                <td colspan="2">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="center">35</td>
                <td align="center">1.7617458 × 2<sup>-148446</sup></td>
              </tr>
              <tr>
                <td colspan="2">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="center">60</td>
                <td align="center">1.7618935 × 2<sup>-148446</sup></td>
              </tr>
            </tbody>
          </table>
          <table-wrap-foot>
            <p>The value of the S variable from the inside algorithm representing a full-length HIV-1 genome alignment (<italic>P </italic>(<italic>S </italic>→ <italic>C</italic><sub>1</sub>...<italic>C<sub>n</sub></italic>)), stays stable correct to at least 3 significant digits, when carrying out the calculations in a different order (with different numbers of divisions).</p>
          </table-wrap-foot>
        </table-wrap>
      </sec>
    </sec>
  </sec>
  <sec>
    <title>Conclusions</title>
    <p><italic>PPfold </italic>is a new, multithreaded version of the <italic>pfold </italic>algorithm, capable of obtaining high-quality, phylogenetically supported structures for large RNA alignments in a practically reasonable time, which has not been possible previously. <italic>PPfold </italic>distributes both the phylogenetic and the inside-outside calculations of <italic>pfold</italic>, and our tests show that its speed of execution scales well with the number of executing cores. Using <italic>PPfold</italic>, we have been able to obtain a high-quality prediction for an alignment of 30 full HIV-1 genomes in 65 minutes on an 8-core computer. We anticipate that our algorithm will be used also for the prediction of other long RNA alignments, such as viral genomes and genomic transcripts.</p>
  </sec>
  <sec sec-type="methods">
    <title>Methods</title>
    <sec>
      <title>Summary of the pfold model</title>
      <p>Given an alignment, <italic>pfold </italic>creates a phylogenetic tree by neighbour-joining, then optimizes branch lengths using a maximum likelihood approach based on a general reversible evolutionary model described by Felsenstein [<xref ref-type="bibr" rid="B15">15</xref>]. Column-based likelihoods for unpaired nucleotides and basepairs are then obtained using post-order traversal through this tree. The phylogenetic probabilities are conditioned on priors obtained from the stochastic context-free grammar:<disp-formula><graphic xlink:href="1471-2105-12-103-i4.gif"/></disp-formula></p>
      <p>The posterior probabilities are calculated using the inside-outside algorithm [<xref ref-type="bibr" rid="B16">16</xref>]. The structure returned by <italic>pfold </italic>is the structure with the maximum number of expected correctly predicted nested structures. The matrix of expectation values is defined by the following recursion relation:<disp-formula><graphic xlink:href="1471-2105-12-103-i5.gif"/></disp-formula></p>
      <p>with initialization conditions <italic>E<sub>i,i </sub></italic>= <italic>P<sub>s</sub></italic>(<italic>i</italic>) for all <italic>i</italic>, where the basepair probabilities <italic>P<sub>d </sub></italic>and unpaired base probabilities <italic>P<sub>s </sub></italic>are obtained from the inside-outside variables. The final structure returned to the user is obtained by backtracking in this matrix. The reader is advised to consult references [<xref ref-type="bibr" rid="B10">10</xref>] and [<xref ref-type="bibr" rid="B11">11</xref>] for more details on the <italic>pfold </italic>model and algorithm.</p>
    </sec>
  </sec>
  <sec>
    <title>Authors' contributions</title>
    <p>ZS implemented <italic>PPfold </italic>and wrote the manuscript. BK advised programming design and helped with debugging the algorithm. MV provided practical help and code for integration into the CLC Workbenches. ZS and ESA carried out the tests of the algorithm. ESA and JK managed the funding for the project, evaluated the test results, provided feedback for design improvements and critically revised the manuscript. All authors read and approved the final manuscript.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="S1">
      <caption>
        <title>Additional file 1</title>
        <p><bold>Animation of distribution of the SCFG calculations</bold>. The animation demonstrates the asynchronous wavefront computational approach, and was created on the basis of actual runtime data during the folding of a sequence of 460 nt, on a 2-core machine. The animation is divided into three parts: the inside (red/green), outside (yellow/blue) and expectation (cyan/magenta) calculations. The first colour represents jobs that are ready to be executed (because all their dependencies are fulfilled), and are therefore placed in a queue. At any time during the animation, the two jobs that entered the queue earliest are under execution (not shown), as the execution happens in a threadpool corresponding to the available number of cores (here, 2). When a job is finished, it changes to the second colour, and any newly available jobs (with finished dependencies) are pushed onto the queue.</p>
      </caption>
      <media xlink:href="1471-2105-12-103-S1.AVI" mimetype="video" mime-subtype="x-msvideo">
        <caption>
          <p>Click here for file</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <sec>
    <title>Acknowledgements</title>
    <p>ZS would like to thank Paul Gardner for assistance with the BRaliBase tests, Mikkel Nygaard Ravn for work on the CLC Workbenches that aided integration, Alex Andersen for practical help and Attila Sükösd, Paula Tataru and Rasmus Schøler Sørensen for useful discussions. This research has been funded by the Danish Agency for Science, Technology, and Innovation under the project "PC Mini-Grids for Prediction of Viral RNA Structure and Evolution", #09-061856.</p>
  </sec>
  <ref-list>
    <ref id="B1">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Andersen</surname>
          <given-names>ES</given-names>
        </name>
        <article-title>Prediction and design of DNA and RNA structures</article-title>
        <source>New Biotechnol</source>
        <year>2010</year>
        <volume>27</volume>
        <fpage>184</fpage>
        <lpage>193</lpage>
        <pub-id pub-id-type="doi">10.1016/j.nbt.2010.02.012</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B2">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Hofacker</surname>
          <given-names>IL</given-names>
        </name>
        <name>
          <surname>Fontana</surname>
          <given-names>W</given-names>
        </name>
        <name>
          <surname>Stadler</surname>
          <given-names>PF</given-names>
        </name>
        <name>
          <surname>Bonhoeffer</surname>
          <given-names>LS</given-names>
        </name>
        <name>
          <surname>Tacker</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Schuster</surname>
          <given-names>P</given-names>
        </name>
        <article-title>Fast folding and comparison of RNA secondary structures (The Vienna RNA Package)</article-title>
        <source>Monatshefte für Chemie</source>
        <year>1994</year>
        <volume>125</volume>
        <fpage>167</fpage>
        <lpage>188</lpage>
        <pub-id pub-id-type="doi">10.1007/BF00818163</pub-id>
        <pub-id pub-id-type="pmid">21516578</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B3">
      <mixed-citation publication-type="other">
        <name>
          <surname>Hofacker</surname>
          <given-names>IL</given-names>
        </name>
        <name>
          <surname>Huynen</surname>
          <given-names>MA</given-names>
        </name>
        <name>
          <surname>Stadler</surname>
          <given-names>PF</given-names>
        </name>
        <name>
          <surname>Stolorz</surname>
          <given-names>PE</given-names>
        </name>
        <article-title>RNA Folding on Parallel Computers - The Minimum Free Energy Structures of Complete HIV Genomes</article-title>
        <year>1996</year>
      </mixed-citation>
    </ref>
    <ref id="B4">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Fekete</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Hofacker</surname>
          <given-names>IL</given-names>
        </name>
        <name>
          <surname>Stadler</surname>
          <given-names>PF</given-names>
        </name>
        <article-title>Prediction of RNA base pairing probabilities on massively parallel computers</article-title>
        <source>Journal of Computational Biology</source>
        <year>2000</year>
        <volume>7</volume>
        <fpage>171</fpage>
        <lpage>182</lpage>
        <pub-id pub-id-type="doi">10.1089/10665270050081441</pub-id>
        <pub-id pub-id-type="pmid">10890394</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B5">
      <mixed-citation publication-type="book">
        <name>
          <surname>Mathuriya</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Bader</surname>
          <given-names>DA</given-names>
        </name>
        <name>
          <surname>Heitsch</surname>
          <given-names>CE</given-names>
        </name>
        <name>
          <surname>Harvey</surname>
          <given-names>SC</given-names>
        </name>
        <article-title>GTfold: a scalable multicore code for RNA secondary structure prediction</article-title>
        <source>SAC '09: Proceedings of the 2009 ACM symposium on Applied Computing</source>
        <year>2009</year>
        <publisher-name>New York, NY, USA: ACM</publisher-name>
        <fpage>981</fpage>
        <lpage>988</lpage>
        <pub-id pub-id-type="pmid">21515254</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B6">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Liu</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Schmidt</surname>
          <given-names>B</given-names>
        </name>
        <article-title>Parallel RNA secondary structure prediction using stochastic context-free grammars</article-title>
        <source>Concurrency Computat: Pract Exper</source>
        <year>2005</year>
        <volume>17</volume>
        <fpage>1669</fpage>
        <lpage>1685</lpage>
        <pub-id pub-id-type="doi">10.1002/cpe.952</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B7">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Shapiro</surname>
          <given-names>BA</given-names>
        </name>
        <name>
          <surname>Wu</surname>
          <given-names>JC</given-names>
        </name>
        <name>
          <surname>Bengali</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Potts</surname>
          <given-names>MJ</given-names>
        </name>
        <article-title>The massively parallel genetic algorithm for RNA folding: MIMD implementation and population variation</article-title>
        <source>Bioinformatics</source>
        <year>2001</year>
        <volume>17</volume>
        <fpage>137</fpage>
        <lpage>148</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/17.2.137</pub-id>
        <pub-id pub-id-type="pmid">11238069</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B8">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Xia</surname>
          <given-names>F</given-names>
        </name>
        <name>
          <surname>Dou</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Zhou</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Li</surname>
          <given-names>X</given-names>
        </name>
        <article-title>Fine-grained parallel RNA secondary structure prediction using SCFGs on FPGA</article-title>
        <source>Parallel Comput</source>
        <year>2010</year>
        <volume>36</volume>
        <fpage>516</fpage>
        <lpage>530</lpage>
        <pub-id pub-id-type="doi">10.1016/j.parco.2010.05.005</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B9">
      <mixed-citation publication-type="other">
        <name>
          <surname>Chang</surname>
          <given-names>DJ</given-names>
        </name>
        <name>
          <surname>Kimmer</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Ouyang</surname>
          <given-names>M</given-names>
        </name>
        <article-title>Accelerating the Nussinov RNA folding algorithm with CUDA/GPU</article-title>
        <source>Proceedings of IEEE International Symposium on Signal Processing and Information Technology (ISSPIT 2010)</source>
        <year>2010</year>
        <fpage>120</fpage>
        <lpage>125</lpage>
      </mixed-citation>
    </ref>
    <ref id="B10">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Knudsen</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Hein</surname>
          <given-names>J</given-names>
        </name>
        <article-title>RNA secondary structure prediction using stochastic context-free grammars and evolutionary history</article-title>
        <source>Bioinformatics</source>
        <year>1999</year>
        <volume>15</volume>
        <fpage>446</fpage>
        <lpage>454</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/15.6.446</pub-id>
        <pub-id pub-id-type="pmid">10383470</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B11">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Knudsen</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Hein</surname>
          <given-names>J</given-names>
        </name>
        <article-title>Pfold: RNA secondary structure prediction using stochastic context-free grammars</article-title>
        <source>Nuc Acids Res</source>
        <year>2003</year>
        <volume>31</volume>
        <fpage>3423</fpage>
        <lpage>3428</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkg614</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B12">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Gardner</surname>
          <given-names>PP</given-names>
        </name>
        <name>
          <surname>Giegerich</surname>
          <given-names>R</given-names>
        </name>
        <article-title>A comprehensive comparison of comparative RNA structure prediction approaches</article-title>
        <source>BMC Bioinformatics</source>
        <year>2004</year>
        <volume>5</volume>
        <fpage>140</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-5-140</pub-id>
        <pub-id pub-id-type="pmid">15458580</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B13">
      <mixed-citation publication-type="book">
        <name>
          <surname>Bardram</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Venkataraman</surname>
          <given-names>N</given-names>
        </name>
        <person-group person-group-type="editor">Bellavista P, Chang RS, Chao HC, Lin SF, Sloot P</person-group>
        <article-title>The Mini-Grid Framework: Application Programming Support for Ad-Hoc, Peer-to-Peer Volunteer Grids</article-title>
        <source>Advances in Grid and Pervasive Computing, Volume 6104 of Lecture Notes in Computer Science</source>
        <year>2010</year>
        <publisher-name>Springer Berlin/Heidelberg</publisher-name>
        <fpage>69</fpage>
        <lpage>80</lpage>
      </mixed-citation>
    </ref>
    <ref id="B14">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Watts</surname>
          <given-names>JM</given-names>
        </name>
        <name>
          <surname>Dang</surname>
          <given-names>KK</given-names>
        </name>
        <name>
          <surname>Gorelick</surname>
          <given-names>RJ</given-names>
        </name>
        <name>
          <surname>Leonard</surname>
          <given-names>CW</given-names>
        </name>
        <name>
          <surname>Bess</surname>
          <given-names>JW</given-names>
          <suffix>Jr</suffix>
        </name>
        <name>
          <surname>Swanstrom</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Burch</surname>
          <given-names>CL</given-names>
        </name>
        <name>
          <surname>Weeks</surname>
          <given-names>KM</given-names>
        </name>
        <article-title>Architecture and secondary structure of an entire HIV-1 RNA genome</article-title>
        <source>Nature</source>
        <year>2009</year>
        <volume>460</volume>
        <fpage>711</fpage>
        <lpage>716</lpage>
        <pub-id pub-id-type="doi">10.1038/nature08237</pub-id>
        <pub-id pub-id-type="pmid">19661910</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B15">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Felsenstein</surname>
          <given-names>J</given-names>
        </name>
        <article-title>Evolutionary trees from DNA sequences: a maximum likelihood approach</article-title>
        <source>J Mol Evol</source>
        <year>1981</year>
        <volume>17</volume>
        <fpage>368</fpage>
        <lpage>376</lpage>
        <pub-id pub-id-type="doi">10.1007/BF01734359</pub-id>
        <pub-id pub-id-type="pmid">7288891</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B16">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Lari</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>Young</surname>
          <given-names>SJ</given-names>
        </name>
        <article-title>The estimation of stochastic context-free grammars using the Inside-Outside algorithm</article-title>
        <source>Computer Speech &amp; Language</source>
        <year>1990</year>
        <volume>4</volume>
        <fpage>35</fpage>
        <lpage>56</lpage>
        <pub-id pub-id-type="doi">10.1016/0885-2308(90)90022-X</pub-id>
        <pub-id pub-id-type="pmid">21498579</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B17">
      <mixed-citation publication-type="book">
        <name>
          <surname>Wiese</surname>
          <given-names>KC</given-names>
        </name>
        <name>
          <surname>Glen</surname>
          <given-names>E</given-names>
        </name>
        <article-title>jViz.Rna - An Interactive Graphical Tool for Visualizing RNA Secondary Structure Including Pseudoknots</article-title>
        <source>Proceedings of the 19th IEEE Symposium on Computer-Based Medical Systems</source>
        <year>2006</year>
        <publisher-name>Washington, DC, USA: IEEE Computer Society</publisher-name>
        <fpage>659</fpage>
        <lpage>664</lpage>
        <ext-link ext-link-type="uri" xlink:href="http://portal.acm.org/citation.cfm?id=1152999.1153025">http://portal.acm.org/citation.cfm?id=1152999.1153025</ext-link>
      </mixed-citation>
    </ref>
  </ref-list>
</back>

<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinform Adv</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinform Adv</journal-id>
    <journal-id journal-id-type="publisher-id">bioadv</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics Advances</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2635-0041</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10243934</article-id>
    <article-id pub-id-type="doi">10.1093/bioadv/vbad065</article-id>
    <article-id pub-id-type="publisher-id">vbad065</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Application Note</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Sequence Analysis</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>tiny-count: a counting tool for hierarchical classification and quantification of small RNA-seq reads with single-nucleotide precision</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Tate</surname>
          <given-names>Alex J</given-names>
        </name>
        <aff><institution>Department of Biology, Colorado State University</institution>, Fort Collins, CO 80523, <country country="US">USA</country></aff>
        <xref rid="vbad065-FM1" ref-type="author-notes"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Brown</surname>
          <given-names>Kristen C</given-names>
        </name>
        <aff><institution>Department of Biology, Colorado State University</institution>, Fort Collins, CO 80523, <country country="US">USA</country></aff>
        <aff><institution>Cell and Molecular Biology Program, Colorado State University</institution>, Fort Collins, CO 80523, <country country="US">USA</country></aff>
        <xref rid="vbad065-FM1" ref-type="author-notes"/>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-7857-3253</contrib-id>
        <name>
          <surname>Montgomery</surname>
          <given-names>Taiowa A</given-names>
        </name>
        <aff><institution>Department of Biology, Colorado State University</institution>, Fort Collins, CO 80523, <country country="US">USA</country></aff>
        <aff><institution>Cell and Molecular Biology Program, Colorado State University</institution>, Fort Collins, CO 80523, <country country="US">USA</country></aff>
        <xref rid="vbad065-cor1" ref-type="corresp"/>
        <!--tai.montgomery@colostate.edu-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Lengauer</surname>
          <given-names>Thomas</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="vbad065-cor1">To whom correspondence should be addressed. <email>tai.montgomery@colostate.edu</email>.</corresp>
      <fn id="vbad065-FM1">
        <p>The authors wish it to be known that, in their opinion, Alex J Tate and Kristen C Brown authors should be regarded as Joint First Authors.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="collection">
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2023-05-18">
      <day>18</day>
      <month>5</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>18</day>
      <month>5</month>
      <year>2023</year>
    </pub-date>
    <volume>3</volume>
    <issue>1</issue>
    <elocation-id>vbad065</elocation-id>
    <history>
      <date date-type="received">
        <day>26</day>
        <month>8</month>
        <year>2022</year>
      </date>
      <date date-type="rev-recd">
        <day>03</day>
        <month>5</month>
        <year>2023</year>
      </date>
      <date date-type="editorial-decision">
        <day>09</day>
        <month>5</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>17</day>
        <month>5</month>
        <year>2023</year>
      </date>
      <date date-type="corrected-typeset">
        <day>05</day>
        <month>6</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2023. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2023</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="vbad065.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Summary</title>
        <p>tiny-count is a highly flexible counting tool that allows for hierarchical classification and quantification of small RNA reads from high-throughput sequencing data. Selection rules can be used to filter reads by 5′ nucleotide, length, position of alignments in relation to reference features, and by the number of mismatches to reference sequences. tiny-count can quantify reads aligned to a genome or directly to small RNA or transcript sequences. With tiny-count, users can quantify a single class of small RNAs or multiple classes in parallel. tiny-count can resolve distinct classes of small RNAs, for example, piRNAs and siRNAs, produced from the same locus. It can distinguish small RNA variants, such as miRNAs and isomiRs, with single-nucleotide precision. tRNA, rRNA, and other RNA fragments can also be quantified. tiny-count can be run alone or as part of tinyRNA, a workflow that provides a basic all-in-one command line-based solution for small RNA-seq data analysis, with documentation and statistics generated at each step for accurate and reproducible results.</p>
      </sec>
      <sec id="s2">
        <title>Availability and implementation</title>
        <p>tiny-count and other tinyRNA tools are implemented in Python, C++, Cython, and R, and the workflow is coordinated with CWL. tiny-count and tinyRNA are free and open-source software distributed under the GPLv3 license. tiny-count can be installed via Bioconda (<ext-link xlink:href="https://anaconda.org/bioconda/tiny-count" ext-link-type="uri">https://anaconda.org/bioconda/tiny-count</ext-link>) and both tiny-count and tinyRNA documentation and software downloads are available at <ext-link xlink:href="https://github.com/MontgomeryLab/tinyRNA" ext-link-type="uri">https://github.com/MontgomeryLab/tinyRNA</ext-link>. Reference data, including genome and feature information, for certain species can be found at <ext-link xlink:href="https://www.MontgomeryLab.org" ext-link-type="uri">https://www.MontgomeryLab.org</ext-link>.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>National Institutes of Health</institution>
            <institution-id institution-id-type="DOI">10.13039/100000002</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>R35GM119775</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="6"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Small RNAs interact with larger RNAs through base-pair interactions to direct mRNA decay or translational repression, or to promote RNA, DNA, or histone modifications. There is tremendous diversity among small RNAs both between and within species. The canonical classes of small RNAs—microRNAs (miRNAs), piwi-interacting RNAs (piRNAs), and small interfering RNAs (siRNAs)—are unified by their association with Argonaute/Piwi proteins (<xref rid="vbad065-B10" ref-type="bibr">Ghildiyal and Zamore, 2009</xref>). These classes of small RNAs can be distinguished by their genetic requirements, length, 5′ nucleotide (nt), and precursor structure (<xref rid="vbad065-B9" ref-type="bibr">Farazi <italic toggle="yes">et al.</italic>, 2008</xref>). Numerous other classes of short RNAs, such as tRNA and rRNA fragments, also play diverse roles in gene regulation (<xref rid="vbad065-B1" ref-type="bibr">Aalto and Pasquinelli, 2012</xref>).</p>
    <p>High-throughput sequencing is a widely used tool for discovery and analysis of small RNAs (<xref rid="vbad065-B23" ref-type="bibr">Veneziano <italic toggle="yes">et al.</italic>, 2016</xref>). The diversity and complexity of small RNA pathways present several computational challenges when classifying and analyzing the reads generated by high-throughput sequencing. For example, small RNA libraries are often contaminated with decay intermediates of longer RNAs, such as rRNAs and mRNAs, that can also produce functional small RNAs (<xref rid="vbad065-B14" ref-type="bibr">Lambert <italic toggle="yes">et al.</italic>, 2019</xref>). These contaminants can be difficult to distinguish from authentic small RNAs produced from the same features. Additionally, differential or imprecise processing can generate functionally distinct small RNAs, such as miRNA variants called isomiRs, that differ by as little as 1 nucleotide (<xref rid="vbad065-B4" ref-type="bibr">Bartel, 2018</xref>). Further complicating data analysis, distinct classes of small RNAs, such as piRNAs and siRNAs, can be produced from the same locus (<xref rid="vbad065-B8" ref-type="bibr">Das <italic toggle="yes">et al.</italic>, 2008</xref>; <xref rid="vbad065-B13" ref-type="bibr">Kawamura <italic toggle="yes">et al.</italic>, 2008</xref>). The tinyRNA project addresses these challenges with tiny-count, a single-nucleotide precision counting tool designed to quantify small RNAs and other short RNAs from high-throughput sequencing data.</p>
  </sec>
  <sec>
    <title>2 Methods and results</title>
    <sec>
      <title>2.1 Overview</title>
      <p>tiny-count evaluates sequence alignments for feature assignment utilizing the genomic array and GFF reader from HTSeq (<xref rid="vbad065-B2" ref-type="bibr">Anders <italic toggle="yes">et al.</italic>, 2015</xref>). User-defined selection rules can be used to classify reads based on their sequence attributes, which include 5′ nt and length, as well as their relationship to features of interest, such as strandedness, positional overlap, and number of mismatches. Selection rules can require exact, partial, nested, or anchored alignment of reads to features of interest. Alignment can be relative to the annotated 5′ or 3′ ends of features of interest or shifted by any number of nucleotides specified by the user. Each selection rule must specify a hierarchy value, and rule sets with heterogeneous hierarchy values can be used to preferentially assign reads to one class over another. Reads can also be subclassified for individual features based on these rules. tiny-count will distinguish and quantify reads for every rule simultaneously while preserving information for each feature-rule combination for subsequent analysis. Hence, the user can perform downstream analysis treating subsets of small RNAs produced from the same locus as distinct features.</p>
      <p>For each sequence, counts are optionally normalized by the number of genomic alignments and/or by the number of features the sequence matched. tiny-count can also normalize by library size using the common small RNA normalization method, reads per million mapped reads (rpm). Alternatively, users can specify a custom normalization factor for each library, thereby enabling the use of spike-in counts or other metrics for normalization. tiny-count produces a CSV-formatted table with counts for each feature that are optionally subclassified based on the user-defined selection rules. Additionally, the total counts for each rule or class of small RNAs are reported, as are summary statistics and 5′ nt and length distribution tables.</p>
      <p>tiny-count can be installed via Bioconda or downloaded from GitHub. To run tiny-count as a stand-alone program, the user provides SAM files with read alignment information for each library. The user can provide a GFF file containing positional information for features of interest. In the absence of a GFF file, each unique reference sequence is treated as a distinct feature. This allows for analysis of data from alignments directly to features of interest rather than to a genome. Read selection rules and sample information are specified in CSV files, and paths to these files and other run information are specified within a YAML-formatted configuration file. Alternatively, tiny-count can be run as part of the tinyRNA end-to-end data analysis workflow described below.</p>
    </sec>
    <sec>
      <title>2.2 Precision counting</title>
      <p>tiny-count provides precise control over the attribution of reads at alignment loci with user-defined selection rules. Any number of selection rules can be defined to categorize reads. The selection process resolves ambiguities in feature assignment at loci with multiple overlapping features and the associated loss of counting precision. It also allows for reads from distinct classes of small RNAs produced from the same feature or genomic interval to be treated separately during counting and analysis. Feature selection and read matching occurs in three stages (<xref rid="vbad065-F1" ref-type="fig">Fig. 1</xref>). In Stage 1, features of interest are retrieved from GFF-formatted input files based on user-specified attributes, including source (listed in column 2 of the GFF), type (listed in column 3 of the GFF), and annotation (listed in column 9 of the GFF). If reads are counted from alignments directly to sequences of interest, rather than to a genome containing feature intervals of interest, then both the GFF file and Stage 1 can be omitted.</p>
      <fig position="float" id="vbad065-F1">
        <label>Fig. 1.</label>
        <caption>
          <p>The tiny-count selection scheme. Small RNA read and alignment attributes are specified within a CSV-formatted file in which each row corresponds to a selection rule. The Stage 1 selection attributes reflect the variety of sources used for small RNA annotation and classification. Feature selection and read filtering occurs in three stages. Stage 1: information about features specified by the user is extracted from a GFF file. If a GFF file is not provided, this step is omitted. Stage 2: features are selected based on their overlap with read alignments and edit distance (mismatches) to the reference sequence. Stage 3: reads are assigned to features passing Stages 1 and 2 selection based on their sequence attributes, such as 5′ nt and length, as well as their strand relationship to the feature. Reads meeting all selection criteria for a specific rule are then assigned to features. If there is more than one matching feature, reads are evenly distributed or preferentially assigned to one over the others based on user-defined hierarchy values. In Example 1, a hypothetical siRNA read is incompatible with classification as an rRNA as defined in Rule 1 because of strand incompatibility but is compatible with classification as an siRNA as defined in Rule 7. Conversely, in Example 2, a hypothetical rRNA fragment read is compatible with both Rules 1 and 7 but is assigned to Rule 1 because of its lower hierarchy value</p>
        </caption>
        <graphic xlink:href="vbad065f1" position="float"/>
      </fig>
      <p>During Stage 2, reads are assessed for their positional overlap with the features that were selected in Stage 1. If a GFF file is not provided, reads are instead evaluated for their overlap with each reference sequence, as specified in the header section of the SAM-formatted alignment file. Selection rules can specify partial, nested, or exact overlap with features of interest, with the option to shift the annotated coordinates by any number of nucleotides in the 5′ or 3′ direction. Additionally, features can be selected based on whether their 5′ or 3′ ends are anchored to the alignment or to a user-defined position relative to the alignment. The number of mismatches relative to features of interests can also be specified if such mismatches were permissible at the alignment step. This can be a range or a single value, which can be used to capture sequence variants. Features passing the selection criteria in Stage 2 are sorted by user-defined values for hierarchical selection in Stage 3.</p>
      <p>In Stage 3, features are matched with reads based on each read’s attributes, such as its 5′ nt, length, and strandedness relative to the feature. Reads are assigned at Stage 3 to matching features with the lowest hierarchy value that meet all selection criteria and are thus excluded from any other overlapping features at the alignment locus with higher hierarchy values. Features which pass the selection process are assigned all counts or a normalized portion of the counts associated with the alignment sequence. By default, a sequence with <inline-formula id="IE1"><mml:math id="IM1" display="inline" overflow="scroll"><mml:mi>n</mml:mi></mml:math></inline-formula> read counts and <inline-formula id="IE2"><mml:math id="IM2" display="inline" overflow="scroll"><mml:mi>m</mml:mi></mml:math></inline-formula> genomic alignments is assigned <inline-formula id="IE3"><mml:math id="IM3" display="inline" overflow="scroll"><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mo>/</mml:mo><mml:mi>m</mml:mi><mml:mo>)</mml:mo><mml:mo>/</mml:mo><mml:mi>k</mml:mi></mml:math></inline-formula> reads, where <inline-formula id="IE4"><mml:math id="IM4" display="inline" overflow="scroll"><mml:mi>k</mml:mi></mml:math></inline-formula> is the number of features that pass selection at the locus. The <inline-formula id="IE5"><mml:math id="IM5" display="inline" overflow="scroll"><mml:mi>m</mml:mi></mml:math></inline-formula> and <inline-formula id="IE6"><mml:math id="IM6" display="inline" overflow="scroll"><mml:mi>k</mml:mi></mml:math></inline-formula> normalization factors are both optional.</p>
      <p>The hierarchical selection scheme utilized by tiny-count allows users to assign reads preferentially or uniformly to features of interest. For example, it is often necessary to filter out reads that align to structural RNAs. Using tiny-count, reads that align to rRNAs or other abundant structural RNAs can be excluded from assignment to other features by giving the structural RNA classes lower hierarchy values (closer to or equal to 1). In this approach, counts from structural RNAs are excluded from assignment to other classes of small RNAs and are reported separately, which can provide an important indicator of RNA integrity or could point to biological relevance of such reads (<xref rid="vbad065-B14" ref-type="bibr">Lambert <italic toggle="yes">et al.</italic>, 2019</xref>).</p>
    </sec>
    <sec>
      <title>2.3 Applications</title>
      <p>tiny-count is designed to provide the highest level of user control over read selection and classification when quantifying high-throughput sequencing data. A few possible applications are described below to highlight potential usage of tiny-count, although we anticipate its functionality extending far beyond these examples.</p>
      <p><bold>miRNAs and isomiRs:</bold> The functionality of tiny-count can be illustrated by considering miRNAs, for which some variation at the 3′ end is often permissible but variation at the 5′ end would shift the seed sequence and alter target recognition (<xref rid="vbad065-B3" ref-type="bibr">Bartel, 2009</xref>). Pooling counts for all sequences that overlap with a miRNA locus can produce inaccurate results, whereas limiting the analysis to only reads with exact matches to annotated miRNAs may undercount relevant data. We commonly use a rule for miRNAs that captures reads with nested overlap within annotated miRNA loci. We require an exact match with the annotated 5′ ends of miRNAs and allow extensions up to 4 nt beyond the annotated 3′ ends to account for variation in 3′ end processing (Overlap = 5′ anchored, 0, 4; see Selection Rules example in <xref rid="vbad065-F1" ref-type="fig">Fig. 1</xref>). miRNAs are typically 20–24 nt long and we often expand this range to account for outliers (Length = 16–28). There is typically no reason to restrict the 5′ nt because this will be dictated by the annotated 5′ ends of the miRNAs (5′ nt = Any). To identify miRNA isoforms (isomiRs) for which the 5′ ends are shifted upstream by 1 nt, an additional rule could be added in which the overlap parameter is offset from the 5′ ends by −1 relative to the annotated coordinates (Overlap = 5′ anchored, −1, 4). Another rule could be defined to capture 5′ isoforms shifted downstream by 1 nt (Overlap = 5′ anchored, 1, 4) (<xref rid="vbad065-F1" ref-type="fig">Fig. 1</xref>). If desired, additional rules could be defined to distinguish other possible isomiRs, or a catch-all rule could be specified to capture all other partially overlapping reads (Overlap = Partial). By assigning a higher hierarchy value to this catch-all rule, only reads that are not assigned to the other miRNA rules would be counted. There is no need to distinguish the hierarchies of the other miRNA rules since they are mutually exclusive of each other due to distinct 5′ offsets of the overlap selectors (i.e. 0, −1, and 1). Alternatively, if the user wanted to capture reads that overlap exactly with annotated miRNAs, an exact overlap could be specified (Overlap = Exact). Regardless of how the rules are defined, the counts for each miRNA-rule pair will be listed as separate features in the counts table.</p>
      <p><bold>Promoter-derived small RNAs:</bold> Small RNAs are often produced from promoter regions of coding genes (<xref rid="vbad065-B12" ref-type="bibr">Kasschau <italic toggle="yes">et al.</italic>, 2007</xref>; <xref rid="vbad065-B25" ref-type="bibr">Zamudio <italic toggle="yes">et al.</italic>, 2014</xref>). To capture small RNA reads derived from promoter regions, which are often imprecisely annotated, a user could first define a selection rule to capture reads from annotated gene bodies (e.g. Overlap = Nested, 0, 0; Hierarchy = 1). Then in a second rule, the user could specify nested overlap within a region shifted by some number of nucleotides upstream of gene bodies and assign it a higher hierarchy value (e.g. Overlap = Nested, −1000, 0; Hierarchy = 2). The first rule would capture all reads nested within gene bodies, whereas the second rule would capture reads not aligned to gene bodies in the first rule (because of its hierarchy value) but nested within some number of nucleotides upstream (1000 in this example). Due to variability in promoter lengths, the user could specify any number of distinct bins upstream of the transcribed region to provide greater resolution.</p>
      <p><bold>Nematode 22G- and 26G-RNAs:</bold> In <italic toggle="yes">Caenorhabditis elegans</italic> and other nematodes, many genes produce two classes of small RNAs with distinct genetic requirements, one of which is characterized by sequence lengths of ∼22-nt (22G-RNAs) and the other by ∼26-nt species (26G-RNAs). Both classes are comprised primarily of sequences with a 5′G that are produced antisense to their transcripts of origin (<xref rid="vbad065-B5" ref-type="bibr">Billi <italic toggle="yes">et al.</italic>, 2014</xref>). These two classes can be distinguished with tiny-count by defining two selection rules, one that captures reads with length 22-nt (Length = 22) and one that captures reads with length 26-nt (Length = 26), and both of which include only 5′G-containing antisense reads (5′ nt = G; Strand = Antisense). There is no need to distinguish the hierarchy in this example because reads can only match one rule or the other due to the length restrictions. Because of variation in processing, the lengths and 5′ nt could be assigned a more permissive set of values to capture additional reads, although this would come at the expense of categorical resolution.</p>
    </sec>
    <sec>
      <title>2.4 The tinyRNA workflow</title>
      <p>tiny-count can be run as a stand-alone program or as part of the tinyRNA small RNA data analysis workflow (<xref rid="vbad065-F2" ref-type="fig">Fig. 2A</xref>). When running tinyRNA, execution begins with the automated generation of a workflow in Common Workflow Language (CWL) (<xref rid="vbad065-B7" ref-type="bibr">Crusoe <italic toggle="yes">et al.</italic>, 2022</xref>). CWL is portable, scalable across different computing resources, and, like the tinyRNA project, its development is community driven. Preprocessing of FASTQ files, including adapter trimming and quality filtering, is performed with fastp (<xref rid="vbad065-B6" ref-type="bibr">Chen <italic toggle="yes">et al.</italic>, 2018</xref>). Unique sequences are counted and collapsed by the tinyRNA collapser tool, tiny-collapse, substantially reducing the resource demands of genomic alignment and feature counting. tiny-collapse can also trim the degenerate bases often included in the adapter sequences used in library preparation. Collapsed reads are aligned to a reference genome using Bowtie allowing 0–3 mismatches (default = 0, specified within the run configuration file) (<xref rid="vbad065-B15" ref-type="bibr">Langmead <italic toggle="yes">et al.</italic>, 2009</xref>). tiny-count is then used for read quantification, as described above. If the data contain biological replicates, differential expression analysis is automatically performed by tiny-deseq, a wrapper around DESeq2 (<xref rid="vbad065-B18" ref-type="bibr">Love <italic toggle="yes">et al.</italic>, 2014</xref>), using the counts tables generated by tiny-count. Finally, the outputs of tiny-count and tiny-deseq are used to produce publication-ready plots with the tinyRNA plotter tool, tiny-plot.</p>
      <fig position="float" id="vbad065-F2">
        <label>Fig. 2.</label>
        <caption>
          <p>The tinyRNA workflow. (<bold>A</bold>) tinyRNA flowchart. A selection of graphical outputs from a human miRNA analysis (<xref rid="vbad065-B21" ref-type="bibr">Shi <italic toggle="yes">et al.</italic>, 2020</xref>) (<bold>B</bold>), and a <italic toggle="yes">C. elegans</italic> total small RNA analysis (<xref rid="vbad065-B19" ref-type="bibr">Reed <italic toggle="yes">et al.</italic>, 2020</xref>) (<bold>C</bold> and <bold>D</bold>). Note that some post-run editing of the plots was done due to space constraints. The outputs of each tinyRNA run, including quality reports, processed data, mapping and assignment statistics, counts tables, size plots, class charts and a variety of scatter plots, are placed in a timestamped directory with full run documentation</p>
        </caption>
        <graphic xlink:href="vbad065f2" position="float"/>
      </fig>
      <p>tinyRNA provides a simple command-line-based solution for integrating precision classification and analysis of short RNAs into a general automated data analysis pipeline. To the best of our knowledge, tinyRNA adds a higher degree of precision and user control when processing, counting, and classifying reads than other software suites. However, tinyRNA lacks the specialized functionality found in some tools, such as integration of different data types, querying of public data repositories, and automated classification of small RNAs (<xref rid="vbad065-B11" ref-type="bibr">Han <italic toggle="yes">et al.</italic>, 2015</xref>; <xref rid="vbad065-B16" ref-type="bibr">Li <italic toggle="yes">et al.</italic>, 2020</xref>; <xref rid="vbad065-B20" ref-type="bibr">Rueda <italic toggle="yes">et al.</italic>, 2015</xref>; <xref rid="vbad065-B22" ref-type="bibr">Stocks <italic toggle="yes">et al.</italic>, 2018</xref>; <xref rid="vbad065-B24" ref-type="bibr">Wu <italic toggle="yes">et al.</italic>, 2017</xref>). With tinyRNA, users must provide all reference data for their analysis. This approach allows users to use their preferred reference sequences and to analyze any set of features regardless of availability in a publicly accessible database. It also avoids challenges associated with querying online databases from some servers or when working offline. Care should be taken by the user to ensure that reference data is from a reliable and up-to-date source. This is particularly important for small RNAs, which are often absent or poorly annotated in GFFs distributed through non-specialized databases.</p>
      <p>Despite being a command-line tool, very little terminal software experience is necessary to run tinyRNA because input files and parameters are passed to the workflow via text-based configuration files. After preparing the input files, the entire tinyRNA workflow can be run with a single command, <italic toggle="yes"><monospace>tiny run --config run_config.yml</monospace></italic>. Alternatively, certain steps of the workflow, such as counting and plotting, can be repeated on a completed run if the user chooses to modify the parameters, such as the selection rules or plot appearance.</p>
      <p>We tested tiny-count and the tinyRNA workflow on human cell line datasets by quantifying miRNAs in control and ZSWIM8 knockout lines (<xref rid="vbad065-F2" ref-type="fig">Fig. 2B</xref>) (<xref rid="vbad065-B21" ref-type="bibr">Shi <italic toggle="yes">et al.</italic>, 2020</xref>). We also tested their ability to accurately quantify multiple classes of small RNAs in parallel using <italic toggle="yes">C. elegans</italic> germline tissue datasets from wild type and <italic toggle="yes">mut-16</italic> mutant animals (<xref rid="vbad065-F2" ref-type="fig">Fig. 2C and D</xref>) (<xref rid="vbad065-B19" ref-type="bibr">Reed <italic toggle="yes">et al.</italic>, 2020</xref>). In each of these tests, tinyRNA provided results that were consistent with the original published analyses but with greater resolution of affected features. For example, in the human dataset, tinyRNA identified several isomiRs that were upregulated in ZSWIM8 knockout cell lines that were not previously reported (<xref rid="vbad065-F2" ref-type="fig">Fig. 2B</xref>). In the <italic toggle="yes">C. elegans</italic> dataset, tinyRNA identified numerous unclassified siRNAs that were depleted in <italic toggle="yes">mut-16</italic> mutants and distinguished between affected 22G- and 26G-RNAs produced from the same genes (<xref rid="vbad065-F2" ref-type="fig">Fig. 2C</xref>).</p>
    </sec>
    <sec>
      <title>2.5 Performance</title>
      <p>To our knowledge, tiny-count is the only read counting program that combines hierarchical assignment of reads to user-defined categories, selection based on small RNA length and 5′ nt, 5′- or 3′-anchored alignments, and single nucleotide control over alignment overlap (<xref rid="vbad065-T1" ref-type="table">Table 1</xref>). Nor to our knowledge is the user-defined small RNA counting and classification scheme of tiny-count available in small RNA pipeline software other than tinyRNA. tiny-count’s unique features enable the highest level of accuracy in counting and classifying small RNAs. Because of tiny-count’s hierarchical read assignment strategy, data does not have to be prefiltered or sorted before counting, and multiple classes of small RNAs can be analyzed in parallel. tiny-count is faster than HTSeq-count, but it is slower than featureCounts, which is an exceptionally fast general purpose counting program that is not readily configurable for precision counting of diverse small RNA classes (<xref rid="vbad065-T1" ref-type="table">Table 1</xref>) (<xref rid="vbad065-B2" ref-type="bibr">Anders <italic toggle="yes">et al.</italic>, 2015</xref>; <xref rid="vbad065-B17" ref-type="bibr">Liao <italic toggle="yes">et al.</italic>, 2014</xref>). Furthermore, tiny-count, but not HTSeq-count nor featureCounts, can extract read counts from collapsed SAM files (i.e. reads are collapsed and tallied within each sequence record to minimize the number of genome alignments required). When SAM files containing collapsed reads are used in tiny-count, its performance begins to approach that of featureCounts while allowing for quantification of multiple classes in parallel (45.1 versus 2.4 s) (<xref rid="vbad065-T1" ref-type="table">Table 1</xref>). Currently, tiny-count can only accommodate SAM files containing collapsed read data if the reads were collapsed with FASTX-Toolkit, tiny-collapse, or custom programs that embed the counts within read identifiers formatted similarly to either of these tools.</p>
      <table-wrap position="float" id="vbad065-T1">
        <label>Table 1.</label>
        <caption>
          <p>Comparison of read counting programs applied to small RNA-sequencing data</p>
        </caption>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="center" span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th rowspan="1" colspan="1">Read counting program</th>
              <th align="center" rowspan="1" colspan="1">Strand selectivity</th>
              <th align="center" rowspan="1" colspan="1">Length selectivity</th>
              <th align="center" rowspan="1" colspan="1">5′ nt selectivity</th>
              <th align="center" rowspan="1" colspan="1">Hierarchical assignment</th>
              <th align="center" rowspan="1" colspan="1">5′ or 3′ anchoring<xref rid="tblfn1" ref-type="table-fn"><sup>a</sup></xref></th>
              <th align="center" rowspan="1" colspan="1">Runtime<xref rid="tblfn2" ref-type="table-fn"><sup>b</sup></xref></th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">HTSeq-count</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">No</td>
              <td rowspan="1" colspan="1">No</td>
              <td rowspan="1" colspan="1">No</td>
              <td rowspan="1" colspan="1">No</td>
              <td rowspan="1" colspan="1">12 m 57 s</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">featureCounts</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">No</td>
              <td rowspan="1" colspan="1">No</td>
              <td rowspan="1" colspan="1">No</td>
              <td rowspan="1" colspan="1">2.4 s</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">tiny-count HTSeq StepVector</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">3 m 44 s</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">tiny-count Cython StepVector</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">2 m 35 s</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">tiny-count Cython StepVector with collapsed reads<xref rid="tblfn3" ref-type="table-fn"><sup>c</sup></xref></td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">45.1 s</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <fn id="tblfn1">
            <label>a</label>
            <p>Reads can be selected by 5′- or 3′-end alignment to 5′- or 3′-end of feature or shifted by any number of nucleotides.</p>
          </fn>
          <fn id="tblfn2">
            <label>b</label>
            <p>Approximately 13 million genome alignments and ∼50k features with an assignment rate of ∼65%. Benchmarks were taken on an HPE ProLiant server using one Xeon E5-4640V4 2.10 GHz CPU and allowing up to 256 GB memory usage.</p>
          </fn>
          <fn id="tblfn3">
            <label>c</label>
            <p>Reads collapsed prior to mapping. Tallied read counts are contained within SAM records and captured by tiny-count.</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
      <p>Most steps in tiny-count and tinyRNA run concurrently across libraries to minimize runtime. A user-defined global thread count is set for fastp and Bowtie to utilize multi-core computing resources. Performance-critical sections of tiny-count have been carefully written with respect to the resulting bytecode, or internal representation of the program in the CPython interpreter, to optimize execution. Additionally, we developed a custom implementation of the HTSeq StepVector written in Cython, a C language extension to Python, to address inefficiencies in iteration and intermediate object creation. The StepVector is a data structure which represents piecewise constant values at low resolution and is used by tiny-count to resolve features that overlap a given interval by at least one nucleotide. This data structure is heavily utilized during read assignment and because of our implementation, overall runtimes in tiny-count have been reduced by an average of ∼30% relative to an implementation using the HTSeq StepVector (<xref rid="vbad065-T1" ref-type="table">Table 1</xref>).</p>
    </sec>
    <sec>
      <title>2.6 Convenience and reproducibility</title>
      <p>tiny-count and the tinyRNA workflow are designed to be operable by users with minimal command-line computing skills and little or no small RNA data analysis experience. Configuration parameters for the individual tools within tinyRNA are contained within modules rather than residing in a single monolithic file. This allows the tinyRNA pipeline to be executed with a single command whose sole argument is the primary configuration file. Command-line parameters for each step in the tinyRNA pipeline can be modified by editing the primary configuration file. Thus, the user does not need to be familiar with the various tools used by tinyRNA, such as fastp and Bowtie, to utilize their extensive functionality. A standard small RNA analysis configuration that follows best practices in the field is provided as a YAML-formatted template. Upon tinyRNA run completion, copies of configuration files are placed in timestamped output directories that are organized into subdirectories by step to simplify documentation and collaboration. Most tinyRNA components are written in Python using object-oriented design patterns for transparency and easy modification by advanced users. The tinyRNA pipeline can be extended to include any number of additional steps by modifying the workflow CWL. These advanced modifications are permissible by the installation script for easy integration into a custom workflow.</p>
    </sec>
  </sec>
  <sec>
    <title>3 Summary</title>
    <p>tiny-count performs precision counting of small RNAs from high-throughput sequencing data. Utilizing tiny-count, the tinyRNA workflow enables end-to-end analysis of small RNA high-throughput sequencing data following best practices, producing complete run documentation for accuracy and reproducibility. It is compatible with data from any species containing reference sequences for the genome or small RNAs of interest. tiny-count and tinyRNA can accommodate relatively simple data analyses, such as miRNA expression in mammalian cell lines, to complex analyses of multiple classes of small RNAs from whole organisms, such as <italic toggle="yes">Arabidopsis</italic>, <italic toggle="yes">Drosophila</italic>, and <italic toggle="yes">C. elegans.</italic></p>
  </sec>
</body>
<back>
  <ack id="ack1">
    <title>Acknowledgements</title>
    <p>Thanks to the Montgomery lab and the small RNA community for comments and suggestions.</p>
  </ack>
  <sec>
    <title>Funding</title>
    <p>This work was supported by the National Institutes of Health [R35GM119775 to T.A.M.].</p>
    <p><italic toggle="yes">Conflict of Interest</italic>: none declared.</p>
  </sec>
  <sec sec-type="data-availability">
    <title>Data availability</title>
    <p>There are no new data associated with this article.</p>
  </sec>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="vbad065-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Aalto</surname><given-names>A.P.</given-names></string-name>, <string-name><surname>Pasquinelli</surname><given-names>A.E.</given-names></string-name></person-group> (<year>2012</year>) <article-title>Small non-coding RNAs mount a silent revolution in gene expression</article-title>. <source>Curr. Opin. Cell Biol</source>., <volume>24</volume>, <fpage>333</fpage>–<lpage>340</lpage>.<pub-id pub-id-type="pmid">22464106</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Anders</surname><given-names>S.</given-names></string-name></person-group><etal>et al</etal> (<year>2015</year>) <article-title>HTSeq–a python framework to work with high-throughput sequencing data</article-title>. <source>Bioinformatics</source>, <volume>31</volume>, <fpage>166</fpage>–<lpage>169</lpage>.<pub-id pub-id-type="pmid">25260700</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bartel</surname><given-names>D.P.</given-names></string-name></person-group> (<year>2009</year>) <article-title>MicroRNAs: target recognition and regulatory functions</article-title>. <source>Cell</source>, <volume>136</volume>, <fpage>215</fpage>–<lpage>233</lpage>.<pub-id pub-id-type="pmid">19167326</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bartel</surname><given-names>D.P.</given-names></string-name></person-group> (<year>2018</year>) <article-title>Metazoan microRNAs</article-title>. <source>Cell</source>, <volume>173</volume>, <fpage>20</fpage>–<lpage>51</lpage>.<pub-id pub-id-type="pmid">29570994</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Billi</surname><given-names>A.C.</given-names></string-name></person-group><etal>et al</etal> (<year>2014</year>) <article-title>Endogenous RNAi pathways in <italic toggle="yes">C. elegans</italic></article-title>. <source>WormBook</source>, <fpage>1</fpage>–<lpage>49</lpage>. <pub-id pub-id-type="doi">10.1895/wormbook.1.170.1</pub-id>.</mixed-citation>
    </ref>
    <ref id="vbad065-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chen</surname><given-names>S.</given-names></string-name></person-group><etal>et al</etal> (<year>2018</year>) <article-title>fastp: an ultra-fast all-in-one FASTQ preprocessor</article-title>. <source>Bioinformatics</source>, <volume>34</volume>, <fpage>i884</fpage>–<lpage>i890</lpage>.<pub-id pub-id-type="pmid">30423086</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Crusoe</surname><given-names>M.R.</given-names></string-name></person-group><etal>et al</etal> (<year>2022</year>) <article-title>Methods included: standardizing computational reuse and portability with the common workflow language</article-title>. <source>Commun. ACM</source>, <volume>65</volume>, <fpage>54</fpage>–<lpage>63</lpage>.</mixed-citation>
    </ref>
    <ref id="vbad065-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Das</surname><given-names>P.P.</given-names></string-name></person-group><etal>et al</etal> (<year>2008</year>) <article-title>Piwi and piRNAs act upstream of an endogenous siRNA pathway to suppress Tc3 transposon mobility in the <italic toggle="yes">Caenorhabditis elegans</italic> germline</article-title>. <source>Mol. Cell</source>., <volume>31</volume>, <fpage>79</fpage>–<lpage>90</lpage>.<pub-id pub-id-type="pmid">18571451</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Farazi</surname><given-names>T.A.</given-names></string-name></person-group><etal>et al</etal> (<year>2008</year>) <article-title>The growing catalog of small RNAs and their association with distinct Argonaute/Piwi family members</article-title>. <source>Development</source>, <volume>135</volume>, <fpage>1201</fpage>–<lpage>1214</lpage>.<pub-id pub-id-type="pmid">18287206</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ghildiyal</surname><given-names>M.</given-names></string-name>, <string-name><surname>Zamore</surname><given-names>P.D.</given-names></string-name></person-group> (<year>2009</year>) <article-title>Small silencing RNAs: an expanding universe</article-title>. <source>Nat. Rev. Genet</source>., <volume>10</volume>, <fpage>94</fpage>–<lpage>108</lpage>.<pub-id pub-id-type="pmid">19148191</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Han</surname><given-names>B.W.</given-names></string-name></person-group><etal>et al</etal> (<year>2015</year>) <article-title>piPipes: a set of pipelines for piRNA and transposon analysis via small RNA-seq, RNA-seq, degradome- and CAGE-seq, ChIP-seq and genomic DNA sequencing</article-title>. <source>Bioinformatics</source>, <volume>31</volume>, <fpage>593</fpage>–<lpage>595</lpage>.<pub-id pub-id-type="pmid">25342065</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kasschau</surname><given-names>K.D.</given-names></string-name></person-group><etal>et al</etal> (<year>2007</year>) <article-title>Genome-wide profiling and analysis of <italic toggle="yes">Arabidopsis</italic> siRNAs</article-title>. <source>PLoS Biol</source>., <volume>5</volume>, <fpage>e57</fpage>.<pub-id pub-id-type="pmid">17298187</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kawamura</surname><given-names>Y.</given-names></string-name></person-group><etal>et al</etal> (<year>2008</year>) <article-title>Drosophila endogenous small RNAs bind to Argonaute 2 in somatic cells</article-title>. <source>Nature</source>, <volume>453</volume>, <fpage>793</fpage>–<lpage>797</lpage>.<pub-id pub-id-type="pmid">18463636</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lambert</surname><given-names>M.</given-names></string-name></person-group><etal>et al</etal> (<year>2019</year>) <article-title>Small non-coding RNAs derived from eukaryotic ribosomal RNA</article-title>. <source>ncRNA</source>, <volume>5</volume>, <fpage>16</fpage>.<pub-id pub-id-type="pmid">30720712</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Langmead</surname><given-names>B.</given-names></string-name></person-group><etal>et al</etal> (<year>2009</year>) <article-title>Ultrafast and memory-efficient alignment of short DNA sequences to the human genome</article-title>. <source>Genome Biol</source>., <volume>10</volume>, <fpage>R25</fpage>.<pub-id pub-id-type="pmid">19261174</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Li</surname><given-names>J.</given-names></string-name></person-group><etal>et al</etal> (<year>2020</year>) <article-title>COMPSRA: a COMprehensive platform for small RNA-Seq data analysis</article-title>. <source>Sci. Rep</source>., <volume>10</volume>, <fpage>4552</fpage>.<pub-id pub-id-type="pmid">32165660</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Liao</surname><given-names>Y.</given-names></string-name></person-group><etal>et al</etal> (<year>2014</year>) <article-title>featureCounts: an efficient general purpose program for assigning sequence reads to genomic features</article-title>. <source>Bioinformatics</source>, <volume>30</volume>, <fpage>923</fpage>–<lpage>930</lpage>.<pub-id pub-id-type="pmid">24227677</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Love</surname><given-names>M.I.</given-names></string-name></person-group><etal>et al</etal> (<year>2014</year>) <article-title>Moderated estimation of fold change and dispersion for RNA-seq data with DESeq2</article-title>. <source>Genome Biol</source>., <volume>15</volume>, <fpage>550</fpage>.<pub-id pub-id-type="pmid">25516281</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Reed</surname><given-names>K.J.</given-names></string-name></person-group><etal>et al</etal> (<year>2020</year>) <article-title>Widespread roles for piRNAs and WAGO-class siRNAs in shaping the germline transcriptome of <italic toggle="yes">Caenorhabditis elegans</italic></article-title>. <source>Nucleic Acids Res</source>., <volume>48</volume>, <fpage>1811</fpage>–<lpage>1827</lpage>.<pub-id pub-id-type="pmid">31872227</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Rueda</surname><given-names>A.</given-names></string-name></person-group><etal>et al</etal> (<year>2015</year>) <article-title>sRNAtoolbox: an integrated collection of small RNA research tools</article-title>. <source>Nucleic Acids Res</source>., <volume>43</volume>, <fpage>W467</fpage>–<lpage>W473</lpage>.<pub-id pub-id-type="pmid">26019179</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Shi</surname><given-names>C.Y.</given-names></string-name></person-group><etal>et al</etal> (<year>2020</year>) <article-title>The ZSWIM8 ubiquitin ligase mediates target-directed microRNA degradation</article-title>. <source>Science</source>, <volume>370</volume>, <fpage>1</fpage>–<lpage>10</lpage>.</mixed-citation>
    </ref>
    <ref id="vbad065-B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Stocks</surname><given-names>M.B.</given-names></string-name></person-group><etal>et al</etal> (<year>2018</year>) <article-title>The UEA sRNA Workbench (version 4.4): a comprehensive suite of tools for analyzing miRNAs and sRNAs</article-title>. <source>Bioinformatics</source>, <volume>34</volume>, <fpage>3382</fpage>–<lpage>3384</lpage>.<pub-id pub-id-type="pmid">29722807</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Veneziano</surname><given-names>D.</given-names></string-name></person-group><etal>et al</etal> (<year>2016</year>) <article-title>Noncoding RNA: current deep sequencing data analysis approaches and challenges</article-title>. <source>Hum. Mutat</source>., <volume>37</volume>, <fpage>1283</fpage>–<lpage>1298</lpage>.<pub-id pub-id-type="pmid">27516218</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wu</surname><given-names>X.</given-names></string-name></person-group><etal>et al</etal> (<year>2017</year>) <article-title>sRNAnalyzer-a flexible and customizable small RNA sequencing data analysis pipeline</article-title>. <source>Nucleic Acids Res</source>., <volume>45</volume>, <fpage>12140</fpage>–<lpage>12151</lpage>.<pub-id pub-id-type="pmid">29069500</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zamudio</surname><given-names>J.R.</given-names></string-name></person-group><etal>et al</etal> (<year>2014</year>) <article-title>Argonaute-bound small RNAs from promoter-proximal RNA polymerase II</article-title>. <source>Cell</source>, <volume>156</volume>, <fpage>920</fpage>–<lpage>934</lpage>.<pub-id pub-id-type="pmid">24581493</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinform Adv</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinform Adv</journal-id>
    <journal-id journal-id-type="publisher-id">bioadv</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics Advances</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2635-0041</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10243934</article-id>
    <article-id pub-id-type="doi">10.1093/bioadv/vbad065</article-id>
    <article-id pub-id-type="publisher-id">vbad065</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Application Note</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Sequence Analysis</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>tiny-count: a counting tool for hierarchical classification and quantification of small RNA-seq reads with single-nucleotide precision</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Tate</surname>
          <given-names>Alex J</given-names>
        </name>
        <aff><institution>Department of Biology, Colorado State University</institution>, Fort Collins, CO 80523, <country country="US">USA</country></aff>
        <xref rid="vbad065-FM1" ref-type="author-notes"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Brown</surname>
          <given-names>Kristen C</given-names>
        </name>
        <aff><institution>Department of Biology, Colorado State University</institution>, Fort Collins, CO 80523, <country country="US">USA</country></aff>
        <aff><institution>Cell and Molecular Biology Program, Colorado State University</institution>, Fort Collins, CO 80523, <country country="US">USA</country></aff>
        <xref rid="vbad065-FM1" ref-type="author-notes"/>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-7857-3253</contrib-id>
        <name>
          <surname>Montgomery</surname>
          <given-names>Taiowa A</given-names>
        </name>
        <aff><institution>Department of Biology, Colorado State University</institution>, Fort Collins, CO 80523, <country country="US">USA</country></aff>
        <aff><institution>Cell and Molecular Biology Program, Colorado State University</institution>, Fort Collins, CO 80523, <country country="US">USA</country></aff>
        <xref rid="vbad065-cor1" ref-type="corresp"/>
        <!--tai.montgomery@colostate.edu-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Lengauer</surname>
          <given-names>Thomas</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="vbad065-cor1">To whom correspondence should be addressed. <email>tai.montgomery@colostate.edu</email>.</corresp>
      <fn id="vbad065-FM1">
        <p>The authors wish it to be known that, in their opinion, Alex J Tate and Kristen C Brown authors should be regarded as Joint First Authors.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="collection">
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2023-05-18">
      <day>18</day>
      <month>5</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>18</day>
      <month>5</month>
      <year>2023</year>
    </pub-date>
    <volume>3</volume>
    <issue>1</issue>
    <elocation-id>vbad065</elocation-id>
    <history>
      <date date-type="received">
        <day>26</day>
        <month>8</month>
        <year>2022</year>
      </date>
      <date date-type="rev-recd">
        <day>03</day>
        <month>5</month>
        <year>2023</year>
      </date>
      <date date-type="editorial-decision">
        <day>09</day>
        <month>5</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>17</day>
        <month>5</month>
        <year>2023</year>
      </date>
      <date date-type="corrected-typeset">
        <day>05</day>
        <month>6</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2023. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2023</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="vbad065.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Summary</title>
        <p>tiny-count is a highly flexible counting tool that allows for hierarchical classification and quantification of small RNA reads from high-throughput sequencing data. Selection rules can be used to filter reads by 5′ nucleotide, length, position of alignments in relation to reference features, and by the number of mismatches to reference sequences. tiny-count can quantify reads aligned to a genome or directly to small RNA or transcript sequences. With tiny-count, users can quantify a single class of small RNAs or multiple classes in parallel. tiny-count can resolve distinct classes of small RNAs, for example, piRNAs and siRNAs, produced from the same locus. It can distinguish small RNA variants, such as miRNAs and isomiRs, with single-nucleotide precision. tRNA, rRNA, and other RNA fragments can also be quantified. tiny-count can be run alone or as part of tinyRNA, a workflow that provides a basic all-in-one command line-based solution for small RNA-seq data analysis, with documentation and statistics generated at each step for accurate and reproducible results.</p>
      </sec>
      <sec id="s2">
        <title>Availability and implementation</title>
        <p>tiny-count and other tinyRNA tools are implemented in Python, C++, Cython, and R, and the workflow is coordinated with CWL. tiny-count and tinyRNA are free and open-source software distributed under the GPLv3 license. tiny-count can be installed via Bioconda (<ext-link xlink:href="https://anaconda.org/bioconda/tiny-count" ext-link-type="uri">https://anaconda.org/bioconda/tiny-count</ext-link>) and both tiny-count and tinyRNA documentation and software downloads are available at <ext-link xlink:href="https://github.com/MontgomeryLab/tinyRNA" ext-link-type="uri">https://github.com/MontgomeryLab/tinyRNA</ext-link>. Reference data, including genome and feature information, for certain species can be found at <ext-link xlink:href="https://www.MontgomeryLab.org" ext-link-type="uri">https://www.MontgomeryLab.org</ext-link>.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>National Institutes of Health</institution>
            <institution-id institution-id-type="DOI">10.13039/100000002</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>R35GM119775</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="6"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Small RNAs interact with larger RNAs through base-pair interactions to direct mRNA decay or translational repression, or to promote RNA, DNA, or histone modifications. There is tremendous diversity among small RNAs both between and within species. The canonical classes of small RNAs—microRNAs (miRNAs), piwi-interacting RNAs (piRNAs), and small interfering RNAs (siRNAs)—are unified by their association with Argonaute/Piwi proteins (<xref rid="vbad065-B10" ref-type="bibr">Ghildiyal and Zamore, 2009</xref>). These classes of small RNAs can be distinguished by their genetic requirements, length, 5′ nucleotide (nt), and precursor structure (<xref rid="vbad065-B9" ref-type="bibr">Farazi <italic toggle="yes">et al.</italic>, 2008</xref>). Numerous other classes of short RNAs, such as tRNA and rRNA fragments, also play diverse roles in gene regulation (<xref rid="vbad065-B1" ref-type="bibr">Aalto and Pasquinelli, 2012</xref>).</p>
    <p>High-throughput sequencing is a widely used tool for discovery and analysis of small RNAs (<xref rid="vbad065-B23" ref-type="bibr">Veneziano <italic toggle="yes">et al.</italic>, 2016</xref>). The diversity and complexity of small RNA pathways present several computational challenges when classifying and analyzing the reads generated by high-throughput sequencing. For example, small RNA libraries are often contaminated with decay intermediates of longer RNAs, such as rRNAs and mRNAs, that can also produce functional small RNAs (<xref rid="vbad065-B14" ref-type="bibr">Lambert <italic toggle="yes">et al.</italic>, 2019</xref>). These contaminants can be difficult to distinguish from authentic small RNAs produced from the same features. Additionally, differential or imprecise processing can generate functionally distinct small RNAs, such as miRNA variants called isomiRs, that differ by as little as 1 nucleotide (<xref rid="vbad065-B4" ref-type="bibr">Bartel, 2018</xref>). Further complicating data analysis, distinct classes of small RNAs, such as piRNAs and siRNAs, can be produced from the same locus (<xref rid="vbad065-B8" ref-type="bibr">Das <italic toggle="yes">et al.</italic>, 2008</xref>; <xref rid="vbad065-B13" ref-type="bibr">Kawamura <italic toggle="yes">et al.</italic>, 2008</xref>). The tinyRNA project addresses these challenges with tiny-count, a single-nucleotide precision counting tool designed to quantify small RNAs and other short RNAs from high-throughput sequencing data.</p>
  </sec>
  <sec>
    <title>2 Methods and results</title>
    <sec>
      <title>2.1 Overview</title>
      <p>tiny-count evaluates sequence alignments for feature assignment utilizing the genomic array and GFF reader from HTSeq (<xref rid="vbad065-B2" ref-type="bibr">Anders <italic toggle="yes">et al.</italic>, 2015</xref>). User-defined selection rules can be used to classify reads based on their sequence attributes, which include 5′ nt and length, as well as their relationship to features of interest, such as strandedness, positional overlap, and number of mismatches. Selection rules can require exact, partial, nested, or anchored alignment of reads to features of interest. Alignment can be relative to the annotated 5′ or 3′ ends of features of interest or shifted by any number of nucleotides specified by the user. Each selection rule must specify a hierarchy value, and rule sets with heterogeneous hierarchy values can be used to preferentially assign reads to one class over another. Reads can also be subclassified for individual features based on these rules. tiny-count will distinguish and quantify reads for every rule simultaneously while preserving information for each feature-rule combination for subsequent analysis. Hence, the user can perform downstream analysis treating subsets of small RNAs produced from the same locus as distinct features.</p>
      <p>For each sequence, counts are optionally normalized by the number of genomic alignments and/or by the number of features the sequence matched. tiny-count can also normalize by library size using the common small RNA normalization method, reads per million mapped reads (rpm). Alternatively, users can specify a custom normalization factor for each library, thereby enabling the use of spike-in counts or other metrics for normalization. tiny-count produces a CSV-formatted table with counts for each feature that are optionally subclassified based on the user-defined selection rules. Additionally, the total counts for each rule or class of small RNAs are reported, as are summary statistics and 5′ nt and length distribution tables.</p>
      <p>tiny-count can be installed via Bioconda or downloaded from GitHub. To run tiny-count as a stand-alone program, the user provides SAM files with read alignment information for each library. The user can provide a GFF file containing positional information for features of interest. In the absence of a GFF file, each unique reference sequence is treated as a distinct feature. This allows for analysis of data from alignments directly to features of interest rather than to a genome. Read selection rules and sample information are specified in CSV files, and paths to these files and other run information are specified within a YAML-formatted configuration file. Alternatively, tiny-count can be run as part of the tinyRNA end-to-end data analysis workflow described below.</p>
    </sec>
    <sec>
      <title>2.2 Precision counting</title>
      <p>tiny-count provides precise control over the attribution of reads at alignment loci with user-defined selection rules. Any number of selection rules can be defined to categorize reads. The selection process resolves ambiguities in feature assignment at loci with multiple overlapping features and the associated loss of counting precision. It also allows for reads from distinct classes of small RNAs produced from the same feature or genomic interval to be treated separately during counting and analysis. Feature selection and read matching occurs in three stages (<xref rid="vbad065-F1" ref-type="fig">Fig. 1</xref>). In Stage 1, features of interest are retrieved from GFF-formatted input files based on user-specified attributes, including source (listed in column 2 of the GFF), type (listed in column 3 of the GFF), and annotation (listed in column 9 of the GFF). If reads are counted from alignments directly to sequences of interest, rather than to a genome containing feature intervals of interest, then both the GFF file and Stage 1 can be omitted.</p>
      <fig position="float" id="vbad065-F1">
        <label>Fig. 1.</label>
        <caption>
          <p>The tiny-count selection scheme. Small RNA read and alignment attributes are specified within a CSV-formatted file in which each row corresponds to a selection rule. The Stage 1 selection attributes reflect the variety of sources used for small RNA annotation and classification. Feature selection and read filtering occurs in three stages. Stage 1: information about features specified by the user is extracted from a GFF file. If a GFF file is not provided, this step is omitted. Stage 2: features are selected based on their overlap with read alignments and edit distance (mismatches) to the reference sequence. Stage 3: reads are assigned to features passing Stages 1 and 2 selection based on their sequence attributes, such as 5′ nt and length, as well as their strand relationship to the feature. Reads meeting all selection criteria for a specific rule are then assigned to features. If there is more than one matching feature, reads are evenly distributed or preferentially assigned to one over the others based on user-defined hierarchy values. In Example 1, a hypothetical siRNA read is incompatible with classification as an rRNA as defined in Rule 1 because of strand incompatibility but is compatible with classification as an siRNA as defined in Rule 7. Conversely, in Example 2, a hypothetical rRNA fragment read is compatible with both Rules 1 and 7 but is assigned to Rule 1 because of its lower hierarchy value</p>
        </caption>
        <graphic xlink:href="vbad065f1" position="float"/>
      </fig>
      <p>During Stage 2, reads are assessed for their positional overlap with the features that were selected in Stage 1. If a GFF file is not provided, reads are instead evaluated for their overlap with each reference sequence, as specified in the header section of the SAM-formatted alignment file. Selection rules can specify partial, nested, or exact overlap with features of interest, with the option to shift the annotated coordinates by any number of nucleotides in the 5′ or 3′ direction. Additionally, features can be selected based on whether their 5′ or 3′ ends are anchored to the alignment or to a user-defined position relative to the alignment. The number of mismatches relative to features of interests can also be specified if such mismatches were permissible at the alignment step. This can be a range or a single value, which can be used to capture sequence variants. Features passing the selection criteria in Stage 2 are sorted by user-defined values for hierarchical selection in Stage 3.</p>
      <p>In Stage 3, features are matched with reads based on each read’s attributes, such as its 5′ nt, length, and strandedness relative to the feature. Reads are assigned at Stage 3 to matching features with the lowest hierarchy value that meet all selection criteria and are thus excluded from any other overlapping features at the alignment locus with higher hierarchy values. Features which pass the selection process are assigned all counts or a normalized portion of the counts associated with the alignment sequence. By default, a sequence with <inline-formula id="IE1"><mml:math id="IM1" display="inline" overflow="scroll"><mml:mi>n</mml:mi></mml:math></inline-formula> read counts and <inline-formula id="IE2"><mml:math id="IM2" display="inline" overflow="scroll"><mml:mi>m</mml:mi></mml:math></inline-formula> genomic alignments is assigned <inline-formula id="IE3"><mml:math id="IM3" display="inline" overflow="scroll"><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mo>/</mml:mo><mml:mi>m</mml:mi><mml:mo>)</mml:mo><mml:mo>/</mml:mo><mml:mi>k</mml:mi></mml:math></inline-formula> reads, where <inline-formula id="IE4"><mml:math id="IM4" display="inline" overflow="scroll"><mml:mi>k</mml:mi></mml:math></inline-formula> is the number of features that pass selection at the locus. The <inline-formula id="IE5"><mml:math id="IM5" display="inline" overflow="scroll"><mml:mi>m</mml:mi></mml:math></inline-formula> and <inline-formula id="IE6"><mml:math id="IM6" display="inline" overflow="scroll"><mml:mi>k</mml:mi></mml:math></inline-formula> normalization factors are both optional.</p>
      <p>The hierarchical selection scheme utilized by tiny-count allows users to assign reads preferentially or uniformly to features of interest. For example, it is often necessary to filter out reads that align to structural RNAs. Using tiny-count, reads that align to rRNAs or other abundant structural RNAs can be excluded from assignment to other features by giving the structural RNA classes lower hierarchy values (closer to or equal to 1). In this approach, counts from structural RNAs are excluded from assignment to other classes of small RNAs and are reported separately, which can provide an important indicator of RNA integrity or could point to biological relevance of such reads (<xref rid="vbad065-B14" ref-type="bibr">Lambert <italic toggle="yes">et al.</italic>, 2019</xref>).</p>
    </sec>
    <sec>
      <title>2.3 Applications</title>
      <p>tiny-count is designed to provide the highest level of user control over read selection and classification when quantifying high-throughput sequencing data. A few possible applications are described below to highlight potential usage of tiny-count, although we anticipate its functionality extending far beyond these examples.</p>
      <p><bold>miRNAs and isomiRs:</bold> The functionality of tiny-count can be illustrated by considering miRNAs, for which some variation at the 3′ end is often permissible but variation at the 5′ end would shift the seed sequence and alter target recognition (<xref rid="vbad065-B3" ref-type="bibr">Bartel, 2009</xref>). Pooling counts for all sequences that overlap with a miRNA locus can produce inaccurate results, whereas limiting the analysis to only reads with exact matches to annotated miRNAs may undercount relevant data. We commonly use a rule for miRNAs that captures reads with nested overlap within annotated miRNA loci. We require an exact match with the annotated 5′ ends of miRNAs and allow extensions up to 4 nt beyond the annotated 3′ ends to account for variation in 3′ end processing (Overlap = 5′ anchored, 0, 4; see Selection Rules example in <xref rid="vbad065-F1" ref-type="fig">Fig. 1</xref>). miRNAs are typically 20–24 nt long and we often expand this range to account for outliers (Length = 16–28). There is typically no reason to restrict the 5′ nt because this will be dictated by the annotated 5′ ends of the miRNAs (5′ nt = Any). To identify miRNA isoforms (isomiRs) for which the 5′ ends are shifted upstream by 1 nt, an additional rule could be added in which the overlap parameter is offset from the 5′ ends by −1 relative to the annotated coordinates (Overlap = 5′ anchored, −1, 4). Another rule could be defined to capture 5′ isoforms shifted downstream by 1 nt (Overlap = 5′ anchored, 1, 4) (<xref rid="vbad065-F1" ref-type="fig">Fig. 1</xref>). If desired, additional rules could be defined to distinguish other possible isomiRs, or a catch-all rule could be specified to capture all other partially overlapping reads (Overlap = Partial). By assigning a higher hierarchy value to this catch-all rule, only reads that are not assigned to the other miRNA rules would be counted. There is no need to distinguish the hierarchies of the other miRNA rules since they are mutually exclusive of each other due to distinct 5′ offsets of the overlap selectors (i.e. 0, −1, and 1). Alternatively, if the user wanted to capture reads that overlap exactly with annotated miRNAs, an exact overlap could be specified (Overlap = Exact). Regardless of how the rules are defined, the counts for each miRNA-rule pair will be listed as separate features in the counts table.</p>
      <p><bold>Promoter-derived small RNAs:</bold> Small RNAs are often produced from promoter regions of coding genes (<xref rid="vbad065-B12" ref-type="bibr">Kasschau <italic toggle="yes">et al.</italic>, 2007</xref>; <xref rid="vbad065-B25" ref-type="bibr">Zamudio <italic toggle="yes">et al.</italic>, 2014</xref>). To capture small RNA reads derived from promoter regions, which are often imprecisely annotated, a user could first define a selection rule to capture reads from annotated gene bodies (e.g. Overlap = Nested, 0, 0; Hierarchy = 1). Then in a second rule, the user could specify nested overlap within a region shifted by some number of nucleotides upstream of gene bodies and assign it a higher hierarchy value (e.g. Overlap = Nested, −1000, 0; Hierarchy = 2). The first rule would capture all reads nested within gene bodies, whereas the second rule would capture reads not aligned to gene bodies in the first rule (because of its hierarchy value) but nested within some number of nucleotides upstream (1000 in this example). Due to variability in promoter lengths, the user could specify any number of distinct bins upstream of the transcribed region to provide greater resolution.</p>
      <p><bold>Nematode 22G- and 26G-RNAs:</bold> In <italic toggle="yes">Caenorhabditis elegans</italic> and other nematodes, many genes produce two classes of small RNAs with distinct genetic requirements, one of which is characterized by sequence lengths of ∼22-nt (22G-RNAs) and the other by ∼26-nt species (26G-RNAs). Both classes are comprised primarily of sequences with a 5′G that are produced antisense to their transcripts of origin (<xref rid="vbad065-B5" ref-type="bibr">Billi <italic toggle="yes">et al.</italic>, 2014</xref>). These two classes can be distinguished with tiny-count by defining two selection rules, one that captures reads with length 22-nt (Length = 22) and one that captures reads with length 26-nt (Length = 26), and both of which include only 5′G-containing antisense reads (5′ nt = G; Strand = Antisense). There is no need to distinguish the hierarchy in this example because reads can only match one rule or the other due to the length restrictions. Because of variation in processing, the lengths and 5′ nt could be assigned a more permissive set of values to capture additional reads, although this would come at the expense of categorical resolution.</p>
    </sec>
    <sec>
      <title>2.4 The tinyRNA workflow</title>
      <p>tiny-count can be run as a stand-alone program or as part of the tinyRNA small RNA data analysis workflow (<xref rid="vbad065-F2" ref-type="fig">Fig. 2A</xref>). When running tinyRNA, execution begins with the automated generation of a workflow in Common Workflow Language (CWL) (<xref rid="vbad065-B7" ref-type="bibr">Crusoe <italic toggle="yes">et al.</italic>, 2022</xref>). CWL is portable, scalable across different computing resources, and, like the tinyRNA project, its development is community driven. Preprocessing of FASTQ files, including adapter trimming and quality filtering, is performed with fastp (<xref rid="vbad065-B6" ref-type="bibr">Chen <italic toggle="yes">et al.</italic>, 2018</xref>). Unique sequences are counted and collapsed by the tinyRNA collapser tool, tiny-collapse, substantially reducing the resource demands of genomic alignment and feature counting. tiny-collapse can also trim the degenerate bases often included in the adapter sequences used in library preparation. Collapsed reads are aligned to a reference genome using Bowtie allowing 0–3 mismatches (default = 0, specified within the run configuration file) (<xref rid="vbad065-B15" ref-type="bibr">Langmead <italic toggle="yes">et al.</italic>, 2009</xref>). tiny-count is then used for read quantification, as described above. If the data contain biological replicates, differential expression analysis is automatically performed by tiny-deseq, a wrapper around DESeq2 (<xref rid="vbad065-B18" ref-type="bibr">Love <italic toggle="yes">et al.</italic>, 2014</xref>), using the counts tables generated by tiny-count. Finally, the outputs of tiny-count and tiny-deseq are used to produce publication-ready plots with the tinyRNA plotter tool, tiny-plot.</p>
      <fig position="float" id="vbad065-F2">
        <label>Fig. 2.</label>
        <caption>
          <p>The tinyRNA workflow. (<bold>A</bold>) tinyRNA flowchart. A selection of graphical outputs from a human miRNA analysis (<xref rid="vbad065-B21" ref-type="bibr">Shi <italic toggle="yes">et al.</italic>, 2020</xref>) (<bold>B</bold>), and a <italic toggle="yes">C. elegans</italic> total small RNA analysis (<xref rid="vbad065-B19" ref-type="bibr">Reed <italic toggle="yes">et al.</italic>, 2020</xref>) (<bold>C</bold> and <bold>D</bold>). Note that some post-run editing of the plots was done due to space constraints. The outputs of each tinyRNA run, including quality reports, processed data, mapping and assignment statistics, counts tables, size plots, class charts and a variety of scatter plots, are placed in a timestamped directory with full run documentation</p>
        </caption>
        <graphic xlink:href="vbad065f2" position="float"/>
      </fig>
      <p>tinyRNA provides a simple command-line-based solution for integrating precision classification and analysis of short RNAs into a general automated data analysis pipeline. To the best of our knowledge, tinyRNA adds a higher degree of precision and user control when processing, counting, and classifying reads than other software suites. However, tinyRNA lacks the specialized functionality found in some tools, such as integration of different data types, querying of public data repositories, and automated classification of small RNAs (<xref rid="vbad065-B11" ref-type="bibr">Han <italic toggle="yes">et al.</italic>, 2015</xref>; <xref rid="vbad065-B16" ref-type="bibr">Li <italic toggle="yes">et al.</italic>, 2020</xref>; <xref rid="vbad065-B20" ref-type="bibr">Rueda <italic toggle="yes">et al.</italic>, 2015</xref>; <xref rid="vbad065-B22" ref-type="bibr">Stocks <italic toggle="yes">et al.</italic>, 2018</xref>; <xref rid="vbad065-B24" ref-type="bibr">Wu <italic toggle="yes">et al.</italic>, 2017</xref>). With tinyRNA, users must provide all reference data for their analysis. This approach allows users to use their preferred reference sequences and to analyze any set of features regardless of availability in a publicly accessible database. It also avoids challenges associated with querying online databases from some servers or when working offline. Care should be taken by the user to ensure that reference data is from a reliable and up-to-date source. This is particularly important for small RNAs, which are often absent or poorly annotated in GFFs distributed through non-specialized databases.</p>
      <p>Despite being a command-line tool, very little terminal software experience is necessary to run tinyRNA because input files and parameters are passed to the workflow via text-based configuration files. After preparing the input files, the entire tinyRNA workflow can be run with a single command, <italic toggle="yes"><monospace>tiny run --config run_config.yml</monospace></italic>. Alternatively, certain steps of the workflow, such as counting and plotting, can be repeated on a completed run if the user chooses to modify the parameters, such as the selection rules or plot appearance.</p>
      <p>We tested tiny-count and the tinyRNA workflow on human cell line datasets by quantifying miRNAs in control and ZSWIM8 knockout lines (<xref rid="vbad065-F2" ref-type="fig">Fig. 2B</xref>) (<xref rid="vbad065-B21" ref-type="bibr">Shi <italic toggle="yes">et al.</italic>, 2020</xref>). We also tested their ability to accurately quantify multiple classes of small RNAs in parallel using <italic toggle="yes">C. elegans</italic> germline tissue datasets from wild type and <italic toggle="yes">mut-16</italic> mutant animals (<xref rid="vbad065-F2" ref-type="fig">Fig. 2C and D</xref>) (<xref rid="vbad065-B19" ref-type="bibr">Reed <italic toggle="yes">et al.</italic>, 2020</xref>). In each of these tests, tinyRNA provided results that were consistent with the original published analyses but with greater resolution of affected features. For example, in the human dataset, tinyRNA identified several isomiRs that were upregulated in ZSWIM8 knockout cell lines that were not previously reported (<xref rid="vbad065-F2" ref-type="fig">Fig. 2B</xref>). In the <italic toggle="yes">C. elegans</italic> dataset, tinyRNA identified numerous unclassified siRNAs that were depleted in <italic toggle="yes">mut-16</italic> mutants and distinguished between affected 22G- and 26G-RNAs produced from the same genes (<xref rid="vbad065-F2" ref-type="fig">Fig. 2C</xref>).</p>
    </sec>
    <sec>
      <title>2.5 Performance</title>
      <p>To our knowledge, tiny-count is the only read counting program that combines hierarchical assignment of reads to user-defined categories, selection based on small RNA length and 5′ nt, 5′- or 3′-anchored alignments, and single nucleotide control over alignment overlap (<xref rid="vbad065-T1" ref-type="table">Table 1</xref>). Nor to our knowledge is the user-defined small RNA counting and classification scheme of tiny-count available in small RNA pipeline software other than tinyRNA. tiny-count’s unique features enable the highest level of accuracy in counting and classifying small RNAs. Because of tiny-count’s hierarchical read assignment strategy, data does not have to be prefiltered or sorted before counting, and multiple classes of small RNAs can be analyzed in parallel. tiny-count is faster than HTSeq-count, but it is slower than featureCounts, which is an exceptionally fast general purpose counting program that is not readily configurable for precision counting of diverse small RNA classes (<xref rid="vbad065-T1" ref-type="table">Table 1</xref>) (<xref rid="vbad065-B2" ref-type="bibr">Anders <italic toggle="yes">et al.</italic>, 2015</xref>; <xref rid="vbad065-B17" ref-type="bibr">Liao <italic toggle="yes">et al.</italic>, 2014</xref>). Furthermore, tiny-count, but not HTSeq-count nor featureCounts, can extract read counts from collapsed SAM files (i.e. reads are collapsed and tallied within each sequence record to minimize the number of genome alignments required). When SAM files containing collapsed reads are used in tiny-count, its performance begins to approach that of featureCounts while allowing for quantification of multiple classes in parallel (45.1 versus 2.4 s) (<xref rid="vbad065-T1" ref-type="table">Table 1</xref>). Currently, tiny-count can only accommodate SAM files containing collapsed read data if the reads were collapsed with FASTX-Toolkit, tiny-collapse, or custom programs that embed the counts within read identifiers formatted similarly to either of these tools.</p>
      <table-wrap position="float" id="vbad065-T1">
        <label>Table 1.</label>
        <caption>
          <p>Comparison of read counting programs applied to small RNA-sequencing data</p>
        </caption>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="center" span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th rowspan="1" colspan="1">Read counting program</th>
              <th align="center" rowspan="1" colspan="1">Strand selectivity</th>
              <th align="center" rowspan="1" colspan="1">Length selectivity</th>
              <th align="center" rowspan="1" colspan="1">5′ nt selectivity</th>
              <th align="center" rowspan="1" colspan="1">Hierarchical assignment</th>
              <th align="center" rowspan="1" colspan="1">5′ or 3′ anchoring<xref rid="tblfn1" ref-type="table-fn"><sup>a</sup></xref></th>
              <th align="center" rowspan="1" colspan="1">Runtime<xref rid="tblfn2" ref-type="table-fn"><sup>b</sup></xref></th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">HTSeq-count</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">No</td>
              <td rowspan="1" colspan="1">No</td>
              <td rowspan="1" colspan="1">No</td>
              <td rowspan="1" colspan="1">No</td>
              <td rowspan="1" colspan="1">12 m 57 s</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">featureCounts</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">No</td>
              <td rowspan="1" colspan="1">No</td>
              <td rowspan="1" colspan="1">No</td>
              <td rowspan="1" colspan="1">2.4 s</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">tiny-count HTSeq StepVector</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">3 m 44 s</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">tiny-count Cython StepVector</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">2 m 35 s</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">tiny-count Cython StepVector with collapsed reads<xref rid="tblfn3" ref-type="table-fn"><sup>c</sup></xref></td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">45.1 s</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <fn id="tblfn1">
            <label>a</label>
            <p>Reads can be selected by 5′- or 3′-end alignment to 5′- or 3′-end of feature or shifted by any number of nucleotides.</p>
          </fn>
          <fn id="tblfn2">
            <label>b</label>
            <p>Approximately 13 million genome alignments and ∼50k features with an assignment rate of ∼65%. Benchmarks were taken on an HPE ProLiant server using one Xeon E5-4640V4 2.10 GHz CPU and allowing up to 256 GB memory usage.</p>
          </fn>
          <fn id="tblfn3">
            <label>c</label>
            <p>Reads collapsed prior to mapping. Tallied read counts are contained within SAM records and captured by tiny-count.</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
      <p>Most steps in tiny-count and tinyRNA run concurrently across libraries to minimize runtime. A user-defined global thread count is set for fastp and Bowtie to utilize multi-core computing resources. Performance-critical sections of tiny-count have been carefully written with respect to the resulting bytecode, or internal representation of the program in the CPython interpreter, to optimize execution. Additionally, we developed a custom implementation of the HTSeq StepVector written in Cython, a C language extension to Python, to address inefficiencies in iteration and intermediate object creation. The StepVector is a data structure which represents piecewise constant values at low resolution and is used by tiny-count to resolve features that overlap a given interval by at least one nucleotide. This data structure is heavily utilized during read assignment and because of our implementation, overall runtimes in tiny-count have been reduced by an average of ∼30% relative to an implementation using the HTSeq StepVector (<xref rid="vbad065-T1" ref-type="table">Table 1</xref>).</p>
    </sec>
    <sec>
      <title>2.6 Convenience and reproducibility</title>
      <p>tiny-count and the tinyRNA workflow are designed to be operable by users with minimal command-line computing skills and little or no small RNA data analysis experience. Configuration parameters for the individual tools within tinyRNA are contained within modules rather than residing in a single monolithic file. This allows the tinyRNA pipeline to be executed with a single command whose sole argument is the primary configuration file. Command-line parameters for each step in the tinyRNA pipeline can be modified by editing the primary configuration file. Thus, the user does not need to be familiar with the various tools used by tinyRNA, such as fastp and Bowtie, to utilize their extensive functionality. A standard small RNA analysis configuration that follows best practices in the field is provided as a YAML-formatted template. Upon tinyRNA run completion, copies of configuration files are placed in timestamped output directories that are organized into subdirectories by step to simplify documentation and collaboration. Most tinyRNA components are written in Python using object-oriented design patterns for transparency and easy modification by advanced users. The tinyRNA pipeline can be extended to include any number of additional steps by modifying the workflow CWL. These advanced modifications are permissible by the installation script for easy integration into a custom workflow.</p>
    </sec>
  </sec>
  <sec>
    <title>3 Summary</title>
    <p>tiny-count performs precision counting of small RNAs from high-throughput sequencing data. Utilizing tiny-count, the tinyRNA workflow enables end-to-end analysis of small RNA high-throughput sequencing data following best practices, producing complete run documentation for accuracy and reproducibility. It is compatible with data from any species containing reference sequences for the genome or small RNAs of interest. tiny-count and tinyRNA can accommodate relatively simple data analyses, such as miRNA expression in mammalian cell lines, to complex analyses of multiple classes of small RNAs from whole organisms, such as <italic toggle="yes">Arabidopsis</italic>, <italic toggle="yes">Drosophila</italic>, and <italic toggle="yes">C. elegans.</italic></p>
  </sec>
</body>
<back>
  <ack id="ack1">
    <title>Acknowledgements</title>
    <p>Thanks to the Montgomery lab and the small RNA community for comments and suggestions.</p>
  </ack>
  <sec>
    <title>Funding</title>
    <p>This work was supported by the National Institutes of Health [R35GM119775 to T.A.M.].</p>
    <p><italic toggle="yes">Conflict of Interest</italic>: none declared.</p>
  </sec>
  <sec sec-type="data-availability">
    <title>Data availability</title>
    <p>There are no new data associated with this article.</p>
  </sec>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="vbad065-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Aalto</surname><given-names>A.P.</given-names></string-name>, <string-name><surname>Pasquinelli</surname><given-names>A.E.</given-names></string-name></person-group> (<year>2012</year>) <article-title>Small non-coding RNAs mount a silent revolution in gene expression</article-title>. <source>Curr. Opin. Cell Biol</source>., <volume>24</volume>, <fpage>333</fpage>–<lpage>340</lpage>.<pub-id pub-id-type="pmid">22464106</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Anders</surname><given-names>S.</given-names></string-name></person-group><etal>et al</etal> (<year>2015</year>) <article-title>HTSeq–a python framework to work with high-throughput sequencing data</article-title>. <source>Bioinformatics</source>, <volume>31</volume>, <fpage>166</fpage>–<lpage>169</lpage>.<pub-id pub-id-type="pmid">25260700</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bartel</surname><given-names>D.P.</given-names></string-name></person-group> (<year>2009</year>) <article-title>MicroRNAs: target recognition and regulatory functions</article-title>. <source>Cell</source>, <volume>136</volume>, <fpage>215</fpage>–<lpage>233</lpage>.<pub-id pub-id-type="pmid">19167326</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bartel</surname><given-names>D.P.</given-names></string-name></person-group> (<year>2018</year>) <article-title>Metazoan microRNAs</article-title>. <source>Cell</source>, <volume>173</volume>, <fpage>20</fpage>–<lpage>51</lpage>.<pub-id pub-id-type="pmid">29570994</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Billi</surname><given-names>A.C.</given-names></string-name></person-group><etal>et al</etal> (<year>2014</year>) <article-title>Endogenous RNAi pathways in <italic toggle="yes">C. elegans</italic></article-title>. <source>WormBook</source>, <fpage>1</fpage>–<lpage>49</lpage>. <pub-id pub-id-type="doi">10.1895/wormbook.1.170.1</pub-id>.</mixed-citation>
    </ref>
    <ref id="vbad065-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chen</surname><given-names>S.</given-names></string-name></person-group><etal>et al</etal> (<year>2018</year>) <article-title>fastp: an ultra-fast all-in-one FASTQ preprocessor</article-title>. <source>Bioinformatics</source>, <volume>34</volume>, <fpage>i884</fpage>–<lpage>i890</lpage>.<pub-id pub-id-type="pmid">30423086</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Crusoe</surname><given-names>M.R.</given-names></string-name></person-group><etal>et al</etal> (<year>2022</year>) <article-title>Methods included: standardizing computational reuse and portability with the common workflow language</article-title>. <source>Commun. ACM</source>, <volume>65</volume>, <fpage>54</fpage>–<lpage>63</lpage>.</mixed-citation>
    </ref>
    <ref id="vbad065-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Das</surname><given-names>P.P.</given-names></string-name></person-group><etal>et al</etal> (<year>2008</year>) <article-title>Piwi and piRNAs act upstream of an endogenous siRNA pathway to suppress Tc3 transposon mobility in the <italic toggle="yes">Caenorhabditis elegans</italic> germline</article-title>. <source>Mol. Cell</source>., <volume>31</volume>, <fpage>79</fpage>–<lpage>90</lpage>.<pub-id pub-id-type="pmid">18571451</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Farazi</surname><given-names>T.A.</given-names></string-name></person-group><etal>et al</etal> (<year>2008</year>) <article-title>The growing catalog of small RNAs and their association with distinct Argonaute/Piwi family members</article-title>. <source>Development</source>, <volume>135</volume>, <fpage>1201</fpage>–<lpage>1214</lpage>.<pub-id pub-id-type="pmid">18287206</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ghildiyal</surname><given-names>M.</given-names></string-name>, <string-name><surname>Zamore</surname><given-names>P.D.</given-names></string-name></person-group> (<year>2009</year>) <article-title>Small silencing RNAs: an expanding universe</article-title>. <source>Nat. Rev. Genet</source>., <volume>10</volume>, <fpage>94</fpage>–<lpage>108</lpage>.<pub-id pub-id-type="pmid">19148191</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Han</surname><given-names>B.W.</given-names></string-name></person-group><etal>et al</etal> (<year>2015</year>) <article-title>piPipes: a set of pipelines for piRNA and transposon analysis via small RNA-seq, RNA-seq, degradome- and CAGE-seq, ChIP-seq and genomic DNA sequencing</article-title>. <source>Bioinformatics</source>, <volume>31</volume>, <fpage>593</fpage>–<lpage>595</lpage>.<pub-id pub-id-type="pmid">25342065</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kasschau</surname><given-names>K.D.</given-names></string-name></person-group><etal>et al</etal> (<year>2007</year>) <article-title>Genome-wide profiling and analysis of <italic toggle="yes">Arabidopsis</italic> siRNAs</article-title>. <source>PLoS Biol</source>., <volume>5</volume>, <fpage>e57</fpage>.<pub-id pub-id-type="pmid">17298187</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kawamura</surname><given-names>Y.</given-names></string-name></person-group><etal>et al</etal> (<year>2008</year>) <article-title>Drosophila endogenous small RNAs bind to Argonaute 2 in somatic cells</article-title>. <source>Nature</source>, <volume>453</volume>, <fpage>793</fpage>–<lpage>797</lpage>.<pub-id pub-id-type="pmid">18463636</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lambert</surname><given-names>M.</given-names></string-name></person-group><etal>et al</etal> (<year>2019</year>) <article-title>Small non-coding RNAs derived from eukaryotic ribosomal RNA</article-title>. <source>ncRNA</source>, <volume>5</volume>, <fpage>16</fpage>.<pub-id pub-id-type="pmid">30720712</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Langmead</surname><given-names>B.</given-names></string-name></person-group><etal>et al</etal> (<year>2009</year>) <article-title>Ultrafast and memory-efficient alignment of short DNA sequences to the human genome</article-title>. <source>Genome Biol</source>., <volume>10</volume>, <fpage>R25</fpage>.<pub-id pub-id-type="pmid">19261174</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Li</surname><given-names>J.</given-names></string-name></person-group><etal>et al</etal> (<year>2020</year>) <article-title>COMPSRA: a COMprehensive platform for small RNA-Seq data analysis</article-title>. <source>Sci. Rep</source>., <volume>10</volume>, <fpage>4552</fpage>.<pub-id pub-id-type="pmid">32165660</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Liao</surname><given-names>Y.</given-names></string-name></person-group><etal>et al</etal> (<year>2014</year>) <article-title>featureCounts: an efficient general purpose program for assigning sequence reads to genomic features</article-title>. <source>Bioinformatics</source>, <volume>30</volume>, <fpage>923</fpage>–<lpage>930</lpage>.<pub-id pub-id-type="pmid">24227677</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Love</surname><given-names>M.I.</given-names></string-name></person-group><etal>et al</etal> (<year>2014</year>) <article-title>Moderated estimation of fold change and dispersion for RNA-seq data with DESeq2</article-title>. <source>Genome Biol</source>., <volume>15</volume>, <fpage>550</fpage>.<pub-id pub-id-type="pmid">25516281</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Reed</surname><given-names>K.J.</given-names></string-name></person-group><etal>et al</etal> (<year>2020</year>) <article-title>Widespread roles for piRNAs and WAGO-class siRNAs in shaping the germline transcriptome of <italic toggle="yes">Caenorhabditis elegans</italic></article-title>. <source>Nucleic Acids Res</source>., <volume>48</volume>, <fpage>1811</fpage>–<lpage>1827</lpage>.<pub-id pub-id-type="pmid">31872227</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Rueda</surname><given-names>A.</given-names></string-name></person-group><etal>et al</etal> (<year>2015</year>) <article-title>sRNAtoolbox: an integrated collection of small RNA research tools</article-title>. <source>Nucleic Acids Res</source>., <volume>43</volume>, <fpage>W467</fpage>–<lpage>W473</lpage>.<pub-id pub-id-type="pmid">26019179</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Shi</surname><given-names>C.Y.</given-names></string-name></person-group><etal>et al</etal> (<year>2020</year>) <article-title>The ZSWIM8 ubiquitin ligase mediates target-directed microRNA degradation</article-title>. <source>Science</source>, <volume>370</volume>, <fpage>1</fpage>–<lpage>10</lpage>.</mixed-citation>
    </ref>
    <ref id="vbad065-B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Stocks</surname><given-names>M.B.</given-names></string-name></person-group><etal>et al</etal> (<year>2018</year>) <article-title>The UEA sRNA Workbench (version 4.4): a comprehensive suite of tools for analyzing miRNAs and sRNAs</article-title>. <source>Bioinformatics</source>, <volume>34</volume>, <fpage>3382</fpage>–<lpage>3384</lpage>.<pub-id pub-id-type="pmid">29722807</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Veneziano</surname><given-names>D.</given-names></string-name></person-group><etal>et al</etal> (<year>2016</year>) <article-title>Noncoding RNA: current deep sequencing data analysis approaches and challenges</article-title>. <source>Hum. Mutat</source>., <volume>37</volume>, <fpage>1283</fpage>–<lpage>1298</lpage>.<pub-id pub-id-type="pmid">27516218</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wu</surname><given-names>X.</given-names></string-name></person-group><etal>et al</etal> (<year>2017</year>) <article-title>sRNAnalyzer-a flexible and customizable small RNA sequencing data analysis pipeline</article-title>. <source>Nucleic Acids Res</source>., <volume>45</volume>, <fpage>12140</fpage>–<lpage>12151</lpage>.<pub-id pub-id-type="pmid">29069500</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zamudio</surname><given-names>J.R.</given-names></string-name></person-group><etal>et al</etal> (<year>2014</year>) <article-title>Argonaute-bound small RNAs from promoter-proximal RNA polymerase II</article-title>. <source>Cell</source>, <volume>156</volume>, <fpage>920</fpage>–<lpage>934</lpage>.<pub-id pub-id-type="pmid">24581493</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinform Adv</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinform Adv</journal-id>
    <journal-id journal-id-type="publisher-id">bioadv</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics Advances</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2635-0041</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10243934</article-id>
    <article-id pub-id-type="doi">10.1093/bioadv/vbad065</article-id>
    <article-id pub-id-type="publisher-id">vbad065</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Application Note</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Sequence Analysis</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>tiny-count: a counting tool for hierarchical classification and quantification of small RNA-seq reads with single-nucleotide precision</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Tate</surname>
          <given-names>Alex J</given-names>
        </name>
        <aff><institution>Department of Biology, Colorado State University</institution>, Fort Collins, CO 80523, <country country="US">USA</country></aff>
        <xref rid="vbad065-FM1" ref-type="author-notes"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Brown</surname>
          <given-names>Kristen C</given-names>
        </name>
        <aff><institution>Department of Biology, Colorado State University</institution>, Fort Collins, CO 80523, <country country="US">USA</country></aff>
        <aff><institution>Cell and Molecular Biology Program, Colorado State University</institution>, Fort Collins, CO 80523, <country country="US">USA</country></aff>
        <xref rid="vbad065-FM1" ref-type="author-notes"/>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-7857-3253</contrib-id>
        <name>
          <surname>Montgomery</surname>
          <given-names>Taiowa A</given-names>
        </name>
        <aff><institution>Department of Biology, Colorado State University</institution>, Fort Collins, CO 80523, <country country="US">USA</country></aff>
        <aff><institution>Cell and Molecular Biology Program, Colorado State University</institution>, Fort Collins, CO 80523, <country country="US">USA</country></aff>
        <xref rid="vbad065-cor1" ref-type="corresp"/>
        <!--tai.montgomery@colostate.edu-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Lengauer</surname>
          <given-names>Thomas</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="vbad065-cor1">To whom correspondence should be addressed. <email>tai.montgomery@colostate.edu</email>.</corresp>
      <fn id="vbad065-FM1">
        <p>The authors wish it to be known that, in their opinion, Alex J Tate and Kristen C Brown authors should be regarded as Joint First Authors.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="collection">
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2023-05-18">
      <day>18</day>
      <month>5</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>18</day>
      <month>5</month>
      <year>2023</year>
    </pub-date>
    <volume>3</volume>
    <issue>1</issue>
    <elocation-id>vbad065</elocation-id>
    <history>
      <date date-type="received">
        <day>26</day>
        <month>8</month>
        <year>2022</year>
      </date>
      <date date-type="rev-recd">
        <day>03</day>
        <month>5</month>
        <year>2023</year>
      </date>
      <date date-type="editorial-decision">
        <day>09</day>
        <month>5</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>17</day>
        <month>5</month>
        <year>2023</year>
      </date>
      <date date-type="corrected-typeset">
        <day>05</day>
        <month>6</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2023. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2023</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="vbad065.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Summary</title>
        <p>tiny-count is a highly flexible counting tool that allows for hierarchical classification and quantification of small RNA reads from high-throughput sequencing data. Selection rules can be used to filter reads by 5′ nucleotide, length, position of alignments in relation to reference features, and by the number of mismatches to reference sequences. tiny-count can quantify reads aligned to a genome or directly to small RNA or transcript sequences. With tiny-count, users can quantify a single class of small RNAs or multiple classes in parallel. tiny-count can resolve distinct classes of small RNAs, for example, piRNAs and siRNAs, produced from the same locus. It can distinguish small RNA variants, such as miRNAs and isomiRs, with single-nucleotide precision. tRNA, rRNA, and other RNA fragments can also be quantified. tiny-count can be run alone or as part of tinyRNA, a workflow that provides a basic all-in-one command line-based solution for small RNA-seq data analysis, with documentation and statistics generated at each step for accurate and reproducible results.</p>
      </sec>
      <sec id="s2">
        <title>Availability and implementation</title>
        <p>tiny-count and other tinyRNA tools are implemented in Python, C++, Cython, and R, and the workflow is coordinated with CWL. tiny-count and tinyRNA are free and open-source software distributed under the GPLv3 license. tiny-count can be installed via Bioconda (<ext-link xlink:href="https://anaconda.org/bioconda/tiny-count" ext-link-type="uri">https://anaconda.org/bioconda/tiny-count</ext-link>) and both tiny-count and tinyRNA documentation and software downloads are available at <ext-link xlink:href="https://github.com/MontgomeryLab/tinyRNA" ext-link-type="uri">https://github.com/MontgomeryLab/tinyRNA</ext-link>. Reference data, including genome and feature information, for certain species can be found at <ext-link xlink:href="https://www.MontgomeryLab.org" ext-link-type="uri">https://www.MontgomeryLab.org</ext-link>.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>National Institutes of Health</institution>
            <institution-id institution-id-type="DOI">10.13039/100000002</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>R35GM119775</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="6"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Small RNAs interact with larger RNAs through base-pair interactions to direct mRNA decay or translational repression, or to promote RNA, DNA, or histone modifications. There is tremendous diversity among small RNAs both between and within species. The canonical classes of small RNAs—microRNAs (miRNAs), piwi-interacting RNAs (piRNAs), and small interfering RNAs (siRNAs)—are unified by their association with Argonaute/Piwi proteins (<xref rid="vbad065-B10" ref-type="bibr">Ghildiyal and Zamore, 2009</xref>). These classes of small RNAs can be distinguished by their genetic requirements, length, 5′ nucleotide (nt), and precursor structure (<xref rid="vbad065-B9" ref-type="bibr">Farazi <italic toggle="yes">et al.</italic>, 2008</xref>). Numerous other classes of short RNAs, such as tRNA and rRNA fragments, also play diverse roles in gene regulation (<xref rid="vbad065-B1" ref-type="bibr">Aalto and Pasquinelli, 2012</xref>).</p>
    <p>High-throughput sequencing is a widely used tool for discovery and analysis of small RNAs (<xref rid="vbad065-B23" ref-type="bibr">Veneziano <italic toggle="yes">et al.</italic>, 2016</xref>). The diversity and complexity of small RNA pathways present several computational challenges when classifying and analyzing the reads generated by high-throughput sequencing. For example, small RNA libraries are often contaminated with decay intermediates of longer RNAs, such as rRNAs and mRNAs, that can also produce functional small RNAs (<xref rid="vbad065-B14" ref-type="bibr">Lambert <italic toggle="yes">et al.</italic>, 2019</xref>). These contaminants can be difficult to distinguish from authentic small RNAs produced from the same features. Additionally, differential or imprecise processing can generate functionally distinct small RNAs, such as miRNA variants called isomiRs, that differ by as little as 1 nucleotide (<xref rid="vbad065-B4" ref-type="bibr">Bartel, 2018</xref>). Further complicating data analysis, distinct classes of small RNAs, such as piRNAs and siRNAs, can be produced from the same locus (<xref rid="vbad065-B8" ref-type="bibr">Das <italic toggle="yes">et al.</italic>, 2008</xref>; <xref rid="vbad065-B13" ref-type="bibr">Kawamura <italic toggle="yes">et al.</italic>, 2008</xref>). The tinyRNA project addresses these challenges with tiny-count, a single-nucleotide precision counting tool designed to quantify small RNAs and other short RNAs from high-throughput sequencing data.</p>
  </sec>
  <sec>
    <title>2 Methods and results</title>
    <sec>
      <title>2.1 Overview</title>
      <p>tiny-count evaluates sequence alignments for feature assignment utilizing the genomic array and GFF reader from HTSeq (<xref rid="vbad065-B2" ref-type="bibr">Anders <italic toggle="yes">et al.</italic>, 2015</xref>). User-defined selection rules can be used to classify reads based on their sequence attributes, which include 5′ nt and length, as well as their relationship to features of interest, such as strandedness, positional overlap, and number of mismatches. Selection rules can require exact, partial, nested, or anchored alignment of reads to features of interest. Alignment can be relative to the annotated 5′ or 3′ ends of features of interest or shifted by any number of nucleotides specified by the user. Each selection rule must specify a hierarchy value, and rule sets with heterogeneous hierarchy values can be used to preferentially assign reads to one class over another. Reads can also be subclassified for individual features based on these rules. tiny-count will distinguish and quantify reads for every rule simultaneously while preserving information for each feature-rule combination for subsequent analysis. Hence, the user can perform downstream analysis treating subsets of small RNAs produced from the same locus as distinct features.</p>
      <p>For each sequence, counts are optionally normalized by the number of genomic alignments and/or by the number of features the sequence matched. tiny-count can also normalize by library size using the common small RNA normalization method, reads per million mapped reads (rpm). Alternatively, users can specify a custom normalization factor for each library, thereby enabling the use of spike-in counts or other metrics for normalization. tiny-count produces a CSV-formatted table with counts for each feature that are optionally subclassified based on the user-defined selection rules. Additionally, the total counts for each rule or class of small RNAs are reported, as are summary statistics and 5′ nt and length distribution tables.</p>
      <p>tiny-count can be installed via Bioconda or downloaded from GitHub. To run tiny-count as a stand-alone program, the user provides SAM files with read alignment information for each library. The user can provide a GFF file containing positional information for features of interest. In the absence of a GFF file, each unique reference sequence is treated as a distinct feature. This allows for analysis of data from alignments directly to features of interest rather than to a genome. Read selection rules and sample information are specified in CSV files, and paths to these files and other run information are specified within a YAML-formatted configuration file. Alternatively, tiny-count can be run as part of the tinyRNA end-to-end data analysis workflow described below.</p>
    </sec>
    <sec>
      <title>2.2 Precision counting</title>
      <p>tiny-count provides precise control over the attribution of reads at alignment loci with user-defined selection rules. Any number of selection rules can be defined to categorize reads. The selection process resolves ambiguities in feature assignment at loci with multiple overlapping features and the associated loss of counting precision. It also allows for reads from distinct classes of small RNAs produced from the same feature or genomic interval to be treated separately during counting and analysis. Feature selection and read matching occurs in three stages (<xref rid="vbad065-F1" ref-type="fig">Fig. 1</xref>). In Stage 1, features of interest are retrieved from GFF-formatted input files based on user-specified attributes, including source (listed in column 2 of the GFF), type (listed in column 3 of the GFF), and annotation (listed in column 9 of the GFF). If reads are counted from alignments directly to sequences of interest, rather than to a genome containing feature intervals of interest, then both the GFF file and Stage 1 can be omitted.</p>
      <fig position="float" id="vbad065-F1">
        <label>Fig. 1.</label>
        <caption>
          <p>The tiny-count selection scheme. Small RNA read and alignment attributes are specified within a CSV-formatted file in which each row corresponds to a selection rule. The Stage 1 selection attributes reflect the variety of sources used for small RNA annotation and classification. Feature selection and read filtering occurs in three stages. Stage 1: information about features specified by the user is extracted from a GFF file. If a GFF file is not provided, this step is omitted. Stage 2: features are selected based on their overlap with read alignments and edit distance (mismatches) to the reference sequence. Stage 3: reads are assigned to features passing Stages 1 and 2 selection based on their sequence attributes, such as 5′ nt and length, as well as their strand relationship to the feature. Reads meeting all selection criteria for a specific rule are then assigned to features. If there is more than one matching feature, reads are evenly distributed or preferentially assigned to one over the others based on user-defined hierarchy values. In Example 1, a hypothetical siRNA read is incompatible with classification as an rRNA as defined in Rule 1 because of strand incompatibility but is compatible with classification as an siRNA as defined in Rule 7. Conversely, in Example 2, a hypothetical rRNA fragment read is compatible with both Rules 1 and 7 but is assigned to Rule 1 because of its lower hierarchy value</p>
        </caption>
        <graphic xlink:href="vbad065f1" position="float"/>
      </fig>
      <p>During Stage 2, reads are assessed for their positional overlap with the features that were selected in Stage 1. If a GFF file is not provided, reads are instead evaluated for their overlap with each reference sequence, as specified in the header section of the SAM-formatted alignment file. Selection rules can specify partial, nested, or exact overlap with features of interest, with the option to shift the annotated coordinates by any number of nucleotides in the 5′ or 3′ direction. Additionally, features can be selected based on whether their 5′ or 3′ ends are anchored to the alignment or to a user-defined position relative to the alignment. The number of mismatches relative to features of interests can also be specified if such mismatches were permissible at the alignment step. This can be a range or a single value, which can be used to capture sequence variants. Features passing the selection criteria in Stage 2 are sorted by user-defined values for hierarchical selection in Stage 3.</p>
      <p>In Stage 3, features are matched with reads based on each read’s attributes, such as its 5′ nt, length, and strandedness relative to the feature. Reads are assigned at Stage 3 to matching features with the lowest hierarchy value that meet all selection criteria and are thus excluded from any other overlapping features at the alignment locus with higher hierarchy values. Features which pass the selection process are assigned all counts or a normalized portion of the counts associated with the alignment sequence. By default, a sequence with <inline-formula id="IE1"><mml:math id="IM1" display="inline" overflow="scroll"><mml:mi>n</mml:mi></mml:math></inline-formula> read counts and <inline-formula id="IE2"><mml:math id="IM2" display="inline" overflow="scroll"><mml:mi>m</mml:mi></mml:math></inline-formula> genomic alignments is assigned <inline-formula id="IE3"><mml:math id="IM3" display="inline" overflow="scroll"><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mo>/</mml:mo><mml:mi>m</mml:mi><mml:mo>)</mml:mo><mml:mo>/</mml:mo><mml:mi>k</mml:mi></mml:math></inline-formula> reads, where <inline-formula id="IE4"><mml:math id="IM4" display="inline" overflow="scroll"><mml:mi>k</mml:mi></mml:math></inline-formula> is the number of features that pass selection at the locus. The <inline-formula id="IE5"><mml:math id="IM5" display="inline" overflow="scroll"><mml:mi>m</mml:mi></mml:math></inline-formula> and <inline-formula id="IE6"><mml:math id="IM6" display="inline" overflow="scroll"><mml:mi>k</mml:mi></mml:math></inline-formula> normalization factors are both optional.</p>
      <p>The hierarchical selection scheme utilized by tiny-count allows users to assign reads preferentially or uniformly to features of interest. For example, it is often necessary to filter out reads that align to structural RNAs. Using tiny-count, reads that align to rRNAs or other abundant structural RNAs can be excluded from assignment to other features by giving the structural RNA classes lower hierarchy values (closer to or equal to 1). In this approach, counts from structural RNAs are excluded from assignment to other classes of small RNAs and are reported separately, which can provide an important indicator of RNA integrity or could point to biological relevance of such reads (<xref rid="vbad065-B14" ref-type="bibr">Lambert <italic toggle="yes">et al.</italic>, 2019</xref>).</p>
    </sec>
    <sec>
      <title>2.3 Applications</title>
      <p>tiny-count is designed to provide the highest level of user control over read selection and classification when quantifying high-throughput sequencing data. A few possible applications are described below to highlight potential usage of tiny-count, although we anticipate its functionality extending far beyond these examples.</p>
      <p><bold>miRNAs and isomiRs:</bold> The functionality of tiny-count can be illustrated by considering miRNAs, for which some variation at the 3′ end is often permissible but variation at the 5′ end would shift the seed sequence and alter target recognition (<xref rid="vbad065-B3" ref-type="bibr">Bartel, 2009</xref>). Pooling counts for all sequences that overlap with a miRNA locus can produce inaccurate results, whereas limiting the analysis to only reads with exact matches to annotated miRNAs may undercount relevant data. We commonly use a rule for miRNAs that captures reads with nested overlap within annotated miRNA loci. We require an exact match with the annotated 5′ ends of miRNAs and allow extensions up to 4 nt beyond the annotated 3′ ends to account for variation in 3′ end processing (Overlap = 5′ anchored, 0, 4; see Selection Rules example in <xref rid="vbad065-F1" ref-type="fig">Fig. 1</xref>). miRNAs are typically 20–24 nt long and we often expand this range to account for outliers (Length = 16–28). There is typically no reason to restrict the 5′ nt because this will be dictated by the annotated 5′ ends of the miRNAs (5′ nt = Any). To identify miRNA isoforms (isomiRs) for which the 5′ ends are shifted upstream by 1 nt, an additional rule could be added in which the overlap parameter is offset from the 5′ ends by −1 relative to the annotated coordinates (Overlap = 5′ anchored, −1, 4). Another rule could be defined to capture 5′ isoforms shifted downstream by 1 nt (Overlap = 5′ anchored, 1, 4) (<xref rid="vbad065-F1" ref-type="fig">Fig. 1</xref>). If desired, additional rules could be defined to distinguish other possible isomiRs, or a catch-all rule could be specified to capture all other partially overlapping reads (Overlap = Partial). By assigning a higher hierarchy value to this catch-all rule, only reads that are not assigned to the other miRNA rules would be counted. There is no need to distinguish the hierarchies of the other miRNA rules since they are mutually exclusive of each other due to distinct 5′ offsets of the overlap selectors (i.e. 0, −1, and 1). Alternatively, if the user wanted to capture reads that overlap exactly with annotated miRNAs, an exact overlap could be specified (Overlap = Exact). Regardless of how the rules are defined, the counts for each miRNA-rule pair will be listed as separate features in the counts table.</p>
      <p><bold>Promoter-derived small RNAs:</bold> Small RNAs are often produced from promoter regions of coding genes (<xref rid="vbad065-B12" ref-type="bibr">Kasschau <italic toggle="yes">et al.</italic>, 2007</xref>; <xref rid="vbad065-B25" ref-type="bibr">Zamudio <italic toggle="yes">et al.</italic>, 2014</xref>). To capture small RNA reads derived from promoter regions, which are often imprecisely annotated, a user could first define a selection rule to capture reads from annotated gene bodies (e.g. Overlap = Nested, 0, 0; Hierarchy = 1). Then in a second rule, the user could specify nested overlap within a region shifted by some number of nucleotides upstream of gene bodies and assign it a higher hierarchy value (e.g. Overlap = Nested, −1000, 0; Hierarchy = 2). The first rule would capture all reads nested within gene bodies, whereas the second rule would capture reads not aligned to gene bodies in the first rule (because of its hierarchy value) but nested within some number of nucleotides upstream (1000 in this example). Due to variability in promoter lengths, the user could specify any number of distinct bins upstream of the transcribed region to provide greater resolution.</p>
      <p><bold>Nematode 22G- and 26G-RNAs:</bold> In <italic toggle="yes">Caenorhabditis elegans</italic> and other nematodes, many genes produce two classes of small RNAs with distinct genetic requirements, one of which is characterized by sequence lengths of ∼22-nt (22G-RNAs) and the other by ∼26-nt species (26G-RNAs). Both classes are comprised primarily of sequences with a 5′G that are produced antisense to their transcripts of origin (<xref rid="vbad065-B5" ref-type="bibr">Billi <italic toggle="yes">et al.</italic>, 2014</xref>). These two classes can be distinguished with tiny-count by defining two selection rules, one that captures reads with length 22-nt (Length = 22) and one that captures reads with length 26-nt (Length = 26), and both of which include only 5′G-containing antisense reads (5′ nt = G; Strand = Antisense). There is no need to distinguish the hierarchy in this example because reads can only match one rule or the other due to the length restrictions. Because of variation in processing, the lengths and 5′ nt could be assigned a more permissive set of values to capture additional reads, although this would come at the expense of categorical resolution.</p>
    </sec>
    <sec>
      <title>2.4 The tinyRNA workflow</title>
      <p>tiny-count can be run as a stand-alone program or as part of the tinyRNA small RNA data analysis workflow (<xref rid="vbad065-F2" ref-type="fig">Fig. 2A</xref>). When running tinyRNA, execution begins with the automated generation of a workflow in Common Workflow Language (CWL) (<xref rid="vbad065-B7" ref-type="bibr">Crusoe <italic toggle="yes">et al.</italic>, 2022</xref>). CWL is portable, scalable across different computing resources, and, like the tinyRNA project, its development is community driven. Preprocessing of FASTQ files, including adapter trimming and quality filtering, is performed with fastp (<xref rid="vbad065-B6" ref-type="bibr">Chen <italic toggle="yes">et al.</italic>, 2018</xref>). Unique sequences are counted and collapsed by the tinyRNA collapser tool, tiny-collapse, substantially reducing the resource demands of genomic alignment and feature counting. tiny-collapse can also trim the degenerate bases often included in the adapter sequences used in library preparation. Collapsed reads are aligned to a reference genome using Bowtie allowing 0–3 mismatches (default = 0, specified within the run configuration file) (<xref rid="vbad065-B15" ref-type="bibr">Langmead <italic toggle="yes">et al.</italic>, 2009</xref>). tiny-count is then used for read quantification, as described above. If the data contain biological replicates, differential expression analysis is automatically performed by tiny-deseq, a wrapper around DESeq2 (<xref rid="vbad065-B18" ref-type="bibr">Love <italic toggle="yes">et al.</italic>, 2014</xref>), using the counts tables generated by tiny-count. Finally, the outputs of tiny-count and tiny-deseq are used to produce publication-ready plots with the tinyRNA plotter tool, tiny-plot.</p>
      <fig position="float" id="vbad065-F2">
        <label>Fig. 2.</label>
        <caption>
          <p>The tinyRNA workflow. (<bold>A</bold>) tinyRNA flowchart. A selection of graphical outputs from a human miRNA analysis (<xref rid="vbad065-B21" ref-type="bibr">Shi <italic toggle="yes">et al.</italic>, 2020</xref>) (<bold>B</bold>), and a <italic toggle="yes">C. elegans</italic> total small RNA analysis (<xref rid="vbad065-B19" ref-type="bibr">Reed <italic toggle="yes">et al.</italic>, 2020</xref>) (<bold>C</bold> and <bold>D</bold>). Note that some post-run editing of the plots was done due to space constraints. The outputs of each tinyRNA run, including quality reports, processed data, mapping and assignment statistics, counts tables, size plots, class charts and a variety of scatter plots, are placed in a timestamped directory with full run documentation</p>
        </caption>
        <graphic xlink:href="vbad065f2" position="float"/>
      </fig>
      <p>tinyRNA provides a simple command-line-based solution for integrating precision classification and analysis of short RNAs into a general automated data analysis pipeline. To the best of our knowledge, tinyRNA adds a higher degree of precision and user control when processing, counting, and classifying reads than other software suites. However, tinyRNA lacks the specialized functionality found in some tools, such as integration of different data types, querying of public data repositories, and automated classification of small RNAs (<xref rid="vbad065-B11" ref-type="bibr">Han <italic toggle="yes">et al.</italic>, 2015</xref>; <xref rid="vbad065-B16" ref-type="bibr">Li <italic toggle="yes">et al.</italic>, 2020</xref>; <xref rid="vbad065-B20" ref-type="bibr">Rueda <italic toggle="yes">et al.</italic>, 2015</xref>; <xref rid="vbad065-B22" ref-type="bibr">Stocks <italic toggle="yes">et al.</italic>, 2018</xref>; <xref rid="vbad065-B24" ref-type="bibr">Wu <italic toggle="yes">et al.</italic>, 2017</xref>). With tinyRNA, users must provide all reference data for their analysis. This approach allows users to use their preferred reference sequences and to analyze any set of features regardless of availability in a publicly accessible database. It also avoids challenges associated with querying online databases from some servers or when working offline. Care should be taken by the user to ensure that reference data is from a reliable and up-to-date source. This is particularly important for small RNAs, which are often absent or poorly annotated in GFFs distributed through non-specialized databases.</p>
      <p>Despite being a command-line tool, very little terminal software experience is necessary to run tinyRNA because input files and parameters are passed to the workflow via text-based configuration files. After preparing the input files, the entire tinyRNA workflow can be run with a single command, <italic toggle="yes"><monospace>tiny run --config run_config.yml</monospace></italic>. Alternatively, certain steps of the workflow, such as counting and plotting, can be repeated on a completed run if the user chooses to modify the parameters, such as the selection rules or plot appearance.</p>
      <p>We tested tiny-count and the tinyRNA workflow on human cell line datasets by quantifying miRNAs in control and ZSWIM8 knockout lines (<xref rid="vbad065-F2" ref-type="fig">Fig. 2B</xref>) (<xref rid="vbad065-B21" ref-type="bibr">Shi <italic toggle="yes">et al.</italic>, 2020</xref>). We also tested their ability to accurately quantify multiple classes of small RNAs in parallel using <italic toggle="yes">C. elegans</italic> germline tissue datasets from wild type and <italic toggle="yes">mut-16</italic> mutant animals (<xref rid="vbad065-F2" ref-type="fig">Fig. 2C and D</xref>) (<xref rid="vbad065-B19" ref-type="bibr">Reed <italic toggle="yes">et al.</italic>, 2020</xref>). In each of these tests, tinyRNA provided results that were consistent with the original published analyses but with greater resolution of affected features. For example, in the human dataset, tinyRNA identified several isomiRs that were upregulated in ZSWIM8 knockout cell lines that were not previously reported (<xref rid="vbad065-F2" ref-type="fig">Fig. 2B</xref>). In the <italic toggle="yes">C. elegans</italic> dataset, tinyRNA identified numerous unclassified siRNAs that were depleted in <italic toggle="yes">mut-16</italic> mutants and distinguished between affected 22G- and 26G-RNAs produced from the same genes (<xref rid="vbad065-F2" ref-type="fig">Fig. 2C</xref>).</p>
    </sec>
    <sec>
      <title>2.5 Performance</title>
      <p>To our knowledge, tiny-count is the only read counting program that combines hierarchical assignment of reads to user-defined categories, selection based on small RNA length and 5′ nt, 5′- or 3′-anchored alignments, and single nucleotide control over alignment overlap (<xref rid="vbad065-T1" ref-type="table">Table 1</xref>). Nor to our knowledge is the user-defined small RNA counting and classification scheme of tiny-count available in small RNA pipeline software other than tinyRNA. tiny-count’s unique features enable the highest level of accuracy in counting and classifying small RNAs. Because of tiny-count’s hierarchical read assignment strategy, data does not have to be prefiltered or sorted before counting, and multiple classes of small RNAs can be analyzed in parallel. tiny-count is faster than HTSeq-count, but it is slower than featureCounts, which is an exceptionally fast general purpose counting program that is not readily configurable for precision counting of diverse small RNA classes (<xref rid="vbad065-T1" ref-type="table">Table 1</xref>) (<xref rid="vbad065-B2" ref-type="bibr">Anders <italic toggle="yes">et al.</italic>, 2015</xref>; <xref rid="vbad065-B17" ref-type="bibr">Liao <italic toggle="yes">et al.</italic>, 2014</xref>). Furthermore, tiny-count, but not HTSeq-count nor featureCounts, can extract read counts from collapsed SAM files (i.e. reads are collapsed and tallied within each sequence record to minimize the number of genome alignments required). When SAM files containing collapsed reads are used in tiny-count, its performance begins to approach that of featureCounts while allowing for quantification of multiple classes in parallel (45.1 versus 2.4 s) (<xref rid="vbad065-T1" ref-type="table">Table 1</xref>). Currently, tiny-count can only accommodate SAM files containing collapsed read data if the reads were collapsed with FASTX-Toolkit, tiny-collapse, or custom programs that embed the counts within read identifiers formatted similarly to either of these tools.</p>
      <table-wrap position="float" id="vbad065-T1">
        <label>Table 1.</label>
        <caption>
          <p>Comparison of read counting programs applied to small RNA-sequencing data</p>
        </caption>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="center" span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th rowspan="1" colspan="1">Read counting program</th>
              <th align="center" rowspan="1" colspan="1">Strand selectivity</th>
              <th align="center" rowspan="1" colspan="1">Length selectivity</th>
              <th align="center" rowspan="1" colspan="1">5′ nt selectivity</th>
              <th align="center" rowspan="1" colspan="1">Hierarchical assignment</th>
              <th align="center" rowspan="1" colspan="1">5′ or 3′ anchoring<xref rid="tblfn1" ref-type="table-fn"><sup>a</sup></xref></th>
              <th align="center" rowspan="1" colspan="1">Runtime<xref rid="tblfn2" ref-type="table-fn"><sup>b</sup></xref></th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">HTSeq-count</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">No</td>
              <td rowspan="1" colspan="1">No</td>
              <td rowspan="1" colspan="1">No</td>
              <td rowspan="1" colspan="1">No</td>
              <td rowspan="1" colspan="1">12 m 57 s</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">featureCounts</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">No</td>
              <td rowspan="1" colspan="1">No</td>
              <td rowspan="1" colspan="1">No</td>
              <td rowspan="1" colspan="1">2.4 s</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">tiny-count HTSeq StepVector</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">3 m 44 s</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">tiny-count Cython StepVector</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">2 m 35 s</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">tiny-count Cython StepVector with collapsed reads<xref rid="tblfn3" ref-type="table-fn"><sup>c</sup></xref></td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">45.1 s</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <fn id="tblfn1">
            <label>a</label>
            <p>Reads can be selected by 5′- or 3′-end alignment to 5′- or 3′-end of feature or shifted by any number of nucleotides.</p>
          </fn>
          <fn id="tblfn2">
            <label>b</label>
            <p>Approximately 13 million genome alignments and ∼50k features with an assignment rate of ∼65%. Benchmarks were taken on an HPE ProLiant server using one Xeon E5-4640V4 2.10 GHz CPU and allowing up to 256 GB memory usage.</p>
          </fn>
          <fn id="tblfn3">
            <label>c</label>
            <p>Reads collapsed prior to mapping. Tallied read counts are contained within SAM records and captured by tiny-count.</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
      <p>Most steps in tiny-count and tinyRNA run concurrently across libraries to minimize runtime. A user-defined global thread count is set for fastp and Bowtie to utilize multi-core computing resources. Performance-critical sections of tiny-count have been carefully written with respect to the resulting bytecode, or internal representation of the program in the CPython interpreter, to optimize execution. Additionally, we developed a custom implementation of the HTSeq StepVector written in Cython, a C language extension to Python, to address inefficiencies in iteration and intermediate object creation. The StepVector is a data structure which represents piecewise constant values at low resolution and is used by tiny-count to resolve features that overlap a given interval by at least one nucleotide. This data structure is heavily utilized during read assignment and because of our implementation, overall runtimes in tiny-count have been reduced by an average of ∼30% relative to an implementation using the HTSeq StepVector (<xref rid="vbad065-T1" ref-type="table">Table 1</xref>).</p>
    </sec>
    <sec>
      <title>2.6 Convenience and reproducibility</title>
      <p>tiny-count and the tinyRNA workflow are designed to be operable by users with minimal command-line computing skills and little or no small RNA data analysis experience. Configuration parameters for the individual tools within tinyRNA are contained within modules rather than residing in a single monolithic file. This allows the tinyRNA pipeline to be executed with a single command whose sole argument is the primary configuration file. Command-line parameters for each step in the tinyRNA pipeline can be modified by editing the primary configuration file. Thus, the user does not need to be familiar with the various tools used by tinyRNA, such as fastp and Bowtie, to utilize their extensive functionality. A standard small RNA analysis configuration that follows best practices in the field is provided as a YAML-formatted template. Upon tinyRNA run completion, copies of configuration files are placed in timestamped output directories that are organized into subdirectories by step to simplify documentation and collaboration. Most tinyRNA components are written in Python using object-oriented design patterns for transparency and easy modification by advanced users. The tinyRNA pipeline can be extended to include any number of additional steps by modifying the workflow CWL. These advanced modifications are permissible by the installation script for easy integration into a custom workflow.</p>
    </sec>
  </sec>
  <sec>
    <title>3 Summary</title>
    <p>tiny-count performs precision counting of small RNAs from high-throughput sequencing data. Utilizing tiny-count, the tinyRNA workflow enables end-to-end analysis of small RNA high-throughput sequencing data following best practices, producing complete run documentation for accuracy and reproducibility. It is compatible with data from any species containing reference sequences for the genome or small RNAs of interest. tiny-count and tinyRNA can accommodate relatively simple data analyses, such as miRNA expression in mammalian cell lines, to complex analyses of multiple classes of small RNAs from whole organisms, such as <italic toggle="yes">Arabidopsis</italic>, <italic toggle="yes">Drosophila</italic>, and <italic toggle="yes">C. elegans.</italic></p>
  </sec>
</body>
<back>
  <ack id="ack1">
    <title>Acknowledgements</title>
    <p>Thanks to the Montgomery lab and the small RNA community for comments and suggestions.</p>
  </ack>
  <sec>
    <title>Funding</title>
    <p>This work was supported by the National Institutes of Health [R35GM119775 to T.A.M.].</p>
    <p><italic toggle="yes">Conflict of Interest</italic>: none declared.</p>
  </sec>
  <sec sec-type="data-availability">
    <title>Data availability</title>
    <p>There are no new data associated with this article.</p>
  </sec>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="vbad065-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Aalto</surname><given-names>A.P.</given-names></string-name>, <string-name><surname>Pasquinelli</surname><given-names>A.E.</given-names></string-name></person-group> (<year>2012</year>) <article-title>Small non-coding RNAs mount a silent revolution in gene expression</article-title>. <source>Curr. Opin. Cell Biol</source>., <volume>24</volume>, <fpage>333</fpage>–<lpage>340</lpage>.<pub-id pub-id-type="pmid">22464106</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Anders</surname><given-names>S.</given-names></string-name></person-group><etal>et al</etal> (<year>2015</year>) <article-title>HTSeq–a python framework to work with high-throughput sequencing data</article-title>. <source>Bioinformatics</source>, <volume>31</volume>, <fpage>166</fpage>–<lpage>169</lpage>.<pub-id pub-id-type="pmid">25260700</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bartel</surname><given-names>D.P.</given-names></string-name></person-group> (<year>2009</year>) <article-title>MicroRNAs: target recognition and regulatory functions</article-title>. <source>Cell</source>, <volume>136</volume>, <fpage>215</fpage>–<lpage>233</lpage>.<pub-id pub-id-type="pmid">19167326</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bartel</surname><given-names>D.P.</given-names></string-name></person-group> (<year>2018</year>) <article-title>Metazoan microRNAs</article-title>. <source>Cell</source>, <volume>173</volume>, <fpage>20</fpage>–<lpage>51</lpage>.<pub-id pub-id-type="pmid">29570994</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Billi</surname><given-names>A.C.</given-names></string-name></person-group><etal>et al</etal> (<year>2014</year>) <article-title>Endogenous RNAi pathways in <italic toggle="yes">C. elegans</italic></article-title>. <source>WormBook</source>, <fpage>1</fpage>–<lpage>49</lpage>. <pub-id pub-id-type="doi">10.1895/wormbook.1.170.1</pub-id>.</mixed-citation>
    </ref>
    <ref id="vbad065-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chen</surname><given-names>S.</given-names></string-name></person-group><etal>et al</etal> (<year>2018</year>) <article-title>fastp: an ultra-fast all-in-one FASTQ preprocessor</article-title>. <source>Bioinformatics</source>, <volume>34</volume>, <fpage>i884</fpage>–<lpage>i890</lpage>.<pub-id pub-id-type="pmid">30423086</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Crusoe</surname><given-names>M.R.</given-names></string-name></person-group><etal>et al</etal> (<year>2022</year>) <article-title>Methods included: standardizing computational reuse and portability with the common workflow language</article-title>. <source>Commun. ACM</source>, <volume>65</volume>, <fpage>54</fpage>–<lpage>63</lpage>.</mixed-citation>
    </ref>
    <ref id="vbad065-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Das</surname><given-names>P.P.</given-names></string-name></person-group><etal>et al</etal> (<year>2008</year>) <article-title>Piwi and piRNAs act upstream of an endogenous siRNA pathway to suppress Tc3 transposon mobility in the <italic toggle="yes">Caenorhabditis elegans</italic> germline</article-title>. <source>Mol. Cell</source>., <volume>31</volume>, <fpage>79</fpage>–<lpage>90</lpage>.<pub-id pub-id-type="pmid">18571451</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Farazi</surname><given-names>T.A.</given-names></string-name></person-group><etal>et al</etal> (<year>2008</year>) <article-title>The growing catalog of small RNAs and their association with distinct Argonaute/Piwi family members</article-title>. <source>Development</source>, <volume>135</volume>, <fpage>1201</fpage>–<lpage>1214</lpage>.<pub-id pub-id-type="pmid">18287206</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ghildiyal</surname><given-names>M.</given-names></string-name>, <string-name><surname>Zamore</surname><given-names>P.D.</given-names></string-name></person-group> (<year>2009</year>) <article-title>Small silencing RNAs: an expanding universe</article-title>. <source>Nat. Rev. Genet</source>., <volume>10</volume>, <fpage>94</fpage>–<lpage>108</lpage>.<pub-id pub-id-type="pmid">19148191</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Han</surname><given-names>B.W.</given-names></string-name></person-group><etal>et al</etal> (<year>2015</year>) <article-title>piPipes: a set of pipelines for piRNA and transposon analysis via small RNA-seq, RNA-seq, degradome- and CAGE-seq, ChIP-seq and genomic DNA sequencing</article-title>. <source>Bioinformatics</source>, <volume>31</volume>, <fpage>593</fpage>–<lpage>595</lpage>.<pub-id pub-id-type="pmid">25342065</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kasschau</surname><given-names>K.D.</given-names></string-name></person-group><etal>et al</etal> (<year>2007</year>) <article-title>Genome-wide profiling and analysis of <italic toggle="yes">Arabidopsis</italic> siRNAs</article-title>. <source>PLoS Biol</source>., <volume>5</volume>, <fpage>e57</fpage>.<pub-id pub-id-type="pmid">17298187</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kawamura</surname><given-names>Y.</given-names></string-name></person-group><etal>et al</etal> (<year>2008</year>) <article-title>Drosophila endogenous small RNAs bind to Argonaute 2 in somatic cells</article-title>. <source>Nature</source>, <volume>453</volume>, <fpage>793</fpage>–<lpage>797</lpage>.<pub-id pub-id-type="pmid">18463636</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lambert</surname><given-names>M.</given-names></string-name></person-group><etal>et al</etal> (<year>2019</year>) <article-title>Small non-coding RNAs derived from eukaryotic ribosomal RNA</article-title>. <source>ncRNA</source>, <volume>5</volume>, <fpage>16</fpage>.<pub-id pub-id-type="pmid">30720712</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Langmead</surname><given-names>B.</given-names></string-name></person-group><etal>et al</etal> (<year>2009</year>) <article-title>Ultrafast and memory-efficient alignment of short DNA sequences to the human genome</article-title>. <source>Genome Biol</source>., <volume>10</volume>, <fpage>R25</fpage>.<pub-id pub-id-type="pmid">19261174</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Li</surname><given-names>J.</given-names></string-name></person-group><etal>et al</etal> (<year>2020</year>) <article-title>COMPSRA: a COMprehensive platform for small RNA-Seq data analysis</article-title>. <source>Sci. Rep</source>., <volume>10</volume>, <fpage>4552</fpage>.<pub-id pub-id-type="pmid">32165660</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Liao</surname><given-names>Y.</given-names></string-name></person-group><etal>et al</etal> (<year>2014</year>) <article-title>featureCounts: an efficient general purpose program for assigning sequence reads to genomic features</article-title>. <source>Bioinformatics</source>, <volume>30</volume>, <fpage>923</fpage>–<lpage>930</lpage>.<pub-id pub-id-type="pmid">24227677</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Love</surname><given-names>M.I.</given-names></string-name></person-group><etal>et al</etal> (<year>2014</year>) <article-title>Moderated estimation of fold change and dispersion for RNA-seq data with DESeq2</article-title>. <source>Genome Biol</source>., <volume>15</volume>, <fpage>550</fpage>.<pub-id pub-id-type="pmid">25516281</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Reed</surname><given-names>K.J.</given-names></string-name></person-group><etal>et al</etal> (<year>2020</year>) <article-title>Widespread roles for piRNAs and WAGO-class siRNAs in shaping the germline transcriptome of <italic toggle="yes">Caenorhabditis elegans</italic></article-title>. <source>Nucleic Acids Res</source>., <volume>48</volume>, <fpage>1811</fpage>–<lpage>1827</lpage>.<pub-id pub-id-type="pmid">31872227</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Rueda</surname><given-names>A.</given-names></string-name></person-group><etal>et al</etal> (<year>2015</year>) <article-title>sRNAtoolbox: an integrated collection of small RNA research tools</article-title>. <source>Nucleic Acids Res</source>., <volume>43</volume>, <fpage>W467</fpage>–<lpage>W473</lpage>.<pub-id pub-id-type="pmid">26019179</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Shi</surname><given-names>C.Y.</given-names></string-name></person-group><etal>et al</etal> (<year>2020</year>) <article-title>The ZSWIM8 ubiquitin ligase mediates target-directed microRNA degradation</article-title>. <source>Science</source>, <volume>370</volume>, <fpage>1</fpage>–<lpage>10</lpage>.</mixed-citation>
    </ref>
    <ref id="vbad065-B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Stocks</surname><given-names>M.B.</given-names></string-name></person-group><etal>et al</etal> (<year>2018</year>) <article-title>The UEA sRNA Workbench (version 4.4): a comprehensive suite of tools for analyzing miRNAs and sRNAs</article-title>. <source>Bioinformatics</source>, <volume>34</volume>, <fpage>3382</fpage>–<lpage>3384</lpage>.<pub-id pub-id-type="pmid">29722807</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Veneziano</surname><given-names>D.</given-names></string-name></person-group><etal>et al</etal> (<year>2016</year>) <article-title>Noncoding RNA: current deep sequencing data analysis approaches and challenges</article-title>. <source>Hum. Mutat</source>., <volume>37</volume>, <fpage>1283</fpage>–<lpage>1298</lpage>.<pub-id pub-id-type="pmid">27516218</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wu</surname><given-names>X.</given-names></string-name></person-group><etal>et al</etal> (<year>2017</year>) <article-title>sRNAnalyzer-a flexible and customizable small RNA sequencing data analysis pipeline</article-title>. <source>Nucleic Acids Res</source>., <volume>45</volume>, <fpage>12140</fpage>–<lpage>12151</lpage>.<pub-id pub-id-type="pmid">29069500</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zamudio</surname><given-names>J.R.</given-names></string-name></person-group><etal>et al</etal> (<year>2014</year>) <article-title>Argonaute-bound small RNAs from promoter-proximal RNA polymerase II</article-title>. <source>Cell</source>, <volume>156</volume>, <fpage>920</fpage>–<lpage>934</lpage>.<pub-id pub-id-type="pmid">24581493</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinform Adv</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinform Adv</journal-id>
    <journal-id journal-id-type="publisher-id">bioadv</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics Advances</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2635-0041</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10243934</article-id>
    <article-id pub-id-type="doi">10.1093/bioadv/vbad065</article-id>
    <article-id pub-id-type="publisher-id">vbad065</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Application Note</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Sequence Analysis</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>tiny-count: a counting tool for hierarchical classification and quantification of small RNA-seq reads with single-nucleotide precision</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Tate</surname>
          <given-names>Alex J</given-names>
        </name>
        <aff><institution>Department of Biology, Colorado State University</institution>, Fort Collins, CO 80523, <country country="US">USA</country></aff>
        <xref rid="vbad065-FM1" ref-type="author-notes"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Brown</surname>
          <given-names>Kristen C</given-names>
        </name>
        <aff><institution>Department of Biology, Colorado State University</institution>, Fort Collins, CO 80523, <country country="US">USA</country></aff>
        <aff><institution>Cell and Molecular Biology Program, Colorado State University</institution>, Fort Collins, CO 80523, <country country="US">USA</country></aff>
        <xref rid="vbad065-FM1" ref-type="author-notes"/>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-7857-3253</contrib-id>
        <name>
          <surname>Montgomery</surname>
          <given-names>Taiowa A</given-names>
        </name>
        <aff><institution>Department of Biology, Colorado State University</institution>, Fort Collins, CO 80523, <country country="US">USA</country></aff>
        <aff><institution>Cell and Molecular Biology Program, Colorado State University</institution>, Fort Collins, CO 80523, <country country="US">USA</country></aff>
        <xref rid="vbad065-cor1" ref-type="corresp"/>
        <!--tai.montgomery@colostate.edu-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Lengauer</surname>
          <given-names>Thomas</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="vbad065-cor1">To whom correspondence should be addressed. <email>tai.montgomery@colostate.edu</email>.</corresp>
      <fn id="vbad065-FM1">
        <p>The authors wish it to be known that, in their opinion, Alex J Tate and Kristen C Brown authors should be regarded as Joint First Authors.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="collection">
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2023-05-18">
      <day>18</day>
      <month>5</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>18</day>
      <month>5</month>
      <year>2023</year>
    </pub-date>
    <volume>3</volume>
    <issue>1</issue>
    <elocation-id>vbad065</elocation-id>
    <history>
      <date date-type="received">
        <day>26</day>
        <month>8</month>
        <year>2022</year>
      </date>
      <date date-type="rev-recd">
        <day>03</day>
        <month>5</month>
        <year>2023</year>
      </date>
      <date date-type="editorial-decision">
        <day>09</day>
        <month>5</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>17</day>
        <month>5</month>
        <year>2023</year>
      </date>
      <date date-type="corrected-typeset">
        <day>05</day>
        <month>6</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2023. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2023</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="vbad065.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Summary</title>
        <p>tiny-count is a highly flexible counting tool that allows for hierarchical classification and quantification of small RNA reads from high-throughput sequencing data. Selection rules can be used to filter reads by 5′ nucleotide, length, position of alignments in relation to reference features, and by the number of mismatches to reference sequences. tiny-count can quantify reads aligned to a genome or directly to small RNA or transcript sequences. With tiny-count, users can quantify a single class of small RNAs or multiple classes in parallel. tiny-count can resolve distinct classes of small RNAs, for example, piRNAs and siRNAs, produced from the same locus. It can distinguish small RNA variants, such as miRNAs and isomiRs, with single-nucleotide precision. tRNA, rRNA, and other RNA fragments can also be quantified. tiny-count can be run alone or as part of tinyRNA, a workflow that provides a basic all-in-one command line-based solution for small RNA-seq data analysis, with documentation and statistics generated at each step for accurate and reproducible results.</p>
      </sec>
      <sec id="s2">
        <title>Availability and implementation</title>
        <p>tiny-count and other tinyRNA tools are implemented in Python, C++, Cython, and R, and the workflow is coordinated with CWL. tiny-count and tinyRNA are free and open-source software distributed under the GPLv3 license. tiny-count can be installed via Bioconda (<ext-link xlink:href="https://anaconda.org/bioconda/tiny-count" ext-link-type="uri">https://anaconda.org/bioconda/tiny-count</ext-link>) and both tiny-count and tinyRNA documentation and software downloads are available at <ext-link xlink:href="https://github.com/MontgomeryLab/tinyRNA" ext-link-type="uri">https://github.com/MontgomeryLab/tinyRNA</ext-link>. Reference data, including genome and feature information, for certain species can be found at <ext-link xlink:href="https://www.MontgomeryLab.org" ext-link-type="uri">https://www.MontgomeryLab.org</ext-link>.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>National Institutes of Health</institution>
            <institution-id institution-id-type="DOI">10.13039/100000002</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>R35GM119775</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="6"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Small RNAs interact with larger RNAs through base-pair interactions to direct mRNA decay or translational repression, or to promote RNA, DNA, or histone modifications. There is tremendous diversity among small RNAs both between and within species. The canonical classes of small RNAs—microRNAs (miRNAs), piwi-interacting RNAs (piRNAs), and small interfering RNAs (siRNAs)—are unified by their association with Argonaute/Piwi proteins (<xref rid="vbad065-B10" ref-type="bibr">Ghildiyal and Zamore, 2009</xref>). These classes of small RNAs can be distinguished by their genetic requirements, length, 5′ nucleotide (nt), and precursor structure (<xref rid="vbad065-B9" ref-type="bibr">Farazi <italic toggle="yes">et al.</italic>, 2008</xref>). Numerous other classes of short RNAs, such as tRNA and rRNA fragments, also play diverse roles in gene regulation (<xref rid="vbad065-B1" ref-type="bibr">Aalto and Pasquinelli, 2012</xref>).</p>
    <p>High-throughput sequencing is a widely used tool for discovery and analysis of small RNAs (<xref rid="vbad065-B23" ref-type="bibr">Veneziano <italic toggle="yes">et al.</italic>, 2016</xref>). The diversity and complexity of small RNA pathways present several computational challenges when classifying and analyzing the reads generated by high-throughput sequencing. For example, small RNA libraries are often contaminated with decay intermediates of longer RNAs, such as rRNAs and mRNAs, that can also produce functional small RNAs (<xref rid="vbad065-B14" ref-type="bibr">Lambert <italic toggle="yes">et al.</italic>, 2019</xref>). These contaminants can be difficult to distinguish from authentic small RNAs produced from the same features. Additionally, differential or imprecise processing can generate functionally distinct small RNAs, such as miRNA variants called isomiRs, that differ by as little as 1 nucleotide (<xref rid="vbad065-B4" ref-type="bibr">Bartel, 2018</xref>). Further complicating data analysis, distinct classes of small RNAs, such as piRNAs and siRNAs, can be produced from the same locus (<xref rid="vbad065-B8" ref-type="bibr">Das <italic toggle="yes">et al.</italic>, 2008</xref>; <xref rid="vbad065-B13" ref-type="bibr">Kawamura <italic toggle="yes">et al.</italic>, 2008</xref>). The tinyRNA project addresses these challenges with tiny-count, a single-nucleotide precision counting tool designed to quantify small RNAs and other short RNAs from high-throughput sequencing data.</p>
  </sec>
  <sec>
    <title>2 Methods and results</title>
    <sec>
      <title>2.1 Overview</title>
      <p>tiny-count evaluates sequence alignments for feature assignment utilizing the genomic array and GFF reader from HTSeq (<xref rid="vbad065-B2" ref-type="bibr">Anders <italic toggle="yes">et al.</italic>, 2015</xref>). User-defined selection rules can be used to classify reads based on their sequence attributes, which include 5′ nt and length, as well as their relationship to features of interest, such as strandedness, positional overlap, and number of mismatches. Selection rules can require exact, partial, nested, or anchored alignment of reads to features of interest. Alignment can be relative to the annotated 5′ or 3′ ends of features of interest or shifted by any number of nucleotides specified by the user. Each selection rule must specify a hierarchy value, and rule sets with heterogeneous hierarchy values can be used to preferentially assign reads to one class over another. Reads can also be subclassified for individual features based on these rules. tiny-count will distinguish and quantify reads for every rule simultaneously while preserving information for each feature-rule combination for subsequent analysis. Hence, the user can perform downstream analysis treating subsets of small RNAs produced from the same locus as distinct features.</p>
      <p>For each sequence, counts are optionally normalized by the number of genomic alignments and/or by the number of features the sequence matched. tiny-count can also normalize by library size using the common small RNA normalization method, reads per million mapped reads (rpm). Alternatively, users can specify a custom normalization factor for each library, thereby enabling the use of spike-in counts or other metrics for normalization. tiny-count produces a CSV-formatted table with counts for each feature that are optionally subclassified based on the user-defined selection rules. Additionally, the total counts for each rule or class of small RNAs are reported, as are summary statistics and 5′ nt and length distribution tables.</p>
      <p>tiny-count can be installed via Bioconda or downloaded from GitHub. To run tiny-count as a stand-alone program, the user provides SAM files with read alignment information for each library. The user can provide a GFF file containing positional information for features of interest. In the absence of a GFF file, each unique reference sequence is treated as a distinct feature. This allows for analysis of data from alignments directly to features of interest rather than to a genome. Read selection rules and sample information are specified in CSV files, and paths to these files and other run information are specified within a YAML-formatted configuration file. Alternatively, tiny-count can be run as part of the tinyRNA end-to-end data analysis workflow described below.</p>
    </sec>
    <sec>
      <title>2.2 Precision counting</title>
      <p>tiny-count provides precise control over the attribution of reads at alignment loci with user-defined selection rules. Any number of selection rules can be defined to categorize reads. The selection process resolves ambiguities in feature assignment at loci with multiple overlapping features and the associated loss of counting precision. It also allows for reads from distinct classes of small RNAs produced from the same feature or genomic interval to be treated separately during counting and analysis. Feature selection and read matching occurs in three stages (<xref rid="vbad065-F1" ref-type="fig">Fig. 1</xref>). In Stage 1, features of interest are retrieved from GFF-formatted input files based on user-specified attributes, including source (listed in column 2 of the GFF), type (listed in column 3 of the GFF), and annotation (listed in column 9 of the GFF). If reads are counted from alignments directly to sequences of interest, rather than to a genome containing feature intervals of interest, then both the GFF file and Stage 1 can be omitted.</p>
      <fig position="float" id="vbad065-F1">
        <label>Fig. 1.</label>
        <caption>
          <p>The tiny-count selection scheme. Small RNA read and alignment attributes are specified within a CSV-formatted file in which each row corresponds to a selection rule. The Stage 1 selection attributes reflect the variety of sources used for small RNA annotation and classification. Feature selection and read filtering occurs in three stages. Stage 1: information about features specified by the user is extracted from a GFF file. If a GFF file is not provided, this step is omitted. Stage 2: features are selected based on their overlap with read alignments and edit distance (mismatches) to the reference sequence. Stage 3: reads are assigned to features passing Stages 1 and 2 selection based on their sequence attributes, such as 5′ nt and length, as well as their strand relationship to the feature. Reads meeting all selection criteria for a specific rule are then assigned to features. If there is more than one matching feature, reads are evenly distributed or preferentially assigned to one over the others based on user-defined hierarchy values. In Example 1, a hypothetical siRNA read is incompatible with classification as an rRNA as defined in Rule 1 because of strand incompatibility but is compatible with classification as an siRNA as defined in Rule 7. Conversely, in Example 2, a hypothetical rRNA fragment read is compatible with both Rules 1 and 7 but is assigned to Rule 1 because of its lower hierarchy value</p>
        </caption>
        <graphic xlink:href="vbad065f1" position="float"/>
      </fig>
      <p>During Stage 2, reads are assessed for their positional overlap with the features that were selected in Stage 1. If a GFF file is not provided, reads are instead evaluated for their overlap with each reference sequence, as specified in the header section of the SAM-formatted alignment file. Selection rules can specify partial, nested, or exact overlap with features of interest, with the option to shift the annotated coordinates by any number of nucleotides in the 5′ or 3′ direction. Additionally, features can be selected based on whether their 5′ or 3′ ends are anchored to the alignment or to a user-defined position relative to the alignment. The number of mismatches relative to features of interests can also be specified if such mismatches were permissible at the alignment step. This can be a range or a single value, which can be used to capture sequence variants. Features passing the selection criteria in Stage 2 are sorted by user-defined values for hierarchical selection in Stage 3.</p>
      <p>In Stage 3, features are matched with reads based on each read’s attributes, such as its 5′ nt, length, and strandedness relative to the feature. Reads are assigned at Stage 3 to matching features with the lowest hierarchy value that meet all selection criteria and are thus excluded from any other overlapping features at the alignment locus with higher hierarchy values. Features which pass the selection process are assigned all counts or a normalized portion of the counts associated with the alignment sequence. By default, a sequence with <inline-formula id="IE1"><mml:math id="IM1" display="inline" overflow="scroll"><mml:mi>n</mml:mi></mml:math></inline-formula> read counts and <inline-formula id="IE2"><mml:math id="IM2" display="inline" overflow="scroll"><mml:mi>m</mml:mi></mml:math></inline-formula> genomic alignments is assigned <inline-formula id="IE3"><mml:math id="IM3" display="inline" overflow="scroll"><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mo>/</mml:mo><mml:mi>m</mml:mi><mml:mo>)</mml:mo><mml:mo>/</mml:mo><mml:mi>k</mml:mi></mml:math></inline-formula> reads, where <inline-formula id="IE4"><mml:math id="IM4" display="inline" overflow="scroll"><mml:mi>k</mml:mi></mml:math></inline-formula> is the number of features that pass selection at the locus. The <inline-formula id="IE5"><mml:math id="IM5" display="inline" overflow="scroll"><mml:mi>m</mml:mi></mml:math></inline-formula> and <inline-formula id="IE6"><mml:math id="IM6" display="inline" overflow="scroll"><mml:mi>k</mml:mi></mml:math></inline-formula> normalization factors are both optional.</p>
      <p>The hierarchical selection scheme utilized by tiny-count allows users to assign reads preferentially or uniformly to features of interest. For example, it is often necessary to filter out reads that align to structural RNAs. Using tiny-count, reads that align to rRNAs or other abundant structural RNAs can be excluded from assignment to other features by giving the structural RNA classes lower hierarchy values (closer to or equal to 1). In this approach, counts from structural RNAs are excluded from assignment to other classes of small RNAs and are reported separately, which can provide an important indicator of RNA integrity or could point to biological relevance of such reads (<xref rid="vbad065-B14" ref-type="bibr">Lambert <italic toggle="yes">et al.</italic>, 2019</xref>).</p>
    </sec>
    <sec>
      <title>2.3 Applications</title>
      <p>tiny-count is designed to provide the highest level of user control over read selection and classification when quantifying high-throughput sequencing data. A few possible applications are described below to highlight potential usage of tiny-count, although we anticipate its functionality extending far beyond these examples.</p>
      <p><bold>miRNAs and isomiRs:</bold> The functionality of tiny-count can be illustrated by considering miRNAs, for which some variation at the 3′ end is often permissible but variation at the 5′ end would shift the seed sequence and alter target recognition (<xref rid="vbad065-B3" ref-type="bibr">Bartel, 2009</xref>). Pooling counts for all sequences that overlap with a miRNA locus can produce inaccurate results, whereas limiting the analysis to only reads with exact matches to annotated miRNAs may undercount relevant data. We commonly use a rule for miRNAs that captures reads with nested overlap within annotated miRNA loci. We require an exact match with the annotated 5′ ends of miRNAs and allow extensions up to 4 nt beyond the annotated 3′ ends to account for variation in 3′ end processing (Overlap = 5′ anchored, 0, 4; see Selection Rules example in <xref rid="vbad065-F1" ref-type="fig">Fig. 1</xref>). miRNAs are typically 20–24 nt long and we often expand this range to account for outliers (Length = 16–28). There is typically no reason to restrict the 5′ nt because this will be dictated by the annotated 5′ ends of the miRNAs (5′ nt = Any). To identify miRNA isoforms (isomiRs) for which the 5′ ends are shifted upstream by 1 nt, an additional rule could be added in which the overlap parameter is offset from the 5′ ends by −1 relative to the annotated coordinates (Overlap = 5′ anchored, −1, 4). Another rule could be defined to capture 5′ isoforms shifted downstream by 1 nt (Overlap = 5′ anchored, 1, 4) (<xref rid="vbad065-F1" ref-type="fig">Fig. 1</xref>). If desired, additional rules could be defined to distinguish other possible isomiRs, or a catch-all rule could be specified to capture all other partially overlapping reads (Overlap = Partial). By assigning a higher hierarchy value to this catch-all rule, only reads that are not assigned to the other miRNA rules would be counted. There is no need to distinguish the hierarchies of the other miRNA rules since they are mutually exclusive of each other due to distinct 5′ offsets of the overlap selectors (i.e. 0, −1, and 1). Alternatively, if the user wanted to capture reads that overlap exactly with annotated miRNAs, an exact overlap could be specified (Overlap = Exact). Regardless of how the rules are defined, the counts for each miRNA-rule pair will be listed as separate features in the counts table.</p>
      <p><bold>Promoter-derived small RNAs:</bold> Small RNAs are often produced from promoter regions of coding genes (<xref rid="vbad065-B12" ref-type="bibr">Kasschau <italic toggle="yes">et al.</italic>, 2007</xref>; <xref rid="vbad065-B25" ref-type="bibr">Zamudio <italic toggle="yes">et al.</italic>, 2014</xref>). To capture small RNA reads derived from promoter regions, which are often imprecisely annotated, a user could first define a selection rule to capture reads from annotated gene bodies (e.g. Overlap = Nested, 0, 0; Hierarchy = 1). Then in a second rule, the user could specify nested overlap within a region shifted by some number of nucleotides upstream of gene bodies and assign it a higher hierarchy value (e.g. Overlap = Nested, −1000, 0; Hierarchy = 2). The first rule would capture all reads nested within gene bodies, whereas the second rule would capture reads not aligned to gene bodies in the first rule (because of its hierarchy value) but nested within some number of nucleotides upstream (1000 in this example). Due to variability in promoter lengths, the user could specify any number of distinct bins upstream of the transcribed region to provide greater resolution.</p>
      <p><bold>Nematode 22G- and 26G-RNAs:</bold> In <italic toggle="yes">Caenorhabditis elegans</italic> and other nematodes, many genes produce two classes of small RNAs with distinct genetic requirements, one of which is characterized by sequence lengths of ∼22-nt (22G-RNAs) and the other by ∼26-nt species (26G-RNAs). Both classes are comprised primarily of sequences with a 5′G that are produced antisense to their transcripts of origin (<xref rid="vbad065-B5" ref-type="bibr">Billi <italic toggle="yes">et al.</italic>, 2014</xref>). These two classes can be distinguished with tiny-count by defining two selection rules, one that captures reads with length 22-nt (Length = 22) and one that captures reads with length 26-nt (Length = 26), and both of which include only 5′G-containing antisense reads (5′ nt = G; Strand = Antisense). There is no need to distinguish the hierarchy in this example because reads can only match one rule or the other due to the length restrictions. Because of variation in processing, the lengths and 5′ nt could be assigned a more permissive set of values to capture additional reads, although this would come at the expense of categorical resolution.</p>
    </sec>
    <sec>
      <title>2.4 The tinyRNA workflow</title>
      <p>tiny-count can be run as a stand-alone program or as part of the tinyRNA small RNA data analysis workflow (<xref rid="vbad065-F2" ref-type="fig">Fig. 2A</xref>). When running tinyRNA, execution begins with the automated generation of a workflow in Common Workflow Language (CWL) (<xref rid="vbad065-B7" ref-type="bibr">Crusoe <italic toggle="yes">et al.</italic>, 2022</xref>). CWL is portable, scalable across different computing resources, and, like the tinyRNA project, its development is community driven. Preprocessing of FASTQ files, including adapter trimming and quality filtering, is performed with fastp (<xref rid="vbad065-B6" ref-type="bibr">Chen <italic toggle="yes">et al.</italic>, 2018</xref>). Unique sequences are counted and collapsed by the tinyRNA collapser tool, tiny-collapse, substantially reducing the resource demands of genomic alignment and feature counting. tiny-collapse can also trim the degenerate bases often included in the adapter sequences used in library preparation. Collapsed reads are aligned to a reference genome using Bowtie allowing 0–3 mismatches (default = 0, specified within the run configuration file) (<xref rid="vbad065-B15" ref-type="bibr">Langmead <italic toggle="yes">et al.</italic>, 2009</xref>). tiny-count is then used for read quantification, as described above. If the data contain biological replicates, differential expression analysis is automatically performed by tiny-deseq, a wrapper around DESeq2 (<xref rid="vbad065-B18" ref-type="bibr">Love <italic toggle="yes">et al.</italic>, 2014</xref>), using the counts tables generated by tiny-count. Finally, the outputs of tiny-count and tiny-deseq are used to produce publication-ready plots with the tinyRNA plotter tool, tiny-plot.</p>
      <fig position="float" id="vbad065-F2">
        <label>Fig. 2.</label>
        <caption>
          <p>The tinyRNA workflow. (<bold>A</bold>) tinyRNA flowchart. A selection of graphical outputs from a human miRNA analysis (<xref rid="vbad065-B21" ref-type="bibr">Shi <italic toggle="yes">et al.</italic>, 2020</xref>) (<bold>B</bold>), and a <italic toggle="yes">C. elegans</italic> total small RNA analysis (<xref rid="vbad065-B19" ref-type="bibr">Reed <italic toggle="yes">et al.</italic>, 2020</xref>) (<bold>C</bold> and <bold>D</bold>). Note that some post-run editing of the plots was done due to space constraints. The outputs of each tinyRNA run, including quality reports, processed data, mapping and assignment statistics, counts tables, size plots, class charts and a variety of scatter plots, are placed in a timestamped directory with full run documentation</p>
        </caption>
        <graphic xlink:href="vbad065f2" position="float"/>
      </fig>
      <p>tinyRNA provides a simple command-line-based solution for integrating precision classification and analysis of short RNAs into a general automated data analysis pipeline. To the best of our knowledge, tinyRNA adds a higher degree of precision and user control when processing, counting, and classifying reads than other software suites. However, tinyRNA lacks the specialized functionality found in some tools, such as integration of different data types, querying of public data repositories, and automated classification of small RNAs (<xref rid="vbad065-B11" ref-type="bibr">Han <italic toggle="yes">et al.</italic>, 2015</xref>; <xref rid="vbad065-B16" ref-type="bibr">Li <italic toggle="yes">et al.</italic>, 2020</xref>; <xref rid="vbad065-B20" ref-type="bibr">Rueda <italic toggle="yes">et al.</italic>, 2015</xref>; <xref rid="vbad065-B22" ref-type="bibr">Stocks <italic toggle="yes">et al.</italic>, 2018</xref>; <xref rid="vbad065-B24" ref-type="bibr">Wu <italic toggle="yes">et al.</italic>, 2017</xref>). With tinyRNA, users must provide all reference data for their analysis. This approach allows users to use their preferred reference sequences and to analyze any set of features regardless of availability in a publicly accessible database. It also avoids challenges associated with querying online databases from some servers or when working offline. Care should be taken by the user to ensure that reference data is from a reliable and up-to-date source. This is particularly important for small RNAs, which are often absent or poorly annotated in GFFs distributed through non-specialized databases.</p>
      <p>Despite being a command-line tool, very little terminal software experience is necessary to run tinyRNA because input files and parameters are passed to the workflow via text-based configuration files. After preparing the input files, the entire tinyRNA workflow can be run with a single command, <italic toggle="yes"><monospace>tiny run --config run_config.yml</monospace></italic>. Alternatively, certain steps of the workflow, such as counting and plotting, can be repeated on a completed run if the user chooses to modify the parameters, such as the selection rules or plot appearance.</p>
      <p>We tested tiny-count and the tinyRNA workflow on human cell line datasets by quantifying miRNAs in control and ZSWIM8 knockout lines (<xref rid="vbad065-F2" ref-type="fig">Fig. 2B</xref>) (<xref rid="vbad065-B21" ref-type="bibr">Shi <italic toggle="yes">et al.</italic>, 2020</xref>). We also tested their ability to accurately quantify multiple classes of small RNAs in parallel using <italic toggle="yes">C. elegans</italic> germline tissue datasets from wild type and <italic toggle="yes">mut-16</italic> mutant animals (<xref rid="vbad065-F2" ref-type="fig">Fig. 2C and D</xref>) (<xref rid="vbad065-B19" ref-type="bibr">Reed <italic toggle="yes">et al.</italic>, 2020</xref>). In each of these tests, tinyRNA provided results that were consistent with the original published analyses but with greater resolution of affected features. For example, in the human dataset, tinyRNA identified several isomiRs that were upregulated in ZSWIM8 knockout cell lines that were not previously reported (<xref rid="vbad065-F2" ref-type="fig">Fig. 2B</xref>). In the <italic toggle="yes">C. elegans</italic> dataset, tinyRNA identified numerous unclassified siRNAs that were depleted in <italic toggle="yes">mut-16</italic> mutants and distinguished between affected 22G- and 26G-RNAs produced from the same genes (<xref rid="vbad065-F2" ref-type="fig">Fig. 2C</xref>).</p>
    </sec>
    <sec>
      <title>2.5 Performance</title>
      <p>To our knowledge, tiny-count is the only read counting program that combines hierarchical assignment of reads to user-defined categories, selection based on small RNA length and 5′ nt, 5′- or 3′-anchored alignments, and single nucleotide control over alignment overlap (<xref rid="vbad065-T1" ref-type="table">Table 1</xref>). Nor to our knowledge is the user-defined small RNA counting and classification scheme of tiny-count available in small RNA pipeline software other than tinyRNA. tiny-count’s unique features enable the highest level of accuracy in counting and classifying small RNAs. Because of tiny-count’s hierarchical read assignment strategy, data does not have to be prefiltered or sorted before counting, and multiple classes of small RNAs can be analyzed in parallel. tiny-count is faster than HTSeq-count, but it is slower than featureCounts, which is an exceptionally fast general purpose counting program that is not readily configurable for precision counting of diverse small RNA classes (<xref rid="vbad065-T1" ref-type="table">Table 1</xref>) (<xref rid="vbad065-B2" ref-type="bibr">Anders <italic toggle="yes">et al.</italic>, 2015</xref>; <xref rid="vbad065-B17" ref-type="bibr">Liao <italic toggle="yes">et al.</italic>, 2014</xref>). Furthermore, tiny-count, but not HTSeq-count nor featureCounts, can extract read counts from collapsed SAM files (i.e. reads are collapsed and tallied within each sequence record to minimize the number of genome alignments required). When SAM files containing collapsed reads are used in tiny-count, its performance begins to approach that of featureCounts while allowing for quantification of multiple classes in parallel (45.1 versus 2.4 s) (<xref rid="vbad065-T1" ref-type="table">Table 1</xref>). Currently, tiny-count can only accommodate SAM files containing collapsed read data if the reads were collapsed with FASTX-Toolkit, tiny-collapse, or custom programs that embed the counts within read identifiers formatted similarly to either of these tools.</p>
      <table-wrap position="float" id="vbad065-T1">
        <label>Table 1.</label>
        <caption>
          <p>Comparison of read counting programs applied to small RNA-sequencing data</p>
        </caption>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="center" span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th rowspan="1" colspan="1">Read counting program</th>
              <th align="center" rowspan="1" colspan="1">Strand selectivity</th>
              <th align="center" rowspan="1" colspan="1">Length selectivity</th>
              <th align="center" rowspan="1" colspan="1">5′ nt selectivity</th>
              <th align="center" rowspan="1" colspan="1">Hierarchical assignment</th>
              <th align="center" rowspan="1" colspan="1">5′ or 3′ anchoring<xref rid="tblfn1" ref-type="table-fn"><sup>a</sup></xref></th>
              <th align="center" rowspan="1" colspan="1">Runtime<xref rid="tblfn2" ref-type="table-fn"><sup>b</sup></xref></th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">HTSeq-count</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">No</td>
              <td rowspan="1" colspan="1">No</td>
              <td rowspan="1" colspan="1">No</td>
              <td rowspan="1" colspan="1">No</td>
              <td rowspan="1" colspan="1">12 m 57 s</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">featureCounts</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">No</td>
              <td rowspan="1" colspan="1">No</td>
              <td rowspan="1" colspan="1">No</td>
              <td rowspan="1" colspan="1">2.4 s</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">tiny-count HTSeq StepVector</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">3 m 44 s</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">tiny-count Cython StepVector</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">2 m 35 s</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">tiny-count Cython StepVector with collapsed reads<xref rid="tblfn3" ref-type="table-fn"><sup>c</sup></xref></td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">Yes</td>
              <td rowspan="1" colspan="1">45.1 s</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <fn id="tblfn1">
            <label>a</label>
            <p>Reads can be selected by 5′- or 3′-end alignment to 5′- or 3′-end of feature or shifted by any number of nucleotides.</p>
          </fn>
          <fn id="tblfn2">
            <label>b</label>
            <p>Approximately 13 million genome alignments and ∼50k features with an assignment rate of ∼65%. Benchmarks were taken on an HPE ProLiant server using one Xeon E5-4640V4 2.10 GHz CPU and allowing up to 256 GB memory usage.</p>
          </fn>
          <fn id="tblfn3">
            <label>c</label>
            <p>Reads collapsed prior to mapping. Tallied read counts are contained within SAM records and captured by tiny-count.</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
      <p>Most steps in tiny-count and tinyRNA run concurrently across libraries to minimize runtime. A user-defined global thread count is set for fastp and Bowtie to utilize multi-core computing resources. Performance-critical sections of tiny-count have been carefully written with respect to the resulting bytecode, or internal representation of the program in the CPython interpreter, to optimize execution. Additionally, we developed a custom implementation of the HTSeq StepVector written in Cython, a C language extension to Python, to address inefficiencies in iteration and intermediate object creation. The StepVector is a data structure which represents piecewise constant values at low resolution and is used by tiny-count to resolve features that overlap a given interval by at least one nucleotide. This data structure is heavily utilized during read assignment and because of our implementation, overall runtimes in tiny-count have been reduced by an average of ∼30% relative to an implementation using the HTSeq StepVector (<xref rid="vbad065-T1" ref-type="table">Table 1</xref>).</p>
    </sec>
    <sec>
      <title>2.6 Convenience and reproducibility</title>
      <p>tiny-count and the tinyRNA workflow are designed to be operable by users with minimal command-line computing skills and little or no small RNA data analysis experience. Configuration parameters for the individual tools within tinyRNA are contained within modules rather than residing in a single monolithic file. This allows the tinyRNA pipeline to be executed with a single command whose sole argument is the primary configuration file. Command-line parameters for each step in the tinyRNA pipeline can be modified by editing the primary configuration file. Thus, the user does not need to be familiar with the various tools used by tinyRNA, such as fastp and Bowtie, to utilize their extensive functionality. A standard small RNA analysis configuration that follows best practices in the field is provided as a YAML-formatted template. Upon tinyRNA run completion, copies of configuration files are placed in timestamped output directories that are organized into subdirectories by step to simplify documentation and collaboration. Most tinyRNA components are written in Python using object-oriented design patterns for transparency and easy modification by advanced users. The tinyRNA pipeline can be extended to include any number of additional steps by modifying the workflow CWL. These advanced modifications are permissible by the installation script for easy integration into a custom workflow.</p>
    </sec>
  </sec>
  <sec>
    <title>3 Summary</title>
    <p>tiny-count performs precision counting of small RNAs from high-throughput sequencing data. Utilizing tiny-count, the tinyRNA workflow enables end-to-end analysis of small RNA high-throughput sequencing data following best practices, producing complete run documentation for accuracy and reproducibility. It is compatible with data from any species containing reference sequences for the genome or small RNAs of interest. tiny-count and tinyRNA can accommodate relatively simple data analyses, such as miRNA expression in mammalian cell lines, to complex analyses of multiple classes of small RNAs from whole organisms, such as <italic toggle="yes">Arabidopsis</italic>, <italic toggle="yes">Drosophila</italic>, and <italic toggle="yes">C. elegans.</italic></p>
  </sec>
</body>
<back>
  <ack id="ack1">
    <title>Acknowledgements</title>
    <p>Thanks to the Montgomery lab and the small RNA community for comments and suggestions.</p>
  </ack>
  <sec>
    <title>Funding</title>
    <p>This work was supported by the National Institutes of Health [R35GM119775 to T.A.M.].</p>
    <p><italic toggle="yes">Conflict of Interest</italic>: none declared.</p>
  </sec>
  <sec sec-type="data-availability">
    <title>Data availability</title>
    <p>There are no new data associated with this article.</p>
  </sec>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="vbad065-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Aalto</surname><given-names>A.P.</given-names></string-name>, <string-name><surname>Pasquinelli</surname><given-names>A.E.</given-names></string-name></person-group> (<year>2012</year>) <article-title>Small non-coding RNAs mount a silent revolution in gene expression</article-title>. <source>Curr. Opin. Cell Biol</source>., <volume>24</volume>, <fpage>333</fpage>–<lpage>340</lpage>.<pub-id pub-id-type="pmid">22464106</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Anders</surname><given-names>S.</given-names></string-name></person-group><etal>et al</etal> (<year>2015</year>) <article-title>HTSeq–a python framework to work with high-throughput sequencing data</article-title>. <source>Bioinformatics</source>, <volume>31</volume>, <fpage>166</fpage>–<lpage>169</lpage>.<pub-id pub-id-type="pmid">25260700</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bartel</surname><given-names>D.P.</given-names></string-name></person-group> (<year>2009</year>) <article-title>MicroRNAs: target recognition and regulatory functions</article-title>. <source>Cell</source>, <volume>136</volume>, <fpage>215</fpage>–<lpage>233</lpage>.<pub-id pub-id-type="pmid">19167326</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bartel</surname><given-names>D.P.</given-names></string-name></person-group> (<year>2018</year>) <article-title>Metazoan microRNAs</article-title>. <source>Cell</source>, <volume>173</volume>, <fpage>20</fpage>–<lpage>51</lpage>.<pub-id pub-id-type="pmid">29570994</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Billi</surname><given-names>A.C.</given-names></string-name></person-group><etal>et al</etal> (<year>2014</year>) <article-title>Endogenous RNAi pathways in <italic toggle="yes">C. elegans</italic></article-title>. <source>WormBook</source>, <fpage>1</fpage>–<lpage>49</lpage>. <pub-id pub-id-type="doi">10.1895/wormbook.1.170.1</pub-id>.</mixed-citation>
    </ref>
    <ref id="vbad065-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chen</surname><given-names>S.</given-names></string-name></person-group><etal>et al</etal> (<year>2018</year>) <article-title>fastp: an ultra-fast all-in-one FASTQ preprocessor</article-title>. <source>Bioinformatics</source>, <volume>34</volume>, <fpage>i884</fpage>–<lpage>i890</lpage>.<pub-id pub-id-type="pmid">30423086</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Crusoe</surname><given-names>M.R.</given-names></string-name></person-group><etal>et al</etal> (<year>2022</year>) <article-title>Methods included: standardizing computational reuse and portability with the common workflow language</article-title>. <source>Commun. ACM</source>, <volume>65</volume>, <fpage>54</fpage>–<lpage>63</lpage>.</mixed-citation>
    </ref>
    <ref id="vbad065-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Das</surname><given-names>P.P.</given-names></string-name></person-group><etal>et al</etal> (<year>2008</year>) <article-title>Piwi and piRNAs act upstream of an endogenous siRNA pathway to suppress Tc3 transposon mobility in the <italic toggle="yes">Caenorhabditis elegans</italic> germline</article-title>. <source>Mol. Cell</source>., <volume>31</volume>, <fpage>79</fpage>–<lpage>90</lpage>.<pub-id pub-id-type="pmid">18571451</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Farazi</surname><given-names>T.A.</given-names></string-name></person-group><etal>et al</etal> (<year>2008</year>) <article-title>The growing catalog of small RNAs and their association with distinct Argonaute/Piwi family members</article-title>. <source>Development</source>, <volume>135</volume>, <fpage>1201</fpage>–<lpage>1214</lpage>.<pub-id pub-id-type="pmid">18287206</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ghildiyal</surname><given-names>M.</given-names></string-name>, <string-name><surname>Zamore</surname><given-names>P.D.</given-names></string-name></person-group> (<year>2009</year>) <article-title>Small silencing RNAs: an expanding universe</article-title>. <source>Nat. Rev. Genet</source>., <volume>10</volume>, <fpage>94</fpage>–<lpage>108</lpage>.<pub-id pub-id-type="pmid">19148191</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Han</surname><given-names>B.W.</given-names></string-name></person-group><etal>et al</etal> (<year>2015</year>) <article-title>piPipes: a set of pipelines for piRNA and transposon analysis via small RNA-seq, RNA-seq, degradome- and CAGE-seq, ChIP-seq and genomic DNA sequencing</article-title>. <source>Bioinformatics</source>, <volume>31</volume>, <fpage>593</fpage>–<lpage>595</lpage>.<pub-id pub-id-type="pmid">25342065</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kasschau</surname><given-names>K.D.</given-names></string-name></person-group><etal>et al</etal> (<year>2007</year>) <article-title>Genome-wide profiling and analysis of <italic toggle="yes">Arabidopsis</italic> siRNAs</article-title>. <source>PLoS Biol</source>., <volume>5</volume>, <fpage>e57</fpage>.<pub-id pub-id-type="pmid">17298187</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kawamura</surname><given-names>Y.</given-names></string-name></person-group><etal>et al</etal> (<year>2008</year>) <article-title>Drosophila endogenous small RNAs bind to Argonaute 2 in somatic cells</article-title>. <source>Nature</source>, <volume>453</volume>, <fpage>793</fpage>–<lpage>797</lpage>.<pub-id pub-id-type="pmid">18463636</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lambert</surname><given-names>M.</given-names></string-name></person-group><etal>et al</etal> (<year>2019</year>) <article-title>Small non-coding RNAs derived from eukaryotic ribosomal RNA</article-title>. <source>ncRNA</source>, <volume>5</volume>, <fpage>16</fpage>.<pub-id pub-id-type="pmid">30720712</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Langmead</surname><given-names>B.</given-names></string-name></person-group><etal>et al</etal> (<year>2009</year>) <article-title>Ultrafast and memory-efficient alignment of short DNA sequences to the human genome</article-title>. <source>Genome Biol</source>., <volume>10</volume>, <fpage>R25</fpage>.<pub-id pub-id-type="pmid">19261174</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Li</surname><given-names>J.</given-names></string-name></person-group><etal>et al</etal> (<year>2020</year>) <article-title>COMPSRA: a COMprehensive platform for small RNA-Seq data analysis</article-title>. <source>Sci. Rep</source>., <volume>10</volume>, <fpage>4552</fpage>.<pub-id pub-id-type="pmid">32165660</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Liao</surname><given-names>Y.</given-names></string-name></person-group><etal>et al</etal> (<year>2014</year>) <article-title>featureCounts: an efficient general purpose program for assigning sequence reads to genomic features</article-title>. <source>Bioinformatics</source>, <volume>30</volume>, <fpage>923</fpage>–<lpage>930</lpage>.<pub-id pub-id-type="pmid">24227677</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Love</surname><given-names>M.I.</given-names></string-name></person-group><etal>et al</etal> (<year>2014</year>) <article-title>Moderated estimation of fold change and dispersion for RNA-seq data with DESeq2</article-title>. <source>Genome Biol</source>., <volume>15</volume>, <fpage>550</fpage>.<pub-id pub-id-type="pmid">25516281</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Reed</surname><given-names>K.J.</given-names></string-name></person-group><etal>et al</etal> (<year>2020</year>) <article-title>Widespread roles for piRNAs and WAGO-class siRNAs in shaping the germline transcriptome of <italic toggle="yes">Caenorhabditis elegans</italic></article-title>. <source>Nucleic Acids Res</source>., <volume>48</volume>, <fpage>1811</fpage>–<lpage>1827</lpage>.<pub-id pub-id-type="pmid">31872227</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Rueda</surname><given-names>A.</given-names></string-name></person-group><etal>et al</etal> (<year>2015</year>) <article-title>sRNAtoolbox: an integrated collection of small RNA research tools</article-title>. <source>Nucleic Acids Res</source>., <volume>43</volume>, <fpage>W467</fpage>–<lpage>W473</lpage>.<pub-id pub-id-type="pmid">26019179</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Shi</surname><given-names>C.Y.</given-names></string-name></person-group><etal>et al</etal> (<year>2020</year>) <article-title>The ZSWIM8 ubiquitin ligase mediates target-directed microRNA degradation</article-title>. <source>Science</source>, <volume>370</volume>, <fpage>1</fpage>–<lpage>10</lpage>.</mixed-citation>
    </ref>
    <ref id="vbad065-B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Stocks</surname><given-names>M.B.</given-names></string-name></person-group><etal>et al</etal> (<year>2018</year>) <article-title>The UEA sRNA Workbench (version 4.4): a comprehensive suite of tools for analyzing miRNAs and sRNAs</article-title>. <source>Bioinformatics</source>, <volume>34</volume>, <fpage>3382</fpage>–<lpage>3384</lpage>.<pub-id pub-id-type="pmid">29722807</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Veneziano</surname><given-names>D.</given-names></string-name></person-group><etal>et al</etal> (<year>2016</year>) <article-title>Noncoding RNA: current deep sequencing data analysis approaches and challenges</article-title>. <source>Hum. Mutat</source>., <volume>37</volume>, <fpage>1283</fpage>–<lpage>1298</lpage>.<pub-id pub-id-type="pmid">27516218</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wu</surname><given-names>X.</given-names></string-name></person-group><etal>et al</etal> (<year>2017</year>) <article-title>sRNAnalyzer-a flexible and customizable small RNA sequencing data analysis pipeline</article-title>. <source>Nucleic Acids Res</source>., <volume>45</volume>, <fpage>12140</fpage>–<lpage>12151</lpage>.<pub-id pub-id-type="pmid">29069500</pub-id></mixed-citation>
    </ref>
    <ref id="vbad065-B25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zamudio</surname><given-names>J.R.</given-names></string-name></person-group><etal>et al</etal> (<year>2014</year>) <article-title>Argonaute-bound small RNAs from promoter-proximal RNA polymerase II</article-title>. <source>Cell</source>, <volume>156</volume>, <fpage>920</fpage>–<lpage>934</lpage>.<pub-id pub-id-type="pmid">24581493</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1d1 20130915//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 39.96?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-id journal-id-type="hwp">bioinfo</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">4595904</article-id>
    <article-id pub-id-type="pmid">26099265</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btv383</article-id>
    <article-id pub-id-type="publisher-id">btv383</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Applications Notes</subject>
        <subj-group subj-group-type="heading">
          <subject>Genome Analysis</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Bandage: interactive visualization of <italic>de novo</italic> genome assemblies</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Wick</surname>
          <given-names>Ryan R.</given-names>
        </name>
        <xref ref-type="aff" rid="btv383-AFF1">
          <sup>1</sup>
        </xref>
        <xref ref-type="corresp" rid="btv383-COR1">*</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Schultz</surname>
          <given-names>Mark B.</given-names>
        </name>
        <xref ref-type="aff" rid="btv383-AFF1">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Zobel</surname>
          <given-names>Justin</given-names>
        </name>
        <xref ref-type="aff" rid="btv383-AFF2">
          <sup>2</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Holt</surname>
          <given-names>Kathryn E.</given-names>
        </name>
        <xref ref-type="aff" rid="btv383-AFF1">
          <sup>1</sup>
        </xref>
      </contrib>
      <aff id="btv383-AFF1"><sup>1</sup>Department of Biochemistry and Molecular Biology, Bio21 Molecular Science and Biotechnology Institute, University of Melbourne and</aff>
      <aff id="btv383-AFF2"><sup>2</sup>Department of Computing and Information Systems, University of Melbourne, Parkville, Victoria, Australia</aff>
    </contrib-group>
    <author-notes>
      <corresp id="btv383-COR1">*To whom correspondence should be addressed.</corresp>
      <fn id="FN100">
        <p>Associate Editor: John Hancock</p>
      </fn>
    </author-notes>
    <pub-date pub-type="ppub">
      <day>15</day>
      <month>10</month>
      <year>2015</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>22</day>
      <month>6</month>
      <year>2015</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>22</day>
      <month>6</month>
      <year>2015</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the
							<pub-date pub-type="epub"/>. -->
    <volume>31</volume>
    <issue>20</issue>
    <fpage>3350</fpage>
    <lpage>3352</lpage>
    <history>
      <date date-type="received">
        <day>20</day>
        <month>4</month>
        <year>2015</year>
      </date>
      <date date-type="rev-recd">
        <day>29</day>
        <month>5</month>
        <year>2015</year>
      </date>
      <date date-type="accepted">
        <day>15</day>
        <month>6</month>
        <year>2015</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author 2015. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2015</copyright-year>
      <license xlink:href="http://creativecommons.org/licenses/by/4.0/" license-type="creative-commons">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <abstract>
      <p><bold>Summary:</bold> Although <italic>de novo</italic> assembly graphs contain assembled contigs (nodes), the connections between those contigs (edges) are difficult for users to access. Bandage (a Bioinformatics Application for Navigating <italic>De novo</italic> Assembly Graphs Easily) is a tool for visualizing assembly graphs with connections. Users can zoom in to specific areas of the graph and interact with it by moving nodes, adding labels, changing colors and extracting sequences. BLAST searches can be performed within the Bandage graphical user interface and the hits are displayed as highlights in the graph. By displaying connections between contigs, Bandage presents new possibilities for analyzing <italic>de novo</italic> assemblies that are not possible through investigation of contigs alone.</p>
      <p><bold>Availability and implementation:</bold> Source code and binaries are freely available at <ext-link ext-link-type="uri" xlink:href="https://github.com/rrwick/Bandage">https://github.com/rrwick/Bandage</ext-link>. Bandage is implemented in C++ and supported on Linux, OS X and Windows. A full feature list and screenshots are available at <ext-link ext-link-type="uri" xlink:href="http://rrwick.github.io/Bandage">http://rrwick.github.io/Bandage</ext-link>.</p>
      <p>
        <bold>Contact:</bold>
        <email>rrwick@gmail.com</email>
      </p>
      <p><bold>Supplementary information</bold><bold>:</bold><ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv383/-/DC1">Supplementary data</ext-link> are available at <italic>Bioinformatics</italic> online.</p>
    </abstract>
    <counts>
      <page-count count="3"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Current <italic>de novo</italic> genome assemblers use graphs, most typically a de Bruijn graph. An ideal graph would contain one distinct path for each underlying sequence, but complexities such as repeated sequences usually prevent this. Instead, assembly graphs contain branching structures, where one node may lead into multiple others. The longest sequences in the graph that can be determined unambiguously are saved as contigs, which are often the final result of <italic>de novo</italic> assembly (<xref rid="btv383-B5" ref-type="bibr">Schatz <italic>et al</italic>., 2010</xref>). However, an assembly graph contains more information because it also has connections between sequences. It can therefore be advantageous to work with assembly graphs instead of contigs.</p>
    <p>Bandage facilitates interaction with de Bruijn graphs made by <italic>de novo</italic> assemblers such as Velvet (<xref rid="btv383-B7" ref-type="bibr">Zerbino and Birney, 2008</xref>), SPAdes (<xref rid="btv383-B1" ref-type="bibr">Bankevich <italic>et al</italic>., 2012</xref>) and Trinity (<xref rid="btv383-B3" ref-type="bibr">Grabherr <italic>et al</italic>., 2011</xref>). It displays the graph in a graphical user interface (GUI) using a simple, comprehensible representation. The program is interactive, allowing users to zoom, pan and manually move nodes to focus on areas of interest.</p>
  </sec>
  <sec>
    <title>2 Implementation and performance</title>
    <p>Bandage is a GUI application written in C++ with Qt, giving it speed, memory efficiency and cross-platform portability. It runs on Linux, OS X and Windows. The Open Graph Drawing Framework library (<ext-link ext-link-type="uri" xlink:href="http://www.ogdf.net/">http://www.ogdf.net/</ext-link>) is used to perform the graph layout using the fast multipole multilevel layout algorithm, which scales well for very large graphs (<xref rid="btv383-B4" ref-type="bibr">Hachul and Jünger, 2007</xref>).</p>
    <p>On a 3 GHz laptop, Bandage can load and display the <italic>de novo</italic> assembly graph for a bacterial genome (5 Mb) in a few seconds, using &lt;100 MB of RAM. A large graph with hundreds of thousands of nodes, such a metagenome assembly (100 Mb or more), may take minutes and multiple gigabytes of RAM to display in its entirety, but the visualization can be limited to smaller regions of the graph to improve performance and reduce memory requirements.</p>
  </sec>
  <sec>
    <title>3 Features and case studies using Illumina 100 bp paired end reads</title>
    <p>A full feature list and program screenshots are available in the Supplementary Material.</p>
    <sec>
      <title>3.1 Assembly quality and completion</title>
      <p>Assemblies of whole genomes can be difficult to complete if repeated sequences occur in chromosomes or plasmids. Repeated sequences cause distinctive structures in the assembly graph, limiting contig length. Bandage’s visualization of the assembly graph makes it easy to identify such problematic parts of assemblies (<xref ref-type="fig" rid="btv383-F1">Fig. 1</xref>a). In some cases, it is possible to manually resolve these ambiguities by using additional information not available to the assembler. Bandage facilitates this by allowing users to copy sequences directly from the graph visualization. In other cases, ambiguities cannot be resolved and the assembly cannot be completed. For these situations, Bandage provides a clear illustration of the assembly’s incompleteness and comparison of one assembly’s quality to another.
<fig id="btv383-F1" orientation="portrait" position="float"><label>Fig. 1.</label><caption><p>Examples of Bandage visualization (<bold>a</bold>) Left, ideal bacterial assembly (single contig); right, poor assembly with many short contigs. (<bold>b</bold>) Left, zoomed-in view of Salmonella assembly; repeated sequences (blaTEM and insertion sequence) appear as single nodes with multiple inputs and outputs. Node widths are scaled by read coverage (depth). Right, underlying gene structure deduced from Bandage visualization. (<bold>c</bold>) 16S rRNA region of a bacterial genome assembly graph, highlighted by Bandage’s integrated BLAST search. Nodes are labelled with their ID numbers and their widths are scaled by coverage. Even though the 16S gene failed to assemble into a single node, the user can manually reconstruct a complete dominant gene sequence from this succession of nodes: 175, 176, 64, 65 and 190</p></caption><graphic xlink:href="btv383f1p"/></fig>
</p>
    </sec>
    <sec>
      <title>3.2 Resolving a complex antibiotic resistance region</title>
      <p>Whole genome sequencing is frequently used to investigate evolution and transmission of bacterial pathogens and the mobile genetic elements responsible for antibiotic resistance. In this case study, multiple strains of <italic>Salmonella enterica</italic> were sequenced to determine the composition of their <italic>Salmonella</italic> genomic island (SGI), which can confer antibiotic resistance. The assembly of the SGI was complicated by sequences that were shared between the SGI, plasmids and a cloning vector used in the preparation of libraries for sequencing, making the contigs of limited use.</p>
      <p>With Bandage, the user could search for nodes of interest (resistance genes or known SGI sequences) and zoom in to deeply investigate those areas of the graph. By showing the graph edges, Bandage makes clear which contigs are connected, their directionality and therefore which sequences are likely to be contiguous (<xref ref-type="fig" rid="btv383-F1">Fig. 1</xref>b). For many <italic>Salmonella</italic> strains, this allowed for determination that a gene of interest was or was not contained in the SGI, even when other methods were inconclusive.</p>
    </sec>
    <sec>
      <title>3.3 16S sequence from a bacterial assembly</title>
      <p>16S rRNA sequences are commonly used for classification of bacteria, but this is complicated by the fact that a single bacterial genome may contain multiple distinct copies of the 16S gene (<xref rid="btv383-B6" ref-type="bibr">Vĕtrovský and Baldrian, 2013</xref>). Some regions of the gene are highly conserved while others regions are variable, potentially disrupting its <italic>de novo</italic> assembly.</p>
      <p>In this case study, the user sequenced a bacterial isolate with whole genome shotgun sequencing and assembled the reads with Velvet v1.2.10 (<xref rid="btv383-B7" ref-type="bibr">Zerbino and Birney, 2008</xref>). Bandage’s BLAST integration highlighted the 16S gene in the assembly graph (<xref rid="btv383-B2" ref-type="bibr">Camacho <italic>et al</italic>., 2009</xref>). It did not assemble completely, and fragments of the gene were present in seven different nodes (<xref ref-type="fig" rid="btv383-F1">Fig. 1</xref>c). Consequently, the longest available 16S sequence in the contigs file was 909 bp and only partially covered the gene.</p>
      <p>By illustrating graph connections and node coverage, Bandage made it clear which path represents the gene’s most abundant copy. The user was then able to extract node sequences from Bandage to manually reconstruct a 1535 bp sequence containing an entire 16S gene.</p>
    </sec>
  </sec>
  <sec>
    <title>4 Conclusion</title>
    <p>By visualizing both nodes and edges, Bandage gives users easy, fast access to the connection information contained in assembly graphs. This is particularly useful when the assembly contains many short contigs—as is often the case when assembling short reads—and empowers users to examine and assess their assembly graphs in greater detail than when viewing contigs alone.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="PMC_1" content-type="local-data">
      <caption>
        <title>Supplementary Data</title>
      </caption>
      <media mimetype="text" mime-subtype="html" xlink:href="supp_31_20_3350__index.html"/>
      <media xlink:role="associated-file" mimetype="application" mime-subtype="pdf" xlink:href="supp_btv383_Bandage_supplementary_material.pdf"/>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack>
    <title>Acknowledgements</title>
    <p>I am grateful to both Simon Gladman and Jane Hawkey for their testing and feedback during Bandage’s development.</p>
    <p><italic>Conflict of Interest</italic>: none declared.</p>
  </ack>
  <ref-list>
    <title>References</title>
    <ref id="btv383-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bankevich</surname><given-names>A.</given-names></name><etal/></person-group> (<year>2012</year>) <article-title>SPAdes: a new genome assembly algorithm and its applications to single-cell sequencing</article-title>. <source>J. Comput. Biol.</source>, <volume>19</volume>, <fpage>455</fpage>–<lpage>477</lpage>.<pub-id pub-id-type="pmid">22506599</pub-id></mixed-citation>
    </ref>
    <ref id="btv383-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Camacho</surname><given-names>C.</given-names></name><etal/></person-group> (<year>2009</year>) <article-title>BLAST+: architecture and applications</article-title>. <source>BMC Bioinformatics</source>, <volume>10</volume>, <fpage>421</fpage>.<pub-id pub-id-type="pmid">20003500</pub-id></mixed-citation>
    </ref>
    <ref id="btv383-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Grabherr</surname><given-names>M.G.</given-names></name><etal/></person-group> (<year>2011</year>) <article-title>Full-length transcriptome assembly from RNA-Seq data without a reference genome</article-title>. <source>Nat. Biotechnol.</source>, <volume>29</volume>, <fpage>644</fpage>–<lpage>652</lpage>.<pub-id pub-id-type="pmid">21572440</pub-id></mixed-citation>
    </ref>
    <ref id="btv383-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hachul</surname><given-names>S.</given-names></name><name><surname>Jünger</surname><given-names>M.</given-names></name></person-group> (<year>2007</year>) <article-title>Large-graph layout algorithms at work: an experimental study</article-title>. <source>J. Graph Algorithms Appl.</source>, <volume>11</volume>, <fpage>345</fpage>–<lpage>369</lpage>.</mixed-citation>
    </ref>
    <ref id="btv383-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Schatz</surname><given-names>M.C.</given-names></name><etal/></person-group> (<year>2010</year>) <article-title>Assembly of large genomes using second-generation sequencing</article-title>. <source>Genome Res.</source>, <volume>20</volume>, <fpage>1165</fpage>–<lpage>1173</lpage>.<pub-id pub-id-type="pmid">20508146</pub-id></mixed-citation>
    </ref>
    <ref id="btv383-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Vĕtrovský</surname><given-names>T.</given-names></name><name><surname>Baldrian</surname><given-names>P.</given-names></name></person-group> (<year>2013</year>) <article-title>The variability of the 16S rRNA gene in bacterial genomes and its consequences for bacterial community analyses</article-title>. <source>PLoS One</source>, <volume>8</volume>, <fpage>e57923</fpage>.<pub-id pub-id-type="pmid">23460914</pub-id></mixed-citation>
    </ref>
    <ref id="btv383-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zerbino</surname><given-names>D.R.</given-names></name><name><surname>Birney</surname><given-names>E.</given-names></name></person-group> (<year>2008</year>) <article-title>Velvet: algorithms for de novo short read assembly using de Bruijn graphs</article-title>. <source>Genome Res.</source>, <volume>18</volume>, <fpage>821</fpage>–<lpage>829</lpage>.<pub-id pub-id-type="pmid">18349386</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

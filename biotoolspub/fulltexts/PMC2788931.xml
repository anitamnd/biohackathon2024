<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v2.3 20070202//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName journalpublishing.dtd?>
<?SourceDTD.Version 2.3?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-id journal-id-type="hwp">bioinfo</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">2788931</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btp593</article-id>
    <article-id pub-id-type="publisher-id">btp593</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Original Papers</subject>
        <subj-group>
          <subject>Sequence analysis</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Significant speedup of database searches with HMMs by search space reduction with PSSM family models</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Beckstette</surname>
          <given-names>Michael</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>1</sup>
        </xref>
        <xref ref-type="corresp" rid="COR1">*</xref>
        <xref ref-type="author-notes" rid="FN1">
          <sup>†</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Homann</surname>
          <given-names>Robert</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>2</sup>
        </xref>
        <xref ref-type="aff" rid="AFF1">
          <sup>3</sup>
        </xref>
        <xref ref-type="author-notes" rid="FN1">
          <sup>†</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Giegerich</surname>
          <given-names>Robert</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>3</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Kurtz</surname>
          <given-names>Stefan</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>1</sup>
        </xref>
      </contrib>
    </contrib-group>
    <aff id="AFF1"><sup>1</sup>Center for Bioinformatics, University of Hamburg, Bundesstrasse 43, 20146 Hamburgm, <sup>2</sup>International NRW Graduate School in Bioinformatics and Genome Research, Center for Biotechnology (CeBiTec), Bielefeld University, 33594 Bielefeld and <sup>3</sup>Group for Practical Computer Science, Technische Fakultät, Bielefeld University, Postfach 100 131, 33501 Bielefeld, Germany</aff>
    <author-notes>
      <corresp id="COR1">*To whom correspondence should be addressed.</corresp>
      <fn id="FN1">
        <p><sup>†</sup>The authors wish it to be known that, in their opinion, the first two authors should be regarded as joint First Authors.</p>
      </fn>
      <fn>
        <p>Associate Editor: Burkhard Rost</p>
      </fn>
    </author-notes>
    <pub-date pub-type="ppub">
      <day>15</day>
      <month>12</month>
      <year>2009</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>14</day>
      <month>10</month>
      <year>2009</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>14</day>
      <month>10</month>
      <year>2009</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the
							<pub-date pub-type="epub"/>. -->
    <volume>25</volume>
    <issue>24</issue>
    <fpage>3251</fpage>
    <lpage>3258</lpage>
    <history>
      <date date-type="received">
        <day>10</day>
        <month>6</month>
        <year>2009</year>
      </date>
      <date date-type="rev-recd">
        <day>2</day>
        <month>10</month>
        <year>2009</year>
      </date>
      <date date-type="accepted">
        <day>9</day>
        <month>10</month>
        <year>2009</year>
      </date>
    </history>
    <permissions>
      <license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by-nc/2.0/uk/">
        <license-p><!--CREATIVE COMMONS-->This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by-nc/2.5/uk/">http://creativecommons.org/licenses/by-nc/2.5/uk/</ext-link>) which permits unrestricted non-commercial use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <abstract>
      <p><bold>Motivation:</bold> Profile hidden Markov models (pHMMs) are currently the most popular modeling concept for protein families. They provide sensitive family descriptors, and sequence database searching with pHMMs has become a standard task in today's genome annotation pipelines. On the downside, searching with pHMMs is computationally expensive.</p>
      <p><bold>Results:</bold> We propose a new method for efficient protein family classification and for speeding up database searches with pHMMs as is necessary for large-scale analysis scenarios. We employ simpler models of protein families called position-specific scoring matrices family models (PSSM-FMs). For fast database search, we combine full-text indexing, efficient exact <italic>p</italic>-value computation of PSSM match scores and fast fragment chaining. The resulting method is well suited to prefilter the set of sequences to be searched for subsequent database searches with pHMMs. We achieved a classification performance only marginally inferior to <italic>hmmsearch</italic>, yet, results could be obtained in a fraction of runtime with a speedup of &gt;64-fold. In experiments addressing the method's ability to prefilter the sequence space for subsequent database searches with pHMMs, our method reduces the number of sequences to be searched with <italic>hmmsearch</italic> to only 0.80% of all sequences. The filter is very fast and leads to a total speedup of factor 43 over the unfiltered search, while retaining &gt;99.5% of the original results. In a lossless filter setup for <italic>hmmsearch</italic> on UniProtKB/Swiss-Prot, we observed a speedup of factor 92.</p>
      <p><bold>Availability:</bold> The presented algorithms are implemented in the program <italic>PoSSuMsearch2</italic>, available for download at <ext-link ext-link-type="uri" xlink:href="http://bibiserv.techfak.uni-bielefeld.de/possumsearch2/">http://bibiserv.techfak.uni-bielefeld.de/possumsearch2/</ext-link>.</p>
      <p>
        <bold>Contact:</bold>
        <email>beckstette@zbh.uni-hamburg.de</email>
      </p>
      <p><bold>Supplementary information:</bold><ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/cgi/content/full/btp593/DC1">Supplementary data</ext-link> are available at <italic>Bioinformatics</italic> online.</p>
    </abstract>
  </article-meta>
</front>
<body>
  <sec sec-type="intro" id="SEC1">
    <title>1 INTRODUCTION</title>
    <p>Profile hidden Markov models (pHMMs) are currently the most popular modeling concept for protein families. They provide very sensitive family descriptors, and sequence database searching with models from major pHMM collections (Finn <italic>et al</italic>., <xref ref-type="bibr" rid="B7">2006</xref>; Haft <italic>et al</italic>., <xref ref-type="bibr" rid="B11">2003</xref>) has become a standard task in sequence analysis. On the downside, database searching with pHMMs with well-known programs like <italic>hmmsearch</italic> or <italic>hmmpfam</italic> (Eddy, <xref ref-type="bibr" rid="B6">1998</xref>) is computationally expensive. In particular, the long running times of pHMM-based methods and the time scaling behavior, which is linear in the length of the searched sequence, make them more and more demanding in today's sequence database search scenarios. This problem will become even more severe as the continuing exponential growth of sequence databases will certainly be amplified by the increasing dispersal of next-generation sequencing technologies (Shendure and Ji, <xref ref-type="bibr" rid="B32">2008</xref>). Nevertheless, pHMM-based database searches are indispensable for today's genome annotation pipelines. For instance, the majority of member databases of the InterPro classification system (Hunter <italic>et al</italic>., <xref ref-type="bibr" rid="B16">2009</xref>), a widely used system for protein annotation purposes, employ family information in form of pHMMs. The applied classification procedure <italic>InterProScan</italic> (Quevillon <italic>et al</italic>., <xref ref-type="bibr" rid="B28">2005</xref>) includes searches with all pHMMs from the <monospace>Pfam</monospace> (Finn <italic>et al</italic>., <xref ref-type="bibr" rid="B7">2006</xref>), <monospace>TIGRFAM</monospace> (Haft <italic>et al</italic>., <xref ref-type="bibr" rid="B11">2003</xref>), <monospace>Superfamily</monospace> (Gough <italic>et al</italic>., <xref ref-type="bibr" rid="B9">2001</xref>), <monospace>PIRSF</monospace> (Wu <italic>et al</italic>., <xref ref-type="bibr" rid="B38">2004</xref>), <monospace>Gene3D</monospace> (Yeats <italic>et al</italic>., <xref ref-type="bibr" rid="B41">2006</xref>), <monospace>Smart</monospace> (Letunic <italic>et al</italic>., <xref ref-type="bibr" rid="B20">2006</xref>) and <monospace>Panther</monospace> (Mi <italic>et al</italic>., <xref ref-type="bibr" rid="B26">2005</xref>) databases. These pHMM-based database searches render <italic>InterProScan</italic> a very compute intensive application whose employment on a large scale is challenging even on the largest cluster systems.</p>
    <p>To solve this dilemma, much effort has been spent on improving the running time of pHMM-based database search tools. Some approaches for improvement use parallelism techniques and/or fast, extended, CPU-specific instructions sets, like SSE/SSE2 (Streaming Single Instruction/Multiple Data Extensions) (Walters <italic>et al</italic>., <xref ref-type="bibr" rid="B37">2006</xref>). Hardware solutions implementing proprietary variants of <italic>hmmsearch</italic> on special field- programmable gate array (FPGA) boards are also available. Moreover, the application of machine learning techniques has been suggested (Lingner and Meinicke, <xref ref-type="bibr" rid="B21">2008a</xref>, <xref ref-type="bibr" rid="B22">b</xref>). Very recently, Sun and Buhler (<xref ref-type="bibr" rid="B34">2009</xref>) described the design of patterns and profiles for speeding up <italic>hmmsearch</italic> using unordered sets of motifs in form of PROSITE-like patterns or position-specific scoring matrices (PSSMs) derived from a multiple alignment of a protein family. These motifs are then searched with standard regular expression matching and profile searching algorithms, respectively, to prefilter the search space for subsequent application of <italic>hmmsearch</italic>. The reported speedups over unfiltered search are in the range of 20-fold with almost 100% sensitivity and 30- to 40-fold with 90% sensitivity.</p>
    <p>We propose a new software-based method well suited: (i) for efficient and reliable protein family classification, and (ii) to speedup database searches with <italic>hmmsearch</italic>. Our approach employs a simpler model of protein families based on PSSMs in combination with exact <italic>p</italic>-value computation using lazy evaluation and full text indexing with enhanced suffix arrays (Abouelhoda <italic>et al</italic>., <xref ref-type="bibr" rid="B2">2004</xref>) to filter the search space for subsequent database searches with pHMMs corresponding to these families. The work is an extension of our PSSM search tool <italic>PoSSuMsearch</italic> (Beckstette <italic>et al</italic>., <xref ref-type="bibr" rid="B5">2006</xref>), so we briefly describe previous work on index-based PSSM matching and efficient <italic>p</italic>-value computation for PSSM matchscores (<xref ref-type="sec" rid="SEC2.2">Sections 2.2</xref> and <xref ref-type="sec" rid="SEC2.3">2.3</xref>) before describing the new concepts and algorithms used in the new version of <italic>PoSSuMsearch</italic> (<xref ref-type="sec" rid="SEC2.4">Sections 2.4</xref>–<xref ref-type="sec" rid="SEC2.6">2.6</xref>), herein after referred to as <italic>PoSSuMsearch2</italic>.</p>
  </sec>
  <sec sec-type="methods" id="SEC2">
    <title>2 METHODS</title>
    <sec id="SEC2.1">
      <title>2.1 Preliminaries</title>
      <p>Let <italic>S</italic> be a sequence of length <italic>n</italic> over finite alphabet 𝒜, and let <italic>S</italic>[<italic>i</italic>..<italic>j</italic>], 0≤<italic>i</italic>≤<italic>j</italic>≤<italic>n</italic> − 1, denote the substring of <italic>S</italic> of length <italic>j</italic> − <italic>i</italic> + 1 starting at position <italic>i</italic> and ending at (including) position <italic>j</italic>.</p>
      <p>Let $ be a symbol in 𝒜, larger than all other symbols, which does not occur in <italic>S</italic>. The suffix array <monospace>suf</monospace> is a table of integers in the range 0–<italic>n</italic> that lists the starting positions of all <italic>n</italic> + 1 suffixes of <italic>S</italic>$ in lexicographical order (symbol $ must be appended to <italic>S</italic> to obtain a well-defined order on suffixes). That is, <italic>S</italic><sub><monospace>suf</monospace>[0]</sub>, <italic>S</italic><sub><monospace>suf</monospace>[1]</sub>,…, <italic>S</italic><sub><monospace>suf</monospace>[<italic>n</italic>]</sub> is the sequence of suffixes of <italic>S</italic>$ in ascending lexicographic order, where <italic>S</italic><sub><italic>i</italic></sub> = <italic>S</italic>[<italic>i</italic>..<italic>n</italic> − 1]$ denotes the <italic>i</italic>-th non-empty suffix of the string <italic>S</italic>$, for <italic>i</italic> ∈[0, <italic>n</italic>]. <monospace>lcp</monospace> is a table in the range 0–<italic>n</italic> such that <monospace>lcp</monospace>[0]≔0 and <monospace>lcp</monospace>[<italic>i</italic>] is the length of the longest common prefix of <italic>S</italic><sub><monospace>suf</monospace>[<italic>i</italic>−1]</sub> and <italic>S</italic><sub><monospace>suf</monospace>[<italic>i</italic>]</sub>, for <italic>i</italic> ∈[1, <italic>n</italic>]. <monospace>skp</monospace> is a table in the range 0–<italic>n</italic> such that <monospace>skp</monospace>[<italic>i</italic>]≔min({<italic>n</italic>+1}∪{<italic>j</italic>∈[<italic>i</italic>+1, <italic>n</italic>]∣<monospace>lcp</monospace>[<italic>i</italic>]&gt;<monospace>lcp</monospace>[<italic>j</italic>]}). In terms of suffix trees, <monospace>skp</monospace>[<italic>i</italic>] denotes the lexicographically next leaf that does not occur in the subtree below the branching node corresponding to the longest common prefix of <italic>S</italic><sub><monospace>suf</monospace>[<italic>i</italic>−1]</sub> and <italic>S</italic><sub><monospace>suf</monospace>[<italic>i</italic>]</sub>. Tables <monospace>lcp</monospace> and <monospace>skp</monospace> can be computed as a by-product during the construction of suffix array <monospace>suf</monospace>, and enhance the basic suffix array. All three tables can be computed in linear time (Kärkkäinen and Sanders, <xref ref-type="bibr" rid="B17">2003</xref>; Kasai <italic>et al</italic>., <xref ref-type="bibr" rid="B18">2001</xref>). For a linear time construction algorithm for table <monospace>skp</monospace>, see <xref ref-type="fig" rid="F1">Figure 1</xref> in the <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/cgi/content/full/btp593/DC1">Supplementary Material</ext-link>. We refer to the troika of tables <monospace>suf</monospace>, <monospace>lcp</monospace> and <monospace>skp</monospace> as <italic>enhanced suffix array</italic>. See <xref ref-type="fig" rid="F1">Figure 1</xref> for an example.
<fig id="F1" position="float"><label>Fig. 1.</label><caption><p>Enhanced suffix array for <italic>S</italic> = <monospace>tccatcacct</monospace>, consisting of the suffix array <monospace>suf</monospace>, and additional tables <monospace>lcp</monospace> and <monospace>skp</monospace>. The suffixes of <italic>S</italic> are sorted lexicographically (rightmost column).</p></caption><graphic xlink:href="btp593f1"/></fig></p>
      <p>A PSSM is an abstraction of a multiple alignment and is defined as a function <italic>M</italic> : {0,…, <italic>m</italic> − 1} × 𝒜→ℝ, where <italic>m</italic> is the length of <italic>M</italic>, also denoted with |<italic>M</italic>|, and 𝒜 is a finite alphabet. Usually function <italic>M</italic> is given by an <italic>m</italic> × |𝒜| matrix, where each row of the matrix reflects the frequency of occurrence of each amino acid or nucleotide at the corresponding position of the alignment. From now on, let <italic>M</italic> be a PSSM of length <italic>m</italic> and let <italic>w</italic>[<italic>i</italic>] denote the character of <italic>w</italic> at position <italic>i</italic> for 0≤<italic>i</italic>&lt;<italic>m</italic>. The <italic>score range</italic> of a PSSM is the interval [<italic>sc</italic><sub>min</sub>(<italic>M</italic>), <italic>sc</italic><sub>max</sub>(<italic>M</italic>)] with <italic>sc</italic><sub>min</sub>(<italic>M</italic>) ≔ ∑<sub><italic>i</italic>=0</sub><sup><italic>m</italic>−1</sup> min{<italic>M</italic>(<italic>i</italic>, <italic>a</italic>)∣ <italic>a</italic> ∈ 𝒜} and <italic>sc</italic><sub>max</sub>(<italic>M</italic>) ≔ ∑<sub><italic>i</italic>=0</sub><sup><italic>m</italic>−1</sup> max{<italic>M</italic>(<italic>i</italic>, <italic>a</italic>) ∣ <italic>a</italic> ∈ 𝒜}. We define the <italic>match score</italic> for a segment <italic>w</italic> ∈ 𝒜<sup><italic>m</italic></sup> of length <italic>m</italic> of the sequence w.r.t. <italic>M</italic> as <italic>sc</italic>(<italic>w</italic>,<italic>M</italic>)≔∑<sub><italic>i</italic>=0</sub><sup><italic>m</italic>−1</sup> <italic>M</italic>(<italic>i</italic>, <italic>w</italic>[<italic>i</italic>]). We also define <italic>pfxsc</italic><sub><italic>d</italic></sub>(<italic>w</italic>, <italic>M</italic>) ≔ ∑<sub><italic>h</italic>=0</sub><sup><italic>d</italic></sup> <italic>M</italic>(<italic>h</italic>, <italic>w</italic>[<italic>h</italic>]), max<sub><italic>d</italic></sub> ≔ max{<italic>M</italic>(<italic>d</italic>, <italic>a</italic>) ∣ <italic>a</italic> ∈ 𝒜}, σ<sub><italic>d</italic></sub> ≔ ∑<sub><italic>h</italic>=<italic>d</italic>+1</sub><sup><italic>m</italic>−1</sup> max<sub><italic>h</italic></sub> and θ<sub><italic>d</italic></sub> ≔ θ−σ<sub><italic>d</italic></sub> for any <italic>d</italic> ∈[0, <italic>m</italic>−1]). <italic>pfxs</italic><sub><italic>d</italic></sub>(<italic>w</italic>, <italic>M</italic>) is the <italic>prefix score of depth d</italic>. σ<sub><italic>d</italic></sub> is the maximal remainder score that can be achieved in the last <italic>m</italic> − <italic>d</italic> −1 positions of the PSSM and θ<sub><italic>d</italic></sub> the <italic>intermediate threshold</italic> at position <italic>d</italic>. Given a score threshold θ, PSSM <italic>M</italic> is said to match string <italic>w</italic> with threshold θ if and only if <italic>sc</italic>(<italic>w</italic>, <italic>M</italic>)≥θ. Hence, the PSSM matching problem is to find all matching substrings of length <italic>m</italic> in some sequence <italic>S</italic> with their assigned match scores for a given threshold θ and PSSM <italic>M</italic>.</p>
    </sec>
    <sec id="SEC2.2">
      <title>2.2 Fast database searching with single PSSMs</title>
      <sec id="SEC2.2.1">
        <title>2.2.1 Algorithms for finding PSSM matches</title>
        <p>A naive 𝒪(<italic>mn</italic>) time algorithm solving the PSSM matching problem moves a sliding window of size <italic>m</italic> over the text to be searched of length <italic>n</italic> and is implemented in many programs facilitating PSSMs (Henikoff <italic>et al</italic>., <xref ref-type="bibr" rid="B13">2000</xref>; Kel <italic>et al</italic>., <xref ref-type="bibr" rid="B19">2003</xref>; Quandt <italic>et al</italic>., <xref ref-type="bibr" rid="B27">1995</xref>; Scordis <italic>et al</italic>., <xref ref-type="bibr" rid="B31">1999</xref>). Considerable practical speedups can be obtained with the lookahead scoring technique of Wu <italic>et al</italic>. (<xref ref-type="bibr" rid="B40">2000</xref>). It uses the implication <italic>pfxsc</italic><sub><italic>d</italic></sub>(<italic>w</italic>, <italic>M</italic>) &lt; θ<sub><italic>d</italic></sub>⇒<italic>sc</italic>(<italic>w</italic>, <italic>M</italic>) &lt; θ as an early stop criterion for the calculation of <italic>sc</italic>(<italic>w</italic>, <italic>M</italic>). However, lookahead scoring does not improve the theoretical worst case time complexity of the naive algorithm.</p>
      </sec>
      <sec id="SEC2.2.2">
        <title>2.2.2 Index-based searching with PSSMs</title>
        <p>For fast database searching with PSSMs, <italic>PoSSuMsearch2</italic> employs the algorithm <italic>ESAsearch</italic> (Beckstette <italic>et al</italic>., <xref ref-type="bibr" rid="B5">2006</xref>), which in turn makes use of enhanced suffix arrays. To use enhanced for fast database searching with PSSMs, one simulates a depth first traversal of the suffix tree (cf. Abouelhoda <italic>et al</italic>., <xref ref-type="bibr" rid="B2">2004</xref>) by processing the arrays <monospace>suf</monospace> and <monospace>lcp</monospace> from left to right. To incorporate lookahead scoring, the search skips over certain ranges of suffixes in <monospace>suf</monospace> using the information from table <monospace>skp</monospace>. Algorithmic details are given in Beckstette <italic>et al</italic>. (<xref ref-type="bibr" rid="B5">2006</xref>).</p>
        <p>The practical speedup of <italic>ESAsearch</italic> over methods that operate on the plain text is influenced by the choice of threshold θ. The larger the value of θ, the more likely it is to fall short of an intermediate threshold θ<sub><italic>d</italic></sub> on average. This in turn means that the computation of the scores can be stopped earlier and more suffixes can be skipped by utilizing the information stored in tables <monospace>lcp</monospace> and <monospace>skp</monospace>. As shown in Beckstette <italic>et al</italic>. (<xref ref-type="bibr" rid="B5">2006</xref>), the expected runtime of <italic>ESAsearch</italic> is sublinear in the text length, whereas its worst case runtime is 𝒪(<italic>n</italic> + <italic>m</italic>) under the special condition that <italic>n</italic>≥|𝒜|<sup><italic>m</italic></sup> + <italic>m</italic> − 1 holds, independent of the chosen threshold θ. The high speed of <italic>ESAsearch</italic> is the foundation for the speedup of database searches with pHMMs described in the sequel.</p>
      </sec>
    </sec>
    <sec id="SEC2.3">
      <title>2.3 Efficient computation of score thresholds from <italic>p</italic>-values</title>
      <p>To differentiate between match and mismatch, <italic>ESAsearch</italic> requires a score threshold parameter θ. However, PSSM scores are not equally distributed and thus scores of two different PSSMs are not comparable. This makes it difficult to choose a global score cutoff, meaningful for all PSSMs. Individual score cutoffs must be derived from <italic>p</italic>-values. This can be computed by dynamic programming (Rahmann, <xref ref-type="bibr" rid="B29">2003</xref>; Staden, <xref ref-type="bibr" rid="B33">1990</xref>; Wu <italic>et al</italic>., <xref ref-type="bibr" rid="B40">2000</xref>), but is expensive as the complexity depends on the range of possible score values. For arbitrary floating point scores this problem is NP-hard (Touzet and Varré, <xref ref-type="bibr" rid="B36">2007</xref>; Zhang <italic>et al</italic>., <xref ref-type="bibr" rid="B42">2007</xref>). <italic>PoSSuMsearch2</italic> uses the <italic>LazyDistrib</italic> algorithm (Beckstette <italic>et al</italic>., <xref ref-type="bibr" rid="B5">2006</xref>) to speedup the computation of exact <italic>p</italic>-values for given PSSM scores. By lazily computing only the tail of the distribution function, <italic>LazyDistrib</italic> obtains a speedup of more than 300, compared with previous methods based on dynamic programming. For the special case of PSSMs employing floating point scores of several decimal digits, <italic>p</italic>-value computation could be further improved by more than a magnitude using the method of Touzet and Varré (<xref ref-type="bibr" rid="B36">2007</xref>), but this has not yet been integrated in the <italic>PoSSuMsearch</italic> software. Building on these techniques for fast searching of single PSSMs, we now proceed to their generalization to PSSM family models (PSSM-FMs).</p>
    </sec>
    <sec id="SEC2.4">
      <title>2.4 PSSM-FMs</title>
      <p>Let <italic>A</italic>=<italic>A</italic><sub>1</sub>, <italic>A</italic><sub>2</sub>,…, <italic>A</italic><sub><italic>L</italic></sub> be a sequence of non-overlapping alignment blocks. These alignment blocks are excised from a multiple alignment and the indexing from 1 to <italic>L</italic> reflects their order of occurrence in the alignment. See <xref ref-type="fig" rid="F2">Figure 2</xref>A for an example. A PSSM-FM ℳ of length <italic>L</italic> is a sequence of <italic>L</italic> PSSMs ℳ=<italic>M</italic><sub>1</sub>, <italic>M</italic><sub>2</sub>, …, <italic>M</italic><sub><italic>L</italic></sub> where <italic>M</italic><sub><italic>i</italic></sub> denotes the PSSM derived from <italic>A</italic><sub><italic>i</italic></sub>, <italic>i</italic>∈[1, <italic>L</italic>]. The order ≪ of the PSSMs occurring in ℳ is imposed by the order of the corresponding alignment blocks. In practice, ℳ can be obtained from multiple alignments of related protein sequences (i.e. of a protein family). PSSMs can be computed from the blocks by several well-known methods (Gribskov <italic>et al</italic>., <xref ref-type="bibr" rid="B10">1987</xref>; Henikoff and Henikoff, <xref ref-type="bibr" rid="B12">1996</xref>; Tatusov <italic>et al</italic>., <xref ref-type="bibr" rid="B35">1994</xref>). A match to ℳ is a non-overlapping sequence of matches for some or all of the PSSMs in ℳ in their specified order. We will now make this more precise.
<fig id="F2" position="float"><label>Fig. 2.</label><caption><p>(<bold>A</bold>) Non-overlapping alignment blocks, excised from ungapped regions of a multiple alignment. Since <italic>l</italic><sub><italic>i</italic></sub>≤<italic>r</italic><sub><italic>i</italic></sub>&lt;<italic>l</italic><sub><italic>j</italic></sub>≤<italic>r</italic><sub><italic>j</italic></sub> for 1≤<italic>i</italic>≤<italic>j</italic>≤5, <italic>A</italic>=<italic>A</italic><sub>1</sub>, <italic>A</italic><sub>2</sub>, <italic>A</italic><sub>3</sub>, <italic>A</italic><sub>4</sub>, <italic>A</italic><sub>5</sub> is an ordered sequence of non-overlapping alignment blocks suitable to construct a PSSM-FM ℳ=<italic>M</italic><sub>1</sub>, <italic>M</italic><sub>2</sub>, <italic>M</italic><sub>3</sub>, <italic>M</italic><sub>4</sub>, <italic>M</italic><sub>5</sub>. (<bold>B</bold>) Matches of <italic>M</italic><sub><italic>i</italic></sub>, <italic>i</italic>∈[1, 5], on sequence <italic>S</italic>, sorted in ascending order of their start position. (<bold>C</bold>) Graph-based representation of the matches of <italic>M</italic><sub><italic>i</italic></sub>, <italic>i</italic> ∈ [1, 5]. An optimal chain of collinear non-overlapping matches is determined, by computing an optimal path in the directed, acyclic graph. Observe that not all edges in the graph are shown in this example and that the optimal chain (indicated here by their black marked members) is not necessarily the longest possible chain.</p></caption><graphic xlink:href="btp593f2"/></fig></p>
      <p>Consider a PSSM-FM ℳ with total order ≪. Let <italic>MS</italic> be the set of all matches for all <italic>M</italic>∈ℳ in sequence <italic>S</italic> of length <italic>n</italic>. A match is represented by a triple (<italic>M</italic>, <italic>p</italic>, <italic>s</italic>) such that <italic>M</italic> matches at position <italic>p</italic> in <italic>S</italic> and <italic>s</italic>≔<italic>sc</italic>(<italic>S</italic>[<italic>p</italic>..<italic>p</italic>+<italic>m</italic>−1], <italic>M</italic>) is the corresponding match score.</p>
      <p>We say that matches (<italic>M</italic>, <italic>p</italic>, <italic>s</italic>) and (<italic>M</italic>′, <italic>p</italic>′, <italic>s</italic>′) are collinear, written as (<italic>M</italic>, <italic>p</italic>, <italic>s</italic>) ≪ (<italic>M</italic>′, <italic>p</italic>′, <italic>s</italic>′) if <italic>M</italic>≪<italic>M</italic>′ and <italic>p</italic>+|<italic>M</italic>|≤<italic>p</italic>′. A chain 𝒞 for family model ℳ is a sequence of matches
<disp-formula><graphic xlink:href="btp593um1"/></disp-formula>
all from <italic>MS</italic>, such that (<italic>M</italic><sub><italic>i</italic></sub>, <italic>p</italic><sub><italic>i</italic></sub>, <italic>s</italic><sub><italic>i</italic></sub>≪(<italic>M</italic><sub><italic>i</italic>+1</sub>, <italic>p</italic><sub><italic>i</italic>+1</sub>, <italic>s</italic><sub><italic>i</italic>+1</sub>) for all <italic>i</italic>, 1≤<italic>i</italic>≤<italic>k</italic>−1.</p>
      <p>To incorporate a measure of match quality into PSSM-FMs, we associate with (<italic>M</italic>, <italic>p</italic>, <italic>s</italic>) a <italic>p</italic>-value π(<italic>M</italic>, <italic>s</italic>) and a weight α(<italic>M</italic>, <italic>s</italic>) defined by
<disp-formula id="M1"><label>(1)</label><graphic xlink:href="btp593m1"/></disp-formula>
The chain score of a chain 𝒞 is defined by
<disp-formula id="M2"><label>(2)</label><graphic xlink:href="btp593m2"/></disp-formula></p>
      <p>The motivation for Equation (<xref ref-type="disp-formula" rid="M1">1</xref>) is as follows. π≔π(<italic>M</italic>, <italic>s</italic>) is the probability for the event that <italic>M</italic> matches a random string <italic>w</italic> of length <italic>m</italic> = |<italic>M</italic>| for score threshold <italic>s</italic> by chance, i.e. π = ℙ[<italic>sc</italic> (<italic>M</italic>, <italic>w</italic>)≥<italic>s</italic>]. Thus, (1 − π) is the probability for the complementary event that <italic>M</italic> does not match a random string of length <italic>m</italic>, and (1 − π)<sup><italic>n</italic>−<italic>m</italic>+1</sup> is the probability that there is no match in <italic>n</italic> − <italic>m</italic> + 1 random strings. This corresponds to the number of different positions that <italic>M</italic> can actually match in a string of length <italic>n</italic>. Conversely, 1 − (1 − π)<sup><italic>n</italic>−<italic>m</italic>+1</sup> is the probability for the event that there is at least one in <italic>n</italic> − <italic>m</italic> + 1 random strings that matches <italic>M</italic> with a score at least <italic>s</italic>. We take the logarithm to obtain additive weights and divide by ln(<italic>n</italic>) to account for sequence length.</p>
      <p>The smaller the <italic>p</italic>-values of the matches in a chain (i.e. the more significant the matches of single PSSMs <italic>M</italic> are), the larger the fragment weights get, and hence the overall chain score. Consequently, chains that consist of a number of significant matches are assigned larger chain scores than those with fewer, or many less significant matches. Equation (<xref ref-type="disp-formula" rid="M2">2</xref>) implicitly assumes independence of random strings, which is certainly an invalid assumption in our case as the ‘random strings’ are overlapping substrings of some longer sequence. Yet, our experiments confirm our chain scoring to work well in practice; it is significantly better than a more straightforward strategy that simply computes the product of raw <italic>p</italic>-values, i.e. one that sets α(<italic>M</italic>, <italic>s</italic>)=−ln(π(<italic>M</italic>, <italic>s</italic>)) (see <xref ref-type="fig" rid="F2">Fig. 2</xref> in the <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/cgi/content/full/btp593/DC1">Supplementary Material</ext-link>).</p>
    </sec>
    <sec id="SEC2.5">
      <title>2.5 A specialized and improved PSSM chaining method</title>
      <p>Thus far our description was based on a single sequence. However, the results described below are based on a large set of sequences <italic>S</italic><sub>1</sub>,…, <italic>S</italic><sub><italic>k</italic></sub>. To handle these, we concatenate the single sequences with separator symbols, and construct the enhanced suffix array for the concatenation. For a given PSSM-FM ℳ, all <italic>M</italic><sub><italic>i</italic></sub>, 1≤<italic>i</italic>≤<italic>L</italic>, are matched one after the other against the enhanced suffix array. This gives match sets <italic>MS</italic>(<italic>M</italic><sub><italic>i</italic></sub>) for PSSM <italic>M</italic><sub><italic>i</italic></sub>.</p>
      <p>The PSSM chaining problem for a single sequence <italic>S</italic><sub><italic>j</italic></sub> can be considered a chaining problem for pairwise matches between sequence <italic>S</italic><sub><italic>j</italic></sub> and a virtual sequence <italic>V</italic>[1..<italic>L</italic>] such that a match for PSSM <italic>M</italic><sub><italic>i</italic></sub> is a match of length one at position <italic>i</italic> in <italic>V</italic>. The pairwise chaining problem can be solved in <italic>O</italic>(<italic>b</italic>log<italic>b</italic>) time using an algorithm described in Abouelhoda and Ohlebusch (<xref ref-type="bibr" rid="B1">2005</xref>), where <italic>b</italic>=|<italic>MS</italic>(<italic>S</italic><sub><italic>j</italic></sub>)| and <italic>MS</italic>(<italic>S</italic><sub><italic>j</italic></sub>) is the set of PSSM matches in <italic>S</italic><sub><italic>j</italic></sub>. This algorithm is called the general chaining algorithm. For the special case of the PSSM chaining problem, we have specialized and improved the general chaining algorithm to obtain a method with the following advantages:
<list list-type="bullet"><list-item><p>While the general chaining algorithm requires a dictionary data structure with insert, delete, predecessor and successor operations running in logarithmic time (e.g. an AVL-tree or a red-black tree), our approach only needs a linear list, which is much easier to implement and requires less space.</p></list-item><list-item><p>While the general chaining algorithm requires an initial sorting step using <italic>O</italic>(<italic>b</italic>*log<italic>b</italic>*) time, our method only needs <italic>O</italic>(<italic>b</italic>*+∑<sub><italic>j</italic>=1</sub><sup><italic>k</italic></sup>∑<sub><italic>i</italic>=1</sub><sup><italic>L</italic></sup> <italic>b</italic><sub><italic>j</italic>,<italic>i</italic></sub>log<italic>b</italic><sub><italic>j</italic>,<italic>i</italic></sub>) time for this step. Here, <italic>b</italic>* is the total size of all sets <italic>MS</italic>(<italic>M</italic><sub><italic>i</italic></sub>) and <italic>b</italic><sub><italic>j</italic>,<italic>i</italic></sub>=|<italic>MS</italic>(<italic>S</italic><sub><italic>j</italic></sub>, <italic>M</italic><sub><italic>i</italic></sub>)|, where <italic>MS</italic>(<italic>S</italic><sub><italic>j</italic></sub>, <italic>M</italic><sub><italic>i</italic></sub>) is the set of all PSSM matches of PSSM <italic>M</italic><sub><italic>i</italic></sub> in sequence <italic>S</italic><sub><italic>j</italic></sub>.</p></list-item><list-item><p>While the general chaining algorithm solves the chaining problem for <italic>MS</italic>(<italic>S</italic><sub><italic>j</italic></sub>) in <italic>O</italic>(<italic>b</italic>log<italic>b</italic>) time, our method runs in <italic>O</italic>(<italic>b</italic>·<italic>L</italic>) time. If <italic>L</italic> is considered to be a constant, the running time becomes linear in <italic>b</italic>.</p></list-item></list>
The details of the improved chaining method are described in the <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/cgi/content/full/btp593/DC1">Supplementary Material</ext-link>.</p>
    </sec>
    <sec id="SEC2.6">
      <title>2.6 Using PSSM-FMs for sequence classification</title>
      <p>To employ PSSM-FMs for protein family classification, we combine the three algorithms sketched in <xref ref-type="sec" rid="SEC2.2">Sections 2.2</xref>–<xref ref-type="sec" rid="SEC2.5">2.5</xref>. Namely (i) <italic>ESAsearch</italic> for fast searching with single PSSMs; (ii) <italic>LazyDistrib</italic> for exact and efficient <italic>p</italic>-value computation; and (iii) chaining of single PSSM matches in the form of the chaining method sketched in <xref ref-type="sec" rid="SEC2.5">Section 2.5</xref>. All three algorithms are implemented in <italic>PoSSuMsearch2</italic> and, in combination provide, an efficient solution to the problem of protein family classification. In the first phase, <italic>PoSSuMsearch2</italic> computes single PSSM matches for the PSSMs of a family model using algorithm <italic>ESAsearch</italic>. In the second phase, PSSM matches obtained in phase one and their ordering information are used to compute optimal chains of PSSM matches according to the order given in the family model.</p>
      <p>When classifying an unknown protein sequence into a known family, a sequence is searched with several PSSM-FMs, representing different protein families. The classification into a certain family should be based on the quality of the <italic>best</italic> match of a sequence to the corresponding family model. Hence, the objective is to determine the <italic>best</italic> chain 𝒞<sup>*</sup><sub>ℳ,<italic>S</italic></sub> of PSSM matches in a sequence <italic>S</italic> for a given family model ℳ and their chain score
<disp-formula id="M3"><label>(3)</label><graphic xlink:href="btp593m3"/></disp-formula>
<disp-formula id="M4"><label>(4)</label><graphic xlink:href="btp593m4"/></disp-formula>
We call such a chain an <italic>optimal</italic> chain. With the definition of optimal chains and their chain scores, we introduce a quantifiable, rankable criterion of match quality to our PSSM-FM concept, making it applicable for sequence classification. More precisely, let <italic>S</italic> be a sequence and ℱ = {ℳ<sub>1</sub>, ℳ<sub>2</sub>,…, ℳ<sub><italic>T</italic></sub>} be a collection of <italic>T</italic> PSSM-FMs, representing <italic>T</italic> distinct protein families. Further, let <italic>csc</italic><sup>*</sup><sub>ℱ,<italic>S</italic></sub>≔max{<italic>csc</italic><sup>*</sup><sub>ℳ<sub><italic>i</italic></sub>,<italic>S</italic></sub>∣ℳ<sub><italic>i</italic></sub>∈ℱ} be the maximal score of all optimal chains in <italic>S</italic> over all family models in ℱ. We classify <italic>S</italic> into the family represented by ℳ∈ℱ if and only if <italic>csc</italic><sup>*</sup><sub>ℱ,<italic>S</italic></sub>=<italic>csc</italic><sup>*</sup><sub>ℳ,<italic>S</italic></sub>. That is, we classify the sequence under consideration into the family whose family model generates the highest scoring optimal chain. In practice, it is often useful to employ a threshold constraint, like a minimal necessary chain length, as a lower boundary for classification. That is, sequences not satisfying this constraint are not classified.</p>
      <p><italic>PoSSuMsearch2</italic> can be used in two modes of operation:
<list list-type="bullet"><list-item><p>Mode <italic>modsearch</italic> allows sequence classification based on a, typically small, library of PSSM-FMs. For each sequence the best matching chains for (up to) <italic>k</italic> different family models are reported.</p></list-item><list-item><p>Mode <italic>seqclass</italic> allows sequence classification based on a, typically large, library of PSSM-FMs. For each model, the best matching chains in (up to) <italic>k</italic> different sequences are reported.</p></list-item></list>
</p>
      <p>Hence, mode <italic>modsearch</italic> mimics the <italic>modus operandi</italic> of program <italic>hmmsearch</italic>, whereas mode <italic>seqclass</italic> is comparable with program <italic>hmmpfam</italic>.</p>
    </sec>
  </sec>
  <sec sec-type="results" id="SEC3">
    <title>3 RESULTS</title>
    <sec id="SEC3.1">
      <title>3.1 PSSM-FMs for protein classification</title>
      <p>Detection of protein families in large databases is one of the principal research objectives in structural and functional genomics. To evaluate the suitability of <italic>PoSSuMsearch2</italic> employing PSSM-FMs for fast and accurate protein family classification, we rigorously tested and validated our method using the evaluation system Phase4 (Rehmsmeier, <xref ref-type="bibr" rid="B30">2002</xref>). We evaluated the sensitivity and specificity, addressing different database search scenarios at different levels of difficulty. That is, we measured our method's ability to detect (A) very close, (B) close and (C) distant sequence relationships and compared the obtained results with those gained by the HMM-based <italic>hmmsearch</italic> from the <italic>HMMER</italic> package, which marks the state-of-the-art in this field. For the evaluation, separated training and test sets (i.e. the sets that define the true positives) were created from the <monospace>SCOP</monospace> database (Andreeva <italic>et al</italic>., <xref ref-type="bibr" rid="B4">2008</xref>). <monospace>SCOP</monospace> contains protein sequences classified into families, superfamilies, folds and classes, depending on their structural relationships. To minimize the influence of redundancies on the results of our experiments, we used the non-redundant <italic>PDB90</italic> subset of <monospace>SCOP</monospace> (Rel. 1.75), which contains sequences with pairwise homology of at most 90%. This subset consists of a total of 15 440 amino acid sequences classified into 3890 families and 1955 superfamilies.</p>
      <sec id="SEC3.1.1">
        <title>3.1.1 Model construction and scoring</title>
        <p>The three scenarios used for our evaluations differ in how training and test sets are constructed from <monospace>SCOP</monospace> data. <xref ref-type="table" rid="T1">Table 1</xref> and <xref ref-type="fig" rid="F3">Figure 3</xref> give more details on the three scenarios. The task of the searching program in each case is to find, preferably, only protein sequences from the test sets in the whole <monospace>SCOP</monospace> database, while only providing the corresponding training sets to the searching program. That is, a perfect searching method would always find exactly the set of true positives, which is the test set.
<fig id="F3" position="float"><label>Fig. 3.</label><caption><p>Construction of training and test sets for (<bold>A</bold>) very close, (<bold>B</bold>) close and (<bold>C</bold>) distant relationships.</p></caption><graphic xlink:href="btp593f3"/></fig>
<table-wrap id="T1" position="float"><label>Table 1.</label><caption><p>Evaluation scenarios and number of models used in the experiments to assess method sensitivity and specificity</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th align="left" rowspan="1" colspan="1">Scenario (#models)</th><th align="left" rowspan="1" colspan="1">Description</th></tr></thead><tbody align="left"><tr><td align="left" rowspan="1" colspan="1">(A) Very close relationship (561)</td><td align="left" rowspan="1" colspan="1">For each superfamily: for each family, half of its sequences are chosen as test sequences, and the remaining ones are chosen as training sequences. The sequences of the surrounding superfamily are ignored in the evaluation.</td></tr><tr><td align="left" rowspan="1" colspan="1">(B) Close relationship (474)</td><td align="left" rowspan="1" colspan="1">For each superfamily, half of the sequences of each of its families are chosen as training sequences and the remaining ones are chosen as test sequences.</td></tr><tr><td align="left" rowspan="1" colspan="1">(C) Distant relationship (1221)</td><td align="left" rowspan="1" colspan="1">From a superfamily, each family in turn is chosen to provide the test sequences. The remaining families within that superfamily provide the training sequences.</td></tr></tbody></table></table-wrap>
</p>
        <p>Since some superfamilies in <monospace>SCOP</monospace> contain only one family and some families are very small, we employed the following criteria to select superfamilies and families for evaluation. Only superfamilies comprised of at least two families were selected. From these superfamilies, families were chosen to be test families, if both, the family itself and the remainder of the superfamily contained at least five sequences. The resulting numbers of families employed in each evaluation scenario are given in <xref ref-type="table" rid="T1">Table 1</xref>. From each training set we constructed a PSSM-FM for use with <italic>PoSSuMsearch2</italic> and a pHMM for <italic>hmmsearch</italic>, respectively. With these models, we subsequently searched the sequences in the corresponding test set. Both model types are derived from a multiple alignment, which we compute from each training set using <italic>CLUSTAL W</italic> (Higgins <italic>et al</italic>., <xref ref-type="bibr" rid="B15">1994</xref>) with default parameters. To construct PSSM-FMs, we excised from the multiple alignments all blocks of width 6–12, favoring wider blocks and allowing at most 20% gaps per column inside a block. For this task, we used the <italic>BLOCKMAKER</italic> program from the <italic>BLIMPS</italic> distribution (Henikoff <italic>et al</italic>., <xref ref-type="bibr" rid="B14">1995</xref>). We retained the block order and computed from the blocks log-odd score-based PSSMs with the method of Henikoff and Henikoff (<xref ref-type="bibr" rid="B12">1996</xref>). For this, we estimated residue probabilities of observing a certain residue in a column of the alignment block from relative frequencies. From the same multiple alignments, calibrated pHMMs for disposition with <italic>hmmsearch</italic> were computed using <italic>hmmbuild</italic> and <italic>hmmcalibrate</italic> (<italic>HMMER</italic> package version 2.3.1, using the programs' default parameters). Thus, the so computed PSSM-FMs and pHMMs are descriptors for their respective training sets and serve as input for a database search with <italic>PoSSuMsearch2</italic> and <italic>hmmsearch</italic>, respectively. In these searches, thresholds were set in a very relaxed way (for <italic>hmmsearch</italic> <italic>E</italic>-value cutoff 10 and for <italic>PoSSuMsearch2</italic> single PSSM <italic>p</italic>-value cutoff of 0.1) so that all sequences irrespective of their score are reported. Matches to a model were ranked by their method-specific scores in descending order, i.e. in case of <italic>PoSSuMsearch2</italic> the best chain score <italic>csc</italic><sup>*</sup><sub>ℳ,<italic>S</italic></sub>, and in case of <italic>hmmsearch</italic> the sequence classification score.</p>
      </sec>
      <sec id="SEC3.1.2">
        <title>3.1.2 Assessment of sensitivity and specificity</title>
        <p>To assess the sensitivity and specificity of our PSSM-FM approach and to compare the classification accuracy with <italic>hmmsearch</italic> in the three different evaluation scenarios, we determined the percentage of true positives in all test sets (also called the <italic>coverage</italic>) that is achieved by the method when accepting different counts of false positives. We plotted the (accepted) false positive counts versus the average percent coverage. See <xref ref-type="fig" rid="F4">Figure 4</xref>.
<fig id="F4" position="float"><label>Fig. 4.</label><caption><p>Classification performance of <italic>PoSSuMsearch2</italic> using PSSM-FMs versus <italic>hmmsearch</italic> using pHMMs in the three evaluation scenarios. Shown are percentage true positives values averaged over all test families, called the average percent coverage value or just coverage for short (<italic>y</italic>-axis), for different numbers of accepted false positives (<italic>x</italic>-axis).</p></caption><graphic xlink:href="btp593f4"/></fig></p>
      </sec>
      <sec id="SEC3.1.3">
        <title>3.1.3 Comparison of runtime and scalability</title>
        <p>All benchmark experiments described in this article were performed on a single Intel Xeon CPU running at 2.3 GHz. For runtime experiments, we took the first 100 protein families from the <monospace>Pfam</monospace> Rel. 23.0 database (Finn <italic>et al</italic>., <xref ref-type="bibr" rid="B8">2008</xref>), and computed PSSM-FMs from the <monospace>Pfam</monospace> seed alignments by excising alignment blocks as described above, but of width 5–8. This resulted in 100 models, consisting of 2096 individual PSSMs. From the same alignments, we generated 100 calibrated pHMMs using <italic>hmmbuild</italic>/<italic>hmmcalibrate</italic>. We searched with these family descriptors in the <monospace>UniProtKB/Swiss-Prot</monospace> Rel. 57.5 database (Wu <italic>et al</italic>., <xref ref-type="bibr" rid="B39">2006</xref>), containing 470 369 protein sequences in 167 MB. It took <italic>PoSSuMsearch2</italic> ∼28.1 min to find all matches to the PSSM-FMs, using a <italic>p</italic>-value threshold of 10<sup>−4</sup> for each PSSM. For <italic>hmmsearch</italic>, we chose an <italic>E</italic>-value of 10<sup>−5</sup> in order to find roughly the same set of matches. It took <italic>hmmsearch</italic> ∼30 h to find matches to the pHMMs. This makes for a speedup factor of more than 64.8 for <italic>PoSSuMsearch2</italic> over <italic>hmmsearch</italic>. Along with these results, <italic>PoSSuMsearch2</italic> clearly showed sublinear time scaling when applied to subsets of <monospace>UniProtKB/Swiss-Prot</monospace> of different sizes, whereas <italic>hmmsearch</italic> showed linear scaling behavior due to the underlying Viterbi algorithm. For the results of this experiment, see <xref ref-type="fig" rid="F3">Figure 3</xref> in the <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/cgi/content/full/btp593/DC1">Supplementary Material</ext-link>.</p>
      </sec>
    </sec>
    <sec id="SEC3.2">
      <title>3.2 Acceleration of pHMM-based database searches</title>
      <p>Here, we evaluate the performance of <italic>PoSSuMsearch2</italic> when it is used as a filter to reduce the search space for <italic>hmmsearch</italic>. The combination of <italic>PoSSuMsearch2</italic> and <italic>hmmsearch</italic> is called <italic>PSfamSearch</italic>. The intention is to speedup the database search while keeping the sensitivity of <italic>hmmsearch</italic>.</p>
      <p>As a prerequisite for reliable filtering, we have to calibrate <italic>p</italic>-value cutoffs for the PSSM-FMs such that they match the corresponding pHMMs <italic>trusted cutoff</italic> (<italic>tc</italic>) and <italic>noise cutoff</italic> (<italic>nc</italic>). That is, our calibrated PSSM-FMs operate on the same level of sensitivity as <italic>hmmsearch</italic> employing the pHMM, but with possibly reduced specificity. Hence, the determination of a proper family-specific <italic>p</italic>-value cutoff is crucial for the sensitivity as well as overall speedup of <italic>PSfamSearch</italic>. A too stringent cutoff may reduce the search space too much and thus may have a negative effect on the sensitivity. On the other hand, a too relaxed cutoff may not sufficiently reduce the search space and lead to long running times. In the following, we evaluate two different strategies for cutoff calibration: cutoff calibration for lossless filtering and cutoff calibration based on training- and test-set separation.</p>
      <sec id="SEC3.2.1">
        <title>3.2.1 Cutoff calibration for lossless filtering</title>
        <p>We start by searching with a pHMM representing a protein family in a large protein database like <monospace>UniProtKB/Swiss-Prot</monospace> using <italic>hmmsearch</italic> with the model's trusted and noise cutoffs, respectively, and tabulate all matching sequences. From the seed alignment of the employed pHMM, we construct a PSSM-FM with a block width of 6–12 and use this family model to iteratively search <monospace>UniProtKB/Swiss-Prot</monospace> using <italic>PoSSuMsearch2</italic>. In each iteration, we relax the <italic>p</italic>-value cutoff until we find all the sequences also detected by <italic>hmmsearch</italic> using the model's trusted and noise cutoffs respectively. With this procedure, we determine <italic>p</italic>-value cutoffs denoted by π<sub><italic>tc</italic></sub> and π<sub><italic>nc</italic></sub> corresponding to the pHMM's trusted and noise cutoffs in terms of sensitivity. Observe that the set of matching sequences detected by <italic>PoSSuMsearch2</italic> using cutoff π<sub><italic>tc</italic></sub> or π<sub><italic>nc</italic></sub> may be a super set of the set of sequences detected by <italic>hmmsearch</italic> employing the pHMM's trusted and noise cutoffs. However, since we are interested in using PSSM-FMs searched with <italic>PoSSuMsearch2</italic> as a prefilter for search space reduction for <italic>hmmsearch</italic>, sensitivity is more important than specificity. Once π<sub><italic>tc</italic></sub> and π<sub><italic>nc</italic></sub> are computed on a large protein database, they are, together with the PSSM-FM, stored on file. That is, for further searches with <italic>hmmsearch</italic> using the model's trusted or noise cutoffs, we can use <italic>PoSSuMsearch2</italic> using cutoff π<sub><italic>tc</italic></sub> or π<sub><italic>nc</italic></sub> as a filter and apply the compute intensive <italic>hmmsearch</italic> only on sequences that contain chains matching to the PSSM-FM. Sequences that contain no such chains are filtered out. Since sequences containing sufficiently long chains constitute only a small fraction of all sequences to be searched and since <italic>PoSSuMsearch2</italic> is much faster than <italic>hmmsearch</italic>, we expect a reduced overall runtime. We tested this hypothesis with the following experiment.</p>
        <p>We applied <italic>PSfamSearch</italic> to the first 200 out of 3603 pHMMs of the <monospace>TIGRFAM</monospace> database (Rel. 8.0) on the complete <monospace>UniProtKB/Swiss-Prot</monospace> database (Rel. 57.5, 471 472 sequences of total length ∼167 MB). We determined <italic>PoSSuMsearch2</italic> <italic>p</italic>-value cutoffs corresponding to <italic>hmmsearch</italic> trusted as well as noise cutoffs with the iterative procedure described above. We measured the search space reduction (see <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/cgi/content/full/btp593/DC1">Supplementary Fig. 4</ext-link> for results for the first 20 <monospace>TIGRFAM</monospace> families) and the total runtimes of <italic>PSfamSearch</italic> and compared them with <italic>hmmsearch</italic> operating on the unfiltered dataset. PSSM-FM-based filtering reduces the search space and hence the overall runtime considerably. For example, for family TIGR00011 only five sequences remain after the filtering step and are handed over to <italic>hmmsearch</italic>. Filtering with <italic>p</italic>-value cutoffs corresponding to the less-stringent noise cutoffs reduced, in the worst case (TIGR00001), the search space by ∼80%. For all 200 tested families, the overall runtime is reduced from 4233 (4234) to only 46 (117) min when using trusted (noise) cutoffs. This is a speedup of factor 92 (36).</p>
        <p>We emphasize that in this experimental setup, <italic>PSfamSearch</italic> and direct <italic>hmmsearch</italic> obtain exactly the same results on the full sequence set. Hence, <italic>PoSSuMsearch2</italic> works as a perfect, lossless filter. This is not too surprising, since thresholds were trained/adjusted on the same set of sequences as were searched afterwards employing these thresholds. This raises the question, how well the calibrated <italic>p</italic>-value cutoffs generalize to sequences not included in the training set used for threshold determination. To test this, we performed additional experiments where <italic>p</italic>-value cutoffs are calibrated based on training- and test-set separation.</p>
      </sec>
      <sec id="SEC3.2.2">
        <title>3.2.2 Cutoff calibration based on training- and test-set separation</title>
        <p>For the first 200 families listed in <monospace>TIGRFAM</monospace>, we built PSSM-FMs from the families' seed alignments with the procedure described in <xref ref-type="sec" rid="SEC3.1">Section 3.1</xref>. We calibrated the <italic>p</italic>-value cutoffs and minimal chain lengths to match all sequences of training sets of different sizes. Training sets contain every <italic>k</italic>-th sequence returned by direct <italic>hmmsearch</italic> on <monospace>UniProtKB/TrEMBL</monospace> Rel. 40.3 (7 916 844 protein sequences with a total length of 2.58 GB) for <italic>k</italic>∈{2, 3, 4, 5} using the pHMMs' trusted and noise cutoffs (for <italic>k</italic> = 2 only), respectively. That is, we evaluated the classification performance of <italic>PSfamSearch</italic> using training sets that consist of 20%, 25%, 33% and 50% of the sequences matched by the pHMM. We employed these models and cutoffs in a database search with <italic>PSfamSearch</italic> on complete <monospace>UniProtKB/TrEMBL</monospace> and measured the overall running time and true positives coverage per family and compared the running time with the time needed by direct <italic>hmmsearch</italic> using trusted cutoffs. See <xref ref-type="fig" rid="F5">Figure 5</xref> and <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/cgi/content/full/btp593/DC1">Supplementary Table 1</ext-link> for the results of this experiment.
<fig id="F5" position="float"><label>Fig. 5.</label><caption><p>Comparison of running times (<italic>x</italic>- and <italic>y</italic>-axis) and achieved percentage true positive values (color coded) between <italic>PSfamSearch</italic> and <italic>hmmsearch</italic>, when searching with PSSM-FMs (pHMMs) representing the first 200 <monospace>TIGRFAM</monospace> families on <monospace>UniProtKB/TrEMBL</monospace> Rel. 40.3. Different values of <italic>k</italic> represent different training set sizes. For further details see text.</p></caption><graphic xlink:href="btp593f5"/></fig></p>
        <p><italic>PSfamSearch</italic> returned &gt;99.54% of the original results determined by <italic>hmmsearch</italic>, including their <italic>E</italic>-values and scores, when using half of the sequences matched by <italic>hmmsearch</italic> as training sets. Of 150 851, 523 matches (0.34%) were missed. With <italic>p</italic>-value cutoffs calibrated to match the sensitivity level of <italic>hmmsearch</italic> using noise cutoffs, <italic>PSfamSearch</italic> detected 99.4%, while missing 649 out of 180 263 sequences. See <xref ref-type="fig" rid="F6">Figure 6</xref> and <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/cgi/content/full/btp593/DC1">Supplementary Tables 2 and 3</ext-link> for more detailed results for the first 20 <monospace>TIGRFAM</monospace> families.
<fig id="F6" position="float"><label>Fig. 6.</label><caption><p>Reduction of <monospace>UniProtKB/TrEMBL</monospace> achieved by PSSM-FM filtering for the first 20 <monospace>TIGRFAM</monospace>s families. Dark (light) bars indicate the effective number of sequences to be searched with <italic>hmmsearch</italic> (<italic>x</italic>-axis) when using <italic>P</italic>-value cutoffs π<sub><italic>tc</italic></sub> (π<sub><italic>nc</italic></sub>). The bar on the top shows the total number of sequences in <monospace>UniProtKB/TrEMBL</monospace> Rel. 40.3 (7 916 844 protein sequences with a total length of ∼2.58 GB) needed to be searched by direct <italic>hmmsearch</italic> without filtering. Note that the <italic>x</italic>-axis has a logarithmic scale.</p></caption><graphic xlink:href="btp593f6"/></fig></p>
        <p>It took <italic>PSfamSearch</italic> ∼24.8 h to search with the first 200 <monospace>TIGRFAM</monospace> families, compared with &gt;45 days for direct <italic>hmmsearch</italic> using the models' trusted cutoffs. That is, <italic>PSfamSearch</italic> achieves a speedup of factor 43.8 over direct <italic>hmmsearch</italic>, while retaining &gt;99.5% of the original results. In this experiment, the set of sequences to be searched with <italic>hmmsearch</italic> was reduced to only 0.80% of all sequences. Using the less-stringent noise cutoffs, <italic>PSfamSearch</italic> reduces the search space to only 3.83% of the original search space size also with a sensitivity of 99.5% (see <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/cgi/content/full/btp593/DC1">Supplementary Table 3</ext-link> for more detailed results for the first 20 <monospace>TIGRFAM</monospace> families) and a speedup of factor ∼14 over direct <italic>hmmsearch</italic>.</p>
      </sec>
      <sec id="SEC3.2.3">
        <title>3.2.3 Whole proteome annotation using PSfamSearch</title>
        <p>In an additional experiment we searched with pHMMs and PSSM-FMs representing the first 500 protein families in the <monospace>TIGRFAM</monospace> database in 26 publicly available <italic>Escherichia coli</italic> proteomes (see <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/cgi/content/full/btp593/DC1">Supplementary Table 4</ext-link> for further details). These consist of 120 394 protein sequences with a total length of 37.3 MB. Cutoffs π<sub><italic>tc</italic></sub> and π<sub><italic>nc</italic></sub> for PSSM-FMs were adjusted based on <monospace>UniProtKB/TrEMBL</monospace> results as described above. In this experiment, <italic>hmmsearch</italic> detected 11 712 (12 516) matches to the 500 protein families when using trusted (noise) cutoffs and needed 2745 min for this task. Except for 1 (2) missed sequence(s), <italic>PSfamSearch</italic> returned exactly the same results at cutoff π<sub><italic>tc</italic></sub>(π<sub><italic>nc</italic></sub>), but it took only 93.3 (171.2) min; this makes for a speedup of 29.52 (16.01).</p>
      </sec>
      <sec id="SEC3.2.4">
        <title>3.2.4 Comparison of PSfamSearch with other hmmsearch acceleration solutions</title>
        <p>Another approach to accelerate <italic>hmmsearch</italic> is the <italic>HMMERHEAD</italic> program (Poster presentation at RECOMB2007).<italic>HMMERHEAD</italic> uses a filtration approach that employs four filtering stages with increasing computational costs to reduce the search space for the subsequent application of the <italic>hmmsearch</italic> engine. We applied <italic>HMMERHEAD</italic> to the same experimental setup as described in the former paragraph. That is, we searched with pHMMs representing the first 200 <monospace>TIGRFAM</monospace> families on the complete <monospace>UniProtKB/TrEMBL</monospace> database and measured the running time of <italic>HMMERHEAD</italic> and the coverage using the models' trusted (noise) cutoffs. In this experiment, <italic>HMMERHEAD</italic> was able to reduce the running time compared with direct <italic>hmmsearch</italic> from 1088.05 h to 626.08 h, while retaining 100% of the original results (for details, see <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/cgi/content/full/btp593/DC1">Supplementary Fig. 5</ext-link>). This makes for a speedup of factor ∼1.7, with per model speedups in the range of 1.4–1.9.</p>
        <p><italic>rpsblast</italic> (Marchler-Bauer and Bryant, <xref ref-type="bibr" rid="B23">2004</xref>) may be seen as an alternative to <italic>hmmsearch</italic> employing pHMMs. It uses <italic>psi-blast</italic>'s (Altschul <italic>et al</italic>., <xref ref-type="bibr" rid="B3">1997</xref>) checkpoint files which can be seen as models for protein families, much like pHMMs and our PSSM-FMs. <italic>rpsblast</italic>-compatible models representing <monospace>TIGRFAM</monospace> protein families are part of the CDD database (Marchler-Bauer <italic>et al</italic>., <xref ref-type="bibr" rid="B24">2009</xref>). To test the ability of <italic>rpsblast</italic> to obtain the same results as <italic>hmmsearch</italic> and hence to offer an alternative to <italic>hmmsearch</italic> and <italic>PSfamSearch</italic>, respectively, we compared the classification performance of <italic>rpsblast</italic> with that of <italic>PSfamSearch</italic> employing PSSM-FMs for the first 200 <monospace>TIGRFAM</monospace> families with <italic>p</italic>-value cutoffs π<sub><italic>tc</italic></sub> and π<sub><italic>nc</italic></sub>, respectively. As a state of truth we use the results returned by <italic>hmmsearch</italic> using trusted (noise) cutoffs. In this experiment, <italic>rpsblast</italic> achieved an averaged coverage in the range of 85.6–98.6% (84.7–95.5%) compared with <italic>hmmsearch</italic> using trusted (noise) cutoffs. Using the same experimental setup, <italic>PSfamSearch</italic> achieved a uniform coverage of 99.54% (99.47%) when using cutoffs π<sub><italic>tc</italic></sub> (π<sub><italic>nc</italic></sub>). See <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/cgi/content/full/btp593/DC1">Supplementary Figure 6</ext-link> for further details on this experiment. It took <italic>PSfamSearch</italic> 1490 (4676) min using cutoffs π<sub><italic>tc</italic></sub> (π<sub><italic>nc</italic></sub>) to perform this task (<ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/cgi/content/full/btp593/DC1">Supplementary Table 1</ext-link>), while <italic>rpsblast</italic> needed only 1341.96 min. Hence, by application of <italic>rpsblast</italic> one obtains an additional speedup of factor 1.1 (3.4) at the price of reduced sensitivity.</p>
        <p>Recently, Lingner and Meinicke (<xref ref-type="bibr" rid="B21">2008a</xref>) described an approach for search space reduction applicable to speedup database searches with pHMMs based on machine learning techniques. Although the described method and presented results seem to be promising, up to now only a prototype implemented in <italic>MATLAB</italic> and a web server for interactive usage (Meinicke, <xref ref-type="bibr" rid="B25">2009</xref>) are available.</p>
      </sec>
    </sec>
  </sec>
  <sec id="SEC4">
    <title>4 DISCUSSION AND CONCLUDING REMARKS</title>
    <p>We have presented a new database search method based on PSSM-FMs. It is well suited for fast and reliable protein family classification. Moreover, it can serve as a filter to considerably speedup database searches with pHMMs, while retaining almost 100% sensitivity. Our method combines fast index-based searching of PSSMs, an efficient algorithm for exact <italic>p</italic>-value computation for PSSM score thresholds, and a fast fragment chaining algorithm. The methods described here are implemented in the robust and well-documented software tool <italic>PoSSuMsearch2</italic>.</p>
    <p>We carefully evaluated the performance of PSSM-FMs in terms of sensitivity and specificity by using <italic>PoSSuMsearch2</italic> in two different modes of operation, i.e. for direct sequence classification, and as a prefilter for <italic>hmmsearch</italic>. We have shown that PSSM-FMs are only marginally inferior to pHMMs when used for sequence classification. The FP50 value (the average coverage achieved when tolerating 50 false positives) for PSSM-FMs never dropped below the FP50 value for pHMMs by more than ∼6 percentage points in all of our three evaluation scenarios (<xref ref-type="fig" rid="F4">Fig. 4</xref>). This renders PSSM-FMs a fast alternative to pHMMs: for example, we have observed that <italic>PoSSuMsearch2</italic> is more than 64 times faster than <italic>hmmsearch</italic> for the same classification task.</p>
    <p>We also demonstrated that PSSM-FMs are well suited for prefiltering sequence databases to be searched by <italic>hmmsearch</italic>. Using <italic>PSfamSearch</italic> (the combination of <italic>PoSSuMsearch2</italic> and <italic>hmmsearch</italic>), we observed dramatic search space reductions for <monospace>UniProtKB/TrEMBL</monospace> to 0.80% and 3.83%, respectively, when filtering with 200 PSSM-FMs built from the <monospace>TIGRFAM</monospace> database using the pHMMs' trusted and noise cutoffs, respectively. The reduction of the sequence database resulted in speedups of ∼43.8 and 14 over original, unfiltered <italic>hmmsearch</italic>, respectively, while retaining 99.5% of the original results in both cases. Extrapolated to all 3603 families in <monospace>TIGRFAM</monospace> (Rel 8.0), we estimate a runtime of ∼18.6 days for <italic>PSfamSearch</italic>, and 2.23 years for direct <italic>hmmsearch</italic> using the models' trusted cutoffs. Notably, the observed speedups come from an algorithmic as well as a conceptual advancement: the speed of index-based PSSM searching, and the astonishing fact that pHMMs can be approximated well by the much simpler PSSM-FMs. This is also consistent with the finding that protein classification works well with word correlation matrices (Lingner and Meinicke, <xref ref-type="bibr" rid="B22">2008b</xref>).</p>
    <p>In our experiments, <italic>PSfamSearch</italic> also showed a &gt;25-fold speedup over the program <italic>HMMERHEAD</italic>. Compared with the well-known <italic>rpsblast</italic> tool, <italic>PSfamSearch</italic> is slightly slower. <italic>PSfamSearch</italic>, however, achieved a significantly higher sensitivity in our experiment. In the experiment showing the ability of <italic>PSfamSearch</italic> for efficient annotation of <italic>E.coli</italic> proteomes, <italic>PSfamSearch</italic> returned &gt;99.99% of the original <italic>hmmsearch</italic> results and showed a speedup over direct <italic>hmmsearch</italic> of ∼30.</p>
    <p><italic>PSfamSearch</italic> is twice as fast as the previously fastest software-based acceleration method for <italic>hmmsearch</italic> (Sun and Buhler, <xref ref-type="bibr" rid="B34">2009</xref>). Note that Sun and Buhler (<xref ref-type="bibr" rid="B34">2009</xref>) focus on the problem of designing unordered sets of motifs with good filtering characteristics while searching them with straightforward algorithms, whereas our work focuses on efficient index-based searching in sublinear expected time while keeping the derivation of motifs rather simple. This raises the question whether a future combination of both approaches might lead to further improvements in software-based pHMM database search methods.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="PMC_1" content-type="local-data">
      <caption>
        <title>[Supplementary Data]</title>
      </caption>
      <media mimetype="text" mime-subtype="html" xlink:href="btp593_index.html"/>
      <media xlink:role="associated-file" mimetype="application" mime-subtype="pdf" xlink:href="btp593_1.pdf"/>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack>
    <title>ACKNOWLEDGEMENTS</title>
    <p>The authors thank Andrew Torda and four anonymous reviewers for comments on the manuscript.</p>
    <p><italic>Conflict of Interest</italic>: none declared.</p>
  </ack>
  <ref-list>
    <title>REFERENCES</title>
    <ref id="B1">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Abouelhoda</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Ohlebusch</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <article-title>Chaining algorithms for multiple genome comparison</article-title>
        <source>J. Discrete Algorithms</source>
        <year>2005</year>
        <volume>3</volume>
        <fpage>321</fpage>
        <lpage>341</lpage>
      </element-citation>
    </ref>
    <ref id="B2">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Abouelhoda</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Replacing suffix trees with enhanced suffix arrays</article-title>
        <source>J. Discrete Algorithms</source>
        <year>2004</year>
        <volume>2</volume>
        <fpage>53</fpage>
        <lpage>86</lpage>
      </element-citation>
    </ref>
    <ref id="B3">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Altschul</surname>
            <given-names>S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Gapped BLAST and PSI-BLAST: a new generation of protein database search programs</article-title>
        <source>Nucleic Acids Res.</source>
        <year>1997</year>
        <volume>25</volume>
        <fpage>3389</fpage>
        <lpage>3402</lpage>
        <pub-id pub-id-type="pmid">9254694</pub-id>
      </element-citation>
    </ref>
    <ref id="B4">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Andreeva</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Data growth and its impact on the SCOP database: new developments</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2008</year>
        <volume>36</volume>
        <fpage>D419</fpage>
        <lpage>D425</lpage>
        <pub-id pub-id-type="pmid">18000004</pub-id>
      </element-citation>
    </ref>
    <ref id="B5">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Beckstette</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Fast index based algorithms and software for matching position specific scoring matrices</article-title>
        <source>BMC Bioinformatics</source>
        <year>2006</year>
        <volume>7</volume>
        <comment>Article 389</comment>
      </element-citation>
    </ref>
    <ref id="B6">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Eddy</surname>
            <given-names>SR</given-names>
          </name>
        </person-group>
        <article-title>Profile hidden Markov models</article-title>
        <source>Bioinformatics</source>
        <year>1998</year>
        <volume>14</volume>
        <fpage>755</fpage>
        <lpage>763</lpage>
        <pub-id pub-id-type="pmid">9918945</pub-id>
      </element-citation>
    </ref>
    <ref id="B7">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Finn</surname>
            <given-names>R</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Pfam: clans, web tools, and services</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2006</year>
        <volume>34</volume>
        <fpage>D247</fpage>
        <lpage>D251</lpage>
        <pub-id pub-id-type="pmid">16381856</pub-id>
      </element-citation>
    </ref>
    <ref id="B8">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Finn</surname>
            <given-names>R</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The Pfam protein families database</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2008</year>
        <volume>36</volume>
        <fpage>D281</fpage>
        <lpage>D288</lpage>
        <pub-id pub-id-type="pmid">18039703</pub-id>
      </element-citation>
    </ref>
    <ref id="B9">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gough</surname>
            <given-names>J</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Assignment of homology to genome sequences using a library of hidden Markov models that represent all proteins of known structure</article-title>
        <source>J. Mol. Biol.</source>
        <year>2001</year>
        <volume>313</volume>
        <fpage>903</fpage>
        <lpage>919</lpage>
        <pub-id pub-id-type="pmid">11697912</pub-id>
      </element-citation>
    </ref>
    <ref id="B10">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gribskov</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Profile analysis: detection of distantly related proteins</article-title>
        <source>Proc. Natl Acad. Sci. USA</source>
        <year>1987</year>
        <volume>84</volume>
        <fpage>4355</fpage>
        <lpage>4358</lpage>
        <pub-id pub-id-type="pmid">3474607</pub-id>
      </element-citation>
    </ref>
    <ref id="B11">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Haft</surname>
            <given-names>DH</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The TIGRFAMs database of protein families</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2003</year>
        <volume>31</volume>
        <fpage>371</fpage>
        <lpage>373</lpage>
        <pub-id pub-id-type="pmid">12520025</pub-id>
      </element-citation>
    </ref>
    <ref id="B12">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Henikoff</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Henikoff</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Using substitution probabilities to improve position-specific scoring matrices</article-title>
        <source>Comput. Appl. Biosci.</source>
        <year>1996</year>
        <volume>12</volume>
        <fpage>135</fpage>
        <lpage>143</lpage>
        <pub-id pub-id-type="pmid">8744776</pub-id>
      </element-citation>
    </ref>
    <ref id="B13">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Henikoff</surname>
            <given-names>J</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Increased coverage of protein families with the Blocks database servers</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2000</year>
        <volume>28</volume>
        <fpage>228</fpage>
        <lpage>230</lpage>
        <pub-id pub-id-type="pmid">10592233</pub-id>
      </element-citation>
    </ref>
    <ref id="B14">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Henikoff</surname>
            <given-names>S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Automated construction and graphical presentation of protein blocks from unaligned sequences</article-title>
        <source>Gene</source>
        <year>1995</year>
        <volume>163</volume>
        <fpage>17</fpage>
        <lpage>26</lpage>
      </element-citation>
    </ref>
    <ref id="B15">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Higgins</surname>
            <given-names>D</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>CLUSTAL W: improving the sensitivity of progressive multiple sequence alignment through sequence weighting, position-specific gap penalties and weight matrix choice</article-title>
        <source>Nucleic Acids Res.</source>
        <year>1994</year>
        <volume>22</volume>
        <fpage>4673</fpage>
        <lpage>4680</lpage>
        <pub-id pub-id-type="pmid">7984417</pub-id>
      </element-citation>
    </ref>
    <ref id="B16">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hunter</surname>
            <given-names>S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>InterPro: the integrative protein signature database</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2009</year>
        <volume>37</volume>
        <fpage>D211</fpage>
        <lpage>D215</lpage>
        <pub-id pub-id-type="pmid">18940856</pub-id>
      </element-citation>
    </ref>
    <ref id="B17">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Kärkkäinen</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Sanders</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Baeten</surname>
            <given-names>JCM</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Simple linear work suffix array construction</article-title>
        <source>Proceedings of the 30th International Colloquium on Automata, Languages and Programming</source>
        <year>2003</year>
        <volume>2719</volume>
        <publisher-loc>Eindhoven, The Netherlands</publisher-loc>
        <publisher-name>Springer</publisher-name>
        <fpage>943</fpage>
        <lpage>955</lpage>
        <comment>of <italic>Lecture Notes in Computer Science</italic></comment>
      </element-citation>
    </ref>
    <ref id="B18">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Kasai</surname>
            <given-names>T</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Linear-time longest-common-prefix computation in suffix arrays and its applications</article-title>
        <source>12th Annual Symposium on Combinatorial Pattern Matching (CPM2001)</source>
        <year>2001</year>
        <volume>2089</volume>
        <publisher-loc>New York</publisher-loc>
        <publisher-name>Springer</publisher-name>
        <fpage>181</fpage>
        <lpage>192</lpage>
        <comment>of <italic>Lecture Notes in Computer Science</italic></comment>
      </element-citation>
    </ref>
    <ref id="B19">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kel</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>MATCH: a tool for searching transcription factor binding sites in DNA sequences</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2003</year>
        <volume>31</volume>
        <fpage>3576</fpage>
        <lpage>3579</lpage>
        <pub-id pub-id-type="pmid">12824369</pub-id>
      </element-citation>
    </ref>
    <ref id="B20">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Letunic</surname>
            <given-names>I</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>SMART 5: domains in the context of genomes and networks</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2006</year>
        <volume>34</volume>
        <fpage>D257</fpage>
        <lpage>D260</lpage>
        <pub-id pub-id-type="pmid">16381859</pub-id>
      </element-citation>
    </ref>
    <ref id="B21">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Lingner</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Meinicke</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Fast target set reduction for large-scale protein function prediction: a multi-class multi-label machine learning approach</article-title>
        <source>Proceedings of the 8th Workshop on Algorithms in Bioinformatics (WABI)</source>
        <year>2008a</year>
        <volume>5251</volume>
        <publisher-loc>Berlin</publisher-loc>
        <publisher-name>Springer</publisher-name>
        <fpage>198</fpage>
        <lpage>209</lpage>
        <comment>of <italic>LNBI</italic></comment>
      </element-citation>
    </ref>
    <ref id="B22">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lingner</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Meinicke</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Word correlation matrices for protein sequence analysis and remote homology detection</article-title>
        <source>BMC Bioinformatics</source>
        <year>2008b</year>
        <volume>9</volume>
        <comment>[Epub ahead of print, doi:10.1186/1471-2105-9-259]</comment>
      </element-citation>
    </ref>
    <ref id="B23">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Marchler-Bauer</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Bryant</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>CD-Search: protein domain annotations on the fly</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2004</year>
        <volume>32</volume>
        <fpage>W327</fpage>
        <lpage>W331</lpage>
        <pub-id pub-id-type="pmid">15215404</pub-id>
      </element-citation>
    </ref>
    <ref id="B24">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Marchler-Bauer</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>CDD: specific functional annotation with the Conserved Domain Database</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2009</year>
        <volume>37</volume>
        <fpage>D205</fpage>
        <lpage>D210</lpage>
        <pub-id pub-id-type="pmid">18984618</pub-id>
      </element-citation>
    </ref>
    <ref id="B25">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Meinicke</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>UFO: a web server for ultra-fast functional profiling of whole genome protein sequences</article-title>
        <source>BMC Genomics</source>
        <year>2009</year>
        <volume>10</volume>
      </element-citation>
    </ref>
    <ref id="B26">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mi</surname>
            <given-names>H</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The PANTHER database of protein families, subfamilies, functions and pathways</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2005</year>
        <volume>33</volume>
        <fpage>D284</fpage>
        <lpage>D288</lpage>
        <pub-id pub-id-type="pmid">15608197</pub-id>
      </element-citation>
    </ref>
    <ref id="B27">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Quandt</surname>
            <given-names>K</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>MatInd and MatInspector: new fast and versatile tools for detection of consensus matches in nucleotide data</article-title>
        <source>Nucleic Acids Res.</source>
        <year>1995</year>
        <volume>23</volume>
        <fpage>4878</fpage>
        <lpage>4884</lpage>
        <pub-id pub-id-type="pmid">8532532</pub-id>
      </element-citation>
    </ref>
    <ref id="B28">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Quevillon</surname>
            <given-names>E</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>InterProScan: protein domains identifier</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2005</year>
        <volume>33</volume>
        <fpage>W116</fpage>
        <lpage>W120</lpage>
        <pub-id pub-id-type="pmid">15980438</pub-id>
      </element-citation>
    </ref>
    <ref id="B29">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Rahmann</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Benson</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Page</surname>
            <given-names>RDM</given-names>
          </name>
        </person-group>
        <article-title>Dynamic programming algorithms for two statistical problems in computational biology</article-title>
        <source>Proceedings of the 3rd Workshop on Algorithms in Bioinformatics (WABI)</source>
        <year>2003</year>
        <volume>2812</volume>
        <publisher-loc>Budapest, Hungary</publisher-loc>
        <publisher-name>Springer</publisher-name>
        <fpage>151</fpage>
        <lpage>164</lpage>
        <comment>of <italic>Lecture Notes in Computer Science</italic></comment>
      </element-citation>
    </ref>
    <ref id="B30">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rehmsmeier</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Automatic evaluation of database search methods</article-title>
        <source>Brief. Bioinform.</source>
        <year>2002</year>
        <volume>3</volume>
        <fpage>342</fpage>
        <lpage>352</lpage>
        <pub-id pub-id-type="pmid">12511063</pub-id>
      </element-citation>
    </ref>
    <ref id="B31">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Scordis</surname>
            <given-names>P</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>FingerPRINTScan: intelligent searching of the PRINTS motif database</article-title>
        <source>Bioinformatics</source>
        <year>1999</year>
        <volume>15</volume>
        <fpage>799</fpage>
        <lpage>806</lpage>
        <pub-id pub-id-type="pmid">10705433</pub-id>
      </element-citation>
    </ref>
    <ref id="B32">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Shendure</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Ji</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Next-generation DNA sequencing</article-title>
        <source>Nat. Biotechnol.</source>
        <year>2008</year>
        <volume>26</volume>
        <fpage>1135</fpage>
        <lpage>1145</lpage>
        <pub-id pub-id-type="pmid">18846087</pub-id>
      </element-citation>
    </ref>
    <ref id="B33">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Staden</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Doolittle</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Searching for patterns in protein and nucleic acids sequences</article-title>
        <source>Methods in Enzymology</source>
        <year>1990</year>
        <volume>183</volume>
        <publisher-loc>San Diego, CA</publisher-loc>
        <publisher-name>Academic Press</publisher-name>
        <fpage>193</fpage>
        <lpage>211</lpage>
      </element-citation>
    </ref>
    <ref id="B34">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sun</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Buhler</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Designing patterns and profiles for faster HMM search</article-title>
        <source>IEEE/ACM Trans. Comput. Biol. Bioinform.</source>
        <year>2009</year>
        <volume>6</volume>
        <fpage>232</fpage>
        <lpage>243</lpage>
        <pub-id pub-id-type="pmid">19407348</pub-id>
      </element-citation>
    </ref>
    <ref id="B35">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tatusov</surname>
            <given-names>R</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Detection of conserved segments in proteins: iterative scanning of sequence databases with alignment blocks</article-title>
        <source>Proc. Natl Acad. Sci. USA</source>
        <year>1994</year>
        <volume>91</volume>
        <fpage>12091</fpage>
        <lpage>12095</lpage>
        <pub-id pub-id-type="pmid">7991589</pub-id>
      </element-citation>
    </ref>
    <ref id="B36">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Touzet</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Varré</surname>
            <given-names>J-S</given-names>
          </name>
        </person-group>
        <article-title>Efficient and accurate P-value computation for position weight matrices</article-title>
        <source>Algorithms Mol. Biol.</source>
        <year>2007</year>
        <volume>2</volume>
        <fpage>15</fpage>
        <pub-id pub-id-type="pmid">18072973</pub-id>
      </element-citation>
    </ref>
    <ref id="B37">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Walters</surname>
            <given-names>J</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Accelerating HMMER sequence analysis suite using conventional processors</article-title>
        <source>Proceedings of the 20th International Conference on Advanced Information Networking and Aplications (AINA06)</source>
        <year>2006</year>
        <volume>1</volume>
        <publisher-loc>Washington, DC</publisher-loc>
        <publisher-name>IEEE Computer Society</publisher-name>
        <fpage>289</fpage>
        <lpage>294</lpage>
      </element-citation>
    </ref>
    <ref id="B38">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wu</surname>
            <given-names>C</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>PIRSF: family classification system at the Protein Information Resource</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2004</year>
        <volume>32</volume>
        <fpage>D112</fpage>
        <lpage>D114</lpage>
        <pub-id pub-id-type="pmid">14681371</pub-id>
      </element-citation>
    </ref>
    <ref id="B39">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wu</surname>
            <given-names>CH</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The Universal Protein Resource (UniProt): an expanding universe of protein information</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2006</year>
        <volume>34</volume>
        <fpage>D187</fpage>
        <lpage>D191</lpage>
        <pub-id pub-id-type="pmid">16381842</pub-id>
      </element-citation>
    </ref>
    <ref id="B40">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wu</surname>
            <given-names>T</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Fast probabilistic analysis of sequence function using scoring matrices</article-title>
        <source>Bioinformatics</source>
        <year>2000</year>
        <volume>16</volume>
        <fpage>233</fpage>
        <lpage>244</lpage>
        <pub-id pub-id-type="pmid">10869016</pub-id>
      </element-citation>
    </ref>
    <ref id="B41">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yeats</surname>
            <given-names>C</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Gene3D: modelling protein structure, function and evolution</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2006</year>
        <volume>34</volume>
        <fpage>D281</fpage>
        <lpage>D284</lpage>
        <pub-id pub-id-type="pmid">16381865</pub-id>
      </element-citation>
    </ref>
    <ref id="B42">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhang</surname>
            <given-names>J</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Computing exact P-values for DNA motifs</article-title>
        <source>Bioinformatics</source>
        <year>2007</year>
        <volume>23</volume>
        <fpage>531</fpage>
        <lpage>537</lpage>
        <pub-id pub-id-type="pmid">17237046</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">PeerJ</journal-id>
    <journal-id journal-id-type="iso-abbrev">PeerJ</journal-id>
    <journal-id journal-id-type="pmc">PeerJ</journal-id>
    <journal-id journal-id-type="publisher-id">PeerJ</journal-id>
    <journal-title-group>
      <journal-title>PeerJ</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2167-8359</issn>
    <publisher>
      <publisher-name>PeerJ Inc.</publisher-name>
      <publisher-loc>San Diego, USA</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6875409</article-id>
    <article-id pub-id-type="publisher-id">8111</article-id>
    <article-id pub-id-type="doi">10.7717/peerj.8111</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Bioinformatics</subject>
      </subj-group>
      <subj-group subj-group-type="heading">
        <subject>Science and Medical Education</subject>
      </subj-group>
      <subj-group subj-group-type="heading">
        <subject>Human-Computer Interaction</subject>
      </subj-group>
      <subj-group subj-group-type="heading">
        <subject>Computational Science</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>From command-line bioinformatics to bioGUI</article-title>
    </title-group>
    <contrib-group>
      <contrib id="author-1" contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">http://orcid.org/0000-0002-6665-8951</contrib-id>
        <name>
          <surname>Joppich</surname>
          <given-names>Markus</given-names>
        </name>
        <email>joppich@bio.ifi.lmu.de</email>
      </contrib>
      <contrib id="author-2" contrib-type="author" corresp="yes">
        <name>
          <surname>Zimmer</surname>
          <given-names>Ralf</given-names>
        </name>
        <email>zimmer@ifi.lmu.de</email>
      </contrib>
      <aff><institution>Department of Informatics, Ludwig-Maximilians-Universität München</institution>, <addr-line>Munich</addr-line>, <country>Germany</country></aff>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Gillespie</surname>
          <given-names>Joseph</given-names>
        </name>
      </contrib>
    </contrib-group>
    <pub-date pub-type="epub" date-type="pub" iso-8601-date="2019-11-21">
      <day>21</day>
      <month>11</month>
      <year iso-8601-date="2019">2019</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2019</year>
    </pub-date>
    <volume>7</volume>
    <elocation-id>e8111</elocation-id>
    <history>
      <date date-type="received" iso-8601-date="2019-01-14">
        <day>14</day>
        <month>1</month>
        <year iso-8601-date="2019">2019</year>
      </date>
      <date date-type="accepted" iso-8601-date="2019-10-28">
        <day>28</day>
        <month>10</month>
        <year iso-8601-date="2019">2019</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© 2019 Joppich and Zimmer</copyright-statement>
      <copyright-year>2019</copyright-year>
      <copyright-holder>Joppich et al.</copyright-holder>
      <license xlink:href="https://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an open access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use, distribution, reproduction and adaptation in any medium and for any purpose provided that it is properly attributed. For attribution, the original author(s), title, publication source (PeerJ) and either DOI or URL of the article must be cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="https://peerj.com/articles/8111"/>
    <abstract>
      <p>Bioinformatics is a highly interdisciplinary field providing (bioinformatics) applications for scientists from many disciplines. Installing and starting applications on the command-line (CL) is inconvenient and/or inefficient for many scientists. Nonetheless, most methods are implemented with a command-line interface only. Providing a graphical user interface (GUI) for bioinformatics applications is one step toward routinely making CL-only applications available to more scientists and, thus, toward a more effective interdisciplinary work. With our <italic>bioGUI</italic> framework we address two main problems of using CL bioinformatics applications: First, many tools work on UNIX-systems only, while many scientists use Microsoft Windows. Second, scientists refrain from using CL tools which, however, could well support them in their research. With <italic>bioGUI</italic> install modules and templates, installing and using CL tools is made possible for most scientists—even on Windows, due to <italic>bioGUI</italic>’s support for Windows Subsystem for Linux. In addition, <italic>bioGUI</italic> templates can easily be created, making the <italic>bioGUI</italic> framework highly rewarding for developers. From the <italic>bioGUI</italic> repository it is possible to download, install and use bioinformatics tools with just a few clicks.</p>
    </abstract>
    <kwd-group kwd-group-type="author">
      <kwd>Bioinformatics tool</kwd>
      <kwd>Open-source</kwd>
      <kwd>Cross-platform</kwd>
      <kwd>Windows subsystem for Linux</kwd>
      <kwd>Bioinformatics</kwd>
      <kwd>Windows</kwd>
      <kwd>Graphical user interface</kwd>
      <kwd>Command-line Interface</kwd>
      <kwd>Software accessibility</kwd>
    </kwd-group>
    <funding-group>
      <award-group id="fund-1">
        <funding-source>Deutsche Forschungsgemeinschaft (Collaborative Research Centre)</funding-source>
        <award-id>SFB 1123-2/Z2</award-id>
      </award-group>
      <funding-statement>This work was supported by the Deutsche Forschungsgemeinschaft (Collaborative Research Centre SFB 1123-2/Z2). The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement>
    </funding-group>
  </article-meta>
</front>
<body>
  <sec sec-type="intro">
    <title>Introduction</title>
    <p>Many advances in bioinformatics rely on sophisticated applications. Examples are Trinity (<xref rid="ref-11" ref-type="bibr">Grabherr et al., 2011</xref>) for de novo assembly in conjunction with Trimmomatic (<xref rid="ref-8" ref-type="bibr">Bolger, Lohse &amp; Usadel, 2014</xref>), or the HISAT2, StringTie and Ballgown pipeline for transcript-level expression analysis (<xref rid="ref-33" ref-type="bibr">Pertea et al., 2016</xref>). These tools have in common, that, locally installed, only a command-line interface (CLI) is provided, implying a burden for many non-computer affine users (<xref rid="ref-31" ref-type="bibr">Morais et al., 2018</xref>). Jellyfish (<xref rid="ref-29" ref-type="bibr">Marçais &amp; Kingsford, 2011</xref>), Glimmer (<xref rid="ref-10" ref-type="bibr">Delcher et al., 2007</xref>) and HMMer (<uri xlink:href="http://hmmer.org">http://hmmer.org</uri>) natively run only in UNIX-environments and require a sophisticated setup on Windows. In addition, the installation of command-line (CL) tools is a challenge for non-computer specialists, for example, due to package dependency resolution. This problem has been addressed by the AlgoRun package (<xref rid="ref-14" ref-type="bibr">Hosny et al., 2016</xref>), providing a <italic>Docker</italic>-based repository of tools. Being a web-based service, it is limited to web-applicable data sizes, or local data must be made available to the Docker container in the cloud. While AlgoRun has the advantage of processing data anywhere, it relies on <italic>Docker</italic>. Docker may be run either on a local workstation or in the cloud. On a local workstation it can induce incompatibilities with existing software (using Hyper-V on Windows). A cloud-based service may conflict with data privacy guide lines (<xref rid="ref-36" ref-type="bibr">Schadt, 2012</xref>), for example, with respect to a possible de-anonymization of patient samples (<xref rid="ref-12" ref-type="bibr">Gymrek et al., 2013</xref>). Using Windows Subsystem for Linux (WSL) is often possible in such a scenario: it is provided as an app from the Microsoft Store.</p>
    <p>A frequent argument for not providing a graphical user interface (GUI) is the overhead for developing it and the effort to make it really “user centered.” Often GUIs are simply deemed unnecessary by application developers. However, one can be sceptical whether non-computer-affine scientists can efficiently use CLIs in their research. In fact, <xref rid="ref-2" ref-type="bibr">Albert (2016)</xref> notes that “Bioinformatics, unfortunately, has quite the number of methods that represent the disconnect of the Ivory Tower.” <xref rid="ref-32" ref-type="bibr">Pavelin et al. (2012)</xref> note that software is often developed without a focus on usability of interfaces (for end-users). While this does not imply that any GUI is helpful, we argue that without a GUI, the otherwise highly sophisticated CL applications are not very useful for some scientists. Besides, a GUI is often more convenient and helps to avoid using wrong parameters, especially if a software is not yet routinely used in a lab. <xref rid="ref-38" ref-type="bibr">Smith (2013)</xref> also states that GUI-driven applications make daily work in biology or medical labs easier. Smith remarks that many end-users have a “penchant for point and click,” not being able to effectively use CL tools. Still they should have the ability to access and analyse their own data. Many proprietary software solutions address this demand: they allow GUI-based data management, while also being extensible via plug-ins. <xref rid="ref-39" ref-type="bibr">Smith (2015)</xref> points out that one of the biggest advantages of such plugins is to combine the power of peer-reviewed algorithms with a user-friendly GUI. Thus, providing a GUI is an important step toward the applicability of methods by end-users. <xref rid="ref-43" ref-type="bibr">Visne et al. (2009)</xref> present a universal GUI for <italic>R</italic> aiming to close the gap between <italic>R</italic> developers and GUI-dependent users with limited <italic>R</italic> scripting skills. Additionally, web-based workflow systems, like Galaxy (<xref rid="ref-1" ref-type="bibr">Afgan et al., 2016</xref>) or Yabi (<xref rid="ref-16" ref-type="bibr">Hunter et al., 2012</xref>) provide means to easily execute (bioinformatics) applications, but aim at more complex workflows. However, both Galaxy and Yabi are designed to be run and maintained by bioinformaticians for several users and are not meant to run on a single, individual basis, like in small labs. More recently <xref rid="ref-31" ref-type="bibr">Morais et al. (2018)</xref> stated that the accessibility of bioinformatics applications is one of the main challenges of contemporary biology, and that one of the main problems for users is the struggle of using CLIs. While a GUI does not make an application user-friendly per se, it helps to make it more accessible by lowering the burden to use it (<xref rid="ref-46" ref-type="bibr">Xu et al., 2014</xref>; <xref rid="ref-43" ref-type="bibr">Visne et al., 2009</xref>; <xref rid="ref-5" ref-type="bibr">Anslan et al., 2017</xref>; <xref rid="ref-31" ref-type="bibr">Morais et al., 2018</xref>; <xref rid="ref-42" ref-type="bibr">Větrovský, Baldrian &amp; Morais, 2018</xref>).</p>
    <p>In recent Microsoft Windows operating systems the WSL feature can be activated. This feature provides a native, non-virtualized Ubuntu environment on Windows, allowing to run most applications that also run on Ubuntu. This solves the problems of running unix-tools on Windows. Remaining problems for scientists aiming to run bioinformatics applications thus might be the installation and usage of CL applications.</p>
    <p>Here, <italic>bioGUI</italic>, an open-source cross-platform framework for making CL applications more accessible via a GUI, is presented. It uses a XML-based domain-specific language (DSL) for template definition, which lowers the initial effort to create a GUI. <italic>bioGUI</italic> templates for CL applications can easily be scripted. Combined with install modules they provide an efficient and convenient method to deploy bioinformatics applications on Microsoft Windows (via WSL), Mac OS and Linux. <italic>bioGUI</italic> also addresses protocol/parameter management by saving filled out templates, enabling easy reproducibility of data analyses (<xref ref-type="fig" rid="fig-1">Fig. 1</xref>).</p>
    <fig id="fig-1" orientation="portrait" position="float">
      <object-id pub-id-type="doi">10.7717/peerj.8111/fig-1</object-id>
      <label>Figure 1</label>
      <caption>
        <title>Only little human interaction is needed to run a CL application from a <italic>bioGUI</italic> template.</title>
        <p>An (install) template has to be submitted to the <italic>bioGUI</italic> repository by a developer (blue). The <italic>bioGUI</italic> application (cyan) allows users (yellow) to download templates or install modules and install and use bioinformatics applications. After the user selected/set the input for the (bioinformatics) application using the GUI, the CL arguments to run it are constructed from this input. The application’s output (text or images) can be directly displayed in <italic>bioGUI</italic>.</p>
      </caption>
      <graphic xlink:href="peerj-07-8111-g001"/>
    </fig>
  </sec>
  <sec sec-type="methods">
    <title>Methods</title>
    <p>This section first summarizes existing GUI-based systems, then covers the use-case study we performed and goes into detail of how <italic>bioGUI</italic> works.</p>
    <sec>
      <title>Existing (workflow) systems</title>
      <p>There are several (workflow) systems already available. Most prominent in bioinformatics are the Galaxy server and Yabi. In addition, workflow specification languages such as the common workflow language (CWL) or Nextflow exist. These workflows do not directly compare to <italic>bioGUI</italic> because they (usually) require a server infrastructure and are not aimed to run on a local computer. However, they have in common that no CLI is needed to run (bioinformatics) applications.</p>
      <p>With the R Gui Generator (RGG) a general GUI framework for R already exists. Recently, specialised GUI frameworks, like SEED 2 (<xref rid="ref-42" ref-type="bibr">Větrovský, Baldrian &amp; Morais, 2018</xref>) or RNA CoMPASS (<xref rid="ref-46" ref-type="bibr">Xu et al., 2014</xref>), have been presented.</p>
      <sec>
        <title>Galaxy and Yabi</title>
        <p>The Galaxy server is a well known workflow system in bioinformatics (<xref rid="ref-1" ref-type="bibr">Afgan et al., 2016</xref>). While <italic>bioGUI</italic> does not aim to be a workflow system like Galaxy, for example, allowing data management, there are similarities. For instance, Galaxy also provides a (web-based) GUI for its workflows. However, all data to be processed by Galaxy must either be on the server itself or uploaded to a location that is reachable by the server. Galaxy can access cloud storages, but classified data may not be uploaded to such storages as pointed out in the introduction. Additionally, Galaxy requires UNIX knowledge to be installed and does not provide a binary for installation. Galaxy is not cross-platform compatible (Microsoft Windows is supported through WSL but still requires UNIX knowledge). Galaxy users provide Docker containers for Galaxy, where a local storage can be mounted.</p>
        <p>Another framework providing similar options is Yabi (<xref rid="ref-16" ref-type="bibr">Hunter et al., 2012</xref>). Yabi is only distributed using a Docker container.</p>
      </sec>
      <sec>
        <title>Nextflow and DolphinNext</title>
        <p>The combination of Nextflow <uri xlink:href="https://www.nextflow.io/">https://www.nextflow.io/</uri> and DolphinNext <uri xlink:href="https://github.com/UMMS-Biocore/dolphinnext">https://github.com/UMMS-Biocore/dolphinnext</uri> is similar to Galaxy or Yabi. While Nextflow is a DSL for describing general workflows (lacking a GUI definition), DolphinNext provides the web-based user interface (UI) which enables a convenient usage of Nextflow workflows. Nextflow requires a POSIX system architecture and may or may not run on Microsoft Windows using <xref rid="ref-9" ref-type="bibr">Cygwin (2019)</xref>. DolphinNext resembles a lot the Galaxy framework, which can make use of CWL workflows, however, focuses on a deployment in a cluster environment. It is unknown whether or not both systems work on WSL.</p>
      </sec>
      <sec>
        <title>Common workflow language</title>
        <p>The CWL (<xref rid="ref-4" ref-type="bibr">Amstutz et al., 2016</xref>) is a new standard for workflow definition and defines a DSL. In this language, inputs, input-types as well as the corresponding parameters are stored. Additionally, inputs can have a help text included.</p>
        <p>Using the bio.tools ToolDog software (<xref rid="ref-13" ref-type="bibr">Hillion et al., 2017</xref>), CWL workflows can be generated and exported for many bioinformatics applications. An advantage of using bio.tools is the automatic annotation and description of input and outputs. Unfortunately, for many packages no CWL workflows have been deposited.</p>
      </sec>
      <sec>
        <title>SEED 2 and bioinformatics through windows</title>
        <p>In contrast to the previously mentioned tools, SEED 2 (<xref rid="ref-42" ref-type="bibr">Větrovský, Baldrian &amp; Morais, 2018</xref>) and Bioinformatics through windows (BTW) (<xref rid="ref-31" ref-type="bibr">Morais et al., 2018</xref>) do not focus on running complex workflows in a cluster environment. Instead, these focus on specific tasks which can be run on regular laptop computers. SEED 2 focuses on amplicon high-throughput sequencing data analyses. On the other hand BTW follows the same concept, but focuses on the analysis of marker gene data and does not provide a GUI for this task. SEED 2 provides a GUI to perform the relevant analyses fast and conveniently, while BTW focuses on the usability of UNIX CL tools on Windows.</p>
      </sec>
      <sec>
        <title>RGG &amp; AutoIt</title>
        <p>RGG was developed as a general GUI framework for R applications (<xref rid="ref-43" ref-type="bibr">Visne et al., 2009</xref>). It uses XML files to specify the input fields for the graphical representation. When the user has set all options, the GUI is translated into an R script for execution. The execution output can also be retrieved from the RGGRunner application. The RGG software is limited to R scripts, but still the authors expressed their hope that providing GUI for analytical pipelines could “help to bridge the gap between the R developer community and GUI-dependent users” (<xref rid="ref-43" ref-type="bibr">Visne et al., 2009</xref>).</p>
        <p>In contrast to RGG, <xref rid="ref-6" ref-type="bibr">AutoIt (2018)</xref> is a general automation framework which, similar to <italic>bioGUI</italic>, allows the definition of a GUI as well as a task that is executed according to this input. In contrast to AutoIt, <italic>bioGUI</italic> is cross-platform compatible, supports WSL and provides install modules for bioinformatics applications.</p>
      </sec>
      <sec>
        <title>Comparison to bioGUI</title>
        <p><italic>bioGUI</italic> is not a classical workflow system like Galaxy, CWL or DolphinNext with Nextflow. <italic>bioGUI</italic> is not meant to run many tasks nor to run in a cluster environment. Moreover, <italic>bioGUI</italic> does not share the philosophy of having a (compute) cluster setup to run analyses in a repeated fashion. <italic>bioGUI</italic> is meant to enable the user to perform bioinformatics analysis at their work place.With <italic>bioGUI</italic> we aim to provide low effort usage of bioinformatics applications, without the need to setup a complicated environment. Finally this allows to easily compare different methods on collected experimental data.</p>
        <p><italic>bioGUI</italic> finds its niche as a generalisation of the concepts introduced by <xref rid="ref-42" ref-type="bibr">Větrovský, Baldrian &amp; Morais (2018)</xref> and <xref rid="ref-31" ref-type="bibr">Morais et al. (2018)</xref>. SEED 2 provides a GUI such that a broad public has access to sophisticated and well-known bioinformatics CL applications in the context of amplicon analysis. Similar concepts, yet differently implemented, are provided by RNA CoMPASS (<xref rid="ref-46" ref-type="bibr">Xu et al., 2014</xref>) for pathogen-host transcriptome analysis or PipeCraft (<xref rid="ref-5" ref-type="bibr">Anslan et al., 2017</xref>). Here, custom (web-)UIs let the user interact with their specialised pipelines. RGG (<xref rid="ref-43" ref-type="bibr">Visne et al., 2009</xref>) offers a general GUI framework for R applications only. <italic>bioGUI</italic> offers a similar framework, which is applicable to any (Unix) application. In both, RGG and <italic>bioGUI</italic>, users/developers specify the visual elements in a XML file. This XML file is then interpreted and translated into a GUI within an application (RGGRunner or <italic>bioGUI</italic>, respectively) which also shows the output of the script.</p>
        <p>The <italic>bioGUI</italic> framework extends the concepts presented by RGG and SEED 2, for instance, to general applications, and improves accessibility to these applications by providing install modules.</p>
      </sec>
    </sec>
    <sec>
      <title>Use-case study</title>
      <p>One of the main goals we had in mind when developing <italic>bioGUI</italic> is to create a powerful framework, which is easy-to-use for scientists/users and which does not create significant overhead for the application developer. In order to study this, we introduce two classes of possible users: The first class represents a general user of the software who generally prefers a GUI for performing a research task, for example, data analysis after sequencing. The second class describes a software developer releasing an application of a new algorithm to solve the alignment of sequencing reads. This class thus depicts a typical <italic>developer</italic>.</p>
      <p>From these two use-cases (see also Appendix section “Use-cases”) we identify several requirements/goals for <italic>bioGUI</italic>:<list list-type="order"><list-item><p>installing new programs must be simple and should not require system administrators</p></list-item><list-item><p>creating a GUI for a program must not take a lot of time</p></list-item><list-item><p>templates must bring a basic GUI to run the programs, output must not be interpreted</p></list-item><list-item><p>templates must be saveable for later re-use and reference, and also searchable</p></list-item><list-item><p>the system must be lightweight (runtime overhead, disk-space) to even run on laptops</p></list-item><list-item><p>installing a program may require additional (protected) external files</p></list-item></list></p>
      <p>Finally, we developed a paper mockup with which we went through the anticipated workflow of the user. We identified several input components and features the <italic>bioGUI</italic> program has to include (<xref ref-type="fig" rid="fig-A1">Fig. A1</xref>).</p>
    </sec>
    <sec>
      <title>bioGUI approach</title>
      <p>“The accessibility of bioinformatics applications is crucial and a challenge of contemporary biology” (<xref rid="ref-31" ref-type="bibr">Morais et al., 2018</xref>). Particularly the usage of CLIs poses a problem. Since most bioinformatics applications require the execution of commands on the CL for installation (such as for compilation, adding dependencies to the path variable, etc.), we estimate that also the installation poses a problem.</p>
      <p>During the use-case study, and interviews with wet-lab scientists without a computational background (Q Emslander, 2019, personal communication; L Jimenez, 2019, personal communication), we found two main problems with bioinformatics applications for scientists which we want to address with <italic>bioGUI</italic>: first the installation of potentially useful applications and second its usage. Both problems have in common, that they are expected to be performed on the CL. A GUI for achieving the respective tasks in bioinformatics (and beyond) is missing.</p>
      <p>Especially the first task, installing bioinformatics applications on a user’s machine, poses a few problems. Most bioinformatics applications are written for a UNIX operating system, like Linux or Mac OS, while in general Microsoft Windows is the dominant operating system. In order to overcome this problem, <italic>bioGUI</italic> makes use of WSL on Windows. Even if the user’s OS is already Unix-like, using the CL to install software might be strugglesome. Thus, in order to support <italic>all</italic> users, <italic>bioGUI</italic> uses a cross-platform approach. <italic>bioGUI</italic> is developed in C++ using the Qt framework.</p>
      <p>The general workflow for any program using <italic>bioGUI</italic> is shown in <xref ref-type="fig" rid="fig-1">Fig. 1</xref>. Given a CL application, the software developer (blue) writes the specific template in a XML-based DSL and can then make this template available, for example, in the <italic>bioGUI repository</italic> (cyan). Such templates can be automatically retrieved by <italic>bioGUI</italic>. Upon selection of a template by the user, <italic>bioGUI</italic> displays the input mask as defined in the template. When the user (yellow) has filled in all parameters, the parameters are collected by <italic>bioGUI</italic> and assembled into CL arguments which are used to execute the original CL-only application. Upon completion, simple results (like text-output or images) can be shown in <italic>bioGUI</italic> directly, or an external application is opened.</p>
    </sec>
    <sec>
      <title>Install modules</title>
      <p><italic>Install modules</italic> are designed to install applications such that <italic>bioGUI</italic> can access them. Essentially, install modules are bash scripts which allow an automatic installation of applications into a predefined location. For this purpose, install modules receive several arguments from <italic>bioGUI</italic> when launched, for example, where to install the application to, the <italic>sudo</italic> password to fetch packages via a system’s package manager (e.g., aptitude, conda, …), whether the application should be made available to the user via the system’s PATH variable, etc. Install modules download and install applications and make them available to the user and <italic>bioGUI</italic>. However, some applications cannot be simply downloaded, but are distributed by installers. For this purpose, the install module template can be extended by further input fields. These must be specified by <italic>bioGUI</italic> elements and their values are added to the end of the CL arguments of the install module. An install module can then execute the referenced installer.</p>
      <p>Finally, an install module should contain the specification of its <italic>bioGUI</italic> template and could hard-code the path to the installed application. Other constant values, which can already be derived during the installation (e.g., absolute paths to dependencies), could also be defined in the template during this stage.</p>
    </sec>
    <sec>
      <title><italic>bioGUI</italic> templates</title>
      <p><italic>bioGUI</italic> templates are the actual end-user-interface to programs. A <italic>bioGUI</italic> template defines the look and functions of the UI. Thus it can define how the CL-application is called (with corresponding parameters).</p>
      <p>Each <italic>bioGUI</italic> template consists of two parts (<xref ref-type="fig" rid="fig-A2">Fig. A2</xref>). The first part (&lt;<monospace>window</monospace>&gt; model) defines the visual appearance of the GUI. The second part (&lt;<monospace>execution</monospace>&gt; model) defines the processing logic of the template. Input values from the GUI components are collected and assembled (e.g., pre-/post-processing steps) to call CL applications. As part of this assembly, input values from the GUI may be transformed using (multiple) predefined nodes. Concatenations are possible using the &lt;<monospace>add</monospace>&gt; node, and constant values can be inserted using the &lt;<monospace>const</monospace>&gt; node. System environment properties, such as the operating system, the computer’s IP address or specific directories can be collected using the &lt;<monospace>env</monospace>&gt; node. If the regular nodes are not sufficient, for example, because more complex string manipulations should be made (see use-case study), <italic>script</italic> nodes may also accept functions written in <italic>LUA</italic> (<xref rid="ref-28" ref-type="bibr">Lua, 2019</xref>) or <italic>JavaScript</italic> (<xref rid="ref-17" ref-type="bibr">JavaScript, 2019</xref>).</p>
      <p>In general, the execution part infers a network with inputs (e.g., GUI elements, other nodes within the execution part) and actions (if, add, …). For example, the execution network for an application with many sub-commands is exemplarily shown in <xref ref-type="fig" rid="fig-A3">Fig. A3</xref>.</p>
      <p>The time to template varies with the application as well as the number of options to be included. A simple template, like the one for MS-EmpiRe (<xref rid="ref-3" ref-type="bibr">Ammar et al., 2019</xref>), can be created within 10 min. More comprehensive templates, like the one for HISAT2, usually take about 30 min. Time can be saved if only the most important command line options are shown in the GUI. This can be achieved by adding an “optional parameters” input field, where users can insert CL arguments themselves. This is, for instance, shown in the <italic>wtdbg2</italic> (<xref rid="ref-35" ref-type="bibr">Ruan &amp; Li, 2019</xref>) and <italic>spades</italic> (<xref rid="ref-7" ref-type="bibr">Bankevich et al., 2012</xref>) templates. Adding the install part to a template usually can be done within 15–30 min, depending on how detailed the build process is documented. The creation of an install module thus takes approximately 1 h.</p>
    </sec>
    <sec>
      <title><italic>bioGUI</italic> integration with CWL and argparse</title>
      <p>The CWL (<xref rid="ref-4" ref-type="bibr">Amstutz et al., 2016</xref>) only describes the CL workflow and neither provides a GUI nor means to install the desired tool. Due to this more general specification, CWL fits most problems, but specific annotations of inputs, explanations or the embedding of images is not supported in CWL.</p>
      <p>While developers can always create templates manually, <italic>bioGUI</italic> supports developers by offering a template generator from CWL templates or python3 argparse CL parsers. Since there are already many CWL templates available for bioinformatics CL applications, CWL files can be used as a base to automatically generate <italic>bioGUI</italic> templates from. Using the <italic>bioGUI template generator</italic> for argparse, it is also possible to automatically generate templates from CWL files (making use of the cwl2argparse program provided by CWL). Our generator takes as input the argparse parser or CWL file and creates input elements for all elements. In case the type of an input is unclear or not supported, the generator falls back to a regular text-input element.</p>
    </sec>
  </sec>
  <sec sec-type="results">
    <title>Results</title>
    <sec>
      <title>bioGUI templates</title>
      <p>Currently more than 25 (install) modules exist for <italic>bioGUI</italic>. These represent basically three groups of bioinformatics tasks: next-generation sequencing data analysis and transcriptomics, long read sequencing analysis and assembly as well as more general sequence analysis. In general these install modules will install the respective application on the local machine. The Circlator (<xref rid="ref-15" ref-type="bibr">Hunt et al., 2015</xref>) template allows to pull and use the corresponding Docker image. The available tools, as well as their respective categorization, are listed in <xref rid="table-1" ref-type="table">Table 1</xref>.</p>
      <table-wrap id="table-1" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.7717/peerj.7091/table-1</object-id>
        <label>Table 1</label>
        <caption>
          <title>List of available templates and install modules (starting with Install) for <italic>bioGUI</italic>.</title>
        </caption>
        <alternatives>
          <graphic xlink:href="peerj-07-8111-g009"/>
          <table frame="hsides" rules="groups" content-type="text">
            <colgroup span="1">
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th rowspan="2" colspan="1">Module name</th>
                <th rowspan="2" colspan="1">Task</th>
                <th colspan="2" rowspan="1">Install module</th>
              </tr>
              <tr>
                <th rowspan="1" colspan="1">WSL and Ubuntu</th>
                <th rowspan="1" colspan="1">Mac OS</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="1" colspan="1">First Time Mac OS Setup</td>
                <td rowspan="1" colspan="1">Initialisation</td>
                <td rowspan="1" colspan="1">–</td>
                <td rowspan="1" colspan="1">✓</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">First Time Ubuntu/WSL/apt-get Setup</td>
                <td rowspan="1" colspan="1">Initialisation</td>
                <td rowspan="1" colspan="1">✓</td>
                <td rowspan="1" colspan="1">–</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Install Ballgown v1.0.1 (<xref rid="ref-33" ref-type="bibr">Pertea et al., 2016</xref>)</td>
                <td rowspan="1" colspan="1">NGS transcriptomics</td>
                <td rowspan="1" colspan="1">✓</td>
                <td rowspan="1" colspan="1"/>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Install Bowtie1 (<xref rid="ref-21" ref-type="bibr">Langmead et al., 2009</xref>)</td>
                <td rowspan="1" colspan="1">NGS</td>
                <td rowspan="1" colspan="1">✓</td>
                <td rowspan="1" colspan="1"/>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Install Bowtie2 v2.2.9 (<xref rid="ref-20" ref-type="bibr">Langmead &amp; Salzberg, 2012</xref>)</td>
                <td rowspan="1" colspan="1">NGS</td>
                <td rowspan="1" colspan="1">✓</td>
                <td rowspan="1" colspan="1">✓</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Install bwa v0.7.17 (<xref rid="ref-25" ref-type="bibr">Li &amp; Durbin, 2009</xref>)</td>
                <td rowspan="1" colspan="1">NGS</td>
                <td rowspan="1" colspan="1">✓</td>
                <td rowspan="1" colspan="1">✓</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Install canu (gitHub, <xref rid="ref-19" ref-type="bibr">Koren et al. (2017)</xref></td>
                <td rowspan="1" colspan="1">Assembly</td>
                <td rowspan="1" colspan="1">✓</td>
                <td rowspan="1" colspan="1"/>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Install featureCounts (<xref rid="ref-27" ref-type="bibr">Liao, Smyth &amp; Shi, 2014</xref>)</td>
                <td rowspan="1" colspan="1">NGS transcriptomics</td>
                <td rowspan="1" colspan="1">✓</td>
                <td rowspan="1" colspan="1">✓</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Install glimmer302b (<xref rid="ref-10" ref-type="bibr">Delcher et al., 2007</xref>)</td>
                <td rowspan="1" colspan="1">Genome annotation</td>
                <td rowspan="1" colspan="1">✓</td>
                <td rowspan="1" colspan="1"/>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Install graphmap (<xref rid="ref-40" ref-type="bibr">Sović et al., 2016</xref>)</td>
                <td rowspan="1" colspan="1">Long read sequencing</td>
                <td rowspan="1" colspan="1">✓</td>
                <td rowspan="1" colspan="1">✓</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Install albacore (pip wheel, ONT)</td>
                <td rowspan="1" colspan="1">Long read sequencing</td>
                <td rowspan="1" colspan="1">✓</td>
                <td rowspan="1" colspan="1"/>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Install guppy (linux tar.gz, ONT)</td>
                <td rowspan="1" colspan="1">Long read sequencing</td>
                <td rowspan="1" colspan="1">✓</td>
                <td rowspan="1" colspan="1"/>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Install hisat2 (<xref rid="ref-18" ref-type="bibr">Kim et al., 2019</xref>)</td>
                <td rowspan="1" colspan="1">NGS transcriptomics</td>
                <td rowspan="1" colspan="1">✓</td>
                <td rowspan="1" colspan="1">✓</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Install hmmer-3.1b2 (<xref rid="ref-45" ref-type="bibr">Wheeler &amp; Eddy, 2013</xref>)</td>
                <td rowspan="1" colspan="1">Sequence analysis</td>
                <td rowspan="1" colspan="1">✓</td>
                <td rowspan="1" colspan="1"/>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Install jellyfish-2.2.6 (<xref rid="ref-29" ref-type="bibr">Marçais &amp; Kingsford, 2011</xref>)</td>
                <td rowspan="1" colspan="1">NGS</td>
                <td rowspan="1" colspan="1">✓</td>
                <td rowspan="1" colspan="1"/>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Install minimap2/miniasm/racon (gitHub)</td>
                <td rowspan="1" colspan="1">Assembly (long-read)</td>
                <td rowspan="1" colspan="1">✓</td>
                <td rowspan="1" colspan="1">✓</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Install MS-EmpiRe (<xref rid="ref-3" ref-type="bibr">Ammar et al., 2019</xref>)</td>
                <td rowspan="1" colspan="1">NGS transcriptomics</td>
                <td rowspan="1" colspan="1">✓</td>
                <td rowspan="1" colspan="1">✓</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Install PureSeqTM (<xref rid="ref-44" ref-type="bibr">Wang et al., 2019</xref>)</td>
                <td rowspan="1" colspan="1">Sequence analysis</td>
                <td rowspan="1" colspan="1">✓</td>
                <td rowspan="1" colspan="1"/>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Install rMATS-3.2.5 (<xref rid="ref-37" ref-type="bibr">Shen et al., 2014</xref>)</td>
                <td rowspan="1" colspan="1">NGS transcriptomics</td>
                <td rowspan="1" colspan="1">✓</td>
                <td rowspan="1" colspan="1"/>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Install rnahybrid (<xref rid="ref-34" ref-type="bibr">Rehmsmeier et al., 2004</xref>)</td>
                <td rowspan="1" colspan="1">Sequence analysis</td>
                <td rowspan="1" colspan="1">✓</td>
                <td rowspan="1" colspan="1">✓</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Install RSEM v1.3.0 (<xref rid="ref-24" ref-type="bibr">Li &amp; Dewey, 2014</xref>)</td>
                <td rowspan="1" colspan="1">NGS transcriptomics</td>
                <td rowspan="1" colspan="1">✓</td>
                <td rowspan="1" colspan="1"/>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Install samtools-1.3.1 (<xref rid="ref-26" ref-type="bibr">Li et al., 2009</xref>)</td>
                <td rowspan="1" colspan="1">NGS</td>
                <td rowspan="1" colspan="1">✓</td>
                <td rowspan="1" colspan="1">✓</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Install SPAdes v3.13.0 (<xref rid="ref-7" ref-type="bibr">Bankevich et al., 2012</xref>)</td>
                <td rowspan="1" colspan="1">Assembly (hybrid)</td>
                <td rowspan="1" colspan="1">✓</td>
                <td rowspan="1" colspan="1">✓</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Install StringTie v1.3.0 (<xref rid="ref-33" ref-type="bibr">Pertea et al., 2016</xref>)</td>
                <td rowspan="1" colspan="1">NGS transcriptomics</td>
                <td rowspan="1" colspan="1">✓</td>
                <td rowspan="1" colspan="1"/>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Install Top Monitor (ssh example)</td>
                <td rowspan="1" colspan="1">Technical demo</td>
                <td rowspan="1" colspan="1">✓</td>
                <td rowspan="1" colspan="1">✓</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Install Trimmomatic v0.36 (<xref rid="ref-8" ref-type="bibr">Bolger, Lohse &amp; Usadel, 2014</xref>)</td>
                <td rowspan="1" colspan="1">NGS</td>
                <td rowspan="1" colspan="1">✓</td>
                <td rowspan="1" colspan="1"/>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Install wtdbg2 (<xref rid="ref-35" ref-type="bibr">Ruan &amp; Li, 2019</xref>)</td>
                <td rowspan="1" colspan="1">Assembly (long-read)</td>
                <td rowspan="1" colspan="1">✓</td>
                <td rowspan="1" colspan="1">×</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Template Circlator (<xref rid="ref-15" ref-type="bibr">Hunt et al., 2015</xref>)</td>
                <td rowspan="1" colspan="1">Assembly</td>
                <td rowspan="1" colspan="1">✓</td>
                <td rowspan="1" colspan="1">✓</td>
              </tr>
            </tbody>
          </table>
        </alternatives>
        <table-wrap-foot>
          <fn id="table-1fn">
            <p>
              <bold>Note:</bold>
            </p>
          </fn>
          <fn id="table-1fn1" fn-type="other">
            <p>Tools marked with ✓ provide an install module for the operating system of the respective column.</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
    </sec>
    <sec>
      <title>Benchmarking bioGUI templates</title>
      <p>Our benchmark comprises of four tasks. The first task is to assemble a bacterial genome from Oxford Nanopore long reads, for which the Minimap2 (<xref rid="ref-23" ref-type="bibr">Li, 2018</xref>)/miniasm (<xref rid="ref-22" ref-type="bibr">Li, 2016</xref>)/Racon (<xref rid="ref-41" ref-type="bibr">Vaser et al., 2017</xref>) pipeline (available as install module from <italic>bioGUI</italic>) is used. The second task is the quantification of reads from a yeast mRNA sequencing project using Oxford Nanpore Reads and Illumina Reads (EMBL ENA studies <uri xlink:href="https://www.ebi.ac.uk/ena/data/view/PRJNA398797">PRJNA398797</uri> (MinION) and <uri xlink:href="https://www.ebi.ac.uk/ena/data/view/SAMN00849440">SAMN00849440</uri> (Illumina)). The quantification is performed using featureCounts from the subread package (<xref rid="ref-27" ref-type="bibr">Liao, Smyth &amp; Shi, 2014</xref>). The third task uses these results to compute differential gene expression. Differential gene expression analysis is performed using MS-EmpiRe in R (install module available, <xref rid="ref-3" ref-type="bibr">Ammar et al. (2019)</xref>). Finally the fourth task uses RNAhybrid to predict miRNA binding sites (1,978 murine miRNAs) in 170 sequences of each 200 nt.</p>
      <p>The results are shown in <xref rid="table-2" ref-type="table">Table 2</xref>. The given runtimes are wall clock times. The peak RAM consumption has been sampled from the process viewer on the given operating systems (Task Manager on Windows, top on Linux and Mac OS).</p>
      <table-wrap id="table-2" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.7717/peerj.7091/table-2</object-id>
        <label>Table 2</label>
        <caption>
          <title>Benchmarking results for the four selected tasks (see <italic>Benchmarking bioGUI templates</italic> within the Results section) on the described hardware (see <xref rid="table-A1" ref-type="table">Table A1</xref>).</title>
          <p>All runs are started via bioGUI.</p>
        </caption>
        <alternatives>
          <graphic xlink:href="peerj-07-8111-g010"/>
          <table frame="hsides" rules="groups" content-type="text">
            <colgroup span="1">
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th rowspan="2" colspan="1">Task</th>
                <th colspan="2" rowspan="1">Linux server</th>
                <th colspan="2" rowspan="1">Lenovo T470</th>
                <th colspan="2" rowspan="1">Surface book</th>
                <th colspan="2" rowspan="1">MacBook air</th>
              </tr>
              <tr>
                <th rowspan="1" colspan="1">Time</th>
                <th rowspan="1" colspan="1">Peak RAM</th>
                <th rowspan="1" colspan="1">Time</th>
                <th rowspan="1" colspan="1">Peak RAM</th>
                <th rowspan="1" colspan="1">Time</th>
                <th rowspan="1" colspan="1">Peak RAM</th>
                <th rowspan="1" colspan="1">Time</th>
                <th rowspan="1" colspan="1">Peak RAM</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="1" colspan="1">Assembly</td>
                <td rowspan="1" colspan="1">10:12 min</td>
                <td rowspan="1" colspan="1">6.8 GB</td>
                <td rowspan="1" colspan="1">23:00 min</td>
                <td rowspan="1" colspan="1">6.5 GB</td>
                <td rowspan="1" colspan="1">30:00 min</td>
                <td rowspan="1" colspan="1">6.5 GB</td>
                <td rowspan="1" colspan="1">44:30 min</td>
                <td rowspan="1" colspan="1">6.5 GB</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">featureCounts (MinION)</td>
                <td rowspan="1" colspan="1">00:38 min</td>
                <td rowspan="1" colspan="1">20 MB</td>
                <td rowspan="1" colspan="1">00:54 min</td>
                <td rowspan="1" colspan="1">18 MB</td>
                <td rowspan="1" colspan="1">01:12 min</td>
                <td rowspan="1" colspan="1">18 MB</td>
                <td rowspan="1" colspan="1">01:30 min</td>
                <td rowspan="1" colspan="1">18 MB</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">featureCounts (Illumina)</td>
                <td rowspan="1" colspan="1">01:13 min</td>
                <td rowspan="1" colspan="1">28 MB</td>
                <td rowspan="1" colspan="1">01:41 min</td>
                <td rowspan="1" colspan="1">25 MB</td>
                <td rowspan="1" colspan="1">02:02 min</td>
                <td rowspan="1" colspan="1">25 MB</td>
                <td rowspan="1" colspan="1">02:30 min</td>
                <td rowspan="1" colspan="1">25 MB</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">DE quantification (MinION)</td>
                <td rowspan="1" colspan="1">00:19 min</td>
                <td rowspan="1" colspan="1">0.7 GB</td>
                <td rowspan="1" colspan="1">00:25 min</td>
                <td rowspan="1" colspan="1">0.6 GB</td>
                <td rowspan="1" colspan="1">00:28 min</td>
                <td rowspan="1" colspan="1">0.6 GB</td>
                <td rowspan="1" colspan="1">00:42 min</td>
                <td rowspan="1" colspan="1">0.6 GB</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">DE quantification (Illumina)</td>
                <td rowspan="1" colspan="1">00:14 min</td>
                <td rowspan="1" colspan="1">0.5 GB</td>
                <td rowspan="1" colspan="1">00:19 min</td>
                <td rowspan="1" colspan="1">0.4 GB</td>
                <td rowspan="1" colspan="1">00:20 min</td>
                <td rowspan="1" colspan="1">0.4 GB</td>
                <td rowspan="1" colspan="1">00:31 min</td>
                <td rowspan="1" colspan="1">0.4 GB</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">RNAhybrid</td>
                <td rowspan="1" colspan="1">07:35 min</td>
                <td rowspan="1" colspan="1">19 MB</td>
                <td rowspan="1" colspan="1">23:00 min</td>
                <td rowspan="1" colspan="1">18 MB</td>
                <td rowspan="1" colspan="1">13:00 min</td>
                <td rowspan="1" colspan="1">18 MB</td>
                <td rowspan="1" colspan="1">16:55 min</td>
                <td rowspan="1" colspan="1">18 MB</td>
              </tr>
            </tbody>
          </table>
        </alternatives>
      </table-wrap>
    </sec>
  </sec>
  <sec sec-type="discussion">
    <title>Discussion</title>
    <p><italic>bioGUI</italic> is a framework for easy GUI-based usage of CL applications in the life sciences. Using <italic>bioGUI</italic>, high-quality CL applications can be made accessible to as many researchers as possible. This is achieved by lowering the hurdles to overcome for using bioinformatics applications, particularly on Windows.</p>
    <sec>
      <title>Use-case analysis</title>
      <p>Our use-case analysis (Appendix section “Use-cases”) has revealed several requirements for <italic>bioGUI</italic> (see the section “Methods”) to enable the user to perform the sequencing analysis and to allow the developer a fast template creation (<xref ref-type="fig" rid="fig-2">Fig. 2</xref>).</p>
      <fig id="fig-2" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.7717/peerj.8111/fig-2</object-id>
        <label>Figure 2</label>
        <caption>
          <title><italic>bioGUI</italic> use-case study, from a developer’s and user’s perspective, performed on an exemplary RNAseq analysis workflow.</title>
          <p>The dark-gray underlayed tasks represent the developer’s tasks, and the bright-yellow part represents the analysis pipeline the user wants to execute. Tasks requiring user-action are shown as rectangles and intermediate results are shown in ellipses. Cyan ellipses denote solutions/results (e.g., template repository) offered by <italic>bioGUI. bioGUI</italic> starts sub-processes for each task, such that the overhead for any started processes is as small as possible. Upon finishing a task or pipeline, <italic>bioGUI</italic> can display a notification and open generated output.</p>
        </caption>
        <graphic xlink:href="peerj-07-8111-g002"/>
      </fig>
      <p>An easy installation (goal 1) is given through the availability of install modules, which can be downloaded from the <italic>bioGUI repository</italic> and started via a GUI. These also allow additional inputs (e.g., Python wheels for albacore, goal 6).</p>
      <p>The install modules combine the installation of an application and the creation of the actual GUI template. If the developers employ automatic testing of their software (e.g., build checks with Travis (<uri xlink:href="https://travis-ci.org/">https://travis-ci.org/</uri>)), the install part resembles a Travis container setup (goal 2): dependencies and the application itself are installed into an operating system. Even if not, most bioinformaticians extensively use Ubuntu and/or bash-scripts. Thus writing a script to install dependencies is not a significantly hard workload. We have reached a seamless and time-efficient creation of templates using an XML-based DSL. XML is particularly helpful as it allows to specify hierarchies and attributes to objects. Using our template generator for CWL and python3-argparse, <italic>bioGUI</italic> templates can be created even faster (goal 2). The templates are highly flexible in the creation of CL parameters, also due to providing script nodes. By providing install modules and templates, high-quality open-source bioinformatics applications become more accessible to the community.</p>
      <p>The <italic>bioGUI</italic> application is cross-platform compatible and only requires few MBs of disk space (goal 5). <italic>bioGUI</italic> implements several possibilities to execute applications (see <xref ref-type="fig" rid="fig-A4">Fig. A4</xref>). In general, the only runtime overhead involved is the creation of a bash-process which starts the actual program with the assembled CL arguments (goal 5). <italic>bioGUI</italic>, being a local stand-alone application, has the possibility to target both, locally installed and web-based applications, reachable within a controlled environment and with large data. In addition, <italic>bioGUI</italic> also supports the use of Docker containers, for cases where all other options fail.</p>
      <p>The UI can be made easily understandable (goal 3). Using text-labels, the user can get help on inputs (if specified by the developer), links can be used to provide further information and most importantly tool-tips could also hint the user to which information is needed at a certain step.</p>
      <p>Finally, filled out templates can be saved via the <italic>Save Template</italic> button in <italic>bioGUI</italic>, and all available templates can be filtered (goal 4). This enables to keep track of performed analyses, and makes results more reproducible, because parameters are saved. Having the possibility to save templates also allows to easily repeat analysis with the same parameters. Additionally, using the <italic>bioGUI</italic> repository, templates can easily be shared among users, making it easier to standardize runs among different users or even institutes.</p>
      <p>An anonymous survey (with 10 participants) about common problems in using bioinformatics software has been conducted among colleagues (<italic>n</italic> = 4) and under-graduate students or collaborators from life sciences (<italic>n</italic> = 6, short: collaborators). The results are available in the Appendix section “User Survey.”</p>
      <p>We asked “What were the most struggle-some tasks in accessing and using the software?” referring to recently used bioinformatics software by the participants. Eight of the 10 participants answered that finding parameters or using the software has been strugglesome. This shows that the selected goals for <italic>bioGUI</italic> address actual problems faced by both experts and regular users. We further asked the participants to install and use <italic>graphmap</italic> (<xref rid="ref-40" ref-type="bibr">Sović et al., 2016</xref>), which has been selected because it is reasonably easy to install and use. First the participants were asked to install the tool using the CLI as well as via <italic>bioGUI</italic>. For this task, all instructions have been provided. The question “Has the installation process been easy?” (0 = No, 5 = Yes) has been answered with an average score of 4.4 for the CLI and 4.8 for <italic>bioGUI</italic>. Then the participants were asked to align the given reads against a given reference genome—this time without giving the instructions. Again we asked “Has it been easy to align the reads?” (0 = No, 5 = Yes). Here the CLI scored a 3.5 on average and <italic>bioGUI</italic> a 4.9. (<xref ref-type="fig" rid="fig-A6">Fig. A6</xref>). This coincidences with the answer to our question “Overall: Which interface was easier to use in your opinion?” (0 = CLI, 5 = GUI). Here the average score has been 4. Bioinformaticians and collaborators answered differently: the average bioinformatician has been undecided on which interface has been easier to use (average 3), but non-bioinformaticians preferred the GUI over the CLI (average 4.5).</p>
      <p>The survey indicates that there are problems with bioinformatics software regarding installation and usage of CLI tools. These problems can be reduced by providing a GUI for these programs. The more experienced a user is on the CL, the less impact a GUI has. But particularly for non-experts on the CL, a GUI makes it easier to use a program.</p>
    </sec>
    <sec>
      <title>bioGUI repository</title>
      <p>We provide a repository of preconfigured templates on our website (<xref ref-type="fig" rid="fig-A5">Fig. A5</xref>), where authors and users can search for and browse existing templates, or submit new ones. <italic>bioGUI</italic> can access uploaded templates and save them directly for use. Specifically for WSL and Ubuntu users install modules are provided, which take care for dependency resolution and install applications (locally) into the user’s home. This currently works in any environment using the <italic>aptitude (apt)</italic> package manager, but users can submit templates which also support other environments, since install modules are versatile bash scripts. On Mac OS, some install modules support Homebrew for template installation. Install modules download and potentially severely alter a system (especially if the <italic>sudo</italic> password is supplied). Thus, submitted install modules are manually curated and are only accessible when no security threat has been identified.</p>
      <p>The major goal of <italic>bioGUI</italic> is to enable any scientist to use bioinformatics applications. While we extend the repository on a regular basis depending on our own use, users can also request new templates for applications relevant to them.</p>
    </sec>
    <sec>
      <title>Availability and extensibility</title>
      <p><italic>bioGUI</italic> is open-source software and users or institutions can either use our global <italic>bioGUI</italic> repository or deploy a custom repository, for example, one which is only reachable within an institution.</p>
      <p><italic>bioGUI</italic> is available on GitHub (<uri xlink:href="https://github.com/mjoppich/bioGUI">https://github.com/mjoppich/bioGUI</uri>). Both source code as well as pre-built binary distributions (for Microsoft Windows, Linux and Mac OS) are available. While <italic>bioGUI</italic> will run on any Linux distribution, install modules currently use mainly aptitude as package manager (e.g., Ubuntu, debian-based distributions). If used on Windows, the same applies for the used WSL-application (Ubuntu 18.04 is recommended). <italic>bioGUI</italic> has been tested on Microsoft Windows 10, build 17763. On Mac OS <italic>bioGUI</italic> uses <italic>Homebrew</italic> (<uri xlink:href="https://brew.sh/">https://brew.sh/</uri>) to install dependencies. <italic>Homebrew</italic> does not support a silent, non-interactive installation: the user has to install <italic>Homebrew</italic> before running the <italic>First time setup for Mac OS</italic> install module which will then install the most common dependencies.</p>
      <p>While a number of use cases and corresponding components are already included in bioGUI, we encourage users to contribute on GitHub by either pushing their own extensions, or opening feature requests. Further documentation (installation &amp; setup guide, how to write templates) is also available via ReadTheDocs (<uri xlink:href="https://biogui.readthedocs.io/en/latest/index.html">https://biogui.readthedocs.io/en/latest/index.html</uri>).</p>
    </sec>
    <sec>
      <title>Benchmarking bioGUI templates</title>
      <p><italic>bioGUI</italic> starts a sub-process for each executed program. Thus, the only overhead created by <italic>bioGUI</italic> itself is the one for running the GUI, which creates less than 1% CPU usage, allocates less than 50 MB and only performs IO operations when loading a new template (assessed via Sysinternals Process Explorer (<xref rid="ref-30" ref-type="bibr">Microsoft Sysinternals, 2019</xref>)).</p>
      <p>Nonetheless we have been interested in demonstrating that many bioinformatics tasks do not require a dedicated server setup but can be performed on regular laptop computers. We thus benchmark four typical tasks performed using <italic>bioGUI</italic>.</p>
      <p>The selected tasks allow a good overview of different demands: Tasks 1 (assembly) and 3 (differential expression analysis) are CPU-bound tasks, while tasks 2 (feature counting) and 4 (miRNA target prediction) are IO-bound. Particularly task 2 has a high load of read operations, and task 4 has a high demand of write operations. We compare these tasks on a dedicated (Linux) server, one (rather) powerful Lenovo T470p laptop computer, one Surface Book laptop computer (resource-wise a typical laboratory laptop) as well as one MacBook Air. The computer specifications are listed in the <xref rid="table-A1" ref-type="table">Table A1</xref> and results are shown in <xref rid="table-2" ref-type="table">Table 2</xref>. Even though we have not included the alignment of the Illumina yeast reads in this benchmark, it should be noted that this task also runs well on laptop computers. On the Lenovo laptop the alignment of the SRR453566 sample, consisting of 5,725,730 paired reads, has a peak RAM consumption of 34 MB and took 13:50 min, while the Surface Book is even faster at less than 8 min. This presumably can be explained due to different SSD speeds.</p>
      <p>The results in <xref rid="table-2" ref-type="table">Table 2</xref> show that even (computational power-wise) lower-end computers can run bioinformatics tools. More interestingly these results show that the WSL allows the execution of interesting bioinformatic tools. It can be seen that WSL is slow for IO operations, but has a comparable speed for in-memory operations. Particularly tools requiring a lot of IO are considerably faster on the Linux Server (Assembly, RNAhybrid), while the computational expensive tools like MS-EmpiRe (<xref rid="ref-3" ref-type="bibr">Ammar et al., 2019</xref>) and featureCounts (<xref rid="ref-27" ref-type="bibr">Liao, Smyth &amp; Shi, 2014</xref>) run within similar times.</p>
    </sec>
  </sec>
  <sec sec-type="conclusions">
    <title>Conclusion</title>
    <p>The <italic>bioGUI</italic> framework makes it easy to develop, provide and use GUIs for CL applications. Particularly for non-computer experts, using CLIs is strugglesome. Providing a GUI and/or install modules increases accessibility to high-quality bioinformatics applications for these users. <italic>bioGUI</italic> creates a cross-platform GUI experience for many open-source bioinformatics applications. In particular, <italic>bioGUI</italic> enables the deployment of academic bioinformatics applications to Microsoft Windows workstations and laptops, but also to Linux or Mac OS.</p>
    <p>The separation of the GUI components and the program logic allows the creation of templates in two steps. First, the template developer adds input elements to the window and, second, assembles these inputs according to the needs of the application back into CL arguments. This way almost any CL application can be used with a GUI, enabling many more researchers to use open-source tools. Providing install modules to make UNIX applications available to Microsoft Windows users (via WSL) supports this goal.</p>
    <p><italic>bioGUI</italic> can not always replace dedicated GUIs. A tailored UI will still be more usable and user-friendly than any generic solution can be. We experienced this in our use-case: certain tasks (e.g., selecting options) require special solutions, let alone from displaying or interpreting the results. However, especially with the install module concept we aim to provide a seamless installation and create the possibility to run CL applications by all scientists. Using the <italic>bioGUI</italic> framework, simple GUIs can be constructed. But these simple GUIs already help to make bioinformatic tools more accessible by making execution and usage of these tools more comfortable.</p>
    <p>Using <italic>bioGUI</italic>, it becomes a simple exercise to use supported CL applications from a GUI. Currently, there are already installed modules and templates for more than 25 applications in our <italic>bioGUI</italic> repository. <italic>bioGUI</italic> lowers the burden to use excellent applications, allowing more scientists a better analysis of their data. With <italic>bioGUI</italic> it is not necessary to understand how to use and navigate on the CL; instead, the focus is set on the applications, its method and parameters, and finally the data.</p>
  </sec>
  <sec sec-type="appendix">
    <title>Appendix</title>
    <sec>
      <title>Use-cases</title>
      <sec>
        <title>Non-computer expert</title>
        <p>Many researchers work in small labs without any significant IT support. The computers in their labs mostly run Microsoft Windows and PhD students often have to bring their own devices (because the institute does not provide such working devices). Particularly in the life sciences, users can profit a lot from existing, open-source software. However, installing major bioinformatics applications on such lab computers often poses a problem: administrators (if existent) have little time to deploy new applications, or there is no support in installing new applications at all. If the users are not computer experts, installing and using command line tools may be strugglesome for them (see Appendix section “User Survey”; <xref rid="ref-31" ref-type="bibr">Morais et al., 2018</xref>). While there are users that can use the CL efficiently, the cited literature and our personal experience shows that there are many users who do not feel comfortable on the CL. This does not mean that they don’t want to learn it or are incapable of learning it, but their focus simply does not lie in learning to use the CL. Instead, they want to get the results for their data, fast, reliably and troubleless. One of these users is Luisa.</p>
        <p>Oxford Nanopore Sequencing is becoming more and more popular, and even the sequencing hardware can be found in more and more biological laboratories, like in Luisa’s. Particularly important for MinION-sequencing is the post-processing of the actual raw read data. While in previous versions, base-calling has been directly performed in the cloud by Oxford Nanopore, this has now been pushed back to the client side. Thus, despite having the sequencing data on her laptop, Luisa must still retrieve the sequences herself, using, for instance, the Albacore basecaller (if they don’t want to rely on LiveBasecalling). Unfortunately, like many bioinformatics packages, the basecaller only comes as a python CL program. Additionally, the download is only available as a python-wheel, which means there is no UI-based setup available. Luisa thus needs assistance for the installation of the python-wheel as well as starting the basecalling process. After the reads are basecalled, reads need to be aligned to a reference genome. While there exist reference genomes in correct format on her lab computer (or can easily be downloaded from the web), the CL program to map the reads is available only from GitHub to be installed from source. Luisa has troubles using the CL to clone the repository, compile and use the CL application.</p>
        <p>Luisa does not require a custom analysis of her data, but wants to initially screen her data in a simple, basic and robust analysis. She is mostly busy in her lab, hence an analysis has to be prepared fast, and parameters should be stored for later reference. For this a local searchable database of saved templates is needed.</p>
      </sec>
      <sec>
        <title>Software developers</title>
        <p>A developer finished his sequence alignment program. The project is already published on GitHub and in a journal, but only few people start using it. From the issues and feature requests on GitHub it can be seen that mainly other bioinformaticians use the program. Thus the developer decides that the program should be accessible to more researchers and looks for ways to make the program useable by everyone. Since the program is written in python, it is cross-platform compatible per-se. However, it is noticed that domain-experts do not install and use the program. Thus the developer must look for an easy way to distribute the application and make it accessible to more researchers. The developer’s time is limited, having other projects waiting. There is also little support for developing GUI from colleagues, as they have different views on the extent of autonomy a wet-lab researcher should have regarding sequencing analysis.</p>
      </sec>
    </sec>
    <sec>
      <title>bioGUI paper mockup</title>
      <fig id="fig-A1" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.7717/peerj.8111/fig-A1</object-id>
        <label>Figure A1</label>
        <caption>
          <title><italic>bioGUI</italic> mockup showing the elements a template could be made of.</title>
          <p>The GUI has a searchable list of installed templates as well as a link to our repository of templates. The right side is reserved to the currently displayed GUI template. Here a structured view of the available parameters, as well as hints for filling these, is shown to the user. Finally, the user has the possibility to run the program by clicking a button and to see the program’s output.</p>
        </caption>
        <graphic xlink:href="peerj-07-8111-g003"/>
      </fig>
    </sec>
    <sec>
      <title>Extending templates with script nodes</title>
      <p>Often it is required to perform string-manipulations (e.g., remove file extensions) for CL arguments. For instance, the example below takes as input a HISAT2 index file, and removes the file extension, such that the index will be accepted by HISAT2. For evaluation of this node, the <italic>evaluate</italic>-function is called with the <italic>argv</italic>-references as input parameters. The last return-value of the script’s call stack is taken as output value of the script -node.</p>
      <p><bold>Listing 1.</bold> bioGUI script node with LUA function example. Upon evaluating this node, the evaluate function will be called with the arguments listed in the argv attribute of the script node.</p>
      <p>
        <monospace>&lt;script id=“hisat_index_rel” argv=“${hisat_index_rel_raw}”&gt;</monospace>
      </p>
      <p>
        <monospace>&lt;![CDATA[</monospace>
      </p>
      <p>
        <monospace><bold>function</bold> evaluate(arg1)</monospace>
      </p>
      <p>    <monospace><bold>if</bold> (string.match(arg1, “.%d.ht2$”)) <bold>then</bold></monospace></p>
      <p>      <monospace><bold>return</bold>(<bold>string.sub</bold>(arg1, 0, arg1:find(“.%d.ht2$”)-1))</monospace></p>
      <p>    <monospace><bold>end</bold></monospace></p>
      <p>   <monospace><bold>return</bold>(arg1)</monospace></p>
      <p>  <monospace><bold>end</bold></monospace></p>
      <p>
        <monospace>]]&gt;</monospace>
      </p>
      <p>
        <monospace>&lt;/script&gt;</monospace>
      </p>
    </sec>
    <sec>
      <title>Evaluating a bioGUI template</title>
      <p>In <xref ref-type="fig" rid="fig-A2">Fig. A2</xref> the process of assembling a CL call from the shown bioGUI template is explained. First, the creation of the &lt;<monospace>window</monospace>&gt; model (dark gray) will be explained, followed by the creation of the CL arguments using the &lt;<monospace>execution</monospace>&gt; model (shaded).</p>
      <p>The window component consists of four different components, which are grouped in a vertical layout (default for window component). A label describing the input file dialog is placed on the main window, followed by the actual file dialog with ID <monospace>input</monospace>. Then a group box with title and a checkable status is created, which contains an output file dialog. Finally, the action button, which starts the CL call assembly and the subprocess of this program, and the text output elements are created.</p>
      <p>When the user has entered all desired data, and clicks the action button, the execution phase defined by the execution model will be launched. Therefore the program defined in the execute element is started. For this, the parameters (param) must be assembled. Any text within <monospace>${var}</monospace> is interpreted as a reference to a variable var or the value of a GUI element with id var. Thus, the CL is successively assembled. At first the <monospace>${input}</monospace> element is interpreted and retrieves the value from the input file dialog as this element matches the id. Next the <monospace>${output}</monospace> is interpreted. The <monospace>${output}</monospace> refers to an if construct in the execution part, which compares the value of the element with id os to the string <italic>TRUE</italic> (which is whether the groupbox is checked). If this value is true, this node evaluates to <monospace>netcat 192.168.1.100 55025</monospace>, otherwise to <monospace>tee -a {output file path}</monospace>. Finally, the program <italic>sh</italic> is executed with the created CL arguments. For instance, if the group box is checked, the <monospace>sh -c “cat inputFile | netcat 192.168.1.100 55025”</monospace> will be executed. A full reference of all input types as well as all execution nodes is available online.</p>
      <p>In fact, the evaluation of the execution network resembles the simulation of a petri net (<xref ref-type="fig" rid="fig-A3">Fig. A3</xref>). Each node in the execution network is a place, and its modification/function is the transition, which requires values for all its input places, to generate the output token.</p>
      <fig id="fig-A2" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.7717/peerj.8111/fig-A2</object-id>
        <label>Figure A2</label>
        <caption>
          <title>Template construction and evaluation in <italic>bioGUI</italic>.</title>
          <p>First, the dark gray window part is evaluated to create the GUI. Once the user clicks the run button, the execution part of the template (shaded) is executed by constructing and starting the assembled system call. This system call is constructed in three steps by replacing variables with evaluated terms from the user’s input. Blue lines indicate the visual element a returned value (cyan lines) is taken from. Helper/intermediate nodes to be evaluated are shown in light yellow.</p>
        </caption>
        <graphic xlink:href="peerj-07-8111-g004"/>
      </fig>
      <fig id="fig-A3" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.7717/peerj.8111/fig-A3</object-id>
        <label>Figure A3</label>
        <caption>
          <p>(A) An automatically generated <italic>bioGUI</italic> template from the poreSTAT (Internal tool for minION sequencing analysis) python argument parser. (B) The resulting execution network for the <italic>bioGUI</italic> template shown in (A). The central node represents the fully assembled CL argument (yellow).</p>
        </caption>
        <graphic xlink:href="peerj-07-8111-g005"/>
      </fig>
    </sec>
    <sec>
      <title>Running programs via bioGUI</title>
      <p>Program execution via <italic>bioGUI</italic> can be accomplished via different paths, which are shown in <xref ref-type="fig" rid="fig-A4">Fig. A4</xref>. The easiest way is to execute a native program (one that runs natively on the operating system, e.g., Docker). Then all output can be piped to bioGUI to display this to the user. If the host is a Microsoft Windows 10 OS, <italic>bioGUI</italic> can also run Unix programs via WSL. Then the Unix program runs natively in a WSL bash. The resulting output can be transferred to <italic>bioGUI</italic> via pipes. Of course, for both native and WSL processes, the output can also be transferred via netcat to <italic>bioGUI</italic>. The transfer of the GUI template within install modules is an example. If a process runs on a remote computer, the output can be transferred to <italic>bioGUI</italic> also via network, for example, netcat. Such a process can, for instance, be started by calling <italic>ssh</italic> from <italic>bioGUI</italic> with appropriate parameters. Finally <italic>bioGUI</italic> can also send HTTP POST requests to web-services and accepts an HTTP response as answer. This output can also be displayed by <italic>bioGUI</italic>.</p>
      <p>Since the Docker engine is a local, native process, <italic>bioGUI</italic> also supports the use of Docker containers. The Circlator template is an example of how this can be implemented.</p>
      <fig id="fig-A4" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.7717/peerj.8111/fig-A4</object-id>
        <label>Figure A4</label>
        <caption>
          <title>Possibilities for running bioGUI: locally via processes, on a network via ssh or on the web via HTTP request/response.</title>
          <p>Straight arrow (purple): HTTP execution mode; Dotted arrow (green): Docker execution; Dotdashed arrow(orange): bash/WSL execution; Dashed arrow(cyan): remote/ssh execution.</p>
        </caption>
        <graphic xlink:href="peerj-07-8111-g006"/>
      </fig>
    </sec>
    <sec>
      <title>Hardware specification for benchmarks</title>
      <p>The relevant hardware for benchmarking <italic>bioGUI</italic> is summarized in <xref rid="table-A1" ref-type="table">Table A1</xref>.</p>
      <table-wrap id="table-A1" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.7717/peerj.7091/table-A1</object-id>
        <label>Table A1</label>
        <caption>
          <title>Hardware used to benchmark <italic>bioGUI</italic>.</title>
        </caption>
        <alternatives>
          <graphic xlink:href="peerj-07-8111-g011"/>
          <table frame="hsides" rules="groups" content-type="text">
            <colgroup span="1">
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th rowspan="1" colspan="1">Computer name</th>
                <th rowspan="1" colspan="1">CPU</th>
                <th rowspan="1" colspan="1">RAM</th>
                <th rowspan="1" colspan="1">Storage</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="1" colspan="1">Linux server</td>
                <td rowspan="1" colspan="1">Intel Xeon W-2145 CPU @ 3.70 GHz<break/>8 cores (+8 HT cores)</td>
                <td rowspan="1" colspan="1">128 GB</td>
                <td rowspan="1" colspan="1">Samsung SSD 860<break/>1 TB SSD</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Lenovo laptop (T470p)</td>
                <td rowspan="1" colspan="1">Intel Core i7-7820HQ @ 2.9 GHz<break/>4 cores (+4 HT cores)</td>
                <td rowspan="1" colspan="1">32 GB</td>
                <td rowspan="1" colspan="1">Samsung MZVLB1T0HALR<break/>1 TB SSD</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Microsoft surface book</td>
                <td rowspan="1" colspan="1">Intel Core i5-6300U @ 2.4 GHz<break/>2 cores (+2 HT cores)</td>
                <td rowspan="1" colspan="1">8 GB</td>
                <td rowspan="1" colspan="1">Samsung MZFLV128HCGR<break/>128 GB SSD</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Apple MacBook Air (mid 2012)</td>
                <td rowspan="1" colspan="1">Intel Core i5 @ 1.7 GHz</td>
                <td rowspan="1" colspan="1">8 GB</td>
                <td rowspan="1" colspan="1">128 GB SSD</td>
              </tr>
            </tbody>
          </table>
        </alternatives>
      </table-wrap>
    </sec>
    <sec>
      <title>Template access</title>
      <fig id="fig-A5" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.7717/peerj.8111/fig-A5</object-id>
        <label>Figure A5</label>
        <caption>
          <p>(A) On our website a list of already existing templates can be browsed. Besides the description and author, also the type (install module or template) is shown. (B) All uploaded templates can be downloaded directly from within bioGUI. <italic>bioGUI</italic> allows to search in/filter all available install modules and templates.</p>
        </caption>
        <graphic xlink:href="peerj-07-8111-g007"/>
      </fig>
    </sec>
    <sec>
      <title>User survey</title>
      <p>A user survey among 10 participants (four bioinformaticians, six collaborators (consisting of two under-graduate bioinformatics students and four external collaborators)) has been performed. The derived results are shown in <xref rid="table-A2" ref-type="table">Table A2</xref> and the raw data are shown in <xref rid="table-A3" ref-type="table">Table A3</xref>.</p>
      <table-wrap id="table-A2" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.7717/peerj.7091/table-A2</object-id>
        <label>Table A2</label>
        <caption>
          <title>Derived user survey results from the given answers (<xref rid="table-A3" ref-type="table">Table A3</xref>).</title>
        </caption>
        <alternatives>
          <graphic xlink:href="peerj-07-8111-g012"/>
          <table frame="hsides" rules="groups" content-type="text">
            <colgroup span="1">
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th rowspan="1" colspan="1"/>
                <th rowspan="1" colspan="1">
                  <italic>n</italic>
                </th>
                <th rowspan="1" colspan="1">Median</th>
                <th rowspan="1" colspan="1">Mean</th>
                <th rowspan="1" colspan="1"><italic>p</italic>-value</th>
                <th rowspan="1" colspan="1">Variance</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="1" colspan="1">Better interface bio</td>
                <td rowspan="1" colspan="1">3</td>
                <td rowspan="1" colspan="1">3</td>
                <td rowspan="1" colspan="1">3</td>
                <td rowspan="1" colspan="1"/>
                <td rowspan="1" colspan="1">4</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Better interface collab</td>
                <td rowspan="1" colspan="1">6</td>
                <td rowspan="1" colspan="1">4.5</td>
                <td rowspan="1" colspan="1">4.5</td>
                <td rowspan="1" colspan="1"/>
                <td rowspan="1" colspan="1">0.3</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Better interface all</td>
                <td rowspan="1" colspan="1">9</td>
                <td rowspan="1" colspan="1">4</td>
                <td rowspan="1" colspan="1">4.00</td>
                <td rowspan="1" colspan="1"/>
                <td rowspan="1" colspan="1">1.75</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Easy to align CLI</td>
                <td rowspan="1" colspan="1">10</td>
                <td rowspan="1" colspan="1">3.5</td>
                <td rowspan="1" colspan="1">3.50</td>
                <td rowspan="1" colspan="1"/>
                <td rowspan="1" colspan="1">1.833</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Easy to align bioGUI</td>
                <td rowspan="1" colspan="1">10</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">4.90</td>
                <td rowspan="1" colspan="1">0.0098</td>
                <td rowspan="1" colspan="1">0.1</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Easy to install CLI</td>
                <td rowspan="1" colspan="1">10</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">4.40</td>
                <td rowspan="1" colspan="1"/>
                <td rowspan="1" colspan="1">0.711</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Easy to install bioGUI</td>
                <td rowspan="1" colspan="1">10</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">4.80</td>
                <td rowspan="1" colspan="1">0.2023</td>
                <td rowspan="1" colspan="1">0.178</td>
              </tr>
            </tbody>
          </table>
        </alternatives>
      </table-wrap>
      <fig id="fig-A6" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.7717/peerj.8111/fig-A6</object-id>
        <label>Figure A6</label>
        <caption>
          <title>Scores given by the 10 participants on the question “Has it been easy to align the reads?” after performing the task using the CLI and <italic>bioGUI</italic>.</title>
          <p>These results show that most participants found the task easier using <italic>bioGUI</italic>, but for no-one it was harder to use <italic>bioGUI</italic>.</p>
        </caption>
        <graphic xlink:href="peerj-07-8111-g008"/>
      </fig>
      <table-wrap id="table-A3" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.7717/peerj.7091/table-A3</object-id>
        <label>Table A3</label>
        <caption>
          <title>Relevant participant answers for the performed user survey and the results in <xref rid="table-A2" ref-type="table">Table A2</xref>.</title>
        </caption>
        <alternatives>
          <graphic xlink:href="peerj-07-8111-g013"/>
          <table frame="hsides" rules="groups" content-type="text">
            <colgroup span="1">
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th rowspan="1" colspan="1"/>
                <th rowspan="1" colspan="1">Participant 1</th>
                <th rowspan="1" colspan="1">Participant 2</th>
                <th rowspan="1" colspan="1">Participant 3</th>
                <th rowspan="1" colspan="1">Participant 4</th>
                <th rowspan="1" colspan="1">Participant 5</th>
                <th rowspan="1" colspan="1">Participant 6</th>
                <th rowspan="1" colspan="1">Participant 7</th>
                <th rowspan="1" colspan="1">Participant 8</th>
                <th rowspan="1" colspan="1">Participant 9</th>
                <th rowspan="1" colspan="1">Participant 10</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="1" colspan="1">Usertype (0 = bioinformatician, 1 = student, 2 = collaborator)</td>
                <td rowspan="1" colspan="1">0</td>
                <td rowspan="1" colspan="1">0</td>
                <td rowspan="1" colspan="1">0</td>
                <td rowspan="1" colspan="1">0</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">2</td>
                <td rowspan="1" colspan="1">2</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">2</td>
                <td rowspan="1" colspan="1">2</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Which kind of user-interface does the tool have?</td>
                <td rowspan="1" colspan="1">CLI</td>
                <td rowspan="1" colspan="1">CLI</td>
                <td rowspan="1" colspan="1">CLI</td>
                <td rowspan="1" colspan="1">CLI</td>
                <td rowspan="1" colspan="1">CLI</td>
                <td rowspan="1" colspan="1">CLI</td>
                <td rowspan="1" colspan="1">GUI</td>
                <td rowspan="1" colspan="1">CLI</td>
                <td rowspan="1" colspan="1">CLI</td>
                <td rowspan="1" colspan="1">GUI</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">What were the most struggle-some tasks in accessing and using the software?</td>
                <td rowspan="1" colspan="1">Dependencies</td>
                <td rowspan="1" colspan="1">Using software finding settings</td>
                <td rowspan="1" colspan="1">Finding settings options needed</td>
                <td rowspan="1" colspan="1">Installing software</td>
                <td rowspan="1" colspan="1">Finding settings options needed</td>
                <td rowspan="1" colspan="1">Dependencies starting the software using the software</td>
                <td rowspan="1" colspan="1">Finding settings options needed</td>
                <td rowspan="1" colspan="1">Finding settings options needed</td>
                <td rowspan="1" colspan="1">Using the software</td>
                <td rowspan="1" colspan="1">Finding settings options needed</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">CLI: Has the installation process been easy? (0 = NO, 5 = YES)</td>
                <td rowspan="1" colspan="1">4</td>
                <td rowspan="1" colspan="1">3</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">4</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">3</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">CLI: Has it been easy to align the reads? (0 = NO, 5 = YES)</td>
                <td rowspan="1" colspan="1">4</td>
                <td rowspan="1" colspan="1">2</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">4</td>
                <td rowspan="1" colspan="1">3</td>
                <td rowspan="1" colspan="1">3</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">3</td>
                <td rowspan="1" colspan="1">1</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">bioGUI: Has the installation process been easy? (0 = NO, 5 = YES)</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">4</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">4</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">bioGUI: Has it been easy to align the reads? (0 = NO, 5 = YES)</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">4</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Overall: Which interface was easier to use in your opinion? (0 = CLI, 5 = GUI)</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">3</td>
                <td rowspan="1" colspan="1">4</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">4</td>
                <td rowspan="1" colspan="1">4</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1"/>
              </tr>
            </tbody>
          </table>
        </alternatives>
      </table-wrap>
    </sec>
  </sec>
  <sec sec-type="supplementary-material" id="supplemental-information">
    <title>Supplemental Information</title>
    <supplementary-material content-type="local-data" id="supp-1">
      <object-id pub-id-type="doi">10.7717/peerj.8111/supp-1</object-id>
      <label>Supplemental Information 1</label>
      <caption>
        <title>Survey questions on command-line tools and <italic>bioGUI</italic>.</title>
        <p>The original survey used to assess problems with current bioinformatics applications.</p>
      </caption>
      <media xlink:href="peerj-07-8111-s001.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="supp-2">
      <object-id pub-id-type="doi">10.7717/peerj.8111/supp-2</object-id>
      <label>Supplemental Information 2</label>
      <caption>
        <title>Answers on the survey on command-line tools and <italic>bioGUI</italic>.</title>
        <p>Each column represents a single participant. Questions are in rows.</p>
      </caption>
      <media xlink:href="peerj-07-8111-s002.xlsx">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack>
    <p>We thank Luisa F. Jimenez-Soto and Gergely Csaba for their valuable input as well as for reviewing the manuscript. We thank the participants in our survey for their time. We thank the reviewers for their constructive feedback.</p>
  </ack>
  <sec sec-type="additional-information">
    <title>Additional Information and Declarations</title>
    <fn-group content-type="competing-interests">
      <title>Competing Interests</title>
      <fn fn-type="COI-statement" id="conflict-1">
        <p>The authors declare that they have no competing interests.</p>
      </fn>
    </fn-group>
    <fn-group content-type="author-contributions">
      <title>Author Contributions</title>
      <fn fn-type="con" id="contribution-1">
        <p><xref ref-type="contrib" rid="author-1">Markus Joppich</xref> conceived and designed the experiments, performed the experiments, analyzed the data, prepared figures and/or tables, authored or reviewed drafts of the paper, approved the final draft.</p>
      </fn>
      <fn fn-type="con" id="contribution-2">
        <p><xref ref-type="contrib" rid="author-2">Ralf Zimmer</xref> conceived and designed the experiments, analyzed the data, prepared figures and/or tables, authored or reviewed drafts of the paper, approved the final draft.</p>
      </fn>
    </fn-group>
    <fn-group content-type="other">
      <title>Data Availability</title>
      <fn id="addinfo-1">
        <p>The following information was supplied regarding data availability:</p>
        <p>The bioGUI documentation is available at <uri xlink:href="https://biogui.readthedocs.io/en/latest/">https://biogui.readthedocs.io/en/latest/</uri>. In order to setup Windows Subsystem for Linux (required for using bioGUI on Windows), follow the steps at <uri xlink:href="https://biogui.readthedocs.io/en/latest/build_wsl.html">https://biogui.readthedocs.io/en/latest/build_wsl.html</uri>. bioGUI is open source software. Releases and code are available at <uri xlink:href="https://github.com/mjoppich/bioGUI">https://github.com/mjoppich/bioGUI</uri>. Additional software (cwl2biogui) is available at <uri xlink:href="https://github.com/mjoppich/bioGUItools">https://github.com/mjoppich/bioGUItools</uri>.</p>
      </fn>
    </fn-group>
  </sec>
  <ref-list content-type="authoryear">
    <title>References</title>
    <ref id="ref-1">
      <label>Afgan et al. (2016)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Afgan</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Baker</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Van den Beek</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Blankenberg</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Bouvier</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Čech</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Chilton</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Clements</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Coraor</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Eberhard</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Grüning</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Guerler</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Hillman-Jackson</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Von Kuster</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Rasche</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Soranzo</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Turaga</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Taylor</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Nekrutenko</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Goecks</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>The Galaxy platform for accessible, reproducible and collaborative biomedical analyses: 2016 update</article-title>
        <source>Nucleic Acids Research</source>
        <year>2016</year>
        <volume>44</volume>
        <issue>W1</issue>
        <fpage>W3</fpage>
        <lpage>W10</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkw343</pub-id>
        <pub-id pub-id-type="pmid">27137889</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-2">
      <label>Albert (2016)</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Albert</surname>
            <given-names>I</given-names>
          </name>
        </person-group>
        <source>The biostar handbook</source>
        <year>2016</year>
        <publisher-name>Albert, Istvan</publisher-name>
        <uri xlink:href="https://www.biostarhandbook.com/">https://www.biostarhandbook.com/</uri>
      </element-citation>
    </ref>
    <ref id="ref-3">
      <label>Ammar et al. (2019)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ammar</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Gruber</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Csaba</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Zimmer</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>MS-EmpiRe utilizes peptide-level noise distributions for ultra sensitive detection of differentially abundant proteins</article-title>
        <source>bioRxiv</source>
        <year>2019</year>
        <fpage>514000</fpage>
        <pub-id pub-id-type="doi">10.1101/514000</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-4">
      <label>Amstutz et al. (2016)</label>
      <element-citation publication-type="other">
        <person-group person-group-type="author">
          <name>
            <surname>Amstutz</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Andeer</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Chapman</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Chilton</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Crusoe</surname>
            <given-names>MR</given-names>
          </name>
          <name>
            <surname>Valls Guimer</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Carrasco Hernandez</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Ivkovic</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Kartashov</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Kern</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Leehr</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Ménager</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Mikheev</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Pierce</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Randall</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Soiland-Reyes</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Stojanovic</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Tijanić</surname>
            <given-names>N</given-names>
          </name>
        </person-group>
        <article-title>Common workflow language, draft 3</article-title>
        <year>2016</year>
        <uri xlink:href="https://figshare.com/articles/Common_Workflow_Language_draft_3/3115156/1">https://figshare.com/articles/Common_Workflow_Language_draft_3/3115156/1</uri>
      </element-citation>
    </ref>
    <ref id="ref-5">
      <label>Anslan et al. (2017)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Anslan</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Bahram</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Hiiesalu</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Tedersoo</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>PipeCraft: flexible open-source toolkit for bioinformatics analysis of custom high-throughput amplicon sequencing data</article-title>
        <source>Molecular Ecology Resources</source>
        <year>2017</year>
        <volume>17</volume>
        <issue>6</issue>
        <fpage>e234</fpage>
        <lpage>e240</lpage>
        <pub-id pub-id-type="doi">10.1111/1755-0998.12692</pub-id>
        <pub-id pub-id-type="pmid">28544559</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-6">
      <label>AutoIt (2018)</label>
      <element-citation publication-type="other">
        <person-group person-group-type="author">
          <collab>
            <institution>AutoIt</institution>
          </collab>
        </person-group>
        <source>AutoIt scripting language</source>
        <year>2018</year>
        <uri xlink:href="https://www.autoitscript.com/site/autoit/">https://www.autoitscript.com/site/autoit/</uri>
      </element-citation>
    </ref>
    <ref id="ref-7">
      <label>Bankevich et al. (2012)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bankevich</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Nurk</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Antipov</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Gurevich</surname>
            <given-names>AA</given-names>
          </name>
          <name>
            <surname>Dvorkin</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Kulikov</surname>
            <given-names>AS</given-names>
          </name>
          <name>
            <surname>Lesin</surname>
            <given-names>VM</given-names>
          </name>
          <name>
            <surname>Nikolenko</surname>
            <given-names>SI</given-names>
          </name>
          <name>
            <surname>Pham</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Prjibelski</surname>
            <given-names>AD</given-names>
          </name>
          <name>
            <surname>Pyshkin</surname>
            <given-names>AV</given-names>
          </name>
          <name>
            <surname>Sirotkin</surname>
            <given-names>AV</given-names>
          </name>
          <name>
            <surname>Vyahhi</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Tesler</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Alekseyev</surname>
            <given-names>MA</given-names>
          </name>
          <name>
            <surname>Pevzner</surname>
            <given-names>PA</given-names>
          </name>
        </person-group>
        <article-title>SPAdes: a new genome assembly algorithm and its applications to single-cell sequencing</article-title>
        <source>Journal of Computational Biology</source>
        <year>2012</year>
        <volume>19</volume>
        <issue>5</issue>
        <fpage>455</fpage>
        <lpage>477</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2012.0021</pub-id>
        <pub-id pub-id-type="pmid">22506599</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-8">
      <label>Bolger, Lohse &amp; Usadel (2014)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bolger</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Lohse</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Usadel</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Trimmomatic: a flexible trimmer for Illumina sequence data</article-title>
        <source>Bioinformatics</source>
        <year>2014</year>
        <volume>30</volume>
        <issue>15</issue>
        <fpage>2114</fpage>
        <lpage>2120</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btu170</pub-id>
        <pub-id pub-id-type="pmid">24695404</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-9">
      <label>Cygwin (2019)</label>
      <element-citation publication-type="other">
        <person-group person-group-type="author">
          <collab>
            <institution>Cygwin</institution>
          </collab>
        </person-group>
        <article-title>Cygwin</article-title>
        <year>2019</year>
        <uri xlink:href="https://www.cygwin.com/">https://www.cygwin.com/</uri>
        <date-in-citation content-type="access-date" iso-8601-date="2019-09-22">22 September 2019</date-in-citation>
      </element-citation>
    </ref>
    <ref id="ref-10">
      <label>Delcher et al. (2007)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Delcher</surname>
            <given-names>AL</given-names>
          </name>
          <name>
            <surname>Bratke</surname>
            <given-names>KA</given-names>
          </name>
          <name>
            <surname>Powers</surname>
            <given-names>EC</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Identifying bacterial genes and endosymbiont DNA with Glimmer</article-title>
        <source>Bioinformatics</source>
        <year>2007</year>
        <volume>23</volume>
        <issue>6</issue>
        <fpage>673</fpage>
        <lpage>679</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btm009</pub-id>
        <pub-id pub-id-type="pmid">17237039</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-11">
      <label>Grabherr et al. (2011)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Grabherr</surname>
            <given-names>MG</given-names>
          </name>
          <name>
            <surname>Haas</surname>
            <given-names>BJ</given-names>
          </name>
          <name>
            <surname>Yassour</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Levin</surname>
            <given-names>JZ</given-names>
          </name>
          <name>
            <surname>Thompson</surname>
            <given-names>DA</given-names>
          </name>
          <name>
            <surname>Amit</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Adiconis</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Fan</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Raychowdhury</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Zeng</surname>
            <given-names>Q</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Mauceli</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Hacohen</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Gnirke</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Rhind</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Di Palma</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Birren</surname>
            <given-names>BW</given-names>
          </name>
          <name>
            <surname>Nusbaum</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Lindblad-Toh</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Friedman</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Regev</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Trinity: reconstructing a full-length transcriptome without a genome from RNA-Seq data</article-title>
        <source>Nature Biotechnology</source>
        <year>2011</year>
        <volume>29</volume>
        <issue>7</issue>
        <fpage>644</fpage>
        <lpage>652</lpage>
        <pub-id pub-id-type="doi">10.1038/nbt.1883</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-12">
      <label>Gymrek et al. (2013)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gymrek</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>McGuire</surname>
            <given-names>AL</given-names>
          </name>
          <name>
            <surname>Golan</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Halperin</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Erlich</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>Identifying personal genomes by surname inference</article-title>
        <source>Science</source>
        <year>2013</year>
        <volume>339</volume>
        <issue>6117</issue>
        <fpage>321</fpage>
        <lpage>324</lpage>
        <pub-id pub-id-type="doi">10.1126/science.1229566</pub-id>
        <pub-id pub-id-type="pmid">23329047</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-13">
      <label>Hillion et al. (2017)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hillion</surname>
            <given-names>K-H</given-names>
          </name>
          <name>
            <surname>Kuzmin</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Khodak</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Rasche</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Crusoe</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Peterson</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Ison</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Ménager</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Using bio.tools to generate and annotate workbench tool descriptions</article-title>
        <source>F1000Research</source>
        <year>2017</year>
        <volume>6</volume>
        <fpage>2074</fpage>
        <pub-id pub-id-type="doi">10.12688/f1000research.12974.1</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-14">
      <label>Hosny et al. (2016)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hosny</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Vera-Licona</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Laubenbacher</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Favre</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>AlgoRun: a Docker-based packaging system for platform-agnostic implemented algorithms</article-title>
        <source>Bioinformatics</source>
        <year>2016</year>
        <volume>32</volume>
        <issue>15</issue>
        <fpage>2396</fpage>
        <lpage>2398</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btw120</pub-id>
        <pub-id pub-id-type="pmid">27153722</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-15">
      <label>Hunt et al. (2015)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hunt</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Silva</surname>
            <given-names>ND</given-names>
          </name>
          <name>
            <surname>Otto</surname>
            <given-names>TD</given-names>
          </name>
          <name>
            <surname>Parkhill</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Keane</surname>
            <given-names>JA</given-names>
          </name>
          <name>
            <surname>Harris</surname>
            <given-names>SR</given-names>
          </name>
        </person-group>
        <article-title>Circlator: automated circularization of genome assemblies using long sequencing reads</article-title>
        <source>Genome Biology</source>
        <year>2015</year>
        <volume>16</volume>
        <issue>1</issue>
        <fpage>294</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-015-0849-0</pub-id>
        <pub-id pub-id-type="pmid">26714481</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-16">
      <label>Hunter et al. (2012)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hunter</surname>
            <given-names>AA</given-names>
          </name>
          <name>
            <surname>Macgregor</surname>
            <given-names>AB</given-names>
          </name>
          <name>
            <surname>Szabo</surname>
            <given-names>TO</given-names>
          </name>
          <name>
            <surname>Wellington</surname>
            <given-names>CA</given-names>
          </name>
          <name>
            <surname>Bellgard</surname>
            <given-names>MI</given-names>
          </name>
        </person-group>
        <article-title>Yabi: an online research environment for grid, high performance and cloud computing</article-title>
        <source>Source Code for Biology and Medicine</source>
        <year>2012</year>
        <volume>7</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <pub-id pub-id-type="doi">10.1186/1751-0473-7-1</pub-id>
        <pub-id pub-id-type="pmid">22333270</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-17">
      <label>JavaScript (2019)</label>
      <element-citation publication-type="other">
        <person-group person-group-type="author">
          <collab>
            <institution>JavaScript</institution>
          </collab>
        </person-group>
        <article-title>ECMAScript 2018 language specification</article-title>
        <year>2019</year>
        <uri xlink:href="https://www.ecma-international.org/ecma-262/9.0/">https://www.ecma-international.org/ecma-262/9.0/</uri>
        <date-in-citation content-type="access-date" iso-8601-date="2019-09-22">22 September 2019</date-in-citation>
      </element-citation>
    </ref>
    <ref id="ref-18">
      <label>Kim et al. (2019)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kim</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Paggi</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Park</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Bennett</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Graph-based genome alignment and genotyping with HISAT2 and HISAT-genotype</article-title>
        <source>Nature Biotechnology</source>
        <year>2019</year>
        <volume>37</volume>
        <issue>8</issue>
        <fpage>907</fpage>
        <lpage>915</lpage>
        <pub-id pub-id-type="doi">10.1038/s41587-019-0201-4</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-19">
      <label>Koren et al. (2017)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Walenz</surname>
            <given-names>BP</given-names>
          </name>
          <name>
            <surname>Berlin</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Miller</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Bergman</surname>
            <given-names>NH</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>AM</given-names>
          </name>
        </person-group>
        <article-title>Canu: scalable and accurate long-read assembly via adaptive <italic>κ</italic>-mer weighting and repeat separation</article-title>
        <source>Genome Research</source>
        <year>2017</year>
        <volume>27</volume>
        <issue>5</issue>
        <fpage>722</fpage>
        <lpage>736</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.215087.116</pub-id>
        <pub-id pub-id-type="pmid">28298431</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-20">
      <label>Langmead &amp; Salzberg (2012)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Langmead</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Fast gapped-read alignment with Bowtie 2</article-title>
        <source>Nature Methods</source>
        <year>2012</year>
        <volume>9</volume>
        <issue>4</issue>
        <fpage>357</fpage>
        <lpage>359</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.1923</pub-id>
        <pub-id pub-id-type="pmid">22388286</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-21">
      <label>Langmead et al. (2009)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Langmead</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Trapnell</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Pop</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Ultrafast and memory-efficient alignment of short DNA sequences to the human genome</article-title>
        <source>Genome Biology</source>
        <year>2009</year>
        <volume>10</volume>
        <issue>3</issue>
        <fpage>R25</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2009-10-3-r25</pub-id>
        <pub-id pub-id-type="pmid">19261174</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-22">
      <label>Li (2016)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Minimap and miniasm: fast mapping and de novo assembly for noisy long sequences</article-title>
        <source>Bioinformatics</source>
        <year>2016</year>
        <volume>32</volume>
        <issue>14</issue>
        <fpage>2103</fpage>
        <lpage>2110</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btw152</pub-id>
        <pub-id pub-id-type="pmid">27153593</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-23">
      <label>Li (2018)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Minimap2: pairwise alignment for nucleotide sequences</article-title>
        <source>Bioinformatics</source>
        <year>2018</year>
        <volume>34</volume>
        <issue>18</issue>
        <fpage>3094</fpage>
        <lpage>3100</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bty191</pub-id>
        <pub-id pub-id-type="pmid">29750242</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-24">
      <label>Li &amp; Dewey (2014)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Dewey</surname>
            <given-names>CN</given-names>
          </name>
        </person-group>
        <article-title>RSEM: accurate transcript quantification from RNA-seq data with or without a reference genome</article-title>
        <source>Bioinformatics: The Impact of Accurate Quantification on Proteomic and Genetic Analysis and Research</source>
        <year>2014</year>
        <volume>12</volume>
        <issue>1</issue>
        <fpage>41</fpage>
        <lpage>74</lpage>
      </element-citation>
    </ref>
    <ref id="ref-25">
      <label>Li &amp; Durbin (2009)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Durbin</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Fast and accurate short read alignment with Burrows–Wheeler transform</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <issue>14</issue>
        <fpage>1754</fpage>
        <lpage>1760</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp324</pub-id>
        <pub-id pub-id-type="pmid">19451168</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-26">
      <label>Li et al. (2009)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Handsaker</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Wysoker</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Fennell</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Ruan</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Homer</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Marth</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Abecasis</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Durbin</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>The sequence alignment/map format and SAMtools</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <issue>16</issue>
        <fpage>2078</fpage>
        <lpage>2079</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp352</pub-id>
        <pub-id pub-id-type="pmid">19505943</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-27">
      <label>Liao, Smyth &amp; Shi (2014)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Liao</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Smyth</surname>
            <given-names>GK</given-names>
          </name>
          <name>
            <surname>Shi</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <article-title>featureCounts: an efficient general purpose program for assigning sequence reads to genomic features</article-title>
        <source>Bioinformatics</source>
        <year>2014</year>
        <volume>30</volume>
        <issue>7</issue>
        <fpage>923</fpage>
        <lpage>930</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btt656</pub-id>
        <pub-id pub-id-type="pmid">24227677</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-28">
      <label>Lua (2019)</label>
      <element-citation publication-type="other">
        <person-group person-group-type="author">
          <collab>
            <institution>Lua</institution>
          </collab>
        </person-group>
        <article-title>The programming language Lua</article-title>
        <year>2019</year>
        <uri xlink:href="https://www.lua.org/home.html">https://www.lua.org/home.html</uri>
        <date-in-citation content-type="access-date" iso-8601-date="2019-09-22">22 September 2019</date-in-citation>
      </element-citation>
    </ref>
    <ref id="ref-29">
      <label>Marçais &amp; Kingsford (2011)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Marçais</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Kingsford</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>A fast, lock-free approach for efficient parallel counting of occurrences of <italic>k</italic>-mers</article-title>
        <source>Bioinformatics</source>
        <year>2011</year>
        <volume>27</volume>
        <issue>6</issue>
        <fpage>764</fpage>
        <lpage>770</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btr011</pub-id>
        <pub-id pub-id-type="pmid">21217122</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-30">
      <label>Microsoft Sysinternals (2019)</label>
      <element-citation publication-type="other">
        <person-group person-group-type="author">
          <collab>
            <institution>Microsoft Sysinternals</institution>
          </collab>
        </person-group>
        <article-title>Process Explorer v16.30</article-title>
        <year>2019</year>
        <uri xlink:href="https://docs.microsoft.com/en-us/sysinternals/downloads/process-explorer">https://docs.microsoft.com/en-us/sysinternals/downloads/process-explorer</uri>
        <date-in-citation content-type="access-date" iso-8601-date="2019-09-22">22 September 2019</date-in-citation>
      </element-citation>
    </ref>
    <ref id="ref-31">
      <label>Morais et al. (2018)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Morais</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Roesch</surname>
            <given-names>LFW</given-names>
          </name>
          <name>
            <surname>Redmile-Gordon</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Santos</surname>
            <given-names>FG</given-names>
          </name>
          <name>
            <surname>Baldrian</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Andreote</surname>
            <given-names>FD</given-names>
          </name>
          <name>
            <surname>Pylro</surname>
            <given-names>VS</given-names>
          </name>
        </person-group>
        <article-title>BTW—bioinformatics through windows: an easy-to-install package to analyze marker gene data</article-title>
        <source>PeerJ</source>
        <year>2018</year>
        <volume>6</volume>
        <elocation-id>e5299</elocation-id>
        <pub-id pub-id-type="doi">10.7717/peerj.5299</pub-id>
        <pub-id pub-id-type="pmid">30083449</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-32">
      <label>Pavelin et al. (2012)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pavelin</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Cham</surname>
            <given-names>JA</given-names>
          </name>
          <name>
            <surname>De Matos</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Brooksbank</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Cameron</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Steinbeck</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>Bioinformatics meets user-centred design: a perspective</article-title>
        <source>PLOS Computational Biology</source>
        <year>2012</year>
        <volume>8</volume>
        <issue>7</issue>
        <elocation-id>e1002554</elocation-id>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1002554</pub-id>
        <pub-id pub-id-type="pmid">22807660</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-33">
      <label>Pertea et al. (2016)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pertea</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Kim</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Pertea</surname>
            <given-names>GM</given-names>
          </name>
          <name>
            <surname>Leek</surname>
            <given-names>JT</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Transcript-level expression analysis of RNA-seq experiments with HISAT, StringTie and Ballgown</article-title>
        <source>Nature Protocols</source>
        <year>2016</year>
        <volume>11</volume>
        <issue>9</issue>
        <fpage>1650</fpage>
        <lpage>1667</lpage>
        <pub-id pub-id-type="doi">10.1038/nprot.2016.095</pub-id>
        <pub-id pub-id-type="pmid">27560171</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-34">
      <label>Rehmsmeier et al. (2004)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rehmsmeier</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Steffen</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Höchsmann</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Giegerich</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Fast and effective prediction of microRNA/target duplexes</article-title>
        <source>RNA</source>
        <year>2004</year>
        <volume>10</volume>
        <issue>10</issue>
        <fpage>1507</fpage>
        <lpage>1517</lpage>
        <pub-id pub-id-type="doi">10.1261/rna.5248604</pub-id>
        <pub-id pub-id-type="pmid">15383676</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-35">
      <label>Ruan &amp; Li (2019)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ruan</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Fast and accurate long-read assembly with wtdbg2</article-title>
        <source>bioRxiv</source>
        <year>2019</year>
        <fpage>530972</fpage>
        <pub-id pub-id-type="doi">10.1101/530972</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-36">
      <label>Schadt (2012)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Schadt</surname>
            <given-names>EE</given-names>
          </name>
        </person-group>
        <article-title>The changing privacy landscape in the era of big data</article-title>
        <source>Molecular Systems Biology</source>
        <year>2012</year>
        <volume>8</volume>
        <issue>1</issue>
        <fpage>612</fpage>
        <pub-id pub-id-type="doi">10.1038/msb.2012.47</pub-id>
        <pub-id pub-id-type="pmid">22968446</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-37">
      <label>Shen et al. (2014)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Shen</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Park</surname>
            <given-names>JW</given-names>
          </name>
          <name>
            <surname>Lu</surname>
            <given-names>Z-x</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Henry</surname>
            <given-names>MD</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>YN</given-names>
          </name>
          <name>
            <surname>Zhou</surname>
            <given-names>Q</given-names>
          </name>
          <name>
            <surname>Xing</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>rMATS: robust and flexible detection of differential alternative splicing from replicate RNA-Seq data</article-title>
        <source>Proceedings of the National Academy of Sciences of the United States of America</source>
        <year>2014</year>
        <volume>111</volume>
        <issue>51</issue>
        <fpage>E5593</fpage>
        <lpage>E5601</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.1419161111</pub-id>
        <pub-id pub-id-type="pmid">25480548</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-38">
      <label>Smith (2013)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Smith</surname>
            <given-names>DR</given-names>
          </name>
        </person-group>
        <article-title>The battle for user-friendly bioinformatics</article-title>
        <source>Frontiers in Genetics</source>
        <year>2013</year>
        <volume>4</volume>
        <fpage>187</fpage>
        <pub-id pub-id-type="doi">10.3389/fgene.2013.00187</pub-id>
        <pub-id pub-id-type="pmid">24065986</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-39">
      <label>Smith (2015)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Smith</surname>
            <given-names>DR</given-names>
          </name>
        </person-group>
        <article-title>Buying in to bioinformatics: an introduction to commercial sequence analysis software</article-title>
        <source>Briefings in Bioinformatics</source>
        <year>2015</year>
        <volume>16</volume>
        <issue>4</issue>
        <fpage>700</fpage>
        <lpage>709</lpage>
        <pub-id pub-id-type="doi">10.1093/bib/bbu030</pub-id>
        <pub-id pub-id-type="pmid">25183247</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-40">
      <label>Sović et al. (2016)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sović</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Šikić</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Wilm</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Fenlon</surname>
            <given-names>SN</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Nagarajan</surname>
            <given-names>N</given-names>
          </name>
        </person-group>
        <article-title>Fast and sensitive mapping of nanopore sequencing reads with GraphMap</article-title>
        <source>Nature Communications</source>
        <year>2016</year>
        <volume>7</volume>
        <fpage>11307</fpage>
        <pub-id pub-id-type="doi">10.1038/ncomms11307</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-41">
      <label>Vaser et al. (2017)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Vaser</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Sović</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Nagarajan</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Šikić</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Fast and accurate de novo genome assembly from long uncorrected reads</article-title>
        <source>Genome Research</source>
        <year>2017</year>
        <volume>27</volume>
        <issue>5</issue>
        <fpage>737</fpage>
        <lpage>746</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.214270.116</pub-id>
        <pub-id pub-id-type="pmid">28100585</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-42">
      <label>Větrovský, Baldrian &amp; Morais (2018)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Větrovský</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Baldrian</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Morais</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>SEED 2: a user-friendly platform for amplicon high-throughput sequencing data analyses</article-title>
        <source>Bioinformatics</source>
        <year>2018</year>
        <volume>34</volume>
        <issue>13</issue>
        <fpage>2292</fpage>
        <lpage>2294</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bty071</pub-id>
        <pub-id pub-id-type="pmid">29452334</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-43">
      <label>Visne et al. (2009)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Visne</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Dilaveroglu</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Vierlinger</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Lauss</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Yildiz</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Weinhaeusel</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Noehammer</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Leisch</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Kriegner</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>RGG: a general GUI Framework for R scripts</article-title>
        <source>BMC Bioinformatics</source>
        <year>2009</year>
        <volume>10</volume>
        <issue>1</issue>
        <fpage>74</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-10-74</pub-id>
        <pub-id pub-id-type="pmid">19254356</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-44">
      <label>Wang et al. (2019)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wang</surname>
            <given-names>Q</given-names>
          </name>
          <name>
            <surname>Ni</surname>
            <given-names>C-m</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>X-f</given-names>
          </name>
          <name>
            <surname>Han</surname>
            <given-names>R-m</given-names>
          </name>
          <name>
            <surname>Zhao</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Xu</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Gao</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Efficient and accurate prediction of transmembrane topology from amino acid sequence only</article-title>
        <source>bioRxiv</source>
        <year>2019</year>
        <fpage>627307</fpage>
        <pub-id pub-id-type="doi">10.1101/627307</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-45">
      <label>Wheeler &amp; Eddy (2013)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wheeler</surname>
            <given-names>TJ</given-names>
          </name>
          <name>
            <surname>Eddy</surname>
            <given-names>SR</given-names>
          </name>
        </person-group>
        <article-title>nhmmer: DNA homology search with profile HMMs</article-title>
        <source>Bioinformatics</source>
        <year>2013</year>
        <volume>29</volume>
        <issue>19</issue>
        <fpage>2487</fpage>
        <lpage>2489</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btt403</pub-id>
        <pub-id pub-id-type="pmid">23842809</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-46">
      <label>Xu et al. (2014)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Xu</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Strong</surname>
            <given-names>MJ</given-names>
          </name>
          <name>
            <surname>Lacey</surname>
            <given-names>MR</given-names>
          </name>
          <name>
            <surname>Baribault</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Flemington</surname>
            <given-names>EK</given-names>
          </name>
          <name>
            <surname>Taylor</surname>
            <given-names>CM</given-names>
          </name>
        </person-group>
        <article-title>RNA CoMPASS: a dual approach for pathogen and host</article-title>
        <source>PLOS ONE</source>
        <year>2014</year>
        <volume>9</volume>
        <issue>2</issue>
        <elocation-id>e89445</elocation-id>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0089445</pub-id>
        <pub-id pub-id-type="pmid">24586784</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

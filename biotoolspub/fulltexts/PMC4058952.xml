<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v2.3 20070202//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName journalpublishing.dtd?>
<?SourceDTD.Version 2.3?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-id journal-id-type="hwp">bioinfo</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">4058952</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btu263</article-id>
    <article-id pub-id-type="publisher-id">btu263</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Ismb 2014 Proceedings Papers Committee</subject>
        <subj-group subj-group-type="heading">
          <subject>Original Papers</subject>
          <subj-group subj-group-type="heading">
            <subject>Protein Interactions and Molecular Networks</subject>
          </subj-group>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>New directions for diffusion-based network prediction of protein function: incorporating pathways with confidence</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Cao</surname>
          <given-names>Mengfei</given-names>
        </name>
        <xref ref-type="aff" rid="btu263-AFF1">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Pietras</surname>
          <given-names>Christopher M.</given-names>
        </name>
        <xref ref-type="aff" rid="btu263-AFF1">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Feng</surname>
          <given-names>Xian</given-names>
        </name>
        <xref ref-type="aff" rid="btu263-AFF1">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Doroschak</surname>
          <given-names>Kathryn J.</given-names>
        </name>
        <xref ref-type="aff" rid="btu263-AFF1">
          <sup>2</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Schaffner</surname>
          <given-names>Thomas</given-names>
        </name>
        <xref ref-type="aff" rid="btu263-AFF1">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Park</surname>
          <given-names>Jisoo</given-names>
        </name>
        <xref ref-type="aff" rid="btu263-AFF1">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Zhang</surname>
          <given-names>Hao</given-names>
        </name>
        <xref ref-type="aff" rid="btu263-AFF1">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Cowen</surname>
          <given-names>Lenore J.</given-names>
        </name>
        <xref ref-type="aff" rid="btu263-AFF1">
          <sup>1</sup>
        </xref>
        <xref ref-type="corresp" rid="btu263-COR1">*</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Hescott</surname>
          <given-names>Benjamin J.</given-names>
        </name>
        <xref ref-type="aff" rid="btu263-AFF1">
          <sup>1</sup>
        </xref>
        <xref ref-type="corresp" rid="btu263-COR1">*</xref>
      </contrib>
    </contrib-group>
    <aff id="btu263-AFF1"><sup>1</sup>Department of Computer Science, Tufts University, Medford, MA 02155, USA and <sup>2</sup>Department of Computer Science, University of Minnesota, Minneapolis, MN 55455, USA</aff>
    <author-notes>
      <corresp id="btu263-COR1">*To whom correspondence should be addressed.</corresp>
    </author-notes>
    <pub-date pub-type="ppub">
      <day>15</day>
      <month>6</month>
      <year>2014</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>11</day>
      <month>6</month>
      <year>2014</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>11</day>
      <month>6</month>
      <year>2014</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the
							<pub-date pub-type="epub"/>. -->
    <volume>30</volume>
    <issue>12</issue>
    <fpage>i219</fpage>
    <lpage>i227</lpage>
    <permissions>
      <copyright-statement>© The Author 2014. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2014</copyright-year>
      <license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by-nc/3.0">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by-nc/3.0/">http://creativecommons.org/licenses/by-nc/3.0/</ext-link>), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.com</license-p>
      </license>
    </permissions>
    <abstract>
      <p><bold>Motivation:</bold> It has long been hypothesized that incorporating models of network noise as well as edge directions and known pathway information into the representation of protein–protein interaction (PPI) networks might improve their utility for functional inference. However, a simple way to do this has not been obvious. We find that diffusion state distance (DSD), our recent diffusion-based metric for measuring dissimilarity in PPI networks, has natural extensions that incorporate confidence, directions and can even express coherent pathways by calculating DSD on an augmented graph.</p>
      <p><bold>Results:</bold> We define three incremental versions of DSD which we term cDSD, caDSD and capDSD, where the capDSD matrix incorporates confidence, known directed edges, and pathways into the measure of how similar each pair of nodes is according to the structure of the PPI network. We test four popular function prediction methods (majority vote, weighted majority vote, multi-way cut and functional flow) using these different matrices on the Baker’s yeast PPI network in cross-validation. The best performing method is weighted majority vote using capDSD. We then test the performance of our augmented DSD methods on an integrated heterogeneous set of protein association edges from the STRING database. The superior performance of capDSD in this context confirms that treating the pathways as probabilistic units is more powerful than simply incorporating pathway edges independently into the network.</p>
      <p><bold>Availability:</bold> All source code for calculating the confidences, for extracting pathway information from KEGG XML files, and for calculating the cDSD, caDSD and capDSD matrices are available from <ext-link ext-link-type="uri" xlink:href="http://dsd.cs.tufts.edu/capdsd">http://dsd.cs.tufts.edu/capdsd</ext-link></p>
      <p><bold>Contact:</bold><email>lenore.cowen@tufts.edu</email> or <email>benjamin.hescott@tufts.edu</email></p>
      <p><bold>Supplementary information:</bold><ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btu263/-/DC1">Supplementary data</ext-link> are available at <italic>Bioinformatics</italic> online.</p>
    </abstract>
    <counts>
      <page-count count="9"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 INTRODUCTION</title>
    <p>One of the most well-studied problems in computational network biology is the prediction of protein functional labels from distance and neighborhood structure in the protein–protein interaction network (PPI network). In 2013, based on the observation that paths through high-degree ‘hub’ nodes in the PPI network were less informative than short paths through protein nodes with fewer interaction partners, (<xref rid="btu263-B5" ref-type="bibr">Cao <italic>et al.</italic>, 2013</xref>) introduce the diffusion state distance (DSD) metric that is able to quantify topological similarity in a PPI network in a more fine-grained way. Diffusion-based methods had been previously proposed for clustering similar proteins (<xref rid="btu263-B34" ref-type="bibr">Voevodski <italic>et al.</italic>, 2009</xref>) and for ranking candidate disease genes (<xref rid="btu263-B6" ref-type="bibr">Chen <italic>et al.</italic>, 2009</xref>; <xref rid="btu263-B13" ref-type="bibr">Erten <italic>et al.</italic> 2011</xref>; <xref rid="btu263-B19" ref-type="bibr">Kohler <italic>et al.</italic>, 2008</xref>; <xref rid="btu263-B32" ref-type="bibr">Vanunu <italic>et al.</italic>, 2010</xref>), but by explicitly taking an L1 norm of the vector of the random walks to all other nodes in the network to measure the distance between nodes, DSD is able to capture a more global view of the network than other prior work we are aware of, with the exception of Vavien (<xref rid="btu263-B13" ref-type="bibr">Erten <italic>et al.</italic> 2011</xref>) for candidate disease gene ranking, and ISORANK-N (<xref rid="btu263-B20" ref-type="bibr">Liao <italic>et al.</italic>, 2009</xref>), which also is based on a global embedding, but for a very different problem (network alignment).</p>
    <p><xref rid="btu263-B5" ref-type="bibr">Cao <italic>et al.</italic> (2013)</xref> showed that when a DSD-based distance is substituted for ordinary next-hop shortest-path distance in four classical network-based function prediction methods, functional label prediction performance for the GO (Gene Ontology), as well as all three levels of the MIPS (Munich Information Center For Protein Sequences) ontology, improved across the board in cross-validation experiments on both the <italic>S</italic><italic>accharomyces cerevisiae</italic> and the <italic>S.pombe</italic> PPI networks. However, these results were based only on a simple undirected model of the PPI network, which additionally assumed that all the edges listed in the BioGRID data were uniformly correct.</p>
    <p>On the other hand, it is well-established both that there is noise in the PPI interaction network data (<xref rid="btu263-B23" ref-type="bibr">Mering <italic>et al.</italic>, 2002</xref>; <xref rid="btu263-B26" ref-type="bibr">Reguly <italic>et al.</italic>, 2006</xref>; <xref rid="btu263-B15" ref-type="bibr">Gandhi <italic>et al.</italic>, 2006</xref>), and that some interactions are naturally directed in the PPI network (<xref rid="btu263-B22" ref-type="bibr">Liu <italic>et al.</italic>, 2009</xref>; <xref rid="btu263-B16" ref-type="bibr">Gitter <italic>et al.</italic>, 2011</xref>; <xref rid="btu263-B11" ref-type="bibr">Du <italic>et al.</italic>, 2012</xref>). In addition, looking just at pairwise interaction data as edges does not fully capture all the information that is known about the PPI network. In particular, there is increasingly available data on biological pathways, for example, TGF-β binds TGF-β receptor 1, which phosphorylates Smad3, which with importin-β1 enters the nucleus and binds DNA to regulate expression (<xref rid="btu263-B24" ref-type="bibr">Moustakas 2002</xref>).</p>
    <p>In this article, we revisit the DSD metric we designed in earlier work for function prediction in the ordinary undirected PPI network. We find that its diffusion-based framework gives a natural way to incorporate edge confidences and directed edges (when known). However, the main contribution of this article is to show that there is a way to capture the cohesiveness of known pathways by calculating DSD on an augmented network, and that this way of representing pathways results in better performance than just incorporating the pathway edges themselves for most, but not all of the function prediction methods we study. We show this first in cross-validation on the standard network consisting of just experimentally verified physical interaction edges from <italic>S.cerevisiae</italic>, and then on an integrative network with heterogeneous protein association data edges derived from the STRING database (<xref rid="btu263-B14" ref-type="bibr">Franceschini <italic>et al.</italic>, 2013</xref>).</p>
    <sec sec-type="intro">
      <title>1.1 Overview of DSD</title>
      <p>PPI networks are known to be ‘small world’ networks in the sense that they are small-diameter, and most nodes are close to all other nodes. Thus any method that infers similarity based on proximity will find that a large fraction of the network is proximate to any typical node. In fact, this issue has already been termed the ‘ties in proximity’ problem in the computational biology literature (<xref rid="btu263-B1" ref-type="bibr">Arnau <italic>et al.</italic>, 2005</xref>).</p>
      <p>Furthermore, the fact that two particular nodes are adjacent (i.e., have shortest-path distance 1) in a PPI network can signify something very different than the adjacency of two other nodes. For example, in PPI networks two nodes with many low-degree neighbors in common should be thought of as ‘more similar’ than nodes with few low-degree neighbors in common; and such nodes should also be thought of as ‘more similar’ than two nodes whose common neighbors have high-degree. Thus, characterizing node pairs based only on a shortest-path notion of distance fails to capture important knowledge encoded in the structure of the network.</p>
      <p>In (<xref rid="btu263-B5" ref-type="bibr">Cao <italic>et al.</italic>, 2013</xref>), DSD is defined on an undirected connected simple graph. In particular, our PPI network is defined with a vertex set <italic>V</italic>, containing a node for each verified ORF, and an edge set <italic>E</italic>, containing an unweighted and undirected edge for each physical interaction. We first calculate <italic>He</italic><sup>{</sup><italic><sup>k</sup></italic><sup>}</sup>(<italic>A</italic>,<italic>B</italic>) as the expected number of times that a random walk starting at node A and proceeding for <italic>k</italic> steps, will visit node B; then we further define a <italic>n</italic>-dimensional vector <inline-formula><mml:math id="n1"><mml:mrow><mml:mi>H</mml:mi><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>{</mml:mo><mml:mi>k</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo>∀</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math></inline-formula>, where
<disp-formula><mml:math id="n2"><mml:mrow><mml:mi>H</mml:mi><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>{</mml:mo><mml:mi>k</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>H</mml:mi><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>{</mml:mo><mml:mi>k</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mi>H</mml:mi><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>{</mml:mo><mml:mi>k</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mn>...</mml:mn><mml:mo>,</mml:mo><mml:mi>H</mml:mi><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>{</mml:mo><mml:mi>k</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula>
In what follows, the <italic>k</italic>-step DSD between two vertices <italic>u</italic> and <inline-formula><mml:math id="n3"><mml:mrow><mml:mi>v</mml:mi><mml:mo>,</mml:mo><mml:mo>∀</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math></inline-formula> is defined as
<disp-formula><mml:math id="n4"><mml:mrow><mml:msup><mml:mrow><mml:mtext>DSD</mml:mtext></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mi>k</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>H</mml:mi><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>{</mml:mo><mml:mi>k</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>−</mml:mo><mml:mi>H</mml:mi><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>{</mml:mo><mml:mi>k</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mo stretchy="false">|</mml:mo><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="n5"><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>H</mml:mi><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>{</mml:mo><mml:mi>k</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>−</mml:mo><mml:mi>H</mml:mi><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>{</mml:mo><mml:mi>k</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mo stretchy="false">|</mml:mo><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> denotes the <italic>L</italic><sub>1</sub> norm of the <italic>He</italic> vectors of <italic>u</italic> and <italic>v</italic>. As proved in (<xref rid="btu263-B5" ref-type="bibr">Cao <italic>et al.</italic>, 2013</xref>), on the simple connected graph whose random walk one-step transition probability matrix is diagonalizable and ergodic as a Markov chain, the limit of DSD when <italic>k</italic> approaches infinity exists and can be calculated as
<disp-formula><mml:math id="n6"><mml:mrow><mml:munder><mml:mrow><mml:mi>lim</mml:mi><mml:mo>⁡</mml:mo></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>→</mml:mo><mml:mi>∞</mml:mi></mml:mrow></mml:munder><mml:msup><mml:mrow><mml:mtext>DSD</mml:mtext></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mi>k</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">b</mml:mi><mml:mi mathvariant="bold-italic">u</mml:mi></mml:msub><mml:msup><mml:mrow/><mml:mi>T</mml:mi></mml:msup><mml:mo>−</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">b</mml:mi><mml:mi mathvariant="bold-italic">v</mml:mi></mml:msub><mml:msup><mml:mrow/><mml:mi>T</mml:mi></mml:msup><mml:mo stretchy="false">)</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>I</mml:mi><mml:mo>−</mml:mo><mml:mi>P</mml:mi><mml:mo>+</mml:mo><mml:mi>C</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mo stretchy="false">|</mml:mo><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>
where <italic>I</italic> is the identity matrix, <italic>C</italic> is the constant matrix in which each row is a copy of <inline-formula><mml:math id="n7"><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">π</mml:mi><mml:mi>T</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:mtext>
</mml:mtext><mml:msup><mml:mi mathvariant="bold-italic">π</mml:mi><mml:mi>T</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula> is the unique steady state distribution, and for any <inline-formula><mml:math id="n8"><mml:mrow><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="n9"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">b</mml:mi><mml:mi mathvariant="bold-italic">i</mml:mi></mml:msub><mml:msup><mml:mrow/><mml:mi>T</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula> is the <italic>i</italic>-th basis vector, that is, the row vector of all zeros except for a 1 in the <italic>i</italic><italic>-</italic>th position, and <inline-formula><mml:math id="n10"><mml:mrow><mml:mi>P</mml:mi><mml:mo>=</mml:mo><mml:msubsup><mml:mrow><mml:mo>{</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>}</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> is the <italic>n</italic>-dimensional one-step transition probability matrix where the (<italic>i</italic>, <italic>j</italic>)th entry is given by
<disp-formula><mml:math id="n11"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="true">{</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mfrac></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mtext> if </mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>E</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mtext> otherwise</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>
where <italic>d<sub>i</sub></italic> is the degree of node <italic>v<sub>i</sub></italic>. In this work, we use the converged DSD values as the original DSD calculation for comparison.</p>
    </sec>
    <sec id="SEC1.2">
      <title>1.2 New directions</title>
      <p>In the first DSD paper, we modified four classical function prediction methods (including Neighborhood Majority Vote (<xref rid="btu263-B28" ref-type="bibr">Schwikowski <italic>et al.</italic>, 2000</xref>), χ<sup>2</sup> Neighborhood (<xref rid="btu263-B17" ref-type="bibr">Hishigaki <italic>et al.</italic>, 2001</xref>), Multi-way Cut (<xref rid="btu263-B33" ref-type="bibr">Vazquez <italic>et al.</italic>, 2003</xref>) and Functional Flow (<xref rid="btu263-B25" ref-type="bibr">Nabieva <italic>et al.</italic>, 2005</xref>)) to use this dissimilarity metric rather than next-hop shortest-path distance as a dissimilarity metric, and showed that performance improved across the board. Now we extend the calculation of DSD to incorporate confidence, then confidence and directed and undirected pathway edges, then confidence, pathway edges and full biological pathways. We present three new dissimilarity measures, which we call cDSD, caDSD or capDSD, respectively, where capDSD stands for <italic>confidence, augmented pathway diffusion state distance.</italic> These measures can be substituted for original DSD in the four classical function prediction methods we studied (or in any functional prediction method that incorporates a pairwise dissimilarity measure between nodes).</p>
      <p>First, to define cDSD, similar to the approach suggested by <xref rid="btu263-B16" ref-type="bibr">Gitter <italic>et al.</italic> (2011)</xref>, we assign a confidence to each PPI interaction edge in BioGRID (<xref rid="btu263-B31" ref-type="bibr">Stark <italic>et al.</italic>, 2006</xref>), based on the number of publications in which that PPI appears, and whether the reported experiments are high-throughput or low-throughput. Given the formal definition of DSD, there is a natural way to incorporate these confidences simply as edge weights, and the <italic>k</italic>-step DSD calculation is generalized to a weighted matrix in the natural way (see Section 2.1.3 for full details). We show that incorporating confidence values in this way improves performance over the basic DSD method (which in turn improved the performance compared to the corresponding method based on shortest-path distances (<xref rid="btu263-B5" ref-type="bibr">Cao <italic>et al.</italic>, 2013</xref>)) in cross-validation on each of the classical network-based function prediction methods we consider.</p>
      <p>On top of the confidence values, we then seek to augment the network by adding edges from the KEGG PATHWAY database in two ways. We find that 2471 of these edges are not already in BioGRID, and an additional 177 are in BioGRID, but we would have assigned them lower confidence without the additional information that they also appeared in KEGG, so it is not surprising that adding in these edges improves our results as compared to DSD and cDSD. In the first and simplest way, which we call caDSD, we augment the graph by adding undirected and directed edges from the KEGG database; where edges of the types: activation, inhibition, phosphorylation, dephosphorylation and ubiquination are considered naturally directed as in (<xref rid="btu263-B22" ref-type="bibr">Liu <italic>et al.</italic>, 2009</xref>) and all other KEGG edges are considered undirected (however, an undirected edge being included in the KEGG database raises its edge weight because KEGG is manually curated). However, we also create capDSD which creates an augmented graph that represents the signaling pathways coherently using new sets of nodes and edges. In this new augmented graph, pathways can be thought of as being represented by ‘controlled-access highways’, in the sense that once the diffusion random walk enters a pathway, it stays on that pathway with some fixed probability <italic>r</italic> and only leaves that pathway to walk in the regular PPI network (still augmented with directed edges, where known, and confidence) with probability 1– <italic>r</italic>, where the fixed <italic>r</italic> is a parameter of the method. Just like DSD, capDSD is not a function prediction method in itself, it is a dissimilarity matrix: for each pair of nodes, capDSD gives a value that measures their similarity in this (now augmented, confidence weighted) network. For the best performing function prediction methods we test, we find that adding in the KEGG pathway edges using the highway approach is superior to just adding in the KEGG edges naively. Furthermore, the performance increase is even stronger when using an integrative network derived from the STRING database (see Section 2.1.2).</p>
      <p><xref ref-type="fig" rid="btu263-F1">Figure 1</xref> shows an example of the modifications to the network involved in computing cDSD, caDSD and finally capDSD. Of the four different classical methods we test with all of DSD, cDSD, caDSD and capDSD, we find that our best function prediction method, over all three levels of the MIPS hierarchy is the one that predicts <italic>v</italic>’s label based on the <italic>t</italic> closest neighbors in terms of their values in the capDSD matrix, and has them vote on the functional label of <italic>v</italic>, with a vote weight inversely proportional to their capDSD value, assigning <italic>v</italic> the function with the highest weighted vote. Significantly, the improvement is greater at the lower (more specific) levels of the MIPS hierarchy.
<fig id="btu263-F1" position="float"><label>Fig. 1.</label><caption><p>An example of constructing auxiliary graphs for calculating different DSDs (with our BioGRID confidence scores). <bold>(a)</bold> The original PPI network and two KEGG pathways; <bold>(b)</bold> the weight graph with PPI confidence score as edge weights; <bold>(c)</bold> the directed graph with KEGG PPIs added; and <bold>(d)</bold> the augmented graph by incorporating KEGG pathways as weighted paths</p></caption><graphic xlink:href="btu263f1"/></fig></p>
    </sec>
  </sec>
  <sec>
    <title>2 MATERIALS AND METHODS</title>
    <sec id="SEC2.1">
      <title>2.1 Datasets</title>
      <sec id="SEC2.1.1">
        <title>2.1.1 Physical protein interaction network from BioGRID</title>
        <p>The <italic>S</italic><italic>.</italic><italic>cerevisiae</italic> protein–protein physical interaction network is constructed as follows: the list of 5064 verified ORFs downloaded from the SGD website (Saccharomyces Genome Database, version date October 25, 2013) defines the nodes, and the 133 705 protein–protein physical interactions from BioGRID (<xref rid="btu263-B31" ref-type="bibr">Stark <italic>et al.</italic>, 2006</xref>) between nodes that are verified by at least one wet-lab experiment define the edges. After removing edge redundancy, self-loops, and edges incident to unverified ORF nodes, we extract the largest connected component and obtain a simple undirected graph with <italic>n</italic> = 5001 nodes and <italic>m</italic> = 76 025 unique undirected edges; we denote by <italic>G</italic><sub>0</sub>(<italic>V</italic><sub>0</sub>, <italic>E</italic><sub>0</sub>, <italic>W</italic><sub>0</sub>) this simple undirected graph with unit-weight for all edges, where <italic>V</italic><sub>0</sub> = {<italic>v</italic><sub>1</sub>,<italic>v</italic><sub>2</sub>, … , <italic>v<sub>n</sub></italic>} and <italic>W</italic><sub>0</sub>, the weight matrix, is the <italic>n</italic>-dimensional square matrix with value 1 for entry (<italic>i</italic>, <italic>j</italic>) if and only if (<italic>v<sub>i</sub></italic>, <italic>v<sub>j</sub></italic>) is in <italic>E</italic><sub>0</sub>, and 0 otherwise.</p>
      </sec>
      <sec id="SEC2.1.2">
        <title>2.1.2 Protein association network from STRING</title>
        <p>STRING (<xref rid="btu263-B14" ref-type="bibr">Franceschini <italic>et al.</italic>, 2013</xref>) is a database that integrates known and predicted protein associations from various sources, such as BioGRID (<xref rid="btu263-B31" ref-type="bibr">Stark <italic>et al.</italic>, 2006</xref>), BIND (<xref rid="btu263-B3" ref-type="bibr">Bader <italic>et al.</italic>, 2003</xref>), DIP (<xref rid="btu263-B35" ref-type="bibr">Xenarios <italic>et al.</italic>, 2002</xref>), MINT (<xref rid="btu263-B21" ref-type="bibr">Licata <italic>et al.</italic>, 2012</xref>), KEGG PATHWAY (<xref rid="btu263-B18" ref-type="bibr">Kanehisa and Goto 2000</xref>) and gene co-expression data (<xref rid="btu263-B14" ref-type="bibr">Franceschini <italic>et al.</italic>, 2013</xref>). STRING assigns normalized confidence scores to many different types of protein associations: some from experiments (physical and genetic protein interactions), or derived from co-expression, and others either inferred by literature annotation or transferred from homology. Because including edges inferred by literature annotation could invalidate the separation of training and testing in our cross-validation experiments, we could not use all the association categories in STRING. We extract all protein associations from the ‘experiments’ and ‘co-expression’ categories for yeast (with confidence score &gt; 0 for at least one of the two categories), where ‘experiments’ covers all physical and genetic protein interactions and ‘co-expression’ refers to protein associations that are inferred from similar transcriptional patterns in terms of gene co-expression levels. We also want to include KEGG PATHWAY PPIs that have already been incorporated in STRING; however, such information is mixed with and cannot be separated from other data sources in the ‘database’ category, including GO, which we do not want to include so as to avoid possible overlapping between test data and training data in our function prediction evaluation framework. Therefore, we directly extract association links for pathway neighbors and subunits of the same enzyme/complex from the KEGG PATHWAY database, the same fashion as what STRING utilizes. We extract 454 600 protein–protein associations (being sure to exclude homology-based transferred interologs) from STRING version 9.05, release date: March 3, 2013 (Note that there is also a more recent December 27, 2013 version 9.1 of STRING now available, but it has no simple way to exclude interologs, so we used the previous version.) We also include edges directly from KEGG (all but 249 of these also appear in the portion of the STRING database we use for our network; the discrepancy of 249 additional edges comes from the fact that we use the December 2013 version of KEGG while STRING version 9.05 uses the August 2012 version of KEGG). We further filter the network by removing associations that are incident with at least one unverified ORF from SGD. Afterward we compile the undirected graph where a node corresponds to an ORF and an undirected edge is added if there exists an association link between the two ORFs (we did not add directed edges for the STRING experiment, since they were shown to matter so little on the BioGRID experiment, see <xref ref-type="table" rid="btu263-T3">Table 3</xref>). The resulting graph <italic>G</italic><sub>str</sub> is undirected, connected, has diameter 5, and contains 5058 nodes and 404 358 edges.</p>
      </sec>
      <sec id="SEC2.1.3">
        <title>2.1.3 PPI confidence assignment</title>
        <p>Because there is no confidence score provided by BioGRID, we create confidence weights for BioGRID PPI edges in <italic>G</italic><sub>0</sub> using a scoring scheme similar to previous work by (<xref rid="btu263-B16" ref-type="bibr">Gitter <italic>et al.</italic>, 2011</xref>), according to the following premises:
<list list-type="bullet"><list-item><p>Low-throughput experiments, due to their lower false positive rate, are considered to provide more reliable PPIs than high-throughput experiments.</p></list-item><list-item><p>If a PPI is verified experimentally by more experiments from curated publications, we hold higher confidence in the existence of the PPI.</p></list-item></list>
</p>
        <p>There are more than 7000 publications associated with the physical interaction PPI data we collect from BioGRID, making a manual assignment of whether the experiment supporting the PPI is high- or low-throughput highly impractical. Instead, we automatically and efficiently determine a close proxy for this information by simply counting the <italic>number</italic> of different PPIs that a particular publication vouches for in BioGRID. If there are at least 100 PPIs associated with a particular publication, we classify that publication’s endorsements as <italic>high-throughput</italic> and otherwise <italic>low-throughput.</italic> In total, 7112 publications are classified as low-throughput and 97 publications are classified as high-throughput. Note that these 97 high-throughput publications actually generate more than two-thirds of the physical interactions. (We tried other cutoff values for distinguishing low-throughput/high-throughput and the results were similar; in fact, very few publications lie close to the 100 threshold; most low-throughput publications have substantially less, and most high-throughput publications have substantially more.) If an interaction edge is endorsed by only experiments of one type (either high- or low-throughput) we assign confidence weights according to <xref ref-type="table" rid="btu263-T1">Table 1</xref>. If an interaction edge is endorsed by both high confidence and low confidence experiments, we use the confidence score from the low-throughput column in <xref ref-type="table" rid="btu263-T1">Table 1</xref> plus 5% times the number of high-throughput endorsements; however, if this value exceeds 95%, we still assign a maximum confidence score of 95%.
<table-wrap id="btu263-T1" position="float"><label>Table 1.</label><caption><p>Confidence score assignment for PPIs when either only low-throughput or only high-throughput experiments are present</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th rowspan="1" colspan="1">No. of experiments</th><th rowspan="1" colspan="1">Low-throughput</th><th rowspan="1" colspan="1">High-throughput</th></tr></thead><tbody align="left"><tr><td rowspan="1" colspan="1">0</td><td rowspan="1" colspan="1">0</td><td rowspan="1" colspan="1">0</td></tr><tr><td rowspan="1" colspan="1">1</td><td rowspan="1" colspan="1">0.80</td><td rowspan="1" colspan="1">0.25</td></tr><tr><td rowspan="1" colspan="1">2</td><td rowspan="1" colspan="1">0.90</td><td rowspan="1" colspan="1">0.50</td></tr><tr><td rowspan="1" colspan="1">3</td><td rowspan="1" colspan="1">0.95</td><td rowspan="1" colspan="1">0.75</td></tr><tr><td rowspan="1" colspan="1">≥4</td><td rowspan="1" colspan="1">0.95</td><td rowspan="1" colspan="1">0.85</td></tr></tbody></table></table-wrap></p>
        <p>For all pairs of nodes in <italic>G</italic><sub>0</sub>, we can assign the confidence score as their weight. We denote by <inline-formula><mml:math id="n12"><mml:mrow><mml:msub><mml:mi>W</mml:mi><mml:mrow><mml:mtext>conf</mml:mtext></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msubsup><mml:mrow><mml:mo>{</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>}</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> the weight matrix, where <italic>w<sub>ij</sub></italic> is the confidence score for the node pair (<italic>v<sub>i</sub></italic>, <italic>v<sub>j</sub></italic>) (also denoted as <italic>w<sub>vi</sub></italic><sub>,</sub><italic><sub>vj</sub></italic> when confusion does not exist). Note that <inline-formula><mml:math id="n13"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mo>∀</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mspace width=".2em"/><mml:mo>∉</mml:mo><mml:mspace width=".2em"/><mml:msub><mml:mi>E</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="n14"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>&gt;</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mo>∀</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>. We denote by <inline-formula><mml:math id="n15"><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mrow><mml:mtext>conf</mml:mtext></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mtext>conf</mml:mtext></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mtext>conf</mml:mtext></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>W</mml:mi><mml:mrow><mml:mtext>conf</mml:mtext></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> this simple undirected graph where <italic>V</italic><sub>conf</sub> = <italic>V</italic><sub>0</sub>, <italic>E</italic><sub>conf</sub> = <italic>E</italic><sub>0</sub> and <italic>W</italic><sub>conf</sub> is defined above.</p>
        <p>For the edge weights in <italic>G</italic><sub>str</sub> we simply take the confidence scores <italic>p</italic><sub>1</sub>, <italic>p</italic><sub>2</sub> and <italic>p</italic><sub>3</sub> from STRING for each selected category: ‘experiments’, ‘co-expression’ and ‘database’ (Note that we assign 0.9 for ‘database’ confidence score if the association link is in the KEGG PATHWAY PPIs, and 0 otherwise; the choice of 0.9 for KEGG PPIs is similar to STRING’s.); then we calculate the combined confidence score as <inline-formula><mml:math id="n16"><mml:mrow><mml:mi>p</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>*</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>*</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> in the Bayesian scheme, which is exactly how STRING (<xref rid="btu263-B14" ref-type="bibr">Franceschini <italic>et al.</italic>, 2013</xref>) suggests individual confidence scores be combined.</p>
      </sec>
      <sec id="SEC2.1.4">
        <title>2.1.4 Functional pathway maps</title>
        <p>We use all 105 <italic>S.cerevisiae</italic> signaling pathways from the KEGG PATHWAY database (<xref rid="btu263-B18" ref-type="bibr">Kanehisa and Goto, 2000</xref>) (version date: December 12, 2013) where there are 75 pathways from the metabolism category, 21 from the genetic information processing category, 3 from the environmental information processing category and 6 from the cellular processes category. Just as suggested in (<xref rid="btu263-B22" ref-type="bibr">Liu <italic>et al.</italic>, 2009</xref>), in the BioGRID experiments, we run both caDSD with all edges undirected, and we also run the version of caDSD where we additionally consider the following five protein relations that appear in the KEGG database as directional: activation, inhibition, phosphorylation, dephosphorylation and ubiquination. Any PPIs extracted with only one of these five types are considered directed, while all the other PPIs annotated with types such as ‘compound’ are considered undirected. In total, there are 206 directed PPIs and 6951 undirected PPIs separately, involving 1120 proteins in the KEGG PATHWAY database; since we only consider edges of which both endpoints appear in the connected PPI network <italic>G</italic><sub>0</sub>, we extract 157 directed PPIs, the set of which is denoted by <italic>D</italic>, and 3374 undirected PPIs, the set of which is denoted by <italic>U</italic>, involving 1083 unique ORFs total. Because the results for the caDSD adding so few directed edges were very similar to the fully undirected version of caDSD, we do not add directions to the edges in the STRING experiment.</p>
      </sec>
      <sec id="SEC2.1.5">
        <title>2.1.5 Functional annotation</title>
        <p>We consider both the MIPS functional catalogue (FunCat) (<xref rid="btu263-B27" ref-type="bibr">Ruepp <italic>et al.</italic>, 2004</xref>) and GO annotations (<xref rid="btu263-B2" ref-type="bibr">Ashburner <italic>et al.</italic>, 2000</xref>). We use the latest version of FunCat (version 2.1) and the first, second and third level functional categories, retaining only those labels annotating at least three proteins in our dataset. We present results for MIPS annotations at the first level (4443 proteins with 10 569 annotations in 17 functional categories in BioGRID), second level (4428 proteins with 12 378 annotations in 74 out of 80 functional categories annotating at least 3 proteins in BioGRID) and third level (4061 proteins with 9441 annotations in 154 out of 181 functional categories annotating at least 3 proteins in BioGRID). We also present results for the popular GO (<xref rid="btu263-B2" ref-type="bibr">Ashburner <italic>et al.</italic>, 2000</xref>), where the variable depth hierarchy of the annotation labels makes the evaluation of predicted labels more complicated, in the <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btu263/-/DC1">Supplementary Material</ext-link>.</p>
      </sec>
    </sec>
    <sec id="SEC2.2">
      <title>2.2 cDSD, caDSD and capDSD</title>
      <sec id="SEC2.2.1">
        <title>2.2.1 cDSD: incorporating PPI confidence</title>
        <p>We build the undirected weighted simple graph <italic>G</italic><sub>conf</sub>(<italic>V</italic><sub>conf</sub>, <italic>E</italic><sub>conf</sub>, <italic>W</italic><sub>conf</sub>) where <italic>V</italic><sub>conf</sub> = <italic>V</italic><sub>0</sub> and <italic>E</italic><sub>conf</sub> = <italic>E</italic><sub>0</sub> are simply defined by assigning the confidence score to all pairs of nodes in <italic>V</italic><sub>0</sub>. The confidence scores are assigned as described in Section 2.1.3. Let <inline-formula><mml:math id="n17"><mml:mrow><mml:mi>P</mml:mi><mml:mo>′</mml:mo><mml:mo>=</mml:mo><mml:msubsup><mml:mrow><mml:mo>{</mml:mo><mml:mi>p</mml:mi><mml:msub><mml:mo>′</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>}</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> be the <italic>n</italic>-dimensional one-step transition matrix where the (<italic>i</italic>, <italic>j</italic>)th entry is given by
<disp-formula><mml:math id="n18"><mml:mrow><mml:mi>p</mml:mi><mml:msub><mml:mo>′</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="true">{</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mfrac><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mstyle displaystyle="true"><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>l</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:msubsup><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:mrow></mml:mfrac></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mspace width="2.2em"/><mml:mtext>if</mml:mtext><mml:mspace width="0.2em"/><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mi>conf</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mtext>otherwise</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula>
Note that <italic>P<sup>′</sup></italic> represents the probability to reach each neighbor in the random walk. Then the definition of <italic>k</italic>-step transition probability matrix <inline-formula><inline-graphic xlink:href="btu263i1.jpg"/></inline-formula> follows for all positive <italic>k</italic>. It is easy to show that the expected number of times that a random walk starting at node <italic>v<sub>i</sub></italic> and proceeding for <italic>k</italic> steps will visit node <italic>v<sub>j</sub></italic>, denoted as <inline-formula><inline-graphic xlink:href="btu263i2.jpg"/></inline-formula>, can be calculated as <inline-formula><inline-graphic xlink:href="btu263i3.jpg"/></inline-formula>, where <inline-formula><inline-graphic xlink:href="btu263i4.jpg"/></inline-formula> is the (<italic>i</italic>, <italic>j</italic>)th entry of <italic>l</italic>-step transition probability matrix. The <italic>n</italic>-dimensional vector <inline-formula><inline-graphic xlink:href="btu263i5.jpg"/></inline-formula> can be constructed accordingly. Therefore, when we fix the number of random walk steps <italic>k</italic>, the definition of DSD with PPI confidence follows:
<disp-formula><graphic xlink:href="btu274um1.jpg" position="float"/></disp-formula>
</p>
      </sec>
      <sec id="SEC2.2.2">
        <title>2.2.2 caDSD: adding KEGG PPIs</title>
        <p>We consider PPIs from KEGG PATHWAY database highly reliable since they are manually drawn by domain experts; for the BioGRID experiments, we will re-assign maximum confidence score 1 to these PPIs no matter whether or not the PPI is present in the BioGRID database (For the STRING experiments, note that every KEGG edge is already assigned a confidence value of at least 0.9 by cDSD (and maybe larger if there is additional independent evidence) so we just retain cDSD confidence values on these edges).</p>
        <p>Thus, based on the undirected graph <inline-formula><mml:math id="n25"><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mrow><mml:mtext>conf</mml:mtext></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mtext>conf</mml:mtext></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mtext>conf</mml:mtext></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>W</mml:mi><mml:mrow><mml:mtext>conf</mml:mtext></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, the undirected edge set <italic>U</italic> and the directed edge set <italic>D</italic> from KEGG pathways, we build a directed graph <inline-formula><mml:math id="n26"><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mrow><mml:mtext>aug</mml:mtext></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mtext>aug</mml:mtext></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mtext>aug</mml:mtext></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>W</mml:mi><mml:mrow><mml:mtext>aug</mml:mtext></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="n27"><mml:mrow><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mtext>aug</mml:mtext></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mtext>
</mml:mtext><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mtext>aug</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="n28"><mml:mrow><mml:msub><mml:mi>W</mml:mi><mml:mrow><mml:mtext>aug</mml:mtext></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msubsup><mml:mrow><mml:mo>{</mml:mo><mml:msubsup><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mtext>aug</mml:mtext><mml:mo>}</mml:mo></mml:mrow></mml:msubsup><mml:mo>}</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> are constructed as follows (we use <inline-formula><mml:math id="n29"><mml:mrow><mml:mo>〈</mml:mo><mml:mo>〉</mml:mo></mml:mrow></mml:math></inline-formula> to denote directed edges compared to () for undirected edges):
<list list-type="order"><list-item><p>Initialize <italic>E</italic><sub>aug</sub> by adding <inline-formula><mml:math id="n30"><mml:mrow><mml:mo>〈</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>〉</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="n31"><mml:mrow><mml:mo>〈</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>〉</mml:mo></mml:mrow></mml:math></inline-formula> with weight <inline-formula><mml:math id="n32"><mml:mrow><mml:msubsup><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mtext>aug</mml:mtext><mml:mo>}</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:msubsup><mml:mi>w</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mtext>aug</mml:mtext><mml:mo>}</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:msubsup><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mtext>conf</mml:mtext><mml:mo>}</mml:mo></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:mo>∀</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mtext>conf</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>;</p></list-item><list-item><p>For each edge <inline-formula><mml:math id="n33"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>U</mml:mi></mml:mrow></mml:math></inline-formula>, if (<italic>v<sub>i</sub></italic>,<italic>v<sub>j</sub></italic>) already exists in <italic>E</italic><sub>conf</sub>, set <inline-formula><mml:math id="n34"><mml:mrow><mml:msubsup><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mtext>aug</mml:mtext><mml:mo>}</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:msubsup><mml:mi>w</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mtext>aug</mml:mtext><mml:mo>}</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>, otherwise add <inline-formula><mml:math id="n35"><mml:mrow><mml:mo>〈</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>〉</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="n36"><mml:mrow><mml:mo>〈</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>〉</mml:mo></mml:mrow></mml:math></inline-formula> into <italic>E</italic><sub>aug</sub> with weight 1; and</p></list-item><list-item><p>For each edge <inline-formula><mml:math id="n37"><mml:mrow><mml:mo>〈</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>〉</mml:mo><mml:mo>∈</mml:mo><mml:mi>D</mml:mi></mml:mrow></mml:math></inline-formula>, if (<italic>v<sub>i</sub></italic>,<italic>v<sub>j</sub></italic>) already exists in <italic>E</italic><sub>conf</sub>, set <inline-formula><mml:math id="n38"><mml:mrow><mml:msubsup><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mtext>aug</mml:mtext><mml:mo>}</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>, otherwise add <inline-formula><mml:math id="n39"><mml:mrow><mml:mo>〈</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>〉</mml:mo></mml:mrow></mml:math></inline-formula> into <italic>E</italic><sub>aug</sub> with weight 1.</p></list-item></list>
Again, we define the one-step transition probability matrix <inline-formula><mml:math id="n40"><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mtext>aug</mml:mtext></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msubsup><mml:mrow><mml:mo>{</mml:mo><mml:msubsup><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mtext>aug</mml:mtext><mml:mo>}</mml:mo></mml:mrow></mml:msubsup><mml:mo>}</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> as follows:
<disp-formula><mml:math id="n41"><mml:mrow><mml:msubsup><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mtext>aug</mml:mtext><mml:mo>}</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="true">{</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:msubsup><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mtext>aug</mml:mtext><mml:mo>}</mml:mo></mml:mrow></mml:msubsup><mml:mo mathsize="big">/</mml:mo><mml:mstyle displaystyle="true"><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>l</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:msubsup><mml:mrow><mml:msubsup><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mtext>aug</mml:mtext><mml:mo>}</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:mstyle></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mspace width="2.5em"/><mml:mtext>if</mml:mtext><mml:mspace width="0.4em"/><mml:mo>〈</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>〉</mml:mo><mml:mo>∈</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mtext>aug</mml:mtext></mml:mrow></mml:msub><mml:mo>;</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mrow><mml:mtext>otherwise</mml:mtext><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula>
Similarly we define the <italic>k</italic>-step transition probability matrix <inline-formula><mml:math id="n42"><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mrow><mml:mtext>aug</mml:mtext></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mi>k</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:msubsup><mml:mi>P</mml:mi><mml:mrow><mml:mtext>aug</mml:mtext></mml:mrow><mml:mi>k</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> and calculate the expected number of times that a random walk starting at node <italic>v<sub>i</sub></italic> and proceeding for <italic>k</italic> steps will visit node <inline-formula><mml:math id="n43"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mtext>
</mml:mtext><mml:mi>H</mml:mi><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mtext>aug</mml:mtext></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mi>k</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>l</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:msubsup><mml:mrow><mml:msubsup><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mtext>aug</mml:mtext><mml:mo>,</mml:mo><mml:mi>l</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:mstyle></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="n44"><mml:mrow><mml:msubsup><mml:mi>p</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mtext>aug</mml:mtext><mml:mo>,</mml:mo><mml:mi>l</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:math></inline-formula> is the (<italic>i</italic>, <italic>j</italic>)th entry of the <italic>l</italic>-step transition probability matrix <inline-formula><mml:math id="n45"><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mrow><mml:mtext>aug</mml:mtext></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mi>l</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:math></inline-formula>. Thus the <italic>n</italic>-dimensional vector <inline-formula><mml:math id="n46"><mml:mrow><mml:mi>H</mml:mi><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mtext>aug</mml:mtext></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mi>k</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo>∀</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mtext>aug</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> follows similarly and when we fix the number of random walk steps <italic>k</italic>, the definition of DSD with KEGG PPIs is
<disp-formula><mml:math id="n47"><mml:mrow><mml:msup><mml:mrow><mml:mtext>caDSD</mml:mtext></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mi>k</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>H</mml:mi><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mtext>aug</mml:mtext></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mi>k</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>−</mml:mo><mml:mi>H</mml:mi><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mtext>aug</mml:mtext></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mi>k</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mo stretchy="false">|</mml:mo><mml:mn>1</mml:mn></mml:msub><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula>
</p>
      </sec>
      <sec id="SEC2.2.3">
        <title>2.2.3 capDSD: the augmented graph with explicit pathways</title>
        <p>The previous caDSD makes use of the fact that the PPIs from the KEGG PATHWAY database are high-quality, and sometimes known to be directional; however it incorporates the KEGG pathway information as individual interaction edges and retains no notion of each pathway as a cohesive whole. In particular, some graph paths may not be meaningful at all when mapped to a chain of ORFs, while other graph paths correspond to signaling pathways. We hypothesize that if we can make the random walks used to calculate DSD values hew more tightly to the known pathways, the resulting diffusion process might better capture the notion of functional similarity. However, doing so directly would destroy the ‘memoryless’ structure of the underlying random walk, and make the probabilities too difficult to calculate. Our solution is to instead build a new network, where nodes in pathways are replicated, into ordinary and ‘highway’ versions, where the ‘highway’ version is chosen with some probability, and if the ‘highway’ is taken, edge probabilities for the highway nodes are set so that it is highly likely to continue along the pathway. More specifically, we build a network <inline-formula><mml:math id="n48"><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>W</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> where <italic>W</italic><sub>path</sub> will be a mapping: <inline-formula><mml:math id="n49"><mml:mrow><mml:msub><mml:mi>W</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow></mml:msub><mml:mo>:</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow></mml:msub><mml:mo>×</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow></mml:msub><mml:mo>→</mml:mo><mml:mi>ℝ</mml:mi><mml:mo>,</mml:mo><mml:mo>∀</mml:mo><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> (instead of an <italic>n</italic>-dimensional square matrix because the size of <italic>V</italic><sub>path</sub> will be different from <italic>n</italic>) as follows:
<list list-type="order"><list-item><p>Denote by {<italic>P</italic><sub>1</sub>, <italic>P</italic><sub>2</sub>, … , <italic>P<sub>g</sub></italic>} where <italic>g</italic> is the number of pathways, the set of pathways; denote by <italic>PE</italic><sub>1</sub>, <italic>PE</italic><sub>2</sub>, … , <italic>PE<sub>g</sub></italic> the sets of directed edges from the <italic>g</italic> pathways where each undirected edge is considered as two directed edges; denote by <italic>PV</italic><sub>1</sub>,<italic>PV</italic><sub>2</sub>, … ,<italic>PV<sub>g</sub></italic> the sets of proteins involved in each of the <italic>g</italic> pathways where each set is a subset of <italic>V</italic><sub>aug</sub>, namely the ORF list;</p></list-item><list-item><p>We initialize <italic>V</italic><sub>path</sub> with <inline-formula><mml:math id="n50"><mml:mrow><mml:mo>{</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mn>1</mml:mn><mml:mn>0</mml:mn></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mn>2</mml:mn><mml:mn>0</mml:mn></mml:msubsup><mml:mo>,</mml:mo><mml:mn>...</mml:mn><mml:msubsup><mml:mi>v</mml:mi><mml:mi>n</mml:mi><mml:mn>0</mml:mn></mml:msubsup><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> by relabeling each ORF node <inline-formula><mml:math id="n51"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mtext>aug</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> with a superscript 0, which stands for the original PPI network; we initialize <italic>W</italic><sub>path</sub> as the empty map;</p></list-item><list-item><p>We initialize <italic>E</italic><sub>path</sub> by adding <inline-formula><mml:math id="n52"><mml:mrow><mml:mo>〈</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mn>0</mml:mn></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>j</mml:mi><mml:mn>0</mml:mn></mml:msubsup><mml:mo>〉</mml:mo></mml:mrow></mml:math></inline-formula> with weight <inline-formula><mml:math id="n53"><mml:mrow><mml:msub><mml:mi>W</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mn>0</mml:mn></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>j</mml:mi><mml:mn>0</mml:mn></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msubsup><mml:mi>w</mml:mi><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mtext>aug</mml:mtext><mml:mo>}</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:math></inline-formula> for all <inline-formula><mml:math id="n54"><mml:mrow><mml:mo>〈</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>〉</mml:mo><mml:mo>∈</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mtext>aug</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>;</p></list-item><list-item><p>For each pathway <inline-formula><mml:math id="n55"><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mi>α</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mo>{</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mn>...</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mi>g</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>:
<list list-type="alpha-lower"><list-item><p>For each protein <inline-formula><mml:math id="n56"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mi>P</mml:mi><mml:msub><mml:mi>V</mml:mi><mml:mi>α</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, add a pathway node <inline-formula><mml:math id="n57"><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>α</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> into <italic>V</italic><sub>path</sub>;</p></list-item><list-item><p>For each pathway node <inline-formula><mml:math id="n58"><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>α</mml:mi></mml:msubsup><mml:mo>∈</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>: for each edge <inline-formula><mml:math id="n59"><mml:mrow><mml:mo>〈</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>〉</mml:mo><mml:mo>∈</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mtext>aug</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, we add an edge <inline-formula><mml:math id="n60"><mml:mrow><mml:mo>〈</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>α</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>j</mml:mi><mml:mn>0</mml:mn></mml:msubsup><mml:mo>〉</mml:mo></mml:mrow></mml:math></inline-formula> into <italic>E</italic><sub>path</sub> with weight <inline-formula><mml:math id="n61"><mml:mrow><mml:msubsup><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mtext>aug</mml:mtext><mml:mo>}</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:math></inline-formula>; and for each edge <inline-formula><mml:math id="n62"><mml:mrow><mml:mo>〈</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>〉</mml:mo><mml:mo>∈</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mtext>aug</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, we add an edge <inline-formula><mml:math id="n63"><mml:mrow><mml:mo>〈</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>j</mml:mi><mml:mn>0</mml:mn></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>α</mml:mi></mml:msubsup><mml:mo>〉</mml:mo></mml:mrow></mml:math></inline-formula> into <italic>E</italic><sub>path</sub> with weight <inline-formula><mml:math id="n64"><mml:mrow><mml:msubsup><mml:mi>w</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mtext>aug</mml:mtext><mml:mo>}</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:math></inline-formula>; these newly added edges are called cross edges; and</p></list-item><list-item><p>For each edge <inline-formula><mml:math id="n65"><mml:mrow><mml:mo>〈</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>〉</mml:mo><mml:mo>∈</mml:mo><mml:mi>P</mml:mi><mml:msub><mml:mi>E</mml:mi><mml:mi>α</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> which we call a pathway edge, add an edge <inline-formula><mml:math id="n66"><mml:mrow><mml:mo>〈</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>α</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>j</mml:mi><mml:mi>α</mml:mi></mml:msubsup><mml:mo>〉</mml:mo></mml:mrow></mml:math></inline-formula> into <italic>E</italic><sub>path</sub>, and the weight assignment will not be set but the transition probability will be assigned specially in Step 7 when all the pathways are processed.</p></list-item></list>
</p></list-item><list-item><p>For each cross edge in the form of <inline-formula><mml:math id="n67"><mml:mrow><mml:mo>〈</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mn>0</mml:mn></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>j</mml:mi><mml:mi>α</mml:mi></mml:msubsup><mml:mo>〉</mml:mo><mml:mo>∈</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:math></inline-formula>
<inline-formula><mml:math id="n68"><mml:mrow><mml:mo>∀</mml:mo><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>...</mml:mn><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>}</mml:mo><mml:mo>,</mml:mo><mml:mtext>
</mml:mtext><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mi>P</mml:mi><mml:msub><mml:mi>V</mml:mi><mml:mi>α</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mtext>
</mml:mtext><mml:mi>α</mml:mi><mml:mo>∈</mml:mo><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>...</mml:mn><mml:mo>,</mml:mo><mml:mi>g</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>, boost the weight by multiplying <inline-formula><mml:math id="n69"><mml:mrow><mml:msub><mml:mi>W</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mn>0</mml:mn></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>j</mml:mi><mml:mi>α</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> by the factor of <italic>m</italic> and update the weight with the boosted value, where <italic>m</italic> is a multiplication factor parameter;</p></list-item><list-item><p>For all the directed node pairs <inline-formula><mml:math id="n70"><mml:mrow><mml:mo>〈</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>α</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>j</mml:mi><mml:mi>β</mml:mi></mml:msubsup><mml:mo>〉</mml:mo><mml:mspace width=".2em"/><mml:mo>∉</mml:mo><mml:mspace width=".2em"/><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>∀</mml:mo><mml:mi>α</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:math></inline-formula>
<inline-formula><mml:math id="n71"><mml:mrow><mml:mspace linebreak="newline"/><mml:mi>β</mml:mi><mml:mo>∈</mml:mo><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>...</mml:mn><mml:mo>,</mml:mo><mml:mi>g</mml:mi><mml:mo>}</mml:mo><mml:mo>,</mml:mo><mml:mtext>
</mml:mtext><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>α</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>j</mml:mi><mml:mi>β</mml:mi></mml:msubsup><mml:mo>∈</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, assign 0 as the weight since we do not have any evidence for the existence of the PPI pair <inline-formula><mml:math id="n72"><mml:mrow><mml:mo>〈</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>〉</mml:mo></mml:mrow></mml:math></inline-formula>;</p></list-item><list-item><p>Let <italic>N</italic> = |<italic>V</italic><sub>path</sub>|, where <inline-formula><mml:math id="n73"><mml:mrow><mml:mi>N</mml:mi><mml:mo>=</mml:mo><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mstyle displaystyle="true"><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>α</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>g</mml:mi></mml:msubsup><mml:mo stretchy="false">|</mml:mo></mml:mstyle><mml:mi>P</mml:mi><mml:msub><mml:mi>V</mml:mi><mml:mi>α</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:math></inline-formula>. Now we calculate the <italic>N</italic>-dimensional one-step transition probability square matrix <italic>P</italic><sub>path</sub> where we denote by <inline-formula><mml:math id="n74"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mi>α</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>j</mml:mi><mml:mi>β</mml:mi></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> as the one-step transition probability from <inline-formula><mml:math id="n75"><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>α</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="n76"><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mi>j</mml:mi><mml:mi>β</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:mo>∀</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>α</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>j</mml:mi><mml:mi>β</mml:mi></mml:msubsup><mml:mo>∈</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>:
<list list-type="alpha-lower"><list-item><p>For each pathway node <inline-formula><mml:math id="n77"><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>α</mml:mi></mml:msubsup><mml:mo>∈</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, where <italic>α</italic> &gt; 0, the pathway edge <inline-formula><mml:math id="n78"><mml:mrow><mml:mo>〈</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>α</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>j</mml:mi><mml:mi>α</mml:mi></mml:msubsup><mml:mo>〉</mml:mo><mml:mo>∈</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, will have transition probability set as <inline-formula><mml:math id="n79"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mi>α</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>j</mml:mi><mml:mi>α</mml:mi></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>r</mml:mi><mml:mo>/</mml:mo><mml:msubsup><mml:mi>d</mml:mi><mml:mi>i</mml:mi><mml:mi>α</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="n80"><mml:mrow><mml:mi>r</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is a parameter and <inline-formula><mml:math id="n81"><mml:mrow><mml:msubsup><mml:mi>d</mml:mi><mml:mi>i</mml:mi><mml:mi>α</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> is the number of pathway edges starting from <inline-formula><mml:math id="n82"><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>α</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>; the cross edge <inline-formula><mml:math id="n83"><mml:mrow><mml:mo>〈</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>α</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>j</mml:mi><mml:mn>0</mml:mn></mml:msubsup><mml:mo>〉</mml:mo><mml:mo>∈</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> will have transition probability set as <inline-formula><mml:math id="n84"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mi>α</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>j</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>r</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>·</mml:mo><mml:msub><mml:mi>W</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>α</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>j</mml:mi><mml:mn>0</mml:mn></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mo>/</mml:mo><mml:mstyle displaystyle="true"><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:mo>〈</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>α</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>l</mml:mi><mml:mn>0</mml:mn></mml:msubsup><mml:mo>〉</mml:mo><mml:mo>∈</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mrow><mml:msub><mml:mi>W</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>α</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>l</mml:mi><mml:mn>0</mml:mn></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:mrow></mml:math></inline-formula> if <inline-formula><mml:math id="n85"><mml:mrow><mml:msubsup><mml:mi>d</mml:mi><mml:mi>i</mml:mi><mml:mi>α</mml:mi></mml:msubsup><mml:mo>&gt;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="n86"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mi>α</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>j</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>W</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>α</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>j</mml:mi><mml:mn>0</mml:mn></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mo>/</mml:mo><mml:mstyle displaystyle="true"><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:mo>〈</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>α</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>l</mml:mi><mml:mn>0</mml:mn></mml:msubsup><mml:mo>〉</mml:mo><mml:mo>∈</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mrow><mml:msub><mml:mi>W</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>α</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>l</mml:mi><mml:mn>0</mml:mn></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:mrow></mml:math></inline-formula> otherwise (no edges across two pathway nodes from two different pathways exist); and</p></list-item><list-item><p>For each node <inline-formula><mml:math id="n87"><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mn>0</mml:mn></mml:msubsup><mml:mo>∈</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, the transition probability will be set as <inline-formula><mml:math id="n88"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>j</mml:mi><mml:mi>α</mml:mi></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>W</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mn>0</mml:mn></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>j</mml:mi><mml:mi>α</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mo>/</mml:mo><mml:mstyle displaystyle="true"><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:mo>〈</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mn>0</mml:mn></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>l</mml:mi><mml:mi>β</mml:mi></mml:msubsup><mml:mo>〉</mml:mo><mml:mo>∈</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mrow><mml:msub><mml:mi>W</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mn>0</mml:mn></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>l</mml:mi><mml:mi>β</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:mrow></mml:math></inline-formula>, if <inline-formula><mml:math id="n89"><mml:mrow><mml:mo>〈</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mn>0</mml:mn></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>j</mml:mi><mml:mi>α</mml:mi></mml:msubsup><mml:mo>〉</mml:mo><mml:mo>∈</mml:mo></mml:mrow></mml:math></inline-formula>
<inline-formula><mml:math id="n90"><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, and 0 otherwise.</p></list-item></list>
</p></list-item></list>
</p>
        <p>Step 5 is used so that the probability of entering pathways can be adjusted higher by setting the multiplication factor <italic>m</italic> &gt; 1; in the Results section, we report the results where <italic>m</italic> = 25. Step 7(a) is used so that the total probability of staying on the same pathway after one transition from a non-terminal pathway node (the node that has outgoing pathway edges) will be <italic>r</italic>, which in our case we set as <italic>r</italic> = 0.7. We tried different values for <italic>r</italic> and <italic>m</italic> empirically; and results are fairly robust to different choices of <italic>r</italic> and <italic>m</italic> (results of weighted majority voting capDSD over different choices of <italic>r</italic> and <italic>m</italic> appear in the <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btu263/-/DC1">Supplementary Material</ext-link>). Given the one-step transition probability matrix <italic>P</italic><sub>path</sub> as well as the <italic>l</italic>-step transition probability matrix <inline-formula><mml:math id="n91"><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mi>l</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:msubsup><mml:mi>P</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow><mml:mi>l</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:mo>∀</mml:mo><mml:mi>l</mml:mi><mml:mo>≥</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula>, we can calculate the expected number of times that a random walk starting at node <inline-formula><mml:math id="n92"><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>α</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> and proceeding for <italic>k</italic> steps will visit node <inline-formula><mml:math id="n93"><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mi>j</mml:mi><mml:mi>β</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:mtext>
</mml:mtext><mml:msup><mml:mrow><mml:mtext>EXP</mml:mtext></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mi>k</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>α</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>j</mml:mi><mml:mi>β</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>l</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:msubsup><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mi>α</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>j</mml:mi><mml:mi>β</mml:mi></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:mrow></mml:math></inline-formula>. Then we define the <italic>He</italic> value for each pair of ORF nodes <inline-formula><mml:math id="n94"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>:
<disp-formula><mml:math id="n95"><mml:mrow><mml:mi>H</mml:mi><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mi>k</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>α</mml:mi><mml:mo>:</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>j</mml:mi><mml:mi>α</mml:mi></mml:msubsup><mml:mo>∈</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:munder><mml:mtext>E</mml:mtext></mml:mstyle><mml:msup><mml:mrow><mml:mtext>XP</mml:mtext></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mi>k</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mn>0</mml:mn></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>j</mml:mi><mml:mi>α</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>
as well as the <italic>n</italic>-dimensional vector:
<disp-formula><mml:math id="n96"><mml:mrow><mml:mi>H</mml:mi><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mi>k</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>H</mml:mi><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mi>k</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mi>H</mml:mi><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mi>k</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mn>...</mml:mn><mml:mo>,</mml:mo><mml:mi>H</mml:mi><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mi>k</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula>
</p>
        <p>The definition of DSD with external paths follows:
<disp-formula><mml:math id="n97"><mml:mrow><mml:msup><mml:mrow><mml:mtext>capDSD</mml:mtext></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mi>k</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>H</mml:mi><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mi>k</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>−</mml:mo><mml:mi>H</mml:mi><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mtext>path</mml:mtext></mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mi>k</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mo stretchy="false">|</mml:mo><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>∀</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula>
</p>
      </sec>
    </sec>
    <sec id="SEC2.3">
      <title>2.3 Evaluation</title>
      <p>As shown in (5), the original DSD improves all the tested classical protein function prediction algorithms in 2-fold cross-validation for functional label prediction for all three levels of the MIPS hierarchy by simply replacing the shortest-path distance with the DSD matrix, where the best performing method overall was the DSD version of weighted majority vote. In this work, we similarly evaluate four methods (majority vote, weighted majority vote, multi-way cut and functional flow) using cDSD, caDSD and capDSD as the distance metric. While the results in (<xref rid="btu263-B5" ref-type="bibr">Cao <italic>et al.</italic>, 2013</xref>) were based on the converged DSD as <italic>k</italic> →<italic>∞</italic>, we have not yet been able to prove convergence for our new cDSd, caDSD and capDSD variants. Thus, in our experiments, we set the length of random walk step <italic>k</italic> = 7 for all the three variants of DSDs (we also tested other values of <italic>k</italic> and empirically observed that when <italic>k</italic> ≥ 5, the performance is almost unchanged even though we have not been able to prove the convergence of the variants of DSDs.)</p>
      <p>We stress that in each of our experiments, the function prediction method is unchanged, and does not explicitly incorporate confidence or pathway information in any way, except in that it uses the values from the cDSD, caDSD or capDSD matrix instead of from the DSD (or ordinary shortest-path distance) matrix.</p>
      <sec id="SEC2.3.1">
        <title>2.3.1 Cross-validation task</title>
        <p>We consider 2-fold cross-validation tasks. In each of the 2-fold cross-validation tasks, we first randomly split the annotated proteins into two sets. For each set, we use its annotations as the training set to predict the annotations on proteins in the other set. We then average the performance over the 2-folds of the cross-validation. We conduct 10 runs of 2-fold cross-validation. For MIPS function prediction we report the means and standard deviations of the two performance measures over these 10 runs: accuracy and F1 score (<xref rid="btu263-B5" ref-type="bibr">Cao <italic>et al.</italic>, 2013</xref>). The accuracy is calculated as the percentage of proteins that are assigned a correct function annotation (<xref rid="btu263-B28" ref-type="bibr">Schwikowski <italic>et al.</italic>, 2000</xref>). The F1 score for each protein function is calculated as (<xref rid="btu263-B8" ref-type="bibr">Darnell <italic>et al.</italic>, 2007</xref>)
<disp-formula><mml:math id="n98"><mml:mrow><mml:mi>F</mml:mi><mml:mn>1</mml:mn><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mtext>2*precision*recall</mml:mtext></mml:mrow><mml:mrow><mml:mtext>precision+recall</mml:mtext></mml:mrow></mml:mfrac><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>
where precision and recall are calculated by looking at the top <italic>α</italic> (in our case, we present results for <italic>α</italic> = 3) predicted annotations. We average F1 scores over the individual functions and obtain the overall F1 score for each algorithm. Our GO (<xref rid="btu263-B2" ref-type="bibr">Ashburner <italic>et al.</italic>, 2000</xref>) results take into account partial matches based on the deep hierarchy of the GO labels according to the methods of (<xref rid="btu263-B9" ref-type="bibr">Deng <italic>et al.</italic>, 2003</xref>, <xref rid="btu263-B10" ref-type="bibr">2004</xref>) and appear in the <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btu263/-/DC1">Supplementary Material</ext-link>.</p>
      </sec>
      <sec id="SEC2.3.2">
        <title>2.3.2 Neighborhood majority voting algorithm: weighted and unweighted</title>
        <p>These are the simplest of all function prediction methods. Directly applying the concept of ‘guilt by association’, (<xref rid="btu263-B28" ref-type="bibr">Schwikowski <italic>et al.</italic>, 2000</xref>) consider for each protein <italic>u</italic> its neighboring proteins. Each neighbor votes for their own annotations, and the majority is used as the predicted functional label. To incorporate DSD, the neighborhood of <italic>u</italic> is defined simply as the <italic>t</italic> nearest neighbors of <italic>u</italic> under the DSD metric. Furthermore, two schemes are considered: an unweighted scheme where all new neighbors vote equally, and a DSD weighted scheme where all new neighbors get a vote proportional to the reciprocal of their DSD distance. As in (<xref rid="btu263-B5" ref-type="bibr">Cao <italic>et al.</italic>, 2013</xref>), we set <italic>t</italic> = 10.</p>
      </sec>
      <sec>
        <title>Multi-way cut algorithm</title>
        <p>Similar to (<xref rid="btu263-B25" ref-type="bibr">Nabieva <italic>et al.</italic>, 2005</xref>), we implement the minimal multi-way <italic>k</italic>-cut algorithm of (<xref rid="btu263-B33" ref-type="bibr">Vazquez <italic>et al.</italic>, 2003</xref>) whose motivation is to minimize the number of times that annotations associated with neighboring proteins differ, by approximately solving the integer linear programming problem:
<disp-formula><mml:math id="n99"><mml:mrow><mml:mtext>maximize </mml:mtext><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>E</mml:mi><mml:mo>,</mml:mo><mml:mi>a</mml:mi><mml:mo>∈</mml:mo><mml:mtext>FUNC</mml:mtext></mml:mrow></mml:munder><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo>,</mml:mo><mml:mi>a</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:mrow></mml:math></disp-formula>
subject to the constraints <inline-formula><mml:math id="n100"><mml:mrow><mml:mstyle displaystyle="true"><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:mi>a</mml:mi><mml:mo>∈</mml:mo><mml:mi>FUNC</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>a</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo>,</mml:mo><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:mo>≤</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo>,</mml:mo><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mo>,</mml:mo><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> where the edge variables <italic>X<sub>u</sub></italic><sub>,</sub><italic><sub>v</sub></italic><sub>,</sub><italic><sub>a</sub></italic> are defined for each function <italic>a</italic> in the function set FUNC, whenever there exists an edge between proteins <italic>u</italic> and <italic>v</italic> in the edge set <italic>E</italic>. <italic>X<sub>u</sub></italic><sub>,</sub><italic><sub>v</sub></italic><sub>,</sub><italic><sub>a</sub></italic> is set to 1, if protein <italic>u</italic> and <italic>v</italic> both are assigned function <italic>a</italic>, and 0 otherwise. The node variable <italic>X<sub>u</sub></italic><sub>,</sub><italic><sub>a</sub></italic> are set to 1 when <italic>u</italic> is labeled with function <italic>a</italic> and 0 otherwise. The first constraint insures that each protein is only given one annotation. The second constraint makes sure only annotations that appear among the vertices can be assigned to the edges. While this problem is NP-hard, the ILP is tractable in practice; in our case we use the IBM CPLEX solver (version 12.4, <ext-link ext-link-type="uri" xlink:href="http://www.ilog.com/products/cplex/">http://www.ilog.com/products/cplex/</ext-link>). For the DSD version of this algorithm, we simply add additional edges between vertices whose DSD is below a threshold . We set a global threshold <italic>D</italic> based on the average DSD of all pairs, specifically we set <inline-formula><mml:math id="n101"><mml:mrow><mml:mi>D</mml:mi><mml:mo>=</mml:mo><mml:mi>μ</mml:mi><mml:mo>−</mml:mo><mml:mi>c</mml:mi><mml:mo>*</mml:mo><mml:mi>σ</mml:mi></mml:mrow></mml:math></inline-formula>, where <italic>μ</italic> is the average, and <italic>σ</italic> is the standard deviation of the global set of DSD values among all pairs of nodes in the graph. As in (<xref rid="btu263-B5" ref-type="bibr">Cao <italic>et al.</italic>, 2013</xref>), we set <italic>c</italic> = 1.5.</p>
      </sec>
      <sec>
        <title>Functional flow algorithm</title>
        <p><xref rid="btu263-B25" ref-type="bibr">Nabieva <italic>et al.</italic> (2005)</xref> use a network flow algorithm on the graph of protein interactions to label proteins. The idea is to consider each protein having a known function annotation as a ‘reservoir’ of that function, and to simulate flow of functional association through the network to make predictions. We adapt the approach to use DSD by creating an edge between each node pair, with a weight inversely proportional to DSD. For computational efficiency we do not create edges when the reciprocal of DSD is below a small value. This global threshold for DSD values is set the same as in the multi-way cut algorithm. As in the original functional flow, we calculate flow through this new network at each time step. We denote the size of the reservoir of function <italic>a</italic> at node <italic>u</italic> and time step <italic>i</italic>, to be <inline-formula><mml:math id="n102"><mml:mrow><mml:msubsup><mml:mi>R</mml:mi><mml:mi>i</mml:mi><mml:mi>a</mml:mi></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. For a given function (annotation) <italic>a</italic> we initialize the reservoir size at node <italic>u</italic> to be infinite if protein <italic>u</italic> has been annotated with function <italic>a</italic>; otherwise we set it to be 0. More formally: <inline-formula><mml:math id="n103"><mml:mrow><mml:msubsup><mml:mi>R</mml:mi><mml:mn>0</mml:mn><mml:mi>a</mml:mi></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>∞</mml:mi></mml:mrow></mml:math></inline-formula> if <italic>u</italic> is annotated with <italic>a</italic> and 0 otherwise. We then update the reservoir over a sequence of time steps (we use six time steps, as in the original version (<xref rid="btu263-B25" ref-type="bibr">Nabieva <italic>et al.</italic>, 2005</xref>)):
<disp-formula><mml:math id="n104"><mml:mrow><mml:msubsup><mml:mi>R</mml:mi><mml:mi>t</mml:mi><mml:mi>a</mml:mi></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msubsup><mml:mi>R</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>v</mml:mi><mml:mo>:</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>E</mml:mi></mml:mrow></mml:munder><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>g</mml:mi><mml:mi>t</mml:mi><mml:mi>a</mml:mi></mml:msubsup><mml:mo stretchy="false">(</mml:mo></mml:mrow></mml:mstyle><mml:mi>v</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>−</mml:mo><mml:msubsup><mml:mi>g</mml:mi><mml:mi>t</mml:mi><mml:mi>a</mml:mi></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="n105"><mml:mrow><mml:msubsup><mml:mi>g</mml:mi><mml:mi>t</mml:mi><mml:mi>a</mml:mi></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is the amount of flow <italic>a</italic> that moves from <italic>u</italic> to <italic>v</italic> at time <italic>t</italic>. We incorporate DSD into the edge weight as follows:
<disp-formula><mml:math id="n106"><mml:mrow><mml:msubsup><mml:mi>g</mml:mi><mml:mi>t</mml:mi><mml:mi>a</mml:mi></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="true">{</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mtext> if </mml:mtext><mml:mspace width=".2em"/><mml:msubsup><mml:mi>R</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>&lt;</mml:mo><mml:msubsup><mml:mi>R</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mi>min</mml:mi><mml:mo>⁡</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mtext>DSD</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mtext>flow</mml:mtext></mml:mrow><mml:mrow><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mtext>otherwise</mml:mtext><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="n107"><mml:mrow><mml:msub><mml:mrow><mml:mtext>flow</mml:mtext></mml:mrow><mml:mrow><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mtext>DSD</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac></mml:mrow><mml:mrow><mml:msubsup><mml:mstyle displaystyle="true"><mml:mo>∑</mml:mo></mml:mstyle><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>E</mml:mi></mml:mrow><mml:mrow/></mml:msubsup><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mtext>DSD</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac></mml:mrow></mml:mfrac></mml:mrow></mml:math></inline-formula>. The final functional score for node <italic>u</italic> and function <italic>a</italic> is computed as the total amount of incoming flow.</p>
      </sec>
    </sec>
  </sec>
  <sec>
    <title>3 RESULTS</title>
    <sec id="SEC3.1">
      <title>3.1 Performance of function prediction methods and their DSD variants on MIPS</title>
      <p><xref rid="btu263-B5" ref-type="bibr">Cao <italic>et al.</italic> (2013)</xref> show how to modify several classical function prediction methods, including the four we study here (majority vote, weighted majority vote, multi-way cut and functional flow) to utilize the DSD pairwise dissimilarity metric in place of ordinary shortest-path distance. In this work, we use the same DSD-based methods as in <xref rid="btu263-B5" ref-type="bibr">Cao <italic>et al.</italic> (2013)</xref>, but instead substitute the cDSD, caDSD and capDSD matrices to incorporate confidence measures and pathways. Full MIPS results on BioGRID data appear in <xref ref-type="table" rid="btu263-T2">Table 2</xref>, where we have two versions of caDSD: one that adds directions to the 157 edges which are of the five types identified by <xref rid="btu263-B16" ref-type="bibr">Gitter <italic>et al.</italic> (2011)</xref> as naturally directed, and one where all edges are left undirected. <xref ref-type="table" rid="btu263-T3">Table 3</xref> then gives the results on the integrative STRING database. Note that for the STRING database, we already include all the KEGG edges, so cDSD is equivalent to (undirected) caDSD, so this merges the two lines in the table. GO results appear in the <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btu263/-/DC1">Supplementary Material</ext-link>.
<table-wrap id="btu263-T2" position="float"><label>Table 2.</label><caption><p>Summary of protein MIPS function prediction performance for the physical PPI network using DSD, cDSD, caDSD and capDSD compared to the original methods in 10 runs of 2-fold cross-validation (as a percentage)</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th rowspan="1" colspan="1"/><th colspan="2" rowspan="1">MIPS 1<hr/></th><th colspan="2" rowspan="1">MIPS 2<hr/></th><th colspan="2" rowspan="1">MIPS 3<hr/></th></tr><tr><th rowspan="1" colspan="1"/><th rowspan="1" colspan="1">Accuracy</th><th rowspan="1" colspan="1">F1 score</th><th rowspan="1" colspan="1"/><th rowspan="1" colspan="1">Accuracy</th><th rowspan="1" colspan="1">F1 score</th><th rowspan="1" colspan="1"/><th rowspan="1" colspan="1">Accuracy</th><th rowspan="1" colspan="1">F1</th></tr></thead><tbody align="left"><tr><td rowspan="1" colspan="1">Majority Vote (MV)</td><td rowspan="1" colspan="1">50.08 ± 0.72</td><td rowspan="1" colspan="1">41.45 ± 0.40</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">40.69 ± 0.49</td><td rowspan="1" colspan="1">30.85 ± 0.33</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">38.03 ± 0.37</td><td rowspan="1" colspan="1">29.50 ± 0.14</td></tr><tr><td rowspan="1" colspan="1">MV with original DSD</td><td rowspan="1" colspan="1">62.96 ± 0.45</td><td rowspan="1" colspan="1">47.40 ± 0.28</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">49.41 ± 0.65</td><td rowspan="1" colspan="1">35.71 ± 0.33</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">43.87 ± 0.47</td><td rowspan="1" colspan="1">32.33 ± 0.18</td></tr><tr><td rowspan="1" colspan="1">MV with cDSD</td><td rowspan="1" colspan="1">66.16 ± 0.56</td><td rowspan="1" colspan="1">49.10 ± 0.24</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">53.08 ± 0.54</td><td rowspan="1" colspan="1">38.12 ± 0.16</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">47.73 ± 0.56</td><td rowspan="1" colspan="1">35.13 ± 0.33</td></tr><tr><td rowspan="1" colspan="1">MV with caDSD (directed edges)</td><td rowspan="1" colspan="1">67.61 ± 0.56</td><td rowspan="1" colspan="1">50.37 ± 0.22</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">59.11 ± 0.67</td><td rowspan="1" colspan="1">41.58 ± 0.19</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">52.14 ± 0.55</td><td rowspan="1" colspan="1">38.09 ± 0.16</td></tr><tr><td rowspan="1" colspan="1">MV with caDSD (no directed edges)</td><td rowspan="1" colspan="1">67.61 ± 0.42</td><td rowspan="1" colspan="1">50.36 ± 0.24</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">59.11 ± 0.57</td><td rowspan="1" colspan="1">41.57 ± 0.25</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">52.13 ± 0.56</td><td rowspan="1" colspan="1">38.07 ± 0.21</td></tr><tr><td rowspan="1" colspan="1">MV with capDSD</td><td rowspan="1" colspan="1">67.60 ± 0.37</td><td rowspan="1" colspan="1">50.28 ± 0.27</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">59.46 ± 0.57</td><td rowspan="1" colspan="1">41.58 ± 0.22</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">52.97 ± 0.59</td><td rowspan="1" colspan="1">38.19±0.23</td></tr><tr><td rowspan="1" colspan="1">Weighted MV (WMV) with original DSD</td><td rowspan="1" colspan="1">63.40 ± 0.51</td><td rowspan="1" colspan="1">48.29 ± 0.25</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">50.69 ± 0.82</td><td rowspan="1" colspan="1">36.74 ± 0.36</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">45.20 ± 0.58</td><td rowspan="1" colspan="1">33.72 ± 0.27</td></tr><tr><td rowspan="1" colspan="1">WMV with cDSD</td><td rowspan="1" colspan="1">67.07 ± 0.45</td><td rowspan="1" colspan="1">50.12 ± 0.35</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">54.82 ± 0.56</td><td rowspan="1" colspan="1">39.53 ± 0.18</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">49.56 ± 0.49</td><td rowspan="1" colspan="1">36.71 ± 0.32</td></tr><tr><td rowspan="1" colspan="1">WMV with caDSD (directed edges)</td><td rowspan="1" colspan="1">68.69 ± 0.40</td><td rowspan="1" colspan="1">51.48 ± 0.29</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">60.96 ± 0.51</td><td rowspan="1" colspan="1">43.13 ± 0.23</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">54.51 ± 0.51</td><td rowspan="1" colspan="1">39.91 ± 0.28</td></tr><tr><td rowspan="1" colspan="1">WMV with caDSD (no directed edges)</td><td rowspan="1" colspan="1">68.68 ± 0.41</td><td rowspan="1" colspan="1">51.48 ± 0.25</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">60.96 ± 0.53</td><td rowspan="1" colspan="1">43.13 ± 0.22</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">54.51 ± 0.46</td><td rowspan="1" colspan="1">39.90 ± 0.32</td></tr><tr><td rowspan="1" colspan="1"><bold>WMV with capDSD</bold></td><td rowspan="1" colspan="1"><bold>68.90 ± 0.49</bold></td><td rowspan="1" colspan="1"><bold>51.61 ± 0.21</bold></td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"><bold>61.82 ± 0.59</bold></td><td rowspan="1" colspan="1"><bold>43.54 ± 0.26</bold></td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"><bold>56.16 ± 0.59</bold></td><td rowspan="1" colspan="1"><bold>40.42 ± 0.35</bold></td></tr><tr><td rowspan="1" colspan="1">Multi-way Cut (GMC)</td><td rowspan="1" colspan="1">55.31 ± 0.41</td><td rowspan="1" colspan="1">42.18 ± 0.29</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">42.02 ± 0.43</td><td rowspan="1" colspan="1">28.21 ± 0.36</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">36.69 ± 0.50</td><td rowspan="1" colspan="1">24.98 ± 0.21</td></tr><tr><td rowspan="1" colspan="1">GMC with original DSD</td><td rowspan="1" colspan="1">58.36 ± 0.32</td><td rowspan="1" colspan="1">42.51 ± 0.19</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">44.63 ± 0.32</td><td rowspan="1" colspan="1">29.51 ± 0.27</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">38.20 ± 0.40</td><td rowspan="1" colspan="1">25.49 ± 0.22</td></tr><tr><td rowspan="1" colspan="1">GMC with cDSD</td><td rowspan="1" colspan="1">61.11 ± 0.37</td><td rowspan="1" colspan="1">42.85 ± 0.23</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">47.11 ± 0.35</td><td rowspan="1" colspan="1">30.52 ± 0.25</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">40.83 ± 0.61</td><td rowspan="1" colspan="1">26.66 ± 0.22</td></tr><tr><td rowspan="1" colspan="1">GMC with caDSD (directed edges)</td><td rowspan="1" colspan="1">62.71 ± 0.30</td><td rowspan="1" colspan="1">43.46 ± 0.24</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">52.59 ± 0.25</td><td rowspan="1" colspan="1">32.47 ± 0.30</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">44.29 ± 0.63</td><td rowspan="1" colspan="1">28.46 ± 0.19</td></tr><tr><td rowspan="1" colspan="1">GMC with caDSD (no directed edges)</td><td rowspan="1" colspan="1">62.76 ± 0.31</td><td rowspan="1" colspan="1">43.45 ± 0.25</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">52.61 ± 0.25</td><td rowspan="1" colspan="1">32.50 ± 0.30</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">44.31 ± 0.63</td><td rowspan="1" colspan="1">28.46 ± 0.19</td></tr><tr><td rowspan="1" colspan="1">GMC with capDSD</td><td rowspan="1" colspan="1">62.44 ± 0.31</td><td rowspan="1" colspan="1">43.43 ± 0.17</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">52.30 ± 0.46</td><td rowspan="1" colspan="1">32.48 ± 0.31</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">44.18 ± 0.59</td><td rowspan="1" colspan="1">28.34 ± 0.32</td></tr><tr><td rowspan="1" colspan="1">Functional Flow (FF)</td><td rowspan="1" colspan="1">50.48 ± 0.48</td><td rowspan="1" colspan="1">37.17 ± 0.25</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">32.57 ± 0.48</td><td rowspan="1" colspan="1">22.64 ± 0.32</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">25.29 ± 0.39</td><td rowspan="1" colspan="1">18.27 ± 0.14</td></tr><tr><td rowspan="1" colspan="1">FF with original DSD</td><td rowspan="1" colspan="1">53.58 ± 0.36</td><td rowspan="1" colspan="1">40.75 ± 0.11</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">38.20 ± 0.65</td><td rowspan="1" colspan="1">26.71 ± 0.29</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">30.70 ± 0.45</td><td rowspan="1" colspan="1">22.29 ± 0.28</td></tr><tr><td rowspan="1" colspan="1">FF with cDSD</td><td rowspan="1" colspan="1">57.78 ± 0.49</td><td rowspan="1" colspan="1">42.82 ± 0.27</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">42.17 ± 0.58</td><td rowspan="1" colspan="1">29.29 ± 0.38</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">35.68 ± 0.48</td><td rowspan="1" colspan="1">25.72 ± 0.17</td></tr><tr><td rowspan="1" colspan="1">FF with caDSD (directed edges)</td><td rowspan="1" colspan="1">60.09 ± 0.55</td><td rowspan="1" colspan="1">44.81 ± 0.24</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">49.73 ± 0.41</td><td rowspan="1" colspan="1">33.89 ± 0.32</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">40.82 ± 0.60</td><td rowspan="1" colspan="1">28.94 ± 0.27</td></tr><tr><td rowspan="1" colspan="1">FF with caDSD (no directed edges)</td><td rowspan="1" colspan="1">60.18 ± 0.47</td><td rowspan="1" colspan="1">44.80 ± 0.20</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">49.67 ± 0.51</td><td rowspan="1" colspan="1">33.89 ± 0.28</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">40.82 ± 0.51</td><td rowspan="1" colspan="1">28.97 ± 0.23</td></tr><tr><td rowspan="1" colspan="1">FF with capDSD</td><td rowspan="1" colspan="1">58.98 ± 0.53</td><td rowspan="1" colspan="1">43.80 ± 0.27</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">49.32 ± 0.61</td><td rowspan="1" colspan="1">33.32 ± 0.29</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">41.04 ± 0.33</td><td rowspan="1" colspan="1">28.83 ± 0.33</td></tr></tbody></table><table-wrap-foot><fn><p><italic>Note</italic>: Weighted majority vote with capDSD (in bold) gives the best results over all three levels of the MIPS hierarchy.</p></fn></table-wrap-foot></table-wrap>
<table-wrap id="btu263-T3" position="float"><label>Table 3.</label><caption><p>Summary of protein MIPS function prediction performance for the STRING integrative network <italic>G</italic><sub>str</sub> using DSD, cDSD/caDSD and capDSD compared to the original methods in 10 runs of 2-fold cross-validation (as a percentage)</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th rowspan="1" colspan="1"/><th colspan="2" rowspan="1">MIPS 1</th><th rowspan="1" colspan="1"/><th colspan="2" rowspan="1">MIPS 2</th><th rowspan="1" colspan="1"/><th colspan="2" rowspan="1">MIPS 3</th></tr><tr><th rowspan="1" colspan="1"/><th rowspan="1" colspan="1">Accuracy</th><th rowspan="1" colspan="1">F1 score</th><th rowspan="1" colspan="1"/><th rowspan="1" colspan="1">Accuracy</th><th rowspan="1" colspan="1">F1 score</th><th rowspan="1" colspan="1"/><th rowspan="1" colspan="1">Accuracy</th><th rowspan="1" colspan="1">F1</th></tr></thead><tbody align="left"><tr><td rowspan="1" colspan="1">Majority Vote (MV)</td><td rowspan="1" colspan="1">65.71 ± 0.36</td><td rowspan="1" colspan="1">49.50 ± 0.25</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">53.95 ± 0.47</td><td rowspan="1" colspan="1">37.96 ± 0.19</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">46.17 ± 0.50</td><td rowspan="1" colspan="1">33.75 ± 0.33</td></tr><tr><td rowspan="1" colspan="1">MV with original DSD</td><td rowspan="1" colspan="1">64.93 ± 0.56</td><td rowspan="1" colspan="1">48.55 ± 0.42</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">50.99 ± 0.35</td><td rowspan="1" colspan="1">36.10 ± 0.24</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">44.47 ± 0.35</td><td rowspan="1" colspan="1">31.85 ± 0.22</td></tr><tr><td rowspan="1" colspan="1">MV with cDSD/caDSD</td><td rowspan="1" colspan="1">69.38 ± 0.71</td><td rowspan="1" colspan="1">51.54 ± 0.36</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">58.01 ± 0.50</td><td rowspan="1" colspan="1">40.41 ± 0.32</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">51.48 ± 0.46</td><td rowspan="1" colspan="1">36.86 ± 0.32</td></tr><tr><td rowspan="1" colspan="1">MV with capDSD</td><td rowspan="1" colspan="1">70.25 ± 0.47</td><td rowspan="1" colspan="1">52.22 ± 0.39</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">61.22 ± 0.57</td><td rowspan="1" colspan="1">42.52 ± 0.29</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">55.54 ± 0.44</td><td rowspan="1" colspan="1">39.36 ± 0.21</td></tr><tr><td rowspan="1" colspan="1">Weighted MV (WMV) with original DSD</td><td rowspan="1" colspan="1">65.25 ± 0.45</td><td rowspan="1" colspan="1">49.15 ± 0.44</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">52.19 ± 0.42</td><td rowspan="1" colspan="1">37.10 ± 0.29</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">45.64 ± 0.41</td><td rowspan="1" colspan="1">33.00 ± 0.16</td></tr><tr><td rowspan="1" colspan="1">WMV with cDSD/caDSD</td><td rowspan="1" colspan="1">69.67 ± 0.56</td><td rowspan="1" colspan="1">52.20 ± 0.37</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">59.41 ± 0.42</td><td rowspan="1" colspan="1">41.62 ± 0.26</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">53.21 ± 0.37</td><td rowspan="1" colspan="1">38.29 ± 0.28</td></tr><tr><td rowspan="1" colspan="1"><bold>WMV with capDSD</bold></td><td rowspan="1" colspan="1"><bold>71.30 ± 0.44</bold></td><td rowspan="1" colspan="1"><bold>52.97 ± 0.38</bold></td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"><bold>62.88 ± 0.54</bold></td><td rowspan="1" colspan="1"><bold>43.98 ± 0.39</bold></td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"><bold>57.84 ± 0.50</bold></td><td rowspan="1" colspan="1"><bold>41.07 ± 0.21</bold></td></tr><tr><td rowspan="1" colspan="1">Multi-way Cut (GMC)</td><td rowspan="1" colspan="1">63.48 ± 0.56</td><td rowspan="1" colspan="1">43.03 ± 0.20</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">52.66 ± 0.54</td><td rowspan="1" colspan="1">31.67 ± 0.18</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">43.37 ± 0.60</td><td rowspan="1" colspan="1">26.20 ± 0.19</td></tr><tr><td rowspan="1" colspan="1">GMC with original DSD</td><td rowspan="1" colspan="1">63.29 ± 0.68</td><td rowspan="1" colspan="1">42.80 ± 0.23</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">52.34 ± 0.56</td><td rowspan="1" colspan="1">31.60 ± 0.21</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">43.59 ± 0.33</td><td rowspan="1" colspan="1">26.39 ± 0.18</td></tr><tr><td rowspan="1" colspan="1">GMC with cDSD/caDSD</td><td rowspan="1" colspan="1">65.18 ± 0.38</td><td rowspan="1" colspan="1">43.39 ± 0.16</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">53.59 ± 0.47</td><td rowspan="1" colspan="1">31.89 ± 0.18</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">44.46 ± 0.36</td><td rowspan="1" colspan="1">26.50 ± 0.17</td></tr><tr><td rowspan="1" colspan="1">GMC with capDSD</td><td rowspan="1" colspan="1">65.21 ± 0.46</td><td rowspan="1" colspan="1">43.31 ± 0.15</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">51.09 ± 0.37</td><td rowspan="1" colspan="1">30.74 ± 0.20</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">40.73 ± 0.40</td><td rowspan="1" colspan="1">25.49 ± 0.21</td></tr><tr><td rowspan="1" colspan="1">Functional Flow (FF)</td><td rowspan="1" colspan="1">39.91 ± 0.77</td><td rowspan="1" colspan="1">31.61 ± 0.25</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">22.26 ± 0.53</td><td rowspan="1" colspan="1">17.25 ± 0.21</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">18.48 ± 0.49</td><td rowspan="1" colspan="1">14.26 ± 0.09</td></tr><tr><td rowspan="1" colspan="1">FF with original DSD</td><td rowspan="1" colspan="1">47.44 ± 0.42</td><td rowspan="1" colspan="1">36.46 ± 0.18</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">29.46 ± 0.30</td><td rowspan="1" colspan="1">21.06 ± 0.25</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">23.08 ± 0.21</td><td rowspan="1" colspan="1">16.68 ± 0.16</td></tr><tr><td rowspan="1" colspan="1">FF with cDSD/caDSD</td><td rowspan="1" colspan="1">51.70 ± 0.43</td><td rowspan="1" colspan="1">38.57 ± 0.21</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">34.67 ± 0.27</td><td rowspan="1" colspan="1">24.03 ± 0.19</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">28.32 ± 0.35</td><td rowspan="1" colspan="1">19.39 ± 0.20</td></tr><tr><td rowspan="1" colspan="1">FF with capDSD</td><td rowspan="1" colspan="1">53.00 ± 0.37</td><td rowspan="1" colspan="1">39.73 ± 0.19</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">37.93 ± 0.50</td><td rowspan="1" colspan="1">26.56 ± 0.18</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">31.18 ± 0.36</td><td rowspan="1" colspan="1">21.59 ± 0.20</td></tr></tbody></table><table-wrap-foot><fn><p><italic>Note</italic>: Weighted majority vote with capDSD (in bold) gives the best results over all three levels of the MIPS hierarchy.</p></fn></table-wrap-foot></table-wrap></p>
      <p>We observe that, on both BioGRID and STRING, over 10 runs of 2-fold cross-validation, the best method overall is weighted majority vote with capDSD. For example, weighted majority vote with capDSD achieves an average 68.90% accuracy and 51.61% F1 score on the first level of the MIPS hierarchy on BioGRID, and an average 71.30% accuracy and 52.91% F1 score on the first level of the MIPS hierarchy using STRING. Several other observations are interesting. On the BioGRID data, substituting original DSD for the ordinary shortest-paths metric improved all the function prediction methods we tested across the board. On STRING, this was not the case: when additional edges such as co-expression were added in, ordinary DSD (without confidence weights) no longer improved the classical function prediction methods we tested with the exception of functional flow, where there was a large improvement. But functional flow did much worse overall on the STRING database compared to BioGRID. This implies that when adding in additional edges from sources that might be more weakly correlated to functional transfer of annotation, it is crucial to include confidence values. Once we go from unweighted DSD to DSD with confidence, we again see improvements over classical methods. Going from unweighted DSD to cDSD improves everything, but it is even more crucial for STRING than for BioGRID to include a confidence measure.</p>
      <p>Now let us consider all the different ways to incorporate high-confidence KEGG edges. In the BioGRID experiments, as remarked above, it is not surprising that caDSD and capDSD, which use these edges perform better than cDSD, since not all these edges appear already in BioGRID. In the STRING experiment, these edges are already present in cDSD, so cDSD=caDSD gives the naive way to put in these edges, whereas capDSD puts them in as augmented pathways. In the BioGRID experiments, we also experimentally tried assigning directions to some of the KEGG edges as well, as in the method of <xref rid="btu263-B16" ref-type="bibr">Gitter <italic>et al.</italic> (2011)</xref> (see Methods section). However, we find that directing 157 edges is much too small a number to affect results; as can be seen in <xref ref-type="table" rid="btu263-T2">Table 2</xref>, results are nearly identical to the undirected caDSD. We therefore used only undirected caDSD which is the same as cDSD for the STRING experiments.</p>
      <p>So it remains to answer the main question of the article, whether using the augmented pathways as controlled-access highways is a better way to incorporate pathway information than just using individual edges. The best performing method, weighted majority vote, improved things only very slightly (by &lt;1–1.5 pp) for BioGRID, on different levels of the MIPS hierarchy, with more improvement at the lower levels of the hierarchy. However, on STRING, with the presence of more edges that were more weakly correlated to function, the improvement is much greater. In the STRING experiments (<xref ref-type="table" rid="btu263-T3">Table 3</xref>), going to pathways (capDSD) improved weighted majority vote by over 1.5 pp on the first level of the MIPS hierarchy, by over 3 pp on the second level of the MIPS hierarchy and by over 4 pp on the third level of the MIPS hierarchy. Similar improvements are seen for capDSD with unweighted majority vote and functional flow on STRING, though these are not the best performing methods overall, while performance of multi-way cut degrades with augmented pathways. We next discuss why that might be the case.</p>
    </sec>
  </sec>
  <sec>
    <title>4 DISCUSSION</title>
    <p>Incorporating confidence and pathways into our diffusion-based distance metric DSD, we studied whether it was best to incorporate pathway information as edges or as controlled-access highways in an augmented graph. We showed that the augmented graph improved the best function prediction method we tested, weighted majority vote, especially in our experiments on the STRING database, where there were additional edges whose correlation with function was weaker. The performance of other methods was not as clearly served by the augmented pathways; capDSD improved functional flow in the noisier STRING setting, but not on BioGRID. The performance of multi-way cut degraded across the board. We hypothesize that the methods that will improve using capDSD versus just caDSD are those that use only some sort of information about the local neighborhood of a node to predict its function; here, making pathways ‘closer’ with highways is helpful, whereas the amount of distortion in augmenting the graph causes too much noise for more global methods such as multi-way cut. Functional flow, has both local and global aspects, so its mixed performance would be consistent with this theory.</p>
    <p>Finally, the best modern function prediction methods are all integrative methods, and may do something more sophisticated than adding in data from other high-throughput data sources as edges with different confidences (<xref rid="btu263-B29" ref-type="bibr">Sharan <italic>et al.</italic>, 2005</xref>, <xref rid="btu263-B30" ref-type="bibr">2007</xref>; <xref rid="btu263-B4" ref-type="bibr">Borgwardt <italic>et al.</italic>, 2005</xref>; <xref rid="btu263-B7" ref-type="bibr">Cozzetto <italic>et al.</italic>, 2013</xref>; <xref rid="btu263-B12" ref-type="bibr">Dutkowski <italic>et al.</italic>, 2013</xref>). Thus the next step would be to integrate our results into a hybrid method along these lines.</p>
    <p>We note that all code for calculating the confidences, for extracting pathway information from KEGG XML files, and for calculating the cDSD, caDSD and capDSD matrices is available from <ext-link ext-link-type="uri" xlink:href="http://dsd.cs.tufts.edu/capdsd">http://dsd.cs.tufts.edu/capdsd</ext-link>.</p>
  </sec>
</body>
<back>
  <ack>
    <title>ACKNOWLEDGEMENTS</title>
    <p>Thanks to the CRA-W DREU program which supported K.J.D. to spend the summer doing research with L.J.C. at Tufts. Thanks to Mark Crovella, Donna Slonim and the entire Tufts BCB group for helpful feedback.</p>
    <p><italic>Funding</italic>: J.P. was partially supported by <funding-source>NIH</funding-source> grant <award-id>R01 HD076140</award-id> (to D. K. S.).</p>
    <p><italic>Conflict of interest</italic>: none declared.</p>
  </ack>
  <ref-list>
    <title>References</title>
    <ref id="btu263-B1">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Arnau</surname>
            <given-names>V</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Iterative cluster analysis of protein interaction data</article-title>
        <source>Bioinformatics</source>
        <year>2005</year>
        <volume>21</volume>
        <fpage>364</fpage>
        <lpage>378</lpage>
        <pub-id pub-id-type="pmid">15374873</pub-id>
      </element-citation>
    </ref>
    <ref id="btu263-B2">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ashburner</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Gene Ontology: tool for the unification of biology</article-title>
        <source>Nat. Genet.</source>
        <year>2000</year>
        <volume>25</volume>
        <fpage>25</fpage>
        <lpage>29</lpage>
        <pub-id pub-id-type="pmid">10802651</pub-id>
      </element-citation>
    </ref>
    <ref id="btu263-B3">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bader</surname>
            <given-names>GD</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>BIND: the biomolecular interaction network database</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2003</year>
        <volume>31</volume>
        <fpage>248</fpage>
        <lpage>250</lpage>
        <pub-id pub-id-type="pmid">12519993</pub-id>
      </element-citation>
    </ref>
    <ref id="btu263-B4">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Borgwardt</surname>
            <given-names>KM</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Protein function prediction via graph kernels</article-title>
        <source>Bioinformatics</source>
        <year>2005</year>
        <volume>21</volume>
        <issue>Suppl. 1</issue>
        <fpage>i47</fpage>
        <lpage>i56</lpage>
        <pub-id pub-id-type="pmid">15961493</pub-id>
      </element-citation>
    </ref>
    <ref id="btu263-B5">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cao</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Going the distance for protein function prediction: a new distance metric for protein interaction networks</article-title>
        <source>PLoS One</source>
        <year>2013</year>
        <volume>8</volume>
        <fpage>e76339</fpage>
        <pub-id pub-id-type="pmid">24194834</pub-id>
      </element-citation>
    </ref>
    <ref id="btu263-B6">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chen</surname>
            <given-names>J</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Disease candidate gene identification and prioritization using protein interaction networks</article-title>
        <source>BMC Bioinformatics</source>
        <year>2009</year>
        <volume>10</volume>
        <comment>doi:10.1186/1471–2105–10–73</comment>
      </element-citation>
    </ref>
    <ref id="btu263-B7">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cozzetto</surname>
            <given-names>D</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Protein function prediction by massive integration of evolutionary analyses and multiple data sources</article-title>
        <source>BMC Bioinformatics</source>
        <year>2013</year>
        <volume>14</volume>
        <issue>Suppl. 3</issue>
        <fpage>S1</fpage>
        <pub-id pub-id-type="pmid">23514099</pub-id>
      </element-citation>
    </ref>
    <ref id="btu263-B8">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Darnell</surname>
            <given-names>SJ</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>An automated decision-tree approach to predicting protein interaction hot spots</article-title>
        <source>Prot. Struct. Funct. Bioinform.</source>
        <year>2007</year>
        <volume>68</volume>
        <fpage>813</fpage>
        <lpage>823</lpage>
      </element-citation>
    </ref>
    <ref id="btu263-B9">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Deng</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Assessment of the reliability of protein-protein interactions and protein function prediction</article-title>
        <source>Pacific Symposium on Biocomputing</source>
        <year>2003</year>
        <fpage>140</fpage>
        <lpage>151</lpage>
        <pub-id pub-id-type="pmid">12603024</pub-id>
      </element-citation>
    </ref>
    <ref id="btu263-B10">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Deng</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Mapping Gene Ontology to proteins based on protein–protein interaction data</article-title>
        <source>Bioinformatics</source>
        <year>2004</year>
        <volume>20</volume>
        <fpage>895</fpage>
        <lpage>902</lpage>
        <pub-id pub-id-type="pmid">14751964</pub-id>
      </element-citation>
    </ref>
    <ref id="btu263-B11">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Du</surname>
            <given-names>D</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Systematic differences in signal emitting and receiving revealed by pagerank analysis of a human protein interactome</article-title>
        <source>PLoS One</source>
        <year>2012</year>
        <volume>7</volume>
        <fpage>e44872</fpage>
        <pub-id pub-id-type="pmid">23028653</pub-id>
      </element-citation>
    </ref>
    <ref id="btu263-B12">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dutkowski</surname>
            <given-names>J</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A Gene Ontology inferred from molecular networks</article-title>
        <source>Nat. Biotechnol</source>
        <year>2013</year>
        <volume>31</volume>
        <fpage>38</fpage>
        <lpage>45</lpage>
        <pub-id pub-id-type="pmid">23242164</pub-id>
      </element-citation>
    </ref>
    <ref id="btu263-B13">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Erten</surname>
            <given-names>S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>VAVIEN: an algorithm for prioritizing candidate disease genes based on topological similarity of protein interaction networks</article-title>
        <source>J. Comput. Biol.</source>
        <year>2011</year>
        <volume>18</volume>
        <fpage>1561</fpage>
        <lpage>1574</lpage>
        <pub-id pub-id-type="pmid">22035267</pub-id>
      </element-citation>
    </ref>
    <ref id="btu263-B14">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Franceschini</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>String v9. 1: protein-protein interaction networks, with increased coverage and integration</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2013</year>
        <volume>41</volume>
        <fpage>D808</fpage>
        <lpage>D815</lpage>
        <pub-id pub-id-type="pmid">23203871</pub-id>
      </element-citation>
    </ref>
    <ref id="btu263-B15">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gandhi</surname>
            <given-names>T</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Analysis of the human protein interactome and comparison with yeast, worm and fly interaction datasets</article-title>
        <source>Nat. Genet.</source>
        <year>2006</year>
        <volume>38</volume>
        <fpage>285</fpage>
        <lpage>293</lpage>
        <pub-id pub-id-type="pmid">16501559</pub-id>
      </element-citation>
    </ref>
    <ref id="btu263-B16">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gitter</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Discovering pathways by orienting edges in protein interaction networks</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2011</year>
        <volume>39</volume>
        <fpage>e22</fpage>
        <lpage>e22</lpage>
        <pub-id pub-id-type="pmid">21109539</pub-id>
      </element-citation>
    </ref>
    <ref id="btu263-B17">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hishigaki</surname>
            <given-names>H</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Assessment of prediction accuracy of protein function from protein-protein interaction data</article-title>
        <source>Yeast</source>
        <year>2001</year>
        <volume>18</volume>
        <fpage>523</fpage>
        <lpage>531</lpage>
        <pub-id pub-id-type="pmid">11284008</pub-id>
      </element-citation>
    </ref>
    <ref id="btu263-B18">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kanehisa</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Goto</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>KEGG: Kyoto encyclopedia of genes and genomes</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2000</year>
        <volume>28</volume>
        <fpage>27</fpage>
        <lpage>30</lpage>
        <pub-id pub-id-type="pmid">10592173</pub-id>
      </element-citation>
    </ref>
    <ref id="btu263-B19">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kohler</surname>
            <given-names>S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Walking the interactome for prioritization of candidate disease genes</article-title>
        <source>Am. J. Hum. Genet.</source>
        <year>2008</year>
        <volume>82</volume>
        <fpage>949</fpage>
        <lpage>958</lpage>
        <pub-id pub-id-type="pmid">18371930</pub-id>
      </element-citation>
    </ref>
    <ref id="btu263-B20">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Liao</surname>
            <given-names>C-S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>IsoRankN: spectral methods for global alignment of multiple protein networks</article-title>
        <source>Bioinformatics</source>
        <volume>25</volume>
        <fpage>i253</fpage>
        <lpage>i258</lpage>
        <pub-id pub-id-type="pmid">19477996</pub-id>
      </element-citation>
    </ref>
    <ref id="btu263-B21">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Licata</surname>
            <given-names>L</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Mint, the molecular interaction database: 2012 update</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2012</year>
        <volume>40</volume>
        <fpage>D857</fpage>
        <lpage>D861</lpage>
        <pub-id pub-id-type="pmid">22096227</pub-id>
      </element-citation>
    </ref>
    <ref id="btu263-B22">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Liu</surname>
            <given-names>W</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Proteome-wide prediction of signal flow direction in protein interaction networks based on interacting domains</article-title>
        <source>Mol. Cell. Proteom.</source>
        <year>2009</year>
        <volume>8</volume>
        <fpage>2063</fpage>
        <lpage>2070</lpage>
      </element-citation>
    </ref>
    <ref id="btu263-B23">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mering</surname>
            <given-names>VC</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Comparative assessment of large-scale data sets of protein-protein interactions</article-title>
        <source>Nature</source>
        <year>2002</year>
        <volume>417</volume>
        <fpage>399</fpage>
        <lpage>403</lpage>
        <pub-id pub-id-type="pmid">12000970</pub-id>
      </element-citation>
    </ref>
    <ref id="btu263-B24">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Moustakas</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Smad signalling network</article-title>
        <source>J. Cell Sci.</source>
        <year>2002</year>
        <volume>115</volume>
        <fpage>3355</fpage>
        <lpage>3356</lpage>
        <pub-id pub-id-type="pmid">12154066</pub-id>
      </element-citation>
    </ref>
    <ref id="btu263-B25">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nabieva</surname>
            <given-names>E</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Whole-proteome prediction of protein function via graph-theoretic analysis of interaction maps</article-title>
        <source>Bioinformatics</source>
        <year>2005</year>
        <volume>21</volume>
        <fpage>302</fpage>
        <lpage>310</lpage>
      </element-citation>
    </ref>
    <ref id="btu263-B26">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Reguly</surname>
            <given-names>T</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Comprehensive curation and analysis of global interaction networks in <italic>Saccharomyces cerevisiae</italic></article-title>
        <source>J. Biol.</source>
        <year>2006</year>
        <volume>5</volume>
        <fpage>11</fpage>
        <pub-id pub-id-type="pmid">16762047</pub-id>
      </element-citation>
    </ref>
    <ref id="btu263-B27">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ruepp</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The FunCat, a functional annotation scheme for systematic classification of proteins from whole genomes</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2004</year>
        <volume>32</volume>
        <fpage>5539</fpage>
        <lpage>5545</lpage>
        <pub-id pub-id-type="pmid">15486203</pub-id>
      </element-citation>
    </ref>
    <ref id="btu263-B28">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Schwikowski</surname>
            <given-names>B</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A network of protein-protein interactions in yeast</article-title>
        <source>Nat. Biotechnol.</source>
        <year>2000</year>
        <volume>18</volume>
        <fpage>1257</fpage>
        <lpage>1261</lpage>
        <pub-id pub-id-type="pmid">11101803</pub-id>
      </element-citation>
    </ref>
    <ref id="btu263-B29">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sharan</surname>
            <given-names>R</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Conserved patterns of protein interaction in multiple species</article-title>
        <source>Proc. Natl Acad. Sci. USA</source>
        <year>2005</year>
        <volume>102</volume>
        <fpage>1974</fpage>
        <lpage>1979</lpage>
        <pub-id pub-id-type="pmid">15687504</pub-id>
      </element-citation>
    </ref>
    <ref id="btu263-B30">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sharan</surname>
            <given-names>R</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Network-based prediction of protein function</article-title>
        <source>Mol. Syst. Biol.</source>
        <year>2007</year>
        <volume>3</volume>
        <fpage>88</fpage>
        <pub-id pub-id-type="pmid">17353930</pub-id>
      </element-citation>
    </ref>
    <ref id="btu263-B31">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Stark</surname>
            <given-names>C</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>BioGRID: a general repository for interaction datasets</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2006</year>
        <volume>34</volume>
        <issue>Suppl. 1</issue>
        <fpage>D535</fpage>
        <lpage>D539</lpage>
        <pub-id pub-id-type="pmid">16381927</pub-id>
      </element-citation>
    </ref>
    <ref id="btu263-B32">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Vanunu</surname>
            <given-names>O</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Associating genes and protein complexes with disease via network propogation</article-title>
        <source>PLoS Comput. Biol.</source>
        <year>2010</year>
        <volume>6</volume>
        <fpage>e1000641</fpage>
        <pub-id pub-id-type="pmid">20090828</pub-id>
      </element-citation>
    </ref>
    <ref id="btu263-B33">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Vazquez</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Global protein function prediction from protein-protein interaction networks</article-title>
        <source>Nat. Biotechnol.</source>
        <year>2003</year>
        <volume>21</volume>
        <fpage>696</fpage>
        <lpage>700</lpage>
      </element-citation>
    </ref>
    <ref id="btu263-B34">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Voevodski</surname>
            <given-names>K</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Spectral affinity in protein networks</article-title>
        <source>BMC Syst. Biol.</source>
        <year>2009</year>
        <volume>3</volume>
        <fpage>112</fpage>
        <pub-id pub-id-type="pmid">19943959</pub-id>
      </element-citation>
    </ref>
    <ref id="btu263-B35">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Xenarios</surname>
            <given-names>I</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>DIP, the database of interacting proteins: a research tool for studying cellular networks of protein interactions</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2002</year>
        <volume>30</volume>
        <fpage>303</fpage>
        <lpage>305</lpage>
        <pub-id pub-id-type="pmid">11752321</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

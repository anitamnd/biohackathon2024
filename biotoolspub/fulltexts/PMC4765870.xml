<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v2.3 20070202//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName journalpublishing.dtd?>
<?SourceDTD.Version 2.3?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-id journal-id-type="hwp">bioinfo</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">4765870</article-id>
    <article-id pub-id-type="pmid">26072508</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btv234</article-id>
    <article-id pub-id-type="publisher-id">btv234</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Ismb/Eccb 2015 Proceedings Papers Committee July 10 to July 14, 2015, Dublin, Ireland</subject>
        <subj-group subj-group-type="heading">
          <subject>Genes</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>ASTRAL-II: coalescent-based species tree estimation with many hundreds of taxa and thousands of genes</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Mirarab</surname>
          <given-names>Siavash</given-names>
        </name>
        <xref ref-type="aff" rid="btv234-AFF1">
          <sup>1</sup>
        </xref>
        <xref ref-type="corresp" rid="btv234-COR1">*</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Warnow</surname>
          <given-names>Tandy</given-names>
        </name>
        <xref ref-type="aff" rid="btv234-AFF1">
          <sup>2</sup>
        </xref>
      </contrib>
      <aff id="btv234-AFF1"><sup>1</sup>Department of Computer Science, The University of Texas at Austin, Austin, TX 78712, USA and <sup>2</sup>Departments of Computer Science and Bioengineering, The University of Illinois at Urbana-Champaign, Champaign, IL 61801, USA</aff>
    </contrib-group>
    <author-notes>
      <corresp id="btv234-COR1">*To whom correspondence should be addressed.</corresp>
    </author-notes>
    <pub-date pub-type="ppub">
      <day>15</day>
      <month>6</month>
      <year>2015</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>10</day>
      <month>6</month>
      <year>2015</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>10</day>
      <month>6</month>
      <year>2015</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the
							<pub-date pub-type="epub"/>. -->
    <volume>31</volume>
    <issue>12</issue>
    <fpage>i44</fpage>
    <lpage>i52</lpage>
    <permissions>
      <copyright-statement>© The Author 2015. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2015</copyright-year>
      <license xlink:href="http://creativecommons.org/licenses/by-nc/4.0/" license-type="creative-commons">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">http://creativecommons.org/licenses/by-nc/4.0/</ext-link>), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.com</license-p>
      </license>
    </permissions>
    <abstract>
      <p><bold>Motivation:</bold> The estimation of species phylogenies requires multiple loci, since different loci can have different trees due to incomplete lineage sorting, modeled by the multi-species coalescent model. We recently developed a coalescent-based method, ASTRAL, which is statistically consistent under the multi-species coalescent model and which is more accurate than other coalescent-based methods on the datasets we examined. ASTRAL runs in polynomial time, by constraining the search space using a set of allowed ‘bipartitions’. Despite the limitation to allowed bipartitions, ASTRAL is statistically consistent.</p>
      <p><bold>Results:</bold> We present a new version of ASTRAL, which we call ASTRAL-II. We show that ASTRAL-II has substantial advantages over ASTRAL: it is faster, can analyze much larger datasets (up to 1000 species and 1000 genes) and has substantially better accuracy under some conditions. ASTRAL’s running time is <inline-formula><mml:math id="MM1"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mi>k</mml:mi><mml:mo>|</mml:mo><mml:mi>X</mml:mi><mml:msup><mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, and ASTRAL-II’s running time is <inline-formula><mml:math id="MM2"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mi>k</mml:mi><mml:mo>|</mml:mo><mml:mi>X</mml:mi><mml:msup><mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, where <italic>n</italic> is the number of species, <italic>k</italic> is the number of loci and <italic>X</italic> is the set of allowed bipartitions for the search space.</p>
      <p><bold>Availability and implementation:</bold> ASTRAL-II is available in open source at <ext-link ext-link-type="uri" xlink:href="https://github.com/smirarab/ASTRAL">https://github.com/smirarab/ASTRAL</ext-link> and datasets used are available at <ext-link ext-link-type="uri" xlink:href="http://www.cs.utexas.edu/~phylo/datasets/astral2/">http://www.cs.utexas.edu/~phylo/datasets/astral2/</ext-link>.</p>
      <p>
        <bold>Contact:</bold>
        <email>smirarab@gmail.com</email>
      </p>
      <p><bold>Supplementary information:</bold><ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv234/-/DC1">Supplementary</ext-link> data are available at <italic>Bioinformatics</italic> online.</p>
    </abstract>
    <counts>
      <page-count count="9"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>The estimation of species trees is complicated by the fact that different parts of the genome have different evolutionary histories; therefore, the different ‘gene trees’ obtained on different loci are often in conflict with each other and with the true species tree. Gene tree discord due to incomplete lineage sorting (ILS) is a major challenge to species tree estimation (<xref rid="btv234-B2" ref-type="bibr">Degnan and Rosenberg, 2009</xref>; <xref rid="btv234-B4" ref-type="bibr">Edwards, 2009</xref>; <xref rid="btv234-B12" ref-type="bibr">Maddison, 1997</xref>) and is a particular problem for rapid radiations (where several speciation events occur in a relatively short amount of time).</p>
    <p>Because of the possibility of gene tree conflict, species tree estimations are increasingly based on multiple loci. One approach to estimating the species tree simply concatenates the sequence alignments for the different loci together and estimates a tree on the concatenated alignment. However, concatenation-based analyses can be statistically inconsistent under the multi-species coalescent (<xref rid="btv234-B21" ref-type="bibr">Roch and Steel, 2014</xref>) and can result in incorrect trees with high support (<xref rid="btv234-B9" ref-type="bibr">Kubatko and Degnan, 2007</xref>). Because of this potential for concatenation analyses to produce incorrect species trees, many methods have been developed that are designed to address gene tree incongruence due to ILS. Some of these methods have been proven <italic>statistically consistent</italic> under the multi-species coalescent (<xref rid="btv234-B19" ref-type="bibr">Rannala and Yang, 2003</xref>), which means that they will return the true species tree with high probability, given a large enough number of true gene trees. Some of these <italic>coalescent-based</italic> methods [e.g. MP-EST by <xref rid="btv234-B11" ref-type="bibr">Liu <italic>et al.</italic> (2010)</xref> and NJst by <xref rid="btv234-B28" ref-type="bibr">Liu and Yu (2011)</xref>] are now in widespread use.</p>
    <p>Despite the availability of coalescent-based methods, many biological datasets are too large for the available methods; for example, MP-EST cannot be used on large datasets due to computational reasons (<xref rid="btv234-B1" ref-type="bibr">Bayzid <italic>et al.</italic>, 2014</xref>). Other coalescent-based methods are even more limited; for example, *BEAST (<xref rid="btv234-B8" ref-type="bibr">Heled and Drummond, 2010</xref>), a method that co-estimates gene trees and the species tree, cannot be used with more than about 25 species (<xref rid="btv234-B27" ref-type="bibr">Zimmermann <italic>et al.</italic>, 2014</xref>). Computational challenges in real dataset analyses have required the development of coalescent-based methods that could analyze larger datasets; for example, MP-EST could not analyze the 1KP (<xref rid="btv234-B24" ref-type="bibr">Wickett <italic>et al.</italic>, 2014</xref>) dataset of about 100 species and 600 genes, due to the dataset size among other issues.</p>
    <p>ASTRAL (<xref rid="btv234-B13" ref-type="bibr">Mirarab <italic>et al.</italic>, 2014a</xref>) was developed to enable coalescent-based analyses of these larger datasets. ASTRAL solves a likely NP-hard problem by constraining the allowed search space to those species trees that derive their bipartitions from an input set <italic>X</italic>, provided by the user. In the default setting for ASTRAL, we set <italic>X</italic> to be all bipartitions in the input gene trees. ASTRAL is statistically consistent under the multi-species coalescent using this setting for <italic>X</italic> and runs in polynomial time. ASTRAL also had excellent accuracy on the datasets (both simulated and biological) that we explored in <xref rid="btv234-B13" ref-type="bibr">Mirarab <italic>et al.</italic> (2014a)</xref>; however, all these datasets were relatively small (at most 37 species). Our subsequent evaluation of ASTRAL, which we report here, shows that ASTRAL’s running time increases quickly for large datasets and that setting <italic>X</italic> to be the bipartitions in the input gene trees reduces the accuracy for species trees estimated by ASTRAL under certain model conditions. In particular, this setting for <italic>X</italic> is a problem in the presence of large numbers of taxa, few gene trees or high levels of discordance.</p>
    <p>We introduce ASTRAL-II, a new version of ASTRAL. We improve the running time asymptotically by a factor of <italic>n</italic> (where <italic>n</italic> is the number of species), and we show how to define the set <italic>X</italic> so that ASTRAL is more robust and also explores a larger search space. We have also modified ASTRAL so that it can handle polytomies in the input trees. We compare ASTRAL to coalescent-based species tree estimation methods and to concatenation using maximum likelihood (CA-ML) on a collection of simulated datasets and a biological dataset. We show that ASTRAL outperforms the coalescent-based methods, providing improved accuracy, and is able to analyze very large datasets. In particular, we show that ASTRAL can analyze 1000 species and 1000 genes in about a day, using a single processor. The comparison between ASTRAL and CA-ML shows that ASTRAL is more accurate whenever the ILS level is sufficiently high and comes close to CA-ML under very low ILS levels. Our extensive simulations show how the choice of the best method to use can often depend on the amount of gene tree error, number of genes and the level of discordance. On the biological data, we show that some differences between CA-ML and MP-EST previously attributed to the fact that MP-EST accounts for ILS have to be interpreted with care, because ASTRAL-II, which is also consistent under ILS, recovers topologies similar to CA-ML.</p>
  </sec>
  <sec id="SEC2">
    <title>2 Background: ASTRAL-I</title>
    <p>Given a set <inline-formula><mml:math id="MM3"><mml:mi mathvariant="script">G</mml:mi></mml:math></inline-formula> of <italic>k</italic> binary input gene trees on <italic>n</italic> taxa, there is a multi-set of <inline-formula><mml:math id="MM4"><mml:mrow><mml:mi>k</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mtable><mml:mtr><mml:mtd><mml:mi>n</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>4</mml:mn></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> quartet trees induced by the input. We define the weighted quartet (WQ) score of a given tree as the number of quartet trees from this multi-set that the given tree also induces. The optimization problem solved by ASTRAL is to find the species tree that maximizes the WQ score (<xref rid="btv234-B13" ref-type="bibr">Mirarab <italic>et al.</italic>, 2014a</xref>).</p>
    <p>ASTRAL solves this problem using a dynamic programming algorithm. Each <italic>internal node</italic> of an unrooted tree divides the set of leaves into three parts, defining a tripartition (<ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv234/-/DC1">Supplementary Fig. S14</ext-link>), and vice versa, such tripartitions define nodes in an unrooted tree. We use <inline-formula><mml:math id="MM5"><mml:mrow><mml:mi>X</mml:mi><mml:mo>|</mml:mo><mml:mi>Y</mml:mi><mml:mo>|</mml:mo><mml:mi>Z</mml:mi></mml:mrow></mml:math></inline-formula> to denote a tripartition and use tripartitions and internal nodes interchangeably. Each tripartition also defines some number of quartet topologies that will be induced by any tree that includes that tripartition as a node (<ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv234/-/DC1">Supplementary Fig. S14</ext-link>). <xref rid="btv234-B13" ref-type="bibr">Mirarab <italic>et al.</italic> (2014a)</xref> presented a formula for calculating the number of shared induced quartet trees between two given tripartitions. Let <inline-formula><mml:math id="MM6"><mml:mrow><mml:mi>T</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="MM7"><mml:mrow><mml:mi>T</mml:mi><mml:mo>′</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> be two tripartitions and let <inline-formula><mml:math id="MM8"><mml:mrow><mml:msub><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>C</mml:mi></mml:mstyle></mml:mrow><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>∩</mml:mo><mml:msub><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo></mml:mrow></mml:math></inline-formula> for <inline-formula><mml:math id="MM9"><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>∈</mml:mo><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>. The number of quartets shared by <italic>T</italic> and <inline-formula><mml:math id="MM10"><mml:mrow><mml:mi>T</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula> is as follows:
<disp-formula id="btv234-M1"><label>(1)</label><mml:math id="MM11"><mml:mrow><mml:mi>Q</mml:mi><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>T</mml:mi><mml:mo>′</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>Q</mml:mi><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>C</mml:mi></mml:mstyle><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:munder><mml:mi>F</mml:mi></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>C</mml:mi></mml:mstyle></mml:mrow><mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mi>a</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>C</mml:mi></mml:mstyle></mml:mrow><mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mi>b</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>C</mml:mi></mml:mstyle></mml:mrow><mml:mrow><mml:mrow><mml:mn>3</mml:mn><mml:mi>c</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></disp-formula>
where <italic>G</italic><sub>3</sub> gives the set of all permutations of {1, 2, 3} and <italic>F</italic> is given by:
<disp-formula><mml:math id="MM12"><mml:mrow><mml:mi>F</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mtable><mml:mtr><mml:mtd><mml:mi>a</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>2</mml:mn></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:mi>b</mml:mi><mml:mi>c</mml:mi><mml:mo>+</mml:mo><mml:mi>a</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mtable><mml:mtr><mml:mtd><mml:mi>b</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>2</mml:mn></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:mi>c</mml:mi><mml:mo>+</mml:mo><mml:mi>a</mml:mi><mml:mi>b</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mtable><mml:mtr><mml:mtd><mml:mi>c</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>2</mml:mn></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mrow><mml:mi>a</mml:mi><mml:mi>b</mml:mi><mml:mi>c</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>a</mml:mi><mml:mo>+</mml:mo><mml:mi>b</mml:mi><mml:mo>+</mml:mo><mml:mi>c</mml:mi><mml:mo>−</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:mfrac></mml:mrow></mml:math></disp-formula>
<xref rid="btv234-B13" ref-type="bibr">Mirarab <italic>et al.</italic> (2014a)</xref> defined an overall score for a tripartition:
<disp-formula id="btv234-M2"><label>(2)</label><mml:math id="MM13"><mml:mrow><mml:mi>w</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>g</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">G</mml:mi></mml:mrow></mml:munder><mml:mrow><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>T</mml:mi><mml:mo>′</mml:mo><mml:mo>∈</mml:mo><mml:mi mathvariant="script">N</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>g</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mi>Q</mml:mi></mml:mstyle></mml:mrow></mml:mstyle><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>T</mml:mi><mml:mo>′</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="MM14"><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>g</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is the set of internal nodes in <italic>g.</italic>
<xref rid="btv234-B13" ref-type="bibr">Mirarab <italic>et al.</italic> (2014a)</xref> showed that the WQ score of the species tree can be computed by summing <italic>w</italic>(<italic>T</italic>) for all nodes in the tree and then dividing this sum by 2 (every gene tree quartet will be counted twice).</p>
    <p>The ability to score a tripartition of the species tree in isolation from others using the <italic>w</italic> function allows us to use dynamic programming to maximize the WQ score. The dynamic programming starts from the set <italic>L</italic> of all leaves and recursively divides it into smaller subsets, each time finding the division that maximizes the score. To solve the problem exactly, all ways of dividing a subset need to be considered (this is exponential). However, we can restrict the search space by defining a set <italic>X</italic> of bipartitions of taxa and restricting our search to tripartitions derived from <italic>X.</italic> Let <inline-formula><mml:math id="MM15"><mml:mrow><mml:mi>X</mml:mi><mml:mo>′</mml:mo><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mi>A</mml:mi><mml:mo>:</mml:mo><mml:mi>A</mml:mi><mml:mo>|</mml:mo><mml:mi>L</mml:mi><mml:mo>−</mml:mo><mml:mi>A</mml:mi><mml:mo>∈</mml:mo><mml:mi>X</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> (thus, <inline-formula><mml:math id="MM16"><mml:mrow><mml:mi>X</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula> is the set of both parts from all bipartitions in <italic>X</italic>). In the constrained search, we divide a subset into two parts only when both parts appear in <inline-formula><mml:math id="MM17"><mml:mrow><mml:mi>X</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula>. Thus, the recursion in the dynamic programming becomes:
<disp-formula><mml:math id="MM18"><mml:mrow><mml:mi>V</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>A</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mi>max</mml:mi><mml:mo>⁡</mml:mo></mml:mrow><mml:mrow><mml:mi>A</mml:mi><mml:mo>′</mml:mo><mml:mo>,</mml:mo><mml:mi>A</mml:mi><mml:mo>−</mml:mo><mml:mi>A</mml:mi><mml:mo>′</mml:mo><mml:mo>∈</mml:mo><mml:mi>X</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:munder><mml:mtext> </mml:mtext><mml:mo stretchy="false">{</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>A</mml:mi><mml:mo>′</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>A</mml:mi><mml:mo>−</mml:mo><mml:mi>A</mml:mi><mml:mo>′</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>A</mml:mi><mml:mo>′</mml:mo><mml:mo>|</mml:mo><mml:mi>A</mml:mi><mml:mo>−</mml:mo><mml:mi>A</mml:mi><mml:mo>′</mml:mo><mml:mo>|</mml:mo><mml:mi>L</mml:mi><mml:mo>−</mml:mo><mml:mi>A</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math></disp-formula>
where <italic>V</italic>(<italic>A</italic>) gives the score for an optimal subtree on <italic>A</italic>, and <italic>w</italic> is defined in Equation (<xref ref-type="disp-formula" rid="btv234-M2">2</xref>). Note that bipartitions that we allow in the species tree we construct are restricted to those found in the set <italic>X.</italic> ASTRAL-I, by default, sets <italic>X</italic> to the set of bipartitions observed in the input gene trees. <xref rid="btv234-B13" ref-type="bibr">Mirarab <italic>et al.</italic> (2014a)</xref> proved that using this set <italic>X</italic> ensured statistical consistency for ASTRAL. However, the proof relies only on the fact that the set <italic>X</italic> contain all the bipartitions in the input gene trees, and so any set <italic>X</italic> that contains those bipartitions (and perhaps others) also maintains statistical consistency. Thus,
<statement><title>Theorem 1</title><p>Let <italic>X</italic><sub>0</sub> denote the set of bipartitions found in the input gene trees. If <inline-formula><mml:math id="MM19"><mml:mrow><mml:msub><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>⊆</mml:mo><mml:mi>X</mml:mi></mml:mrow></mml:math></inline-formula>, then using ASTRAL with the set <italic>X</italic> is statistically consistent under the multi-species coalescent model.</p></statement>
</p>
  </sec>
  <sec id="SEC3">
    <title>3 ASTRAL-II</title>
    <p>ASTRAL-II has three new features: (i) it uses a faster algorithm to compute <italic>w</italic>, (ii) it searches a larger space by expanding the set X using heuristics and (iii) it can handle polytomies in its input.</p>
    <sec id="SEC3.1">
      <title>3.1 Running time improvement</title>
      <p>The score <italic>w</italic> (Equation <xref ref-type="disp-formula" rid="btv234-M2">2</xref>) needs to be calculated for each tripartition and <inline-formula><mml:math id="MM20"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo>|</mml:mo><mml:mi>X</mml:mi><mml:msup><mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> such tripartitions need to be scored. ASTRAL-I computes <italic>w</italic> in <inline-formula><mml:math id="MM21"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> time for each tripartition, but in ASTRAL-II, we use a better algorithm that uses only <italic>O</italic>(<italic>nk</italic>) time. In ASTRAL-I, we sum over <italic>O</italic>(<italic>nk</italic>) input gene tree nodes, and, for each node, we first calculate <bold>C</bold> and then compute <italic>QI</italic> using Equation (<xref ref-type="disp-formula" rid="btv234-M1">1</xref>). We represent subsets of taxa as bitsets, which results in <italic>O</italic>(<italic>n</italic>) running time for calculating <bold>C</bold>; therefore, calculating each <italic>w</italic> requires <inline-formula><mml:math id="MM22"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. In ASTRAL-II, instead of looking at tripartitions in input gene trees, we do a post-order traverse of all gene trees (rooted arbitrarily) and calculate the score using the algorithm shown in Algorithm 1.<boxed-text position="float"><caption><title>Algorithm 1. Weight calculation: The Input is a gene tree <italic>g</italic> and a tripartition <inline-formula><mml:math id="MM23"><mml:mrow><mml:mi>X</mml:mi><mml:mo>|</mml:mo><mml:mi>Y</mml:mi><mml:mo>|</mml:mo><mml:mi>Z</mml:mi></mml:mrow></mml:math></inline-formula>. Each part (e.g. <italic>X</italic>) is a bitset indexed by the species (thus, <inline-formula><mml:math id="MM24"><mml:mrow><mml:mi>X</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> is 1 if leaf <italic>u</italic> is in <italic>X</italic> and otherwise is 0). <italic>QI</italic> is defined as in Eq. <xref ref-type="disp-formula" rid="btv234-M1">1</xref>. Function WEIGHT is called for all <inline-formula><mml:math id="MM25"><mml:mrow><mml:mi>g</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">G</mml:mi></mml:mrow></mml:math></inline-formula> and results are summed to compute <italic>w</italic> defined in Eq. (<xref ref-type="disp-formula" rid="btv234-M2">2</xref>).</title></caption><p><bold>function</bold> WEIGHT (<inline-formula><mml:math id="MM26"><mml:mrow><mml:mi>g</mml:mi><mml:mo>,</mml:mo><mml:mi>X</mml:mi><mml:mo>|</mml:mo><mml:mi>Y</mml:mi><mml:mo>|</mml:mo><mml:mi>Z</mml:mi></mml:mrow></mml:math></inline-formula>)  <inline-formula><mml:math id="MM27"><mml:mrow><mml:mi>w</mml:mi><mml:mo>←</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="MM28"><mml:mrow><mml:mi>S</mml:mi><mml:mo>←</mml:mo></mml:mrow></mml:math></inline-formula> empty stack</p><p>  <bold>for</bold>
<inline-formula><mml:math id="MM29"><mml:mrow><mml:mi>u</mml:mi><mml:mo>∈</mml:mo><mml:mi>p</mml:mi><mml:mi>o</mml:mi><mml:mi>s</mml:mi><mml:mi>t</mml:mi><mml:mi>O</mml:mi><mml:mi>r</mml:mi><mml:mi>d</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>g</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>
<bold>do</bold></p><p>   <bold>if</bold>
<italic>u</italic> is a leaf <bold>then</bold></p><p>     <inline-formula><mml:math id="MM30"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>←</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>X</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>,</mml:mo><mml:mi>Y</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>,</mml:mo><mml:mi>Z</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula></p><p>   <bold>else</bold></p><p>     <inline-formula><mml:math id="MM31"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>C</mml:mi></mml:mstyle></mml:mrow><mml:mrow><mml:mrow><mml:mn>11</mml:mn></mml:mrow></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>C</mml:mi></mml:mstyle></mml:mrow><mml:mrow><mml:mrow><mml:mn>12</mml:mn></mml:mrow></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>C</mml:mi></mml:mstyle></mml:mrow><mml:mrow><mml:mrow><mml:mn>13</mml:mn></mml:mrow></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>←</mml:mo></mml:mrow></mml:math></inline-formula> pull from <italic>S</italic></p><p>     <inline-formula><mml:math id="MM32"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>C</mml:mi></mml:mstyle></mml:mrow><mml:mrow><mml:mrow><mml:mn>21</mml:mn></mml:mrow></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>C</mml:mi></mml:mstyle></mml:mrow><mml:mrow><mml:mrow><mml:mn>22</mml:mn></mml:mrow></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>C</mml:mi></mml:mstyle></mml:mrow><mml:mrow><mml:mrow><mml:mn>23</mml:mn></mml:mrow></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>←</mml:mo></mml:mrow></mml:math></inline-formula> pull from <italic>S</italic></p><p>     <inline-formula><mml:math id="MM33"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>←</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>C</mml:mi></mml:mstyle></mml:mrow><mml:mrow><mml:mrow><mml:mn>11</mml:mn></mml:mrow></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>C</mml:mi></mml:mstyle></mml:mrow><mml:mrow><mml:mrow><mml:mn>21</mml:mn></mml:mrow></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>C</mml:mi></mml:mstyle></mml:mrow><mml:mrow><mml:mrow><mml:mn>12</mml:mn></mml:mrow></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>C</mml:mi></mml:mstyle></mml:mrow><mml:mrow><mml:mrow><mml:mn>22</mml:mn></mml:mrow></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>C</mml:mi></mml:mstyle></mml:mrow><mml:mrow><mml:mrow><mml:mn>13</mml:mn></mml:mrow></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>C</mml:mi></mml:mstyle></mml:mrow><mml:mrow><mml:mrow><mml:mn>23</mml:mn></mml:mrow></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula></p><p>     <inline-formula><mml:math id="MM34"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>C</mml:mi></mml:mstyle></mml:mrow><mml:mrow><mml:mrow><mml:mn>31</mml:mn></mml:mrow></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>C</mml:mi></mml:mstyle></mml:mrow><mml:mrow><mml:mrow><mml:mn>32</mml:mn></mml:mrow></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>C</mml:mi></mml:mstyle></mml:mrow><mml:mrow><mml:mrow><mml:mn>33</mml:mn></mml:mrow></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>←</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mo>|</mml:mo><mml:mi>X</mml:mi><mml:mo>|</mml:mo><mml:mo>−</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mo>|</mml:mo><mml:mi>Y</mml:mi><mml:mo>|</mml:mo><mml:mo>−</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mo>|</mml:mo><mml:mi>Z</mml:mi><mml:mo>|</mml:mo><mml:mo>−</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula></p><p>     <inline-formula><mml:math id="MM35"><mml:mrow><mml:mi>w</mml:mi><mml:mo>←</mml:mo><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mi>Q</mml:mi><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>C</mml:mi></mml:mstyle><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula></p><p>   push (<italic>x</italic>, <italic>y</italic>, <italic>z</italic>) to <italic>S</italic></p></boxed-text><boxed-text position="float"><caption><title>Algorithm 2. Computing similarity matrix: <italic>leafCount</italic> gives the number of leaves under a node and is easily precomputed.</title></caption><p><bold>function</bold> GETSIMILARITY (<inline-formula><mml:math id="MM36"><mml:mi mathvariant="script">G</mml:mi></mml:math></inline-formula>)</p><p>  <inline-formula><mml:math id="MM37"><mml:mrow><mml:mi>S</mml:mi><mml:mo>←</mml:mo><mml:mi>Z</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>o</mml:mi><mml:mi>s</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>×</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula></p><p>  <bold>for</bold>
<inline-formula><mml:math id="MM38"><mml:mrow><mml:mi>g</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">G</mml:mi></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="MM39"><mml:mrow><mml:mi>u</mml:mi><mml:mo>∈</mml:mo><mml:mi>p</mml:mi><mml:mi>o</mml:mi><mml:mi>s</mml:mi><mml:mi>t</mml:mi><mml:mi>O</mml:mi><mml:mi>r</mml:mi><mml:mi>d</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>g</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>
<bold>do</bold></p><p>   <bold>for</bold>
<inline-formula><mml:math id="MM40"><mml:mrow><mml:mi>l</mml:mi><mml:mo>∈</mml:mo><mml:mi>L</mml:mi><mml:mi>e</mml:mi><mml:mi>f</mml:mi><mml:mi>t</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>
<bold>do</bold></p><p>     <bold>for</bold>
<inline-formula><mml:math id="MM41"><mml:mrow><mml:mi>r</mml:mi><mml:mo>∈</mml:mo><mml:mi>R</mml:mi><mml:mi>i</mml:mi><mml:mi>g</mml:mi><mml:mi>h</mml:mi><mml:mi>t</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>
<bold>do</bold></p><p>      <inline-formula><mml:math id="MM42"><mml:mrow><mml:mi>S</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>l</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>l</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>l</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>+</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mtable><mml:mtr><mml:mtd><mml:mi>n</mml:mi><mml:mo>−</mml:mo><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>a</mml:mi><mml:mi>f</mml:mi><mml:mi>C</mml:mi><mml:mi>o</mml:mi><mml:mi>u</mml:mi><mml:mi>n</mml:mi><mml:mi>t</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>2</mml:mn></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula></p></boxed-text><boxed-text position="float"><caption><title>Algorithm 3. Additions to X using greedy consensus: See detailed descriptions of functions in <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv234/-/DC1">Supplementary Table S3</ext-link>. <inline-formula><mml:math id="MM43"><mml:mrow><mml:mi>g</mml:mi><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>e</mml:mi><mml:mi>d</mml:mi><mml:mi>y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">G</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> returns the greedy consensus of <inline-formula><mml:math id="MM44"><mml:mi mathvariant="script">G</mml:mi></mml:math></inline-formula>, including only branches with frequency <inline-formula><mml:math id="MM45"><mml:mrow><mml:mo>≥</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:math></inline-formula>; if <italic>b</italic> is true, polytomies in the consensus are randomly resolved. <italic>updateX</italic>(<italic>t</italic>) adds bipartitions from tree <italic>t</italic> to the set <italic>X</italic>; when edges in <italic>t</italic> are labeled with a frequency label (e.g. frequencies in the greedy consensus), it returns the maximum label of any <italic>new</italic> bipartition added to <italic>X. clusters</italic>(<italic>p</italic>) returns the taxon partitions defined by an unrooted node <italic>p. upgma</italic>(<italic>S</italic>, <italic>C</italic>) runs the UPGMA algorithm using the similarity matrix <italic>S</italic>; when <italic>C</italic> is given, UPGMA starts by groups defined in <italic>C. randSample</italic>(<italic>p</italic>) selects a random taxon from each subtree around a node <italic>p</italic> and <italic>resolve</italic>(<italic>p</italic>, <italic>r</italic>) resolves polytomy <italic>p</italic> according to a tree <italic>r</italic> on such a sampling. Operator <inline-formula><mml:math id="MM46"><mml:mo>↾</mml:mo></mml:math></inline-formula> restricts a tree or a matrix to a subset. <italic>pectinate</italic>(<italic>O</italic>) returns a pectinate tree based on <italic>O</italic>, an ordered list of taxa. <italic>sortBy</italic> sorts a list of taxa based on their decreasing similarity to a given taxon. Constants: <inline-formula><mml:math id="MM47"><mml:mrow><mml:mtext>THS</mml:mtext><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mrow><mml:mn>100</mml:mn></mml:mrow></mml:mrow></mml:mfrac><mml:mo>,</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mrow><mml:mn>50</mml:mn></mml:mrow></mml:mrow></mml:mfrac><mml:mo>,</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mrow><mml:mn>20</mml:mn></mml:mrow></mml:mrow></mml:mfrac><mml:mo>,</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mrow><mml:mn>10</mml:mn></mml:mrow></mml:mrow></mml:mfrac><mml:mo>,</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mn>4</mml:mn></mml:mrow></mml:mfrac><mml:mo>,</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:mfrac><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>; MIT = 10; RWD = 2 and <inline-formula><mml:math id="MM48"><mml:mrow><mml:mtext>FRQ</mml:mtext><mml:mo>=</mml:mo><mml:mtext>LTH</mml:mtext><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mrow><mml:mn>100</mml:mn></mml:mrow></mml:mrow></mml:mfrac></mml:mrow></mml:math></inline-formula>.</title></caption><p><bold>function</bold> ADDBYGREEDY (<inline-formula><mml:math id="MM49"><mml:mrow><mml:mi mathvariant="script">G</mml:mi><mml:mo>,</mml:mo><mml:mi>S</mml:mi></mml:mrow></mml:math></inline-formula>)</p><p>  <bold>for</bold>
<inline-formula><mml:math id="MM50"><mml:mrow><mml:mi>t</mml:mi><mml:mo>∈</mml:mo><mml:mi>T</mml:mi><mml:mi>H</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:math></inline-formula>
<bold>do</bold></p><p>   <inline-formula><mml:math id="MM51"><mml:mrow><mml:mi>g</mml:mi><mml:mi>c</mml:mi><mml:mo>←</mml:mo><mml:mi>g</mml:mi><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>e</mml:mi><mml:mi>d</mml:mi><mml:mi>y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">G</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>F</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi><mml:mi>s</mml:mi><mml:mi>e</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula></p><p>   <bold>for</bold>
<inline-formula><mml:math id="MM52"><mml:mrow><mml:mi>p</mml:mi><mml:mo>∈</mml:mo><mml:mi>p</mml:mi><mml:mi>o</mml:mi><mml:mi>l</mml:mi><mml:mi>y</mml:mi><mml:mi>t</mml:mi><mml:mi>o</mml:mi><mml:mi>m</mml:mi><mml:mi>i</mml:mi><mml:mi>e</mml:mi><mml:mi>s</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>g</mml:mi><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>
<bold>do</bold></p><p>     <inline-formula><mml:math id="MM53"><mml:mrow><mml:mi>u</mml:mi><mml:mi>p</mml:mi><mml:mi>d</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi><mml:mi>X</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mi>p</mml:mi><mml:mi>g</mml:mi><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>S</mml:mi><mml:mo>,</mml:mo><mml:mi>s</mml:mi><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mi>c</mml:mi><mml:mi>l</mml:mi><mml:mi>u</mml:mi><mml:mi>s</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>s</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula></p><p>     <inline-formula><mml:math id="MM54"><mml:mrow><mml:mi>c</mml:mi><mml:mo>←</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="MM55"><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi><mml:mo>←</mml:mo><mml:mi>M</mml:mi><mml:mi>I</mml:mi><mml:mi>T</mml:mi></mml:mrow></mml:math></inline-formula></p><p>     <bold>while</bold>
<italic>c</italic> &lt; <italic>max</italic>
<bold>do</bold></p><p>      <inline-formula><mml:math id="MM56"><mml:mrow><mml:mi>c</mml:mi><mml:mo>←</mml:mo><mml:mi>c</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula></p><p>      <inline-formula><mml:math id="MM57"><mml:mrow><mml:mi>s</mml:mi><mml:mi>a</mml:mi><mml:mi>m</mml:mi><mml:mi>p</mml:mi><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mo>←</mml:mo><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mi>d</mml:mi><mml:mi>S</mml:mi><mml:mi>a</mml:mi><mml:mi>m</mml:mi><mml:mi>p</mml:mi><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula></p><p>      <inline-formula><mml:math id="MM58"><mml:mrow><mml:mi>r</mml:mi><mml:mo>←</mml:mo><mml:mi>g</mml:mi><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>e</mml:mi><mml:mi>d</mml:mi><mml:mi>y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">G</mml:mi><mml:mo>↾</mml:mo><mml:mi>s</mml:mi><mml:mi>a</mml:mi><mml:mi>m</mml:mi><mml:mi>p</mml:mi><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mi>T</mml:mi><mml:mi>r</mml:mi><mml:mi>u</mml:mi><mml:mi>e</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula></p><p>      <inline-formula><mml:math id="MM59"><mml:mrow><mml:mi>m</mml:mi><mml:mi>t</mml:mi><mml:mo>←</mml:mo><mml:mi>u</mml:mi><mml:mi>p</mml:mi><mml:mi>d</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi><mml:mi>X</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>s</mml:mi><mml:mi>o</mml:mi><mml:mi>l</mml:mi><mml:mi>v</mml:mi><mml:mi>e</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula></p><p>      <bold>if</bold>
<inline-formula><mml:math id="MM60"><mml:mrow><mml:mi>m</mml:mi><mml:mi>t</mml:mi><mml:mo>≥</mml:mo><mml:mi>F</mml:mi><mml:mi>R</mml:mi><mml:mi>Q</mml:mi></mml:mrow></mml:math></inline-formula>
<bold>then</bold>
<inline-formula><mml:math id="MM61"><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi><mml:mo>←</mml:mo><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi><mml:mo>+</mml:mo><mml:mi>R</mml:mi><mml:mi>W</mml:mi><mml:mi>D</mml:mi></mml:mrow></mml:math></inline-formula></p><p>      <inline-formula><mml:math id="MM62"><mml:mrow><mml:mi>u</mml:mi><mml:mi>p</mml:mi><mml:mi>d</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi><mml:mi>X</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>s</mml:mi><mml:mi>o</mml:mi><mml:mi>l</mml:mi><mml:mi>v</mml:mi><mml:mi>e</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi><mml:mi>p</mml:mi><mml:mi>g</mml:mi><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>S</mml:mi><mml:mo>↾</mml:mo><mml:mi>s</mml:mi><mml:mi>a</mml:mi><mml:mi>m</mml:mi><mml:mi>p</mml:mi><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula></p><p>      <bold>if</bold>
<inline-formula><mml:math id="MM63"><mml:mrow><mml:mi>t</mml:mi><mml:mo>≤</mml:mo><mml:mi>L</mml:mi><mml:mi>T</mml:mi><mml:mi>H</mml:mi><mml:mo> </mml:mo><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mi>d</mml:mi><mml:mo> </mml:mo><mml:mi>c</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>M</mml:mi><mml:mi>I</mml:mi><mml:mi>T</mml:mi></mml:mrow></mml:math></inline-formula>
<bold>then</bold></p><p>        <bold>for</bold>
<inline-formula><mml:math id="MM64"><mml:mrow><mml:mi>s</mml:mi><mml:mo>∈</mml:mo><mml:mi>s</mml:mi><mml:mi>a</mml:mi><mml:mi>m</mml:mi><mml:mi>p</mml:mi><mml:mi>l</mml:mi><mml:mi>e</mml:mi></mml:mrow></mml:math></inline-formula>
<bold>do</bold></p><p>         <inline-formula><mml:math id="MM65"><mml:mrow><mml:mi>r</mml:mi><mml:mo>←</mml:mo><mml:mi>p</mml:mi><mml:mi>e</mml:mi><mml:mi>c</mml:mi><mml:mi>t</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:mi>t</mml:mi><mml:mi>B</mml:mi><mml:mi>y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>S</mml:mi><mml:mo>,</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>s</mml:mi><mml:mi>a</mml:mi><mml:mi>m</mml:mi><mml:mi>p</mml:mi><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula></p><p>         <inline-formula><mml:math id="MM66"><mml:mrow><mml:mi>u</mml:mi><mml:mi>p</mml:mi><mml:mi>d</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi><mml:mi>X</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>s</mml:mi><mml:mi>o</mml:mi><mml:mi>l</mml:mi><mml:mi>v</mml:mi><mml:mi>e</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula></p></boxed-text></p>
      <p>This algorithm, for each traversal node <italic>u</italic>, computes the number of taxa under <italic>u</italic> that are shared with each side of the tripartition being scored. This is done using a <italic>O</italic>(1) calculation that sums the same quantities already calculated for the children of <italic>u.</italic> At the leaves, we simply need to find which side of the tripartition includes that leaf, which can also be done in <italic>O</italic>(1) using bitsets. Thus, we easily compute the <bold>C</bold> matrix in <italic>O</italic>(1) and therefore, calculating <italic>w</italic> for each tripartition requires <italic>O</italic>(<italic>nk</italic>) running time. Thus,
<statement><title>Theorem 2</title><p>The running time of ASTRAL-II is <inline-formula><mml:math id="MM67"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mi>k</mml:mi><mml:mo>|</mml:mo><mml:mi>X</mml:mi><mml:msup><mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>.</p></statement>
</p>
    </sec>
    <sec id="SEC3.2">
      <title>3.2 Additions to X</title>
      <p>We use following heuristic strategies to add bipartitions to the set X.</p>
      <sec id="SEC3.2.1">
        <title>3.2.1 Similarity matrix</title>
        <p>We define the similarly between a pair of taxa as the number of quartet trees induced by gene trees where the pair appear on the same side of the quartet. We compute a similarity matrix by traversing all nodes of input gene trees, rooted arbitrarily (Algorithm 2). For each node <italic>u</italic>, we look at all pairs of leaves chosen each from one of the children of <italic>u.</italic> For each such pair, we add <inline-formula><mml:math id="MM68"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mtable><mml:mtr><mml:mtd><mml:mi>y</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>2</mml:mn></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to their similarity score, where <italic>y</italic> is the number of leaves <italic>outside</italic> the subtree below <italic>u.</italic> This will process each pair of nodes in each of the input <italic>k</italic> genes exactly once and would therefore require <inline-formula><mml:math id="MM69"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> computations. The final score can be normalized by the number of input quartet trees that include any pair (not shown in Algorithm 2). We use the similarity matrix to calculate a UPGMA tree and add all its bipartitions to X. This matrix is also used in our next heuristics.</p>
      </sec>
      <sec id="SEC3.2.2">
        <title>3.2.2 Greedy</title>
        <p>The greedy consensus of a set of trees is obtained by starting from a star tree and adding bipartitions from input trees in the decreasing order of their frequency if they do not conflict with previous bipartitions. This process ends when no remaining bipartition has frequency above a given threshold or when the tree is fully resolved. We estimate the greedy consensus of the gene trees with various thresholds (Algorithm 3). For each polytomy in each consensus tree, we resolve the polytomy in multiple ways and add bipartitions implied by those resolutions to the set X. First, we resolve the polytomy by applying UPGMA to the similarity matrix, starting from clusters defined by the polytomy. Then, we sample one taxon from each side of the polytomy randomly and use the greedy consensus of the gene trees restricted to this subsample to find a resolution of the polytomy (randomly resolving remaining polytomies). We repeat this process at least 10 times, but if the subsampled greedy consensus trees include new bipartitions that are sufficiently frequent (<inline-formula><mml:math id="MM70"><mml:mrow><mml:mo>≥</mml:mo><mml:mn>1</mml:mn><mml:mi>%</mml:mi></mml:mrow></mml:math></inline-formula>), we do more rounds of random sampling (we increase the number of iterations by two). For each random subsample around a polytomy, we also resolve it by calculating an UPGMA tree on the subsampled similarity matrix. Finally, for the two first greedy threshold values and the first 10 random subsamples, we also use a third strategy that can potentially add a larger number of bipartitions: for each subsampled taxon <italic>x</italic>, we resolve the polytomy as a pectinate tree by sorting the remaining taxa according to their similarity with <italic>x</italic> (in decreasing order).</p>
      </sec>
      <sec id="SEC3.2.3">
        <title>3.2.3 Gene tree polytomies</title>
        <p>When gene trees include polytomies, we also add new bipartitions to set X. We first compute the greedy consensus of the input gene trees with threshold 0, and if the greedy consensus has polytomies, we resolve them using UPGMA; we repeat this process twice to account for random tie-breakers in the greedy consensus estimation. Then, for each gene tree polytomy, we use the two resolved greedy consensus trees to infer a resolution of the polytomy, and we add the implied resolutions to set X.</p>
      </sec>
    </sec>
    <sec id="SEC3.3">
      <title>3.3 Multifurcating input gene trees</title>
      <p>Although true gene trees are assumed to be fully resolved (binary), in some cases, estimated ML trees produce polytomies. Extending ASTRAL to inputs that include polytomies requires solving the WQ tree problem when each node of the input defines not a tripartition but a multi-partition of the set of taxa. We start by a basic observation: every <italic>resolved</italic> quartet tree induced by a gene tree maps to two nodes in the gene tree <italic>regardless</italic> of whether the gene tree is binary or not (<ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv234/-/DC1">Supplementary Fig. S14</ext-link>). In other words, induced quartet trees that map to only one node of the gene tree are <italic>unresolved.</italic> When maximizing the quartet support, these unresolved gene tree quartet trees are inconsequential and need to be ignored. Now, consider a polytomy of degree <italic>d</italic>, which divides the set of taxa into <italic>d</italic> parts. Any selection of three parts around the polytomy defines a tripartition. Any selection of two taxa from one part of this tripartition and one taxon from each of the remaining two parts induces a resolved quartet tree, and each resolved quartet tree maps to exactly two nodes in our multifurcating tree. Thus, all the algorithmic assumptions of ASTRAL remain intact, as long as for each degree <italic>d</italic> node in an input gene tree, we treat it as a collection of <inline-formula><mml:math id="MM72"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mtable columnalign="left"><mml:mtr><mml:mtd><mml:mi>d</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>3</mml:mn></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> tripartitions. Thus, for a tripartition <inline-formula><mml:math id="MM73"><mml:mrow><mml:mi>T</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and a multi-partition <inline-formula><mml:math id="MM74"><mml:mrow><mml:mi>M</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:mo>…</mml:mo><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>d</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, we let <inline-formula><mml:math id="MM75"><mml:mrow><mml:msub><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>C</mml:mi></mml:mstyle></mml:mrow><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>∩</mml:mo><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo></mml:mrow></mml:math></inline-formula> for all <inline-formula><mml:math id="MM76"><mml:mrow><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="MM77"><mml:mrow><mml:mi>j</mml:mi><mml:mo>∈</mml:mo><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>d</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> and we generalize Equation (<xref ref-type="disp-formula" rid="btv234-M1">1</xref>) to:
<disp-formula id="btv234-M3"><label>(3)</label><mml:math id="MM78"><mml:mrow><mml:mi>Q</mml:mi><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>M</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>Q</mml:mi><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>C</mml:mi></mml:mstyle><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:msub><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:munder><mml:mi>F</mml:mi></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>C</mml:mi></mml:mstyle></mml:mrow><mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mi>a</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>C</mml:mi></mml:mstyle></mml:mrow><mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mi>b</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>C</mml:mi></mml:mstyle></mml:mrow><mml:mrow><mml:mrow><mml:mn>3</mml:mn><mml:mi>c</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></disp-formula>
where <italic>P</italic><sub>3</sub> is the set of all ordered subsets of size 3 from <inline-formula><mml:math id="MM79"><mml:mrow><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>d</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>. Extending Algorithm 1 to compute Equation (<xref ref-type="disp-formula" rid="btv234-M3">3</xref>) is straightforward.</p>
      <p>In the presence of polytomies, the running time analysis can change because analyzing each polytomy requires time cubic in its degree and the degree can increase with <italic>n.</italic> It is not hard to see that the worst case is when all gene trees have a polytomy with <inline-formula><mml:math id="MM80"><mml:mrow><mml:mi>d</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:mfrac></mml:mrow></mml:math></inline-formula>; in this case, the running time is <inline-formula><mml:math id="MM81"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup><mml:mi>k</mml:mi><mml:mo>|</mml:mo><mml:mi>X</mml:mi><mml:msup><mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>.</p>
    </sec>
    <sec id="SEC3.4">
      <title>3.4 Statistical consistency</title>
      <statement>
        <title>Theorem 3</title>
        <p> ASTRAL-II is statistically consistent under the multi-species coalescent model.</p>
      </statement>
      <statement>
        <title>Proof</title>
        <p>The changes made to ASTRAL-I to develop ASTRAL-II affect the running time, enlarge the search space and allow it to analyze gene trees with polytomies. Under the multi-species coalescent model, all gene trees are binary. As shown in Theorem 1, as long as the set <italic>X</italic> contains all the bipartitions in the input gene trees, ASTRAL is statistically consistent. The theorem follows.</p>
      </statement>
    </sec>
  </sec>
  <sec id="SEC4">
    <title>4 Experimental setup</title>
    <sec sec-type="methods" id="SEC4.1">
      <title>4.1 Simulation procedure</title>
      <p>We used SimPhy (<ext-link ext-link-type="uri" xlink:href="https://github.com/adamallo/SimPhy">https://github.com/adamallo/SimPhy</ext-link>) to simulate species trees and gene trees (produced in mutation units) and then used Indelible (<xref rid="btv234-B5" ref-type="bibr">Fletcher and Yang, 2009</xref>) to simulate nucleotide sequences down the gene trees with varying length and model parameters. We estimated gene trees on these simulated gene alignments, which we then used in coalescent-based analyses.</p>
      <p>We simulated 11 model conditions, which we divide into two datasets, with one model condition appearing in both datasets. We used SimPhy to simulate species trees according to the Yule process, characterized by the number of taxa, maximum tree length and the speciation rate (this combination defines a model condition). In six model conditions (forming Dataset I), we fixed the number of taxa to 200 and varied tree length (500 K, 2 M and 10 M generations) and speciation rates (1e-6 and 1e-7 per generation). The tree length impacts the amount of ILS, with lower length resulting in shorter branches, and therefore higher levels of ILS (<ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv234/-/DC1">Supplementary Fig. 1a</ext-link>). Speciation rate impacts whether speciation events tend to happen close to the tips (1e-06) or close to the base (1e-07). Different tree shapes (i.e. combinations of tree length and speciation rate) produce different levels of ILS starting from relatively low [roughly 10% distance between true gene trees and the species tree, measured by the Robinson–Foulds (RF) distance; <xref rid="btv234-B20" ref-type="bibr">Robinson and Foulds (1981)</xref>] and going up to very high (roughly 70% RF). In the remaining model conditions (forming Dataset II), we fixed the tree shape to 2 M/1e-06 and set the number of taxa to 10, 50, 100, 200, 500 and 1000. Thus, the model condition with 200 taxa and the 2 M/1e-6 tree shape appears in both datasets.</p>
      <p>For each model condition, we simulated 50 species trees, forming 50 replicates. On each species tree, 1000 gene trees were simulated according to the multi-species coalescent model with the population size fixed to 200 000 (a reasonable value for vertebrates). SimPhy uses various rate parameters and rate heterogeneity modifiers to convert gene tree branch lengths to mutation units, introducing deviations from molecular clock and rate heterogeneity between genes (see <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv234/-/DC1">Supplementary Table S1</ext-link> for parameters; simulation scripts available at <ext-link ext-link-type="uri" xlink:href="http://www.cs.utexas.edu/users/phylo/software/astral/">http://www.cs.utexas.edu/users/phylo/software/astral/</ext-link>).</p>
      <p>We simulated indel-free gene alignments using Indelible and under the GTR + Γ model. First, for each replicate, two parameters, μ and σ, were drawn uniformly from <inline-formula><mml:math id="MM82"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>5.7</mml:mn><mml:mo>,</mml:mo><mml:mn>7.3</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="MM83"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>0.3</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> respectively. Then, the sequence length for each gene in that replicate was drawn from a log-normal distribution with μ and σ parameters (thus, average sequence length is uniformly distributed between 300 bp and 1500 bp). GTR + Γ parameters were drawn from Dirichlet distributions that had parameters estimated using ML from a collection of real biological datasets (details given in the <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv234/-/DC1">Supplementary Material</ext-link>).</p>
    </sec>
    <sec id="SEC4.2">
      <title>4.2 Gene tree estimation</title>
      <p>Previous studies (<xref rid="btv234-B10" ref-type="bibr">Liu <italic>et al.</italic>, 2011</xref>) have shown that FastTree-II (<xref rid="btv234-B17" ref-type="bibr">Price <italic>et al.</italic>, 2010</xref>) is generally as accurate at estimating the tree topology as more extensive ML heuristics such as RAxML (<xref rid="btv234-B23" ref-type="bibr">Stamatakis 2014</xref>), while being much faster. In our simulation studies, we used FastTree to estimate the 550 000 gene trees ranging from 10 to 1000 species. <xref ref-type="fig" rid="btv234-F1">Figure 1</xref>b shows the distribution of gene tree estimation error and demonstrate that we have simulated wide-ranging levels of gene tree error. The tree error was impacted by tree shape parameters; more ILS and deeper speciation lead to higher levels of gene tree error. Moreover, average gene tree estimation error varied across replicates, and gene tree error varied considerably among the 1000 genes in each replicate; the number of taxa had only a small impact on gene tree estimation error (<ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv234/-/DC1">Supplementary Fig. S1</ext-link>).
<fig id="btv234-F1" position="float"><label>Fig. 1.</label><caption><p><bold>Characteristics of the simulation.</bold> (<bold>a</bold>) RF distance between the true species tree and the true gene trees (50 replicates of 1000 genes) for Dataset I. Tree height directly affects the amount of true discordance; the speciation rate affects true gene tree discordance only with 10 M tree length. The number of taxa has a modest effect on the discordance (see <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv234/-/DC1">Supplementary Fig. S13</ext-link>). (<bold>b</bold>) RF distance between true gene trees and estimated gene trees for Dataset I. See also <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv234/-/DC1">Supplementary Figure S1</ext-link> for inter- and intra-replicate gene tree error distributions</p></caption><graphic xlink:href="btv234f1p"/></fig>
</p>
      <p>FastTree can output polytomies when sequence alignments cannot distinguish between competing tree resolutions. We removed any gene tree where more than 50% of the internal nodes were polytomies. This pruning left fewer than 500 genes for three replicates of the 200 taxon/500 K/1e-06 and 50-taxon model conditions, two replicates of the 100-taxon model condition and one replicate of the 10-taxon model condition. Those nine replicates (out of 550) were removed from our analyses.</p>
    </sec>
    <sec id="SEC4.3">
      <title>4.3 Species tree methods</title>
      <p>We run all methods given a maximum of 4 days of running time and 24 GB of memory. We compare ASTRAL-I to ASTRAL-II and ASTRAL-II to NJst and CA-ML run using FastTree. MP-EST only finished for datasets with at most 100 taxa within time limits. Because of its running time, we ran MP-EST once (one random seed number) for each analysis. NJst, ASTRAL-I and MP-EST could not handle polytomies; therefore, we randomly resolved polytomies in inputs of these methods. We also ran ASTRAL-II on gene trees with randomly resolved polytomies and observed no differences with ASTRAL-II run on gene trees with polytomies (<ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv234/-/DC1">Supplementary Fig. S12</ext-link>). Thus, differences between ASTRAL-II and other methods are not due to the random resolutions of polytomies.</p>
    </sec>
    <sec id="SEC4.4">
      <title>4.4 Evaluation criteria</title>
      <p>We evaluate methods in terms of species tree error and we also evaluate running time for coalescent-based methods. Species tree error is measured using the standard RF distance. Running time of summary methods is measured on a heterogeneous condor cluster and gives the wall clock running time.</p>
    </sec>
  </sec>
  <sec id="SEC5">
    <title>5 Simulation results</title>
    <p>We start by comparing ASTRAL-II with ASTRAL-I in terms of accuracy and running time (RQ1). We next focus on ASTRAL-II and compare it to other coalescent-based methods (RQ2) and then compare it to CA-ML (RQ3). This question leads us to a more in depth analysis of the effects of gene tree estimation error on the accuracy of various methods (RQ4). Finally, we evaluate the impact of collapsing low support branches in input gene trees on the accuracy of ASTRAL-II (RQ5).</p>
    <sec id="SEC5.1">
      <title>5.1 RQ1: ASTRAL-I versus ASTRAL-II</title>
      <sec id="SEC5.1.1">
        <title>5.1.1 Search space</title>
        <p>ASTRAL-II adds extra bipartitions to the search space, which allows it to explore a larger search space; this tends to increase the accuracy of ASTRAL-II over ASTRAL-I. In our simulations, the extent of the improvement depended on the model condition (<xref ref-type="table" rid="btv234-T1">Table 1</xref>). In Dataset I, with the lowest level of ILS or with the medium ILS level and recent speciation, both ASTRAL-I and ASTRAL-II had extremely low error (<ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv234/-/DC1">Supplementary Fig. S2</ext-link>) and no substantial improvements were detected by the addition of extra bipartitions (<xref ref-type="table" rid="btv234-T1">Table 1</xref>). With 2M length and deep speciations, ASTRAL-II improved upon ASTRAL-I substantially, with improvements ranging from 3.5% with 1000 genes to 10.1% with 50 genes. Most dramatic differences were observed on the high ILS conditions, where ASTRAL-I performed extremely poorly (<ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv234/-/DC1">Supplementary Fig. S2</ext-link>), but ASTRAL-II reduced the error by about 40% (<xref ref-type="table" rid="btv234-T1">Table 1</xref>). Results on Dataset II showed that the effect of adding extra bipartitions also depended on the number of taxa in expected ways (<xref ref-type="table" rid="btv234-T1">Table 1</xref>). With this fixed tree shape, ASTRAL-I was as accurate as ASTRAL-II for up to 200 taxa, but with 500 taxa or more, ASTRAL-II had a substantial advantage (as large as 9%). As expected, the advantage of ASTRAL-II was larger with few genes and reduced with more genes.
<table-wrap id="btv234-T1" position="float"><label>Table 1.</label><caption><p>Reductions in species tree error obtained by ASTRAL-II compared with ASTRAL-I</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th colspan="7" align="center" rowspan="1">Dataset I [200 taxa, varying tree shape (columns) and number of genes (rows)]</th></tr><tr><th rowspan="2" colspan="1"/><th colspan="3" align="center" rowspan="1">10e-6 (recent)</th><th colspan="3" align="center" rowspan="1">10e-7 (deep)</th></tr><tr><th rowspan="1" colspan="1">10 M</th><th rowspan="1" colspan="1">2 M</th><th rowspan="1" colspan="1">500 K</th><th rowspan="1" colspan="1">10 M</th><th rowspan="1" colspan="1">2 M</th><th rowspan="1" colspan="1">500 K</th></tr></thead><tbody align="left"><tr><td rowspan="1" colspan="1">50</td><td align="char" char="±" rowspan="1" colspan="1">0.2 ± 0.2</td><td align="char" char="±" rowspan="1" colspan="1">0.7 ± 0.3</td><td align="char" char="±" rowspan="1" colspan="1">37.9 ± 1.0</td><td align="char" char="±" rowspan="1" colspan="1">1.7 ± 0.6</td><td align="char" char="±" rowspan="1" colspan="1">10.1 ± 0.9</td><td align="char" char="±" rowspan="1" colspan="1">38.7 ± 0.9</td></tr><tr><td rowspan="1" colspan="1">200</td><td align="char" char="±" rowspan="1" colspan="1">0.0 ± 0.1</td><td align="char" char="±" rowspan="1" colspan="1">0.2 ± 0.1</td><td align="char" char="±" rowspan="1" colspan="1">41.0 ± 1.1</td><td align="char" char="±" rowspan="1" colspan="1">0.7 ± 0.3</td><td align="char" char="±" rowspan="1" colspan="1">7.4 ± 0.7</td><td align="char" char="±" rowspan="1" colspan="1">41.4 ± 1.0</td></tr><tr><td rowspan="1" colspan="1">1000</td><td align="char" char="±" rowspan="1" colspan="1">0.0 ± 0.0</td><td align="char" char="±" rowspan="1" colspan="1">0.2 ± 0.1</td><td align="char" char="±" rowspan="1" colspan="1">39.2 ± 1.2</td><td align="char" char="±" rowspan="1" colspan="1">0.0 ± 0.0</td><td align="char" char="±" rowspan="1" colspan="1">3.5 ± 0.7</td><td align="char" char="±" rowspan="1" colspan="1">41.4 ± 1.1</td></tr><tr><td colspan="7" align="center" rowspan="1"/></tr><tr align="center"><td colspan="7" rowspan="1">Dataset II [2M/1e-6 shape, varying the number of taxa (columns) and genes (rows)]</td></tr><tr><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">10</td><td align="char" char="±" rowspan="1" colspan="1">50</td><td align="char" char="±" rowspan="1" colspan="1">100</td><td align="char" char="±" rowspan="1" colspan="1">200</td><td align="char" char="±" rowspan="1" colspan="1">500</td><td align="char" char="±" rowspan="1" colspan="1">1000</td></tr><tr><td colspan="7" align="center" rowspan="1"/></tr><tr><td rowspan="1" colspan="1">50</td><td align="char" char="±" rowspan="1" colspan="1">0.3 ± 0.3</td><td align="char" char="±" rowspan="1" colspan="1">0.0 ± 0.1</td><td align="char" char="±" rowspan="1" colspan="1">0.3 ± 0.2</td><td align="char" char="±" rowspan="1" colspan="1">0.7 ± 0.3</td><td align="char" char="±" rowspan="1" colspan="1">6.0 ± 0.6</td><td align="char" char="±" rowspan="1" colspan="1">9.3 ± 0.6</td></tr><tr><td rowspan="1" colspan="1">200</td><td align="char" char="±" rowspan="1" colspan="1">0.0 ± 0.0</td><td align="char" char="±" rowspan="1" colspan="1">0.0 ± 0.0</td><td align="char" char="±" rowspan="1" colspan="1">0.0 ± 0.0</td><td align="char" char="±" rowspan="1" colspan="1">0.2 ± 0.09</td><td align="char" char="±" rowspan="1" colspan="1">3.9 ± 0.5</td><td align="char" char="±" rowspan="1" colspan="1">8.3 ± 0.5</td></tr><tr><td rowspan="1" colspan="1">1000</td><td align="char" char="±" rowspan="1" colspan="1">0.0 ± 0.0</td><td align="char" char="±" rowspan="1" colspan="1">0.1 ± 0.1</td><td align="char" char="±" rowspan="1" colspan="1">0.0 ± 0.0</td><td align="char" char="±" rowspan="1" colspan="1">0.2 ± 0.08</td><td align="char" char="±" rowspan="1" colspan="1">1.7 ± 0.4</td><td rowspan="1" colspan="1"/></tr></tbody></table><table-wrap-foot><fn id="btv234-TF1"><p>We report results using the difference in RF percentage; values above 0.0% indicate ASTRAL-II is more accurate.</p></fn></table-wrap-foot></table-wrap>
</p>
        <p>The improvements obtained by ASTRAL-II are due to additions to the search space. We therefore asked whether the heuristic approaches used to add bipartitions to set X are sufficient or improvements could be obtained by further expanding X. To answer this question, we tested the impact of adding all the bipartitions from the species tree to the set X and compared ASTRAL-II with and without these extra bipartitions (see <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv234/-/DC1">Supplementary Figs S2</ext-link> and <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv234/-/DC1">S3</ext-link>). We saw no significant differences between ASTRAL-II with and without these potentially new bipartitions (<italic>P</italic> = 0.77 according to a two-way analysis of variance test), indicating that the accuracy of ASTRAL-II is very unlikely to be improved further by expanding the search space.</p>
      </sec>
      <sec id="SEC5.1.2">
        <title>5.1.2 Running time</title>
        <p>With 200 taxa and lower levels of ILS, ASTRAL-I and ASTRAL-II had similar running times (<ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv234/-/DC1">Supplementary Fig. S2</ext-link>), but ASTRAL-II was faster with increased ILS (3 versus 7.5 h of median run time). Note that ASTRAL-II searches a larger tree space than ASTRAL-I. With small numbers of taxa, the two versions had close running times, but as the number of taxa increased, the running time of ASTRAL-II increased more slowly (<ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv234/-/DC1">Supplementary Fig. S3</ext-link>). For 500 taxa, ASTRAL-II was twice as fast as ASTRAL-I (a median of 5 versus 10 h), whereas ASTRAL-I did not complete on 1000 taxa and 1000 genes.</p>
      </sec>
    </sec>
    <sec id="SEC5.2">
      <title>5.2 RQ2: ASTRAL-II versus other coalescent methods</title>
      <p>We refer to ASTRAL-II as ASTRAL henceforth.</p>
      <p><bold>Completion within time constraints </bold>ASTRAL completed on all model conditions, MP-EST completed only on datasets with at most 100 taxa and NJst completed on all model conditions except for the condition with 1000 genes and 1000 taxa.</p>
      <p><bold>Dataset I</bold> ASTRAL was more accurate than NJst in all model conditions, except 1e-07/500 K where the two methods had identical accuracy (<xref ref-type="fig" rid="btv234-F2">Fig. 2</xref>). Overall, the differences between ASTRAL-II and NJst were statistically significant (<inline-formula><mml:math id="MM84"><mml:mrow><mml:mi>P</mml:mi><mml:mo>&lt;</mml:mo><mml:mn>1</mml:mn><mml:mi>e</mml:mi><mml:mo>−</mml:mo><mml:mn>05</mml:mn></mml:mrow></mml:math></inline-formula>), according to a two-way analysis of variance test, and the relative performance of the methods was significantly impacted by the speciation rate (<italic>P</italic> = 0.026) but not by the number of genes or tree length. ASTRAL was faster than NJst, in some cases by an order of magnitude and in other cases by smaller margins (<ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv234/-/DC1">Supplementary Fig. S4</ext-link>).
<fig id="btv234-F2" position="float"><label>Fig. 2.</label><caption><p><bold>Comparison of methods with respect to species tree topological accuracy.</bold> (Top) Two hundred taxa and varying tree shapes and number of genes. (Bottom) Varying number of taxa and genes and tree shaped fixed to 2 M/1e-6. ASTRAL-II is always at least as accurate as NJst and MP-EST</p></caption><graphic xlink:href="btv234f2p"/></fig>
</p>
      <p><bold>Dataset II</bold> On 10-taxon datasets, all methods had high accuracy (<ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv234/-/DC1">Supplementary Table S2</ext-link>). On 50- and 100-taxon datasets, MP-EST was able to finish, but it was the least accurate of all the methods. ASTRAL was more accurate than NJst for all conditions except for 50 taxa with 50 genes (<ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv234/-/DC1">Supplementary Table S2</ext-link>); however, differences were generally small when the number of taxa was 200 or less and more substantial with more taxa. Overall, differences between ASTRAL and NJst were significant (<italic>P</italic> = 0.0007) and were significantly impacted by the number of taxa (<italic>P</italic> = 0.0004) but not the number of genes. ASTRAL was also faster than NJst, especially with more genes and more taxa (<xref ref-type="fig" rid="btv234-F3">Fig. 3</xref>). For example, on 500 taxa and 1000 genes, ASTRAL typically finished in 2–10 h, whereas NJst required 12–30 h (<ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv234/-/DC1">Supplementary Fig. S5</ext-link>). MP-EST was by far the slowest method, but its running time was not impacted by the number of genes.
<fig id="btv234-F3" position="float"><label>Fig. 3.</label><caption><p><bold>Running time comparison with varying number of taxa and genes (Dataset II)</bold>. Average running time is shown for NJst and ASTRAL-II. Note that ASTRAL-II is much faster on large datasets</p></caption><graphic xlink:href="btv234f3p"/></fig>
</p>
    </sec>
    <sec id="SEC5.3">
      <title>5.3 RQ3: ASTRAL-II versus CA-ML</title>
      <sec id="SEC5.3.1">
        <title>5.3.1 Dataset I</title>
        <p>Interestingly, the relative accuracy of CA-ML and ASTRAL was significantly impacted by tree length (<inline-formula><mml:math id="MM85"><mml:mrow><mml:mi>P</mml:mi><mml:mo>&lt;</mml:mo><mml:mn>1</mml:mn><mml:mi>e</mml:mi><mml:mo>−</mml:mo><mml:mn>05</mml:mn></mml:mrow></mml:math></inline-formula>), speciation rate (<italic>P</italic> = 0.00004) and the number of genes (<inline-formula><mml:math id="MM86"><mml:mrow><mml:mi>P</mml:mi><mml:mo>&lt;</mml:mo><mml:mn>1</mml:mn><mml:mi>e</mml:mi><mml:mo>−</mml:mo><mml:mn>05</mml:mn></mml:mrow></mml:math></inline-formula>). With lower levels of ILS (10M and 2 M) and recent speciation, CA-ML and ASTRAL had close accuracy, but CA-ML tended to be better with more genes and ASTRAL was better with fewer genes (<ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv234/-/DC1">Supplementary Table S1</ext-link>, <xref ref-type="fig" rid="btv234-F2">Fig. 2</xref>). With deep speciation and lower ILS, CA-ML was substantially more accurate than ASTRAL, but increasing the number of genes reduced the gap. At the high ILS levels, ASTRAL was much more accurate than CA-ML for all number of genes and for both recent and deep speciation.</p>
      </sec>
      <sec id="SEC5.3.2">
        <title>5.3.2 Dataset II</title>
        <p>Overall, differences between ASTRAL and CA-ML were not significant (<italic>P</italic> = 0.2), but the relative accuracy seemed to be impacted by the number of genes (<italic>P</italic> = 0.06). Regardless of the number of taxa, which did not impact relative accuracy (<italic>P</italic> = 0.2), CA-ML was slightly more accurate with 1000 genes and ASTRAL was slightly more accurate with fewer genes (<ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv234/-/DC1">Supplementary Table S2</ext-link>, <xref ref-type="fig" rid="btv234-F2">Fig. 2</xref>).</p>
      </sec>
      <sec id="SEC5.3.3">
        <title>5.3.3 Running time</title>
        <p>We ran CA-ML and ASTRAL-II on different platforms and hence cannot make direct running time comparisons. Nevertheless, we provide our running time numbers to give a general idea. CA-ML using FastTree on 200-taxon model conditions with 1000 genes took roughly 2 h, whereas ASTRAL-II took roughly one hour to estimate the species tree and estimating gene trees also took about 1.5 h. In general, therefore, the running times of ASTRAL-II and CA-ML are relatively close on this dataset.</p>
      </sec>
    </sec>
    <sec id="SEC5.4">
      <title>5.4 RQ4: effect of gene tree error</title>
      <p>In RQ3, we observed that under some conditions, CA-ML was more accurate than ASTRAL, a pattern that we attribute to high levels of gene tree error present in our simulations. When true (simulated) gene trees are used instead of the estimated gene trees, the accuracy of ASTRAL is outstanding, regardless of the model condition (see <xref ref-type="fig" rid="btv234-F4">Fig. 4</xref> and <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv234/-/DC1">Supplementary Fig. S6</ext-link>), and ASTRAL is always more accurate than CA-ML. Thus, the fact that CA-ML is more accurate than ASTRAL under lower levels of ILS is related to estimation error in the input provided to ASTRAL.
<fig id="btv234-F4" position="float"><label>Fig. 4.</label><caption><p><bold>Comparison of ASTRAL-II run using estimated and true gene trees and CA-ML on Dataset I</bold> </p></caption><graphic xlink:href="btv234f4p"/></fig>
</p>
      <p>In our ASTRAL and NJst analyses, gene tree error had a positive correlation with species tree error (<ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv234/-/DC1">Supplementary Fig. S7</ext-link>), with correlation coefficients that were similar for ASTRAL and NJst. The error of CA-ML also correlated with gene tree error (obviously the relationship is indirect; for example, short alignments impact both CA-ML and gene tree error), but the correlation was weaker than the correlation observed for coalescent-based methods (<ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv234/-/DC1">Supplementary Fig. S8</ext-link>). Interestingly, the correlation between gene tree estimation error and species tree error was typically higher with fewer genes.</p>
      <p>To further investigate the impact of the gene tree error, we divided replicates of each model condition into three categories: average gene tree estimation error below 0.25 is low, between 0.25 and 0.4 is medium and above 0.4 is high. We plotted the species tree accuracy within each of these categories (see <xref ref-type="fig" rid="btv234-F5">Fig. 5</xref> for one model condition, but also see <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv234/-/DC1">Supplementary Figs S9</ext-link> and <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv234/-/DC1">S10</ext-link> for other model conditions). The relative performance of ASTRAL and NJst is typically unchanged across various categories of gene tree error, but increasing gene tree error tends to increase the magnitude of the difference between ASTRAL and NJst. Furthermore, MP-EST seemed to be more sensitive to gene tree error than either NJst or ASTRAL (<ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv234/-/DC1">Supplementary Fig. S10</ext-link>).
<fig id="btv234-F5" position="float"><label>Fig. 5.</label><caption><p><bold>Comparison of species tree accuracy with 200 taxa, divided into three categories of gene tree estimation error.</bold> Boxes show number of genes</p></caption><graphic xlink:href="btv234f5p"/></fig>
</p>
      <p>The relative performance of ASTRAL and CA-ML depended on gene tree error. For those model conditions where CA-ML was generally more accurate than ASTRAL (e.g. 2 M/1e-07), ASTRAL tended to outperform CA-ML on the replicates with low gene tree estimation error (<xref ref-type="fig" rid="btv234-F5">Fig. 5</xref>). Consistent with this observation, we noted that ASTRAL was impacted by gene tree error more than CA-ML (<ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv234/-/DC1">Supplementary Fig. S9</ext-link>).</p>
    </sec>
    <sec id="SEC5.5">
      <title>5.5 RQ5: collapsing low support branches</title>
      <p>ASTRAL-II can handle inputs with polytomies. Although we have not done bootstrapping to get reliable measures of support, we do get local SH-like branch support from FastTree-II. We collapsed low support branches (10%, 33% and 50%) and ran ASTRAL on the resulting unresolved gene trees. We measured the impact of contracting low support branches on the RF rate: the median delta RF (error before collapsing minus error after collapsing) is typically zero (<ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btv234/-/DC1">Supplementary Fig. S11</ext-link>), never above zero but in a few cases below zero (signifying that accuracy was improved in those few cases). However, these differences are not statistically significant (<italic>P</italic> = 0.36). Since this analysis was performed using SH-like branch support values instead of bootstrap support values (or other ways of estimating support values), further studies are needed.</p>
    </sec>
  </sec>
  <sec id="SEC6">
    <title>6 Biological results</title>
    <p>The evolution of angiosperms, and the placement of <italic>Amborella trichopoda Baill.</italic>, is one of the challenging questions in land plant evolution. One hypothesis recovered in some recent molecular studies (e.g. <xref rid="btv234-B3" ref-type="bibr">Drew <italic>et al.</italic> 2014</xref>; <xref rid="btv234-B18" ref-type="bibr">Qiu <italic>et al.</italic> 2000</xref>; <xref rid="btv234-B24" ref-type="bibr">Wickett <italic>et al.</italic> 2014</xref>; <xref rid="btv234-B26" ref-type="bibr">Zhang <italic>et al.</italic> 2012</xref>) is that <italic>A.</italic><italic>trichopoda Baill.</italic> is sister to the rest of angiosperms, followed by water lilies (i.e. Nymphaeales). In particular, a recent analysis of 104 plant species based on entire transcriptomes recovered this relationship both with concatenation and ASTRAL-I, using various perturbations of the dataset (<xref rid="btv234-B24" ref-type="bibr">Wickett <italic>et al.</italic>, 2014</xref>). A competing hypothesis is that <italic>Amborella</italic> is sister to water lilies, and this whole group is sister to other angiosperms (<xref rid="btv234-B3" ref-type="bibr">Drew <italic>et al.</italic>, 2014</xref>; <xref rid="btv234-B7" ref-type="bibr">Goremykin <italic>et al.</italic>, 2013</xref>). <xref rid="btv234-B25" ref-type="bibr">Xi <italic>et al.</italic> (2014)</xref> examined this question using a collection of 310 genes sampled from 42 angiosperms and 4 outgroups. They observed that CA-ML produced the first hypothesis and MP-EST produced the second hypothesis, and they argued that these differences are due to the fact that CA-ML does not model ILS, whereas MP-EST does.</p>
    <p>We obtained alignments for these 310 genes from <xref rid="btv234-B25" ref-type="bibr">Xi <italic>et al.</italic> (2014)</xref> and estimated gene trees using RAxML under GTR + Γ model with 200 replicates of bootstrapping and 10 rounds of ML (RAxML was used because running time was not an issue on this relatively small dataset). We ran MP-EST and ASTRAL and obtained two different trees (<xref ref-type="fig" rid="btv234-F6">Fig. 6</xref>). Reproducing <xref rid="btv234-B25" ref-type="bibr">Xi <italic>et al.</italic> (2014)</xref> results, MP-EST recovered the sister relationship of <italic>Amborella</italic> and Nymphaeales with 100% support. However, ASTRAL, just like CA-ML, recovers <italic>Amborella</italic> as sister to other angiosperms, with 75% support. Although the exact position of <italic>Amborella</italic> is debated, our analysis shows that the differences between CA-ML and MP-EST results cannot be simply attributed to the fact that CA-ML does not consider ILS.
<fig id="btv234-F6" position="float"><label>Fig. 6.</label><caption><p><bold>Comparison of species trees computed on the angiosperm dataset of</bold><xref rid="btv234-B25" ref-type="bibr">Xi <italic>et al.</italic> (2014)</xref>. MP-EST and ASTRAL-II differ in the placement of <italic>Amborella</italic>; the concatenation tree agrees with ASTRAL-II</p></caption><graphic xlink:href="btv234f6p"/></fig>
</p>
  </sec>
  <sec>
    <title>7 Discussion and conclusion</title>
    <p>Our wide-ranging simulation results show that ASTRAL-II, unlike the other methods we studied, can analyze datasets with up to 1000 taxa and 1000 genes within reasonable running times. However, future studies need to compare ASTRAL-II to divide-and-conquer approaches (e.g. <xref rid="btv234-B1" ref-type="bibr">Bayzid <italic>et al.</italic>, 2014</xref>; <xref rid="btv234-B27" ref-type="bibr">Zimmermann <italic>et al.</italic>, 2014</xref>) that enable slower coalescent-based methods to scale to large datasets. ASTRAL-II was more accurate than other coalescent-based methods and was more accurate than CA-ML, unless ILS levels were low and gene tree error was high. Although the angiosperm biological dataset we studied was relatively small (46 species), our simulations show that upcoming multi-gene datasets with large numbers of species can be accurately analyzed using ASTRAL-II.</p>
    <p>On the angiosperm dataset, ASTRAL recovered the relationship supported by CA-ML and a large number of recent studies, whereas MP-EST recovered an alternative topology, also supported by some previous analyses. There are several possible reasons for the differences between the two methods, including the possibility that rooting gene trees (required by MP-EST but not by ASTRAL) by <italic>Selaginella</italic> can be problematic for some genes or that the impact of the gene tree estimation error is different for the two methods. We also note that ASTRAL is a non-parametric method that does not estimate branch lengths, and it is possible that non-parametric methods are less sensitive to gene tree estimation error than parametric methods (like MP-EST).</p>
    <p>ASTRAL was more accurate than CA-ML, except when gene tree estimation error was high and ILS levels sufficiently low. These results suggest that CA-ML should not be rejected, even though it is not statistically consistent under the multi-species coalescent model. Conversely, proofs of consistency of standard summary methods assume gene trees estimated without error (<xref rid="btv234-B22" ref-type="bibr">Roch and Warnow, 2015</xref>), and this assumption limits the relevance of consistency results in practice. Improving gene tree estimation is crucial for coalescent-based species tree estimation, as observed in the literature (e.g. <xref rid="btv234-B14" ref-type="bibr">Mirarab <italic>et al.</italic> 2014b</xref>, <xref rid="btv234-B15" ref-type="bibr">c</xref>; <xref rid="btv234-B16" ref-type="bibr">Patel <italic>et al.</italic> 2013</xref>); however, the requirement to use recombination-free regions complicates this pursuit as recombination-free ‘c-genes’ can be very short, especially with increased numbers of taxa (<xref rid="btv234-B6" ref-type="bibr">Gatesy and Springer, 2014</xref>). Future studies need to study the impact of using shorter gene sequence alignments, and conversely the presence of recombination events within genes, used as input to coalescent-based species tree estimation methods.</p>
  </sec>
  <sec>
    <title>Acknowledgement</title>
    <p>We thank the anonymous reviewers for their helpful suggestions.</p>
  </sec>
  <sec>
    <title>Funding</title>
    <p>This work was supported by the <funding-source>National Science Foundation</funding-source> [<award-id>0733029</award-id>, <award-id>1461364</award-id>, and <award-id>1062335</award-id> (to T.W.)]; and by a <funding-source>Howard Hughes Medical Institute (HHMI)</funding-source> graduate student fellowship (to S.M.).</p>
    <p><italic>Conflict of Interest</italic>: none declared.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="PMC_1" content-type="local-data">
      <caption>
        <title>Supplementary Data</title>
      </caption>
      <media mimetype="text" mime-subtype="html" xlink:href="supp_31_12_i44__index.html"/>
      <media xlink:role="associated-file" mimetype="application" mime-subtype="pdf" xlink:href="supp_btv234_Mirarab_122_sup_1.pdf"/>
    </supplementary-material>
  </sec>
</body>
<back>
  <ref-list>
    <title>References</title>
    <ref id="btv234-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bayzid</surname><given-names>M.S.</given-names></name><etal/></person-group> (<year>2014</year>) 
<article-title>Disk covering methods improve phylogenomic analyses</article-title>. <source>BMC Genomics</source><italic>,</italic>
<volume>15</volume>(<issue>Suppl 6</issue>), <fpage>S7</fpage>.<pub-id pub-id-type="pmid">25572610</pub-id></mixed-citation>
    </ref>
    <ref id="btv234-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Degnan</surname><given-names>J.H.</given-names></name><name><surname>Rosenberg</surname><given-names>N.A.</given-names></name></person-group> (<year>2009</year>) 
<article-title>Gene tree discordance, phylogenetic inference and the multispecies coalescent</article-title>. <source>Trends Ecol. Evol.</source><italic>,</italic>
<volume>24</volume>, <fpage>332</fpage>–<lpage>340</lpage>.<pub-id pub-id-type="pmid">19307040</pub-id></mixed-citation>
    </ref>
    <ref id="btv234-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Drew</surname><given-names>B.T.</given-names></name><etal/></person-group> (<year>2014</year>) 
<article-title>Another look at the root of the angiosperms reveals a familiar tale</article-title>. <source>Syst. Biol.</source><italic>,</italic>
<volume>63</volume>, <fpage>368</fpage>–<lpage>382</lpage>.<pub-id pub-id-type="pmid">24391149</pub-id></mixed-citation>
    </ref>
    <ref id="btv234-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Edwards</surname><given-names>S.V.</given-names></name></person-group> (<year>2009</year>) 
<article-title>Is a new and general theory of molecular systematics emerging?</article-title>
<source>Evolution</source><italic>,</italic>
<volume>63</volume>, <fpage>1</fpage>–<lpage>19</lpage>.<pub-id pub-id-type="pmid">19146594</pub-id></mixed-citation>
    </ref>
    <ref id="btv234-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fletcher</surname><given-names>W.</given-names></name><name><surname>Yang</surname><given-names>Z.</given-names></name></person-group> (<year>2009</year>) 
<article-title>Indelible: a flexible simulator of biological sequence evolution</article-title>. <source>Mol. Biol. Evol.</source><italic>,</italic>
<volume>26</volume>, <fpage>1879</fpage>–<lpage>1888</lpage>.<pub-id pub-id-type="pmid">19423664</pub-id></mixed-citation>
    </ref>
    <ref id="btv234-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gatesy</surname><given-names>J.</given-names></name><name><surname>Springer</surname><given-names>M.</given-names></name></person-group> (<year>2014</year>) 
<article-title>Phylogenetic analysis at deep timescales: unreliable gene trees, bypassed hidden support, and the coalescence/concatalescence conundrum</article-title>. <source>Mol. Phylogenet. Evol.</source><italic>,</italic>
<volume>80</volume>, <fpage>231</fpage>–<lpage>266</lpage>.<pub-id pub-id-type="pmid">25152276</pub-id></mixed-citation>
    </ref>
    <ref id="btv234-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Goremykin</surname><given-names>V.V.</given-names></name><etal/></person-group> (<year>2013</year>) 
<article-title>The evolutionary root of flowering plants</article-title>. <source>Syst. Biol.</source><italic>,</italic>
<volume>62</volume>, <fpage>50</fpage>–<lpage>61</lpage>.<pub-id pub-id-type="pmid">22851550</pub-id></mixed-citation>
    </ref>
    <ref id="btv234-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Heled</surname><given-names>J.</given-names></name><name><surname>Drummond</surname><given-names>A.J.</given-names></name></person-group> (<year>2010</year>) 
<article-title>Bayesian inference of species trees from multilocus data</article-title>. <source>Mol. Biol. Evol.</source><italic>,</italic>
<volume>27</volume>, <fpage>570</fpage>–<lpage>580</lpage>.<pub-id pub-id-type="pmid">19906793</pub-id></mixed-citation>
    </ref>
    <ref id="btv234-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kubatko</surname><given-names>L.S.</given-names></name><name><surname>Degnan</surname><given-names>J.</given-names></name></person-group> (<year>2007</year>) 
<article-title>Inconsistency of phylogenetic estimates from concatenated data under coalescence</article-title>. <source>Syst. Biol.</source><italic>,</italic>
<volume>56</volume>, <fpage>17</fpage>–<lpage>24</lpage>.<pub-id pub-id-type="pmid">17366134</pub-id></mixed-citation>
    </ref>
    <ref id="btv234-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Liu</surname><given-names>K.</given-names></name><etal/></person-group> (<year>2011</year>) 
<article-title>RAxML and FastTree: comparing two methods for large-scale maximum likelihood phylogeny estimation</article-title>. <source>PLoS One</source><italic>,</italic>
<volume>6</volume>, <fpage>e27731</fpage>.<pub-id pub-id-type="pmid">22132132</pub-id></mixed-citation>
    </ref>
    <ref id="btv234-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Liu</surname><given-names>L.</given-names></name><etal/></person-group> (<year>2010</year>) 
<article-title>A maximum pseudo-likelihood approach for estimating species trees under the coalescent model</article-title>. <source>BMC Evol. Biol.</source><italic>,</italic>
<volume>10</volume>, <fpage>302</fpage>.<pub-id pub-id-type="pmid">20937096</pub-id></mixed-citation>
    </ref>
    <ref id="btv234-B28">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Liu</surname><given-names>L.</given-names></name><name><surname>Yu</surname><given-names>L.</given-names></name></person-group> (<year>2011</year>) 
<article-title>Estimating Species Trees from Unrooted Gene Trees</article-title>. <source>Syst. Biol.</source><italic>,</italic>
<volume>60</volume>, <fpage>661</fpage>–<lpage>667</lpage>.<pub-id pub-id-type="pmid">21447481</pub-id></mixed-citation>
    </ref>
    <ref id="btv234-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Maddison</surname><given-names>W.</given-names></name></person-group> (<year>1997</year>) 
<article-title>Gene trees in species trees</article-title>. <source>Syst. Biol.</source><italic>,</italic>
<volume>46</volume>, <fpage>523</fpage>–<lpage>536</lpage>.</mixed-citation>
    </ref>
    <ref id="btv234-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mirarab</surname><given-names>S.</given-names></name><etal/></person-group> (<year>2014a</year>) 
<article-title>ASTRAL: genome-scale coalescent-based species tree estimation</article-title>. <source>Bioinformatics</source><italic>,</italic>
<volume>30</volume>, <fpage>i541</fpage>–<lpage>i548</lpage>.<pub-id pub-id-type="pmid">25161245</pub-id></mixed-citation>
    </ref>
    <ref id="btv234-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mirarab</surname><given-names>S.</given-names></name><etal/></person-group> (<year>2014b</year>) 
<article-title>Evaluating summary methods for multi-locus species tree estimation in the presence of incomplete lineage sorting</article-title>. <source>Syst. Biol.</source><italic>,</italic>
<volume>pii</volume>, <comment>DOI: 10.1093/sysbio/syu063</comment>.</mixed-citation>
    </ref>
    <ref id="btv234-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mirarab</surname><given-names>S.</given-names></name><etal/></person-group> (<year>2014c</year>) 
<article-title>Statistical binning enables an accurate coalescent-based estimation of the avian tree</article-title>. <source>Science</source><italic>,</italic>
<volume>346</volume>, <fpage>1250463</fpage>.<pub-id pub-id-type="pmid">25504728</pub-id></mixed-citation>
    </ref>
    <ref id="btv234-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Patel</surname><given-names>S.</given-names></name><etal/></person-group> (<year>2013</year>) 
<article-title>Error in phylogenetic estimation for bushes in the tree of life</article-title>. <source>J. Phylogenet. Evol. Biol.</source><italic>,</italic>
<volume>1</volume>, <fpage>110</fpage>.</mixed-citation>
    </ref>
    <ref id="btv234-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Price</surname><given-names>M.N.</given-names></name><etal/></person-group> (<year>2010</year>) 
<article-title>FastTree-2 approximately maximum-likelihood trees for large alignments</article-title>. <source>PLoS One</source><italic>,</italic>
<volume>5</volume>, <fpage>e9490</fpage>.<pub-id pub-id-type="pmid">20224823</pub-id></mixed-citation>
    </ref>
    <ref id="btv234-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Qiu</surname><given-names>Y.</given-names></name><etal/></person-group> (<year>2000</year>) 
<article-title>Phylogeny of basal angiosperms: analyses of five genes from three genomes</article-title>. <source>Int. J. Plant Sci.</source><italic>,</italic>
<volume>161</volume>, <fpage>S3</fpage>–<lpage>S27</lpage>.</mixed-citation>
    </ref>
    <ref id="btv234-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rannala</surname><given-names>B.</given-names></name><name><surname>Yang</surname><given-names>Z.</given-names></name></person-group> (<year>2003</year>) 
<article-title>Bayes estimation of species divergence times and ancestral population sizes using DNA sequences from multiple loci</article-title>. <source>Genetics</source><italic>,</italic>
<volume>164</volume>, <fpage>1645</fpage>–<lpage>1656</lpage>.<pub-id pub-id-type="pmid">12930768</pub-id></mixed-citation>
    </ref>
    <ref id="btv234-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Robinson</surname><given-names>D.</given-names></name><name><surname>Foulds</surname><given-names>L.</given-names></name></person-group> (<year>1981</year>) 
<article-title>Comparison of phylogenetic trees</article-title>. <source>Math. Biosci.</source><italic>,</italic>
<volume>53</volume>, <fpage>131</fpage>–<lpage>147</lpage>.</mixed-citation>
    </ref>
    <ref id="btv234-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Roch</surname><given-names>S.</given-names></name><name><surname>Steel</surname><given-names>M.</given-names></name></person-group> (<year>2014</year>) 
<article-title>Likelihood-based tree reconstruction on a concatenation of aligned sequence data sets can be statistically inconsistent</article-title>. <source>Theor. Popul. Biol.</source><italic>,</italic>
<volume>100</volume>, <fpage>56</fpage>–<lpage>62</lpage>.<pub-id pub-id-type="pmid">25545843</pub-id></mixed-citation>
    </ref>
    <ref id="btv234-B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Roch</surname><given-names>S.</given-names></name><name><surname>Warnow</surname><given-names>T.</given-names></name></person-group> (<year>2015</year>) 
<article-title>On the robustness to gene tree estimation error (or lack thereof) of coalescent-based species tree methods</article-title>. <source>Syst. Biol.</source><italic>,</italic>
<volume>pii</volume>, <fpage>syv016</fpage>.<pub-id pub-id-type="pmid">25813358</pub-id></mixed-citation>
    </ref>
    <ref id="btv234-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Stamatakis</surname><given-names>A.</given-names></name></person-group> (<year>2014</year>) 
<article-title>RAxML Version 8: A Tool for Phylogenetic Analysis and Post-Analysis of Large Phylogenies</article-title>. <source>Bioinformatics</source>, <volume>30</volume>, <fpage>1312</fpage>–<lpage>1313</lpage>.<pub-id pub-id-type="pmid">24451623</pub-id></mixed-citation>
    </ref>
    <ref id="btv234-B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wickett</surname><given-names>N.J.</given-names></name><etal/></person-group> (<year>2014</year>) 
<article-title>Phylotranscriptomic analysis of the origin and early diversification of land plants</article-title>. <source>Proc. Natl. Acad. Sci. USA</source><italic>,</italic>
<volume>111</volume>, <fpage>E4859</fpage>–<lpage>E4868</lpage>.<pub-id pub-id-type="pmid">25355905</pub-id></mixed-citation>
    </ref>
    <ref id="btv234-B25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Xi</surname><given-names>Z.</given-names></name><etal/></person-group> (<year>2014</year>) 
<article-title>Coalescent versus concatenation methods and the placement of <italic>Amborella</italic> as sister to water lilies</article-title>. <source>Syst. Biol.</source><italic>,</italic>
<volume>63</volume>, <fpage>919</fpage>–<lpage>932</lpage>.<pub-id pub-id-type="pmid">25077515</pub-id></mixed-citation>
    </ref>
    <ref id="btv234-B26">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhang</surname><given-names>N.</given-names></name><etal/></person-group> (<year>2012</year>) 
<article-title>Highly conserved low-copy nuclear genes as effective markers for phylogenetic analyses in angiosperms</article-title>. <source>New Phytol.</source><italic>,</italic>
<volume>195</volume>, <fpage>923</fpage>–<lpage>937</lpage>.<pub-id pub-id-type="pmid">22783877</pub-id></mixed-citation>
    </ref>
    <ref id="btv234-B27">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zimmermann</surname><given-names>T.</given-names></name><etal/></person-group> (<year>2014</year>) 
<article-title>BBCA: improving the scalability of *BEAST using random binning</article-title>. <source>BMC Genomics</source><italic>,</italic>
<volume>15</volume>(<issue>Suppl 6</issue>), <fpage>S11</fpage>.<pub-id pub-id-type="pmid">25572469</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

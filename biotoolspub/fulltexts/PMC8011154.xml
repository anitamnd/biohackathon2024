<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Genome Biol</journal-id>
    <journal-id journal-id-type="iso-abbrev">Genome Biol</journal-id>
    <journal-title-group>
      <journal-title>Genome Biology</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1474-7596</issn>
    <issn pub-type="epub">1474-760X</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">8011154</article-id>
    <article-id pub-id-type="publisher-id">2282</article-id>
    <article-id pub-id-type="doi">10.1186/s13059-021-02282-6</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Method</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Homopolish: a method for the removal of systematic errors in nanopore sequencing by homologous polishing</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes" equal-contrib="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0001-9253-2394</contrib-id>
        <name>
          <surname>Huang</surname>
          <given-names>Yao-Ting</given-names>
        </name>
        <address>
          <email>ythuang@cs.ccu.edu.tw</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author" equal-contrib="yes">
        <name>
          <surname>Liu</surname>
          <given-names>Po-Yu</given-names>
        </name>
        <xref ref-type="aff" rid="Aff2">2</xref>
        <xref ref-type="aff" rid="Aff3">3</xref>
        <xref ref-type="aff" rid="Aff4">4</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Shih</surname>
          <given-names>Pei-Wen</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="GRID">grid.412047.4</institution-id><institution-id institution-id-type="ISNI">0000 0004 0532 3650</institution-id><institution>Department of Computer Science and Information Engineering, </institution><institution>National Chung Cheng University, </institution></institution-wrap>Chiayi, Taiwan </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="GRID">grid.410764.0</institution-id><institution-id institution-id-type="ISNI">0000 0004 0573 0731</institution-id><institution>Department of Infectious Diseases, </institution><institution>Taichung Veterans General Hospital, </institution></institution-wrap>Taichung, Taiwan </aff>
      <aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="GRID">grid.260542.7</institution-id><institution-id institution-id-type="ISNI">0000 0004 0532 3749</institution-id><institution>Rong Hsing Research Center for Translational Medicine, </institution><institution>National Chung Hsing University, </institution></institution-wrap>Taichung, Taiwan </aff>
      <aff id="Aff4"><label>4</label><institution-wrap><institution-id institution-id-type="GRID">grid.260542.7</institution-id><institution-id institution-id-type="ISNI">0000 0004 0532 3749</institution-id><institution>Ph.D. Program in Translational Medicine, </institution><institution>National Chung Hsing University, </institution></institution-wrap>Taichung, Taiwan </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>31</day>
      <month>3</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>31</day>
      <month>3</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2021</year>
    </pub-date>
    <volume>22</volume>
    <elocation-id>95</elocation-id>
    <history>
      <date date-type="received">
        <day>20</day>
        <month>9</month>
        <year>2020</year>
      </date>
      <date date-type="accepted">
        <day>29</day>
        <month>1</month>
        <year>2021</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2021</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article’s Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article’s Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <p id="Par1">Nanopore sequencing has been widely used for the reconstruction of microbial genomes. Owing to higher error rates, errors on the genome are corrected via neural networks trained by Nanopore reads. However, the systematic errors usually remain uncorrected. This paper designs a model that is trained by homologous sequences for the correction of Nanopore systematic errors. The developed program, Homopolish, outperforms Medaka and HELEN in bacteria, viruses, fungi, and metagenomic datasets. When combined with Medaka/HELEN, the genome quality can exceed Q50 on R9.4 flow cells. We show that Nanopore-only sequencing can produce high-quality microbial genomes sufficient for downstream analysis.</p>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at (10.1186/s13059-021-02282-6).</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Genome polishing</kwd>
      <kwd>Nanopore sequencing</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100004663</institution-id>
            <institution>Ministry of Science and Technology, Taiwan</institution>
          </institution-wrap>
        </funding-source>
        <award-id>109-2221-E-194 -038 -MY3</award-id>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100004663</institution-id>
            <institution>Ministry of Science and Technology, Taiwan</institution>
          </institution-wrap>
        </funding-source>
        <award-id>109-2314-B-075A-009</award-id>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100010101</institution-id>
            <institution>Taichung Veterans General Hospital</institution>
          </institution-wrap>
        </funding-source>
        <award-id>TCVGH-1103901C</award-id>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2021</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p>Third-generation long-read sequencing is an essential technology for the reconstruction of complete genomes in many species within the biosphere. Oxford Nanopore Technology (ONT) is one of the major providers in third-generation sequencing, which is being used for the telomere-to-telomere reconstruction of the human genome [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR2">2</xref>]. Although the ultra-long reads of ONT have demonstrated their power in assembly contiguity through large and complex repeat regions, their assembly accuracy (∼ 85–92%) has been criticized when compared with Illumina or PacBio High-Fidelity (HiFi) sequencing (∼ 99%), owing to the omission of important protein-coding genes [<xref ref-type="bibr" rid="CR3">3</xref>]. As a consequence, hybrid Illumina/Nanopore sequencing and assembly are required for producing a high-quality genome which possesses both satisfactory contiguity and accuracy [<xref ref-type="bibr" rid="CR4">4</xref>].</p>
    <p>The accuracy of Nanopore sequencing has improved year by year thanks to new basecalling algorithms (e.g., from Albacore, Guppy, to Bonito) and flow cells (e.g., from R9.4 to R10.3). For instance, the production basecaller (Guppy v3.6) has claimed a 1–2% increase in accuracy (∼ 97%) over its previous version. However, the genome quality of Nanopore-only sequencing is far from satisfactory owing to a substantial number of systematic errors. Consequently, all the long-read assemblers (e.g., Canu, miniasm, Flye, Shasta) require a polishing stage for further improving the genome quality [<xref ref-type="bibr" rid="CR5">5</xref>–<xref ref-type="bibr" rid="CR8">8</xref>]. At the beginning, signal-based polishing (e.g., Nanopolish) was adopted, whereas potential erroneous loci are re-basecalled from raw signals [<xref ref-type="bibr" rid="CR9">9</xref>]. However, this method is time-consuming and disk-demanding for both the processing and storing of a huge amount of signals. Currently, read-based polishing has become mainstream as only reads rather than signals are required. Thanks to the advances in combinatorial and deep learning algorithms, these programs are not only faster, but their accuracy is also higher than signal-based approaches. Below, we focus on two state-of-the-art read-based polishing pipelines: Racon/Medaka and MarginPolish/HELEN.</p>
    <p>Racon is one of the most popular polishing programs [<xref ref-type="bibr" rid="CR10">10</xref>]. It first carefully selects high-quality parts of the reads, which are used for polishing the genome via partial order alignment (POA) with vectorization. Although many errors are corrected by Racon, a substantial amount of systematic errors are remaining in the genome because the correct allele is a minority at these loci (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S1). As a consequence, Oxford Nanopore Inc. developed Medaka, which is based upon a bidirectional long-short-term memory (LSTM) trained for erasing systematic errors uncorrected by Racon. To date, polishing first by Racon and subsequently followed up by Medaka is the officially recommended protocol (i.e., Pomoxis) for genomes assembled solely from Nanopore sequencing.</p>
    <p>Recently, a new polishing pipeline named MarginPolish/HELEN has drawn attention by displaying competitive accuracy when compared with the Racon/Medaka pipeline [<xref ref-type="bibr" rid="CR8">8</xref>]. MarginPolish uses a hidden Markov model to collect alignment statistics and then generates a weighted POA graph for consumption by HELEN. Subsequently, HELEN incorporates a multi-task recurrent neural network (RNN) that utilizes both the contextual genomic features and POA weights to predict with high accuracy a nucleotide base and run length for each genomic position.</p>
    <p>However, these polishing protocols still fail to guarantee that a high-quality genome can be produced. In reality, only a ∼ Q30 (99.9%) consensus accuracy can be reliably obtained, implying that quite a few genes would be missed in downstream analysis [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR11">11</xref>]. This unsatisfactory quality is partly due to species-specific DNA modifications. Theoretically, these errors could be avoided by training a basecaller specific for each species (e.g., Taiyaki) [<xref ref-type="bibr" rid="CR11">11</xref>]. But in a practical sense, it is infeasible to train thousands of models for all the species in the biosphere. In metagenomic sequencing, training of a basecaller for a specific species is not an option. We observed that systematic errors are often uncorrected by existing polished tools, which are mainly indel errors in homopolymers and lead to reading frame shifts in protein-coding genes. These systematic errors, though difficult to be fixed solely from reads, can be easily corrected via the homologous sequences extracted from closely related genomes (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S2). Consequently, existing polishing models can be further improved according to the degree of conservation within the homologous regions.</p>
    <p>This paper develops a novel polishing tool (named Homopolish), which is based upon a support vector machine (SVM) trained for distinguishing between sequencing errors and strain variations using homologous sequences. Due to its carefully engineered features, the results indicate that Homopolish outperforms the state-of-the-art Medaka and HELEN pipelines over a variety of microbial genomes, including metagenomic, bacterial, viral, and fungal genomes.</p>
  </sec>
  <sec id="Sec2" sec-type="results">
    <title>Results</title>
    <p>Homopolish is based on an SVM trained for distinguishing Nanopore systematic errors (indels in particular) from interstrain variations according to the degree of conservation among homologs (see Fig. <xref rid="Fig1" ref-type="fig">1</xref> and the “<xref rid="Sec13" ref-type="sec">Methods</xref>” section). The homologs are extracted from closely related genomes and mapped onto the draft genome. A set of carefully engineered features are then generated from the homologous alignments for classification by the SVM (i.e., errors correction or variation retention).
<fig id="Fig1"><label>Fig. 1</label><caption><p>Illustration of Homopolish workflow. Homopolish retrieves closely related genomes by screening MinHash sketches of NCBI RefSeq microbial genomes. Homologs within these genomes were extracted by genome alignments. An SVM was trained for the removal of errors and retention of variations by mining features from the homologous pileup</p></caption><graphic xlink:href="13059_2021_2282_Fig1_HTML" id="MO1"/></fig></p>
    <p>Herein, we compare Homopolish with two state-of-the-art polishing pipelines (Racon/Medaka and MarginPolish/HELEN) [<xref ref-type="bibr" rid="CR8">8</xref>, <xref ref-type="bibr" rid="CR10">10</xref>]. These programs are evaluated using public and in-house sequenced metagenomic/isolate datasets, including bacteria, virus, and fungi (Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Tables S1-S3, see the “<xref rid="Sec13" ref-type="sec">Methods</xref>” section). The Nanopore reads of all datasets are first assembled into draft genomes using Flye or MetaFlye (Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Tables S4-S6) [<xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR12">12</xref>]. These draft genomes are then first corrected by either Racon or MarginPolish for the removal of random sequencing errors. Subsequently, the remaining systematic errors are polished by Medaka, HELEN, and Homopolish. The accuracy of the polished genome is measured by (median) <italic>Q</italic> scores, number of mismatches, number of insertions, and number of deletions calculated via fastmer [<xref ref-type="bibr" rid="CR13">13</xref>].</p>
    <sec id="Sec3">
      <title>Comparison of genome quality on R9.4 metagenomic datasets</title>
      <p>We first compare Medaka over Racon, Homopolish (R) over Racon, HELEN over MarginPolish, and Homopolish (M) over MarginPolish through the use of a metagenomic dataset (Zymo Microbial Community Standard) sequenced by R9.4 flow cells [<xref ref-type="bibr" rid="CR14">14</xref>]. Figure <xref rid="Fig2" ref-type="fig">2</xref> lists the <italic>Q</italic> scores of all programs regarding seven bacteria within the metagenomic sample, with the numbers of insertions, deletions, and mismatches being found in Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Table S7. Homopolish (R) and Homopolish (M) (∼ Q38–Q50) outperform Medaka (∼ Q36–38) and HELEN (∼ Q37–Q46) in most bacteria. Homopolish (M) achieves Q50 (99.999%) in <italic>Enterococcus faecalis</italic>, <italic>Pseudomonas aeruginosa</italic>, and <italic>Salmonella enterica</italic>. The only exception is <italic>Bacillus subtilis</italic> (Q36.78 for Homopolish and Q37.21 for Medaka), which is due to mismatches uncorrected by Homopolish, although indels are greatly reduced (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S3). In general, systematic errors are greatly reduced by Medaka, HELEN, and Homopolish in comparison with those removed by Racon and MarginPolish. Moreover, the results based upon MarginPolish (i.e., HELEN and Homopolish (M)) are superior to those based upon Racon (i.e., Medaka and Homopolish (R)).
<fig id="Fig2"><label>Fig. 2</label><caption><p>Comparison of genome quality on the R9.4 metagenomic dataset. Comparison of genome quality (<italic>Q</italic> score) polished by Racon, Medaka, Homopolish (R), MarginPolish, HELEN, and Homopolish (M) on the metagenomic dataset from Zymo Microbial Community Standard. Medaka and Homopolish (R) are run after Racon. HELEN and Homopolish (M) are invoked after MarginPolish. Homopolish (M) and Homopolish (R) achieve the highest accuracy in most bacteria</p></caption><graphic xlink:href="13059_2021_2282_Fig2_HTML" id="MO2"/></fig></p>
      <p>As mismatch errors are not corrected by Homopolish, Homopolish could in principle achieve even higher accuracy when combined with Medaka or HELEN. Figure <xref rid="Fig3" ref-type="fig">3</xref> plots the median <italic>Q</italic> scores of invoking Homopolish after Medaka and HELEN polishing. The accuracy of Medaka and HELEN is both further improved by Homopolish (Q40–Q90). For instance, Homopolish after Medaka now reaches Q50 on <italic>S. enterica</italic> and exceeds Q40 for most bacteria. In general, Homopolish with HELEN (Q41–Q90) outperforms that with Medaka (Q39–Q50). In particular, Homopolish after HELEN achieves Q90 on <italic>P. aeruginosa</italic> and Q50 on both <italic>E. faecalis</italic> and <italic>S. enterica</italic>.
<fig id="Fig3"><label>Fig. 3</label><caption><p>Genome quality of combining Homopolish with Medaka or with HELEN in the metagenomic dataset. Comparison of genome quality (<italic>Q</italic> score) polished by Medaka, Medaka+Homopolish, HELEN, and HELEN+Homopolish on the metagenomic dataset. Medaka and HELEN can be both further improved by Homopolish</p></caption><graphic xlink:href="13059_2021_2282_Fig3_HTML" id="MO3"/></fig></p>
      <p>Table <xref rid="Tab1" ref-type="table">1</xref> lists the numbers of mismatches, insertions, and deletions of the <italic>P. aeruginosa</italic> genome polished by all programs, whereas those of the other six bacteria can be found in Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Table S7. The quality of the draft genome (assembled and polished by Flye) is only approximately Q26, and the errors are dominated by 14,394 insertions. Racon removed quite a few insertion errors at the cost of producing many false deletion errors (from 439 up to 2417). Medaka corrected most of the deletion errors produced by Racon (from 2417 down to 324), as well as a few mismatches (from 622 to 476). Homopolish significantly erased most insertion and deletion errors (from 538 and 2417 down to 24 and 128, respectively) left by Racon. These phenomena are largely the same when Homopolish is compared with HELEN over MarginPolish. HELEN is superior at correcting mismatch errors and outperforms Medaka in all metrics. Again, Homopolish cleans the majority of indel errors left by MarginPolish. When Homopolish is combined with either Medaka or HELEN, the genome quality can be further elevated to Q50 and Q90, respectively, because both mismatch and indel errors are significantly removed by each program. The advantage of combining Homopolish with either Medaka or HELEN can also be seen in other bacteria (Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Table S7).
<table-wrap id="Tab1"><label>Table 1</label><caption><p><italic>Q</italic> scores and numbers of mismatch, insertion, and deletion errors of <italic>P. aeruginosa</italic> in the metagenomic dataset</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Methods</th><th align="left">Avg. <italic>Q</italic> score</th><th align="left">Median <italic>Q</italic> score</th><th align="left">Mismatches</th><th align="left">Insertions</th><th align="left">Deletions</th></tr></thead><tbody><tr><td align="justify">Flye</td><td align="left">26.39</td><td align="left">26.5</td><td align="left">738</td><td align="left">14394</td><td align="left">439</td></tr><tr><td align="justify">Racon 4x</td><td align="left">32.78</td><td align="left">33.19</td><td align="left">622</td><td align="left">538</td><td align="left">2417</td></tr><tr><td align="justify">Racon 4x + Medaka</td><td align="left">36.54</td><td align="left">37.96</td><td align="left"><bold>476</bold></td><td align="left">704</td><td align="left">324</td></tr><tr><td align="justify">Racon 4x + Hompolish</td><td align="left"><bold>39.43</bold></td><td align="left"><bold>43.01</bold></td><td align="left">622</td><td align="left"><bold>24</bold></td><td align="left"><bold>128</bold></td></tr><tr><td align="justify">MarginPolish</td><td align="left">34.93</td><td align="left">35.85</td><td align="left">449</td><td align="left">1096</td><td align="left">637</td></tr><tr><td align="justify">MarginPolish + HELEN</td><td align="left"><bold>41.48</bold></td><td align="left">46.99</td><td align="left"><bold>149</bold></td><td align="left">78</td><td align="left">256</td></tr><tr><td align="justify">MarginPolish + Homopolish</td><td align="left">40.74</td><td align="left"><bold>50</bold></td><td align="left">440</td><td align="left"><bold>7</bold></td><td align="left"><bold>126</bold></td></tr><tr><td align="justify">Racon 4x + Medaka + Homopolish</td><td align="left">40.55</td><td align="left">46.99</td><td align="left">474</td><td align="left"><bold>4</bold></td><td align="left"><bold>120</bold></td></tr><tr><td align="justify">MarginPolish + HELEN + Homopolish</td><td align="left"><bold>42.81</bold></td><td align="left"><bold>90</bold></td><td align="left"><bold>205</bold></td><td align="left">5</td><td align="left">146</td></tr></tbody></table></table-wrap></p>
    </sec>
    <sec id="Sec4">
      <title>Comparison of polishing accuracy on bacterial isolates</title>
      <p>Next, we compared these programs over a set of bacterial isolates sequenced at an earlier stage (see the “<xref rid="Sec13" ref-type="sec">Methods</xref>” section). These data were mainly sequenced prior to 2018 and basecalled by Albacore and/or early Guppy basecaller, which exhibit a lower quality when compared with the previous metagenomic dataset (called by Guppy 2.2). Theoretically, old sequencing data can be re-basecalled using new algorithms (e.g., Guppy 4.0 or Bonito). But for practical purposes, particularly for labs outsourcing the sequencing and assembly, this is very troublesome as re-basecalling is computationally demanding without GPU. We show that Homopolish can improve the quality of Nanopore-only genomes produced by an old basecaller (e.g., Albacore) without the need of re-basecalling. Figure <xref rid="Fig4" ref-type="fig">4</xref> plots the <italic>Q</italic> scores of all programs across seven isolates. Similarly, Homopolish (Q26–Q33) outperforms Medaka with Racon (Q23–Q29) in nearly all datasets except for <italic>Klebsiella pneumoniae</italic> in which mismatches (not corrected by Homopolish) are the major error source (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S4). In comparison with HELEN over MarginPolish (Q20–Q27), Homopolish (M) also demonstrates superior accuracy (Q26–Q37) across all isolates. Unexpectedly, the accuracy of HELEN is not only lower than Medaka but also lower than its preprocessor MarginPolish in most datasets (i.e., <italic>Escherichia coli</italic>, <italic>K. pneumoniae</italic>, <italic>Elizabethkingia anophelis</italic>, and <italic>Shewanella algae</italic>), which conflicts with the previous metagenomic results. We hypothesize that HELEN may overfit the previous metagenomic dataset since the majority of its training data come from the same source (ZymoBIOMICS) [<xref ref-type="bibr" rid="CR14">14</xref>].
<fig id="Fig4"><label>Fig. 4</label><caption><p>Comparison of genome quality on the R9.4 isolate dataset. Comparison of genome quality (<italic>Q</italic> score) polished by Racon, Medaka, Homopolish (R), MarginPolish, HELEN, and Homopolish (M) on seven bacterial isolates. Medaka and Homopolish (R) are run after Racon. HELEN and Homopolish (M) are invoked after MarginPolish</p></caption><graphic xlink:href="13059_2021_2282_Fig4_HTML" id="MO4"/></fig></p>
      <p>Similarly, we have evaluated whether Homopolish can achieve even higher accuracy when combined with either Medaka or HELEN over these isolates. Figure <xref rid="Fig5" ref-type="fig">5</xref> illustrates the <italic>Q</italic> scores of Homopolish run after Medaka or HELEN correction. When combined with Medaka, Homopolish obtains a much higher accuracy (Q29–Q38), significantly better than those of original Medaka (Q23–Q29). Although Homopolish with HELEN also improves accuracy from Q20–Q27 to Q24–Q35, it is inferior to that with Medaka. Table <xref rid="Tab2" ref-type="table">2</xref> lists the <italic>Q</italic> scores, number of mismatches, insertions, and deletions polished by each program of <italic>E. anophelis</italic><italic>SUE</italic>, while those of other isolates can be found in Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Table S8. The initial genome quality of Flye is low, containing 18,718 insertions and 5039 deletions. Although Racon, Medaka, MarginPolish, and HELEN reduce the insertion errors, the number of deletion errors all increase (i.e., from 5039 to 7891–11,753), implying quite a few false-positive corrections. On the contrary, only Homopolish does not introduce more false deletions into the draft genome (i.e., from 5039 to 435–443). In particular, HELEN performs the worst due to increasing indel errors from its preprocessor MarginPolish in most isolates (Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Table S8). Overall, only Homopolish can reduce most indel errors without much side effects. When combined with Medaka for removing both mismatch and indel errors, Homopolish achieves an expected higher accuracy (from Q33 to Q36). However, the combination with HELEN (Q34) is not better than running Homopolish directly on top of MarginPolish (Q37).
<fig id="Fig5"><label>Fig. 5</label><caption><p>Genome quality of combining Homopolish with Medaka or with HELEN in the isolate dataset. Comparison of genome quality (<italic>Q</italic> score) polished by Medaka, Medaka+Homopolish, HELEN, and HELEN+Homopolish on the isolate dataset. Although Homopolish can improve Medaka or HELEN, the degree of improvement is decreased from common (e.g., <italic>E. coli</italic>) to rare species (e.g., <italic>P. vulgaris</italic>)</p></caption><graphic xlink:href="13059_2021_2282_Fig5_HTML" id="MO5"/></fig><table-wrap id="Tab2"><label>Table 2</label><caption><p><italic>Q</italic> scores and numbers of mismatch, insertion, and deletion errors of <italic>E. anophelis</italic>
<italic>SUE</italic> in the isolate dataset</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Methods</th><th align="left">Avg. <italic>Q</italic> score</th><th align="left">Median <italic>Q</italic> score</th><th align="left">Mismatches</th><th align="left">Insertions</th><th align="left">Deletions</th></tr></thead><tbody><tr><td align="justify">Flye</td><td align="left">22.25</td><td align="left">22.2</td><td align="left">1363</td><td align="left">18718</td><td align="left">5039</td></tr><tr><td align="justify">Racon 4x</td><td align="left">23.57</td><td align="left">23.57</td><td align="left">1163</td><td align="left">6097</td><td align="left">11215</td></tr><tr><td align="justify">Racon 4x + Medaka</td><td align="left">26.43</td><td align="left">26.48</td><td align="left"><bold>566</bold></td><td align="left">1114</td><td align="left">7891</td></tr><tr><td align="justify">Racon 4x + Hompolish</td><td align="left"><bold>33.11</bold></td><td align="left"><bold>33.57</bold></td><td align="left">1224</td><td align="left"><bold>384</bold></td><td align="left"><bold>443</bold></td></tr><tr><td align="justify">MarginPolish</td><td align="left">25.57</td><td align="left">25.61</td><td align="left"><bold>389</bold></td><td align="left">1055</td><td align="left">10198</td></tr><tr><td align="justify">MarginPolish + HELEN</td><td align="left">23.89</td><td align="left">23.91</td><td align="left">669</td><td align="left">4614</td><td align="left">11753</td></tr><tr><td align="justify">MarginPolish + Homopolish</td><td align="left"><bold>35.8</bold></td><td align="left"><bold>37.21</bold></td><td align="left">447</td><td align="left"><bold>222</bold></td><td align="left"><bold>435</bold></td></tr><tr><td align="justify">Racon 4x + Medaka + Homopolish</td><td align="left"><bold>35.32</bold></td><td align="left"><bold>36.38</bold></td><td align="left"><bold>611</bold></td><td align="left"><bold>216</bold></td><td align="left"><bold>407</bold></td></tr><tr><td align="justify">MarginPolish + HELEN + Homopolish</td><td align="left">33.57</td><td align="left">34.44</td><td align="left">723</td><td align="left">342</td><td align="left">774</td></tr></tbody></table></table-wrap></p>
    </sec>
    <sec id="Sec5">
      <title>Comparison of correction accuracy on viral and fungal genomes</title>
      <p>To demonstrate the capability of Homopolish on polishing other microbial genomes, these programs were further tested on one viral genome (<italic>Lambda phage</italic>) and one fungal genome (<italic>S. cerevisiae</italic>). As shown in Table <xref rid="Tab3" ref-type="table">3</xref>, the quality of the draft viral genome is approximately Q24. Racon with Medaka improved the quality to Q36. Homopolish achieved the highest accuracy when combined with either Racon or Medaka (∼ Q38–39). Again, the accuracy of HELEN is not only the worst, but it is also lower than the original draft genome (from ∼ Q24 to ∼ Q20), owing to new mismatches and deletion errors falsely corrected. As for the fungal genome (<italic>S. cerevisiae</italic>), the quality of the initial genome was approximately Q20. Correction via Racon with Medaka improved the quality to Q23. The highest accuracy is once more achieved by Homopolish when combined with either Medaka or MarginPolish (∼ Q32). Similarly, HELEN obtained the lowest accuracy in comparison with the others. These results indicate that Racon, Medaka, and Homopolish are robust to polished viral, bacterial, and fungal genomes while HELEN is less reliable when compared with the others.
<table-wrap id="Tab3"><label>Table 3</label><caption><p><italic>Q</italic> scores and numbers of mismatch, insertion, and deletion errors on <italic>L</italic><italic>a</italic><italic>m</italic><italic>b</italic><italic>d</italic><italic>a</italic>
<italic>p</italic><italic>h</italic><italic>a</italic><italic>g</italic><italic>e</italic> and <italic>S</italic><italic>a</italic><italic>c</italic><italic>c</italic><italic>h</italic><italic>a</italic><italic>r</italic><italic>o</italic><italic>m</italic><italic>y</italic><italic>c</italic><italic>e</italic><italic>s</italic>
<italic>c</italic><italic>e</italic><italic>r</italic><italic>e</italic><italic>v</italic><italic>i</italic><italic>s</italic><italic>i</italic><italic>a</italic><italic>e</italic></p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Species</th><th align="left">Methods</th><th align="left">Avg. <italic>Q</italic> score</th><th align="left">Median <italic>Q</italic> score</th><th align="left">Mismatches</th><th align="left">Insertions</th><th align="left">Deletions</th></tr></thead><tbody><tr><td align="justify"><italic>Lambda phage</italic></td><td align="justify">Flye</td><td align="left">24.17</td><td align="left">24.17</td><td align="left">7</td><td align="left">177</td><td align="left">2</td></tr><tr><td align="justify"/><td align="justify">Racon 4x + Medaka</td><td align="left">36.44</td><td align="left">36.44</td><td align="left"><bold>4</bold></td><td align="left">5</td><td align="left">2</td></tr><tr><td align="justify"/><td align="justify">Racon 4x + Hompolish</td><td align="left"><bold>39.07</bold></td><td align="left"><bold>39.07</bold></td><td align="left"><bold>4</bold></td><td align="left"><bold>1</bold></td><td align="left"><bold>1</bold></td></tr><tr><td align="justify"/><td align="justify">Racon 4x + Medaka + Homopolish</td><td align="left"><bold>38.4</bold></td><td align="left"><bold>38.4</bold></td><td align="left"><bold>4</bold></td><td align="left">2</td><td align="left"><bold>1</bold></td></tr><tr><td align="justify"/><td align="justify">MarginPolish + HELEN</td><td align="left">19.95</td><td align="left">19.95</td><td align="left">123</td><td align="left">16</td><td align="left">144</td></tr><tr><td align="justify"/><td align="justify">MarginPolish + Homopolish</td><td align="left">37.31</td><td align="left">37.31</td><td align="left">6</td><td align="left">2</td><td align="left"><bold>1</bold></td></tr><tr><td align="justify"/><td align="justify">MarginPolish + HELEN + Homopolish</td><td align="left">21.99</td><td align="left">21.99</td><td align="left">169</td><td align="left">10</td><td align="left">18</td></tr><tr><td align="justify"><italic>S. cerevisiae</italic></td><td align="justify">Flye</td><td align="left">20.43</td><td align="left">20.52</td><td align="left">2715</td><td align="left">75290</td><td align="left">8459</td></tr><tr><td align="justify"/><td align="justify">Racon 4x + Medaka</td><td align="left">22.89</td><td align="left">23.55</td><td align="left">2345</td><td align="left">44979</td><td align="left">3232</td></tr><tr><td align="justify"/><td align="justify">Racon 4x + Hompolish</td><td align="left">27.84</td><td align="left">30.64</td><td align="left">4683</td><td align="left">10556</td><td align="left">1042</td></tr><tr><td align="justify"/><td align="justify">Racon 4x + Medaka + Homopolish</td><td align="left"><bold>28.72</bold></td><td align="left"><bold>32.58</bold></td><td align="left">2374</td><td align="left">9917</td><td align="left"><bold>928</bold></td></tr><tr><td align="justify"/><td align="justify">MarginPolish + HELEN</td><td align="left">20.38</td><td align="left">20.71</td><td align="left">3123</td><td align="left">45701</td><td align="left">26865</td></tr><tr><td align="justify"/><td align="justify">MarginPolish + Homopolish</td><td align="left"><bold>28.7</bold></td><td align="left"><bold>32.68</bold></td><td align="left"><bold>2007</bold></td><td align="left"><bold>9547</bold></td><td align="left">1817</td></tr><tr><td align="justify"/><td align="justify">MarginPolish + HELEN + Homopolish</td><td align="left">24.86</td><td align="left">26.09</td><td align="left">3449</td><td align="left">8997</td><td align="left">15572</td></tr></tbody></table></table-wrap></p>
    </sec>
    <sec id="Sec6">
      <title>Comparison of genome quality on R10.3 flow cells</title>
      <p>Finally, we evaluated Racon, Medaka, HELEN, and Homopolish on one public metagenomic dataset (Zymo Microbial Community Standard). The accuracy of the R10.3 flow cell is higher than the R9.4 version, albeit at the cost of reduced throughput. Figure <xref rid="Fig6" ref-type="fig">6</xref> plots the <italic>Q</italic> scores of Racon, Medaka, HELEN, and Homopolish for the seven bacteria in the R10.3 metagenomic dataset. Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Table S9 lists the numbers of mismatches, insertions, and deletions of each program as applied to these bacteria. The quality of draft genomes ranged from Q28 to Q42, which is indeed better than that of R9.4 (Q22–Q26) (Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Table S7). Unexpectedly, the genomes polished by Racon were not improved (Q27–Q40) when compared with the draft genome assembled by Flye. The Medaka-polished genomes exhibited significantly higher quality (Q30–Q50). HELEN obtained the highest quality of two strains (i.e., Q90 on <italic>E. faecalis</italic> and Q36 on <italic>S. aureus</italic>) when compared with others. Homopolish further improved the Medaka-polished genomes to Q33–Q90 and obtained the highest quality of four strains (e.g., Q90 on <italic>E. faecalis</italic> and <italic>P. aeruginosa</italic>). When testing Homopolish and Medaka over the public (<italic>E. coli</italic> K12 MG1655 sequenced by R10.3 flow cell (Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Table S9), Homopolish also improved Medaka from Q46 to Q90. Consequently, these results suggest that Homopolish can also improve the genome quality of Medaka on R10.3 flow cells.
<fig id="Fig6"><label>Fig. 6</label><caption><p>Comparison of genome quality on the R10.3 metagenomic dataset Comparison of genome quality (Q score) polished by Racon, Medaka, HELEN, and Homopolish on the R10.3 metagenomic dataset from Zymo Microbial Community Standard. HELEN was run after MarginPolish. Medaka was run after Racon, and Homopolish was invoked after Medaka</p></caption><graphic xlink:href="13059_2021_2282_Fig6_HTML" id="MO6"/></fig></p>
    </sec>
  </sec>
  <sec id="Sec7" sec-type="discussion">
    <title>Discussion</title>
    <sec id="Sec8">
      <title>Limitations of homologous polishing</title>
      <p>Homopolish relies on homologous sequences retrieved from closely related genomes for the correction of Nanopore systematic errors. Thus, the efficiency is related to the abundance of related genomes in NCBI (i.e., common or rare). When polishing rare species (e.g., <italic>Proteus vulgaris</italic> CCU063 in Fig. <xref rid="Fig5" ref-type="fig">5</xref>), although Homopolish still improved the quality of these two genomes (e.g., Q27 to Q32), the degree of improvement is lower than polishing common species (e.g., Q26 to 38 in <italic>K. pneumoniae</italic>). In the bacterial isolate dataset, the genome quality declines from common (e.g., Q38 in <italic>E. coli</italic>), less common (e.g., Q35 in <italic>S. algae</italic>), to rare species (e.g., Q29 in <italic>P. vulgaris</italic>).</p>
      <p>Second, the trained model aims to remove errors within conserved regions and retain strain variations free of selection pressure. As a result, the errors within non-coding regions may tend to be uncorrected. Table <xref rid="Tab4" ref-type="table">4</xref> compares the numbers of errors in coding and non-coding regions before and after running Homopolish. Although the correction ratios in the coding regions are higher as expected (70–95%), the errors in the non-coding regions are reduced at various degrees (28–97%). The large variance of correction ratios in non-coding regions is possibly due to species-specific selection pressures. Therefore, the efficacy of Homopolish in non-coding regions will depend on the underlying selection pressure of each species. We note that Homopolish has not been tested on non-compact genomes, in which non-coding regions represent an important part of the genome. These genomes, in fact a large proportion of eukaryotic genomes, could not be corrected to the same level as the small and compact microbial genomes.
<table-wrap id="Tab4"><label>Table 4</label><caption><p>Comparison of the numbers of errors in coding and non-coding regions before and after running Homopolish using the Zymo R9.4 dataset</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"/><th align="left" colspan="3">Coding regions errors</th><th align="left" colspan="3">Non-coding regions errors</th></tr><tr><th align="left"/><th align="left">Before</th><th align="left">After</th><th align="left">Correction ratio</th><th align="left">Before</th><th align="left">After</th><th align="left">Correction ratio</th></tr></thead><tbody><tr><td align="left"><italic>B. subtilis</italic></td><td align="left">446</td><td align="left">80</td><td align="left">82.06%</td><td align="left">232</td><td align="left">165</td><td align="left">28.88%</td></tr><tr><td align="left"><italic>E. faecalis</italic></td><td align="left">244</td><td align="left">21</td><td align="left">91.39%</td><td align="left">176</td><td align="left">34</td><td align="left">80.68%</td></tr><tr><td align="left"><italic>S. aureus</italic></td><td align="left">306</td><td align="left">38</td><td align="left">87.58%</td><td align="left">100</td><td align="left">17</td><td align="left">83.00%</td></tr><tr><td align="left"><italic>L. monocytogenes</italic></td><td align="left">160</td><td align="left">19</td><td align="left">88.13%</td><td align="left">80</td><td align="left">26</td><td align="left">67.50%</td></tr><tr><td align="left"><italic>P. aeruginosa</italic></td><td align="left">666</td><td align="left">30</td><td align="left">95.50%</td><td align="left">279</td><td align="left">8</td><td align="left">97.13%</td></tr><tr><td align="left"><italic>S. enterica</italic></td><td align="left">469</td><td align="left">66</td><td align="left">85.93%</td><td align="left">118</td><td align="left">13</td><td align="left">88.98%</td></tr><tr><td align="left"><italic>E. coli</italic></td><td align="left">544</td><td align="left">163</td><td align="left">70.04%</td><td align="left">201</td><td align="left">141</td><td align="left">29.85%</td></tr></tbody></table><table-wrap-foot><p>DFAST was used for the annotation of coding/non-coding regions in each genome</p></table-wrap-foot></table-wrap></p>
      <p>Third, the correction efficacy of Homopolish may be reduced on plasmids shaped by mobile genetic elements (e.g., integrons), which exhibit little or no structural conservation across plasmids. As a consequence, the homologs can not be obtained because no closely related plasmids can be found by Mash. Moreover, the MinHash sketches used for the identification of closely related genomes are compiled from nearly complete genomes. When polishing highly fragmented assembly (e.g., due to low sequencing coverage), the species identification stage (i.e., Mash screen) becomes less reliable. Consequently, the user should specify the genus or species name when using Homopolish for correcting highly fragmented assembly.</p>
    </sec>
    <sec id="Sec9">
      <title>Preservation of strain variations</title>
      <p>Because the correction material of Homopolish is homologs instead of reads, the genome variability (e.g., phylogenetic distance) between the polished and related genomes might decrease. To prove that the strain variations are well preserved, we compare the whole-genome phylogenies before and after Homopolish correction using common and rare species. The twenty most closely related genomes (&gt; 99% Mash identity) of two common species (<italic>P. aeruginosa</italic> and <italic>S. enterica</italic> in the Zymo dataset) were retrieved for whole-genome phylogeny reconstruction (see the “<xref rid="Sec13" ref-type="sec">Methods</xref>” section). Although their genetic distance is very close, the phylogenies remain the same before and after Homopolish (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figs. S15 and S16). Similarly, the phylogenies of two rare species (<italic>P. vulgaris</italic> CCU063 and GOKU) and their closely related genomes are also unchanged after Homopolish (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figs. S12 and S13). Therefore, the phylogenetic distance between the polished and related genomes is well preserved.</p>
      <p>Furthermore, most bacterial genomes contain pseudogenes (e.g., genes inactivated by true indels), which should not be corrected by homologs. We compared the pseudogenes (annotated by DFAST [<xref ref-type="bibr" rid="CR15">15</xref>]) in the genomes polished by Medaka, Homopolish, and the truth genome (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figs. S17 and S18). The Racon-Medaka pipeline produces excessive amounts of pseudogenes (e.g., 151–5298 in R9.4) due to quite a few uncorrected errors. On the contrary, the genomes polished by Homopolish yield not only much fewer pseudogenes (e.g., 10–126 in R9.4) but the numbers are also quite close to those of truth genomes (e.g., 12–136 in R9.4). Further investigation reveals that the minor discrepancies between Homopolished genomes and the truth genome (e.g., 62 vs 69 in <italic>Bacillus</italic>) are due to pseudogenes that have been missed before running Homopolish (e.g., misassembly). Consequently, most pseudogenes are successfully preserved by our method.</p>
    </sec>
    <sec id="Sec10">
      <title>Reference-free versus reference-based quality assessments</title>
      <p>The assessment of genome quality is affected not only by uncorrected errors but also by misassemblies and structural variations (e.g., IS movement), which are too large to be corrected by existing polishing programs. In the isolate dataset, the references reconstructed via hybrid Illumina/Nanopore assembly are not the true underlying genomes, which also reduces the accuracy of reference-based assessment (e.g., <italic>Q</italic> scores by fastmer). Hence, we compared the (CheckM) genome completeness of Medaka and Homopolish, which is a widely used reference-free assessment [<xref ref-type="bibr" rid="CR16">16</xref>] (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S10). The completeness of Homopolish (∼ 97–100%) is not only higher than that of Medaka (∼ 81–95%) but also quite close to that of truth genomes (∼ 97–100%). The same phenomenon can be also seen in the metagenomic dataset (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S11), implying the improvement of Homopolish is consistent in both reference-free and reference-based assessment.</p>
      <p>Nevertheless, although reference-free assessments (e.g., CheckM/BUSCO/ideel) are less affected by misassemblies/structure variations, they are not sensitive enough to reflect the true accuracy of each program. We have observed that many genomes can obtain nearly 100% (CheckM) completeness even with only ∼ Q30 accuracy. On the other hand, reference-based assessments (e.g., fastmer), albeit affected by misassemblies/variations, can measure the accuracy at a higher resolution. We found that the median <italic>Q</italic> score is a relatively fair assessment of genome quality, which provides both sufficient resolution and robustness to misassemblies/structural variations.</p>
    </sec>
    <sec id="Sec11">
      <title>Future directions</title>
      <p>While state-of-the-art polishing models are trained from Nanopore reads or signals (e.g., Nanopolish, Medaka, HELEN), we have shown that homologs conserved in closely related genomes provide valuable features for the detection of Nanopore systematic errors (e.g., frameshift being extremely rare within coding regions). Additionally, because Nanopore signals may be disturbed by species-specific DNA modifications, the construction of a universal model for polishing all species remains challenging. This work suggests that having a model aware of species-specific errors is possible, as long as both reads and homologs are incorporated into the underlying training framework (e.g., RNN in Medaka).</p>
      <p>In terms of speed, because existing polishing algorithms (i.e., Medaka and HELEN) rely on the deep neural network, GPU acceleration is often required. Alternatively, a CPU is sufficient for Homopolish, as it is based upon an SVM (e.g., ∼ 5 min for polishing a bacterial genome). Although the neural network is theoretically suitable for learning non-trivial features, a set of manually inspected features in our model may be used by other developers for distinguishing Nanopore systematic errors.</p>
      <p>The results indicated that the accuracy of R10.3 is indeed better than R9.4 on the same metagenomic dataset (Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Tables S7 vs S9). Nevertheless, due to the use of an old version of Guppy (v2.2) basecaller in the R9.4 dataset, the read accuracy was still low (∼ Q9–Q10). However, recently, the accuracy of Nanopore reads has been significantly improved (e.g., ∼ Q13–14 by Guppy v3.6 over R9.4 flow cells), which should further enhance the genome quality as well (results not shown). In terms of the final genome quality, the accuracy gap between R9.4 and R10.3 is rather small (i.e., both can exceed Q50). As the throughput of R10.3 is currently lower than that of R9.4, R9.4 may still be preferred in sequencing projects requiring a large sequencing yield.</p>
    </sec>
  </sec>
  <sec id="Sec12" sec-type="conclusion">
    <title>Conclusion</title>
    <p>This paper developed an SVM-based polishing model (named Homopolish) for the correction of Nanopore systematic errors using homologous sequences. In comparison with the state-of-the-art Medaka and HELEN, Homopolish displayed superior accuracy in bacteria, fungus, and virus on R9.4/R10.3 flow cells. The reported genome quality is expected to be further improved when using the latest basecaller (Guppy 4.0 or Bonito). Homopolish is currently only capable of polishing microbial genomes but not the majority of eukaryotic genomes, which require retraining the model and revising the methodology. In conclusion, we have proved that high-quality microbial genomes can be obtained through Nanopore-only sequencing using simply R9.4 flow cells, thus eliminating the need for Illumina hybrid sequencing.</p>
  </sec>
  <sec id="Sec13">
    <title>Methods</title>
    <p>Homopolish corrects Nanopore systematic errors by an SVM trained for distinguishing sequencing errors from strain variations using homologous sequences. The genome to be polished is first screened against the virus, bacteria, or fungus genomes compressed in MinHash sketches, which are precompiled from NCBI RefSeq database using Mash [<xref ref-type="bibr" rid="CR17">17</xref>]. Subsequently, closely related genomes are retrieved and aligned against the draft genome to extract conserved homologous sequences. Several features (e.g., homologous allele counts, homopolymer lengths, and homologous similarity) were extracted from the homologous alignments. Finally, an SVM is trained for distinguishing Nanopore systematic errors from interstrain variations. Only the systematic errors will be corrected according to the predicted base, while strain variations will be retained.</p>
    <sec id="Sec14">
      <title>Retrieval of homologous sequences via MinHash sketches</title>
      <p>Given a genome <italic>G</italic> to be polished, Homopolish first identifies, downloads, and extracts homologous sequences from closely related genomes. In practice, whole-genome alignment against the entire NCBI RefSeq genome database is time-consuming and infeasible. Instead, these genomes are compressed into a reduced representation called Mash sketches [<xref ref-type="bibr" rid="CR17">17</xref>]. Specifically, the microbial genomes in the NCBI RefSeq are downloaded and compiled into 1000 sketches per genome. The similarity of <italic>G</italic> against all RefSeq genomes can be thus estimated by Mash in seconds. Only the genomes with identity at least <italic>p</italic> (default 95%) are considered. Next, top <italic>t</italic> (default 20) genomic sequences are automatically downloaded from NCBI, which takes around 1 min for retrieving 20 bacterial genomes. Alternatively, Homopolish allows the user to specify the genus and/or species name of genome <italic>G</italic>, and <italic>t</italic> random genomes of the same genus and species will be downloaded from NCBI. To obtain the homologous sequences, these closely related genomes will be aligned against the genome <italic>G</italic> via minimap2 (with options asm5) [<xref ref-type="bibr" rid="CR18">18</xref>], The alignment of these homologs against <italic>G</italic> (i.e., homologous pileup) will be further analyzed.</p>
      <p>The genome quality (<italic>Q</italic> scores) with respect to parameter <italic>t</italic> (top <italic>t</italic> similar genomes) has been tested using fourteen bacteria (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S14). Although this parameter can be optimized for particular species (e.g., <italic>t</italic>=5 is highest in <italic>Pseudomonas</italic>), we did not see much difference after fine tuning. When <italic>t</italic>&gt;20, the quality of most species deteriorates. Therefore, the default value (<italic>t</italic>=20) was chosen as it balances well for both common or rare species.</p>
    </sec>
    <sec id="Sec15">
      <title>Feature engineering and model training</title>
      <p>A total of twelve features are extracted from the homologous alignment profile for distinguishing Nanopore systematic errors from interstrain variations. An SVM is trained for classifying each locus in the draft genome into errors or variations according to the twelve features. Only errors will be corrected while variations will be retained.</p>
      <sec id="Sec16">
        <title>Feature engineering</title>
        <p>At each locus of genome <italic>G</italic>, twelve features are extracted from the homologous alignment profile for distinguishing Nanopore systematic errors from interstrain variations. Note that we do not polish mismatch errors as they frequently occur in different strains of the same species. Besides, mismatches are less destructive within coding regions in comparison with indel errors. The first nine features are matched allele counts of A, T, C, G; inserted allele counts of A, T, C, G (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S5(a)); and deletion allele counts in homologous sequences (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S5(b)). These nine features aim to reflect the degree of conservation measured by allele frequencies within homologs (e.g., a single allele with 100% frequency indicates a very conservative locus). The 10th feature is termed homologous coverage (similar to read coverage), which reflects the confidence of homologous allele counts (i.e., higher coverage stands for higher confidence). The above ten features are min-max normalized into [0,1] intervals.</p>
        <p>The eleventh feature encodes homopolymer length flanking the base being predicted. Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S6(a) illustrates an insertion error at the start of consecutive five adenine bases (i.e., length five homopolymer). This feature is important as most Nanopore systematic errors are indels within homopolymers. Unexpectedly, we observed one-hot encoding of this feature achieves superior accuracy than naive min-max normalization (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S7). We hypothesize this might owing to the side effects of basecalling algorithms (e.g., Guppy) overfitting particular lengths of homopolymers [<xref ref-type="bibr" rid="CR19">19</xref>]. Hence, the length of homopolymer may be better encoded as a categorical instead of a numerical feature. To limit this feature with fixed dimensions, the homopolymer length is a skewed distribution (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S6(b)), whereas the majorities are lengths shorter than three and very few exceed ten. Consequently, the homopolymer length is one-hot encoded into ten categories {1, 2, 3, …, 8, 9, ≥10}.</p>
        <p>The last feature aims to estimate the degree of conservation via homologous sequence similarity, which is manually inspected by Integrated Genomics Viewer [<xref ref-type="bibr" rid="CR20">20</xref>]. The minor (instead of the major) allele among the homologous sequences is sometimes the true allele, which violates the assumption of the first ten allele count features, which will lead to false corrections. Further investigation indicated that the homologous sequences flanking these minor alleles are more similar to the ground-truth genome. For example (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S8(a)), homologous sequence 1, though carrying minor allele, is perfectly identical to the ground-truth genome, while the other sequences are relatively dissimilar. This feature is also implemented by SNP calling algorithms (e.g., haplotype counts in freebayes and CNN in DeepVariant [<xref ref-type="bibr" rid="CR21">21</xref>, <xref ref-type="bibr" rid="CR22">22</xref>].</p>
        <p>In reality, because the ground-truth genome is not known in advance, the similarity of flanking sequences can only be estimated by aligning onto the draft genome <italic>G</italic>. Unfortunately, we observe the sequence similarity measured by <italic>G</italic> is sometimes indistinguishable between the major/minor alleles. For instance (in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S8(b)), the homologous sequences flanking the major (e.g., 2 and 3) and minor (e.g., 1 and 4) alleles both differ with the draft genome <italic>G</italic> by one insertion. Thus, their identities against the draft genome are completely the same. Interestingly, these ambiguous loci are mainly found in pairs and proximity (e.g., two insertion loci in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. 8(a)(b)), and their major/minor alleles are mutually exclusive. Although we cannot explain this phenomenon, the minor (yet more similar with truth genome) alleles are usually the correct base, whereas the major alleles are not. As a result, the major and minor alleles at these paired loci are encoded as one and two, respectively, whereas other unpaired loci are encoded as zero. The SVM will be trained and learned to preserve the minor allele due to interstrain variations.</p>
      </sec>
      <sec id="Sec17">
        <title>Model training</title>
        <p>We aim to train an SVM able to distinguish between sequencing errors and strain variations. Instead of solving a binary classification problem, we found the accuracy is better by dividing errors and variations into seven classes: insertion of A, insertion of T, insertion of C, insertion of G, deletion, no insertion, and no deletion. The first five classes indicate errors to be corrected while the last two suggest variations to be retained. Because the deletion and insertion classes carry strong features in different dimensions (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S9), the accuracy can be improved by separating these distant classes in the feature space.</p>
        <p>The class frequencies are quite imbalanced across the seven classes, whereas the no deletion class dominates all the others (≈ 30 million) (Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Table S10). We remove duplicated feature vectors belonging to the no deletion class. The level of imbalance is greatly reduced although the samples of no deletion class are still the majority (∼ 38 thousand). The training data of the R9.4 model (basecalled by Guppy 2.2) include the following seven strains: <italic>P. aeruginosa</italic>, <italic>E. coli</italic>, <italic>S. aureus</italic>, <italic>E. faecalis</italic>, <italic>K. pneumoniae</italic>, <italic>P. vulgaris VGH117</italic>, and <italic>P. vulgaris GOKU</italic>, whereas the other seven bacterial strains, one fungus, and one virus are validation datasets not used during development. The training data of the R10.3 model includes four species: <italic>P. aeruginosa</italic>, <italic>E. coli</italic>, <italic>S. aureus</italic>, and <italic>E. faecalis</italic>, whereas the remaining four species are validation datasets. A total of 66,036 non-redundant samples in the training data were further split into a training and a test sets in a nine-to-one ratio. Subsequently, an SVM with the radial basis function (RBF) kernel (<italic>c</italic> = 1.0) is trained and evaluated in the test set. The macro average of precision, recall, and F1-score, as well as confusion matrix, of the test set can be found in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S20. During prediction, the genome is chopped into 10-kbp segments, which can be polished in a multithreaded environment in parallel.</p>
      </sec>
    </sec>
    <sec id="Sec18">
      <title>Collection and assembly of public datasets</title>
      <p>The majority of datasets used in this study were retrieved from the public database. Two public metagenomic datasets (R9.4 and R10.3) of ZymoBIOMICS Microbial Community Standard were downloaded from Loman Lab [<xref ref-type="bibr" rid="CR14">14</xref>] (Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Table S3). Each Zymo metagenomic dataset includes eight bacteria and two yeasts. <italic>Lactobacillus</italic> was excluded because of unusually low quality (∼ Q20) possibly due to the wrong reference. The two yeasts were removed owing to highly fragmented assembly caused by low sequencing coverage. The reference genomes were obtained according to the ZymoBIOMICS instruction manual (Catalog No.D6300).</p>
      <p>The Nanopore reads and reference genome of <italic>E. coli</italic> K12 sequenced by R10.3 were downloaded from [<xref ref-type="bibr" rid="CR23">23</xref>]. The Nanopore reads of lambda phage virus were downloaded from NCBI Short Read Archive (SRA) (SRR12602365), whereas the reference genome (NC_001416.1) was obtained from RefSeq. The Nanopore reads of <italic>S. cerevisiae</italic> CEN.PK113-7D were downloaded from the SRA (SRR5989372), and the reference genome (GCA_000269885.1) was retrieved from RefSeq. The Nanopore reads of the public bacteria, virus, and fungus were first trimmed by PoreChop and assembled by Flye (v2.7) [<xref ref-type="bibr" rid="CR7">7</xref>]. The metagenomic dataset was assembled by MetaFlye (v2.7) [<xref ref-type="bibr" rid="CR12">12</xref>] (Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Table S5).</p>
    </sec>
    <sec id="Sec19">
      <title>Hybrid assembly of six common and rare species</title>
      <p>To compare the correction power on common and rare species, six additional bacterial isolates, <italic>P. vulgaris</italic> CCU063, <italic>P. vulgaris</italic> GOKU, <italic>K. pneumoniae</italic> SAWA, <italic>E. anophelis</italic> SUE, <italic>S. algae</italic> HIDE, and <italic>S. algae</italic> VGH117, were sequenced using both Illumina (MiSeq) and Nanopore (GridIon) platforms with ∼ 100-300 coverage (Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Tables S1 and S2). The ground-truth genomes of the six bacteria were constructed by a hybrid assembly of Nanopore and Illumina reads via Unicylcer [<xref ref-type="bibr" rid="CR4">4</xref>] (Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Tables S4). The Nanopore-only genomes of the six isolates were assembled by Flye (v2.7) [<xref ref-type="bibr" rid="CR7">7</xref>](Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Table S6), whereas plasmids are excluded.</p>
    </sec>
    <sec id="Sec20">
      <title>Polishing workflow of Nanopore-only genomes</title>
      <p>All the genomes assembled solely by Nanopore reads were first polished by either four rounds of Racon or MarginPolish for removal of random sequencing errors. The remaining systematic errors were then removed by either Medaka (v1.0.1), HELEN, or Homopolish. The quality of polishing genome (<italic>Q</italic> score), as well as numbers of insertions, deletions, and mismatches, were calculated by fastmer [<xref ref-type="bibr" rid="CR13">13</xref>]. The genome completeness of polished genomes was computed by CheckM [<xref ref-type="bibr" rid="CR16">16</xref>].</p>
    </sec>
    <sec id="Sec21">
      <title>Analysis of phylogeny, pseudogenes, and coding region bias</title>
      <p>The protein-coding genes and pseudogenes in each genome were annotated by DFAST [<xref ref-type="bibr" rid="CR15">15</xref>]. The numbers of sequencing errors within coding and non-coding regions were computed by bedtools (v2.2.28). For comparison of the whole-genome phylogenies of two common (<italic>K. pneumoniae</italic> and <italic>S. enterica</italic>) and two rare (<italic>P. vulgaris</italic>) species before and after running Homopolish, we retrieved 20 most closely related genomes with Mash identity &gt;95<italic>%</italic>. Whole-genome phylogenies of each common or rare and its closely related genomes were reconstructed by REALPHY [<xref ref-type="bibr" rid="CR24">24</xref>]. The phylogenetic tree was visualized via Interactive Tree Of Life (iTOL) [<xref ref-type="bibr" rid="CR25">25</xref>].</p>
    </sec>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Information</title>
    <sec id="Sec22">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="13059_2021_2282_MOESM1_ESM.pdf">
            <caption>
              <p><bold>Additional file 1</bold> Additional file 1 includes Supplementary Figs. S1-20. Fig. S1. Illustration of Nanopore systematic errors. Fig. S2. Illustration of homologs for polishing systematic errors. Fig. S3. Numbers of indels and mismatches of <italic>Bacillus</italic>. Fig. S4. Numbers of indels and mismatches of <italic>K pneumonia</italic>. Fig. S5. Examples of feature vectors at insertion and deletion loci. Fig. S6. Illustration of systematic errors in homopolymers. Fig. S7. Comparison of min-max normalization with one-hot encoding. Fig. S8. Illustration of minor strain variations at multiple loci. Fig. S9. Comparison of feature vectors at deletion and insertion loci. Fig. S10. Comparison of genome completeness of seven bacteria. Fig. S11. Comparison of genome completeness of the R9.4 Zymo dataset. Fig. S12. Whole-genome comparison of the <italic>P vulgaris</italic> CCU063. Fig. S13. Whole-genome comparison of the <italic>P vulgaris</italic> GOKU. Fig. S14. Correlation of genome quality with respect to the number of related genomes. Fig. S15. Whole-genome comparison of the <italic>P aeruginosa</italic>. Fig. S16. Whole-genome comparison of the <italic>S enterica</italic>. Fig. S17. Comparison of pseudogenes in Zymo R9.4 dataset. Fig. S18. Comparison of pseudogenes in Zymo R10.3 dataset. Fig. S19. Comparison of PEPPER in Zymo R10.3 dataset. Fig. S20. Evaluation of model accuracy.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
      <p>
        <supplementary-material content-type="local-data" id="MOESM2">
          <media xlink:href="13059_2021_2282_MOESM2_ESM.pdf">
            <caption>
              <p><bold>Additional file 2</bold> Additional file 2 includes Supplementary Tables S1-10. Table S1. Nanopore sequencing of six bacteria. Table S2. Illumina sequencing of six bacteria. Table S3. Nanopore sequencing of metagenomic datasets. Table S4. Hybrid assembly of six bacteria. Table S5. Metagenomic assembly of Zymo datasets. Table S6. Nanopore-only assembly of all isolates. Table S7. Comparison of polishing tools over the R9.4 Zymo dataset. Table S8. Comparison of polishing tools over the R9.4 bacterial dataset. Table S9. Comparison of polishing tools over the R10.3 Zymo dataset. Table S10. Comparison of label frequencies.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
      <p>
        <supplementary-material content-type="local-data" id="MOESM3">
          <media xlink:href="13059_2021_2282_MOESM3_ESM.docx">
            <caption>
              <p><bold>Additional file 3</bold> Additional file 3 includes the review history.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher’s Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
    <fn>
      <p>Yao-Ting Huang and Po-Yu Liu contributed equally to this work.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>We thank the reviewers for many constructive comments which improve both the breadth and depth of this work. YTH is grateful for the support of YHC and YLH.</p>
    <sec id="d32e2176">
      <title>Review history</title>
      <p>The review history is available as Additional file <xref rid="MOESM3" ref-type="media">3</xref>.</p>
    </sec>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors’ contributions</title>
    <p>YTH designed the study. PWS and YTH implemented the software. PYL provided the bacteria sequencing. YTH and PYL wrote the manuscript. The authors read and approved the final manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>YTH was supported in part by the Ministry of Science and Technology (109-2221-E-194-038-MY3). PYL was supported in part by the Ministry of Science and Technology (109-2314-B-075A-009) and Taichung Veterans General Hospital (TCVGH-1103901C).</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>Homopolish is freely available at <ext-link ext-link-type="uri" xlink:href="https://github.com/ythuang0522/homopolish">https://github.com/ythuang0522/homopolish</ext-link> [<xref ref-type="bibr" rid="CR26">26</xref>]. A cloud version (Code Ocean) can be accessed from <ext-link ext-link-type="uri" xlink:href="https://codeocean.com/capsule/1612663/tree">https://codeocean.com/capsule/1612663/tree</ext-link> [<xref ref-type="bibr" rid="CR27">27</xref>]. The version of source code used in the manuscript is deposited with DOI: 10.5281/zenodo.4301655 at <ext-link ext-link-type="uri" xlink:href="https://zenodo.org/record/4301655#.X8dm9y8RpQI">https://zenodo.org/record/4301655#.X8dm9y8RpQI</ext-link> [<xref ref-type="bibr" rid="CR28">28</xref>].</p>
    <p>The hybrid Illumina/Nanopore assembled genomes of <italic>K. pneumoniae</italic> SAWA, <italic>E. anophelis</italic> SUE, <italic>S. algae</italic> VGH117, <italic>S. algae</italic> HIDE, <italic>P. vulgaris</italic> CCU063, and <italic>P. vulgaris</italic> GOKU were deposited at DDBJ/ENA/GenBank under the accession PKLG00000000, CP034247, CP032664, CP034246, CP032663, and CP034105, respectively [<xref ref-type="bibr" rid="CR29">29</xref>–<xref ref-type="bibr" rid="CR34">34</xref>]. Two public R9.4/10.3 metagenomic datasets (ZymoBIOMICS Microbial Community Standard) were downloaded from the Loman Lab [<xref ref-type="bibr" rid="CR14">14</xref>]. The Nanopore reads of <italic>E. coli</italic> K12 sequenced by R10.3 were downloaded from the Albertsen Lab [<xref ref-type="bibr" rid="CR23">23</xref>]. The Nanopore reads of lambda phage virus and <italic>S. cerevisiae</italic> CEN.PK113-7D were downloaded from NCBI Short Read Archive with accession numbers SRR12602365 and SRR5989372, respectively. The above data are also available at <ext-link ext-link-type="uri" xlink:href="https://github.com/ythuang0522/homopolish/tree/master/data">https://github.com/ythuang0522/homopolish/tree/master/data</ext-link>[<xref ref-type="bibr" rid="CR35">35</xref>].</p>
  </notes>
  <notes id="FPar1">
    <title>Ethics approval and consent to participate</title>
    <p>Not applicable.</p>
  </notes>
  <notes id="FPar2">
    <title>Consent for publication</title>
    <p>Not applicable.</p>
  </notes>
  <notes id="FPar3" notes-type="COI-statement">
    <title>Competing interests</title>
    <p>The authors declare that they have no competing interests.</p>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Miga</surname>
            <given-names>KH</given-names>
          </name>
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Rhie</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Vollger</surname>
            <given-names>MR</given-names>
          </name>
          <name>
            <surname>Gershman</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Bzikadze</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Brooks</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Howe</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Porubsky</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Logsdon</surname>
            <given-names>GA</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Telomere-to-telomere assembly of a complete human x chromosome</article-title>
        <source>Nature</source>
        <year>2020</year>
        <volume>585</volume>
        <issue>7823</issue>
        <fpage>79</fpage>
        <lpage>84</lpage>
        <pub-id pub-id-type="doi">10.1038/s41586-020-2547-7</pub-id>
        <pub-id pub-id-type="pmid">32663838</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jain</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Miga</surname>
            <given-names>KH</given-names>
          </name>
          <name>
            <surname>Quick</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Rand</surname>
            <given-names>AC</given-names>
          </name>
          <name>
            <surname>Sasani</surname>
            <given-names>TA</given-names>
          </name>
          <name>
            <surname>Tyson</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Beggs</surname>
            <given-names>AD</given-names>
          </name>
          <name>
            <surname>Dilthey</surname>
            <given-names>AT</given-names>
          </name>
          <name>
            <surname>Fiddes</surname>
            <given-names>IT</given-names>
          </name>
          <name>
            <surname>Malla</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Marriott</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Nieto</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>O’Grady</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Olsen</surname>
            <given-names>HE</given-names>
          </name>
          <name>
            <surname>Pedersen</surname>
            <given-names>BS</given-names>
          </name>
          <name>
            <surname>Rhie</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Richardson</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Quinlan</surname>
            <given-names>AR</given-names>
          </name>
          <name>
            <surname>Snutch</surname>
            <given-names>TP</given-names>
          </name>
          <name>
            <surname>Tee</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Paten</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Simpson</surname>
            <given-names>JT</given-names>
          </name>
          <name>
            <surname>Loman</surname>
            <given-names>NJ</given-names>
          </name>
          <name>
            <surname>Loose</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Nanopore sequencing and assembly of a human genome with ultra-long reads</article-title>
        <source>Nat Biotechnol</source>
        <year>2018</year>
        <volume>36</volume>
        <issue>4</issue>
        <fpage>338</fpage>
        <lpage>45</lpage>
        <pub-id pub-id-type="doi">10.1038/nbt.4060</pub-id>
        <pub-id pub-id-type="pmid">29431738</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Latorre-Pérez</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Villalba-Bermell</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Pascual</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Vilanova</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>Assembly methods for nanopore-based metagenomic sequencing: a comparative study</article-title>
        <source>Sci Rep</source>
        <year>2020</year>
        <volume>10</volume>
        <issue>1</issue>
        <fpage>13588</fpage>
        <pub-id pub-id-type="doi">10.1038/s41598-020-70491-3</pub-id>
        <pub-id pub-id-type="pmid">32788623</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wick</surname>
            <given-names>RR</given-names>
          </name>
          <name>
            <surname>Judd</surname>
            <given-names>LM</given-names>
          </name>
          <name>
            <surname>Gorrie</surname>
            <given-names>CL</given-names>
          </name>
          <name>
            <surname>Holt</surname>
            <given-names>KE</given-names>
          </name>
        </person-group>
        <article-title>Unicycler: resolving bacterial genome assemblies from short and long sequencing reads</article-title>
        <source>PLoS Comput Biol</source>
        <year>2017</year>
        <volume>13</volume>
        <issue>6</issue>
        <fpage>1005595</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1005595</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Walenz</surname>
            <given-names>BP</given-names>
          </name>
          <name>
            <surname>Berlin</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Miller</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Bergman</surname>
            <given-names>NH</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>AM</given-names>
          </name>
        </person-group>
        <article-title>Canu: scalable and accurate long-read assembly via adaptive k-mer weighting and repeat separation</article-title>
        <source>Genome Res</source>
        <year>2017</year>
        <volume>27</volume>
        <issue>5</issue>
        <fpage>722</fpage>
        <lpage>736</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.215087.116</pub-id>
        <pub-id pub-id-type="pmid">28298431</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Minimap and miniasm: fast mapping and de novo assembly for noisy long sequences</article-title>
        <source>Bioinformatics</source>
        <year>2016</year>
        <volume>32</volume>
        <issue>14</issue>
        <fpage>2103</fpage>
        <lpage>10</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btw152</pub-id>
        <pub-id pub-id-type="pmid">27153593</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kolmogorov</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Yuan</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Pevzner</surname>
            <given-names>PA</given-names>
          </name>
        </person-group>
        <article-title>Assembly of long, error-prone reads using repeat graphs</article-title>
        <source>Nat Biotechnol</source>
        <year>2019</year>
        <volume>37</volume>
        <issue>5</issue>
        <fpage>540</fpage>
        <lpage>6</lpage>
        <pub-id pub-id-type="doi">10.1038/s41587-019-0072-8</pub-id>
        <pub-id pub-id-type="pmid">30936562</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Shafin</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Pesout</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Lorig-Roach</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Haukness</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Olsen</surname>
            <given-names>HE</given-names>
          </name>
          <name>
            <surname>Bosworth</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Armstrong</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Tigyi</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Maurer</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Nanopore sequencing and the shasta toolkit enable efficient de novo assembly of eleven human genomes</article-title>
        <source>Nat Biotechnol</source>
        <year>2020</year>
        <volume>38</volume>
        <fpage>1044</fpage>
        <lpage>53</lpage>
        <pub-id pub-id-type="doi">10.1038/s41587-020-0503-6</pub-id>
        <pub-id pub-id-type="pmid">32686750</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Loman</surname>
            <given-names>NJ</given-names>
          </name>
          <name>
            <surname>Quick</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Simpson</surname>
            <given-names>JT</given-names>
          </name>
        </person-group>
        <article-title>A complete bacterial genome assembled de novo using only nanopore sequencing data</article-title>
        <source>Nat Methods</source>
        <year>2015</year>
        <volume>12</volume>
        <issue>8</issue>
        <fpage>733</fpage>
        <lpage>5</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.3444</pub-id>
        <pub-id pub-id-type="pmid">26076426</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Vaser</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Sović</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Nagarajan</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Šikić</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Fast and accurate de novo genome assembly from long uncorrected reads</article-title>
        <source>Genome Res</source>
        <year>2017</year>
        <volume>27</volume>
        <issue>5</issue>
        <fpage>737</fpage>
        <lpage>46</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.214270.116</pub-id>
        <pub-id pub-id-type="pmid">28100585</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wick</surname>
            <given-names>RR</given-names>
          </name>
          <name>
            <surname>Judd</surname>
            <given-names>LM</given-names>
          </name>
          <name>
            <surname>Holt</surname>
            <given-names>KE</given-names>
          </name>
        </person-group>
        <article-title>Performance of neural network basecalling tools for oxford nanopore sequencing</article-title>
        <source>Genome Biol</source>
        <year>2019</year>
        <volume>20</volume>
        <issue>1</issue>
        <fpage>129</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-019-1727-y</pub-id>
        <pub-id pub-id-type="pmid">31234903</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kolmogorov</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Bickhart</surname>
            <given-names>DM</given-names>
          </name>
          <name>
            <surname>Behsaz</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Gurevich</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Rayko</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Shin</surname>
            <given-names>SB</given-names>
          </name>
          <name>
            <surname>Kuhn</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Yuan</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Polevikov</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Smith</surname>
            <given-names>TP</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>metaflye: scalable long-read metagenome assembly using repeat graphs</article-title>
        <source>Nat Methods</source>
        <year>2020</year>
        <volume>17</volume>
        <issue>11</issue>
        <fpage>1103</fpage>
        <lpage>10</lpage>
        <pub-id pub-id-type="doi">10.1038/s41592-020-00971-x</pub-id>
        <pub-id pub-id-type="pmid">33020656</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13</label>
      <mixed-citation publication-type="other">Simpson J. Fastmer. 2018. <ext-link ext-link-type="uri" xlink:href="https://github.coeta/jts/assembly_accuracy">https://github.coeta/jts/assembly_accuracy</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR14">
      <label>14</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nicholls</surname>
            <given-names>SM</given-names>
          </name>
          <name>
            <surname>Quick</surname>
            <given-names>JC</given-names>
          </name>
          <name>
            <surname>Tang</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Loman</surname>
            <given-names>NJ</given-names>
          </name>
        </person-group>
        <article-title>Ultra-deep, long-read nanopore sequencing of mock microbial community standards</article-title>
        <source>Gigascience</source>
        <year>2019</year>
        <volume>8</volume>
        <issue>5</issue>
        <fpage>1</fpage>
        <lpage>9</lpage>
        <pub-id pub-id-type="doi">10.1093/gigascience/giz043</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tanizawa</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Fujisawa</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Nakamura</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>DFAST: a flexible prokaryotic genome annotation pipeline for faster genome publication</article-title>
        <source>Bioinformatics</source>
        <year>2017</year>
        <volume>34</volume>
        <issue>6</issue>
        <fpage>1037</fpage>
        <lpage>9</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btx713</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Parks</surname>
            <given-names>DH</given-names>
          </name>
          <name>
            <surname>Imelfort</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Skennerton</surname>
            <given-names>CT</given-names>
          </name>
          <name>
            <surname>Hugenholtz</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Tyson</surname>
            <given-names>GW</given-names>
          </name>
        </person-group>
        <article-title>Checkm: assessing the quality of microbial genomes recovered from isolates, single cells, and metagenomes</article-title>
        <source>Genome Res</source>
        <year>2015</year>
        <volume>25</volume>
        <issue>7</issue>
        <fpage>1043</fpage>
        <lpage>55</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.186072.114</pub-id>
        <pub-id pub-id-type="pmid">25977477</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ondov</surname>
            <given-names>BD</given-names>
          </name>
          <name>
            <surname>Treangen</surname>
            <given-names>TJ</given-names>
          </name>
          <name>
            <surname>Melsted</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Mallonee</surname>
            <given-names>AB</given-names>
          </name>
          <name>
            <surname>Bergman</surname>
            <given-names>NH</given-names>
          </name>
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>AM</given-names>
          </name>
        </person-group>
        <article-title>Mash: fast genome and metagenome distance estimation using MinHash</article-title>
        <source>Genome Biol</source>
        <year>2016</year>
        <volume>17</volume>
        <issue>1</issue>
        <fpage>132</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-016-0997-x</pub-id>
        <pub-id pub-id-type="pmid">27323842</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Minimap2: pairwise alignment for nucleotide sequences</article-title>
        <source>Bioinformatics</source>
        <year>2018</year>
        <volume>34</volume>
        <issue>18</issue>
        <fpage>3094</fpage>
        <lpage>100</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bty191</pub-id>
        <pub-id pub-id-type="pmid">29750242</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19</label>
      <mixed-citation publication-type="other">Albertsen M, Kirkegaard RH. Distributions and accuracy of homopolymers in Nanopore sequencing. 2020. <ext-link ext-link-type="uri" xlink:href="http://albertsenlab.org/wp-content/uploads/2020/02/R10.3_dist_len_hp.pdf">http://albertsenlab.org/wp-content/uploads/2020/02/R10.3_dist_len_hp.pdf</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR20">
      <label>20</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Robinson</surname>
            <given-names>JT</given-names>
          </name>
          <name>
            <surname>Thorvaldsdóttir</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Winckler</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Guttman</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Lander</surname>
            <given-names>ES</given-names>
          </name>
          <name>
            <surname>Getz</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Mesirov</surname>
            <given-names>JP</given-names>
          </name>
        </person-group>
        <article-title>Integrative genomics viewer</article-title>
        <source>Nat Biotechnol</source>
        <year>2011</year>
        <volume>29</volume>
        <issue>1</issue>
        <fpage>24</fpage>
        <lpage>26</lpage>
        <pub-id pub-id-type="doi">10.1038/nbt.1754</pub-id>
        <pub-id pub-id-type="pmid">21221095</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21</label>
      <mixed-citation publication-type="other">Garrison E, Marth GT. Haplotype-based variant detection from short-read sequencing. arXiv preprint arXiv:1207.3907.</mixed-citation>
    </ref>
    <ref id="CR22">
      <label>22</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Poplin</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Chang</surname>
            <given-names>P-C</given-names>
          </name>
          <name>
            <surname>Alexander</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Schwartz</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Colthurst</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Ku</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Newburger</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Dijamco</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Nguyen</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Afshar</surname>
            <given-names>PT</given-names>
          </name>
          <name>
            <surname>Gross</surname>
            <given-names>SS</given-names>
          </name>
          <name>
            <surname>Dorfman</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>McLean</surname>
            <given-names>CY</given-names>
          </name>
          <name>
            <surname>DePristo</surname>
            <given-names>MA</given-names>
          </name>
        </person-group>
        <article-title>A universal SNP and small-indel variant caller using deep neural networks</article-title>
        <source>Nat Biotechnol</source>
        <year>2018</year>
        <volume>36</volume>
        <issue>10</issue>
        <fpage>983</fpage>
        <lpage>987</lpage>
        <pub-id pub-id-type="doi">10.1038/nbt.4235</pub-id>
        <pub-id pub-id-type="pmid">30247488</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23</label>
      <mixed-citation publication-type="other">Albertsen M, Kirkegaard RH. E coli K12 MG1655. 2018. <ext-link ext-link-type="uri" xlink:href="https://albertsenlab.org/what-is-a-good-genome-assembly/">https://albertsenlab.org/what-is-a-good-genome-assembly/</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR24">
      <label>24</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bertels</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Silander</surname>
            <given-names>OK</given-names>
          </name>
          <name>
            <surname>Pachkov</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Rainey</surname>
            <given-names>PB</given-names>
          </name>
          <name>
            <surname>van Nimwegen</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <article-title>Automated reconstruction of whole-genome phylogenies from short-sequence reads</article-title>
        <source>Mol Biol Evol</source>
        <year>2014</year>
        <volume>31</volume>
        <issue>5</issue>
        <fpage>1077</fpage>
        <lpage>88</lpage>
        <pub-id pub-id-type="doi">10.1093/molbev/msu088</pub-id>
        <pub-id pub-id-type="pmid">24600054</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Letunic</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Bork</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Interactive tree of life (itol) v4: recent updates and new developments</article-title>
        <source>Nucleic Acids Res</source>
        <year>2019</year>
        <volume>47</volume>
        <issue>W1</issue>
        <fpage>256</fpage>
        <lpage>9</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkz239</pub-id>
      </element-citation>
    </ref>
    <ref id="CR26">
      <label>26</label>
      <mixed-citation publication-type="other">Huang Y-T, Shih P-W. Homopolish Github Repository. 2020. <ext-link ext-link-type="uri" xlink:href="https://github.com/ythuang0522/homopolish">https://github.com/ythuang0522/homopolish</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR27">
      <label>27</label>
      <mixed-citation publication-type="other">Huang Y-T, Shih P-W. Homopolish Code Ocean repository. 2020. <ext-link ext-link-type="uri" xlink:href="https://codeocean.com/capsule/1612663/tree">https://codeocean.com/capsule/1612663/tree</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR28">
      <label>28</label>
      <mixed-citation publication-type="other">Huang Y-T, Shih P-W. Homopolish Zenodo repository. 2020. <ext-link ext-link-type="uri" xlink:href="https://zenodo.org/record/4301655#X8dm9y8RpQI">https://zenodo.org/record/4301655#X8dm9y8RpQI</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR29">
      <label>29</label>
      <mixed-citation publication-type="other">Huang Y-T, Liu P-Y. Hybrid Nanopore and Illumina sequencing of Klebsiella pneumoniae SAWA. 2020. <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/nuccore/PKLG00000000">https://www.ncbi.nlm.nih.gov/nuccore/PKLG00000000</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR30">
      <label>30</label>
      <mixed-citation publication-type="other">Huang Y-T, Liu P-Y. Hybrid Nanopore and Illumina sequencing of Elizabethkingia anophelis SUE. 2020. <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/nuccore/CP034247">https://www.ncbi.nlm.nih.gov/nuccore/CP034247</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR31">
      <label>31</label>
      <mixed-citation publication-type="other">Huang Y-T, Liu P-Y. Hybrid Nanopore and Illumina sequencing of Shewanella algae VGH117. 2020. <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/nuccore/CP034246">https://www.ncbi.nlm.nih.gov/nuccore/CP034246</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR32">
      <label>32</label>
      <mixed-citation publication-type="other">Huang Y-T, Liu P-Y. Hybrid Nanopore and Illumina sequencing of Shewanella algae HIDE. 2020. <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/nuccore/CP032664">https://www.ncbi.nlm.nih.gov/nuccore/CP032664</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR33">
      <label>33</label>
      <mixed-citation publication-type="other">Huang Y-T, Liu P-Y. Hybrid Nanopore and Illumina sequencing of Proteus vulgaris CCU063. 2020. <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/nuccore/CP032663">https://www.ncbi.nlm.nih.gov/nuccore/CP032663</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR34">
      <label>34</label>
      <mixed-citation publication-type="other">Huang Y-T, Liu P-Y. Hybrid Nanopore and Illumina sequencing of Proteus vulgaris GOKU. 2020. <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/nuccore/CP034105">https://www.ncbi.nlm.nih.gov/nuccore/CP034105</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR35">
      <label>35</label>
      <mixed-citation publication-type="other">Huang Y-T, Shih P-W. Homopolish data repository. 2020. <ext-link ext-link-type="uri" xlink:href="https://github.com/ythuang0522/homopolish/tree/master/data">https://github.com/ythuang0522/homopolish/tree/master/data</ext-link>.</mixed-citation>
    </ref>
  </ref-list>
</back>

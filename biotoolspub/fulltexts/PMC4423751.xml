<?DTDIdentifier.IdentifierValue article.dtd?>
<?DTDIdentifier.IdentifierType system?>
<?SourceDTD.DTDName article.dtd?>
<?SourceDTD.Version 1.0?>
<?ConverterInfo.XSLTName bmc2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">4423751</article-id>
    <article-id pub-id-type="publisher-id">1471-2105-16-S7-S10</article-id>
    <article-id pub-id-type="doi">10.1186/1471-2105-16-S7-S10</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>MICA: A fast short-read aligner that takes full advantage of Many Integrated Core Architecture (MIC)</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" equal-contrib="yes" id="A1">
        <name>
          <surname>Luo</surname>
          <given-names>Ruibang</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>rbluo@cs.hku.hk</email>
      </contrib>
      <contrib contrib-type="author" equal-contrib="yes" id="A2">
        <name>
          <surname>Cheung</surname>
          <given-names>Jeanno</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>jeanno.cheung@gmail.com</email>
      </contrib>
      <contrib contrib-type="author" equal-contrib="yes" id="A3">
        <name>
          <surname>Wu</surname>
          <given-names>Edward</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>edwardmkwu@gmail.com</email>
      </contrib>
      <contrib contrib-type="author" equal-contrib="yes" id="A4">
        <name>
          <surname>Wang</surname>
          <given-names>Heng</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <xref ref-type="aff" rid="I2">2</xref>
        <email>wangheng0394@gmail.com</email>
      </contrib>
      <contrib contrib-type="author" id="A5">
        <name>
          <surname>Chan</surname>
          <given-names>Sze-Hang</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>shchan@cs.hku.hk</email>
      </contrib>
      <contrib contrib-type="author" id="A6">
        <name>
          <surname>Law</surname>
          <given-names>Wai-Chun</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>wclaw@cs.hku.hk</email>
      </contrib>
      <contrib contrib-type="author" id="A7">
        <name>
          <surname>He</surname>
          <given-names>Guangzhu</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>gzhe@cs.hku.hk</email>
      </contrib>
      <contrib contrib-type="author" id="A8">
        <name>
          <surname>Yu</surname>
          <given-names>Chang</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>chang.yu@intel.com</email>
      </contrib>
      <contrib contrib-type="author" id="A9">
        <name>
          <surname>Liu</surname>
          <given-names>Chi-Man</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>cmliu@cs.hku.hk</email>
      </contrib>
      <contrib contrib-type="author" id="A10">
        <name>
          <surname>Zhou</surname>
          <given-names>Dazong</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>dzzhou@hku.hk</email>
      </contrib>
      <contrib contrib-type="author" id="A11">
        <name>
          <surname>Li</surname>
          <given-names>Yingrui</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <xref ref-type="aff" rid="I3">3</xref>
        <email>liyr@genomics.org.cn</email>
      </contrib>
      <contrib contrib-type="author" id="A12">
        <name>
          <surname>Li</surname>
          <given-names>Ruiqiang</given-names>
        </name>
        <xref ref-type="aff" rid="I4">4</xref>
        <email>lirq@pku.edu.cn</email>
      </contrib>
      <contrib contrib-type="author" id="A13">
        <name>
          <surname>Wang</surname>
          <given-names>Jun</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <xref ref-type="aff" rid="I3">3</xref>
        <email>jwang@genomics.org.cn</email>
      </contrib>
      <contrib contrib-type="author" id="A14">
        <name>
          <surname>Zhu</surname>
          <given-names>Xiaoqian</given-names>
        </name>
        <xref ref-type="aff" rid="I2">2</xref>
        <email>zhuxq@nscc-tj.gov.cn</email>
      </contrib>
      <contrib contrib-type="author" id="A15">
        <name>
          <surname>Peng</surname>
          <given-names>Shaoliang</given-names>
        </name>
        <xref ref-type="aff" rid="I2">2</xref>
        <email>pengsl@nscc-tj.gov.cn</email>
      </contrib>
      <contrib contrib-type="author" corresp="yes" id="A16">
        <name>
          <surname>Lam</surname>
          <given-names>Tak-Wah</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <xref ref-type="aff" rid="I4">4</xref>
        <email>twlam@cs.hku.hk</email>
      </contrib>
    </contrib-group>
    <aff id="I1"><label>1</label>HKU-BGI Bioinformatics Algorithms and Core Technology Research Laboratory, The University of Hong Kong, Hong Kong</aff>
    <aff id="I2"><label>2</label>School of Computer Science, National University of Defense Technology, 410073, China</aff>
    <aff id="I3"><label>3</label>BGI-Shenzhen, Shenzhen, 518083, China</aff>
    <aff id="I4"><label>4</label>Department of Computer Science, The University of Hong Kong, Hong Kong</aff>
    <pub-date pub-type="collection">
      <year>2015</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>23</day>
      <month>4</month>
      <year>2015</year>
    </pub-date>
    <volume>16</volume>
    <issue>Suppl 7</issue>
    <supplement>
      <named-content content-type="supplement-title">Selected articles from The 11th Annual Biotechnology and Bioinformatics Symposium (BIOT-2014): Bioinformatics</named-content>
      <named-content content-type="supplement-editor">Perry Ridge, Mark Clement and Quinn Snell</named-content>
      <named-content content-type="supplement-sponsor">Publication of this supplement has not been supported by sponsorship. Information about the sources of funding for publication charges can be found in the individual articles. Articles have undergone the journal's standard peer review process for supplements. The Supplement Editors declare that they have no competing interests.</named-content>
    </supplement>
    <fpage>S10</fpage>
    <lpage>S10</lpage>
    <permissions>
      <copyright-statement>Copyright Â© 2015 Luo et al.; licensee BioMed Central Ltd.</copyright-statement>
      <copyright-year>2015</copyright-year>
      <copyright-holder>Luo et al.; licensee BioMed Central Ltd.</copyright-holder>
      <license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/4.0">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0">http://creativecommons.org/licenses/by/4.0</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="http://www.biomedcentral.com/1471-2105/16/S7/S10"/>
    <abstract>
      <sec>
        <title>Background</title>
        <p>Short-read aligners have recently gained a lot of speed by exploiting the massive parallelism of GPU. An uprising alterative to GPU is Intel MIC; supercomputers like Tianhe-2, currently top of TOP500, is built with 48,000 MIC boards to offer ~55 PFLOPS. The CPU-like architecture of MIC allows CPU-based software to be parallelized easily; however, the performance is often inferior to GPU counterparts as an MIC card contains only ~60 cores (while a GPU card typically has over a thousand cores).</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>To better utilize MIC-enabled computers for NGS data analysis, we developed a new short-read aligner MICA that is optimized in view of MIC's limitation and the extra parallelism inside each MIC core. By utilizing the 512-bit vector units in the MIC and implementing a new seeding strategy, experiments on aligning 150 bp paired-end reads show that MICA using one MIC card is 4.9 times faster than BWA-MEM (using 6 cores of a top-end CPU), and slightly faster than SOAP3-dp (using a GPU). Furthermore, MICA's simplicity allows very efficient scale-up when multiple MIC cards are used in a node (3 cards give a 14.1-fold speedup over BWA-MEM).</p>
      </sec>
      <sec>
        <title>Summary</title>
        <p>MICA can be readily used by MIC-enabled supercomputers for production purpose. We have tested MICA on Tianhe-2 with 90 WGS samples (17.47 Tera-bases), which can be aligned in an hour using 400 nodes. MICA has impressive performance even though MIC is only in its initial stage of development.</p>
      </sec>
      <sec>
        <title>Availability and implementation</title>
        <p>MICA's source code is freely available at <ext-link ext-link-type="uri" xlink:href="http://sourceforge.net/projects/mica-aligner">http://sourceforge.net/projects/mica-aligner</ext-link> under GPL v3.</p>
      </sec>
      <sec>
        <title>Supplementary information</title>
        <p>Supplementary information is available as "Additional File 1". Datasets are available at www.bio8.cs.hku.hk/dataset/mica.</p>
      </sec>
    </abstract>
    <conference>
      <conf-date>11-12 December 2014</conf-date>
      <conf-name>The 11th Annual Biotechnology and Bioinformatics Symposium (BIOT-2014)</conf-name>
      <conf-loc>Provo, UT USA</conf-loc>
    </conference>
  </article-meta>
</front>
<body>
  <sec sec-type="intro">
    <title>Introduction</title>
    <p>With the rapid advance of sequencing technologies, there is continuously demand for faster and faster analysis. The recently announced Illumina HiSeq Ã Ten sequencing system promises to sequence 18,000 whole human genomes (30x) in one year (four such systems can sequence more genomes than in all of history), while cutting the cost to $1,000 each. To cater to such capacity, it is important to develop new analysis software to fully utilize available acceleration hardware in addition to the CPU. For example, SOAP3-dp[<xref ref-type="bibr" rid="B1">1</xref>] uses a graphics processing unit (GPU) and is a few times faster than mainstream CPU aligners and delivers higher sensitivity. Besides GPU, attention has also fallen on Intel's new product Many Integrated Core (MIC), a.k.a. Xeon Phi Co-processor. MIC was introduced in 2011. It is an acceleration device whose hardware and system-software architecture support its use for general purpose computing. It is well suited to software implementations where computations on many thousands of data items can be carried out independently in parallel. The latest product has 57-61 cores and 8 GB of memory in one board, providing ~1 TFlops. Two of the top ten supercomputers in TOP500 (which ranks the world's 500 most powerful supercomputers) are equipped with MIC (Tianhe-2 has 48,000 MIC boards, and Stampede has 6,400 boards).</p>
    <p>Experience has shown, however, that it is not easy to build useful read alignment software using massive core architectures such as GPU and MIC. The apparent problem is that the most biologically relevant sequence-alignment algorithm[<xref ref-type="bibr" rid="B2">2</xref>,<xref ref-type="bibr" rid="B3">3</xref>] involves dynamic programming dependencies that are awkward to compute efficiently in parallel. The fastest GPU implementations of the algorithm to date relies on task parallelism[<xref ref-type="bibr" rid="B1">1</xref>], where each thread of execution computes an entire alignment independently of all other parallel threads. This, however, requires sequences to be aligned to have similar lengths to ensure balanced tasks distribution among cores. Another typical sequence alignment problem is that a short query sequence (100 to 250 bp) must be aligned with a comparatively long (3 Gbp or longer) reference sequence. Since a brute-force search for all candidate alignments in this setting would be computationally prohibitive, read aligners typically construct a list of candidate reference sequence locations within which potential alignments might be discovered. The size of a list depends on the complexity of the sequence to be aligned and this accounts for a significant proportion of the computational imbalance involved in read alignment using massive core architectures. Several high-throughput read aligners including BarraCUDA[<xref ref-type="bibr" rid="B4">4</xref>], CUSHAW[<xref ref-type="bibr" rid="B5">5</xref>] and SOAP3-dp[<xref ref-type="bibr" rid="B1">1</xref>] that utilize GPU acceleration have been developed in the past few years, but to this date, limited studies have been carried out on short read alignment using MIC. This paper introduces MICA, a new short-read aligner designed to fully utilize the computing power of MIC.</p>
  </sec>
  <sec sec-type="methods">
    <title>Method</title>
    <p>MICA accepts input reads in FASTA/FASTQ format and outputs alignment results in SAM/BAM format. In a typical setting, MICA runs on a server (host) equipped with 1 to 3 MIC cards. MICA runs each MIC using the offload mode (instead of native mode) to exploit the host's memory and provide better I/O performance. The latter is important when dealing with large volume of sequencing data. For each MIC card, MICA maintains a CPU thread in the host called an MIC-controller, which feeds the MIC with around million reads each time and spawns 224 MIC threads (running on 56 cores) to align the reads in parallel. At the end, the alignment results are copied to the MIC-controller for output (Figure <xref ref-type="fig" rid="F1">1</xref>). Note that reads with different complexities vary in aligning time. To achieve maximum throughput, MICA dynamically balances the load of the threads to avoid unnecessary idling.</p>
    <fig id="F1" position="float">
      <label>Figure 1</label>
      <caption>
        <p><bold>MICA's architecture: interaction between the host and MIC cards</bold>.</p>
      </caption>
      <graphic xlink:href="1471-2105-16-S7-S10-1"/>
    </fig>
    <p>Algorithmically, MICA maintains a BWT index in each MIC, and it adopts SOAP3-dp's approach to align reads shorter than 150 bp, and uses a new approach to handle longer reads. SOAP3-dp was designed for HiSeq 2000 paired-end reads of 100 bp; its efficiency stems from the fact that a GPU, with a 2 way-BWT index[<xref ref-type="bibr" rid="B6">6</xref>], can efficiently align at least one end of a paired-end read with 0-2 mismatches; the other end can be aligned using dynamic programming in the GPU. For longer reads (150 bp or more), SOAP3-dp deteriorates in sensitivity and speed because GPU is inefficient to align with more mismatches using the index. Thus, we need a new approach. In the following, we divide the discussion into two parts: the first part describes the techniques on how to utilize the resources of MIC to match the performance of SOAP3-dp on GPU, and the second part is about the new techniques for aligning reads.</p>
    <p>Our experiment revealed that an MIC core was 4 to 6 times slower than a CPU core when running programs designed for CPU, and an MIC with 57 cores might be comparable to a 12-core CPU when used for brute-force parallelization of a CPU program. Noteworthy, each MIC core has thirty-two 512-bit registers; each allows sixteen 32-bit data to be operated in parallel. Such extra parallelism, if exploited properly, can boost the efficiency dramatically. This requires a lot of engineering work, though. Our first success is on the BWT index, MICA exploits 512-bit operations to speed up different arithmetic and memory transaction operations when querying the BWT (SOAP3-dp is based on 64-bit operations). Next, we turn to dynamic programming, which is for aligning reads allowing indels and soft clipping. Below we give the details of a new parallel algorithm for dynamic programming that can utilize the 512-bit registers.</p>
    <sec>
      <title>A. Highly parallel dynamic programming</title>
      <p>To align a read of length <italic>m </italic>and a reference region of length <italic>n </italic>by DP, the traditional approach (Figure <xref ref-type="fig" rid="F2">2</xref>) needs to fill a 2-dimenional table (denoted <italic>T</italic>[<italic>n</italic>,<italic>m</italic>]), in which <italic>T</italic>[<italic>i</italic>, <italic>j</italic>] is determined by <italic>T</italic>[<italic>i</italic>-1,<italic>j</italic>-1], <italic>T</italic>[<italic>i</italic>-1,<italic>j</italic>] and <italic>T</italic>[<italic>i</italic>, <italic>j</italic>-1] (upper, upper-left and left dependencies). Such dependencies force us to compute consecutive entries on a row (or a column) one by one.</p>
      <fig id="F2" position="float">
        <label>Figure 2</label>
        <caption>
          <p><bold>Traditional approach to Dynamic Programming</bold>.</p>
        </caption>
        <graphic xlink:href="1471-2105-16-S7-S10-2"/>
      </fig>
      <p>To circumvent sequential dependencies, we represent this table in the diagonal order as a single array (Figure <xref ref-type="fig" rid="F3">3</xref>), i.e., <italic>T</italic>[<italic>i</italic>, <italic>j</italic>] is followed by <italic>T</italic>[<italic>i</italic>-1,<italic>j</italic>+1], <italic>T</italic>[<italic>i</italic>-2,<italic>j</italic>+2], and so on. This representation allows us to fill 16 entries of the table in one step. To fill <italic>T</italic>[<italic>i</italic>, <italic>j</italic>], <italic>T</italic>[<italic>i</italic>-1, <italic>j</italic>+1],..., <italic>T</italic>[<italic>i</italic>-15, <italic>j</italic>+15] in a single iteration, we need to load 16 entries from 3 memory locations beginning from <italic>T</italic>[<italic>i</italic>-1, <italic>j</italic>-<italic>i</italic>], <italic>T</italic>[<italic>i</italic>-1, <italic>j</italic>] and <italic>T</italic>[<italic>i</italic>, <italic>j</italic>-1]. Another concern is that the number of memory transactions in each core is an important factor to the overall efficiency. To minimize the number of memory transactions, for each entry, we pack all the necessary information (including the read and reference nucleotide) required for calculation into a 32-bit entry in the DP table and the memory transactions are reduced to loading only three 512-bit vectors of the DP table; The number "three" comes from the affine gap penalty model, which requires to compute three DP tables <italic>M</italic>, <italic>I</italic>, <italic>D </italic>to store the optimal score when aligning up to each position with the last character being a Match, Insert or Delete, respectively. To reduce memory transactions by increasing locality, the <italic>M</italic>, <italic>I</italic>, <italic>D </italic>values for each <italic>i</italic>, <italic>j </italic>are packed into <italic>T</italic>[<italic>i</italic>, <italic>j</italic>].</p>
      <fig id="F3" position="float">
        <label>Figure 3</label>
        <caption>
          <p><bold>MICA's approach to Dynamic Programming</bold>.</p>
        </caption>
        <graphic xlink:href="1471-2105-16-S7-S10-3"/>
      </fig>
    </sec>
    <sec>
      <title>B. New seeding strategies</title>
      <p>For longer reads, we can only afford to use the BWT to align short fragments of a read (i.e., the seeds) and then count on dynamic programming to verify the candidate positions of the seed. Ideally we want fewer seeds (to save time on seed alignment) and the seeds should return correct candidate positions without too many incorrect ones (to save time on dynamic programming). MICA attempts to improve SOAP3-dp and other aligners by using as few seeds as possible, while maintains a balance between efficiency (fast &amp; do not give too many candidates) and sensitivity (capture correct candidate positions for more reads). MICA uses a combination of the following strategies.</p>
      <sec>
        <title>a) Non-branching mismatches</title>
        <p>MICA allows more mismatches during seed alignment but without sacrificing efficiency. SOAP3-dp allows only one mismatch as the time for seed alignment increases exponentially with the number of mismatches (due to the branching of the search tree). We observe that very often a mismatch is unambiguous and there is exactly one way to correct it according to the reference genome. MICA allows 1-2 "non-branching" mismatches in addition to one "branching" mismatch for seed alignment.</p>
        <p>In details, when performing alignment, we take a single character in the read and extend it character by character and check if the pattern exists in the reference genome. We call it a mismatch when we try to extend it such that the character in the read does not match the corresponding character in the reference genome. We can classify the mismatches into two types, branching mismatches (BM) and non-branching mismatches (NBM) (Figure <xref ref-type="fig" rid="F4">4</xref>). (a) When a NBM occurs, the current character in the read does not allow an extension, but there is another unique character that allows an extension. (b) When a BM occurs, there are at least 2 characters allowing an extension, one of them can be the character in the read, and we choose to extend it with a mismatch character.</p>
        <fig id="F4" position="float">
          <label>Figure 4</label>
          <caption>
            <p><bold>Illustration of branching mismatches (BM) and non-branching mismatches (NBM)</bold>.</p>
          </caption>
          <graphic xlink:href="1471-2105-16-S7-S10-4"/>
        </fig>
        <p>For computing purposes, a BM increases the number of possible extensions much more than a NBM, and is more time-consuming to handle. Yet, we observed that very often a mismatch is unambiguous and there is exactly one way to correct it according to the reference genome (i.e. it is a NBM). Therefore, we allow MICA to find alignments with up to 2 non-branching mismatches, in addition to the 1 branching mismatch for seed alignment. This approach discovers more seeds than the "1 mismatch only" approach.</p>
      </sec>
      <sec>
        <title>b) Read-sensitive seed length</title>
        <p>MICA dynamically adjusts the seed length depending on the content of the read. If a region of the read appears to be non-repetitive, it uses a shorter seed to avoid missing critical candidate positions; for a region that appears to be repetitive, we choose a long seed to reduce the number of candidates.</p>
        <p>More specifically, MICA follows SOAP3-dp's design for rapidly aligning those reads with &lt; 3 mismatches and without an Indel, leaving those reads failed to be aligned (with â¥ 3 mismatches or with â¥ 1 Indel) to the Dynamic Programming (DP) module. This rapid mode works efficiently with 100 bp paired-end reads, where the slower DP module handles only about 10% of the reads. However, new sequencers such as Illumina HiSeq Ã Ten, produces paired-end reads 150 bp in length. The probability of a 150 bp read to span â¥ 3 mismatches or an Indel is higher than that of 100 bp, empirically forcing the DP module to handle 30-40% of the reads, which slows down the performance of MICA significantly. To enable MICA to work with 150 bp or longer reads efficiently, we have redesigned the workflow by disabling the rapid mode and using multiple rounds of seed discovery in the DP module to catch up to the speed. The longer seed lengths required in the former rounds limit the number of candidate alignment regions, where the shorter seed lengths in the latter rounds ensure the sensitivity, but requiring much more computation due to the large number of candidate alignment regions to be verified. Most reads with fewer mismatches and Indels thus could be aligned in the former rounds, leaving complicated reads for the latter rounds, which are more computationally demanding.</p>
        <p>Table <xref ref-type="table" rid="T1">1</xref> gives the implementation details of each round as in the latest version of MICA. The details of SOAP3-dp are also provided for comparison.</p>
        <table-wrap id="T1" position="float">
          <label>Table 1</label>
          <caption>
            <p>MICA and SOAP3-dp seeding details.</p>
          </caption>
          <table frame="hsides" rules="groups">
            <thead>
              <tr>
                <th align="center" colspan="4">MICA:</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="center">
                  <bold>Round</bold>
                </td>
                <td align="center">
                  <bold>Seed Length</bold>
                </td>
                <td align="center">
                  <bold>Seed Overlap</bold>
                </td>
                <td align="center">
                  <bold>Seed # Limit</bold>
                </td>
              </tr>
              <tr>
                <td colspan="4">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="center">Round 0</td>
                <td align="center">140</td>
                <td align="center">0</td>
                <td align="center">1,000</td>
              </tr>
              <tr>
                <td colspan="4">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="center">Round 1</td>
                <td align="center">80</td>
                <td align="center">0</td>
                <td align="center">1,000</td>
              </tr>
              <tr>
                <td colspan="4">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="center">Round 2</td>
                <td align="center">46</td>
                <td align="center">0</td>
                <td align="center">100</td>
              </tr>
              <tr>
                <td colspan="4">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="center" colspan="4">SOAP3-dp DP module:</td>
              </tr>
              <tr>
                <td colspan="4">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="center">Round 1</td>
                <td align="center">28</td>
                <td align="center">20</td>
                <td align="center">100</td>
              </tr>
              <tr>
                <td colspan="4">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="center">Round 2</td>
                <td align="center">32</td>
                <td align="center">28</td>
                <td align="center">1,000</td>
              </tr>
            </tbody>
          </table>
          <table-wrap-foot>
            <p>"Seed Overlap" means the maximum overlap between two seeds when extracting seeds from a read.</p>
          </table-wrap-foot>
        </table-wrap>
      </sec>
      <sec>
        <title>c) Breaking seeds at variant positions</title>
        <p>MICA also tries to exclude read positions that are suspicious to be errors or variants (especially Indels) as part of a seed.</p>
        <p>The above seeding strategies are used in multiple rounds with different parameters to attain better speed without sacrificing sensitivity. The superior sensitivity of the seeds allows MICA to pair up the candidate positions from both ends of almost all reads before the DP. This saves a lot of time on verifying incorrect positions.</p>
      </sec>
    </sec>
  </sec>
  <sec sec-type="results">
    <title>Results</title>
    <sec>
      <title>A. Software settings and machine specifications</title>
      <p><italic>a) MICA: </italic>Version r178. Compiled with Intel C/C++ Compiler version 13.1; one to three 57-core MIC cards (8G, ECC enabled), each coupled with a CPU core; and one CPU core for output (in SAM format).</p>
      <p><italic>b) SOAP3-dp: </italic>Version r176. Compiled with GCC 4.7.2 and CUDA SDK 5.5; one nVidia GeForce GTX680 (4G); 4 CPU cores; serial BAM output.</p>
      <p><italic>c) BWA-MEM: </italic>Version 0.7.5a. Compiled with GCC 4.7.2; 6 CPU cores. SAM output.</p>
      <p><italic>d) In general: </italic>Besides the acceleration devices (MIC/GPU), all other hardware is the same for all experiments. Specifically, Intel i7-3730k, 6-core @3.2 GHz, 64G memory</p>
    </sec>
    <sec>
      <title>B. Real data comparison with other aligners</title>
      <p>We used 77-fold depth of 150 bp Illumina paired-end reads of the YH samples [<xref ref-type="bibr" rid="B7">7</xref>] (PE150) to benchmark MICA and other state-of-the-art aligners including GPU-based SOAP3-dp [<xref ref-type="bibr" rid="B1">1</xref>] and CPU-based BWA-MEM [<xref ref-type="bibr" rid="B8">8</xref>]. The results are shown in Table <xref ref-type="table" rid="T2">2</xref>. The figures were calculated as the average of three repeated runs, and a tailor-made setting was used for each aligner to ensure the best performance. For the PE150 dataset, MICA using one card is ~4.9 times faster than BWA-MEM and slightly faster than SOAP3-dp. The speed of MICA can be scaled up almost linearly with additional cards. When using three cards, MICA is ~14.1 times faster than BWA-MEM. MICA's sensitivity is 3.1% and 0.47% higher than BWA-MEM and SOAP3-dp, respectively.</p>
      <table-wrap id="T2" position="float">
        <label>Table 2</label>
        <caption>
          <p>Performance of MICA, SOAP3-dp and BWA-MEM on experimental data.</p>
        </caption>
        <table frame="hsides" rules="groups">
          <thead>
            <tr>
              <th align="center">Dataset</th>
              <th align="center">Volume (Gbp)</th>
              <th align="center"># of Read Pairs (M)</th>
              <th align="center">Fold</th>
              <th align="center" colspan="6">MICA</th>
              <th align="center" colspan="2">SOAP3-dp</th>
              <th align="center" colspan="2">BWA-MEM</th>
            </tr>
            <tr>
              <th/>
              <th/>
              <th/>
              <th/>
              <th colspan="10">
                <hr/>
              </th>
            </tr>
            <tr>
              <th/>
              <th/>
              <th/>
              <th/>
              <th align="center">1 card</th>
              <th align="center">2 cards</th>
              <th align="center">2 cards<break/>scale-up</th>
              <th align="center">3 cards</th>
              <th align="center">3 cards scale-up</th>
              <th align="center">Properly paired</th>
              <th align="center">1 card</th>
              <th align="center">Properly paired</th>
              <th align="center">6 cores</th>
              <th align="center">Properly paired</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="center">PE150</td>
              <td align="center">232.15</td>
              <td align="center">773.83</td>
              <td align="center">77.38</td>
              <td align="center">20,919 s<break/>(5.81 hr)</td>
              <td align="center">10,618 s<break/>(2.95 hr)</td>
              <td align="center">1.97x</td>
              <td align="center">7,183 s<break/>(2.00 hr)</td>
              <td align="center">2.91x</td>
              <td align="center">95.48%</td>
              <td align="center">25,878 s<break/>(7.19 hr)</td>
              <td align="center">95.01%</td>
              <td align="center">101,466 s<break/>(28.19 hr)</td>
              <td align="center">92.32%</td>
            </tr>
            <tr>
              <td colspan="14">
                <hr/>
              </td>
            </tr>
            <tr>
              <td align="center">PE100</td>
              <td align="center">148.43</td>
              <td align="center">742.16</td>
              <td align="center">49.48</td>
              <td align="center">15,879 s<break/>(4.41 hr)</td>
              <td align="center">8,093 s<break/>(2.25 hr)</td>
              <td align="center">1.96x</td>
              <td align="center">5,453 s<break/>(1.51 hr)</td>
              <td align="center">2.91x</td>
              <td align="center">97.23%</td>
              <td align="center">17,982 s<break/>(5.00 hr)</td>
              <td align="center">97.08%</td>
              <td align="center">53,832 s<break/>(14.95 hr)</td>
              <td align="center">95.74%</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      <p>We have also benchmarked 100 bp paired-end reads [<xref ref-type="bibr" rid="B7">7</xref>] (PE100, ~49-fold). Interestingly, MICA's acceleration on PE150 is slightly more significant than on PE100. For the latter, MICA is ~3.4 and ~9.9 times faster than BWA-MEM when using one and three MIC cards, respectively. When processing many shorter reads, MICA has a bottleneck in accessing the memory.</p>
    </sec>
    <sec>
      <title>A. Simulated data comparison with other aligners</title>
      <p>We carried out simulated data test with short read simulator Mason[<xref ref-type="bibr" rid="B9">9</xref>] to assess the accuracy and sensitivity of MICA. We tested with 2 sets (100 bp and 150 bp) of 6M Illumina-style paired-end (PE) reads with 500 bp insert size from GRCh37 major build.</p>
      <p>Bowtie2[<xref ref-type="bibr" rid="B10">10</xref>], SeqAlto[<xref ref-type="bibr" rid="B11">11</xref>] and GEM[<xref ref-type="bibr" rid="B12">12</xref>] allow users to sacrifice accuracy and sensitivity for speed with switches. We applied "very-fast", "sensitive", and "very-sensitive" switches to Bowtie2, "fast (-f)" to SeqAlto, and "fast adaptive (--fast-mapping)", "fastest (--fast-mapping = 0)" to GEM. We used indices with full suffix array (SA) for SOAP3-dp. All parameters of MICA, SOAP3-dp and SOAP3 were set to default, and parameters for other aligners including BWAaln and CUSHAW2[<xref ref-type="bibr" rid="B13">13</xref>,<xref ref-type="bibr" rid="B14">14</xref>] were set to favor the two read types and length. 13 sets of programs and parameters were compared in total.</p>
      <p>In both 100 bp and 150 bp datasets, MICA is comparable to SOAP3-dp. MICA has advantage over other tools with higher speed, higher sensitivity and lower FDR results (Table <xref ref-type="table" rid="T3">3</xref> for 100 bp PE, and 150 bp table in supplementary).</p>
      <table-wrap id="T3" position="float">
        <label>Table 3</label>
        <caption>
          <p>Comparison on 13 sets of programs and parameters using 100 bp paired-end simulated reads.</p>
        </caption>
        <table frame="hsides" rules="groups">
          <thead>
            <tr>
              <th align="left" colspan="3">6M 100 bp Paired-end reads, 1.2 Gbp bases. 500 bp insert size, 25 bp standard deviation.</th>
              <th align="left">MIC</th>
              <th align="left" colspan="2">GPU</th>
              <th align="left" colspan="10">CPU</th>
            </tr>
            <tr>
              <th/>
              <th/>
              <th/>
              <th colspan="13">
                <hr/>
              </th>
            </tr>
            <tr>
              <th/>
              <th/>
              <th/>
              <th align="left">MICA(1 MIC Card, 240 threads)</th>
              <th align="left">SOAP3-dp</th>
              <th align="left">SOAP3</th>
              <th align="left">Bowtie2<break/>(Sensititve)</th>
              <th align="left">Bowtie2<break/>(Very-Sensititve)</th>
              <th align="left">Bowtie2<break/>(Very-fast)</th>
              <th align="left">BWA<sup>1</sup></th>
              <th align="left">SeqAlto</th>
              <th align="left">SeqAlto<break/>(Fast alignement)</th>
              <th align="left">CUSHAW2</th>
              <th align="left">GEM<sup>2</sup></th>
              <th align="left">GEM<sup>2</sup><break/>(Fast Mapping: adaptive)</th>
              <th align="left">GEM<sup>2</sup><break/>(Fast Mapping: 0)</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">Configuration</td>
              <td align="left" colspan="2">CPU (thread: core i7-3930k)</td>
              <td align="left">
                <bold>1</bold>
              </td>
              <td align="left">4</td>
              <td align="left">4</td>
              <td align="left">4</td>
              <td align="left">4</td>
              <td align="left">4</td>
              <td align="left">4</td>
              <td align="left">4</td>
              <td align="left">4</td>
              <td align="left">4</td>
              <td align="left">4</td>
              <td align="left">4</td>
              <td align="left">4</td>
            </tr>
            <tr>
              <td/>
              <td colspan="15">
                <hr/>
              </td>
            </tr>
            <tr>
              <td/>
              <td align="left" colspan="2">GPU (device: GTX680)</td>
              <td align="left">
                <bold>0</bold>
              </td>
              <td align="left">1</td>
              <td align="left">1</td>
              <td align="left">0</td>
              <td align="left">0</td>
              <td align="left">0</td>
              <td align="left">0</td>
              <td align="left">0</td>
              <td align="left">0</td>
              <td align="left">0</td>
              <td align="left">0</td>
              <td align="left">0</td>
              <td align="left">0</td>
            </tr>
            <tr>
              <td colspan="16">
                <hr/>
              </td>
            </tr>
            <tr>
              <td align="left">Computational Resources</td>
              <td align="left">Total Elapsed</td>
              <td align="left">sec.</td>
              <td align="left">
                <bold>178</bold>
              </td>
              <td align="left">162</td>
              <td align="left">132</td>
              <td align="left">966</td>
              <td align="left">1974</td>
              <td align="left">672</td>
              <td align="left">1154</td>
              <td align="left">495</td>
              <td align="left">379</td>
              <td align="left">1303</td>
              <td align="left">416</td>
              <td align="left">446</td>
              <td align="left">298</td>
            </tr>
            <tr>
              <td/>
              <td/>
              <td colspan="14">
                <hr/>
              </td>
            </tr>
            <tr>
              <td/>
              <td/>
              <td align="left">Fold</td>
              <td align="left">
                <bold>0.76</bold>
              </td>
              <td align="left">1.23</td>
              <td align="left">1.00</td>
              <td align="left">7.32</td>
              <td align="left">14.95</td>
              <td align="left">5.09</td>
              <td align="left">8.74</td>
              <td align="left">3.75</td>
              <td align="left">2.87</td>
              <td align="left">9.87</td>
              <td align="left">3.15</td>
              <td align="left">3.38</td>
              <td align="left">2.26</td>
            </tr>
            <tr>
              <td/>
              <td colspan="15">
                <hr/>
              </td>
            </tr>
            <tr>
              <td/>
              <td align="left">Loading Index<sup>3</sup></td>
              <td align="left">sec.</td>
              <td align="left">
                <bold>83</bold>
              </td>
              <td align="left">74</td>
              <td align="left">74</td>
              <td align="left">38</td>
              <td align="left">38</td>
              <td align="left">38</td>
              <td align="left">53+1+1</td>
              <td align="left">96</td>
              <td align="left">96</td>
              <td align="left">40</td>
              <td align="left">40+1</td>
              <td align="left">40+1</td>
              <td align="left">40+1</td>
            </tr>
            <tr>
              <td/>
              <td colspan="15">
                <hr/>
              </td>
            </tr>
            <tr>
              <td/>
              <td align="left">Alignment<sup>4</sup></td>
              <td align="left">sec.</td>
              <td align="left">
                <bold>95</bold>
              </td>
              <td align="left">88</td>
              <td align="left">58</td>
              <td align="left">928</td>
              <td align="left">1936</td>
              <td align="left">634</td>
              <td align="left">370+369+360</td>
              <td align="left">399</td>
              <td align="left">283</td>
              <td align="left">1263</td>
              <td align="left">199+176</td>
              <td align="left">238+167</td>
              <td align="left">90+167</td>
            </tr>
            <tr>
              <td/>
              <td/>
              <td colspan="14">
                <hr/>
              </td>
            </tr>
            <tr>
              <td/>
              <td/>
              <td align="left">Fold</td>
              <td align="left">
                <bold>0.95</bold>
              </td>
              <td align="left">0.88</td>
              <td align="left">0.58</td>
              <td align="left">9.28</td>
              <td align="left">19.36</td>
              <td align="left">6.34</td>
              <td align="left">10.99</td>
              <td align="left">3.99</td>
              <td align="left">2.83</td>
              <td align="left">12.63</td>
              <td align="left">3.75</td>
              <td align="left">4.05</td>
              <td align="left">2.57</td>
            </tr>
            <tr>
              <td/>
              <td colspan="15">
                <hr/>
              </td>
            </tr>
            <tr>
              <td/>
              <td align="left">Avg. Memory</td>
              <td align="left">GB</td>
              <td align="left">
                <bold>25.2</bold>
              </td>
              <td align="left">17.2</td>
              <td align="left">17.3</td>
              <td align="left">3.3</td>
              <td align="left">3.3</td>
              <td align="left">3.3</td>
              <td align="left">3.5</td>
              <td align="left">7</td>
              <td align="left">6.9</td>
              <td align="left">3.6</td>
              <td align="left">4.3</td>
              <td align="left">4.3</td>
              <td align="left">4.3</td>
            </tr>
            <tr>
              <td/>
              <td colspan="15">
                <hr/>
              </td>
            </tr>
            <tr>
              <td/>
              <td align="left">Peak Memory</td>
              <td align="left">GB</td>
              <td align="left">
                <bold>29.9</bold>
              </td>
              <td align="left">18.1</td>
              <td align="left">19.2</td>
              <td align="left">3.5</td>
              <td align="left">3.5</td>
              <td align="left">3.5</td>
              <td align="left">4.8</td>
              <td align="left">7.2</td>
              <td align="left">7.2</td>
              <td align="left">3.6</td>
              <td align="left">4.3</td>
              <td align="left">4.3</td>
              <td align="left">4.3</td>
            </tr>
            <tr>
              <td colspan="16">
                <hr/>
              </td>
            </tr>
            <tr>
              <td align="left">Alignment Metrics</td>
              <td align="left">Aligned</td>
              <td align="left">#</td>
              <td align="left">
                <bold>11,999,810 </bold>
              </td>
              <td align="left">11,999,827</td>
              <td align="left">11,870,740</td>
              <td align="left">11,999,763</td>
              <td align="left">11,999,936</td>
              <td align="left">11,998,226</td>
              <td align="left">11,998,804</td>
              <td align="left">12,000,000</td>
              <td align="left">11,995,872</td>
              <td align="left">11,999,975</td>
              <td align="left">11,999,763</td>
              <td align="left">11,999,484</td>
              <td align="left">11,995,422</td>
            </tr>
            <tr>
              <td/>
              <td/>
              <td colspan="14">
                <hr/>
              </td>
            </tr>
            <tr>
              <td/>
              <td/>
              <td align="left">Diff.</td>
              <td align="left">
                <bold>-</bold>
              </td>
              <td align="left">17</td>
              <td align="left">-129,070</td>
              <td align="left">-47</td>
              <td align="left">126</td>
              <td align="left">-1,584</td>
              <td align="left">-1,006</td>
              <td align="left">190</td>
              <td align="left">-3,938</td>
              <td align="left">165</td>
              <td align="left">-47</td>
              <td align="left">-326</td>
              <td align="left">-4,388</td>
            </tr>
            <tr>
              <td/>
              <td colspan="15">
                <hr/>
              </td>
            </tr>
            <tr>
              <td/>
              <td align="left">Properly Paired</td>
              <td align="left">#</td>
              <td align="left">
                <bold>11999668</bold>
              </td>
              <td align="left">11,999,460</td>
              <td align="left">11,742,902</td>
              <td align="left">11,998,912</td>
              <td align="left">11,999,344</td>
              <td align="left">11,996,528</td>
              <td align="left">11,997,254</td>
              <td align="left">11,999,976</td>
              <td align="left">11,995,410</td>
              <td align="left">11,977,218</td>
              <td align="left">11,998,994</td>
              <td align="left">11,997,702</td>
              <td align="left">11,991,992</td>
            </tr>
            <tr>
              <td/>
              <td/>
              <td colspan="14">
                <hr/>
              </td>
            </tr>
            <tr>
              <td/>
              <td/>
              <td align="left">Diff.</td>
              <td align="left">
                <bold>-</bold>
              </td>
              <td align="left">-208</td>
              <td align="left">-256766</td>
              <td align="left">-756</td>
              <td align="left">-324</td>
              <td align="left">-3140</td>
              <td align="left">-2414</td>
              <td align="left">308</td>
              <td align="left">-4258</td>
              <td align="left">-22450</td>
              <td align="left">-674</td>
              <td align="left">-1966</td>
              <td align="left">-7676</td>
            </tr>
            <tr>
              <td/>
              <td colspan="15">
                <hr/>
              </td>
            </tr>
            <tr>
              <td/>
              <td align="left">Incorrectly Aligned</td>
              <td align="left">#</td>
              <td align="left">
                <bold>48,184 </bold>
              </td>
              <td align="left">40,561</td>
              <td align="left">138,655</td>
              <td align="left">143,012</td>
              <td align="left">141,373</td>
              <td align="left">147,764</td>
              <td align="left">85,297</td>
              <td align="left">95,672</td>
              <td align="left">99,243</td>
              <td align="left">99,243</td>
              <td align="left">56,514</td>
              <td align="left">61,642</td>
              <td align="left">61,887</td>
            </tr>
            <tr>
              <td/>
              <td/>
              <td colspan="14">
                <hr/>
              </td>
            </tr>
            <tr>
              <td/>
              <td/>
              <td align="left">Diff.</td>
              <td align="left">
                <bold>-</bold>
              </td>
              <td align="left">-7,623</td>
              <td align="left">90,471</td>
              <td align="left">94,828</td>
              <td align="left">93,189</td>
              <td align="left">99,580</td>
              <td align="left">37,113</td>
              <td align="left">47,488</td>
              <td align="left">51,059</td>
              <td align="left">51,059</td>
              <td align="left">8,330</td>
              <td align="left">13,458</td>
              <td align="left">13,703</td>
            </tr>
            <tr>
              <td/>
              <td colspan="15">
                <hr/>
              </td>
            </tr>
            <tr>
              <td/>
              <td align="left">Sensitivity<sup>5</sup></td>
              <td align="left">%</td>
              <td align="left">
                <bold>99.60%</bold>
              </td>
              <td align="left">99.66%</td>
              <td align="left">97.77%</td>
              <td align="left">98.81%</td>
              <td align="left">98.82%</td>
              <td align="left">98.75%</td>
              <td align="left">99.28%</td>
              <td align="left">99.20%</td>
              <td align="left">99.14%</td>
              <td align="left">99.17%</td>
              <td align="left">99.53%</td>
              <td align="left">99.48%</td>
              <td align="left">99.45%</td>
            </tr>
            <tr>
              <td/>
              <td/>
              <td colspan="14">
                <hr/>
              </td>
            </tr>
            <tr>
              <td/>
              <td/>
              <td align="left">Diff.</td>
              <td align="left">
                <bold>-</bold>
              </td>
              <td align="left">0.06%</td>
              <td align="left">-1.83%</td>
              <td align="left">-0.79%</td>
              <td align="left">-0.78%</td>
              <td align="left">-0.85%</td>
              <td align="left">-0.32%</td>
              <td align="left">-0.40%</td>
              <td align="left">-0.46%</td>
              <td align="left">-0.43%</td>
              <td align="left">-0.07%</td>
              <td align="left">-0.12%</td>
              <td align="left">-0.15%</td>
            </tr>
            <tr>
              <td/>
              <td colspan="15">
                <hr/>
              </td>
            </tr>
            <tr>
              <td/>
              <td align="left">FDR<sup>6</sup></td>
              <td align="left">%</td>
              <td align="left">
                <bold>0.40%</bold>
              </td>
              <td align="left">0.34%</td>
              <td align="left">1.17%</td>
              <td align="left">1.19%</td>
              <td align="left">1.18%</td>
              <td align="left">1.23%</td>
              <td align="left">0.71%</td>
              <td align="left">0.80%</td>
              <td align="left">0.83%</td>
              <td align="left">0.83%</td>
              <td align="left">0.47%</td>
              <td align="left">0.51%</td>
              <td align="left">0.52%</td>
            </tr>
            <tr>
              <td/>
              <td/>
              <td colspan="14">
                <hr/>
              </td>
            </tr>
            <tr>
              <td/>
              <td/>
              <td align="left">Diff.</td>
              <td align="left">
                <bold>-</bold>
              </td>
              <td align="left">-0.06%</td>
              <td align="left">0.77%</td>
              <td align="left">0.79%</td>
              <td align="left">0.78%</td>
              <td align="left">0.83%</td>
              <td align="left">0.31%</td>
              <td align="left">0.40%</td>
              <td align="left">0.43%</td>
              <td align="left">0.43%</td>
              <td align="left">0.07%</td>
              <td align="left">0.11%</td>
              <td align="left">0.12%</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <p><sup>1 </sup>The time consumption of BWA is calculated as "align left reads"+"align right reads"+"sampe". The index loading times of "align right reads" and "sampe" modules are 1 second due to the reason that, index files were cached during "align left reads". However, datasets larger than the host memory will flush the cache during alignment.</p>
          <p><sup>2 </sup>The alignment time consumption of GEM is calculated as "alignment"+"convert to SAM format". The conversion module was run with 4 threads in consistent with the alignment module.</p>
          <p><sup>3 </sup>SOAP3-dp, SOAP3, SeqAlto and GEM aligners explicitly provide index loading time consumption. The index loading time for Bowtie2, CUSHAW2 and BWA are calculated by the total size of index, divided by 100 MB/s, which is the average network file system speed of the testing environment. The index loading time maybe underestimated while the time processing the index was not calculated.</p>
          <p><sup>4 </sup>The alignment times were explicitly provided by the aligners (include results processing and input/output time) or calculated by total elapsed time minus estimated index loading time.</p>
          <p><sup>5 </sup>Sensitivity is calculated as "Correctly aligned reads"/"All simulated reads". The higher the better.</p>
          <p><sup>6 </sup>FDR is calculated as "Incorrectly aligned reads"/"All aligned reads". The lower the better</p>
        </table-wrap-foot>
      </table-wrap>
      <p>For 100 bp reads, MICA takes 178 seconds to align 6M read pairs, which is 16 seconds slower than SOAP3-dp (due to the increasing time in loading the index), but 1.67 to 11.09 times faster than other tools. MICA's sensitivity is 99.60% which is 0.06% lower than SOAP3-dp but 0.07-1.83% higher than other tools. MICA's FDR is 0.40%, which is 0.07-0.79% lower than other tools except being 0.06% higher than SOAP3-dp.</p>
    </sec>
    <sec>
      <title>B. Production test on Tianhe-2 supercomputer</title>
      <p>Tianhe-2 is currently the champion of the Top500 list of supercomputers. It has in total 16,000 computing nodes, each equipped with two 6-core Intel E5-2692 v2 @ 2.20 Hz CPU, 64 GB main memory and 3 MIC cards. Each MIC card has 57 cores and 8 GB on-board memory with ECC enabled.</p>
      <p>To test Tianhe-2 with the workload of a population scale study, we used whole genome sequencing data of 45 CHB and 45 CHS samples (Supplementary Details) from the 1000 genomes project; a sample had 64.68-fold depth on average. In total, we had 932 lanes of 100 bp paired-end reads with size varying from 1.82- to 12.7-fold per lane.</p>
      <p>The alignments of 932 lanes were carried out with 5 different settings. All alignment jobs were submitted simultaneously using one node per lane, occupying 4660 nodes in total at the very beginning. The results are shown in Table <xref ref-type="table" rid="T4">4</xref>. 19 jobs failed to complete due to node or card failure, thus excluded from calculation. Using 3 cards per node and SAM output, the mean time consumption for 923 completed lanes is 1,303 seconds, with the largest lane finished within an hour. By stacking up the alignment jobs to minimize the idle time of computing nodes involved, we anticipate that all 923 jobs could be finished in an hour using less than 400 nodes.</p>
      <table-wrap id="T4" position="float">
        <label>Table 4</label>
        <caption>
          <p>Results of experiments on Tianhe-2 using 5 different settings.</p>
        </caption>
        <table frame="hsides" rules="groups">
          <thead>
            <tr>
              <th align="center">Setting</th>
              <th align="center">MIC card used</th>
              <th align="center">Output Format</th>
              <th align="center">Finished lane</th>
              <th align="center">Longest (sec)</th>
              <th align="center">Mean (sec)</th>
              <th align="center">Median (sec)</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="right">1</td>
              <td align="right">3</td>
              <td align="right">SAM</td>
              <td align="right">923</td>
              <td align="right">3,425</td>
              <td align="right">1,303</td>
              <td align="right">1,220</td>
            </tr>
            <tr>
              <td colspan="7">
                <hr/>
              </td>
            </tr>
            <tr>
              <td align="right">2</td>
              <td align="right">3</td>
              <td align="right">BAM</td>
              <td align="right">929</td>
              <td align="right">6,012</td>
              <td align="right">2,777</td>
              <td align="right">2,666</td>
            </tr>
            <tr>
              <td colspan="7">
                <hr/>
              </td>
            </tr>
            <tr>
              <td align="right">3</td>
              <td align="right">3</td>
              <td align="right">6-thread BAM</td>
              <td align="right">928</td>
              <td align="right">4,484</td>
              <td align="right">1,371</td>
              <td align="right">1,321</td>
            </tr>
            <tr>
              <td colspan="7">
                <hr/>
              </td>
            </tr>
            <tr>
              <td align="right">4</td>
              <td align="right">2</td>
              <td align="right">6-thread BAM</td>
              <td align="right">931</td>
              <td align="right">4,269</td>
              <td align="right">1,508</td>
              <td align="right">1,475</td>
            </tr>
            <tr>
              <td colspan="7">
                <hr/>
              </td>
            </tr>
            <tr>
              <td align="right">5</td>
              <td align="right">1</td>
              <td align="right">6-thread BAM</td>
              <td align="right">930</td>
              <td align="right">6,915</td>
              <td align="right">2,943</td>
              <td align="right">2,879</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      <p>Using 3 cards and 6-thread BAM output, the mean time consumption is about the same but the maximum time consumption is ~18 minutes longer. Interestingly, alignment using 2 cards is almost twice as fast as using 1 card, but using 3 cards is only slightly faster than using 2 cards, since the computation was throttled by the slow compression algorithm in the BAM output module. Splitting the output into two or more files to enable non-blocking parallel compression will help in exploiting the full power of all three cards.</p>
    </sec>
  </sec>
  <sec>
    <title>Competing interests</title>
    <p>The authors declare that they have no competing interests.</p>
  </sec>
  <sec>
    <title>Authors' contributions</title>
    <p>S. C., J. C., E. W. and H. W. contributed equally to this work. Ruib. L. and T. L. managed the project and led the design. S. C., J. C., E. W. and H. W. implemented the software. W. L., D. Z., C. Y., C. L., Y. L., Ruiq. L., J. W., X. Z. and S. P. tested the software. S. C., J. C., E. W., Ruib. L. and T. L. wrote the paper.</p>
  </sec>
</body>
<back>
  <sec>
    <title>Declarations</title>
    <p>The publication costs for this article were funded by Hong Kong GRF HKU-713512E and ITF GHP/011/12.</p>
    <p>This article has been published as part of <italic>BMC Bioinformatics </italic>Volume 16 Supplement 7, 2015: Selected articles from The 11th Annual Biotechnology and Bioinformatics Symposium (BIOT-2014): Bioinformatics. The full contents of the supplement are available online at <ext-link ext-link-type="uri" xlink:href="http://www.biomedcentral.com/bmcbioinformatics/supplements/16/S7">http://www.biomedcentral.com/bmcbioinformatics/supplements/16/S7</ext-link>.</p>
  </sec>
  <ref-list>
    <ref id="B1">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Luo</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Wong</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Zhu</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Liu</surname>
          <given-names>CM</given-names>
        </name>
        <name>
          <surname>Zhu</surname>
          <given-names>X</given-names>
        </name>
        <name>
          <surname>Wu</surname>
          <given-names>E</given-names>
        </name>
        <name>
          <surname>Lee</surname>
          <given-names>LK</given-names>
        </name>
        <name>
          <surname>Lin</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Zhu</surname>
          <given-names>W</given-names>
        </name>
        <name>
          <surname>Cheung</surname>
          <given-names>DW</given-names>
        </name>
        <etal/>
        <article-title>SOAP3-dp: fast, accurate and sensitive GPU-based short read aligner</article-title>
        <source>PloS one</source>
        <year>2013</year>
        <volume>8</volume>
        <issue>5</issue>
        <fpage>e65632</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0065632</pub-id>
        <?supplied-pmid 23741504?>
        <pub-id pub-id-type="pmid">23741504</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B2">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Gotoh</surname>
          <given-names>O</given-names>
        </name>
        <article-title>An improved algorithm for matching biological sequences</article-title>
        <source>Journal of molecular biology</source>
        <year>1982</year>
        <volume>162</volume>
        <issue>3</issue>
        <fpage>705</fpage>
        <lpage>708</lpage>
        <pub-id pub-id-type="doi">10.1016/0022-2836(82)90398-9</pub-id>
        <?supplied-pmid 7166760?>
        <pub-id pub-id-type="pmid">7166760</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B3">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Smith</surname>
          <given-names>TF</given-names>
        </name>
        <name>
          <surname>Waterman</surname>
          <given-names>MS</given-names>
        </name>
        <article-title>Identification of common molecular subsequences</article-title>
        <source>Journal of molecular biology</source>
        <year>1981</year>
        <volume>147</volume>
        <issue>1</issue>
        <fpage>195</fpage>
        <lpage>197</lpage>
        <pub-id pub-id-type="doi">10.1016/0022-2836(81)90087-5</pub-id>
        <?supplied-pmid 7265238?>
        <pub-id pub-id-type="pmid">7265238</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B4">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Klus</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Lam</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Lyberg</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Cheung</surname>
          <given-names>MS</given-names>
        </name>
        <name>
          <surname>Pullan</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>McFarlane</surname>
          <given-names>I</given-names>
        </name>
        <name>
          <surname>Yeo</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Lam</surname>
          <given-names>BY</given-names>
        </name>
        <article-title>BarraCUDA - a fast short read sequence aligner using graphics processing units</article-title>
        <source>BMC research notes</source>
        <year>2012</year>
        <volume>5</volume>
        <fpage>27</fpage>
        <pub-id pub-id-type="doi">10.1186/1756-0500-5-27</pub-id>
        <?supplied-pmid 22244497?>
        <pub-id pub-id-type="pmid">22244497</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B5">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Liu</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Schmidt</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Maskell</surname>
          <given-names>DL</given-names>
        </name>
        <article-title>CUSHAW: a CUDA compatible short read aligner to large genomes based on the Burrows-Wheeler transform</article-title>
        <source>Bioinformatics</source>
        <year>2012</year>
        <volume>28</volume>
        <issue>14</issue>
        <fpage>1830</fpage>
        <lpage>1837</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bts276</pub-id>
        <?supplied-pmid 22576173?>
        <pub-id pub-id-type="pmid">22576173</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B6">
      <mixed-citation publication-type="book">
        <name>
          <surname>Lam</surname>
          <given-names>TW</given-names>
        </name>
        <name>
          <surname>Li</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Tam</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Wong</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Wu</surname>
          <given-names>E</given-names>
        </name>
        <name>
          <surname>Yiu</surname>
          <given-names>S-M</given-names>
        </name>
        <article-title>High throughput short read alignment via bi-directional BWT</article-title>
        <source>Bioinformatics and Biomedicine, 2009 BIBM'09 IEEE International Conference on: 2009</source>
        <publisher-name>IEEE</publisher-name>
        <fpage>31</fpage>
        <lpage>36</lpage>
      </mixed-citation>
    </ref>
    <ref id="B7">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Luo</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Liu</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Xie</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Li</surname>
          <given-names>Z</given-names>
        </name>
        <name>
          <surname>Huang</surname>
          <given-names>W</given-names>
        </name>
        <name>
          <surname>Yuan</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>He</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Chen</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Pan</surname>
          <given-names>Q</given-names>
        </name>
        <name>
          <surname>Liu</surname>
          <given-names>Y</given-names>
        </name>
        <etal/>
        <article-title>SOAPdenovo2: an empirically improved memory-efficient short-read de novo assembler</article-title>
        <source>GigaScience</source>
        <year>2012</year>
        <volume>1</volume>
        <issue>1</issue>
        <fpage>18</fpage>
        <pub-id pub-id-type="doi">10.1186/2047-217X-1-18</pub-id>
        <?supplied-pmid 23587118?>
        <pub-id pub-id-type="pmid">23587118</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B8">
      <mixed-citation publication-type="other">
        <name>
          <surname>Li</surname>
          <given-names>H</given-names>
        </name>
        <article-title>Aligning sequence reads, clone sequences and assembly contigs with BWA-MEM</article-title>
        <source>arXiv preprint arXiv:13033997</source>
        <year>2013</year>
      </mixed-citation>
    </ref>
    <ref id="B9">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Doring</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Weese</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Rausch</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Reinert</surname>
          <given-names>K</given-names>
        </name>
        <article-title>SeqAn an efficient, generic C++ library for sequence analysis</article-title>
        <source>BMC bioinformatics</source>
        <year>2008</year>
        <volume>9</volume>
        <fpage>11</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-9-11</pub-id>
        <?supplied-pmid 18184432?>
        <pub-id pub-id-type="pmid">18184432</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B10">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Langmead</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Trapnell</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Pop</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Salzberg</surname>
          <given-names>SL</given-names>
        </name>
        <article-title>Ultrafast and memory-efficient alignment of short DNA sequences to the human genome</article-title>
        <source>Genome biology</source>
        <year>2009</year>
        <volume>10</volume>
        <issue>3</issue>
        <fpage>R25</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2009-10-3-r25</pub-id>
        <?supplied-pmid 19261174?>
        <pub-id pub-id-type="pmid">19261174</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B11">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Mu</surname>
          <given-names>JC</given-names>
        </name>
        <name>
          <surname>Jiang</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Kiani</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Mohiyuddin</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Bani Asadi</surname>
          <given-names>N</given-names>
        </name>
        <name>
          <surname>Wong</surname>
          <given-names>WH</given-names>
        </name>
        <article-title>Fast and accurate read alignment for resequencing</article-title>
        <source>Bioinformatics</source>
        <year>2012</year>
        <volume>28</volume>
        <issue>18</issue>
        <fpage>2366</fpage>
        <lpage>2373</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bts450</pub-id>
        <?supplied-pmid 22811546?>
        <pub-id pub-id-type="pmid">22811546</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B12">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Marco-Sola</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Sammeth</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Guigo</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Ribeca</surname>
          <given-names>P</given-names>
        </name>
        <article-title>The GEM mapper: fast, accurate and versatile alignment by filtration</article-title>
        <source>Nature methods</source>
        <year>2012</year>
        <volume>9</volume>
        <issue>12</issue>
        <fpage>1185</fpage>
        <lpage>1188</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.2221</pub-id>
        <?supplied-pmid 23103880?>
        <pub-id pub-id-type="pmid">23103880</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B13">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Li</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Ruan</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Durbin</surname>
          <given-names>R</given-names>
        </name>
        <article-title>Mapping short DNA sequencing reads and calling variants using mapping quality scores</article-title>
        <source>Genome research</source>
        <year>2008</year>
        <volume>18</volume>
        <issue>11</issue>
        <fpage>1851</fpage>
        <lpage>1858</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.078212.108</pub-id>
        <?supplied-pmid 18714091?>
        <pub-id pub-id-type="pmid">18714091</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B14">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Liu</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Schmidt</surname>
          <given-names>B</given-names>
        </name>
        <article-title>Long read alignment based on maximal exact match seeds</article-title>
        <source>Bioinformatics</source>
        <year>2012</year>
        <volume>28</volume>
        <issue>18</issue>
        <fpage>i318</fpage>
        <lpage>i324</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bts414</pub-id>
        <?supplied-pmid 22962447?>
        <pub-id pub-id-type="pmid">22962447</pub-id>
      </mixed-citation>
    </ref>
  </ref-list>
</back>

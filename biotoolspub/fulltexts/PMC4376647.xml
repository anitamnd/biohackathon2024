<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-archivearticle1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">PLoS One</journal-id>
    <journal-id journal-id-type="iso-abbrev">PLoS ONE</journal-id>
    <journal-id journal-id-type="publisher-id">plos</journal-id>
    <journal-id journal-id-type="pmc">plosone</journal-id>
    <journal-title-group>
      <journal-title>PLoS ONE</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1932-6203</issn>
    <publisher>
      <publisher-name>Public Library of Science</publisher-name>
      <publisher-loc>San Francisco, CA USA</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">4376647</article-id>
    <article-id pub-id-type="publisher-id">PONE-D-14-41863</article-id>
    <article-id pub-id-type="doi">10.1371/journal.pone.0116082</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>MAFCO: A Compression Tool for MAF Files</article-title>
      <alt-title alt-title-type="running-head">MAFCO: A Compression Tool for MAF Files</alt-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Matos</surname>
          <given-names>Luís M. O.</given-names>
        </name>
        <xref ref-type="aff" rid="aff001"/>
        <xref ref-type="corresp" rid="cor001">*</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Neves</surname>
          <given-names>António J. R.</given-names>
        </name>
        <xref ref-type="aff" rid="aff001"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Pratas</surname>
          <given-names>Diogo</given-names>
        </name>
        <xref ref-type="aff" rid="aff001"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Pinho</surname>
          <given-names>Armando J.</given-names>
        </name>
        <xref ref-type="aff" rid="aff001"/>
      </contrib>
    </contrib-group>
    <aff id="aff001">
      <addr-line>Signal Processing Lab, IEETA/DETI, University of Aveiro, 3810–193 Aveiro, Portugal</addr-line>
    </aff>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Stajich</surname>
          <given-names>Jason E</given-names>
        </name>
        <role>Academic Editor</role>
        <xref ref-type="aff" rid="edit1"/>
      </contrib>
    </contrib-group>
    <aff id="edit1">
      <addr-line>University of California-Riverside, UNITED STATES</addr-line>
    </aff>
    <author-notes>
      <fn fn-type="COI-statement" id="coi001">
        <p><bold>Competing Interests: </bold>The authors have declared that no competing interests exist.</p>
      </fn>
      <fn fn-type="con" id="contrib001">
        <p>Conceived and designed the experiments: LMOM. Performed the experiments: LMOM. Analyzed the data: LMOM DP AJP. Contributed reagents/materials/analysis tools: LMOM AJRN DP AJP. Wrote the paper: LMOM DP AJP.</p>
      </fn>
      <corresp id="cor001">* E-mail: <email>luismatos@ua.pt</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <year>2015</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>27</day>
      <month>3</month>
      <year>2015</year>
    </pub-date>
    <volume>10</volume>
    <issue>3</issue>
    <elocation-id>e0116082</elocation-id>
    <history>
      <date date-type="received">
        <day>17</day>
        <month>9</month>
        <year>2014</year>
      </date>
      <date date-type="accepted">
        <day>5</day>
        <month>12</month>
        <year>2014</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© 2015 Matos et al</copyright-statement>
      <copyright-year>2015</copyright-year>
      <copyright-holder>Matos et al</copyright-holder>
      <license xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are properly credited.</license-p>
      </license>
    </permissions>
    <self-uri content-type="pdf" xlink:type="simple" xlink:href="pone.0116082.pdf"/>
    <abstract>
      <p>In the last decade, the cost of genomic sequencing has been decreasing so much that researchers all over the world accumulate huge amounts of data for present and future use. These genomic data need to be efficiently stored, because storage cost is not decreasing as fast as the cost of sequencing. In order to overcome this problem, the most popular general-purpose compression tool, gzip, is usually used. However, these tools were not specifically designed to compress this kind of data, and often fall short when the intention is to reduce the data size as much as possible. There are several compression algorithms available, even for genomic data, but very few have been designed to deal with Whole Genome Alignments, containing alignments between entire genomes of several species. In this paper, we present a lossless compression tool, MAFCO, specifically designed to compress MAF (Multiple Alignment Format) files. Compared to gzip, the proposed tool attains a compression gain from 34% to 57%, depending on the data set. When compared to a recent dedicated method, which is not compatible with some data sets, the compression gain of MAFCO is about 9%. Both source-code and binaries for several operating systems are freely available for non-commercial use at: <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.ua.pt/software/mafco">http://bioinformatics.ua.pt/software/mafco</ext-link>.</p>
    </abstract>
    <funding-group>
      <funding-statement>This work was partially supported by FEDER through the Operational Program Competitiveness Factors—COMPETE and by National Funds through FCT—Foundation for Science and Technology in a context of a PhD Grant (FCT reference SFRH/BD/86531/2012) and the project FCOMP-01-0124-FEDER-022682 (FCT reference PEst-C/EEI/UI0127/2011).</funding-statement>
    </funding-group>
    <counts>
      <fig-count count="6"/>
      <table-count count="5"/>
      <page-count count="21"/>
    </counts>
    <custom-meta-group>
      <custom-meta id="data-availability">
        <meta-name>Data Availability</meta-name>
        <meta-value>Data sets are available from the UCSS Genome Bioinformatics at the following locations: <ext-link ext-link-type="uri" xlink:href="http://hgdownload-test.cse.ucsc.edu/goldenPath/hg18/multiz28way">http://hgdownload-test.cse.ucsc.edu/goldenPath/hg18/multiz28way</ext-link>; <ext-link ext-link-type="uri" xlink:href="http://hgdownload-test.cse.ucsc.edu/goldenPath/hg19/multiz46way">http://hgdownload-test.cse.ucsc.edu/goldenPath/hg19/multiz46way</ext-link>; <ext-link ext-link-type="uri" xlink:href="http://hgdownload-test.cse.ucsc.edu/goldenPath/hg19/multiz100way">http://hgdownload-test.cse.ucsc.edu/goldenPath/hg19/multiz100way</ext-link>. The MAFCO compression tool can be found at: <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.ua.pt/software/mafco">http://bioinformatics.ua.pt/software/mafco</ext-link>; <ext-link ext-link-type="uri" xlink:href="https://github.com/lumiratos/mafco">https://github.com/lumiratos/mafco</ext-link>. Maf-bgzip is available at: <ext-link ext-link-type="uri" xlink:href="https://github.com/lumiratos/bioruby-maf">https://github.com/lumiratos/bioruby-maf</ext-link>.</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
  <notes>
    <title>Data Availability</title>
    <p>Data sets are available from the UCSS Genome Bioinformatics at the following locations: <ext-link ext-link-type="uri" xlink:href="http://hgdownload-test.cse.ucsc.edu/goldenPath/hg18/multiz28way">http://hgdownload-test.cse.ucsc.edu/goldenPath/hg18/multiz28way</ext-link>; <ext-link ext-link-type="uri" xlink:href="http://hgdownload-test.cse.ucsc.edu/goldenPath/hg19/multiz46way">http://hgdownload-test.cse.ucsc.edu/goldenPath/hg19/multiz46way</ext-link>; <ext-link ext-link-type="uri" xlink:href="http://hgdownload-test.cse.ucsc.edu/goldenPath/hg19/multiz100way">http://hgdownload-test.cse.ucsc.edu/goldenPath/hg19/multiz100way</ext-link>. The MAFCO compression tool can be found at: <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.ua.pt/software/mafco">http://bioinformatics.ua.pt/software/mafco</ext-link>; <ext-link ext-link-type="uri" xlink:href="https://github.com/lumiratos/mafco">https://github.com/lumiratos/mafco</ext-link>. Maf-bgzip is available at: <ext-link ext-link-type="uri" xlink:href="https://github.com/lumiratos/bioruby-maf">https://github.com/lumiratos/bioruby-maf</ext-link>.</p>
  </notes>
</front>
<body>
  <sec sec-type="intro" id="sec001">
    <title>Introduction</title>
    <p>Certainly motivated by the dramatic drop in price in genomic sequencing, the research community is continuously increasing the volume of sequenced data. Unfortunately, the pace at which storage and communication resources are evolving is not enough to compensate this tendency. Several functional studies have been focusing on annotating the genomes of human and model organisms. One possible approach to facilitate these studies is to use Whole Genome Alignments.</p>
    <p>Whole Genome Alignments tend to be very large, occupying several hundreds of gigabytes of disk space and containing millions of alignment blocks. Handling data at this scale presents several challenges in download speed and storage space. The problem of compressing massive amounts of genomic data is addressed in [<xref rid="pone.0116082.ref001" ref-type="bibr">1</xref>, <xref rid="pone.0116082.ref002" ref-type="bibr">2</xref>] and is currently one of the most intensive research topics in the field of data compression. In the last two decades, several specialized algorithms for compressing DNA sequences and several other forms of genomic data were developed and used by the research community (e.g., [<xref rid="pone.0116082.ref003" ref-type="bibr">3</xref>–<xref rid="pone.0116082.ref015" ref-type="bibr">15</xref>]). Most of these algorithms take into account only the four-letter alphabet, ACGT. However, other letters outside the main alphabet, although usually less frequent, need also to be represented, if the original data are to be recovered. In fact, there is the possibility of having lower case letters, such as acgt, or even other symbols (e.g. n/N). In order to create a fully lossless compression algorithm, all these symbols must be taken into account. Furthermore, it is also necessary to consider additional data, such as headers, quality scores or alignment information.</p>
    <p>Recently, we have proposed an algorithm, based on a mixture of finite-context models and arithmetic coding, for compressing only the MSABs (Multiple Sequence Alignment Blocks) of the MAF [<xref rid="pone.0116082.ref016" ref-type="bibr">16</xref>] files [<xref rid="pone.0116082.ref011" ref-type="bibr">11</xref>]. This algorithm was only designed to compress the DNA bases and alignment gaps that are present in the MSABs. All the optional lines and header information were not considered. Furthermore, non-ACGT letters (including lower case) were also not considered. Therefore, the approach described in [<xref rid="pone.0116082.ref011" ref-type="bibr">11</xref>] is lossy in the sense that it does not permit the full recovery of the original file. The MAFCO tool described in this paper is a fully lossless compression method, capable of handling all data found in a MAF file. MAFCO handles all lower case letters, non-ACGT letters, and all the header data and optional lines that were not considered previously.</p>
    <p>The remainder of the paper is organized as follow. In Section 1.1, we describe the format of the data sets known as whole genome alignments. In Section 1.2, we describe the existing methods specially designed to compress MAF files. Section 2 contains a description of the algorithm presented in this paper and also the data sets used to evaluate the performance of it. The experimental results for several compression tools are presented in Section 3. Finally, in Section 4, we draw some conclusions.</p>
    <sec id="sec002">
      <title>1.1 Whole genome alignments</title>
      <p>Computational genome annotation and evolutionary genomics are two molecular biology research areas that use multiple genome alignment data. The alignment of DNA sequences has been used to help locating certain kinds of functional non-coding regions [<xref rid="pone.0116082.ref017" ref-type="bibr">17</xref>] and more recently for finding protein-coding genes [<xref rid="pone.0116082.ref018" ref-type="bibr">18</xref>, <xref rid="pone.0116082.ref019" ref-type="bibr">19</xref>] and non-coding RNA genes [<xref rid="pone.0116082.ref020" ref-type="bibr">20</xref>]. Moreover, it is possible to observe the similarities and differences between the DNA sequences of humans and other species that share a common ancestral, providing critical data for finding the course of evolution. Furthermore, we can also perform a computational reconstruction of ancestral genome sequences that explains certain characteristics of species [<xref rid="pone.0116082.ref021" ref-type="bibr">21</xref>]. DNA sequences that have evolved from the same ancestral sequence are called homologous. In the case of genes, they are likely to encode similar functions and each function that is experimentally verified in one species can be mapped to a homologous gene in other species.</p>
      <p>As mention before, this particular voluminous data set in molecular genomics, known as whole genome alignments, has gained considerable importance over the last years. In this context there is one format, called Multiple Alignment Format (MAF) [<xref rid="pone.0116082.ref016" ref-type="bibr">16</xref>], that is used to store a series of multiple alignments of several species and chromosomes. In <xref ref-type="fig" rid="pone.0116082.g001">Fig. 1</xref> we depict an example of a Multiple Sequence Alignment Block (MSAB) with several line types. Each MAF file contains several MSABs, as can be seen in <xref ref-type="fig" rid="pone.0116082.g002">Fig. 2</xref>. Those MSABs are derived from the genome rearrangements caused by large scale mutations. We can find alignments of whole genomes in large databases, such as those of UCSC [<xref rid="pone.0116082.ref022" ref-type="bibr">22</xref>] and Ensemble [<xref rid="pone.0116082.ref023" ref-type="bibr">23</xref>]. Each MSAB contains several types of lines as can be seen in <xref ref-type="fig" rid="pone.0116082.g001">Fig. 1</xref>. In the following section we describe in more detail the MAF format and the line types that are part of it.</p>
      <fig id="pone.0116082.g001" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.1371/journal.pone.0116082.g001</object-id>
        <label>Fig 1</label>
        <caption>
          <title>An example of a MSAB with ‘s’, ‘q’, ‘i’, and ‘e’ lines.</title>
          <p>The ‘s’ lines are the most important lines containing the sequence alignment (DNA bases and gaps ‘-’). The ‘q’, ‘i’, and ‘e’ lines are optional so they can be present or not in a MAF file.</p>
        </caption>
        <graphic xlink:href="pone.0116082.g001"/>
      </fig>
      <fig id="pone.0116082.g002" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.1371/journal.pone.0116082.g002</object-id>
        <label>Fig 2</label>
        <caption>
          <title>A basic description of a MAF file.</title>
          <p>Each Multiple Sequence Alignment Block (MSAB) contains the DNA bases for a set of species properly aligned, using an additional gap ‘-’ symbol. The MSABs can also contain additional information that although not mentioned in this figure, it is mentioned latter in this section.</p>
        </caption>
        <graphic xlink:href="pone.0116082.g002"/>
      </fig>
      <sec id="sec003">
        <title>1.1.1 Multiple Alignment Format (MAF)</title>
        <p>The multiple alignment format (of MAF format) is used for storing a series of multiple alignments in a format that is easy to parse and relatively easy to read. This format is used to store multiple alignments at the DNA level between entire genomes. A MAF file is composed by several MSABs (Multiple Sequence Alignment Blocks). Each one of those MSABs contain several types of lines. The MSAB always starts with an ‘a’ line that contains the score information. Usually, this line type defines the beginning of a new MSAB. The ‘s’ lines are the most important lines, containing information about the sequence alignment (DNA bases and gaps). The first ‘s’ line of each MSAB is the reference sequence from which the alignment was made. According to [<xref rid="pone.0116082.ref016" ref-type="bibr">16</xref>], the format of a ‘s’ line is:
<list list-type="simple"><list-item><p>s [<italic>source</italic>] [<italic>start</italic>] [<italic>size</italic>] [<italic>strand</italic>] [<italic>srcSize</italic>] [<italic>MSA</italic>]</p></list-item></list>
The ‘s’ lines have several fields which are described next:
<list list-type="bullet"><list-item><p>[<italic>source</italic>] contains the name of one of the source sequences for the alignment. This field is usually defined as [<italic>specieName.chromossome</italic>] or [<italic>specieName.scaffold</italic>].</p></list-item><list-item><p>[<italic>start</italic>] the start position of the aligning region in the source sequence.</p></list-item><list-item><p>[<italic>size</italic>] the size of the aligning region in the source sequence. This number corresponds to the number of non-gaps in the MSAB alignment.</p></list-item><list-item><p>[<italic>strand</italic>] defines if the alignment is done to the reverse-complement source.</p></list-item><list-item><p>[<italic>srcSize</italic>] the size of the entire source sequence, not just the parts involved in the alignment.</p></list-item><list-item><p>[<italic>MSA</italic>] the nucleotides and gaps in the alignment.</p></list-item></list>
</p>
        <p>The ‘q’, ‘i’, and ‘e’ line types are optional, so there are MAF files that might not have them. The ‘q’ lines contain information regarding the quality of each aligned base for the current source sequence. This quality information is a compressed version of the actual raw quality data, where the quality of each aligned DNA base is represented using a single character that can be a number between 0 and 9 or ‘F’ which represents a finish sequence (see <xref ref-type="supplementary-material" rid="pone.0116082.s007">S1 Table</xref> for more details). These ‘q’ lines are always associated with the previous ‘s’ lines and therefore they share the same source name. The first ‘s’ line (reference source sequence) of each MSAB does not have ‘q’ lines associated. The ‘q’ lines have the following structure:
<list list-type="simple"><list-item><p>q [<italic>source</italic>] [<italic>qualityValues</italic>]</p></list-item></list>
The ‘q’ lines have only two fields:
<list list-type="bullet"><list-item><p>[<italic>source</italic>] contains the name of the source sequence. Should be the same source name as the ‘s’ line immediately preceding this line.</p></list-item><list-item><p>[<italic>qualityValues</italic>] the MAF quality values that correspond to the aligning DNA bases in the previous ‘s’ line. The alignment gap (‘-’) that is present in the previous ‘s’ line is replicated to the ‘q’ line as well. The quality values are computed using
<disp-formula id="pone.0116082.e001"><alternatives><graphic xlink:href="pone.0116082.e001.jpg" id="pone.0116082.e001g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M1"><mml:mrow><mml:mi>MAFQV</mml:mi><mml:mo>=</mml:mo><mml:mo movablelimits="true" form="prefix">min</mml:mo><mml:mfenced separators="" open="(" close=")"><mml:mfenced separators="" open="⌊" close="⌋"><mml:mfrac><mml:mi>AQV</mml:mi><mml:mn>5</mml:mn></mml:mfrac></mml:mfenced><mml:mo>,</mml:mo><mml:mn>9</mml:mn></mml:mfenced><mml:mo>,</mml:mo></mml:mrow></mml:math></alternatives><label>(1)</label></disp-formula>
where MAFQV denotes the MAF quality value that is used in the ‘q’ lines and the AQV represents the actual quality value. <xref ref-type="supplementary-material" rid="pone.0116082.s007">S1 Table</xref> shows the range of quality values for the ‘q’ lines, as well as the mapping of the raw quality values to the MAF quality values.</p></list-item></list>
</p>
        <p>The ‘i’ lines contain information about what is happening before and after this MSAB in the aligning source. These informative lines have information about the context of the source sequence lines immediately preceding them. The ‘i’ lines have the following format:
<list list-type="simple"><list-item><p>i [<italic>source</italic>] [<italic>lStatus</italic>] [<italic>lCount</italic>] [<italic>rStatus</italic>] [<italic>rCount</italic>]</p></list-item></list>
Similar to the ‘q’ lines, the source name of a ‘i’ line is the same one as of the preceding ‘s’ line. The possible ‘i’ line fields are:
<list list-type="bullet"><list-item><p>[<italic>source</italic>] contains the name of the source sequence. Should be the same source name as in the ‘s’ line immediately preceding this line.</p></list-item><list-item><p>[<italic>lStatus</italic>] left status is represented by a single character that describes the relationship between the sequence in this MSAB and the sequence that appears in the previous MSAB.</p></list-item><list-item><p>[<italic>lCount</italic>] left count is usually the number of DNA bases in the aligning source between the start of this alignment and the end of the previous one.</p></list-item><list-item><p>[<italic>rStatus</italic>] right status is represented by a single character that describes the relationship between the sequence in this MSAB and the sequence that appears in the subsequent MSAB.</p></list-item><list-item><p>[<italic>rCount</italic>] right count is usually the number of DNA bases in the aligning source between the end of this alignment and the start of the next one.</p></list-item></list>
The status characters that can be found in ‘i’ lines can only have one of the following values:
<list list-type="bullet"><list-item><p>‘C’—the sequence before or after is contiguous to this MSAB.</p></list-item><list-item><p>‘I’—there are bases between the bases in this MSAB and the one before or after it.</p></list-item><list-item><p>‘N’—this is the first sequence from this source.</p></list-item><list-item><p>‘n’—this is the first sequence from this source but it is bridged by another alignment from a different chromosome/scaffold.</p></list-item><list-item><p>‘M’—there is missing data before or after this block (‘N’ or ‘n’ symbols in the sequence).</p></list-item><list-item><p>‘T’—the sequence in this MSAB has been used before in a previous MSAB (likely a tandem duplication).</p></list-item></list>
</p>
        <p>Finally, the ‘e’ lines contain information about empty parts of the MSAB. The ‘e’ lines indicate if there is not aligning DNA for the specified source, but the current MSAB is bridged somehow by a chain that connects MSABs before and after this MSAB. The ‘e’ line has the following structure:
<list list-type="simple"><list-item><p>e [<italic>source</italic>] [<italic>start</italic>] [<italic>size</italic>] [<italic>strand</italic>] [<italic>srcSize</italic>] [<italic>status</italic>]</p></list-item></list>
The fields of the ‘e’ lines are described next. There are some fields that are very similar to the ones of the ‘s’ lines described earlier.
<list list-type="bullet"><list-item><p>[<italic>source</italic>] contains the name of one of the source sequences for the alignment.</p></list-item><list-item><p>[<italic>start</italic>] the start position of the non-aligning region in the source sequence.</p></list-item><list-item><p>[<italic>size</italic>] the size of the non-aligning region in the source sequence.</p></list-item><list-item><p>[<italic>strand</italic>] defines if the previous alignment is done to the reverse-complement source.</p></list-item><list-item><p>[<italic>srcSize</italic>] the size of the entire source sequence, not just the parts involved in the alignment.</p></list-item><list-item><p>[<italic>status</italic>] a character that specifies the relationship between the non-aligning sequence in this MSAB and the sequence that appears in the previous and subsequent MSABs.</p></list-item></list>
The status characters that can be found in ‘e’ lines can only have one of the following values:
<list list-type="bullet"><list-item><p>‘C’—the sequence before or after is contiguous implying that this region was either deleted in the source or inserted in the reference sequence.</p></list-item><list-item><p>‘I’—there are non-aligning bases in the source species between chained MSABs before and after this MSAB.</p></list-item><list-item><p>‘N’—there are non-aligning bases in this source and the next MSAB starts in a new chromosome or scaffold that is bridged by a chain between still other MSABs.</p></list-item><list-item><p>‘M’—there is missing data before or after this block (‘N’ or ‘n’ symbols in the sequence).</p></list-item><list-item><p>‘T’—the empty region of this MSAB has been used before in a previous MSAB (likely a tandem duplication).</p></list-item></list>
</p>
      </sec>
    </sec>
    <sec id="sec004">
      <title>1.2 Related work</title>
      <p>To the best of our knowledge, there is only one specialized tool available for the compression of MAF files [<xref rid="pone.0116082.ref024" ref-type="bibr">24</xref>]. That method is based on well-established statistical evolutionary models and on prediction techniques used for lossless binary image compression. In their proposed compression model, the nucleotides in a MSAB are compressed using the predictions obtained from a nucleotide substitution model, whereas the gaps are encoded independently using techniques from lossless binary image compression. According to the authors, encoding the nucleotides and the gaps separately is justified by the independence of the two underlying mutational processes and should not introduce an inherent loss to the achievable compression rate.</p>
      <p>In 2012, Wheeler and Tarasov developed a plugin for BioRuby that offers support to deal with Multiple Alignment Format (MAF) files [<xref rid="pone.0116082.ref025" ref-type="bibr">25</xref>–<xref rid="pone.0116082.ref027" ref-type="bibr">27</xref>]. This plugin provides a set of tools for indexed and sequential access to MAF data, as well as for performing various manipulations on it and writing modified MAF files. In particular, this library provides support for BGZF (Blocked GZip Format) compressed MAF files, which combines gzip compression with blocking for efficient random access. The maf-bgzip tool creates compressed MAF files that consist of concatenated 64 kilobytes blocks, each one as an independent gzip stream. These files can be decompressed entirely with gzip. However, this library enables random access using “virtual offsets” as defined in SAM/BAM for fast access to a certain portion of the MAF file. This tool is not optimized in terms of compression (as it can be seen in the results section). The goal of the tool is to improve the random access of gziped files, sacrificing substantial compression performance.</p>
      <p>In 2013, we proposed a compression algorithm for the ‘s’ lines of the MSABs [<xref rid="pone.0116082.ref011" ref-type="bibr">11</xref>], based on a mixture of finite-context models and arithmetic coding. It is not a full compression tool, because it ignores all the optional lines and the MSAB header information (source name, source size, etc.). Even so, the method attained about 7% better results for the <italic>multiz28way</italic> data set when compared to method [<xref rid="pone.0116082.ref024" ref-type="bibr">24</xref>].</p>
    </sec>
  </sec>
  <sec sec-type="materials|methods" id="sec005">
    <title>Materials and methods</title>
    <sec id="sec006">
      <title>2.1 MAFCO (MAF COmpressor)</title>
      <p>Recently, we proposed a compression method based on a mixture of finite-context models and arithmetic coding, for compressing the MSABs [<xref rid="pone.0116082.ref011" ref-type="bibr">11</xref>, <xref rid="pone.0116082.ref028" ref-type="bibr">28</xref>]. This compressor algorithm was designed to compress only the DNA bases and alignment gaps of the ‘s’ lines, without considering other information, nor the possible presence of lower case DNA bases. On average, this algorithm was approximately 7% better than the method described in [<xref rid="pone.0116082.ref024" ref-type="bibr">24</xref>]. In terms of encoding time, both methods were very similar.</p>
      <p>MAFCO is a full lossless compressor, capable of processing all line types that are part of MAF. Instead of using a mixture of finite-context models, we opted by a single model, in order to improve the encoding/decoding time. Our compression tool relies on probabilistic models, known as finite-context models, that are quite effective for DNA data compression [<xref rid="pone.0116082.ref005" ref-type="bibr">5</xref>]. The goal of these probabilistic models is to assign probability estimates for the next symbol, taking into account a recent past context. The size <italic>k</italic> of that context can vary (<italic>k</italic> &gt; 0) and it will define the model order. Assuming that the <italic>k</italic> past outcomes are given by <italic>x</italic>
<sub><italic>n</italic>−<italic>k</italic>+1..<italic>n</italic></sub> = <italic>x</italic>
<sub><italic>n</italic>−<italic>k</italic>+1</sub>…<italic>x</italic>
<sub><italic>n</italic></sub> (order-<italic>k</italic> model), the probability estimates <italic>P</italic>(<italic>x</italic>
<sub><italic>n</italic>+1</sub>∣<italic>x</italic>
<sub><italic>n</italic>−<italic>k</italic>+1..<italic>n</italic></sub>) are computed using the symbol counts that are accumulated while the information source is processed, with
<disp-formula id="pone.0116082.e002"><alternatives><graphic xlink:href="pone.0116082.e002.jpg" id="pone.0116082.e002g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M2"><mml:mrow><mml:mi>P</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>s</mml:mi><mml:mo>|</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>−</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>c</mml:mi><mml:mo>(</mml:mo><mml:mi>s</mml:mi><mml:mo>|</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>−</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>+</mml:mo><mml:mi>α</mml:mi></mml:mrow><mml:mrow><mml:mi>c</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>−</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>+</mml:mo><mml:mo>|</mml:mo><mml:mi>𝓐</mml:mi><mml:mo>|</mml:mo><mml:mi>α</mml:mi></mml:mrow></mml:mfrac><mml:mo>,</mml:mo></mml:mrow></mml:math></alternatives><label>(2)</label></disp-formula>
where <italic>c</italic>(<italic>s</italic>∣<italic>x</italic>
<sub><italic>n</italic>−<italic>k</italic>+1..<italic>n</italic></sub>) represents the number of times that, in the past, symbol <italic>s</italic> was found having <italic>x</italic>
<sub><italic>n</italic>−<italic>k</italic>+1..<italic>n</italic></sub> as the conditioning context, ∣𝓐∣ denotes the size of the coding alphabet 𝓐, and where
<disp-formula id="pone.0116082.e003"><alternatives><graphic xlink:href="pone.0116082.e003.jpg" id="pone.0116082.e003g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M3"><mml:mrow><mml:mi>c</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>−</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>a</mml:mi><mml:mo>∈</mml:mo><mml:mi>𝓐</mml:mi></mml:mrow></mml:munder><mml:mi>c</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>a</mml:mi><mml:mo>|</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>−</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives><label>(3)</label></disp-formula>
is the total number of events that has occurred so far in association with context <italic>x</italic>
<sub><italic>n</italic>−<italic>k</italic>+1..<italic>n</italic></sub>. Parameter <italic>α</italic> allows balancing between the maximum likelihood estimator and a uniform distribution (when the total number of events, <italic>n</italic>, is large, it behaves as a maximum likelihood estimator). For <italic>α</italic> = 1, <xref ref-type="disp-formula" rid="pone.0116082.e002">(2)</xref> is the well-known Laplace estimator.</p>
      <p>MAFCO uses several different types of single finite-context models. They are different in terms of order (size of the context) and in terms of alphabets that they handle. In order to find the optimal size of each finite-context model, we performed some experiments using three representative MAF files of each data set. These optimal sizes are used by default. In the following sections, we address the compression of each one of the four line types in more detail.</p>
      <sec id="sec007">
        <title>2.1.1 Compression of the ‘s’ lines</title>
        <p>Similar to our previous compressor [<xref rid="pone.0116082.ref011" ref-type="bibr">11</xref>], MAFCO treats each MSAB as a special image type with five intensities (alphabet 𝓐<sub><italic>s</italic></sub> = {A, C, G, T, -}) that correspond to the four DNA bases and the alignment gap (‘-’). MAFCO provides a set of context templates that can be used for compressing the 𝓐<sub><italic>s</italic></sub> symbols of the ‘s’ lines. To improve speed, the proposed tool uses only a single model to encode the alignments of the ‘s’ lines, so only one of the context templates is used (see <xref ref-type="fig" rid="pone.0116082.g003">Fig. 3</xref>). The ‘s’ lines of each MSAB can also have other symbols than the ones indicated earlier in alphabet 𝓐<sub><italic>s</italic></sub>. Those other symbols include lower case symbols {a, c, g, t} and non-ACGT symbols {N, n}. So, in the ‘s’ lines the set of symbols that can be found is {A, a, C, c, G, g, T, t, N, n, -} which are mapped according to <xref rid="pone.0116082.t001" ref-type="table">Table 1</xref>.</p>
        <fig id="pone.0116082.g003" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pone.0116082.g003</object-id>
          <label>Fig 3</label>
          <caption>
            <title>Set of 2D context templates available in MAFCO.</title>
            <p>The ‘X’ denotes the current symbol that is being encoded/decoded. Template ‘C’ with depth 10 is the default.</p>
          </caption>
          <graphic xlink:href="pone.0116082.g003"/>
        </fig>
        <table-wrap id="pone.0116082.t001" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pone.0116082.t001</object-id>
          <label>Table 1</label>
          <caption>
            <title>Symbols mapping for each one of the streams illustrated in <xref ref-type="fig" rid="pone.0116082.g004">Fig. 4</xref>.</title>
          </caption>
          <alternatives>
            <graphic id="pone.0116082.t001g" xlink:href="pone.0116082.t001"/>
            <table frame="box" rules="all" border="0">
              <colgroup span="1">
                <col align="left" valign="top" span="1"/>
                <col align="left" valign="top" span="1"/>
                <col align="left" valign="top" span="1"/>
                <col align="left" valign="top" span="1"/>
              </colgroup>
              <thead>
                <tr>
                  <th align="left" rowspan="1" colspan="1">
                    <bold>Symbol</bold>
                  </th>
                  <th align="left" rowspan="1" colspan="1">
                    <bold>Main stream</bold>
                  </th>
                  <th align="left" rowspan="1" colspan="1">
                    <bold>Extra stream</bold>
                  </th>
                  <th align="left" rowspan="1" colspan="1">
                    <bold>Case stream</bold>
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td align="left" rowspan="1" colspan="1">A</td>
                  <td align="left" rowspan="1" colspan="1">0</td>
                  <td align="left" rowspan="1" colspan="1">{}</td>
                  <td align="left" rowspan="1" colspan="1">0</td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">a</td>
                  <td align="left" rowspan="1" colspan="1">0</td>
                  <td align="left" rowspan="1" colspan="1">{}</td>
                  <td align="left" rowspan="1" colspan="1">1</td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">C</td>
                  <td align="left" rowspan="1" colspan="1">1</td>
                  <td align="left" rowspan="1" colspan="1">0</td>
                  <td align="left" rowspan="1" colspan="1">0</td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">c</td>
                  <td align="left" rowspan="1" colspan="1">1</td>
                  <td align="left" rowspan="1" colspan="1">0</td>
                  <td align="left" rowspan="1" colspan="1">1</td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">G</td>
                  <td align="left" rowspan="1" colspan="1">2</td>
                  <td align="left" rowspan="1" colspan="1">{}</td>
                  <td align="left" rowspan="1" colspan="1">0</td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">g</td>
                  <td align="left" rowspan="1" colspan="1">2</td>
                  <td align="left" rowspan="1" colspan="1">{}</td>
                  <td align="left" rowspan="1" colspan="1">1</td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">T</td>
                  <td align="left" rowspan="1" colspan="1">3</td>
                  <td align="left" rowspan="1" colspan="1">{}</td>
                  <td align="left" rowspan="1" colspan="1">0</td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">t</td>
                  <td align="left" rowspan="1" colspan="1">3</td>
                  <td align="left" rowspan="1" colspan="1">{}</td>
                  <td align="left" rowspan="1" colspan="1">1</td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">N</td>
                  <td align="left" rowspan="1" colspan="1">1</td>
                  <td align="left" rowspan="1" colspan="1">1</td>
                  <td align="left" rowspan="1" colspan="1">0</td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">n</td>
                  <td align="left" rowspan="1" colspan="1">1</td>
                  <td align="left" rowspan="1" colspan="1">1</td>
                  <td align="left" rowspan="1" colspan="1">1</td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">-</td>
                  <td align="left" rowspan="1" colspan="1">4</td>
                  <td align="left" rowspan="1" colspan="1">{}</td>
                  <td align="left" rowspan="1" colspan="1">{}</td>
                </tr>
              </tbody>
            </table>
          </alternatives>
          <table-wrap-foot>
            <fn id="t001fn001">
              <p>The {} represents a stream that is not present for a particular symbol.</p>
            </fn>
          </table-wrap-foot>
        </table-wrap>
        <p>According to Section 1.1.1, the ‘s’ lines contain some header information that needs to be handled. The first time a given <italic>source name</italic> and <italic>source size</italic> field appears, the encoder needs to encode the entire string of <italic>source name</italic> and the number that corresponds to the <italic>source size</italic>. For the other times that this same <italic>source name</italic> needs to be coded, the encoder only needs to send a number that will identify this <italic>source name</italic>. During the decoding process, this number will be used to obtain the <italic>source name</italic> and <italic>source size</italic> fields that will be stored in an auxiliary table, with the already decoded <italic>source names</italic> and <italic>source sizes</italic>. These two fields are both encoded using a finite-context model (FCM) with an uniform distribution. The <italic>size</italic> field can be obtained by the number of non-gaps that are in the sequence alignment of the MSAB. The <italic>start</italic> field is also encoded using FCM with a uniform distribution. However, this field can be also represented by an offset that can be computed as
<disp-formula id="pone.0116082.e004"><alternatives><graphic xlink:href="pone.0116082.e004.jpg" id="pone.0116082.e004g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M4"><mml:mrow><mml:mi>startOffset</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mi>start</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>start</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>size</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:math></alternatives><label>(4)</label></disp-formula>
where start<sub><italic>x</italic></sub> represents the current start of a given source, start<sub><italic>x</italic>−1</sub> indicates the previous start of the same source and size<sub><italic>x</italic>−1</sub> represents the size of the align sequence of the previous ‘s’ line of the same source. Instead of encoding the absolute <italic>start</italic> value, MAFCO encodes the offset using <xref ref-type="disp-formula" rid="pone.0116082.e004">(4)</xref>. This technique allows the encoder to spend less bits encoding this field, due to the fact that usually this offset is zero most of the time. This approach is only used if a ‘s’ line of a given source was already processed (a reference <italic>start</italic> value is necessary to compute the offset). There are also situations where the obtained offset is negative. This situation is caused because the alignment made of a given source can start at a position after the <italic>start</italic> position of the last alignment. In this case, MAFCO also encodes the <italic>start</italic> field as an absolute value. An auxiliary binary stream is needed to differentiate an absolute start value from a offset start value. This auxiliary stream is encoded using a 5-order FCM. The model order of the previous stream and all the other models that are used in MAFCO can be specified by the user, however default values are defined. The <italic>strand</italic> field can only have two different values, ‘+’ or ‘-’. This field is encoded using a 3-order FCM.</p>
        <p>In <xref rid="pone.0116082.t001" ref-type="table">Table 1</xref> we can find the symbols mapping for the DNA bases and alignment gaps along the three streams used to encode the alignment sequence. The {} represents a stream that is not present to encode a given symbol. According to <xref ref-type="fig" rid="pone.0116082.g004">Fig. 4</xref>, MAFCO splits the DNA alignments into two or three different streams. The <italic>main stream</italic> (always present) is a 5-symbol information source 𝓐<sub><italic>s</italic></sub>, which conveys the information of the DNA bases and alignment gaps. This stream is encoded using one of the five templates depicted in <xref ref-type="fig" rid="pone.0116082.g003">Fig. 3</xref>. By default, MAFCO uses the template ‘C’ with depth 10 (model order). The second stream depicted in <xref ref-type="fig" rid="pone.0116082.g004">Fig. 4</xref> as <italic>extra stream</italic>, is present in absence of ACGT symbols (N’s and n’s). In case of having an alignment gap (‘-’), this <italic>extra stream</italic> is not necessary. This particular stream must be present to disambiguate the occurrence of the “1” symbol in the <italic>main stream</italic>. A “0” in this stream represents a c/C base, whereas a “1” means an extra symbol n/N. This stream is encoded by default using a 5-order FCM. As mentioned before, the MSABs may contain upper and lower case DNA bases. In order to encode this information, a third stream, called <italic>case stream</italic>, is necessary. This binary stream is associated to each symbol of the <italic>main stream</italic> (except the alignment gap symbol ‘-’), indicating the respective case type. Similar to the previous streams, this stream is also compressed using a order-5 FCM.</p>
        <fig id="pone.0116082.g004" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pone.0116082.g004</object-id>
          <label>Fig 4</label>
          <caption>
            <title>Illustration of each one of the streams used for encoding the DNA alignments information.</title>
            <p>In this example we are processing a MSAB with three lines and currently the third line is the one being processed. Depending of the symbol, the sequence can be split into at most three streams. The first stream corresponds to the DNA bases and gaps. The second stream represents the extra symbols (N’s and n’s). The last stream is used to process the upper/lower case information. All these streams are encoded using FCM and arithmetic coding.</p>
          </caption>
          <graphic xlink:href="pone.0116082.g004"/>
        </fig>
      </sec>
      <sec id="sec008">
        <title>2.1.2 Compression of the ‘q’ lines</title>
        <p>As mentioned in Section 1.1.1, the ‘q’ lines contain information about the quality of each aligned base of the immediately preceding ‘s’ line. The source name is the same as the previous ‘s’ line, so that information was already processed before and it is not necessary to encode it again. Regarding the quality values, in this case we have an alphabet of 13 symbols: 𝓐<sub><italic>q</italic></sub> = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, F, −, .}. In fact, the size of the alphabet is 12 symbols, because the gap positions are the same as in the immediately preceding ‘s’ line, so the alignment gaps are not encoded here. This stream of quality values is encoded using a single order-5 FCM. A different model order can be specified by the user, but for a large alphabet such as 𝓐<sub><italic>q</italic></sub>, higher model orders require more memory. Furthermore, the presence of these ‘q’ lines needs to be encoded as well, because there are MAF files that may not have these optional lines. A binary stream is then necessary to indicate, for each MSAB, if it contains ‘q’ lines. Inside each MSAB, it is also necessary to indicate for each ‘s’ line if there is a ‘q’ line associated (having the same source name). The first ‘s’ line (reference source) does not have any ‘q’ line associated. However, for the remaining ‘s’ lines, it is necessary a second binary stream that indicates if it has a ‘q’ line associated. These two binary streams are encoded also using a 5-order FCM.</p>
      </sec>
      <sec id="sec009">
        <title>2.1.3 Compression of the ‘i’ lines</title>
        <p>Similar to the ‘q’ lines, the ‘i’ lines are also associated to a ‘s’ line. This means that the source name of a ‘i’ line is the same as the immediately preceding ‘s’ line. The only information that needs to be encoded corresponds to the four fields described in Section 1.1.1. The counts are compressed using a single FCM with a uniform distribution. The status symbols are encoded using a 4-order FCM.</p>
        <p>After analyzing the contents of some of the MAF files, we noticed that there is a correlation between the left and right status and counts of the same source. Basically, the left status symbol and count of a given source is the same as the last right status symbol and count. This means that we only need to encode both left and right status and count for the first time that a given source of a ‘i’ line appears. After the first occurrence of a ‘i’ line of a given source, the proposed method only encodes the right status and count. The left status and count can be obtained by the previous right status and count already processed. However, there are some irregularities in this “rule”. Sometimes, the left status or/and count are different from the previous right status and count. In order to overcome these irregularities, we created two auxiliary binary streams that represent these irregularities (one stream for the irregular counts and the other for the irregular status symbols). Both streams are independent, because it is possible to have only an irregular count and not an irregular status symbol. By default, these two streams are encoded using a 5-order FCM. Similar to the ‘q’ lines the ‘i’ lines also have a binary stream that indicates if the current MSAB has ‘i’ lines. This stream is also encoded using a 5-order FCM.</p>
      </sec>
      <sec id="sec010">
        <title>2.1.4 Compression of the ‘e’ lines</title>
        <p>The ‘e’ lines are quite different, when compared to the ‘q’ and ‘i’ lines. They are not associated with any of the ‘s’ lines of the MSAB that is being encoded. However, they only appear in a MSAB if in any of the previous MSABs a ‘s’ or a ‘e’ line of the same source occurred. Because the ‘e’ lines are not associated to any ‘s’ lines of the current MSAB, all header fields (source name, start position, etc.) need to be encoded. This header information is compressed in the same way as the header information of the ‘s’ lines. The ‘e’ lines have a status field that the ‘s’ lines do not have. The status field of a given ‘e’ line usually has the same value of the status field as the ‘e’ line of the immediately preceding MSAB or the last ‘i’ line processed of the same source. Two auxiliary binary streams are necessary to encode the status symbol of a given ‘e’ line. These streams indicate if an irregularity occurred between the current status value of a given ‘e’ line and the previous ‘e’ or ‘i’ line status value of the same source. Both streams are encoded using a 5-order FCM.</p>
      </sec>
      <sec id="sec011">
        <title>2.1.5 Parallel processing and partial decoding</title>
        <p>Genomic data files are growing in size every day, a growth that leads to both storage and access issues. In order to overcome these issues, MAFCO uses an approach that allows large files to be split into several parts that can be compressed/decompressed in parallel. This approach reduces the compression/decompression time. However, some compression ratio loss might occur, because statistics gathered in one part of the file may not be available in other parts. Despite this, the compression ratio loss in large files is usually small, and largely compensated by the gain in compression/decompression time. Furthermore, this splitting approach allows the user to decode only some parts of the encoded file, without needing to decode the full compressed file.</p>
        <p>The proposed compression tool allows parallel compression/decompression of MAF files that contain several MSABs. After the splitting process, each part contains an integer number of MSABs. By default, the compression tool splits the input MAF file into four parts and, by consequence, uses also 4 threads. The number of parts in which the MAF file can be split may be specified by the user (-ng flag), as well as the maximum number of threads (-nt flag). We call to each part of the split file a GOBs (Group Of Blocks). By default, in the decoder the entire compressed file is decoded. However, the user can specify a range of GOBs to decode (-ng flag). Note that it is only possible to decode a range of GOBs if the file was initially encoded using a multi-part approach. This approach is quite useful, because it can reduce the decompression time, by skipping the decoding of some unneeded GOBs. Furthermore, the number of threads that is used in the decoder does not have to be the same as in the encoder. This allows, for example, the compression of large files using multi-core computers, while being able to decompress them in more modest machines, if needed. This capability is helpful, because usually the compression of MAF files is done only once by a powerful multi-core computer. The decoding is done many times by the research community, using computers with very different capabilities.</p>
      </sec>
    </sec>
    <sec id="sec012">
      <title>2.2 Data sets</title>
      <p>We used four data sets for assessing the performance of the proposed compression tool. The data sets were retrieved from the UCSC Genome Bioinformatics Browser (see <xref ref-type="supplementary-material" rid="pone.0116082.s008">S2 Table</xref>). The four data sets used are aligned taking as a reference the human genome, although the proposed compression tool is compatible with other data sets. For example there are data sets that are aligned with other species such as: chicken [<xref rid="pone.0116082.ref029" ref-type="bibr">29</xref>], mouse [<xref rid="pone.0116082.ref030" ref-type="bibr">30</xref>], gorilla [<xref rid="pone.0116082.ref031" ref-type="bibr">31</xref>], etc. We decided to only include the data sets that have the human genome as a reference because they are the most relevant ones used in the literature.</p>
      <p>The data set <italic>multiz28wayB</italic> was created from the “multiz28wayAnno.tar.gz” file, which contains alignments similar (but not equal) to the ones in <italic>multiz28way</italic>, with the optional ‘q’, ‘i’ and ‘e’ lines that are not present in the <italic>multiz28way</italic> data set.</p>
      <p>The <italic>multiz28way</italic> data set was first used by Hanus <italic>et al</italic>. [<xref rid="pone.0116082.ref024" ref-type="bibr">24</xref>]. It contains 27 vertebrate genomes aligned with the human genome (a total of 28 species). The <italic>multiz46way</italic> and <italic>multiz100way</italic> contain 45 and 99 vertebrate genomes, respectively, also aligned with the human genome (a total of 46 and 100 species respectively). These data sets are quite different in terms of number of species and consequently in terms of size. Moreover, they are also different in terms of the line types that each one contains.</p>
      <p>In Section 1.1.1 we describe the line types that can be found in MAF files. In <xref rid="pone.0116082.t002" ref-type="table">Table 2</xref>, we can see the different line types that each data set has. The ‘s’ lines are the most important lines so they appear in all the four data sets. The <italic>multiz28wayB</italic> and <italic>multiz46way</italic> data sets are the only ones that have ‘q’ lines. The ‘i’ and ‘e’ lines can only be found in the <italic>multiz28wayB</italic>, <italic>multiz46way</italic>, and <italic>multiz100way</italic> data sets. These differences will affect the attained compression results, as we will explain in the results section.</p>
      <table-wrap id="pone.0116082.t002" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.1371/journal.pone.0116082.t002</object-id>
        <label>Table 2</label>
        <caption>
          <title>Approximate raw size of each data set, number of species, number of MSABs, and line types that each data set has.</title>
        </caption>
        <alternatives>
          <graphic id="pone.0116082.t002g" xlink:href="pone.0116082.t002"/>
          <table frame="box" rules="all" border="0">
            <colgroup span="1">
              <col align="left" valign="top" span="1"/>
              <col align="left" valign="top" span="1"/>
              <col align="left" valign="top" span="1"/>
              <col align="left" valign="top" span="1"/>
              <col align="left" valign="top" span="1"/>
              <col align="left" valign="top" span="1"/>
              <col align="left" valign="top" span="1"/>
              <col align="left" valign="top" span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th align="left" rowspan="2" colspan="1">
                  <bold>Data set</bold>
                </th>
                <th align="left" rowspan="2" colspan="1">
                  <bold>Uncompressed size (gigabytes)</bold>
                </th>
                <th align="left" rowspan="2" colspan="1">
                  <bold>Number of species</bold>
                </th>
                <th align="left" rowspan="2" colspan="1">
                  <bold>Number of MSABs</bold>
                </th>
                <th align="center" colspan="4" rowspan="1">
                  <bold>Line types</bold>
                </th>
              </tr>
              <tr>
                <th align="left" rowspan="1" colspan="1">
                  <bold>‘s’</bold>
                </th>
                <th align="left" rowspan="1" colspan="1">
                  <bold>‘q’</bold>
                </th>
                <th align="left" rowspan="1" colspan="1">
                  <bold>‘i’</bold>
                </th>
                <th align="left" rowspan="1" colspan="1">
                  <bold>‘e’</bold>
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left" rowspan="1" colspan="1">
                  <italic>multiz28way</italic>
                </td>
                <td align="left" rowspan="1" colspan="1">45</td>
                <td align="left" rowspan="1" colspan="1">28</td>
                <td align="left" rowspan="1" colspan="1">23, 120, 374</td>
                <td align="left" rowspan="1" colspan="1">Yes</td>
                <td align="left" rowspan="1" colspan="1">No</td>
                <td align="left" rowspan="1" colspan="1">No</td>
                <td align="left" rowspan="1" colspan="1">No</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">
                  <italic>multiz28wayB</italic>
                </td>
                <td align="left" rowspan="1" colspan="1">106</td>
                <td align="left" rowspan="1" colspan="1">28</td>
                <td align="left" rowspan="1" colspan="1">23, 387, 797</td>
                <td align="left" rowspan="1" colspan="1">Yes</td>
                <td align="left" rowspan="1" colspan="1">Yes</td>
                <td align="left" rowspan="1" colspan="1">Yes</td>
                <td align="left" rowspan="1" colspan="1">Yes</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">
                  <italic>multiz46way</italic>
                </td>
                <td align="left" rowspan="1" colspan="1">252</td>
                <td align="left" rowspan="1" colspan="1">46</td>
                <td align="left" rowspan="1" colspan="1">33, 429, 985</td>
                <td align="left" rowspan="1" colspan="1">Yes</td>
                <td align="left" rowspan="1" colspan="1">Yes</td>
                <td align="left" rowspan="1" colspan="1">Yes</td>
                <td align="left" rowspan="1" colspan="1">Yes</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">
                  <italic>multiz100way</italic>
                </td>
                <td align="left" rowspan="1" colspan="1">716</td>
                <td align="left" rowspan="1" colspan="1">100</td>
                <td align="left" rowspan="1" colspan="1">109, 850, 940</td>
                <td align="left" rowspan="1" colspan="1">Yes</td>
                <td align="left" rowspan="1" colspan="1">No</td>
                <td align="left" rowspan="1" colspan="1">Yes</td>
                <td align="left" rowspan="1" colspan="1">Yes</td>
              </tr>
            </tbody>
          </table>
        </alternatives>
        <table-wrap-foot>
          <fn id="t002fn001">
            <p>“Yes” symbolizes the presence of a line type in the data set while “No” symbolizes absence.</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
      <sec id="sec013">
        <title>2.2.1 Statistical information of the data sets</title>
        <p>This section presents some statistical information regarding the data sets used in this work. The locations where these data sets were retrieved are depicted in <xref ref-type="supplementary-material" rid="pone.0116082.s008">S2 Table</xref>.</p>
        <p>There are some important differences among the data set used in this work that are worth to describe in order to justify some of the obtained results. In what follows we will present some statistics of the data sets used in this work. One interesting and important statistic (depicted in <xref ref-type="supplementary-material" rid="pone.0116082.s001">S1</xref> and <xref ref-type="supplementary-material" rid="pone.0116082.s002">S2</xref> Figs.) is the size of each MSAB. From <xref ref-type="supplementary-material" rid="pone.0116082.s001">S1 Fig</xref>., we conclude that, in terms of percentage of occurrence, there is a similar statistical pattern in the four data sets. The maximum number of rows of the first two data sets is 28, because it corresponds to the number of species in these data sets. For the other two data sets, the maximum number of rows is 46 and 100, respectively. Despite the first two data sets have the same number of species and the species are also similar, the statistics regarding the number of rows in each MSAB is different. We can see in <xref ref-type="supplementary-material" rid="pone.0116082.s001">S1 Fig</xref>. that the <italic>multiz28wayB</italic> has more MSABs with one row, compared to the <italic>multiz28way</italic> (about 1.1% more). There are also small differences (lower than 0.1%) between those two data sets for higher number of rows.</p>
        <p>Regarding the number of columns of each MSAB, in <xref ref-type="supplementary-material" rid="pone.0116082.s002">S2 Fig</xref>. we can find some statistics for the data sets used in this work. For the first three data sets (<italic>multiz28way</italic>
<italic>multiz28wayB</italic>, and <italic>multiz46way</italic>), we notice a similar statistical pattern. However, the last data set (<italic>multiz100way</italic>) has a very different statistical pattern. This difference affects the compression results (in Section 3 we will address this subject again). Contrarily to the first three data sets, there is a high percentage of MSABs (about 13.8%) than only have one column in <italic>multiz100way</italic>. These MSABs with few columns impact the compression results of the proposed method, as we will see in Section 3. It is important to note that the range of the number of columns for each MSAB is quite large. For example, in <italic>multiz100way</italic> the maximum number of columns for a MSAB can go up to 11, 236, 519. In order to create the charts of <xref ref-type="supplementary-material" rid="pone.0116082.s002">S2 Fig</xref>., we filtered the statistics in order to contain about 90% of the occurrences. This way, we can analyze more easily the obtained results. Regarding the first two data sets, there are again some minor statistical differences, lower than 0.1%, that are relevant in terms of compression results.</p>
      </sec>
      <sec id="sec014">
        <title>2.2.2 Statistical information of the ‘s’, ‘q’, ‘i’, and ‘e’ line types</title>
        <p>The ‘s’ lines contain the DNA alignments. These alignments are usually DNA bases that include the nucleotides {A, C, G, T}. However, there are some other symbols in these particular data sets which may include some non-ACGT characters (N’s and the alignment gap ‘-’), as well as upper and lower case characters. <xref ref-type="supplementary-material" rid="pone.0116082.s003">S3 Fig</xref>. shows the statistics for the set of characters that occur in the ‘s’ lines. We can see that the N’s characters are the less frequent. On the other hand, the gap symbol (‘-’) is the most frequent symbol. The frequency of the gap symbol tends to increase when the number of species increases. This is justified by the increased difficulty in creating alignments with more species, leading to more alignment gaps.</p>
        <p>Regarding the ‘q’ lines and according to what we mentioned in Section 1.1.1, there are 11 different quality values that may occur. There are also other possible characters like the alignment gap ‘-’ and a dot character ‘.’, that indicates a missing quality value. In <xref ref-type="supplementary-material" rid="pone.0116082.s004">S4 Fig</xref>., we can find the statistics of each one of the 11 quality values present in the <italic>multiz28wayB</italic> and <italic>multiz46way</italic> data sets. Notice that the other two data sets do not have ‘q’ lines. According to <xref ref-type="supplementary-material" rid="pone.0116082.s004">S4 Fig</xref>., the quality value 9 occurs more than 92%, meaning that the majority of the alignments have a high quality level (see <xref ref-type="supplementary-material" rid="pone.0116082.s007">S1 Table</xref>).</p>
        <p>The ‘i’ lines have two of the fields called left and right status. According to what we have described in Section 1.1.1, there are six different status characters. In <xref ref-type="supplementary-material" rid="pone.0116082.s005">S5 Fig</xref>., we can find the percentage of occurrence of each status character. We did not take into account the left and right status, since we have simply computed the overall percentage (left and right together). The most frequent status character is ‘C’. This means that there is an high percentage of contiguous sequences between entire MSABs, i.e., it exists some redundancy between several MSABs.</p>
        <p>Finally in the ‘e’ lines, there is also a status character field, but there are only five possible characters in this case (<xref ref-type="supplementary-material" rid="pone.0116082.s006">S6 Fig</xref>. depicts their percentage of occurrence) As we can see, the most frequent status character is ‘I’, which symbolizes the presence of non-aligning bases in the source species between chained MSABs before and after this MSAB.</p>
      </sec>
    </sec>
  </sec>
  <sec id="sec015">
    <title>Results and discussion</title>
    <p>The experimental results described in this section were performed in a Linux server running Ubuntu with 16 Intel(R) Xeon(R) CPUs (E7320 2.13GHz) and 256 gigabytes of memory. The source code and two Windows binaries (32 and 64 bits) are available for testing at <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.ua.pt/software/mafco">http://bioinformatics.ua.pt/software/mafco</ext-link>. There are also three small MAF files available at this site, as well as instructions of how to quickly test the compression program.</p>
    <p>In this section, we present the compression results obtained using several popular general compression methods, such as gzip, bzip2, ppmd, and lzma (the last two using the version implemented by the 7z archiver) as well as by method [<xref rid="pone.0116082.ref024" ref-type="bibr">24</xref>], the maf-bgzip tool [<xref rid="pone.0116082.ref025" ref-type="bibr">25</xref>–<xref rid="pone.0116082.ref027" ref-type="bibr">27</xref>] and by the compression tool described in this paper.</p>
    <p>The performance of each compression method can be found summarized in <xref rid="pone.0116082.t003" ref-type="table">Table 3</xref>. Alternative, in <xref ref-type="supplementary-material" rid="pone.0116082.s009">S3</xref>–<xref ref-type="supplementary-material" rid="pone.0116082.s012">S6</xref> Tables we can find the same results with more detail for each MAF file for the four data sets used in this work. The results are presented in bytes for gzip and in percentage compression gain in relation with gzip, for the other methods. The compression gain in relation with gzip was computed as:
<disp-formula id="pone.0116082.e005"><alternatives><graphic xlink:href="pone.0116082.e005.jpg" id="pone.0116082.e005g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M5"><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>100</mml:mn><mml:mo>×</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>NBytes</mml:mi><mml:mrow><mml:mi>g</mml:mi><mml:mi>z</mml:mi><mml:mi>i</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>NBytes</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow><mml:msub><mml:mi>NBytes</mml:mi><mml:mrow><mml:mi>g</mml:mi><mml:mi>z</mml:mi><mml:mi>i</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msub></mml:mfrac></mml:mrow></mml:math></alternatives><label>(5)</label></disp-formula>
where <italic>M</italic> denotes a compression method and the “NBytes” corresponds to the size of the compressed file in bytes. These results were obtained using a single thread and without splitting the MAF file in several GOBs, and will be used later to evaluate the performance loss when the compressor splits the input MAF file into several GOBs. For the <italic>multiz28way</italic>, the proposed method attained about 9% better results, when compared to Hanus <italic>et al.</italic> method [<xref rid="pone.0116082.ref024" ref-type="bibr">24</xref>]. It was not possible to obtain the compression results for the other data sets, using method [<xref rid="pone.0116082.ref024" ref-type="bibr">24</xref>], due to compatibility problems. When compared with gzip, MAFCO attained a compression gain of 51.7% for the <italic>multiz28way</italic> data set. For the <italic>multiz28wayB</italic> and <italic>multiz46way</italic> data sets, the compression gain is about 54.3% and 57.3%, respectively. Without considering the <italic>multiz100way</italic> data set, it seems that the compression gain tends to increase with the size of each data set. The lower compression performance (about 34.1%) attained in the <italic>multiz100way</italic> data set using MAFCO can be justified due to the small average number of columns of the MSABs (see <xref ref-type="supplementary-material" rid="pone.0116082.s003">S3 Fig</xref>.), suggesting that the model presented in Section 2.1.1 to compress the ‘s’ lines is less effective when the MSABs have a small number of columns.</p>
    <table-wrap id="pone.0116082.t003" orientation="portrait" position="float">
      <object-id pub-id-type="doi">10.1371/journal.pone.0116082.t003</object-id>
      <label>Table 3</label>
      <caption>
        <title>Performance of several compression methods in the four data sets used in this work.</title>
      </caption>
      <alternatives>
        <graphic id="pone.0116082.t003g" xlink:href="pone.0116082.t003"/>
        <table frame="box" rules="all" border="0">
          <colgroup span="1">
            <col align="left" valign="top" span="1"/>
            <col align="left" valign="top" span="1"/>
            <col align="left" valign="top" span="1"/>
            <col align="left" valign="top" span="1"/>
            <col align="left" valign="top" span="1"/>
            <col align="left" valign="top" span="1"/>
            <col align="left" valign="top" span="1"/>
            <col align="left" valign="top" span="1"/>
            <col align="left" valign="top" span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th align="left" rowspan="1" colspan="1">Data set</th>
              <th align="left" rowspan="1" colspan="1">Original Size</th>
              <th align="left" rowspan="1" colspan="1">GZIP size</th>
              <th align="left" rowspan="1" colspan="1">BZIP2</th>
              <th align="left" rowspan="1" colspan="1">PPMD</th>
              <th align="left" rowspan="1" colspan="1">LZMA</th>
              <th align="left" rowspan="1" colspan="1">BGZIP</th>
              <th align="left" rowspan="1" colspan="1">MSAc</th>
              <th align="left" rowspan="1" colspan="1">MAFCO</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" rowspan="1" colspan="1">
                <italic>multiz28way</italic>
              </td>
              <td align="left" rowspan="1" colspan="1">48, 510, 921, 185</td>
              <td align="left" rowspan="1" colspan="1">10, 443, 713, 974</td>
              <td align="char" char="." rowspan="1" colspan="1">8.7%</td>
              <td align="char" char="." rowspan="1" colspan="1">10.9%</td>
              <td align="char" char="." rowspan="1" colspan="1">23.1%</td>
              <td align="char" char="." rowspan="1" colspan="1">-21.1%</td>
              <td align="char" char="." rowspan="1" colspan="1">46.8%</td>
              <td align="char" char="." rowspan="1" colspan="1">51.7%</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">
                <italic>multiz28wayB</italic>
              </td>
              <td align="left" rowspan="1" colspan="1">113, 528, 207, 035</td>
              <td align="left" rowspan="1" colspan="1">16, 216, 614, 098</td>
              <td align="char" char="." rowspan="1" colspan="1">16.6%</td>
              <td align="char" char="." rowspan="1" colspan="1">13.7%</td>
              <td align="char" char="." rowspan="1" colspan="1">20.7%</td>
              <td align="char" char="." rowspan="1" colspan="1">-35.1%</td>
              <td align="left" rowspan="1" colspan="1">–</td>
              <td align="char" char="." rowspan="1" colspan="1">54.3%</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">
                <italic>multiz46way</italic>
              </td>
              <td align="left" rowspan="1" colspan="1">270, 579, 509, 536</td>
              <td align="left" rowspan="1" colspan="1">32, 523, 764, 993</td>
              <td align="char" char="." rowspan="1" colspan="1">18.1%</td>
              <td align="char" char="." rowspan="1" colspan="1">5.1%</td>
              <td align="char" char="." rowspan="1" colspan="1">21.0%</td>
              <td align="char" char="." rowspan="1" colspan="1">-49.1%</td>
              <td align="left" rowspan="1" colspan="1">–</td>
              <td align="char" char="." rowspan="1" colspan="1">57.3%</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">
                <italic>multiz100way</italic>
              </td>
              <td align="left" rowspan="1" colspan="1">794, 243, 994, 061</td>
              <td align="left" rowspan="1" colspan="1">72, 086, 319, 647</td>
              <td align="char" char="." rowspan="1" colspan="1">21.2%</td>
              <td align="char" char="." rowspan="1" colspan="1">-8.5%</td>
              <td align="char" char="." rowspan="1" colspan="1">20.7%</td>
              <td align="char" char="." rowspan="1" colspan="1">-79.7%</td>
              <td align="left" rowspan="1" colspan="1">–</td>
              <td align="char" char="." rowspan="1" colspan="1">34.1%</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">Total</td>
              <td align="left" rowspan="1" colspan="1">1, 226, 862, 631, 817</td>
              <td align="left" rowspan="1" colspan="1">131, 270, 412, 712</td>
              <td align="char" char="." rowspan="1" colspan="1">18.9%</td>
              <td align="char" char="." rowspan="1" colspan="1">-0.8%</td>
              <td align="char" char="." rowspan="1" colspan="1">21.0%</td>
              <td align="char" char="." rowspan="1" colspan="1">-61.9%</td>
              <td align="left" rowspan="1" colspan="1">–</td>
              <td align="char" char="." rowspan="1" colspan="1">43.7%</td>
            </tr>
          </tbody>
        </table>
      </alternatives>
      <table-wrap-foot>
        <fn id="t003fn001">
          <p>“BGZIP” refers to the maf-bgzip tool [<xref rid="pone.0116082.ref025" ref-type="bibr">25</xref>–<xref rid="pone.0116082.ref027" ref-type="bibr">27</xref>], “MSAc” refers to method [<xref rid="pone.0116082.ref024" ref-type="bibr">24</xref>] and MAFCO is the proposed method. Size is presented in bytes, whereas the percentages indicate the amount of reduction attained in comparison to gzip.</p>
        </fn>
      </table-wrap-foot>
    </table-wrap>
    <p>Looking again at <xref rid="pone.0116082.t003" ref-type="table">Table 3</xref>, we can see that the performance of bzip2 increases as the size of the data sets increases. The ppmd and maf-bgzip performance have a different behavior: it decreases as the data sets increase in size, even reaching “negative” performances for the <italic>multiz100way</italic> in case of the ppmd. The maf-bgzip has the worst performance for all data sets, when compared to gzip. The reason to this low performance is due to the nature of the compression method. As mentioned earlier in Section 1.2, the goal of this tool is to provide fast random access to gzip files, sacrificing compression performance. Method [<xref rid="pone.0116082.ref024" ref-type="bibr">24</xref>] works only for data sets having exclusively ‘s’ lines (e.g., the <italic>multiz28way</italic> data set). Despite the good results when compared to gzip (about 46.8%), the compression tool provided by Hanus <italic>et al.</italic> does not work in some files of the <italic>multiz28way</italic> data set (<italic>chr15</italic>, <italic>chr16</italic>, <italic>chr17</italic>, and <italic>chr19</italic>). The encoder is capable of encoding those files, however it was not possible to decompress them.</p>
    <p>In terms of global coding time (compression plus decompression), our method is slower when compared to all the other methods, except method [<xref rid="pone.0116082.ref024" ref-type="bibr">24</xref>]. However, it seems that in the encoding phase lzma is the slowest method among all the others. Despite all this, the proposed compression tool is ≈ 5 times faster than method [<xref rid="pone.0116082.ref024" ref-type="bibr">24</xref>]. In the decoding phase, MAFCO is ≈ 4 times faster, when compared to the Hanus <italic>et al.</italic> method [<xref rid="pone.0116082.ref024" ref-type="bibr">24</xref>]. These conclusions were only made based on the results of <xref ref-type="supplementary-material" rid="pone.0116082.s009">S3 Table</xref> for the <italic>multiz28way</italic> data set, using a single thread and without splitting the MAF file in several GOBs. <xref ref-type="fig" rid="pone.0116082.g005">Fig. 5</xref> illustrates the relation between the size of each data set and the corresponding encoding/decoding time using a single thread.</p>
    <fig id="pone.0116082.g005" orientation="portrait" position="float">
      <object-id pub-id-type="doi">10.1371/journal.pone.0116082.g005</object-id>
      <label>Fig 5</label>
      <caption>
        <title>Relation between the size of each data set and the encoding/decoding time in hours.</title>
        <p>Each marker represents a data set (from left to right the markers correspond to the <italic>multiz28way</italic>, <italic>multiz28wayB</italic>, <italic>multiz46way</italic>, and <italic>multiz100way</italic> data sets). There is almost a linear behavior through the four data sets. The slightly deviation from the linear behavior is due to the difference between each data set in terms of line types.</p>
      </caption>
      <graphic xlink:href="pone.0116082.g005"/>
    </fig>
    <p>The obtained curves are almost linear through the four data sets. We can notice a slight deviation due to the differences between each data set in terms of line types that will affect the obtained results. Moreover, we can also observe that the time difference between encoding and decoding tends to increase for larger data sets.</p>
    <p>As mentioned earlier in Section 2.1.5, MAFCO implementation allows the user to split the MAF file into several GOBs and also to encode/decode them in parallel, using several threads. <xref rid="pone.0116082.t004" ref-type="table">Table 4</xref> presents the performance of MAFCO compared to gzip, when we split the MAF file into 1, 2, 4, and 8 GOBs. It is easy to conclude that even when the MAF file is split into 8 GOBs, the compression loss is lower than 1%, when compared to the results where the MAF file was not split.</p>
    <table-wrap id="pone.0116082.t004" orientation="portrait" position="float">
      <object-id pub-id-type="doi">10.1371/journal.pone.0116082.t004</object-id>
      <label>Table 4</label>
      <caption>
        <title>Compression performance of MAFCO using 1, 2, 4 and 8 threads/GOBs for the four data sets used in this work.</title>
      </caption>
      <alternatives>
        <graphic id="pone.0116082.t004g" xlink:href="pone.0116082.t004"/>
        <table frame="box" rules="all" border="0">
          <colgroup span="1">
            <col align="left" valign="top" span="1"/>
            <col align="left" valign="top" span="1"/>
            <col align="left" valign="top" span="1"/>
            <col align="left" valign="top" span="1"/>
            <col align="left" valign="top" span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th align="left" rowspan="2" colspan="1">
                <bold>Data sets</bold>
              </th>
              <th align="center" colspan="4" rowspan="1">
                <bold>Number of threads/GOBs</bold>
              </th>
            </tr>
            <tr>
              <th align="left" rowspan="1" colspan="1">1</th>
              <th align="left" rowspan="1" colspan="1">2</th>
              <th align="left" rowspan="1" colspan="1">4</th>
              <th align="left" rowspan="1" colspan="1">8</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" rowspan="1" colspan="1">
                <italic>multiz28way</italic>
              </td>
              <td align="char" char="." rowspan="1" colspan="1">51.74</td>
              <td align="char" char="." rowspan="1" colspan="1">51.51</td>
              <td align="char" char="." rowspan="1" colspan="1">51.20</td>
              <td align="char" char="." rowspan="1" colspan="1">50.78</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">
                <italic>multiz28wayB</italic>
              </td>
              <td align="char" char="." rowspan="1" colspan="1">54.34</td>
              <td align="char" char="." rowspan="1" colspan="1">54.17</td>
              <td align="char" char="." rowspan="1" colspan="1">53.94</td>
              <td align="char" char="." rowspan="1" colspan="1">53.62</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">
                <italic>multiz46way</italic>
              </td>
              <td align="char" char="." rowspan="1" colspan="1">57.29</td>
              <td align="char" char="." rowspan="1" colspan="1">57.18</td>
              <td align="char" char="." rowspan="1" colspan="1">57.02</td>
              <td align="char" char="." rowspan="1" colspan="1">56.81</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">
                <italic>multiz100way</italic>
              </td>
              <td align="char" char="." rowspan="1" colspan="1">34.05</td>
              <td align="char" char="." rowspan="1" colspan="1">34.00</td>
              <td align="char" char="." rowspan="1" colspan="1">33.93</td>
              <td align="char" char="." rowspan="1" colspan="1">33.84</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">Overall</td>
              <td align="char" char="." rowspan="1" colspan="1">43.72</td>
              <td align="char" char="." rowspan="1" colspan="1">43.63</td>
              <td align="char" char="." rowspan="1" colspan="1">43.50</td>
              <td align="char" char="." rowspan="1" colspan="1">43.32</td>
            </tr>
          </tbody>
        </table>
      </alternatives>
      <table-wrap-foot>
        <fn id="t004fn001">
          <p>The performance in percentage is in relation to gzip and was computed according to <xref ref-type="disp-formula" rid="pone.0116082.e005">Equation (5)</xref> illustrated in page 10.</p>
        </fn>
      </table-wrap-foot>
    </table-wrap>
    <p>The results of <xref rid="pone.0116082.t005" ref-type="table">Table 5</xref> correspond to the total amount of time needed to encode/decode the four data set using 1, 2, 4 and 8 threads. For individual results for each data set, consult <xref ref-type="supplementary-material" rid="pone.0116082.s013">S7</xref>–<xref ref-type="supplementary-material" rid="pone.0116082.s016">S10</xref> Tables. The obtained results were obtained by splitting the input MAF file into 1, 2, 4, and 8 GOBs. We used the same number of threads as the number of GOBs in our simulations, although MAFCO is capable of encoding/decoding a MAF file with a number of parallel processes that is different from the number of parts in which the file was split. Furthermore, the decoder can also use a number of threads that is different from the number used during encoding. In this particular case, we used the same number of threads, in order to be easier to analyze the results obtained. In term of encoding/decoding time we present three measures: “CPU time”, which corresponds to the total system and user time obtained by the Linux <italic>time</italic> function; The “Optimal CPU time”, computed by dividing “CPU time” by the number of threads used. The left values correspond to the encoding stage, whereas the right ones correspond to the decoding process. The previous time measures were used to compute the <italic>speedup</italic> and <italic>efficiency</italic> metrics. The first metric is defined as
<disp-formula id="pone.0116082.e006"><alternatives><graphic xlink:href="pone.0116082.e006.jpg" id="pone.0116082.e006g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M6"><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mi>p</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:msub><mml:mi>T</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msub><mml:mi>T</mml:mi><mml:mi>p</mml:mi></mml:msub></mml:mfrac><mml:mo>,</mml:mo></mml:mrow></mml:math></alternatives><label>(6)</label></disp-formula>
where <italic>p</italic> corresponds to the number of parallel processes, <italic>T</italic>
<sub>1</sub> is the execution time using one thread (sequential algorithm) and <italic>T</italic>
<sub><italic>p</italic></sub> is the execution time using <italic>p</italic> parallel processes. Linear or ideal speedup is obtained if <italic>S</italic>
<sub><italic>p</italic></sub> = <italic>p</italic>. The efficiency metric can be computed as
<disp-formula id="pone.0116082.e007"><alternatives><graphic xlink:href="pone.0116082.e007.jpg" id="pone.0116082.e007g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M7"><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mi>p</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:msub><mml:mi>S</mml:mi><mml:mi>p</mml:mi></mml:msub><mml:mi>p</mml:mi></mml:mfrac><mml:mo>=</mml:mo><mml:mfrac><mml:msub><mml:mi>T</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mrow><mml:mi>p</mml:mi><mml:msub><mml:mi>T</mml:mi><mml:mi>p</mml:mi></mml:msub></mml:mrow></mml:mfrac><mml:mo>.</mml:mo></mml:mrow></mml:math></alternatives><label>(7)</label></disp-formula>
This metric is a value between zero and one, that indicates how well-used the processors are in executing the algorithm. Efficiency values close to one correspond to linear speedup algorithms. On the other hand, values close to zero indicate that the processors are not being well-used (poor parallelization).</p>
    <table-wrap id="pone.0116082.t005" orientation="portrait" position="float">
      <object-id pub-id-type="doi">10.1371/journal.pone.0116082.t005</object-id>
      <label>Table 5</label>
      <caption>
        <title>Performance of MAFCO using 1, 2, 4 and 8 threads for the four data sets used in this work.</title>
      </caption>
      <alternatives>
        <graphic id="pone.0116082.t005g" xlink:href="pone.0116082.t005"/>
        <table frame="box" rules="all" border="0">
          <colgroup span="1">
            <col align="left" valign="top" span="1"/>
            <col align="left" valign="top" span="1"/>
            <col align="left" valign="top" span="1"/>
            <col align="left" valign="top" span="1"/>
            <col align="left" valign="top" span="1"/>
            <col align="left" valign="top" span="1"/>
            <col align="left" valign="top" span="1"/>
            <col align="left" valign="top" span="1"/>
            <col align="left" valign="top" span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th align="left" rowspan="1" colspan="1">
                <bold>Measure</bold>
              </th>
              <th align="center" colspan="4" rowspan="1">
                <bold>Encoding</bold>
              </th>
              <th align="center" colspan="4" rowspan="1">
                <bold>Decoding</bold>
              </th>
            </tr>
            <tr>
              <th align="left" rowspan="1" colspan="1">Number of threads</th>
              <th align="left" rowspan="1" colspan="1">1</th>
              <th align="left" rowspan="1" colspan="1">2</th>
              <th align="left" rowspan="1" colspan="1">4</th>
              <th align="left" rowspan="1" colspan="1">8</th>
              <th align="left" rowspan="1" colspan="1">1</th>
              <th align="left" rowspan="1" colspan="1">2</th>
              <th align="left" rowspan="1" colspan="1">4</th>
              <th align="left" rowspan="1" colspan="1">8</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" rowspan="1" colspan="1">CPU time (secs)</td>
              <td align="left" rowspan="1" colspan="1">171, 325</td>
              <td align="left" rowspan="1" colspan="1">172, 534</td>
              <td align="left" rowspan="1" colspan="1">175, 087</td>
              <td align="left" rowspan="1" colspan="1">184, 358</td>
              <td align="left" rowspan="1" colspan="1">236, 992</td>
              <td align="left" rowspan="1" colspan="1">239, 751</td>
              <td align="left" rowspan="1" colspan="1">241, 855</td>
              <td align="left" rowspan="1" colspan="1">243, 996</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">Optimal CPU time (secs)</td>
              <td align="left" rowspan="1" colspan="1">171, 325</td>
              <td align="left" rowspan="1" colspan="1">86, 267</td>
              <td align="left" rowspan="1" colspan="1">43, 772</td>
              <td align="left" rowspan="1" colspan="1">23, 045</td>
              <td align="left" rowspan="1" colspan="1">236, 992</td>
              <td align="left" rowspan="1" colspan="1">119, 876</td>
              <td align="left" rowspan="1" colspan="1">60, 464</td>
              <td align="left" rowspan="1" colspan="1">30, 500</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">Speedup</td>
              <td align="left" rowspan="1" colspan="1">1.00</td>
              <td align="left" rowspan="1" colspan="1">1.99</td>
              <td align="left" rowspan="1" colspan="1">3.91</td>
              <td align="left" rowspan="1" colspan="1">7.43</td>
              <td align="left" rowspan="1" colspan="1">1.00</td>
              <td align="left" rowspan="1" colspan="1">1.98</td>
              <td align="left" rowspan="1" colspan="1">3.92</td>
              <td align="left" rowspan="1" colspan="1">7.77</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">Efficiency</td>
              <td align="left" rowspan="1" colspan="1">1.00</td>
              <td align="left" rowspan="1" colspan="1">0.99</td>
              <td align="left" rowspan="1" colspan="1">0.98</td>
              <td align="left" rowspan="1" colspan="1">0.93</td>
              <td align="left" rowspan="1" colspan="1">1.00</td>
              <td align="left" rowspan="1" colspan="1">0.99</td>
              <td align="left" rowspan="1" colspan="1">0.98</td>
              <td align="left" rowspan="1" colspan="1">0.97</td>
            </tr>
          </tbody>
        </table>
      </alternatives>
      <table-wrap-foot>
        <fn id="t005fn001">
          <p>The CPU time corresponds to the total CPU time obtained by the <italic>time</italic> command in Linux. The optimal CPU time corresponds to the CPU time divided by the number of threads. The speedup was computed by dividing the optimal CPU time for one thread (sequential execution) by the optimal CPU time for <italic>n</italic> threads (calculated according to <xref ref-type="disp-formula" rid="pone.0116082.e006">(6)</xref>). Finally, the efficiency is obtained by dividing the speedup by the number of threads (according to <xref ref-type="disp-formula" rid="pone.0116082.e007">(7)</xref>).</p>
        </fn>
      </table-wrap-foot>
    </table-wrap>
    <p>Analyzing the obtained results, we can see that MAFCO has a linear speedup, up to 8 parallel processes. It seems that the efficiency of our method is similar between the encoding and decoding phases, regardless of the number of parallel processes used (up to 8 in this case).</p>
    <p><xref ref-type="fig" rid="pone.0116082.g006">Fig. 6</xref> depicts the encoding/decoding memory usage in megabytes for all the methods (except maf-bgzip). The memory has been estimated with <italic>valgrind</italic>, using <italic>massif</italic>. Because <italic>valgrind</italic> is very slow, we decided to assess the memory usage using three files from the <italic>multiz28way</italic> data set (<italic>chr2</italic>, <italic>chr9</italic>, and <italic>chrY</italic>). We computed the average value between the three files and plotted the obtained results in <xref ref-type="fig" rid="pone.0116082.g006">Fig. 6</xref>. As can be seen, along the methods evaluated, gzip, bzip2 and ppmd are the ones that require less memory. Method [<xref rid="pone.0116082.ref024" ref-type="bibr">24</xref>], denoted in <xref ref-type="fig" rid="pone.0116082.g006">Fig. 6</xref> as “MSAc”, is the one that requires more memory. The proposed method requires less memory than method [<xref rid="pone.0116082.ref024" ref-type="bibr">24</xref>] but more than lzma.</p>
    <fig id="pone.0116082.g006" orientation="portrait" position="float">
      <object-id pub-id-type="doi">10.1371/journal.pone.0116082.g006</object-id>
      <label>Fig 6</label>
      <caption>
        <title>Encoding and decoding memory usage in megabytes for all methods used in this work (except maf-bgzip).</title>
        <p>The memory has been estimated with <italic>valgrind</italic>, using <italic>massif</italic>. The presented values were computed considering only three representative MAF files (<italic>chr2</italic>, <italic>chr9</italic>, and <italic>chrY</italic>) from the <italic>multiz28way</italic> data set.</p>
      </caption>
      <graphic xlink:href="pone.0116082.g006"/>
    </fig>
  </sec>
  <sec sec-type="conclusions" id="sec016">
    <title>Conclusions</title>
    <p>It is clear that gzip is still wide used by the research community to compress genomic data due to is simplicity, pervasiveness and relatively good speed. Nevertheless, we cannot ignore the fact that the performance of gzip is limited in terms of compression gain because it is a general compression algorithm that was not created to compress specific genomic data. In this manuscript we present a compression method capable of attain file reduction close to 50% or even more, in relation to gzip. This means that it is virtually possible to store twice as much data in the same storage space available, by using a different compression tool. The utilization of more sophisticated compression algorithms is then worthy of consideration by the genomic laboratories. Higher compression results usually require complex algorithms that usually need more time and memory to run. However, these additional requirements are almost always compensated by the gains in terms of available storage. In summary, we are confident that the compression tool presented in this article is a relevant contribution for slowing down in part the data deluge that we are facing nowadays.</p>
  </sec>
  <sec sec-type="supplementary-material" id="sec017">
    <title>Supporting Information</title>
    <supplementary-material content-type="local-data" id="pone.0116082.s001">
      <label>S1 Fig</label>
      <caption>
        <title>Number of rows of each MSAB for the <italic>multiz28way</italic>, <italic>multiz28wayB</italic>, <italic>multiz46way</italic>, and <italic>multiz100way</italic> respectively.</title>
        <p>The results are depicted in terms of percentage of occurrence in order to be more easy to analyze them. Taking into account the maximum number of rows per MSAB allowed for each data set is 28, 28, 46, and 100 respectively, there is a similar statistic pattern between the four data sets.</p>
        <p>(EPS)</p>
      </caption>
      <media xlink:href="pone.0116082.s001.eps">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pone.0116082.s002">
      <label>S2 Fig</label>
      <caption>
        <title>Number of columns of each MSAB for the <italic>multiz28way</italic>, <italic>multiz28wayB</italic>, <italic>multiz46way</italic>, and <italic>multiz100way</italic> respectively.</title>
        <p>The results are depicted in term of percentage of occurrence and only cover about 90% of the occurrences in order to be more easy to make some conclusions. The first three data sets have a similar statistical pattern. On the contrary, in the last data set the statistical pattern is quite different when compared to the first two data sets.</p>
        <p>(EPS)</p>
      </caption>
      <media xlink:href="pone.0116082.s002.eps">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pone.0116082.s003">
      <label>S3 Fig</label>
      <caption>
        <title>Statistic of the set of characters that occur in the ‘s’ lines for the four data sets used in this work.</title>
        <p>Results are presented in percentage.</p>
        <p>(EPS)</p>
      </caption>
      <media xlink:href="pone.0116082.s003.eps">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pone.0116082.s004">
      <label>S4 Fig</label>
      <caption>
        <title>Percentage of occurrence of each one of the 11 possible quality values in the ‘q’ lines for the <italic>multiz28wayB</italic> and <italic>multiz46way</italic> data sets.</title>
        <p>The <italic>multiz28way</italic> and <italic>multiz100way</italic> do not have ‘q’ lines.</p>
        <p>(EPS)</p>
      </caption>
      <media xlink:href="pone.0116082.s004.eps">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pone.0116082.s005">
      <label>S5 Fig</label>
      <caption>
        <title>Percentage of occurrence for each of the six possible status symbols in the ‘i’ lines for the <italic>multiz28wayB</italic>, <italic>multiz46way</italic>, and <italic>multiz100way</italic> data sets.</title>
        <p>The <italic>multiz28way</italic> does not have ‘i’ lines.</p>
        <p>(EPS)</p>
      </caption>
      <media xlink:href="pone.0116082.s005.eps">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pone.0116082.s006">
      <label>S6 Fig</label>
      <caption>
        <title>Percentage of occurrence for each of the five possible status symbols in the ‘e’ lines for the <italic>multiz28wayB</italic>, <italic>multiz46way</italic>, and <italic>multiz100way</italic> data sets.</title>
        <p>The <italic>multiz28way</italic> does not have ‘e’ lines.</p>
        <p>(EPS)</p>
      </caption>
      <media xlink:href="pone.0116082.s006.eps">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pone.0116082.s007">
      <label>S1 Table</label>
      <caption>
        <title>Mapping of MAF quality values.</title>
        <p>The quality values can be ‘F’ (finished sequence) or a number derived from the actual quality scores (which ranges from 0–97) or the manually assigned score of 98. The MAF quality values are computed according to <xref ref-type="disp-formula" rid="pone.0116082.e001">(1)</xref>.</p>
        <p>(EPS)</p>
      </caption>
      <media xlink:href="pone.0116082.s007.eps">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pone.0116082.s008">
      <label>S2 Table</label>
      <caption>
        <title>Data sets information used in this work.</title>
        <p>The four data sets are aligned using the human specie as a reference. The data set were retrieved from the UCSC database. The <italic>multiz28wayB</italic> was created from the “multiz28wayAnno.tar.gz” file which contains almost (the alignments are slight different in some MSABs) the same alignments of the <italic>multiz28way</italic> for the same species for all chromosomes, with additional annotations to indicate gap context, genomic breaks, and quality scores for the sequence in the underlying genome assemblies (optional ‘q’, ‘i’ and ‘e’ lines).</p>
        <p>(EPS)</p>
      </caption>
      <media xlink:href="pone.0116082.s008.eps">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pone.0116082.s009">
      <label>S3 Table</label>
      <caption>
        <title>Performance of several compression methods in the <italic>multiz28way</italic> data set.</title>
        <p>“BGZIP” refers to the maf-bgzip tool [<xref rid="pone.0116082.ref025" ref-type="bibr">25</xref>–<xref rid="pone.0116082.ref027" ref-type="bibr">27</xref>], “MSAc” refers to the [<xref rid="pone.0116082.ref024" ref-type="bibr">24</xref>] method and MAFCO is the proposed method. Size is indicated in bytes, whereas the percentages indicate the amount of reduction attained in comparison to gzip. “CTime” and “DTime” indicate the compression and decompression times in seconds, respectively. It was not possible to obtain the decompression time for the “MSAc” method for files <italic>chr15</italic>, <italic>chr16</italic>, <italic>chr17</italic>, and <italic>chr19</italic> due to the inability to decompress the previous compressed files. The “MSAc” decoder crashed for those files.</p>
        <p>(EPS)</p>
      </caption>
      <media xlink:href="pone.0116082.s009.eps">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pone.0116082.s010">
      <label>S4 Table</label>
      <caption>
        <title>Performance of several compression methods in the <italic>multiz28wayB</italic> data set.</title>
        <p>“BGZIP” refers to the maf-bgzip tool [<xref rid="pone.0116082.ref025" ref-type="bibr">25</xref>–<xref rid="pone.0116082.ref027" ref-type="bibr">27</xref>], and MAFCO is the proposed method. Size is indicated in bytes, whereas the percentages indicate the amount of reduction attained in comparison to gzip. “CTime” and “DTime” indicate the compression and decompression times in seconds, respectively. Results for method [<xref rid="pone.0116082.ref024" ref-type="bibr">24</xref>] were not included because it is not able to process the files of this data set.</p>
        <p>(EPS)</p>
      </caption>
      <media xlink:href="pone.0116082.s010.eps">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pone.0116082.s011">
      <label>S5 Table</label>
      <caption>
        <title>Performance of several compression methods in the <italic>multiz46way</italic> data set.</title>
        <p>“BGZIP” refers to the maf-bgzip tool [<xref rid="pone.0116082.ref025" ref-type="bibr">25</xref>–<xref rid="pone.0116082.ref027" ref-type="bibr">27</xref>], and MAFCO is the proposed method. Size is indicated in bytes, whereas the percentages indicate the amount of reduction attained in comparison to gzip. “CTime” and “DTime” indicate the compression and decompression times in seconds, respectively. Results for method [<xref rid="pone.0116082.ref024" ref-type="bibr">24</xref>] were not included because it is not able to process the files of this data set.</p>
        <p>(EPS)</p>
      </caption>
      <media xlink:href="pone.0116082.s011.eps">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pone.0116082.s012">
      <label>S6 Table</label>
      <caption>
        <title>Performance of several compression methods in the <italic>multiz100way</italic> data set.</title>
        <p>“BGZIP” refers to the maf-bgzip tool [<xref rid="pone.0116082.ref025" ref-type="bibr">25</xref>–<xref rid="pone.0116082.ref027" ref-type="bibr">27</xref>], and MAFCO is the proposed method. Size is indicated in bytes, whereas the percentages indicate the amount of reduction attained in comparison to gzip. “CTime” and “DTime” indicate the compression and decompression times in seconds, respectively. Results for method [<xref rid="pone.0116082.ref024" ref-type="bibr">24</xref>] were not included because it is not able to process the files of this data set.</p>
        <p>(EPS)</p>
      </caption>
      <media xlink:href="pone.0116082.s012.eps">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pone.0116082.s013">
      <label>S7 Table</label>
      <caption>
        <title>Performance in terms of coding time of MAFCO using 1, 2, 4 and 8 threads for the <italic>multiz28way</italic> data set.</title>
        <p>The CPU time corresponds to the total CPU time obtained by the <italic>time</italic> command in Linux. The optimal CPU time corresponds to the CPU time divided by the number of threads. The speedup was computed by dividing the optimal CPU time for one thread (sequential execution) by the optimal CPU time for <italic>n</italic> threads (calculated according to <xref ref-type="disp-formula" rid="pone.0116082.e006">(6)</xref>). Finally, the efficiency is obtained by dividing the speedup by the number of threads (according to <xref ref-type="disp-formula" rid="pone.0116082.e007">(7)</xref>).</p>
        <p>(EPS)</p>
      </caption>
      <media xlink:href="pone.0116082.s013.eps">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pone.0116082.s014">
      <label>S8 Table</label>
      <caption>
        <title>Performance in terms of coding time of MAFCO using 1, 2, 4 and 8 threads for the <italic>multiz28wayB</italic> data set.</title>
        <p>The CPU time corresponds to the total CPU time obtained by the <italic>time</italic> command in Linux. The optimal CPU time corresponds to the CPU time divided by the number of threads. The speedup was computed by dividing the optimal CPU time for one thread (sequential execution) by the optimal CPU time for <italic>n</italic> threads (calculated according to <xref ref-type="disp-formula" rid="pone.0116082.e006">(6)</xref>). Finally, the efficiency is obtained by dividing the speedup by the number of threads (according to <xref ref-type="disp-formula" rid="pone.0116082.e007">(7)</xref>).</p>
        <p>(EPS)</p>
      </caption>
      <media xlink:href="pone.0116082.s014.eps">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pone.0116082.s015">
      <label>S9 Table</label>
      <caption>
        <title>Performance in terms of coding time of MAFCO using 1, 2, 4 and 8 threads for the <italic>multiz46way</italic> data set.</title>
        <p>The CPU time corresponds to the total CPU time obtained by the <italic>time</italic> command in Linux. The optimal CPU time corresponds to the CPU time divided by the number of threads. The speedup was computed by dividing the optimal CPU time for one thread (sequential execution) by the optimal CPU time for <italic>n</italic> threads (calculated according to <xref ref-type="disp-formula" rid="pone.0116082.e006">(6)</xref>). Finally, the efficiency is obtained by dividing the speedup by the number of threads (according to <xref ref-type="disp-formula" rid="pone.0116082.e007">(7)</xref>).</p>
        <p>(EPS)</p>
      </caption>
      <media xlink:href="pone.0116082.s015.eps">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pone.0116082.s016">
      <label>S10 Table</label>
      <caption>
        <title>Performance in terms of coding time of MAFCO using 1, 2, 4 and 8 threads for the <italic>multiz100way</italic> data set.</title>
        <p>The CPU time corresponds to the total CPU time obtained by the <italic>time</italic> command in Linux. The optimal CPU time corresponds to the CPU time divided by the number of threads. The speedup was computed by dividing the optimal CPU time for one thread (sequential execution) by the optimal CPU time for <italic>n</italic> threads (calculated according to <xref ref-type="disp-formula" rid="pone.0116082.e006">(6)</xref>). Finally, the efficiency is obtained by dividing the speedup by the number of threads (according to <xref ref-type="disp-formula" rid="pone.0116082.e007">(7)</xref>).</p>
        <p>(EPS)</p>
      </caption>
      <media xlink:href="pone.0116082.s016.eps">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack>
    <p>The authors would like to thank Pavol Hanus for providing an implementation of his algorithm and Clayton Wheeler for the support given in the use of his maf-bgzip tool.</p>
  </ack>
  <ref-list>
    <title>References</title>
    <ref id="pone.0116082.ref001">
      <label>1</label>
      <mixed-citation publication-type="book"><name><surname>Cánovas</surname><given-names>R</given-names></name>, <name><surname>Moffat</surname><given-names>A</given-names></name> (<year>2013</year>) <chapter-title>Practical compression for multi-alignment genomic files</chapter-title> In: <source>Proceedings of the Thirty-Sixth Australasian Computer Science Conference—Volume 135</source>. <publisher-loc>Darlinghurst, Australia, Australia</publisher-loc>: <publisher-name>Australian Computer Society, Inc., ACSC’13</publisher-name>, pp. <fpage>51</fpage>–<lpage>60</lpage>.</mixed-citation>
    </ref>
    <ref id="pone.0116082.ref002">
      <label>2</label>
      <mixed-citation publication-type="journal"><name><surname>Giancarlo</surname><given-names>R</given-names></name>, <name><surname>Rombo</surname><given-names>SE</given-names></name>, <name><surname>Utro</surname><given-names>F</given-names></name> (<year>2014</year>) <article-title>Compressive biological sequence analysis and archival in the era of high-throughput sequencing technologies</article-title>. <source>Briefings in Bioinformatics</source>
<volume>15</volume>: <fpage>390</fpage>–<lpage>406</lpage>. <pub-id pub-id-type="doi">10.1093/bib/bbt088</pub-id>
<?supplied-pmid 24347576?><pub-id pub-id-type="pmid">24347576</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0116082.ref003">
      <label>3</label>
      <mixed-citation publication-type="book"><name><surname>Korodi</surname><given-names>G</given-names></name>, <name><surname>Tabus</surname><given-names>I</given-names></name> (<year>2007</year>) <chapter-title>Normalized maximum likelihood model of order-1 for the compression of DNA sequences</chapter-title> In: <source>Proc. of the Data Compression Conf., DCC-2007</source>. <publisher-loc>Snowbird, Utah</publisher-loc>, pp. <fpage>33</fpage>–<lpage>42</lpage>.</mixed-citation>
    </ref>
    <ref id="pone.0116082.ref004">
      <label>4</label>
      <mixed-citation publication-type="book"><name><surname>Cao</surname><given-names>MD</given-names></name>, <name><surname>Dix</surname><given-names>TI</given-names></name>, <name><surname>Allison</surname><given-names>L</given-names></name>, <name><surname>Mears</surname><given-names>C</given-names></name> (<year>2007</year>) <chapter-title>A simple statistical algorithm for biological sequence compression</chapter-title> In: <source>Proc. of the Data Compression Conf., DCC-2007</source>. <publisher-loc>Snowbird, Utah</publisher-loc>, pp. <fpage>43</fpage>–<lpage>52</lpage>.</mixed-citation>
    </ref>
    <ref id="pone.0116082.ref005">
      <label>5</label>
      <mixed-citation publication-type="journal"><name><surname>Pinho</surname><given-names>AJ</given-names></name>, <name><surname>Ferreira</surname><given-names>PJSG</given-names></name>, <name><surname>Neves</surname><given-names>AJR</given-names></name>, <name><surname>Bastos</surname><given-names>CAC</given-names></name> (<year>2011</year>) <article-title>On the representability of complete genomes by multiple competing finite-context (Markov) models</article-title>. <source>PLoS ONE</source>
<volume>6</volume>: <fpage>e21588</fpage>
<pub-id pub-id-type="doi">10.1371/journal.pone.0021588</pub-id>
<?supplied-pmid 21738720?><pub-id pub-id-type="pmid">21738720</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0116082.ref006">
      <label>6</label>
      <mixed-citation publication-type="journal"><name><surname>Pinho</surname><given-names>AJ</given-names></name>, <name><surname>Pratas</surname><given-names>D</given-names></name>, <name><surname>Garcia</surname><given-names>SP</given-names></name> (<year>2012</year>) <article-title>GReEn: a tool for efficient compression of genome resequencing data</article-title>. <source>Nucleic Acids Research</source>
<volume>40</volume>: <fpage>e27</fpage>
<pub-id pub-id-type="doi">10.1093/nar/gkr1124</pub-id>
<?supplied-pmid 22139935?><pub-id pub-id-type="pmid">22139935</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0116082.ref007">
      <label>7</label>
      <mixed-citation publication-type="journal"><name><surname>Cox</surname><given-names>AJ</given-names></name>, <name><surname>Bauer</surname><given-names>MJ</given-names></name>, <name><surname>Jakobi</surname><given-names>T</given-names></name>, <name><surname>Rosone</surname><given-names>G</given-names></name> (<year>2012</year>) <article-title>Large-scale compression of genomic sequence databases with the Burrows-Wheeler transform</article-title>. <source>Bioinformatics</source>
<volume>28</volume>: <fpage>1415</fpage>–<lpage>1419</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/bts173</pub-id>
<?supplied-pmid 22556365?><pub-id pub-id-type="pmid">22556365</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0116082.ref008">
      <label>8</label>
      <mixed-citation publication-type="journal"><name><surname>Jones</surname><given-names>DC</given-names></name>, <name><surname>Ruzzo</surname><given-names>WL</given-names></name>, <name><surname>Peng</surname><given-names>X</given-names></name>, <name><surname>Katze</surname><given-names>MG</given-names></name> (<year>2012</year>) <article-title>Compression of next-generation sequencing reads aided by highly efficient de novo assembly</article-title>. <source>Nucleic Acids Research</source>
<volume>40</volume>: <fpage>e171</fpage>
<pub-id pub-id-type="doi">10.1093/nar/gks754</pub-id>
<?supplied-pmid 22904078?><pub-id pub-id-type="pmid">22904078</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0116082.ref009">
      <label>9</label>
      <mixed-citation publication-type="journal"><name><surname>Hach</surname><given-names>F</given-names></name>, <name><surname>Numanagić</surname><given-names>I</given-names></name>, <name><surname>Alkan</surname><given-names>C</given-names></name>, <name><surname>Sahinalp</surname><given-names>SC</given-names></name> (<year>2012</year>) <article-title>SCALCE: boosting sequence compression algorithms using locally consistent encoding</article-title>. <source>Bioinformatics</source>
<volume>28</volume>: <fpage>3051</fpage>–<lpage>3057</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/bts593</pub-id>
<?supplied-pmid 23047557?><pub-id pub-id-type="pmid">23047557</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0116082.ref010">
      <label>10</label>
      <mixed-citation publication-type="journal"><name><surname>Popitsch</surname><given-names>N</given-names></name>, <name><surname>Haeseler</surname><given-names>A</given-names></name> (<year>2013</year>) <article-title>NGC: lossless and lossy compression of aligned high-throughput sequencing data</article-title>. <source>Nucleic Acids Research</source>
<volume>41</volume>(<issue>1</issue>). <pub-id pub-id-type="doi">10.1093/nar/gks939</pub-id>
<?supplied-pmid 23066097?><pub-id pub-id-type="pmid">23066097</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0116082.ref011">
      <label>11</label>
      <mixed-citation publication-type="journal"><name><surname>Matos</surname><given-names>LMO</given-names></name>, <name><surname>Pratas</surname><given-names>D</given-names></name>, <name><surname>Pinho</surname><given-names>AJ</given-names></name> (<year>2013</year>) <article-title>A compression model for DNA multiple sequence alignment blocks</article-title>. <source>IEEE Trans on Information Theory</source>
<volume>59</volume>: <fpage>3189</fpage>–<lpage>3198</lpage>. <pub-id pub-id-type="doi">10.1109/TIT.2012.2236605</pub-id>
</mixed-citation>
    </ref>
    <ref id="pone.0116082.ref012">
      <label>12</label>
      <mixed-citation publication-type="journal"><name><surname>Bonfield</surname><given-names>JK</given-names></name>, <name><surname>Mahoney</surname><given-names>MV</given-names></name> (<year>2013</year>) <article-title>Compression of FASTQ and SAM format sequencing data</article-title>. <source>PLoS ONE</source>
<volume>8</volume>: <fpage>e59190</fpage>
<pub-id pub-id-type="doi">10.1371/journal.pone.0059190</pub-id>
<?supplied-pmid 23533605?><pub-id pub-id-type="pmid">23533605</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0116082.ref013">
      <label>13</label>
      <mixed-citation publication-type="journal"><name><surname>Wandelt</surname><given-names>S</given-names></name>, <name><surname>Leser</surname><given-names>U</given-names></name> (<year>2013</year>) <article-title>Fresco: Referential compression of highly similar sequences</article-title>. <source>IEEE/ACM Transactions on Computational Biology and Bioinformatics (TCBB)</source>
<volume>10</volume>: <fpage>1275</fpage>–<lpage>1288</lpage>. <pub-id pub-id-type="doi">10.1109/TCBB.2013.122</pub-id>
</mixed-citation>
    </ref>
    <ref id="pone.0116082.ref014">
      <label>14</label>
      <mixed-citation publication-type="journal"><name><surname>Deorowicz</surname><given-names>S</given-names></name>, <name><surname>Grabowski</surname><given-names>S</given-names></name> (<year>2013</year>) <article-title>Data compression for sequencing data</article-title>. <source>Algorithms for Molecular Biology</source>
<volume>8</volume>: <fpage>25</fpage>
<pub-id pub-id-type="doi">10.1186/1748-7188-8-25</pub-id>
<?supplied-pmid 24252160?><pub-id pub-id-type="pmid">24252160</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0116082.ref015">
      <label>15</label>
      <mixed-citation publication-type="journal"><name><surname>Pinho</surname><given-names>AJ</given-names></name>, <name><surname>Pratas</surname><given-names>D</given-names></name> (<year>2014</year>) <article-title>MFCompress: a compression tool for FASTA and multi-FASTA data</article-title>. <source>Bioinformatics</source>
<volume>30</volume>: <fpage>117</fpage>–<lpage>118</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btt594</pub-id>
<?supplied-pmid 24132931?><pub-id pub-id-type="pmid">24132931</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0116082.ref016">
      <label>16</label>
      <mixed-citation publication-type="other">UCSC FAQ: MAF Format (accessed September 17th, 2014) <ext-link ext-link-type="uri" xlink:href="http://genome.ucsc.edu/FAQ/FAQformat.html#format5">http://genome.ucsc.edu/FAQ/FAQformat.html#format5</ext-link>.</mixed-citation>
    </ref>
    <ref id="pone.0116082.ref017">
      <label>17</label>
      <mixed-citation publication-type="journal"><name><surname>Hardison</surname><given-names>RC</given-names></name> (<year>2000</year>) <article-title>Conserved noncoding sequences are reliable guides to regulatory elements</article-title>. <source>Trends in Genetics</source>
<volume>16</volume>: <fpage>369</fpage>–<lpage>372</lpage>. <pub-id pub-id-type="doi">10.1016/S0168-9525(00)02081-3</pub-id>
<?supplied-pmid 10973062?><pub-id pub-id-type="pmid">10973062</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0116082.ref018">
      <label>18</label>
      <mixed-citation publication-type="book"><name><surname>Siepel</surname><given-names>A</given-names></name>, <name><surname>Haussler</surname><given-names>D</given-names></name> (<year>2004</year>) <chapter-title>Computational identification of evolutionarily conserved exons</chapter-title> In: <source>Proc. of the Eighth Annual Int. Confȯn Research in Computational Molecular Biology</source>. <publisher-loc>New York, NY, USA</publisher-loc>: <publisher-name>ACM, RECOMB’04</publisher-name>, pp. <fpage>177</fpage>–<lpage>186</lpage>. <comment>doi:<ext-link ext-link-type="uri" xlink:href="http://doi.acm.org/10.1145/974614.974638">http://doi.acm.org/10.1145/974614.974638</ext-link></comment>
</mixed-citation>
    </ref>
    <ref id="pone.0116082.ref019">
      <label>19</label>
      <mixed-citation publication-type="journal"><name><surname>Gross</surname><given-names>SS</given-names></name>, <name><surname>Brent</surname><given-names>MR</given-names></name> (<year>2006</year>) <article-title>Using multiple alignments to improve gene prediction</article-title>. <source>Journal of Computational Biology</source>
<volume>13</volume>: <fpage>379</fpage>–<lpage>393</lpage>. <pub-id pub-id-type="doi">10.1089/cmb.2006.13.379</pub-id>
<?supplied-pmid 16597247?><pub-id pub-id-type="pmid">16597247</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0116082.ref020">
      <label>20</label>
      <mixed-citation publication-type="journal"><name><surname>Pedersen</surname><given-names>JS</given-names></name>, <name><surname>Bejerano</surname><given-names>G</given-names></name>, <name><surname>Siepel</surname><given-names>A</given-names></name>, <name><surname>Rosenbloom</surname><given-names>K</given-names></name>, <etal>et al</etal> (<year>2006</year>) <article-title>Identification and classification of conserved RNA secondary structures in the human genome</article-title>. <source>PLoS Computational Biology</source>
<volume>2</volume>: <fpage>e33</fpage>
<pub-id pub-id-type="doi">10.1371/journal.pcbi.0020033</pub-id>
<?supplied-pmid 16628248?><pub-id pub-id-type="pmid">16628248</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0116082.ref021">
      <label>21</label>
      <mixed-citation publication-type="journal"><name><surname>Miller</surname><given-names>W</given-names></name>, <name><surname>Rosenbloom</surname><given-names>K</given-names></name>, <name><surname>Hardison</surname><given-names>RC</given-names></name>, <name><surname>Hou</surname><given-names>M</given-names></name>, <name><surname>Taylor</surname><given-names>J</given-names></name>, <etal>et al</etal> (<year>2007</year>) <article-title>28-way vertebrate alignment and conservation track in the UCSC genome browser</article-title>. <source>Genome Research</source>
<volume>17</volume>: <fpage>1797</fpage>–<lpage>1808</lpage>. <pub-id pub-id-type="doi">10.1101/gr.6761107</pub-id>
<?supplied-pmid 17984227?><pub-id pub-id-type="pmid">17984227</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0116082.ref022">
      <label>22</label>
      <mixed-citation publication-type="journal"><name><surname>Fujita</surname><given-names>PA</given-names></name>, <name><surname>Rhead</surname><given-names>B</given-names></name>, <name><surname>Zweig</surname><given-names>AS</given-names></name>, <name><surname>Hinrichs</surname><given-names>AS</given-names></name>, <name><surname>Karolchik</surname><given-names>D</given-names></name>, <etal>et al</etal> (<year>2011</year>) <article-title>The UCSC genome browser database: update 2011</article-title>. <source>Nucleic Acids Research</source>
<volume>39</volume>: <fpage>D876</fpage>–<lpage>D882</lpage>. <pub-id pub-id-type="doi">10.1093/nar/gkq963</pub-id>
<?supplied-pmid 20959295?><pub-id pub-id-type="pmid">20959295</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0116082.ref023">
      <label>23</label>
      <mixed-citation publication-type="journal"><name><surname>Hubbard</surname><given-names>T</given-names></name>, <name><surname>Barker</surname><given-names>D</given-names></name>, <name><surname>Birney</surname><given-names>E</given-names></name>, <name><surname>Cameron</surname><given-names>G</given-names></name>, <name><surname>Chen</surname><given-names>Y</given-names></name>, <etal>et al</etal> (<year>2002</year>) <article-title>The Ensembl genome database project</article-title>. <source>Nucleic Acids Research</source>
<volume>30</volume>: <fpage>38</fpage>–<lpage>41</lpage>. <pub-id pub-id-type="doi">10.1093/nar/30.1.38</pub-id>
<?supplied-pmid 11752248?><pub-id pub-id-type="pmid">11752248</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0116082.ref024">
      <label>24</label>
      <mixed-citation publication-type="journal"><name><surname>Hanus</surname><given-names>P</given-names></name>, <name><surname>Dingel</surname><given-names>J</given-names></name>, <name><surname>Chalkidis</surname><given-names>G</given-names></name>, <name><surname>Hagenauer</surname><given-names>J</given-names></name> (<year>2010</year>) <article-title>Compression of whole genome alignments</article-title>. <source>IEEE Trans on Information Theory</source>
<volume>56</volume>: <fpage>696</fpage>–<lpage>705</lpage>. <pub-id pub-id-type="doi">10.1109/TIT.2009.2037052</pub-id>
</mixed-citation>
    </ref>
    <ref id="pone.0116082.ref025">
      <label>25</label>
      <mixed-citation publication-type="other">Wheeler C, Tarasov A: Bioruby-maf (accessed September 17th, 2014) <ext-link ext-link-type="uri" xlink:href="https://github.com/csw/bioruby-maf">https://github.com/csw/bioruby-maf</ext-link>, <ext-link ext-link-type="uri" xlink:href="https://github.com/csw/bioruby-bgzf">https://github.com/csw/bioruby-bgzf</ext-link>.</mixed-citation>
    </ref>
    <ref id="pone.0116082.ref026">
      <label>26</label>
      <mixed-citation publication-type="journal"><name><surname>Bonnal</surname><given-names>RJP</given-names></name>, <name><surname>Aerts</surname><given-names>J</given-names></name>, <name><surname>Githinji</surname><given-names>G</given-names></name>, <name><surname>Goto</surname><given-names>N</given-names></name>, <name><surname>MacLean</surname><given-names>D</given-names></name>, <etal>et al</etal> (<year>2012</year>) <article-title>Biogem: an effective tool-based approach for scaling up open source software development in bioinformatics</article-title>. <source>Bioinformatics</source>
<volume>28</volume>: <fpage>1035</fpage>–<lpage>1037</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/bts080</pub-id>
<?supplied-pmid 22332238?><pub-id pub-id-type="pmid">22332238</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0116082.ref027">
      <label>27</label>
      <mixed-citation publication-type="journal"><name><surname>Goto</surname><given-names>N</given-names></name>, <name><surname>Prins</surname><given-names>P</given-names></name>, <name><surname>Nakao</surname><given-names>M</given-names></name>, <name><surname>Bonnal</surname><given-names>R</given-names></name>, <name><surname>Aerts</surname><given-names>J</given-names></name>, <etal>et al</etal> (<year>2010</year>) <article-title>BioRuby: bioinformatics software for the Ruby programming language</article-title>. <source>Bioinformatics</source>
<volume>26</volume>: <fpage>2617</fpage>–<lpage>2619</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btq475</pub-id>
<?supplied-pmid 20739307?><pub-id pub-id-type="pmid">20739307</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0116082.ref028">
      <label>28</label>
      <mixed-citation publication-type="book"><name><surname>Matos</surname><given-names>LMO</given-names></name>, <name><surname>Pratas</surname><given-names>D</given-names></name>, <name><surname>Pinho</surname><given-names>AJ</given-names></name> (<year>2012</year>) <chapter-title>Compression of whole genome alignments using a mixture of finite-context models</chapter-title> In: <name><surname>Campilho</surname><given-names>A</given-names></name>, <name><surname>Kamel</surname><given-names>M</given-names></name>, editors, <source>Proc. of Int. Conf. on Image Analysis and Recognition, ICIAR 2012</source>. <publisher-loc>Aveiro, Portugal</publisher-loc>: <publisher-name>Springer</publisher-name>, <comment>volume 7324 of <italic>LNCS</italic></comment>, pp. <fpage>359</fpage>–<lpage>366</lpage>.</mixed-citation>
    </ref>
    <ref id="pone.0116082.ref029">
      <label>29</label>
      <mixed-citation publication-type="other">multiz7way: Chicken genome alignment. Available: <ext-link ext-link-type="uri" xlink:href="http://hgdownload-test.cse.ucsc.edu/goldenPath/galGal3/multiz7way">http://hgdownload-test.cse.ucsc.edu/goldenPath/galGal3/multiz7way</ext-link>. Accessed 17 September 2014.</mixed-citation>
    </ref>
    <ref id="pone.0116082.ref030">
      <label>30</label>
      <mixed-citation publication-type="other">multiz60way: Mouse genome alignment. Available: <ext-link ext-link-type="uri" xlink:href="http://hgdownload-test.cse.ucsc.edu/goldenPath/mm10/multiz60way">http://hgdownload-test.cse.ucsc.edu/goldenPath/mm10/multiz60way</ext-link>. Accessed 17 September 2014.</mixed-citation>
    </ref>
    <ref id="pone.0116082.ref031">
      <label>31</label>
      <mixed-citation publication-type="other">multiz11way: Gorilla genome alignment. Available: <ext-link ext-link-type="uri" xlink:href="http://hgdownload-test.cse.ucsc.edu/goldenPath/gorGor3/multiz11way">http://hgdownload-test.cse.ucsc.edu/goldenPath/gorGor3/multiz11way</ext-link>. Accessed 17 September 2014.</mixed-citation>
    </ref>
  </ref-list>
</back>

<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v2.3 20070202//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName journalpublishing.dtd?>
<?SourceDTD.Version 2.3?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-id journal-id-type="hwp">bioinfo</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">3371846</article-id>
    <article-id pub-id-type="pmid">22689759</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/bts214</article-id>
    <article-id pub-id-type="publisher-id">bts214</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Ismb 2012 Proceedings Papers Committee July 15 to July 19, 2012, Long Beach, Ca, Usa</subject>
      </subj-group>
      <subj-group>
        <subject>Original Papers</subject>
        <subj-group>
          <subject>Sequence Analysis</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Dissect: detection and characterization of novel structural alterations in transcribed sequences</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Yorukoglu</surname>
          <given-names>Deniz</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>1</sup>
        </xref>
        <xref ref-type="aff" rid="AFF1">
          <sup>2</sup>
        </xref>
        <xref ref-type="corresp" rid="COR1">
          <sup>*</sup>
        </xref>
        <xref ref-type="author-notes" rid="FN1">
          <sup>†</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Hach</surname>
          <given-names>Faraz</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>1</sup>
        </xref>
        <xref ref-type="corresp" rid="COR1">
          <sup>*</sup>
        </xref>
        <xref ref-type="author-notes" rid="FN1">
          <sup>†</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Swanson</surname>
          <given-names>Lucas</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>1</sup>
        </xref>
        <xref ref-type="aff" rid="AFF1">
          <sup>3</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Collins</surname>
          <given-names>Colin C.</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>4</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Birol</surname>
          <given-names>Inanc</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>3</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Sahinalp</surname>
          <given-names>S. Cenk</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>1</sup>
        </xref>
        <xref ref-type="corresp" rid="COR1">
          <sup>*</sup>
        </xref>
      </contrib>
    </contrib-group>
    <aff id="AFF1"><sup>1</sup>School of Computing Science, Simon Fraser University, Burnaby, V5A 1S6 BC, Canada, <sup>2</sup>MIT Computer Science and Artificial Intelligence Laboratory, Cambridge, MA 02139, USA, <sup>3</sup>Michael Smith Genome Sciences Center, British Columbia, Cancer Agency, Vancouver, V5Z 4S6, Canada, <sup>4</sup>Vancouver Prostate Centre and Department of Urologic Sciences, University of British Columbia, Vancouver, BC, V5Z 1M9, Canada</aff>
    <author-notes>
      <corresp id="COR1">* To whom correspondence should be addressed.</corresp>
      <fn id="FN1">
        <p><sup>†</sup>The authors wish it to be known that, in their opinion, the first two authors should be regarded as joint First Authors.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="ppub">
      <day>15</day>
      <month>6</month>
      <year>2012</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>9</day>
      <month>6</month>
      <year>2012</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>9</day>
      <month>6</month>
      <year>2012</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the
							<pub-date pub-type="epub"/>. -->
    <volume>28</volume>
    <issue>12</issue>
    <fpage>i179</fpage>
    <lpage>i187</lpage>
    <permissions>
      <copyright-statement>© The Author(s) 2012. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2012</copyright-year>
      <license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by-nc/3.0">
        <license-p><!--CREATIVE COMMONS-->This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by-nc/3.0">http://creativecommons.org/licenses/by-nc/3.0</ext-link>), which permits unrestricted non-commercial use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <abstract>
      <p><bold>Motivation:</bold> Computational identification of genomic structural variants via high-throughput sequencing is an important problem for which a number of highly sophisticated solutions have been recently developed. With the advent of high-throughput transcriptome sequencing (RNA-Seq), the problem of identifying structural alterations in the transcriptome is now attracting significant attention.</p>
      <p>In this article, we introduce two novel algorithmic formulations for identifying transcriptomic structural variants through aligning transcripts to the reference genome under the consideration of such variation. The first formulation is based on a nucleotide-level alignment model; a second, potentially faster formulation is based on chaining fragments shared between each transcript and the reference genome. Based on these formulations, we introduce a novel transcriptome-to-genome alignment tool, <italic>Dissect</italic> (DIScovery of Structural Alteration Event Containing Transcripts), which can identify and characterize transcriptomic events such as duplications, inversions, rearrangements and fusions. Dissect is suitable for whole transcriptome structural variation discovery problems involving sufficiently long reads or accurately assembled contigs.</p>
      <p><bold>Results:</bold> We tested Dissect on simulated transcripts altered via structural events, as well as assembled RNA-Seq contigs from human prostate cancer cell line C4-2. Our results indicate that Dissect has high sensitivity and specificity in identifying structural alteration events in simulated transcripts as well as uncovering novel structural alterations in cancer transcriptomes.</p>
      <p><bold>Availability:</bold> Dissect is available for public use at: <ext-link ext-link-type="uri" xlink:href="http://dissect-trans.sourceforge.net">http://dissect-trans.sourceforge.net</ext-link></p>
      <p><bold>Contact:</bold><email>denizy@mit.edu</email>; <email>fhach@cs.sfu.ca</email>; <email>cenk@cs.sfu.ca</email></p>
    </abstract>
    <counts>
      <page-count count="9"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec id="SEC1">
    <title>1 INTRODUCTION</title>
    <p>The transcriptome refers to the complete collection of RNA sequences transcribed from portions of the genome; these include not only mRNAs but also non-coding RNAs. Genomic structural alterations involving transcribed regions of the genome will appear in the associated transcript sequences. Although the whole transcriptome is much smaller than the whole genome, in the context of structural alterations, RNA-Seq data can be more difficult to analyze, partially due to splicing, which can produce several transcripts from the same gene. In comparison to the <italic>wild-type</italic> transcripts, post-transcriptional processes can also introduce structural alterations into these sequences.</p>
    <p>To analyze structural variation within transcriptomic high-throughput sequencing (HTS) data (a.k.a. RNA-Seq) one typically needs to find the most likely transcript-to-genome alignment under the possibility of structural alteration events such as: (i) internal duplications, which result in two separate segments in the transcript sequence aligning to the same segment of the genomic sequence; (ii) inversions, which result in a segment of the transcript sequence aligning to the opposite strand of the genome than the rest of the transcript in an inverted fashion; (iii) rearrangements, which result in a change of ordering of the aligned segments; and (iv) fusions, which result in the transcript sequence aligning to two genes that are on two different chromosomes or far apart on the same chromosome (<xref ref-type="fig" rid="F1">Figure 1</xref>). Note that an inversion can be of the type (i) suffix-inversion (or prefix-inversion), which involve a single breakpoint, where a suffix of the transcript sequence aligns to the strand opposite of that of the corresponding prefix; and (ii) internal-inversion, which involves a pair of breakpoints, where the portion of the inverted transcript sequence aligns to the strand opposite to that of the flanking portions.
<fig id="F1" position="float"><label>Fig. 1.</label><caption><p>Structural alteration events considered in this article. <italic>T</italic> represent the transcript, <italic>G</italic> and <italic>S</italic> represent two genomic regions. <italic>G</italic>′ is the complementary strand for <italic>G</italic>. Boundaries between red and green blocks indicate event breakpoints; arrows represent corresponding genomic transitions in the alignment. Apart from the event types shown in the figure, duplication events can appear as non-tandem and fusions can be between two different strands</p></caption><graphic xlink:href="bts214f1"/></fig></p>
    <p>Several studies have detected such transcriptomic structural alterations in eukaryotic species (<xref ref-type="bibr" rid="B3">Anderson and Staley, 2008</xref>; <xref ref-type="bibr" rid="B18">Gingeras, 2009</xref>; <xref ref-type="bibr" rid="B22">Horiuchi and Aigaki, 2006</xref>; <xref ref-type="bibr" rid="B23">Horiuchi <italic>et al</italic>., 2003</xref>; <xref ref-type="bibr" rid="B29">Labrador <italic>et al</italic>., 2001</xref>), including mice (<xref ref-type="bibr" rid="B21">Hirano and Noda, 2004</xref>), rats (<xref ref-type="bibr" rid="B10">Caudevilla <italic>et al</italic>., 1998</xref>; <xref ref-type="bibr" rid="B15">Frantz <italic>et al</italic>., 1999</xref>) and humans (<xref ref-type="bibr" rid="B1">Akiva <italic>et al</italic>., 2006</xref>; <xref ref-type="bibr" rid="B5">Bäsecke <italic>et al</italic>., 2002</xref>; <xref ref-type="bibr" rid="B7">Brassesco, 2008</xref>; <xref ref-type="bibr" rid="B20">Herai and Yamagishi, 2010</xref>; <xref ref-type="bibr" rid="B26">Kannan <italic>et al</italic>., 2011</xref>; <xref ref-type="bibr" rid="B39">Rickman <italic>et al</italic>., 2009</xref>). These structural alterations are rarely observed in healthy human tissues and their normal roles have not been determined. However, specific instances of transcriptomic structural alterations (which can be a result of genomic alterations or transcriptomic processing) have been correlated with disease states, especially in cancer (<xref ref-type="bibr" rid="B12">De Braekeleer <italic>et al</italic>., 2011</xref>; <xref ref-type="bibr" rid="B13">Dorrance <italic>et al</italic>., 2008</xref>; <xref ref-type="bibr" rid="B42">Takahashi, 2011</xref>).</p>
    <p>Several high-throughput methods for detecting structural alterations by analyzing mappings of RNA-seq reads have been developed (<xref ref-type="bibr" rid="B4">Asmann <italic>et al</italic>., 2011</xref>; <xref ref-type="bibr" rid="B17">Ge <italic>et al</italic>., 2011</xref>; <xref ref-type="bibr" rid="B25">Inaki <italic>et al</italic>., 2011</xref>; <xref ref-type="bibr" rid="B30">Levin <italic>et al</italic>., 2009</xref>; <xref ref-type="bibr" rid="B31">Li <italic>et al</italic>., 2011</xref>; <xref ref-type="bibr" rid="B32">McPherson <italic>et al</italic>., 2011a</xref>; <xref ref-type="bibr" rid="B33">McPherson <italic>et al</italic>., 2011b</xref>; <xref ref-type="bibr" rid="B34">McPherson <italic>et al</italic>., 2012</xref>; <xref ref-type="bibr" rid="B38">Nacu <italic>et al</italic>., 2011</xref>; <xref ref-type="bibr" rid="B40">Sboner <italic>et al</italic>., 2010</xref>), mostly focusing on fusions, partially due to their abundance in cancer, but also due to the relative ease of identifying them computationally. As HTS technologies progress, the length of the read-sequences they produce grows dramatically, and is expected to continue growing to over 1000 bp per read. A longer read has a greater possibility of containing segments from more than two exons, complicating the process of mapping such a read. Existing structural alteration detection tools are limited by their reliance on read-mapping tools designed for the short read-sequences produced by the original HTS technologies; they cannot take advantage of increasing read length. Furthermore, the increase in read length improves the accuracy of <italic>de novo</italic> transcriptome assembly tools, leading to opportunities for the analysis of full transcript sequences.</p>
    <p><italic>Existing methods</italic>: Many methods have been proposed for spliced transcriptome-to-genome sequence alignment, including Gapped BLAST (<xref ref-type="bibr" rid="B2">Altschul <italic>et al</italic>., 1997</xref>), BLAT (<xref ref-type="bibr" rid="B27">Kent, 2002</xref>), Exonerate (<xref ref-type="bibr" rid="B41">Slater and Birney, 2005</xref>), EST_GENOME (<xref ref-type="bibr" rid="B37">Mott, 1997</xref>) and GMAP (<xref ref-type="bibr" rid="B43">Wu and Watanabe, 2005</xref>). These methods implicitly assume the transcript sequences are devoid of structural alterations and use a seed-and-extend alignment strategy combined with a fragment chaining method. In the context of genomic sequences, alignment under structural alterations has been considered since the early 2000s. From a theoretical perspective, Cormode <italic>et al</italic>. introduced block edit distance (<xref ref-type="bibr" rid="B11">Cormode <italic>et al</italic>., 2000</xref>) as the minimum number segment deletions, duplications and translocations in addition to single-nucleotide insertions, deletions to transform (and align) one sequence to another. Block edit distance in its most general setting is NP-hard to compute; <xref ref-type="bibr" rid="B14">Ergün <italic>et al</italic>. (2003</xref>) investigated many variants of the block edit distance under several restrictions that make the alignment problem computationally tractable. One such variant involving <italic>1-monotonous</italic> alignments was implemented in the context of genome-to-genome alignments (<xref ref-type="bibr" rid="B8">Brudno <italic>et al</italic>., 2003</xref>). Unfortunately no such method exists for transcript-to-genome alignments.</p>
    <p><italic>Contributions</italic>: In this study, we introduce novel algorithmic formulations of the transcript-to-genome alignment under structural alterations problem and describe solutions for several gap penalty models. Our first formulation is a nucleotide-level alignment model that assumes the transcript sequence is a chain of <italic>unidirectional</italic> copies of segments taken from the genome—as investigated in <xref ref-type="bibr" rid="B14">Ergün <italic>et al</italic>. (2003</xref>). We show how to sparsify the alignment table using a convex gap penalty model; we also show how to incorporate splice signal scores to the model. Our second formulation aims to reduce the running time and memory cost of the initial nucleotide-level alignment problem by sacrificing the sensitivity upon structures shorter than a user-defined threshold value. In this formulation, we assume each alignment unit is a short segment shared between the transcript and the genome, possibly containing some mismatches. We then aim to find the <italic>fragment chain</italic> that gives the best overall alignment score based on the penalties described in the first formulation.</p>
    <p>This study also introduces a novel computational tool, <italic>Dissect</italic> (DIScovery of Structural alteration Event Containing Transcripts), suitable for high-throughput transcriptome studies. To the best of our knowledge, Dissect is the first comprehensive stand-alone software for detecting and characterizing novel structural alterations in RNA-Seq data, and capable of direct global alignment of long transcript sequences to a genome. We report experimental results obtained by Dissect on a simulated mouse transcriptome database containing nucleotide-level and structural noise, as well as assembled RNA-Seq reads from the human prostate cancer cell line C4-2.</p>
  </sec>
  <sec id="SEC2">
    <title>2 METHODS</title>
    <p>In this article, we introduce a generalization of the transcriptome to genome spliced alignment problem, which allows the detection of transcriptional aberrations such as duplications, rearrangements and inversions. The model we use for our formulation corresponds to the <italic>restricted asymmetric</italic> variant of the block edit distance (<xref ref-type="bibr" rid="B14">Ergün <italic>et al</italic>., 2003</xref>), in which the transcript sequence is represented by substrings extracted from the genome sequence, which are stitched together in various formations. Even though such an alignment model ignores the intermediate evolutionary steps of genomic modifications, it can still act as a realistic model of the transcription process with structural alterations, allowing the alignment of chimeric transcripts containing introns/deletions, novel insertions, duplications, rearrangements and inversions. One major caveat of aligning two genomic sequences using this approach is the omission of duplications in one of the aligned sequences (<xref ref-type="bibr" rid="B8">Brudno <italic>et al</italic>., 2003</xref>), whereas the same approach does not necessarily pose a limitation for transcriptome to genome alignment since transcriptional structural alterations involve duplications on the transcript side, yet genomic duplications that appear in the transcript are not crucial for our analysis.</p>
    <p>We further generalize our formulation for handling the special case of fusions that correspond to the alignment of a single transcript to two independent genomic sequences such that there can only be a single transition from the first sequence to the second and no transition from the second to the first. Finally, we incorporate additional score models for canonical splice signals into our formulation to represent a realistic model of the transcriptional machinery biased on canonical splice sites.</p>
    <p>Below we describe a nucleotide-level transcriptome to genome alignment formulation for detection of structural alterations within the transcript. Based upon this approach, we also describe a number of algorithmic formulations for ‘chaining’ fragments shared between the transcript and the genome sequences (within some small number of mismatches), considering alternative structural formations of the resulting fragment chain. Our formulation considers a number of genomic gap penalty models, in the form of general, convex and log-scale cost functions and transcriptional insertion penalties with a constant gap penalty model.</p>
    <sec id="SEC2.1">
      <title>2.1 Nucleotide-level transcriptome to genome alignment under structural alterations</title>
      <p>Given <italic>T</italic>=<italic>t</italic><sub>1</sub>
<italic>t</italic><sub>2</sub>… <italic>t</italic><sub><italic>N</italic></sub>, a transcript sequence and <italic>G</italic>=<italic>g</italic><sub>1</sub>
<italic>g</italic><sub>2</sub>… <italic>g</italic><sub><italic>M</italic></sub>, a genomic sequence (including a gene), let the complementary genomic sequence to <italic>G</italic> be <italic>G</italic>′=<italic>g</italic>′<sub>1</sub>
<italic>g</italic>′<sub>2</sub>… <italic>g</italic>′<sub><italic>M</italic></sub>, where <italic>g</italic>′<sub><italic>i</italic></sub> represents the complement of <italic>g</italic><sub><italic>i</italic></sub>. Also let <italic>S</italic>=<italic>s</italic><sub>1</sub>
<italic>s</italic><sub>2</sub>… <italic>s</italic><sub><italic>L</italic></sub> be a secondary genomic sequence (e.g. another gene) independent from <italic>G</italic>, and let <italic>S</italic>′=<italic>s</italic>′<sub>1</sub><italic>s</italic>′<sub>2</sub>… <italic>s</italic>′<sub><italic>L</italic></sub> be its complement. <italic>S</italic> represents the potential fusion partner for <italic>G</italic> in the context of <italic>T</italic>.</p>
      <p>We define an <italic>alignment</italic> of <italic>T</italic> to {<italic>G</italic>, <italic>G</italic>′, <italic>S</italic>, <italic>S</italic>′} under specific set of <italic>structural alterations</italic>
<italic>A</italic><sub><italic>s</italic></sub> (which will be clarified later in the text) to be a mapping <italic>f</italic> from the nucleotides of <italic>T</italic> to those of <italic>G</italic>, <italic>G</italic>′, <italic>S</italic>, <italic>S</italic>′, as well as ϕ, representing a single-nucleotide gap on the genome side of the alignment (note that <italic>f</italic> is not an invertible function). To prevent multiple fusions within the alignment, we restrict <italic>A</italic><sub><italic>s</italic></sub> such that if a nucleotide in <italic>T</italic> is aligned to <italic>S</italic> or <italic>S</italic>′, none of the subsequent nucleotides in <italic>T</italic> can be aligned to <italic>G</italic> or <italic>G</italic>′—ensuring that <italic>T</italic> can be obtained by fusing at most two genes and there can be at most one ‘transition’ from <italic>G</italic>/<italic>G</italic>′ to <italic>S</italic>/<italic>S</italic>′.</p>
      <p>We now define the score of an alignment with structural alterations <italic>A</italic><sub><italic>s</italic></sub> as
<disp-formula><graphic xlink:href="bts214um1"/></disp-formula>
Here <italic>S</italic><sub><italic>m</italic></sub> denotes the alignment score of each <italic>t</italic><sub><italic>i</italic></sub> to <italic>f</italic>(<italic>t</italic><sub><italic>i</italic></sub>)—which is higher if <italic>t</italic><sub><italic>i</italic></sub>=<italic>f</italic>(<italic>t</italic><sub><italic>i</italic></sub>). The second contribution to the alignment score is due to the penalties for all genomic transitions in the alignment, i.e. segments in <italic>T</italic> which are all mapped to ϕ, indicating a gap. Now we assign <italic>P</italic><sub><italic>s</italic></sub> as:
<disp-formula><graphic xlink:href="bts214um2"/></disp-formula>
Here Gdist(<italic>a</italic>, <italic>b</italic>) denotes the genomic distance, namely, |<italic>f</italic>(<italic>a</italic>)−<italic>f</italic>(<italic>b</italic>)|. Note that forward transitions are genomic transitions between a pair of aligned positions that lie on the same sequence (i.e. <italic>G</italic>, <italic>G</italic>′, <italic>S</italic> or <italic>S</italic>′) such that the order of alignment is preserved with respect to the alignment direction (e.g. when aligned to complementary strand order will be reverse as well). The penalty function for forward transitions is a user-defined function <italic>H</italic><sub><italic>n</italic></sub> (see the note below). In the presence of duplication and rearrangement events, aligned positions will be in reverse order with respect to their alignment direction and these types of backwards transitions are penalized by the user-defined function <italic>H</italic><sub><italic>b</italic></sub>. Another type of transition considered is the inverted transitions penalized by the user-defined function <italic>H</italic><sub><italic>i</italic></sub>; here, one alignment lies on the original sequence and the other on the complementary sequence. Finally, a constant gap penalty <italic>C</italic><sub><italic>f</italic></sub> is applied to fusion transitions in which <italic>t</italic><sub><italic>i</italic></sub> aligns to <italic>G</italic>/<italic>G</italic>′ and <italic>t</italic><sub><italic>j</italic></sub> aligns to <italic>S</italic>/<italic>S</italic>′. Note again that although <italic>H</italic><sub><italic>n</italic></sub>, <italic>H</italic><sub><italic>b</italic></sub> and <italic>H</italic><sub><italic>i</italic></sub> are user-defined functions, <italic>H</italic><sub><italic>b</italic></sub> and <italic>H</italic><sub><italic>i</italic></sub> (which correspond to structural alterations in the transcript) should be costlier than <italic>H</italic><sub><italic>n</italic></sub> (which corresponds to the regular genomic gap, presumably spanning an intron).</p>
      <p>The second component of the transition penalty, <italic>J</italic><sub><italic>s</italic></sub>, is an additional score deducted from the penalty depending on the existence of canonical splice signals at the junction sites:
<disp-formula><graphic xlink:href="bts214um3"/></disp-formula>
Here <italic>min_intron</italic> corresponds to the minimum considered length of an intron (anything shorter is treated as a deletion) and <italic>J</italic><sub><italic>b</italic></sub>, <italic>J</italic><sub><italic>e</italic></sub> are binary functions that indicate whether the beginning and ending splice sites of the transition correspond to canonical splice signals. Note that the above formulation assumes a single-canonical splice signal pair (e.g. GT-AG) and the penalty is additive with respect to the beginning and ending sites.</p>
      <p>Based on the definitions above, observe that in the special case of an <italic>insertion</italic> in <italic>T</italic>, such that <italic>t</italic><sub><italic>i</italic>+1</sub>… <italic>t</italic><sub><italic>j</italic>−1</sub> are all aligned to ϕ and <italic>f</italic>(<italic>t</italic><sub><italic>i</italic></sub>) and <italic>f</italic>(<italic>t</italic><sub><italic>j</italic></sub>) are consecutive nucleotides in <italic>G</italic>, <italic>G</italic>′, <italic>S</italic> and <italic>S</italic>′, the penalty is zero.</p>
      <p><italic>An efficient algorithm for the nucleotide-level transcriptome to genome alignment with structural alterations problem</italic>. Given a limited variant of the alignment and the score function above, where only forward transitions are considered without splice signal scores on a single-genomic sequence <italic>G</italic>, there is a simple algorithm (for arbitrary <italic>H</italic><sub><italic>n</italic></sub>) with running time <italic>O</italic>(<italic>NM</italic><sup>2</sup>). This algorithm constructs an alignment table, <italic>X</italic><sub><italic>G</italic></sub>, of size <italic>N</italic>×<italic>M</italic> and initializes its first row as max(<italic>S</italic><sub><italic>m</italic></sub>(<italic>t</italic><sub>1</sub>, <italic>g</italic><sub><italic>j</italic></sub>), <italic>S</italic><sub><italic>m</italic></sub>(<italic>t</italic><sub>1</sub>, ϕ)) for all <italic>j</italic>∈[1, <italic>M</italic>]. For each of the remaining rows, the transitions from the previous row are evaluated representing genomic gaps between valid transcript position pairs. The gaps in the transcript are calculated as vertical transitions between two adjacent rows in the alignment table. This allows the construction of each row in <italic>O</italic>(<italic>M</italic><sup>2</sup>) time, yielding the above running time.</p>
      <p><xref ref-type="bibr" rid="B16">Galil and Giancarlo (1989</xref>) and <xref ref-type="bibr" rid="B35">Miller and Myers (1988</xref>) independently showed that when a restricted distance penalty scheme is assumed, the running time needed to construct a row can be reduced to <italic>O</italic>(<italic>M</italic> log(<italic>M</italic>)) using <italic>sparse dynamic programming</italic>. This restriction assumes a convex gap penalty function, <italic>h</italic>: ℤ<sup>+</sup>∪{0}→ℝ such that <italic>h</italic>(<italic>x</italic>)−<italic>h</italic>(<italic>x</italic>−1)≥<italic>h</italic>(<italic>x</italic>+1)−<italic>h</italic>(<italic>x</italic>)≥0. <xref ref-type="bibr" rid="B16">Galil and Giancarlo (1989</xref>) further reduced the running time to <italic>O</italic>(<italic>M</italic>) for simple convex gap penalty functions, with the condition that for every <italic>x</italic><sub>1</sub>, <italic>x</italic><sub>2</sub>∈ℤ, <italic>x</italic><sub>1</sub>&lt;<italic>x</italic><sub>2</sub> and <italic>r</italic>∈ℝ, the smallest integer value <italic>y</italic> that satisfies <italic>y</italic>&gt;<italic>x</italic><sub>2</sub> and <italic>h</italic>(<italic>y</italic>−<italic>x</italic><sub>1</sub>)−<italic>h</italic>(<italic>y</italic>−<italic>x</italic><sub>2</sub>)−<italic>r</italic>≤0 can be calculated in constant time. Log-scale distance penalty functions [in the form <italic>a</italic>+<italic>b</italic>*log(distance)], which model gap penalties quite realistically [as the intron lengths are geometrically distributed (<xref ref-type="bibr" rid="B9">Burge and Karlin, 1997</xref>)], satisfy the simple convexity property. This allows the exact transcript to genome alignment without structural alterations to be performed in <italic>O</italic>(<italic>NM</italic>) time.</p>
      <p>We now show how to extend the above algorithms to handle splice signal scores and transcriptional structural alterations in the form of duplications, rearrangements, inversions and fusions.</p>
      <p>Even if genomic distance penalties can be chosen as convex functions, the contribution from <italic>J</italic><sub><italic>s</italic></sub> may violate the convexity. To resolve this issue, we construct each row of the alignment table by the use of two independent processes; the first process calculates the genomic transitions from the previous row for the positions that constitute a canonical splice starting site, and the second process does the same for the positions that do not constitute a canonical splice starting site. For each of these processes, since <italic>J</italic><sub><italic>b</italic></sub> remains constant for a fixed position in the previous row, the set of forward transitions between two rows satisfy the convexity property. To obtain the optimal entries in a given row, we take the higher of the two values.</p>
      <p>Even though the above formulation is for forward transitions only, we can perform all sparse dynamic programming operations in reverse order (with switched indices); as a result we can split each of the two processes described above into further two processes, one for forward and another one for backward transitions. This way we can capture duplication and rearrangement events that require a backwards transition in the alignment.</p>
      <p>For handling inverted transitions we use a second alignment table, <italic>X</italic><sub><italic>G</italic>′</sub> for aligning <italic>T</italic> with <italic>G</italic>′, which is initialized in a similar fashion to <italic>X</italic><sub><italic>G</italic></sub> (naturally <italic>S</italic><sub><italic>m</italic></sub> values are obtained for the complementary nucleotide). Since the original sparse dynamic programming solution is designed for any arbitrary score values taken from the previous row, obtaining the row from table <italic>X</italic><sub><italic>G</italic>′</sub> will still be valid. Therefore, we can further split the four processes described above for handling inverted and non-inverted transitions; each entry will then be assigned to the maximum valued result out of the eight computed. Computing a row in table <italic>X</italic><sub><italic>G</italic>′</sub> can be carried out similarly: non-inverted transitions involving forward/backward and canonical/non-canonical processes will be computed using the previous row in table <italic>X</italic><sub><italic>G</italic>′</sub>, where the remaining inverted transitions will be computed using the table <italic>X</italic><sub><italic>G</italic></sub>.</p>
      <p>For fusion cases, we use two new alignment tables <italic>X</italic><sub><italic>S</italic></sub> and <italic>X</italic><sub><italic>S</italic>′</sub> to our formulation (for aligning <italic>T</italic> with both <italic>S</italic> and <italic>S</italic>′ ). Even though the processes for constructing the rows of <italic>X</italic><sub><italic>S</italic></sub>/<italic>X</italic><sub><italic>S</italic>′</sub> are identical to <italic>X</italic><sub><italic>G</italic></sub>/<italic>X</italic><sub><italic>G</italic>′</sub>, the initialization step requires handling potential fusion transitions. Before starting the row construction process we first identify the optimal fusion transition to each row in <italic>X</italic><sub><italic>S</italic></sub>/<italic>X</italic><sub><italic>S</italic>′</sub>. For <italic>k</italic>-th row, the highest scoring entry within the first <italic>k</italic>−1 rows in <italic>X</italic><sub><italic>G</italic></sub> or <italic>X</italic><sub><italic>G</italic>′</sub> constitutes the highest scoring fusion transition score, combined with the constant fusion transition penalty <italic>C</italic><sub><italic>f</italic></sub>. Since fusion transition penalties are independent from genomic position, the highest scoring table entry gives the optimal fusion transition for any of the cells in the row with the same transition score.</p>
      <p>The above algorithmic formulation provides solutions for arbitrary, convex and simple convex penalty formulations for handling structural alterations and splice signal scores within respective running times of <italic>O</italic>(<italic>NM</italic><sup>2</sup>), <italic>O</italic>(<italic>NM</italic> log(<italic>M</italic>)), and <italic>O</italic>(<italic>NM</italic>).</p>
    </sec>
    <sec id="SEC2.2">
      <title>2.2 Fragment chaining for transcriptome to genome alignment under structural alterations</title>
      <p>The problem of transcriptome to the genome alignment with structural alterations can be optimally solved in polynomial time under the assumption that the transcript sequence is composed of substrings copied from the genome sequence. For high-throughput transcriptome to genome alignment studies, however, running time and memory requirements of nucleotide-level alignment will be costly even for log-scale gap penalty functions.</p>
      <p>In this section, we describe the algorithmic formulation for a ‘lower resolution’ solution to the transcript to genome alignment with structural alterations. Given a set of ‘fragments’ between the transcript and the genome sequences, this approach aims to find the <italic>optimal</italic> chain of fragments within certain constraints that will give the maximum alignment score with respect to the fragment ‘qualities’ and transition penalties (<xref ref-type="fig" rid="F2">Figure 2</xref>). If the fragment length is one, this formulation reduces to the nucleotide-level formulation given.
<fig id="F2" position="float"><label>Fig. 2.</label><caption><p>Fragment chaining in the presence of a rearrangement and an inversion. The fragments involved include two segments from <italic>T</italic> associated with segments from <italic>G</italic> and another segment from <italic>T</italic> associated with a segment from <italic>G</italic>′. The figure depicts how the fragments reveal themselves in the alignment tables and how they can be chained to get the overall alignment</p></caption><graphic xlink:href="bts214f2"/></fig></p>
      <p>Given a transcript sequence <italic>T</italic> and a pair of genomic sequences <italic>G</italic> and <italic>S</italic> (and their complementary sequences <italic>G</italic>′ and <italic>S</italic>′), a fragment <italic>F</italic> is a segment of <italic>G</italic>, <italic>S</italic>, <italic>G</italic>′ or <italic>S</italic>′ which is also present in <italic>T</italic> within a small number of mismatches. Associated with <italic>F</italic>, we have (i) the starting position in <italic>T</italic>; (ii) the starting position in one of the genome sequences <italic>G</italic>, <italic>G</italic>′, <italic>S</italic> and <italic>S</italic>′; (iii) the length of the fragment; and (iv) the similarity score for the fragment, respectively, denoted by <italic>F</italic>.<italic>ts</italic>, <italic>F</italic>.<italic>gs</italic>, <italic>F</italic>.<italic>len</italic> and <italic>F</italic>.<italic>score</italic>. Similarly <italic>F</italic>.<italic>ge</italic> and <italic>F</italic>.<italic>te</italic> will denote the ending position of the respective sequences; e.g. for forward alignments, <italic>F</italic>.<italic>ge</italic>=<italic>F</italic>.<italic>gs</italic>+<italic>F</italic>.<italic>len</italic>−1 and <italic>F</italic>.<italic>te</italic>=<italic>F</italic>.<italic>ts</italic>+<italic>F</italic>.<italic>len</italic>−1. Fragments from <italic>G</italic> or <italic>S</italic> are aligned to <italic>T</italic> in the forward direction; the fragments from <italic>G</italic>′ or <italic>S</italic>′ are aligned to <italic>T</italic> in the reverse direction with complementary nucleotides. The score of the fragment is a function of its length and the number of mismatches between itself and its occurrence in <italic>T</italic>.</p>
      <p>In the algorithmic formulation below, we are given a set (<italic>F</italic><sub>set</sub>) of <italic>K</italic> fragments shared between <italic>T</italic> and genomic sequences, <italic>G</italic>, <italic>G</italic>′, <italic>S</italic> and <italic>S</italic>′, which are at least of a user specified length and have an alignment score higher than a user specified threshold (we describe how we obtain <italic>F</italic><sub>set</sub> later in the text). A pair of fragments can overlap in the transcript or in the genome sequence. However, for the description below, we do not consider a fragment in <italic>F</italic><sub>set</sub>, which is a sub-fragment of (fully included in, and in the same direction with) another fragment in the genome sequence and the transcript.</p>
      <p>We define a <italic>valid</italic> disjoint fragment chain <italic>C</italic> as an ordered subset of <italic>F</italic><sub>set</sub> involving <italic>k</italic>≤<italic>K</italic> fragments, (<italic>F</italic><sub>1</sub>, <italic>F</italic><sub>2</sub>,…, <italic>F</italic><sub><italic>k</italic></sub>), such that (i) for each pair of subsequent fragments <italic>F</italic><sub><italic>i</italic></sub>, <italic>F</italic><sub><italic>i</italic>+1</sub> (subsequent fragments are said to be <italic>chained</italic>) we have <italic>F</italic><sub><italic>i</italic></sub>.<italic>te</italic>&lt;<italic>F</italic><sub><italic>i</italic>+1</sub>.<italic>ts</italic>; and (ii) if <italic>F</italic><sub><italic>i</italic></sub> is aligned to <italic>S</italic>/<italic>S</italic>′, no <italic>F</italic><sub><italic>j</italic></sub> for <italic>j</italic>&gt;<italic>i</italic> is aligned to <italic>G</italic>/<italic>G</italic>′.</p>
      <p>Our goal here is to find the valid disjoint fragment chain <italic>C</italic><sub><italic>d</italic></sub> (of length <italic>B</italic>≤<italic>K</italic>) over <italic>F</italic><sub>set</sub> with the highest possible ‘score’ with respect to the scoring function <italic>f</italic><sub>score</sub> and transition penalty function <italic>f</italic><sub>penalty</sub> given as
<disp-formula><graphic xlink:href="bts214um4"/></disp-formula>
Here, the ‘transcript gap penalty function’ (according to the constant gap penalty scheme described in our nucleotide-level alignment formulation) is set to be <italic>P</italic><sub><italic>t</italic></sub>(dist)=<italic>C</italic><sub>gap</sub>*dist. The original genomic transition penalty function <italic>P</italic><sub><italic>s</italic></sub> and canonical splice signal scoring function <italic>J</italic><sub><italic>s</italic></sub> are as per the nucleotide-level alignment formulation.</p>
      <p>It is possible to solve the problem described above by going through the fragments in <italic>F</italic><sub>set</sub> according to their starting position in <italic>T</italic>, computing the best scoring chain ending with each fragment via dynamic programming (see the description of the Dissect method). For any pair of user-defined functions <italic>P</italic><sub><italic>s</italic></sub> and <italic>J</italic><sub><italic>s</italic></sub> this algorithm can find the optimal disjoint fragment chain in <italic>F</italic><sub>set</sub> in <italic>O</italic>(<italic>K</italic><sup>2</sup>) time. Although it may be possible to improve the running time for restricted genomic gap penalty models involving, e.g., convex and simple convex cost functions, this algorithm is easy to implement and has proven to be sufficiently fast on the datasets we experimented with.</p>
      <p><italic>Fragment chains with overlapping fragments</italic>. In a real-life experimental setting, a chain of fragments should be allowed to overlap to handle situations involving highly similar flanking sequences of a pair of chained fragments. Here, we develop a generalized version of the formulation given above which allows the chaining of a prefix of a fragment <italic>F</italic><sub><italic>i</italic></sub> to a suffix of another fragment <italic>F</italic><sub><italic>j</italic></sub> so that the chosen prefix and suffix do not overlap in the transcript. First we redefine the concept of a valid fragment chain and then investigate different overlap resolution schemes.</p>
      <p>Let a valid fragment chain with overlaps, <italic>C</italic>, be a sequence of <italic>k</italic>≤<italic>K</italic> fragments, (<italic>F</italic><sub>1</sub>, <italic>F</italic><sub>2</sub>,…, <italic>F</italic><sub><italic>k</italic></sub>), such that (i) the starting and ending positions of the fragments in the transcript increase throughout the chain and (ii) if <italic>F</italic><sub><italic>i</italic></sub> the chain is aligned to <italic>S</italic>/<italic>S</italic>′, <italic>F</italic><sub><italic>j</italic></sub> cannot be aligned to <italic>G</italic>/<italic>G</italic>′ for any <italic>j</italic>&gt;<italic>i</italic>.</p>
      <p>Our goal is to find the optimal overlapping fragment chain <italic>C</italic><sub><italic>o</italic></sub> (of length <italic>B</italic>≤<italic>K</italic>) with a modified score function that differs from the original score function in only the transition penalty function, <italic>f</italic><sub>penalty</sub>, described below:
<disp-formula><graphic xlink:href="bts214um5"/></disp-formula>
Here <italic>P</italic><sub><italic>o</italic></sub>(<italic>x</italic>, <italic>y</italic>) represents the special transition penalty for overlapping fragment pairs. Notice that the splice signal score function, <italic>J</italic><sub><italic>s</italic></sub>, is omitted from the penalty function. This is due to the complications that can be caused by the integration of splice signal scores and overlapping fragments.</p>
      <p>Given a valid overlapping fragment chain, (<italic>F</italic><sub>1</sub>,…, <italic>F</italic><sub><italic>k</italic></sub>), an <italic>overlap split position</italic> between chained fragments <italic>F</italic><sub><italic>i</italic></sub> and <italic>F</italic><sub><italic>i</italic>+1</sub>, is a position <italic>r</italic>∈[<italic>F</italic><sub><italic>i</italic>+1</sub>.<italic>ts</italic>−1, <italic>F</italic><sub><italic>i</italic></sub>.<italic>te</italic>] indicating the modified ending position of <italic>F</italic><sub><italic>i</italic></sub>, and <italic>r</italic>+1 indicating the modified starting position of <italic>F</italic><sub><italic>i</italic>+1</sub> in the transcript. Below we show how to obtain the overlap split positions, and effectively resolve overlaps between a pair of chained fragments.</p>
      <p>In a simple overlap resolution model, the penalty <italic>P</italic><sub><italic>o</italic></sub> can be set to the sum of the length of the overlapping interval and the penalty of the genomic gap: for an overlapping fragment pair <italic>F</italic><sub><italic>i</italic></sub> and <italic>F</italic><sub><italic>i</italic>+1</sub>, we define <italic>P</italic><sub><italic>o</italic></sub>=<italic>P</italic><sub><italic>s</italic></sub>(<italic>F</italic>′<sub><italic>i</italic></sub>.<italic>ge</italic>, <italic>F</italic>′<sub><italic>i</italic>+1</sub>.<italic>gs</italic>)+(<italic>F</italic><sub><italic>i</italic></sub>.<italic>te</italic>−<italic>F</italic><sub><italic>i</italic>+1</sub>.<italic>ts</italic>+1), where <italic>F</italic>′<sub><italic>i</italic></sub> and <italic>F</italic>′<sub><italic>i</italic>+1</sub> represent the updated (shortened) fragments. Since the overlap length is known, we simply have to find the overlap split position <italic>r</italic> that minimizes <italic>P</italic><sub><italic>s</italic></sub>.</p>
      <p>Notice that for fragment pairs that are aligned in the same direction, the genomic distance between a pair of fragments increases with the length of the overlap—independent of the overlap split position; thus any overlap split position will do. For fragments that are aligned in different directions however, the overlap split position has an effect on the genomic distance between the two fragments. There are three different scenarios to consider in this case: (i) first fragment is located ‘earlier’ in the genome; (ii) first fragment is located ‘later’ in the genome; and (iii) the overlapping regions of both fragments overlap in the genome as well. For each of the above scenarios, respectively, selecting the ‘latest’ overlap split position, the ‘earliest’ overlap split position, and the overlap split position that makes the two updated fragments closest in the genome minimizes the genomic transition penalty—under the assumption that inversion transition penalty increases with the genomic distance. Since all these three cases can be handled in constant time, computing the optimal overlap split position for any pair of fragments can be performed in constant time. As a result, we can employ an algorithm quite similar to the one described for disjoint fragment chaining. The only difference is, when selecting the valid chains ending at each fragment <italic>F</italic><sub><italic>i</italic></sub>, the algorithm will need to also consider the fragments that overlap with <italic>F</italic><sub><italic>i</italic></sub>, but do not start earlier than <italic>F</italic><sub><italic>i</italic></sub>.<italic>ts</italic> in <italic>T</italic> or end earlier than <italic>F</italic><sub><italic>i</italic></sub>.<italic>te</italic>. As per the algorithm for disjoint fragment chaining, this variant of the fragment chaining with overlapping fragments method needs <italic>O</italic>(<italic>K</italic><sup>2</sup>) time.</p>
      <p>For further improving the accuracy, one needs to consider the (eliminated) mismatches within the overlapping region. The penalty function, <italic>P</italic><sub><italic>o</italic></sub>, can now be defined as: <italic>P</italic><sub><italic>o</italic></sub>(<italic>F</italic><sub><italic>i</italic></sub>, <italic>F</italic><sub><italic>i</italic>+1</sub>)=<italic>P</italic><sub><italic>s</italic></sub>(<italic>F</italic>′<sub><italic>i</italic></sub>.<italic>ge</italic>, <italic>F</italic>′<sub><italic>i</italic>+1</sub>.<italic>gs</italic>)+(<italic>F</italic><sub><italic>i</italic></sub>.score−<italic>F</italic>′<sub><italic>i</italic></sub>.score)+(<italic>F</italic><sub><italic>i</italic>+1</sub>.score−<italic>F</italic>′<sub><italic>i</italic>+1</sub>.score). The optimal split position of an overlapping fragment pair is that which minimizes the sum of the contributions from the updated genomic distance and the number of mismatches retained in the updated fragments. A naive method to handle this variant of the problem checks each position within the overlap to compute the minimum value for <italic>P</italic><sub><italic>o</italic></sub>. However, if there are no mismatches in either fragment, the problem reduces to that described above, and thus will have an efficient solution. Furthermore, if each fragment in <italic>F</italic><sub>set</sub> can only have a constant number of mismatches (one can enforce this in the definition of a fragment), a simple brute force search will compute the optimal split position for each pair in constant time, preserving the running time of <italic>O</italic>(<italic>K</italic><sup>2</sup>).</p>
      <p>The algorithmic formulation described above provides the theoretical underpinnings of the computational method we devised for identifying structural alterations leading to a transcript. However, as will be described in the next section, we need to take further steps to make the fragment chaining solution efficient and its results close to those implied by nucleotide-level formulation towards a practical solution.</p>
    </sec>
    <sec id="SEC2.3">
      <title>2.3 Whole genome analysis and discovery of novel transcriptional structural alterations with <italic>Dissect</italic></title>
      <p>In this section, we describe some of the details of our computational tool <italic>Dissect</italic>. Dissect has three main stages:</p>
      <p><italic>Genomic region inference</italic>. This stage begins by sampling anchors from the transcript sequence and mapping to reference genome within a user-defined mismatch threshold. Although there are a number of ‘spliced’ alignment methods in the literature, they either perform a local (<xref ref-type="bibr" rid="B27">Kent, 2002</xref>) or an anchor-specific (<xref ref-type="bibr" rid="B43">Wu and Watanabe, 2005</xref>) analysis of anchor mappings. Since we aim to detect structural alterations, the order or direction of anchors are not necessarily preserved within the alignment. Thus, a global region inference approach oblivious to order or direction is more suitable.</p>
      <p>For our purposes, an anchor is a substring of constant length <italic>L</italic><sub><italic>A</italic></sub>, of the transcript sequence <italic>T</italic> of length <italic>N</italic>. We generate the set of anchors from the transcript by sampling a user-defined number of equally distanced anchors of length <italic>L</italic><sub><italic>A</italic></sub>, the first and last anchors corresponding to the beginning and the ending of the transcript, respectively. Then we find all possible mappings of an anchor in the genome through the cache-oblivious short read mapper, mrsFAST (<xref ref-type="bibr" rid="B19">Hach <italic>et al</italic>., 2010</xref>), eliminating the anchors that have more mappings than a user-specified threshold.</p>
      <p>Within a set of anchor mappings <italic>S</italic><sub>map</sub>={<italic>m</italic><sub>1</sub>, <italic>m</italic><sub>2</sub>,…, <italic>m</italic><sub><italic>K</italic></sub>} of size <italic>K</italic>, each mapping <italic>m</italic><sub><italic>i</italic></sub> (to a genomic region) is represented as <italic>m</italic><sub><italic>i</italic></sub>=(<italic>m</italic><sub><italic>i</italic></sub>.<italic>t</italic>, <italic>m</italic><sub><italic>i</italic></sub>.<italic>g</italic>, <italic>m</italic><sub><italic>i</italic></sub>.score), which, respectively, correspond to the starting position of the anchor in the transcript, the starting position of the mapping in the genome, and mapping (similarity) score. Given the complete set of anchor mappings, we determine a ‘genomic region of interest’ by finding all intervals within the genome (or two disjoint intervals for the fusion cases) to which a high number of distinct anchors are mapped—with high-alignment scores. Since the region is preferred to be compact, our aligner only searches among the intervals that start at the starting position of an anchor mapping and end at the ending position of a mapping. This condition removes all intervals that have unnecessary extensions at each end and reduces the number of possible genomic regions to <italic>O</italic>(<italic>K</italic><sup>2</sup>).</p>
      <p>For our purposes, a genomic region <italic>R</italic> is an interval that locally maximizes the following score:
<disp-formula><graphic xlink:href="bts214um6"/></disp-formula>
Here <italic>c</italic><sub><italic>N</italic></sub>≥1, <italic>c</italic><sub>α</sub>≥1 and <italic>c</italic><sub><italic>L</italic></sub>&gt;0 are user-defined normalization parameters for adjusting relative significance of the number of anchors contained within the region to the length of the inferred region. <italic>M</italic>, on the other hand, is the function defined to be the sum of best mapping scores of all anchors mapped to the region.</p>
      <p>Our genomic region inference method initially sorts all anchor mappings according to their genomic position. It then goes over each mapping position and calculates the above score for all possible genomic intervals starting at that position and commits to the one with the highest score—in linear time via dynamic programming.</p>
      <p>A second type of genomic region inference needs to find fusion regions that appear as intervals separated by long inter-genic regions on the same genomic sequence (e.g. intra-chromosomal fusions) or possible different genomic sequences (e.g. inter-chromosomal fusions). Since Dissect does not utilize gene annotation for region inference, we do not differentiate between single-gene alignments and inter-genic fusions between closely located genes. This step essentially corresponds to the inference of two separate regions and a transcript cut position that yield the highest double region inference score, which is the sum of scores of the two regions such that the first region score is only calculated over the anchor samples taken from upstream of the transcript cut position and the second region score is only calculated upon the samples taken from downstream.</p>
      <p>Instead of looking for combinations of regions that give the optimal double region score, Dissect scans over all possible anchor split positions and search for single regions for both ends of the transcript independently. Optimal double region score for this anchor split is the sum of optimal single regions that cover anchors on each side. Given <italic>c</italic><sub><italic>A</italic></sub> anchors sampled from the transcript, we find the optimal double region pair in <italic>O</italic>(<italic>c</italic><sub><italic>A</italic></sub>*<italic>K</italic><sup>2</sup>) time.</p>
      <p>Even though the region inference methods described above search for the highest scoring genomic region/region pair, Dissect processes all regions whose scores are within a constant factor of the highest score (and within a user-defined maximum number of disjoint regions threshold). Each of these reported genomic regions/region pairs are analyzed separately within the downstream alignment pipeline.</p>
      <p>An important issue to address is the relation between inferred single regions and double regions. Even though we can efficiently find the highest scoring single/double regions from a given anchor set and its mappings, it is not possible to objectively compare scores of inferred single/double regions. For instance, if there is a long intron in the alignment of the transcript, the double region that spans the exons on each side of the intron might score higher than a single region that encompasses the entire transcript alignment if <italic>c</italic><sub>α</sub> is 1. Furthermore, a distance threshold would require prior knowledge of fusions within the genome that is analyzed. Dissect uses a double layer inference step as a workaround to this single/double region score comparison issue. In the first inference layer, we find a set of highest scoring single regions. If any of these regions cover a user determined percentage of the sampled anchors in the transcript, a double region is not searched for. If there is no such single region however, our method searches for high-scoring double regions. If there is no high-quality single or double region, our method does not report a region and considers the given transcript sequence as not represented within the genome with high similarity.</p>
      <p>As the final step of this stage, regions that are overlapping or close to each other are combined into single regions (these include fusion regions that are relatively close to each other). In addition, the region boundaries are extended allowing flanking sequence from the beginning/ending anchors that are not represented in the set of mappings. The resulting genomic intervals are passed on to the second stage of Dissect which finds the optimal fragment chain with structural alterations between the transcript and inferred regions.</p>
      <p><italic>Fragment set construction and chaining</italic>. In the fragment set construction stage, we construct a set of fragments shared between the transcript and the genomic region(s) inferred in the previous stage. For that purpose we modified mrsFAST alignment method (<xref ref-type="bibr" rid="B19">Hach <italic>et al</italic>., 2010</xref>), to identify ‘seeds’ (of a user specified length—which can be overlapping) in the transcript and maps them to both strands of the genomic sequence. After obtaining all possible seed mappings, the modified mrsFAST extends each fragment on both ends under certain extension constraints. These constraints are defined in the form of thresholds that limit total number of errors, number of consecutive errors that can appear in the fragment and minimum sequence similarity required for each k-mer of the fragment. After the fragment set is constructed, we employ the overlapping fragment chaining algorithm once using forward and a second time using reverse splicing signals (GT-AG and CT-AC). In the case of a single region inferred in the previous stage, the chaining solution will only consist of <italic>G</italic>/<italic>G</italic>′ sequences. If a pair of regions are inferred, the chaining solution will consider all <italic>G</italic>/<italic>G</italic>′ and <italic>S</italic>/<italic>S</italic>′ sequences allowing fusion transitions.</p>
      <p>A key difference between our original formulation and the chaining method used in Dissect is the use of splice signal scores. Even though splice signal scores were omitted in our original overlapping chaining formulation, in practice it would be useful to have a two layered chaining/post-processing approach that constructs the chain that does not attempt to determine the exact overlap split positions, but performs a more accurate overlap analysis together with splice signals as a post-processing step after the optimal chain is obtained. The optimality condition here is also modified in the sense that splice signal score is incorporated when two disjoint fragments are chained together, yet omitted for overlapping fragments.</p>
      <p>At the end of fragment chaining step, a tentative chain is obtained that represents the general structure of the alignment, yet overlap split positions are not exactly specified in the resulting chain. Dissect detects the exact split position through a post-refinement method described below.</p>
      <p><italic>Post-refinement of the fragment chain</italic>. In the post-refinement stage, we adjust the boundaries of fragment pairs that potentially contain minor misalignments due to the limitations introduced in the fragment construction step. To resolve these, we implemented several post-refinement steps that (i) combine fragments which are separated by a single-nucleotide indel or a mismatch in their alignment; (ii) classify and modify short overlaps in the genome; (iii) fill in short gaps in the transcript between adjacent fragments in the chain; and (iv) find optimal split position for overlapping fragment pairs.</p>
      <p>In the case of two adjacent fragments being separated by an indel or a mismatching transcript-genome nucleotide, the two fragments are simply combined into a single fragment that contain an error in between. Clearly, if the fragments are separated by an indel, the combined fragment will also contain indels. Even though this is against the original fragment construction constraints; as a post-processing method, it only affects the resulting chain and not the chaining formulation.</p>
      <p>When there is an adjacent fragment pair with a short overlapping region in the genome, Dissect does not directly report the overlap region as a duplication as this can also be an inserted region that displays sequence similarity to one of the flanking sequences. Since it is difficult to differentiate between the two, we allow the user to define lower and upper thresholds on length. Overlaps that are shorter than the lower threshold are treated as insertions, whereas overlaps that are longer than the upper threshold are reported as regular duplicated regions in the transcript. The overlap regions that fall in between are reported as an ambiguous insertion/duplication region should be further analyzed by the use of gene annotations.</p>
      <p>We have two additional refinement methods that require efficient implementations: (i) If two adjacent fragments have a gap in between them in the transcript, the formation might indicate a novel insertion of the size of the gap. (ii) Alternatively, the region of the gap might belong to one of the exons represented by adjacent fragments (or both), yet may have relatively low similarity to the corresponding genomic region. To test the latter case, we perform a double-sided semi-global alignment on the flanking sequences of the fragment pair in the genome and the gap sequence. This alignment scheme aims to optimize the sum of the semi-global (overlap-detection) alignment scores on each side of a fixed split position in the transcript gap region. The method we apply is analogous to the <italic>Sandwich DP</italic> method proposed for GMAP spliced alignment algorithm (<xref ref-type="bibr" rid="B43">Wu and Watanabe, 2005</xref>). The key difference in our application is the consideration of alignment with various structural alterations and their effect of fragment directionality. Within the alignment table, we also mark the GT-AG/CT-AC splice signals and take them into account for the computation of the new transition penalty between the updated fragments. This allows a fair alignment score comparison between the chains that go through this post-processing step and the chains that do not. Note that this gap refinement scheme has a running time of <italic>O</italic>(<italic>l</italic><sup>2</sup>) per refinement (<italic>l</italic> is the length of the transcript gap).</p>
      <p>As mentioned in the description of the fragment chaining stage; the exact overlap split position for overlapping fragments is not determined during the execution of the dynamic programming method but is left for a more detailed analysis in the post-refinement stage. In this stage, Dissect searches for the optimal overlap resolution according to an extended version of the overlap resolution scheme described in the previous section. In this version of the overlap resolution scheme, we combine splice signal scores with the original accurate overlap resolution that considers mismatch retention and updated genomic distance for the overlap penalty. Even though this extension was not feasible during fragment chaining, if the overlaps are resolved in an iterative fashion from the fragment pairs at the beginning of the chain towards the end, the number of splice sites that need to be checked in the genome stays within <italic>O</italic>(<italic>N</italic>). Incorporating splice site scores in this manner also allows us to have a fair comparison basis when comparing the relative scores of the fragment chains for various regions inferred in the first stage.</p>
      <p>When two adjacent overlapping fragments have near perfect sequence similarity and no splice signals to identify the exact splicing position, there can be multiple overlap split positions with equal updated fragment scores. In such cases, our aligner reports the earliest split in the transcript but also provides an output field indicating equivalent split positions. This additional output can be used to reconstruct all optimal overlap splitting selections.</p>
    </sec>
  </sec>
  <sec id="SEC3">
    <title>3 RESULTS</title>
    <p>We first report the performance of Dissect on simulation datasets derived from NCBI <italic>RefSeq</italic> transcript sequences and <italic>Known Gene</italic> gene structure database (<xref ref-type="bibr" rid="B24">Hsu <italic>et al</italic>., 2006</xref>), which are subjected to nucleotide-level substitution/indel noise with varying frequencies, novel oligonucleotide sequence insertions, and structural alterations at different length distributions, including exon duplications, inversions, rearrangements and transcript–transcript fusions. To demonstrate the performance of Dissect on <italic>real</italic> human transcriptome data, we report on an RNA-Seq dataset comprising 50 bp reads from the prostate cancer cell line C4-2, assembled through Trans-AbySS transcriptome assembler (<xref ref-type="bibr" rid="B6">Birol <italic>et al</italic>., 2009</xref>).</p>
    <p><italic>Wild-type transcripts with novel insertions and nucleotide-level alterations</italic>. We first evaluate Dissect's false discovery rate through the use of a dataset comprised of wild-type transcripts. For that, we used NCBI RefSeq mRNA annotation dataset including the whole mouse transcriptome (build of July 18, 2011). This annotation dataset is (presumably) composed of wild-type transcripts that do not contain structural alterations. We evaluated Dissect's false event discovery rate by aligning all transcripts from this dataset to the mouse reference genome (build mm9). Since most of these sequences have very close matches to genes in the mouse genome, we also used this dataset to evaluate the accuracy of Dissect alignments (obtained through fragment chaining) at nucleotide-level resolution.</p>
    <p>After the removal of poly-A tails, the entire dataset containing 28 060 RefSeq sequences of average length of 2848 nucleotides, were aligned to the mouse reference genome using the default parameters of Dissect. We report on the highest scoring alignment for each transcript sequence. Among them, 27 922 (99.51%) did not contain structural alterations, 49 (0.17%) were reported to contain a structural event and 38 (0.14%) were identified to contain a short ambiguous insertion or duplication event. The remaining 51 sequences had no high-similarity alignments. On a standard single-core processor, aligning the entire dataset of 28 060 sequences with Dissect took &lt;80 min.</p>
    <p>Next, we aimed to observe how Dissect's false event discovery rate varies as a function of sequence divergence (between the transcript and the genome)—and thus sequencing error rate. For that, we modified the original RefSeq sequences by adding nucleotide-level substitution/indel errors. These errors were added independently at random in each position of a transcript sequence: based on a recent study on error rates in Illumina sequencing (<xref ref-type="bibr" rid="B36">Minoche <italic>et al</italic>., 2011</xref>), single-nucleotide indel to substitution error ratio was set to 1/150 and insertion to deletion ratio was set to 1/10. When the sequencing error rate was set to 1%, 27 917 (99.4%) sequences out of 28 060 were aligned as wild-type transcripts without no alterations. For 52 sequences, a high-similarity alignment was not reported. Structural alterations were reported for only 57 transcripts and short ambiguous duplication/insertions were detected for 34 transcripts. When the sequencing error rate was set to 4%, the number of transcripts with a wild-type transcript alignment was reduced to 27 756 (98.9%). Among the remaining 304 sequences, 188 did not produce a high-similarity alignment.</p>
    <p>Finally, we used the latest RefSeq mRNA annotation dataset for whole human transcriptome (build of July 18, 2011) for the purpose of evaluating Dissect's false event discovery rate in the presence of short-to-medium size novel insertions.</p>
    <p>To simulate a realistic sample of novel human genome insertions, we sampled substrings of varying length from the set of insertion sequences reported in a novel insertion characterization study (<xref ref-type="bibr" rid="B28">Kidd <italic>et al</italic>., 2010</xref>), and inserted them to the transcript sequences at random exon breakpoints. Our dataset included 33 460 sequences that were devoid of structural alterations and had nucleotide-level accurate alignments (after the removal of poly-A tails). We equally partitioned this dataset into four subsets, each subject to a specific insertion size. To obtain realistic novel insertion sequences, we used 2363 known novel insertion sequences (<xref ref-type="bibr" rid="B28">Kidd <italic>et al</italic>., 2010</xref>), from which we randomly picked a position in each sequence and extracted the sequence of the required length.</p>
    <p><xref ref-type="table" rid="T1">Table 1</xref> depicts the false event detection rate for novel insertions shorter than 35 nucleotides. The higher rate of false positives for longer insertion sizes is caused by Dissect's high sensitivity to sequence similarity. Since the insertion sequences are obtained from a real novel insertion study for the human genome, there might be sequences highly similar to the insertion nearby the aligned gene loci, which increase the risk of identifying false rearrangements.
<table-wrap id="T1" position="float"><label>Table 1.</label><caption><p>Alignment results of Dissect for the simulated wild-type transcriptome dataset with novel insertions</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th rowspan="1" colspan="1">Insertion length</th><th rowspan="1" colspan="1">Total</th><th rowspan="1" colspan="1">WT</th><th rowspan="1" colspan="1">All events</th><th rowspan="1" colspan="1">A. D/I</th><th rowspan="1" colspan="1">N.A.</th></tr></thead><tbody align="left"><tr><td rowspan="1" colspan="1">6–20 bases</td><td rowspan="1" colspan="1">8365</td><td rowspan="1" colspan="1">8335</td><td rowspan="1" colspan="1">12</td><td rowspan="1" colspan="1">16</td><td rowspan="1" colspan="1">2</td></tr><tr><td rowspan="1" colspan="1">21–35 bases</td><td rowspan="1" colspan="1">8365</td><td rowspan="1" colspan="1">8284</td><td rowspan="1" colspan="1">52</td><td rowspan="1" colspan="1">23</td><td rowspan="1" colspan="1">6</td></tr><tr><td rowspan="1" colspan="1">36–50 bases</td><td rowspan="1" colspan="1">8365</td><td rowspan="1" colspan="1">8223</td><td rowspan="1" colspan="1">106</td><td rowspan="1" colspan="1">24</td><td rowspan="1" colspan="1">13</td></tr><tr><td rowspan="1" colspan="1">51–65 bases</td><td rowspan="1" colspan="1">8365</td><td rowspan="1" colspan="1">8117</td><td rowspan="1" colspan="1">204</td><td rowspan="1" colspan="1">20</td><td rowspan="1" colspan="1">24</td></tr></tbody></table><table-wrap-foot><fn><p>Rows represent the length interval of the novel insertion distributions (e.g. insertions reported in the first row are uniformly distributed between 6 and 20 nucleotides). Columns indicate the output labels of Dissect: <italic>All events</italic> column represents the total number of transcripts Dissect has identified as a structural alteration <italic>A. D/I</italic> column represents the alignments that contain a short ambiguous interval that cannot be verified with certainty as an insertion or a duplication, and <italic>N.A</italic>. column indicates the number of transcript sequences for which Dissect did not return a valid high-similarity alignment.</p></fn></table-wrap-foot></table-wrap>
</p>
    <p><italic>Simulated transcriptional events</italic>. To estimate the sensitivity of Dissect, we initially prepared wild-type transcriptome datasets without any structural alterations using the Known Genes mouse gene structure annotation database (<xref ref-type="bibr" rid="B24">Hsu <italic>et al</italic>., 2006</xref>) and modified extracted wild-type transcript sequences according to various structural alteration scenarios. In this step, any transcript sequence shorter than 50 bp is removed, since structural modifications in such short transcript sequences often prevent reliable mapping of the anchor sequences used by Dissect.</p>
    <p>The thirteen simulations described below aim to emulate the aberrant formations that can occur in transcripts due to structural alterations. These simulations involve: (i) tandem duplications of the full transcript; (ii) tandem duplication of the longest exon; (iii) tandem duplication of the shortest exon; (iv) internal-inversion of the longest exon; (v) internal-inversion of the shortest exon; (vi) suffix-inversion with a breakpoint close to middle (prefix to suffix ratio: 36–65%); (vii) suffix-inversion with a breakpoint close to the beginning/end, (prefix to suffix ratio: 16–35% or 66–85%); (viii) rearrangement of the full transcript sequence from a particular split position; (ix) rearrangement of adjacent exons; (x) rearrangement of non-adjacent exons; (xi) well-balanced fusions (shorter fused sequence is ≥%60 of the longer one); (xii) moderately-balanced fusions (30%≤ short to long ratio &lt;60%); and (xiii) imbalanced fusion (short to long ratio: &lt;%30). The distribution of transcript alignments according to these event type labels for various event simulations are given in <xref ref-type="table" rid="T2">Table 2</xref>.
<table-wrap id="T2" position="float"><label>Table 2.</label><caption><p>The number of structural alterations detected by Dissect for the simulation datasets</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th rowspan="1" colspan="1"/><th rowspan="1" colspan="1">Tot.</th><th rowspan="1" colspan="1">Tot-E.</th><th rowspan="1" colspan="1">Fusion</th><th rowspan="1" colspan="1">Inv.</th><th rowspan="1" colspan="1">F. Dup.</th><th rowspan="1" colspan="1">F. Rea.</th></tr></thead><tbody align="left"><tr><td rowspan="1" colspan="1">Exp. 1</td><td rowspan="1" colspan="1">5234</td><td rowspan="1" colspan="1">5099</td><td rowspan="1" colspan="1">1</td><td rowspan="1" colspan="1">5</td><td rowspan="1" colspan="1">5092</td><td rowspan="1" colspan="1">1</td></tr><tr><td rowspan="1" colspan="1">Exp. 2</td><td rowspan="1" colspan="1">5234</td><td rowspan="1" colspan="1">5172</td><td rowspan="1" colspan="1">0</td><td rowspan="1" colspan="1">1</td><td rowspan="1" colspan="1">5171</td><td rowspan="1" colspan="1">0</td></tr><tr><td rowspan="1" colspan="1">Exp. 3</td><td rowspan="1" colspan="1">5234</td><td rowspan="1" colspan="1">5093</td><td rowspan="1" colspan="1">0</td><td rowspan="1" colspan="1">0</td><td rowspan="1" colspan="1">5093</td><td rowspan="1" colspan="1">0</td></tr><tr><td rowspan="1" colspan="1">Exp. 4</td><td rowspan="1" colspan="1">4788</td><td rowspan="1" colspan="1">4762</td><td rowspan="1" colspan="1">0</td><td rowspan="1" colspan="1">4762</td><td rowspan="1" colspan="1">0</td><td rowspan="1" colspan="1">0</td></tr><tr><td rowspan="1" colspan="1">Exp. 5</td><td rowspan="1" colspan="1">4788</td><td rowspan="1" colspan="1">4331</td><td rowspan="1" colspan="1">0</td><td rowspan="1" colspan="1">4331</td><td rowspan="1" colspan="1">0</td><td rowspan="1" colspan="1">0</td></tr><tr><td rowspan="1" colspan="1">Exp. 6</td><td rowspan="1" colspan="1">3188</td><td rowspan="1" colspan="1">3125</td><td rowspan="1" colspan="1">0</td><td rowspan="1" colspan="1">3125</td><td rowspan="1" colspan="1">0</td><td rowspan="1" colspan="1">0</td></tr><tr><td rowspan="1" colspan="1">Exp. 7</td><td rowspan="1" colspan="1">4654</td><td rowspan="1" colspan="1">4501</td><td rowspan="1" colspan="1">0</td><td rowspan="1" colspan="1">4501</td><td rowspan="1" colspan="1">0</td><td rowspan="1" colspan="1">0</td></tr><tr><td rowspan="1" colspan="1">Exp. 8</td><td rowspan="1" colspan="1">4788</td><td rowspan="1" colspan="1">4512</td><td rowspan="1" colspan="1">2</td><td rowspan="1" colspan="1">8</td><td rowspan="1" colspan="1">3</td><td rowspan="1" colspan="1">4499</td></tr><tr><td rowspan="1" colspan="1">Exp. 9</td><td rowspan="1" colspan="1">4788</td><td rowspan="1" colspan="1">4623</td><td rowspan="1" colspan="1">0</td><td rowspan="1" colspan="1">8</td><td rowspan="1" colspan="1">2</td><td rowspan="1" colspan="1">4613</td></tr><tr><td rowspan="1" colspan="1">Exp. 10</td><td rowspan="1" colspan="1">4316</td><td rowspan="1" colspan="1">4255</td><td rowspan="1" colspan="1">0</td><td rowspan="1" colspan="1">14</td><td rowspan="1" colspan="1">4</td><td rowspan="1" colspan="1">4237</td></tr><tr><td rowspan="1" colspan="1">Exp. 11</td><td rowspan="1" colspan="1">1312</td><td rowspan="1" colspan="1">1237</td><td rowspan="1" colspan="1">1232</td><td rowspan="1" colspan="1">5</td><td rowspan="1" colspan="1">0</td><td rowspan="1" colspan="1">0</td></tr><tr><td rowspan="1" colspan="1">Exp. 12</td><td rowspan="1" colspan="1">1558</td><td rowspan="1" colspan="1">1433</td><td rowspan="1" colspan="1">1433</td><td rowspan="1" colspan="1">0</td><td rowspan="1" colspan="1">0</td><td rowspan="1" colspan="1">0</td></tr><tr><td rowspan="1" colspan="1">Exp. 13</td><td rowspan="1" colspan="1">2363</td><td rowspan="1" colspan="1">562</td><td rowspan="1" colspan="1">562</td><td rowspan="1" colspan="1">0</td><td rowspan="1" colspan="1">0</td><td rowspan="1" colspan="1">0</td></tr></tbody></table><table-wrap-foot><fn><p>Tot., total number of transcript sequences; Tot-E., total number of discovered structural event containing transcripts; Fusion, total number of fusions; Inv., inversion events including inverted duplications, inverted rearrangements, in-place inversions, and suffix-inversions; F. Dup., forward duplications; F. Rea., forward rearrangement events.</p></fn></table-wrap-foot></table-wrap>
</p>
    <p><italic>Transcriptomic structural alterations in prostate cancer cell line C4-2</italic>. We applied Dissect to high-coverage 50 bp RNA-Seq read data from human prostate cancer cell line C4-2. The reads were assembled using short-read transcriptome assembler Trans-Abyss (<xref ref-type="bibr" rid="B6">Birol <italic>et al</italic>., 2009</xref>) version 1.2.0, using k-mer sizes of 26 and 49—the minimum overlap length between two reads to be combined in a contig. For two contigs to be merged we required 10 pair-end mappings between the contigs.</p>
    <p>Among a total of 576 381 contigs assembled, Dissect did not return a high-quality alignment for 167 187 of them. Among the remaining contigs, 391 293 of them were aligned with no structural alterations. In 4 309 contigs, Dissect detected an ambiguous short insertion/duplication region. In 13 583 contigs, Dissect discovered a structural alteration: 1 044 fusions, 1 331 duplications, 555 rearrangements and 10 653 inversion events. In total, 10 992 of 12 539 non-fusion event contigs displayed ≥90% overlap with a single-gene annotated in HG18 Known Genes dataset. Among 10 653 inversions, 69 are multiple breakpoint inversions and another 79 contain combined duplication/rearrangement events. Within the remaining 10 505 single-breakpoint suffix-inversion events, 2600 contain overlapping regions within the two strands and 7905 have non-overlapping suffix/prefix formation.</p>
    <p>We compared Dissect alignment results on contigs from C4-2 with long range PCR validated fusions reported by the fusion discovery tool Comrad (<xref ref-type="bibr" rid="B32">McPherson <italic>et al</italic>., 2011a</xref>) on the same dataset. Among eight validated gene fusion pairs, RERE-PIK3CD, HPR-MRPS10, CCDC43-YBX2, TFDP1-GRK1, BMPR2-FAM117B, GPS2-MPP2, MIPOL1-DGKB and ITPKC-PPFIA3, Dissect correctly identified six of them: RERE-PIK3CD, HPR-MRPS10, CCDC43-YBX2, BMPR2-FAM117B, MIPOL1-DGKB and ITPKC-PPFIA3. Note that because the two genes involved in the fusion BMPR2-FAM117B are in close genomic proximity, Dissect returned a rearrangement, rather than a fusion as per it is set to do. Among the two fusions Dissect could not identify, there was no contig returned by the assembler that spanned the TFDP1-GRK1 fusion breakpoint and the assembled contig spanning the GPS2-MPP2 fusion breakpoint was highly imbalanced ( 10%:90%). Note that for three out of these four genes, GPS2, MPP2 and TFDP1, Dissect also reported wild-type alignments, without any evidence for a fusion event.</p>
    <p>To better understand and differentiate the limitations of Dissect from that of the assembly process, we extracted breakpoint sequences of length 200 bp for each of the eight gene fusion events given above. Dissect produced alignments that correctly capture the fusion breakpoint for each of the eight fusions. Six of these breakpoint sequences were reported as straightforward fusions. Among the remaining two breakpoints transitions, BMPR2-FAM117B was identified as a rearrangement event and TFDP1-GRK was identified as a wild-type alignment due to close proximity of the fused genes: a comparison with gene annotation uncovered the inter-genic structure of the breakpoints discovered.</p>
  </sec>
  <sec id="SEC4">
    <title>4 CONCLUSION</title>
    <p>We introduce novel algorithmic formulations for the problem of aligning transcripts to a genome under structural alterations such as duplications, inversions, rearrangements and fusions.</p>
    <p>Our first formulation involves nucleotide-level alignment that can detect structural alterations by a single-unified dynamic programming approach. The fastest algorithms we developed for this formulation require <italic>O</italic>(<italic>NM</italic> log(<italic>M</italic>)) time for convex genomic gap penalties and <italic>O</italic>(<italic>MN</italic>) time for simple convex (including logarithmic) gap penalties (<italic>M</italic> and <italic>N</italic> correspond to the lengths of transcript and genome sequences, respectively).</p>
    <p>Our second formulation allows a faster but lower-sensitivity solution for a whole genome alignment setting. Given a set of shared fragments between the transcript and the genome, we show how to obtain an optimal chain of fragments in <italic>O</italic>(<italic>K</italic><sup>2</sup>) time for disjoint or overlapping fragments (<italic>K</italic> being the total number of fragments).</p>
    <p>We also present a novel computational tool, Dissect, which implements the fragment chaining formulation described above. Dissect achieves high sensitivity and specificity in identifying structural alterations in simulated datasets, as well as in uncovering gene fusions in a prostate cancer cell line.</p>
  </sec>
</body>
<back>
  <ack>
    <title>ACKNOWLEDGEMENTS</title>
    <p>We would like to thank Fereydoun Hormozdiari, Andrew McPherson and Trans-Abyss development team at Michael Smith Genome Sciences Centre for helpful discussions and Iman Hajirasouliha for proofreading this article.</p>
    <p><italic>Funding</italic>: <funding-source>PIMS Mathematical Biology Fellowship</funding-source> to D.Y.; NSERC and SFU-CTEF supported BCID project to S.C.S (in part). <funding-source>Canadian Cancer Foundation</funding-source> to S.C.S. and C.C.C (in part).</p>
    <p><italic>Conflict of Interest</italic>: none declared.</p>
  </ack>
  <ref-list>
    <title>REFERENCES</title>
    <ref id="B1">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Akiva</surname>
            <given-names>P.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Transcription-mediated gene fusion in the human genome</article-title>
        <source>Genome Res</source>
        <year>2006</year>
        <volume>16</volume>
        <fpage>30</fpage>
        <lpage>36</lpage>
        <pub-id pub-id-type="pmid">16344562</pub-id>
      </element-citation>
    </ref>
    <ref id="B2">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Altschul</surname>
            <given-names>S.F.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Gapped blast and psi-blast: a new generation of protein database search programs</article-title>
        <source>Nucleic Acids Res.</source>
        <year>1997</year>
        <volume>25</volume>
        <fpage>3389</fpage>
        <lpage>3402</lpage>
        <pub-id pub-id-type="pmid">9254694</pub-id>
      </element-citation>
    </ref>
    <ref id="B3">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Anderson</surname>
            <given-names>A.M.</given-names>
          </name>
          <name>
            <surname>Staley</surname>
            <given-names>J.P.</given-names>
          </name>
        </person-group>
        <article-title>Long-distance splicing</article-title>
        <source>Proc. Natl. Acad. Sci. USA</source>
        <year>2008</year>
        <volume>105</volume>
        <fpage>6793</fpage>
        <lpage>6794</lpage>
        <pub-id pub-id-type="pmid">18474864</pub-id>
      </element-citation>
    </ref>
    <ref id="B4">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Asmann</surname>
            <given-names>Y.W.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A novel bioinformatics pipeline for identification and characterization of fusion transcripts in breast cancer and normal cell lines</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2011</year>
        <volume>39</volume>
        <fpage>e100</fpage>
        <pub-id pub-id-type="pmid">21622959</pub-id>
      </element-citation>
    </ref>
    <ref id="B5">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bäsecke</surname>
            <given-names>J.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Leukemia- and lymphoma-associated genetic aberrations in healthy individuals</article-title>
        <source>Ann. Hematol.</source>
        <year>2002</year>
        <volume>81</volume>
        <fpage>64</fpage>
        <lpage>75</lpage>
        <pub-id pub-id-type="pmid">11907785</pub-id>
      </element-citation>
    </ref>
    <ref id="B6">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Birol</surname>
            <given-names>I.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>De novo transcriptome assembly with abyss</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <fpage>2872</fpage>
        <lpage>2877</lpage>
        <pub-id pub-id-type="pmid">19528083</pub-id>
      </element-citation>
    </ref>
    <ref id="B7">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Brassesco</surname>
            <given-names>M.S.</given-names>
          </name>
        </person-group>
        <article-title>Leukemia/lymphoma-associated gene fusions in normal individuals</article-title>
        <source>Genet. Mol. Res.</source>
        <year>2008</year>
        <volume>7</volume>
        <fpage>782</fpage>
        <lpage>790</lpage>
        <pub-id pub-id-type="pmid">18767247</pub-id>
      </element-citation>
    </ref>
    <ref id="B8">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Brudno</surname>
            <given-names>M.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Glocal alignment: finding rearrangements during alignment</article-title>
        <source>Bioinformatics</source>
        <year>2003</year>
        <volume>19</volume>
        <issue>Suppl. 1</issue>
        <fpage>i54</fpage>
        <lpage>i62</lpage>
        <pub-id pub-id-type="pmid">12855437</pub-id>
      </element-citation>
    </ref>
    <ref id="B9">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Burge</surname>
            <given-names>C.</given-names>
          </name>
          <name>
            <surname>Karlin</surname>
            <given-names>S.</given-names>
          </name>
        </person-group>
        <article-title>Prediction of complete gene structures in human genomic DNA</article-title>
        <source>J. Mol. Biol.</source>
        <year>1997</year>
        <volume>268</volume>
        <fpage>78</fpage>
        <lpage>94</lpage>
        <pub-id pub-id-type="pmid">9149143</pub-id>
      </element-citation>
    </ref>
    <ref id="B10">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Caudevilla</surname>
            <given-names>C.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Natural trans-splicing in carnitine octanoyltransferase pre-mRNAs in rat liver</article-title>
        <source>Proc. Natl. Acad. Sci. USA</source>
        <year>1998</year>
        <volume>95</volume>
        <fpage>12185</fpage>
        <lpage>12190</lpage>
        <pub-id pub-id-type="pmid">9770461</pub-id>
      </element-citation>
    </ref>
    <ref id="B11">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Cormode</surname>
            <given-names>G.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Communication complexity of document exchange</article-title>
        <source>Proceedings of the Eleventh Annual ACM-SIAM Symposium on Discrete Algorithms (SODA)</source>
        <year>2000</year>
        <publisher-loc>USA</publisher-loc>
        <fpage>197</fpage>
        <lpage>206</lpage>
      </element-citation>
    </ref>
    <ref id="B12">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>De Braekeleer</surname>
            <given-names>E.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Abl1 fusion genes in hematological malignancies: a review</article-title>
        <source>Eur. J. Haematol.</source>
        <year>2011</year>
        <volume>86</volume>
        <fpage>361</fpage>
        <lpage>371</lpage>
        <pub-id pub-id-type="pmid">21435002</pub-id>
      </element-citation>
    </ref>
    <ref id="B13">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dorrance</surname>
            <given-names>A.M.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The Mll partial tandem duplication: differential, tissue-specific activity in the presence or absence of the wild-type allele</article-title>
        <source>Blood</source>
        <year>2008</year>
        <volume>112</volume>
        <fpage>2508</fpage>
        <lpage>2511</lpage>
        <pub-id pub-id-type="pmid">18617636</pub-id>
      </element-citation>
    </ref>
    <ref id="B14">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Ergün</surname>
            <given-names>F.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Comparing sequences with segment rearrangements</article-title>
        <source>Proceedings of Foundations of Software Technology and Theoretical Computer Science (FSTTCS)</source>
        <year>2003</year>
        <publisher-name>India</publisher-name>
        <fpage>183</fpage>
        <lpage>194</lpage>
      </element-citation>
    </ref>
    <ref id="B15">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Frantz</surname>
            <given-names>S.A.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Exon repetition in mRNA</article-title>
        <source>Proc. Natl. Acad. Sci. USA</source>
        <year>1999</year>
        <volume>96</volume>
        <fpage>5400</fpage>
        <lpage>5405</lpage>
        <pub-id pub-id-type="pmid">10318895</pub-id>
      </element-citation>
    </ref>
    <ref id="B16">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Galil</surname>
            <given-names>Z.</given-names>
          </name>
          <name>
            <surname>Giancarlo</surname>
            <given-names>R.</given-names>
          </name>
        </person-group>
        <article-title>Speeding up dynamic programming with applications to molecular biology</article-title>
        <source>Theor. Comput. Sci.</source>
        <year>1989</year>
        <volume>64</volume>
        <fpage>107</fpage>
        <lpage>118</lpage>
      </element-citation>
    </ref>
    <ref id="B17">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ge</surname>
            <given-names>H.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Fusionmap: detecting fusion genes from next-generation sequencing data at base-pair resolution</article-title>
        <source>Bioinformatics</source>
        <year>2011</year>
        <volume>27</volume>
        <fpage>1922</fpage>
        <lpage>1928</lpage>
        <pub-id pub-id-type="pmid">21593131</pub-id>
      </element-citation>
    </ref>
    <ref id="B18">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gingeras</surname>
            <given-names>T.R.</given-names>
          </name>
        </person-group>
        <article-title>Implications of chimaeric non-co-linear transcripts</article-title>
        <source>Nature</source>
        <year>2009</year>
        <volume>461</volume>
        <fpage>206</fpage>
        <lpage>211</lpage>
        <pub-id pub-id-type="pmid">19741701</pub-id>
      </element-citation>
    </ref>
    <ref id="B19">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hach</surname>
            <given-names>F.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>mrsFAST: a cache-oblivious algorithm for short-read mapping</article-title>
        <source>Nat. Methods</source>
        <year>2010</year>
        <volume>7</volume>
        <fpage>576</fpage>
        <lpage>577</lpage>
        <pub-id pub-id-type="pmid">20676076</pub-id>
      </element-citation>
    </ref>
    <ref id="B20">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Herai</surname>
            <given-names>R.H.</given-names>
          </name>
          <name>
            <surname>Yamagishi</surname>
            <given-names>M.E.B.</given-names>
          </name>
        </person-group>
        <article-title>Detection of human interchromosomal trans-splicing in sequence databanks</article-title>
        <source>Brief Bioinform.</source>
        <year>2010</year>
        <volume>11</volume>
        <fpage>198</fpage>
        <lpage>209</lpage>
        <pub-id pub-id-type="pmid">19955235</pub-id>
      </element-citation>
    </ref>
    <ref id="B21">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hirano</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Noda</surname>
            <given-names>T.</given-names>
          </name>
        </person-group>
        <article-title>Genomic organization of the mouse MSH4 gene producing bicistronic, chimeric and antisense mRNA</article-title>
        <source>Gene</source>
        <year>2004</year>
        <volume>342</volume>
        <fpage>165</fpage>
        <lpage>177</lpage>
        <pub-id pub-id-type="pmid">15527976</pub-id>
      </element-citation>
    </ref>
    <ref id="B22">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Horiuchi</surname>
            <given-names>T.</given-names>
          </name>
          <name>
            <surname>Aigaki</surname>
            <given-names>T.</given-names>
          </name>
        </person-group>
        <article-title>Alternative trans-splicing: a novel mode of pre-mRNA processing</article-title>
        <source>Biol. Cell</source>
        <year>2006</year>
        <volume>98</volume>
        <fpage>135</fpage>
        <lpage>140</lpage>
        <pub-id pub-id-type="pmid">16417469</pub-id>
      </element-citation>
    </ref>
    <ref id="B23">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Horiuchi</surname>
            <given-names>T.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Alternative trans-splicing of constant and variable exons of a drosophila axon guidance gene, lola</article-title>
        <source>Genes. Dev.</source>
        <year>2003</year>
        <volume>17</volume>
        <fpage>2496</fpage>
        <lpage>2501</lpage>
        <pub-id pub-id-type="pmid">14522953</pub-id>
      </element-citation>
    </ref>
    <ref id="B24">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hsu</surname>
            <given-names>F.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The UCSC known genes</article-title>
        <source>Bioinformatics</source>
        <year>2006</year>
        <volume>22</volume>
        <fpage>1036</fpage>
        <lpage>1046</lpage>
        <pub-id pub-id-type="pmid">16500937</pub-id>
      </element-citation>
    </ref>
    <ref id="B25">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Inaki</surname>
            <given-names>K.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Transcriptional consequences of genomic structural aberrations in breast cancer</article-title>
        <source>Genome Res.</source>
        <year>2011</year>
        <volume>21</volume>
        <fpage>676</fpage>
        <lpage>687</lpage>
        <pub-id pub-id-type="pmid">21467264</pub-id>
      </element-citation>
    </ref>
    <ref id="B26">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kannan</surname>
            <given-names>K.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Recurrent chimeric RNAs enriched in human prostate cancer identified by deep sequencing</article-title>
        <source>Proc. Natl. Acad. Sci. USA</source>
        <year>2011</year>
        <volume>108</volume>
        <fpage>9172</fpage>
        <lpage>9177</lpage>
        <pub-id pub-id-type="pmid">21571633</pub-id>
      </element-citation>
    </ref>
    <ref id="B27">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kent</surname>
            <given-names>W.J.</given-names>
          </name>
        </person-group>
        <article-title>Blat–the blast-like alignment tool</article-title>
        <source>Genome Res.</source>
        <year>2002</year>
        <volume>12</volume>
        <fpage>656</fpage>
        <lpage>664</lpage>
        <pub-id pub-id-type="pmid">11932250</pub-id>
      </element-citation>
    </ref>
    <ref id="B28">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kidd</surname>
            <given-names>J.M.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Characterization of missing human genome sequences and copy-number polymorphic insertions</article-title>
        <source>Nat. Methods</source>
        <year>2010</year>
        <volume>7</volume>
        <fpage>365</fpage>
        <lpage>371</lpage>
        <pub-id pub-id-type="pmid">20440878</pub-id>
      </element-citation>
    </ref>
    <ref id="B29">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Labrador</surname>
            <given-names>M.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Protein encoding by both DNA strands</article-title>
        <source>Nature</source>
        <year>2001</year>
        <volume>409</volume>
        <fpage>1000</fpage>
        <pub-id pub-id-type="pmid">11234000</pub-id>
      </element-citation>
    </ref>
    <ref id="B30">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Levin</surname>
            <given-names>J.Z.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Targeted next-generation sequencing of a cancer transcriptome enhances detection of sequence variants and novel fusion transcripts</article-title>
        <source>Genome Biol.</source>
        <year>2009</year>
        <volume>10</volume>
        <fpage>R115</fpage>
        <pub-id pub-id-type="pmid">19835606</pub-id>
      </element-citation>
    </ref>
    <ref id="B31">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>Y.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Fusionhunter: identifying fusion transcripts in cancer using paired-end RNA-seq</article-title>
        <source>Bioinformatics</source>
        <year>2011</year>
        <volume>27</volume>
        <fpage>1708</fpage>
        <lpage>1710</lpage>
        <pub-id pub-id-type="pmid">21546395</pub-id>
      </element-citation>
    </ref>
    <ref id="B32">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>McPherson</surname>
            <given-names>A.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Comrad: detection of expressed rearrangements by integrated analysis of RNA-seq and low coverage genome sequence data</article-title>
        <source>Bioinformatics</source>
        <year>2011a</year>
        <volume>27</volume>
        <fpage>1481</fpage>
        <lpage>1488</lpage>
        <pub-id pub-id-type="pmid">21478487</pub-id>
      </element-citation>
    </ref>
    <ref id="B33">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>McPherson</surname>
            <given-names>A.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Defuse: an algorithm for gene fusion discovery in tumor RNA-seq data</article-title>
        <source>PLoS Comput. Biol.</source>
        <year>2011b</year>
        <volume>7</volume>
        <fpage>e1001138</fpage>
        <pub-id pub-id-type="pmid">21625565</pub-id>
      </element-citation>
    </ref>
    <ref id="B34">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>McPherson</surname>
            <given-names>A.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Discovery of complex genomic rearrangements in cancer using high-throughput sequencing</article-title>
        <source>Proceedings of Research in Computational Molecular Biology (RECOMB)</source>
        <year>2012</year>
        <publisher-loc>Spain</publisher-loc>
        <fpage>181</fpage>
        <lpage>182</lpage>
      </element-citation>
    </ref>
    <ref id="B35">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Miller</surname>
            <given-names>W.</given-names>
          </name>
          <name>
            <surname>Myers</surname>
            <given-names>E.W.</given-names>
          </name>
        </person-group>
        <article-title>Sequence comparison with concave weighting functions</article-title>
        <source>Bull. Math. Biol.</source>
        <year>1988</year>
        <volume>50</volume>
        <fpage>97</fpage>
        <lpage>120</lpage>
        <pub-id pub-id-type="pmid">3207952</pub-id>
      </element-citation>
    </ref>
    <ref id="B36">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Minoche</surname>
            <given-names>A.E.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Evaluation of genomic high-throughput sequencing data generated on illumina HISeq and genome analyzer systems</article-title>
        <source>Genome Biol.</source>
        <year>2011</year>
        <volume>12</volume>
        <fpage>R112</fpage>
        <pub-id pub-id-type="pmid">22067484</pub-id>
      </element-citation>
    </ref>
    <ref id="B37">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mott</surname>
            <given-names>R.</given-names>
          </name>
        </person-group>
        <article-title>Est_genome: a program to align spliced DNA sequences to unspliced genomic DNA</article-title>
        <source>Comput. Appl. Biosci.</source>
        <year>1997</year>
        <volume>13</volume>
        <fpage>477</fpage>
        <lpage>478</lpage>
        <pub-id pub-id-type="pmid">9283765</pub-id>
      </element-citation>
    </ref>
    <ref id="B38">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nacu</surname>
            <given-names>S.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Deep RNA sequencing analysis of readthrough gene fusions in human prostate adenocarcinoma and reference samples</article-title>
        <source>BMC Med. Genomics</source>
        <year>2011</year>
        <volume>4</volume>
        <fpage>11</fpage>
        <pub-id pub-id-type="pmid">21261984</pub-id>
      </element-citation>
    </ref>
    <ref id="B39">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rickman</surname>
            <given-names>D.S.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Slc45a3-elk4 is a novel and frequent erythroblast transformation-specific fusion transcript in prostate cancer</article-title>
        <source>Cancer Res.</source>
        <year>2009</year>
        <volume>69</volume>
        <fpage>2734</fpage>
        <lpage>2738</lpage>
        <pub-id pub-id-type="pmid">19293179</pub-id>
      </element-citation>
    </ref>
    <ref id="B40">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sboner</surname>
            <given-names>A.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Fusionseq: a modular framework for finding gene fusions by analyzing paired-end RNA-sequencing data</article-title>
        <source>Genome Biol.</source>
        <year>2010</year>
        <volume>11</volume>
        <fpage>R104</fpage>
        <pub-id pub-id-type="pmid">20964841</pub-id>
      </element-citation>
    </ref>
    <ref id="B41">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Slater</surname>
            <given-names>G.S.C.</given-names>
          </name>
          <name>
            <surname>Birney</surname>
            <given-names>E.</given-names>
          </name>
        </person-group>
        <article-title>Automated generation of heuristics for biological sequence comparison</article-title>
        <source>BMC Bioinformatics</source>
        <year>2005</year>
        <volume>6</volume>
        <fpage>31</fpage>
        <pub-id pub-id-type="pmid">15713233</pub-id>
      </element-citation>
    </ref>
    <ref id="B42">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Takahashi</surname>
            <given-names>S.</given-names>
          </name>
        </person-group>
        <article-title>Downstream molecular pathways of FLT3 in the pathogenesis of acute myeloid leukemia: biology and therapeutic implications</article-title>
        <source>J. Hematol. Oncol.</source>
        <year>2011</year>
        <volume>4</volume>
        <fpage>13</fpage>
        <pub-id pub-id-type="pmid">21453545</pub-id>
      </element-citation>
    </ref>
    <ref id="B43">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wu</surname>
            <given-names>T.D.</given-names>
          </name>
          <name>
            <surname>Watanabe</surname>
            <given-names>C.K.</given-names>
          </name>
        </person-group>
        <article-title>GMAP: a genomic mapping and alignment program for mRNA and EST sequences</article-title>
        <source>Bioinformatics</source>
        <year>2005</year>
        <volume>21</volume>
        <fpage>1859</fpage>
        <lpage>1875</lpage>
        <pub-id pub-id-type="pmid">15728110</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

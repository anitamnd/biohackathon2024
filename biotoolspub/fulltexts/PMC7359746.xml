<?properties open_access?>
<?subarticle report71434?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">F1000Res</journal-id>
    <journal-id journal-id-type="iso-abbrev">F1000Res</journal-id>
    <journal-id journal-id-type="pmc">F1000Research</journal-id>
    <journal-title-group>
      <journal-title>F1000Research</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2046-1402</issn>
    <publisher>
      <publisher-name>F1000 Research Limited</publisher-name>
      <publisher-loc>London, UK</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">7359746</article-id>
    <article-id pub-id-type="pmid">32704355</article-id>
    <article-id pub-id-type="doi">10.12688/f1000research.24187.2</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software Tool Article</subject>
      </subj-group>
      <subj-group>
        <subject>Articles</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>ExploreModelMatrix: Interactive exploration for improved understanding of design matrices and linear models in R</article-title>
      <fn-group content-type="pub-status">
        <fn>
          <p>[version 2; peer review: 3 approved]</p>
        </fn>
      </fn-group>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Soneson</surname>
          <given-names>Charlotte</given-names>
        </name>
        <role content-type="http://credit.casrai.org/">Conceptualization</role>
        <role content-type="http://credit.casrai.org/">Methodology</role>
        <role content-type="http://credit.casrai.org/">Software</role>
        <role content-type="http://credit.casrai.org/">Validation</role>
        <role content-type="http://credit.casrai.org/">Writing – Original Draft Preparation</role>
        <role content-type="http://credit.casrai.org/">Writing – Review &amp; Editing</role>
        <contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-3833-2169</contrib-id>
        <xref ref-type="corresp" rid="c1">a</xref>
        <xref ref-type="aff" rid="a1">1</xref>
        <xref ref-type="aff" rid="a2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Marini</surname>
          <given-names>Federico</given-names>
        </name>
        <role content-type="http://credit.casrai.org/">Methodology</role>
        <role content-type="http://credit.casrai.org/">Software</role>
        <role content-type="http://credit.casrai.org/">Validation</role>
        <role content-type="http://credit.casrai.org/">Writing – Review &amp; Editing</role>
        <contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-3252-7758</contrib-id>
        <xref ref-type="aff" rid="a3">3</xref>
        <xref ref-type="aff" rid="a4">4</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Geier</surname>
          <given-names>Florian</given-names>
        </name>
        <role content-type="http://credit.casrai.org/">Conceptualization</role>
        <role content-type="http://credit.casrai.org/">Methodology</role>
        <role content-type="http://credit.casrai.org/">Software</role>
        <role content-type="http://credit.casrai.org/">Validation</role>
        <role content-type="http://credit.casrai.org/">Writing – Review &amp; Editing</role>
        <xref ref-type="aff" rid="a2">2</xref>
        <xref ref-type="aff" rid="a5">5</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Love</surname>
          <given-names>Michael I.</given-names>
        </name>
        <role content-type="http://credit.casrai.org/">Methodology</role>
        <role content-type="http://credit.casrai.org/">Software</role>
        <role content-type="http://credit.casrai.org/">Validation</role>
        <role content-type="http://credit.casrai.org/">Writing – Review &amp; Editing</role>
        <contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-8401-0545</contrib-id>
        <xref ref-type="aff" rid="a6">6</xref>
        <xref ref-type="aff" rid="a7">7</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Stadler</surname>
          <given-names>Michael B.</given-names>
        </name>
        <role content-type="http://credit.casrai.org/">Methodology</role>
        <role content-type="http://credit.casrai.org/">Validation</role>
        <role content-type="http://credit.casrai.org/">Writing – Original Draft Preparation</role>
        <role content-type="http://credit.casrai.org/">Writing – Review &amp; Editing</role>
        <contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-2269-4934</contrib-id>
        <xref ref-type="aff" rid="a1">1</xref>
        <xref ref-type="aff" rid="a2">2</xref>
      </contrib>
      <aff id="a1"><label>1</label>Friedrich Miescher Institute for Biomedical Research, Basel, Switzerland</aff>
      <aff id="a2"><label>2</label>SIB Swiss Institute of Bioinformatics, Basel, Switzerland</aff>
      <aff id="a3"><label>3</label>Center for Thrombosis and Hemostasis, Mainz, Germany</aff>
      <aff id="a4"><label>4</label>Institute of Medical Biostatistics, Epidemiology and Informatics, Mainz, Germany</aff>
      <aff id="a5"><label>5</label>Department of Biomedicine, University of Basel, University Hospital Basel, Basel, Switzerland</aff>
      <aff id="a6"><label>6</label>Department of Biostatistics, University of North Carolina at Chapel Hill, Chapel Hill, North Carolina, USA</aff>
      <aff id="a7"><label>7</label>Department of Genetics, University of North Carolina at Chapel Hill, Chapel Hill, North Carolina, USA</aff>
    </contrib-group>
    <author-notes>
      <corresp id="c1">
        <label>a</label>
        <email xlink:href="mailto:charlottesoneson@gmail.com">charlottesoneson@gmail.com</email>
      </corresp>
      <fn fn-type="COI-statement">
        <p>No competing interests were disclosed.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="epub">
      <day>16</day>
      <month>9</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2020</year>
    </pub-date>
    <volume>9</volume>
    <elocation-id>512</elocation-id>
    <history>
      <date date-type="accepted">
        <day>8</day>
        <month>9</month>
        <year>2020</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright: © 2020 Soneson C et al.</copyright-statement>
      <copyright-year>2020</copyright-year>
      <license xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an open access article distributed under the terms of the Creative Commons Attribution Licence, which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri content-type="pdf" xlink:href="f1000research-9-29479.pdf"/>
    <abstract>
      <p>Linear and generalized linear models are used extensively in many scientiﬁc ﬁelds, to model observed data and as the basis for hypothesis tests. The use of such models requires speciﬁcation of a design matrix, and subsequent formulation of contrasts representing scientiﬁc hypotheses of interest. Proper execution of these steps requires a thorough understanding of the meaning of the individual coefﬁcients, and is a frequent source of uncertainty for end users. Here, we present an R/Bioconductor package,
<italic>ExploreModelMatrix</italic>, which enables interactive exploration of design matrices and linear model diagnostics. Given a sample data table and a desired design formula, the package displays how the model coefﬁcients are combined to give the ﬁtted values for each combination of predictor variables, which allows users to both extract the interpretation of each individual coefﬁcient, and formulate desired linear contrasts. In addition, the interactive interface displays informative characteristics for the regular linear model corresponding to the provided design, such as variance inﬂation factors and the pseudoinverse of the design matrix. We envision the package and the built-in collection of common types of linear model designs to be useful for teaching and self-learning purposes, as well as for assisting more experienced users in the interpretation of complex model designs.</p>
    </abstract>
    <kwd-group kwd-group-type="author">
      <kwd>Linear Model</kwd>
      <kwd>Experimental Design</kwd>
      <kwd>Design Matrix</kwd>
      <kwd>Shiny</kwd>
      <kwd>R</kwd>
      <kwd>Interactivity</kwd>
    </kwd-group>
    <funding-group>
      <award-group id="fund-1">
        <funding-source>German Federal Ministry of Education and Research</funding-source>
        <award-id>BMBF01EO1003</award-id>
      </award-group>
      <award-group id="fund-2" xlink:href="http://dx.doi.org/10.13039/100000002">
        <funding-source>National Institutes of Health</funding-source>
        <award-id>R01-HG009937</award-id>
      </award-group>
      <funding-statement>The work of FM is supported by the German Federal Ministry of Education and Research (BMBF 01EO1003). MIL is supported by National Institutes of Health R01-HG009937.</funding-statement>
      <funding-statement>
        <italic>The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</italic>
      </funding-statement>
    </funding-group>
  </article-meta>
  <notes notes-type="version-changes">
    <sec sec-type="version-changes">
      <label>Revised</label>
      <title>Amendments from Version 1</title>
      <p>The manuscript has been revised in response to the reviewers' comments, specifically by: * clarifying the target audience and the purpose of the package * adding an additional use case (and a corresponding new Figure 2) * updating Figure 1 to represent the current version of the software</p>
    </sec>
  </notes>
</front>
<body>
  <sec sec-type="intro">
    <title>Introduction</title>
    <p>Linear and generalized linear models are ubiquitous tools in a wide variety of scientific disciplines, and encompass well-known special cases such as linear and logistic regression, ANOVA and Student’s t-test. Of particular interest to us, they are also the basis for many of the most widely used tools for analysis of high-throughput biological data. This includes
<italic>limma</italic>
<sup><xref rid="ref-1" ref-type="bibr">1</xref>,
<xref rid="ref-2" ref-type="bibr">2</xref></sup> for linear modeling of gene expression microarray and similar data, as well as
<italic>edgeR</italic>
<sup><xref rid="ref-3" ref-type="bibr">3</xref>,
<xref rid="ref-4" ref-type="bibr">4</xref></sup> and
<italic>DESeq2</italic>
<sup><xref rid="ref-5" ref-type="bibr">5</xref></sup> for differential expression analysis of RNA-seq and other count data,
<italic>missMethyl</italic>
<sup><xref rid="ref-6" ref-type="bibr">6</xref></sup>,
<italic>DMRcate</italic>
<sup><xref rid="ref-7" ref-type="bibr">7</xref></sup> and
<italic>minfi</italic>
<sup><xref rid="ref-8" ref-type="bibr">8</xref></sup> for differential methylation analysis,
<italic>DiffBind</italic>
<sup><xref rid="ref-9" ref-type="bibr">9</xref></sup> for differential binding analysis,
<italic>msmsTests</italic>
<sup><xref rid="ref-10" ref-type="bibr">10</xref></sup> for mass spectrometry, and many others. Since the linear model is a special case of the generalized linear model, and particularly as the aspects of defining the design matrix are shared between the two, we will generally refer to generalized linear models in the rest of this manuscript.</p>
    <p>Fitting a generalized linear model requires observations of a response variable
<italic>y</italic> (e.g., inferred abundance levels of a gene) as well as a set of continuous or categorical predictor variables or sample annotations (e.g. the sample genotype, age, or treatment condition). In addition, in the R statistical programming environment, the user provides a
<italic>design formula</italic>, specifying which, and how, provided predictor variables should be used to model the expected value of the response. The design formula in R is a version of a syntax for model specification originally proposed in 1973 by Wilkinson and Rogers
<sup><xref rid="ref-11" ref-type="bibr">11</xref></sup>. This design formula and a specification of a type of contrast coding define a numeric
<italic>N × J</italic> design matrix
<italic>X</italic>, where
<italic>N</italic> is the number of observations and
<italic>J</italic> the number of model coefficients. The expected response values are then modeled by
<disp-formula id="FD1"><mml:math id="M1"><mml:mrow><mml:mi>E</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:msup><mml:mi>g</mml:mi><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mi>β</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>
</p>
    <p>where
<italic>β</italic> = (
<italic>β</italic>
<sub>1</sub>, . . . ,
<italic>β
<sub>J</sub></italic>) are the regression coefficients for the respective columns of the design matrix, and
<italic>g</italic> is a link function
<sup><xref rid="ref-12" ref-type="bibr">12</xref>,
<xref rid="ref-13" ref-type="bibr">13</xref></sup>.
<italic>X β</italic> is typically referred to as the
<italic>linear predictor</italic>. After fitting the model, statistical tests can be performed to test the null hypothesis that a given combination of coefficients (referred to as a linear
<italic>contrast</italic>) is zero. In this manuscript, we will focus on reference cell coding, or “treatment” coding for contrasts, though in general other schemes may also be considered. For more details on how R’s design formula functionality is implemented, we refer to the reference for statistical modeling in S
<sup><xref rid="ref-14" ref-type="bibr">14</xref></sup>.</p>
    <p>The way that the model is specified, that is, the definition of the design matrix, naturally determines how the model coefficients should be interpreted. As an example, consider a situation with a linear model and a single categorical predictor with two levels. Defining a model including an intercept (a column of the design matrix with the value 1 for all observations) implies that the second regression coefficient represents the difference between the average response values for the two levels of the predictor, while without the intercept, the two regression coefficients directly represent the average response values for the two factor levels. Given the versatility of generalized linear models, determining the proper contrast to use for testing a specific biological hypothesis of interest requires an understanding of the interpretation of the individual regression coefficients, and can be challenging for users of generalized linear model-based tools.</p>
    <p>Here, we present
<italic>ExploreModelMatrix</italic>
<sup><xref rid="ref-15" ref-type="bibr">15</xref></sup>, an R package for interactive exploration of generalized linear model designs, coefficients, and contrasts. Given a table of predictor variables, the user can specify the desired design formula and explore the value of the linear predictor for each combination of predictor values, expressed in terms of the model coefficients. From this type of visualization, it is often straightforward to determine the contrast corresponding to a given comparison of interest. We envision that
<italic>ExploreModelMatrix</italic> can be useful for both research and teaching purposes. Specifically for the latter, the application contains several built-in example data sets, corresponding to some of the most commonly used experimental design setups. The underlying function in
<italic>ExploreModelMatrix</italic> that processes the input data and generates visualizations can also be directly called by the user, enabling the generation of static plots for inclusion in reports and educational material. It is worth noting that
<italic>ExploreModelMatrix</italic> is not intended as a self-contained resource on generalized linear models, but rather as a complement to existing books and courses on the topic, and the application contains a list of suggested material for further study.</p>
  </sec>
  <sec sec-type="methods">
    <title>Methods</title>
    <sec>
      <title>Operation</title>
      <p><italic>ExploreModelMatrix</italic><sup><xref rid="ref-15" ref-type="bibr">15</xref></sup> is implemented as an R package
<sup><xref rid="ref-16" ref-type="bibr">16</xref></sup>, using the
<ext-link ext-link-type="uri" xlink:href="https://shiny.rstudio.com/">Shiny</ext-link> framework
<sup><xref rid="ref-17" ref-type="bibr">17</xref></sup>. The package is available via
<ext-link ext-link-type="uri" xlink:href="http://bioconductor.org/packages/release/bioc/html/ExploreModelMatrix.html">Bioconductor</ext-link>
<sup><xref rid="ref-18" ref-type="bibr">18</xref></sup> (from release 3.11 onwards), with the current development version accessible via
<ext-link ext-link-type="uri" xlink:href="https://github.com/csoneson/ExploreModelMatrix">GitHub</ext-link>. The package has been tested with R version 3.6 and later.</p>
      <p>An instance of the interactive application is launched by calling the
<monospace>ExploreModelMatrix()</monospace> function. This function accepts two optional arguments; a
<monospace>data.frame</monospace> with one row per observation and each column corresponding to a measured predictor variable (below referred to as the
<italic>sample data table</italic>), and a design formula. If the
<monospace>ExploreModelMatrix()</monospace> function is called without any arguments, the user can either explore one of the built-in designs, or load a sample data table from a tab-separated text file. The design formula can always be specified or modified interactively in the application. If the user wishes to generate the visualizations independently of the interactive interface, this can be achieved via the
<monospace>VisualizeDesign()</monospace> function, which is also called internally by
<monospace>ExploreModelMatrix()</monospace>.</p>
    </sec>
    <sec>
      <title>Implementation</title>
      <p>The user interface of
<italic>ExploreModelMatrix</italic> consists of a side bar with control widgets and a main window containing a set of fixed, but collapsible, panels, each illustrating a different aspect of the design matrix or the associated standard linear model (
<xref ref-type="fig" rid="f1">Figure 1</xref>). A more detailed explanation of each panel is accessible via the guided tour of the interface, implemented via the
<italic>rintrojs</italic> package
<sup><xref rid="ref-19" ref-type="bibr">19</xref></sup> and accessible by clicking on the question mark icon in the top right corner (represented by the letter
<monospace>O</monospace> in
<xref ref-type="fig" rid="f1">Figure 1</xref>). In addition, clicking on the question mark icon within a specific panel opens up the guided tour at the corresponding step.</p>
      <fig fig-type="figure" id="f1" orientation="portrait" position="anchor">
        <label>Figure 1. </label>
        <caption>
          <title>Screenshot of the
<italic>ExploreModelMatrix</italic> interface.</title>
          <p> This example shows a model with two predictors (genotype and treatment), each with two levels, and with the assumption that their effects are additive. Red circles with letters were added to be able to refer to specific parts of the interface in the text.</p>
        </caption>
        <graphic xlink:href="f1000research-9-29479-g0000"/>
      </fig>
      <p>Given a sample data table and a design formula, either provided by the user or obtained via one of the built-in designs,
<italic>ExploreModelMatrix</italic> will first check that the two objects are compatible, i.e., that the terms in the design formula use only variables that are present in the sample data table, and that the design formula is supported by the package. If no problems are detected,
<italic>ExploreModelMatrix</italic> will create a design matrix using the
<monospace>model.matrix()</monospace> R function. The full sample data table, a summary of its columns, and the resulting design matrix are all displayed in the application interface for convenience (see
<monospace>G-I</monospace> in
<xref ref-type="fig" rid="f1">Figure 1</xref>). In addition, the rank of the design matrix is calculated (
<monospace>J</monospace>). If the design matrix is not full rank,
<italic>ExploreModelMatrix</italic> will display a warning, together with an indication of the coefficients that are not estimable (using the
<monospace>nonEstimable()</monospace> function from the
<italic>limma</italic> R package
<sup><xref rid="ref-1" ref-type="bibr">1</xref>,
<xref rid="ref-2" ref-type="bibr">2</xref></sup>). In addition,
<italic>ExploreModelMatrix</italic> will inform the user if the number of rows (observations) in the design matrix is the same as its rank, in which case there are no residual degrees of freedom, and the variance or dispersion cannot be estimated.</p>
      <p>Expressed in terms of the model coefficients, the panel in the first row of the application (
<monospace>F</monospace>) illustrates, in graphical and tabular form, the value of the linear predictor in a generalized linear model, for each combination of levels for the predictors used in the design formula. This provides an intuitive understanding of the interpretation of each of the model coefficients, and can be helpful for specifying appropriate contrasts.</p>
      <p>The panels in the lower part of the interface (
<monospace>K</monospace>,
<monospace>L</monospace>,
<monospace>N</monospace>) should largely be interpreted in the context of standard linear models, where coefficient estimates are obtained using least squares fitting. The pseudoinverse
<italic>P=</italic>(
<italic>X
<sup>T</sup> X</italic>)
<sup>−1</sup>
<italic>X
<sup>T</sup></italic>
<sup><xref rid="ref-20" ref-type="bibr">20</xref>–
<xref rid="ref-22" ref-type="bibr">22</xref></sup> represents the way each observed response value would contribute to the coefficient estimates. More precisely, in such a linear model represented by
<disp-formula id="FD2"><mml:math id="M2"><mml:mrow><mml:mi>y</mml:mi><mml:mo>=</mml:mo><mml:mi>X</mml:mi><mml:mi>β</mml:mi><mml:mo>+</mml:mo><mml:mi>ε</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>
</p>
      <p>the estimated regression coefficients are given by
<disp-formula id="FD3"><mml:math id="M3"><mml:mrow><mml:mover accent="true"><mml:mi>β</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msup><mml:mi>X</mml:mi><mml:mi>T</mml:mi></mml:msup><mml:mi>X</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mi>X</mml:mi><mml:mi>T</mml:mi></mml:msup><mml:mi>y</mml:mi><mml:mo>=</mml:mo><mml:mn mathvariant="italic">Py.</mml:mn></mml:mrow></mml:math></disp-formula>
</p>
      <p><italic>ExploreModelMatrix</italic> also estimates variance inflation factors and correlations among the coefficient estimates. Finally, the co-occurrence plot in the bottom left panel (
<monospace>M</monospace>) shows the number of observations in the data set for each combination of levels of the predictor variables.</p>
      <p>The controls in the left-hand sidebar can be used to interactively modify the studied design as well as the display parameters of the panels. The text box in the top (
<monospace>A</monospace>) allows the user to type in a design formula (starting with the
<italic>~</italic>, or “tilde” character), and the displayed figures will be updated accordingly. The dropdown menu immediately below (
<monospace>B</monospace>) contains the built-in example designs. To use the sample data table provided either as an argument to
<monospace>ExploreModelMatrix()</monospace> or uploaded into the app at run time, select
<monospace>---</monospace> here. The next section of controls (
<monospace>C</monospace>) lets the user control which level should be considered the “baseline” or reference level for each categorical or factor variable in the model.
<italic>ExploreModelMatrix</italic> will convert each character variable to a factor when a sample data table is loaded; by default the baseline level will be the first in alphabetical order.</p>
      <p>In cases where the design matrix is not of full rank, it may be desirable to exclude a subset of the columns in the design matrix (for example, columns with all zero values or columns that are linear combinations of other columns). This can be done in the "Drop columns" section (
<monospace>D</monospace>). As mentioned above, in the case of a non-full rank design matrix,
<italic>ExploreModelMatrix</italic> will indicate which coefficients are not estimable and thus candidates for being dropped. The final group of controls (
<monospace>E</monospace>) provide the ability to change the way the panels are displayed, e.g. by setting the height of the plot panels and changing the size and display mode of the text.</p>
    </sec>
  </sec>
  <sec>
    <title>Use case</title>
    <p><xref ref-type="fig" rid="f1">Figure 1</xref> illustrates the
<italic>ExploreModelMatrix</italic> output for a factorial design with two predictors (genotype and treatment). We consider the effects of the two predictors to be additive, which is indicated by the design formula (~ genotype + treatment). From the graphical representation of the fitted values (also shown in
<xref ref-type="fig" rid="f2">Figure 2A</xref>), we can, for example, conclude that the intercept in the model directly represents the fitted value for the ‘genotype A, control’ group of samples. Similarly, the fitted value for the ‘genotype A, treated’ group is given by the sum of the intercept and the
<monospace>treatmenttrt</monospace> coefficient. If we are interested in performing a hypothesis test to compare the treated and control groups for the samples with genotype A, we need to formulate a suitable linear contrast. Using the
<italic>ExploreModelMatrix</italic> representation, the estimated effect size can be obtained by subtracting the fitted value for the ‘genotype A, control’ group from that of the ‘genotype A, treated’ group. The result is simply
<monospace>treatmenttrt</monospace>, which indicates that a significance test for the difference between the two treatment groups in genotype A samples can be obtained by testing whether the coefficient
<monospace>treatmenttrt</monospace> is zero. Interestingly, performing the same exercise in the genotype B samples yields the same result, indicating that the
<monospace>treatmenttrt</monospace> coefficient represents the treatment effect in each of the two genotypes. This is a result of using an additive model. Changing the provided design formula to include an interaction between the two predictors (~ genotype + treatment + genotype:treatment;
<xref ref-type="fig" rid="f2">Figure 2B</xref>) changes the interpretation. Now, while the treatment effect in the genotype A samples is still represented by the
<monospace>treatmenttrt</monospace> coefficient, the treatment effect in the genotype B samples is represented by the sum of the
<monospace>treatmenttrt</monospace> and
<monospace>genotypeB:treatmenttrt</monospace> coefficients. The interaction effect, that is, the difference between the treatment effects in the two genotype groups, is represented by the
<monospace>genotypeB:treatmenttrt</monospace> coefficient. This example illustrates how the
<italic>ExploreModelMatrix</italic> interface can be used to interpret coefficients in generalized linear models and create contrasts of interest.</p>
    <fig fig-type="figure" id="f2" orientation="portrait" position="anchor">
      <label>Figure 2. </label>
      <caption>
        <title>Values of the linear predictor, in terms of the model parameters, for the two-factor example design, with and without an interaction term.</title>
      </caption>
      <graphic xlink:href="f1000research-9-29479-g0001"/>
    </fig>
    <p>To further illustrate how
<italic>ExploreModelMatrix</italic>
<sup><xref rid="ref-15" ref-type="bibr">15</xref></sup> can be used to interpret the coefficients in a complex experimental design, we consider the example of differential allele-specific expression analysis with RNA-seq data. Generalized linear models for count data often use the log link function, and we assume this to be the case in some of the interpretations below. This type of experiment contains different groups of subjects (e.g., from different experimental conditions), where each subject contributes two columns in the read count matrix: one representing the read counts for the reference allele, and one representing those for the alternative allele, for each considered gene. Typical scientific questions of interest are whether there are differences between the expression of the two alleles within each condition, and whether there are differences in the allele-specific expression patterns between the conditions. Similar setups can be observed, for example, in differential methylation experiments (where the two columns for each sample would correspond to methylated and unmethylated read counts for a feature), or in situations where individuals from different groups are each given the same set of treatments.</p>
    <p>The sample data table considered here is provided in
<xref rid="T1" ref-type="table">Table 1</xref>. In addition to the columns containing the subject identifier, the condition and the count type (reference or alternative allele), we include a column corresponding to a within-condition relabeling, or dummy encoding, of the subject identifier. Note that this dummy subject identifier has only three levels, compared to six for the original subject identifier. This design setup is available among the example designs provided within
<italic>ExploreModelMatrix</italic>, denoted “Two crossed, one nested factor (manuscript example)”. We will illustrate two equivalent ways of setting up the design formula, and show how
<italic>ExploreModelMatrix</italic> can help in the interpretation of the model coefficients.</p>
    <table-wrap id="T1" orientation="portrait" position="anchor">
      <label>Table 1. </label>
      <caption>
        <title>Sample data table for the allele-specific differential expression use case.</title>
      </caption>
      <table frame="hsides" rules="groups" content-type="article-table">
        <thead>
          <tr>
            <th align="center" rowspan="1" colspan="1">subject</th>
            <th align="center" rowspan="1" colspan="1">count</th>
            <th align="center" rowspan="1" colspan="1">condition</th>
            <th align="center" rowspan="1" colspan="1">subjectdummy</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td align="center" rowspan="1" colspan="1">S1</td>
            <td align="center" rowspan="1" colspan="1">ref</td>
            <td align="center" rowspan="1" colspan="1">control</td>
            <td align="center" rowspan="1" colspan="1">D1</td>
          </tr>
          <tr>
            <td align="center" rowspan="1" colspan="1">S1</td>
            <td align="center" rowspan="1" colspan="1">alt</td>
            <td align="center" rowspan="1" colspan="1">control</td>
            <td align="center" rowspan="1" colspan="1">D1</td>
          </tr>
          <tr>
            <td align="center" rowspan="1" colspan="1">S2</td>
            <td align="center" rowspan="1" colspan="1">ref</td>
            <td align="center" rowspan="1" colspan="1">control</td>
            <td align="center" rowspan="1" colspan="1">D2</td>
          </tr>
          <tr>
            <td align="center" rowspan="1" colspan="1">S2</td>
            <td align="center" rowspan="1" colspan="1">alt</td>
            <td align="center" rowspan="1" colspan="1">control</td>
            <td align="center" rowspan="1" colspan="1">D2</td>
          </tr>
          <tr>
            <td align="center" rowspan="1" colspan="1">S3</td>
            <td align="center" rowspan="1" colspan="1">ref</td>
            <td align="center" rowspan="1" colspan="1">control</td>
            <td align="center" rowspan="1" colspan="1">D3</td>
          </tr>
          <tr>
            <td align="center" rowspan="1" colspan="1">S3</td>
            <td align="center" rowspan="1" colspan="1">alt</td>
            <td align="center" rowspan="1" colspan="1">control</td>
            <td align="center" rowspan="1" colspan="1">D3</td>
          </tr>
          <tr>
            <td align="center" rowspan="1" colspan="1">S4</td>
            <td align="center" rowspan="1" colspan="1">ref</td>
            <td align="center" rowspan="1" colspan="1">treated</td>
            <td align="center" rowspan="1" colspan="1">D1</td>
          </tr>
          <tr>
            <td align="center" rowspan="1" colspan="1">S4</td>
            <td align="center" rowspan="1" colspan="1">alt</td>
            <td align="center" rowspan="1" colspan="1">treated</td>
            <td align="center" rowspan="1" colspan="1">D1</td>
          </tr>
          <tr>
            <td align="center" rowspan="1" colspan="1">S5</td>
            <td align="center" rowspan="1" colspan="1">ref</td>
            <td align="center" rowspan="1" colspan="1">treated</td>
            <td align="center" rowspan="1" colspan="1">D2</td>
          </tr>
          <tr>
            <td align="center" rowspan="1" colspan="1">S5</td>
            <td align="center" rowspan="1" colspan="1">alt</td>
            <td align="center" rowspan="1" colspan="1">treated</td>
            <td align="center" rowspan="1" colspan="1">D2</td>
          </tr>
          <tr>
            <td align="center" rowspan="1" colspan="1">S6</td>
            <td align="center" rowspan="1" colspan="1">ref</td>
            <td align="center" rowspan="1" colspan="1">treated</td>
            <td align="center" rowspan="1" colspan="1">D3</td>
          </tr>
          <tr>
            <td align="center" rowspan="1" colspan="1">S6</td>
            <td align="center" rowspan="1" colspan="1">alt</td>
            <td align="center" rowspan="1" colspan="1">treated</td>
            <td align="center" rowspan="1" colspan="1">D3</td>
          </tr>
        </tbody>
      </table>
    </table-wrap>
    <p>First, we specify the design formula
<disp-formula id="FD4"><mml:math id="M4"><mml:mrow><mml:mo>∼</mml:mo><mml:mtext>condition</mml:mtext><mml:mo>+</mml:mo><mml:mtext>condition</mml:mtext><mml:mo>:</mml:mo><mml:mtext>subjectdummy</mml:mtext><mml:mo>+</mml:mo><mml:mtext>condition</mml:mtext><mml:mo>:</mml:mo><mml:mtext>count</mml:mtext><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>
</p>
    <p>including an overall condition effect, a term to account for sample-specific effects, and an interaction between the condition and count type columns to capture allele-specific expression within each condition. In R’s design formula syntax, a “:” between two variable names indicates the addition of an interaction term between these two variables, which may have a different effect on columns of
<italic>X</italic> depending on whether these are numeric or factor variables, and what other terms are in the design. Given this design formula together with the sample data table from
<xref rid="T1" ref-type="table">Table 1</xref> as the input arguments, the
<italic>ExploreModelMatrix</italic> functions determine the composition of the linear predictor for each combination of predictor variables shown in
<xref ref-type="fig" rid="f3">Figure 3A</xref> (corresponds to panel (
<monospace>F</monospace>) in
<xref ref-type="fig" rid="f1">Figure 1</xref>, shown here separately for increased readability). The Rank panel in the application further indicates that the design matrix is of full rank and that the residual degrees of freedom is non-zero, allowing also estimation of variances or dispersions for use in statistical hypothesis tests involving the estimated coefficients. The illustration in
<xref ref-type="fig" rid="f3">Figure 3A</xref> can be used to extract appropriate contrasts for statistical testing. For example, comparing the values of the linear predictor for each sample in the control group, we can see that the
<monospace>conditioncontrol:countalt</monospace> coefficient represents the allele-specific expression effect (alt/ref expression log-ratio) in this group. Similarly, the
<monospace>conditiontreated:countalt</monospace> coefficient represents the allele-specific expression in the treated group. As a consequence, the condition-dependent allele-specific expression effect is obtained as the difference between the allele-specific effects within the respective conditions, that is, by
<monospace>conditiontreated:countalt - conditioncontrol:countalt</monospace>.</p>
    <fig fig-type="figure" id="f3" orientation="portrait" position="anchor">
      <label>Figure 3. </label>
      <caption>
        <title>Values of the linear predictor, in terms of the model parameters, for the allele-specific expression use case.</title>
        <p><bold>A</bold>. Using the design formula ~ condition + condition:subjectdummy + condition:count.
<bold>B</bold>. Using the design formula ~ condition*count + subject.</p>
      </caption>
      <graphic xlink:href="f1000research-9-29479-g0002"/>
    </fig>
    <p>Next, we illustrate an alternative way of setting up the design matrix, by specifying the design formula as
<disp-formula id="FD5"><mml:math id="M5"><mml:mrow><mml:mo>∼</mml:mo><mml:mtext>condition</mml:mtext><mml:mo>*</mml:mo><mml:mtext>count</mml:mtext><mml:mo>+</mml:mo><mml:mtext>subject</mml:mtext><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula>
</p>
    <p>Here, we use the original subject ID (not the dummy encoded), and include main effects for condition and count type as well as an interaction between the condition and the count type. In R’s design formula syntax, a “*” between two variable names indicates the addition of both main effects and an interaction term between these two variables. Upon changing the design formula in
<italic>ExploreModelMatrix</italic>, we are notified that the design matrix is no longer full rank, as a consequence of having different subjects in the different conditions. Dropping the
<monospace>subjectS4</monospace> column results in a full-rank design matrix, and the composition of the linear predictor is shown in
<xref ref-type="fig" rid="f3">Figure 3B</xref>. The rank of the design matrix, as well as the residual degrees of freedom, are the same as with the previous formulation. However, the composition of the linear predictor for each combination of input variables is different. Comparing the alternative and reference allele groups for the control condition shows that with this formulation, the allele specificity in the control group is encoded by the
<monospace>countalt</monospace> coefficient. Similarly, the allele specificity in the treated group is represented by the sum of the
<monospace>countalt</monospace> and
<monospace>conditiontreated:countalt</monospace> coefficients. Consequently, the difference in allele specificity between the treated and control group is now directly encoded in the
<monospace>conditiontreated:countalt</monospace> coefficient.</p>
    <p>Both model formulations can be used to analyze this type of data, and the purpose of
<italic>ExploreModelMatrix</italic> is not to select the ‘best’ among a set of plausible models, but rather to assist the user in the interpretation of a chosen model. The example above stresses that knowing how to interpret a given coefficient in a generalized linear model is critical, that identically labelled coefficients can have different meanings depending on the chosen design formula, and that
<italic>ExploreModelMatrix</italic> can help the user interpret the resulting coefficients for a given choice of design formula and set up an appropriate contrast.</p>
  </sec>
  <sec>
    <title>Summary</title>
    <p>We have described the
<italic>ExploreModelMatrix</italic> R/Bioconductor package
<sup><xref rid="ref-15" ref-type="bibr">15</xref></sup>, which enables interactive exploration for increased understanding of model coefficients in linear and generalized linear models. To the best of our knowledge, this is the first package of its kind, and we envision applications for both research and educational purposes. The application requires minimal input and can be launched from a local R session, as well as be deployed on a Shiny server. An example instance of the latter is available at
<ext-link ext-link-type="uri" xlink:href="http://shiny.imbei.uni-mainz.de:3838/ExploreModelMatrix/">http://shiny.imbei.uni-mainz.de:3838/ExploreModelMatrix/</ext-link>, and the process for deploying an instance of the application on a Shiny server is documented in one of the vignettes accompanying the software.</p>
  </sec>
  <sec sec-type="data-availability">
    <title>Data availability</title>
    <p>All data underlying the results are available as part of the article and no additional source data are required.</p>
  </sec>
  <sec>
    <title>Software availability</title>
    <p>
      <bold><italic>ExploreModelMatrix</italic> is available at:</bold>
      <ext-link ext-link-type="uri" xlink:href="http://www.bioconductor.org/packages/ExploreModelMatrix/">http://www.bioconductor.org/packages/ExploreModelMatrix/</ext-link>
    </p>
    <p><bold>Source code available at:</bold><ext-link ext-link-type="uri" xlink:href="https://github.com/csoneson/ExploreModelMatrix">https://github.com/csoneson/ExploreModelMatrix</ext-link>.</p>
    <p><bold>Source code at time of publication:</bold><ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5281/zenodo.4008415">https://doi.org/10.5281/zenodo.4008415</ext-link><sup><xref rid="ref-15" ref-type="bibr">15</xref></sup>.</p>
    <p><bold>License:</bold><ext-link ext-link-type="uri" xlink:href="https://github.com/csoneson/ExploreModelMatrix/blob/master/LICENSE.md">MIT License</ext-link>.</p>
  </sec>
</body>
<back>
  <ref-list>
    <ref id="ref-1">
      <label>1</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname> Smyth</surname><given-names>GK</given-names></name></person-group>:
<article-title>Linear models and empirical Bayes methods for assessing differential expression in microarray experiments.</article-title><source><italic toggle="yes">Stat Appl Genet Mol Biol.</italic></source><year>2004</year>;<volume>3</volume>(<issue>1</issue>): Article 3.
<pub-id pub-id-type="doi">10.2202/1544-6115.1027</pub-id><?supplied-pmid 16646809?><pub-id pub-id-type="pmid">16646809</pub-id></mixed-citation>
    </ref>
    <ref id="ref-2">
      <label>2</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ritchie</surname><given-names>ME</given-names></name><name><surname>Phipson</surname><given-names>B</given-names></name><name><surname>Wu</surname><given-names>D</given-names></name><etal/></person-group>:
<article-title><italic>limma</italic> powers differential expression analyses for RNA-sequencing and microarray studies.</article-title><source><italic toggle="yes">Nucleic Acids Res.</italic></source><year>2015</year>;<volume>43</volume>(<issue>7</issue>):<fpage>e47</fpage>.
<pub-id pub-id-type="doi">10.1093/nar/gkv007</pub-id><!--<pub-id pub-id-type="pmcid">4402510</pub-id>--><?supplied-pmid 25605792?><pub-id pub-id-type="pmid">25605792</pub-id></mixed-citation>
    </ref>
    <ref id="ref-3">
      <label>3</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Robinson</surname><given-names>MD</given-names></name><name><surname>McCarthy</surname><given-names>DJ</given-names></name><name><surname>Smyth</surname><given-names>GK</given-names></name></person-group>:
<article-title>edgeR: a Bioconductor package for differential expression analysis of digital gene expression data.</article-title><source><italic toggle="yes">Bioinformatics.</italic></source><year>2010</year>;<volume>26</volume>(<issue>1</issue>):<fpage>139</fpage>–<lpage>140</lpage>.
<pub-id pub-id-type="doi">10.1093/bioinformatics/btp616</pub-id><!--<pub-id pub-id-type="pmcid">2796818</pub-id>--><?supplied-pmid 19910308?><pub-id pub-id-type="pmid">19910308</pub-id></mixed-citation>
    </ref>
    <ref id="ref-4">
      <label>4</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>McCarthy</surname><given-names>DJ</given-names></name><name><surname>Chen</surname><given-names>Y</given-names></name><name><surname>Smyth</surname><given-names>GK</given-names></name></person-group>:
<article-title>Differential expression analysis of multifactor RNA-Seq experiments with respect to biological variation.</article-title><source><italic toggle="yes">Nucleic Acids Res.</italic></source><year>2012</year>;<volume>40</volume>(<issue>10</issue>):<fpage>4288</fpage>–<lpage>4297</lpage>.
<pub-id pub-id-type="doi">10.1093/nar/gks042</pub-id><!--<pub-id pub-id-type="pmcid">3378882</pub-id>--><?supplied-pmid 22287627?><pub-id pub-id-type="pmid">22287627</pub-id></mixed-citation>
    </ref>
    <ref id="ref-5">
      <label>5</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Love</surname><given-names>MI</given-names></name><name><surname>Huber</surname><given-names>W</given-names></name><name><surname>Anders</surname><given-names>S</given-names></name></person-group>:
<article-title>Moderated estimation of fold change and dispersion for RNA-seq data with DESeq2.</article-title><source><italic toggle="yes">Genome Biol.</italic></source><year>2014</year>;<volume>15</volume>(<issue>12</issue>):<fpage>550</fpage>.
<pub-id pub-id-type="doi">10.1186/s13059-014-0550-8</pub-id><!--<pub-id pub-id-type="pmcid">4302049</pub-id>--><?supplied-pmid 25516281?><pub-id pub-id-type="pmid">25516281</pub-id></mixed-citation>
    </ref>
    <ref id="ref-6">
      <label>6</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Phipson</surname><given-names>B</given-names></name><name><surname>Maksimovic</surname><given-names>J</given-names></name><name><surname>Oshlack</surname><given-names>A</given-names></name></person-group>:
<article-title>missMethyl: an R package for analyzing data from Illumina’s HumanMethylation450 platform.</article-title><source><italic toggle="yes">Bioinformatics.</italic></source><year>2016</year>;<volume>32</volume>(<issue>2</issue>):<fpage>286</fpage>–<lpage>288</lpage>.
<pub-id pub-id-type="doi">10.1093/bioinformatics/btv560</pub-id><?supplied-pmid 26424855?><pub-id pub-id-type="pmid">26424855</pub-id></mixed-citation>
    </ref>
    <ref id="ref-7">
      <label>7</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Peters</surname><given-names>TJ</given-names></name><name><surname>Buckley</surname><given-names>MJ</given-names></name><name><surname>Statham</surname><given-names>AL</given-names></name><etal/></person-group>:
<article-title><italic>De novo</italic> identification of differentially methylated regions in the human genome.</article-title><source><italic toggle="yes">Epigenet Chromatin.</italic></source><year>2015</year>;<volume>8</volume>:<fpage>6</fpage>.
<pub-id pub-id-type="doi">10.1186/1756-8935-8-6</pub-id><!--<pub-id pub-id-type="pmcid">4429355</pub-id>--><?supplied-pmid 25972926?><pub-id pub-id-type="pmid">25972926</pub-id></mixed-citation>
    </ref>
    <ref id="ref-8">
      <label>8</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Aryee</surname><given-names>MJ</given-names></name><name><surname>Jaffe</surname><given-names>AE</given-names></name><name><surname>Corrada-Bravo</surname><given-names>H</given-names></name><etal/></person-group>:
<article-title>Minfi: a flexible and comprehensive Bioconductor package for the analysis of Infinium DNA methylation microarrays.</article-title><source><italic toggle="yes">Bioinformatics.</italic></source><year>2014</year>;<volume>30</volume>(<issue>10</issue>):<fpage>1363</fpage>–<lpage>1369</lpage>.
<pub-id pub-id-type="doi">10.1093/bioinformatics/btu049</pub-id><!--<pub-id pub-id-type="pmcid">4016708</pub-id>--><?supplied-pmid 24478339?><pub-id pub-id-type="pmid">24478339</pub-id></mixed-citation>
    </ref>
    <ref id="ref-9">
      <label>9</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Stark</surname><given-names>R</given-names></name><name><surname>Brown</surname><given-names>G</given-names></name></person-group>:
<article-title>DiffBind: differential binding analysis of ChIP-Seq peak data.</article-title>R package version 2.15.2.<year>2011</year><pub-id pub-id-type="doi">10.18129/B9.bioc.DiffBind</pub-id></mixed-citation>
    </ref>
    <ref id="ref-10">
      <label>10</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gregori</surname><given-names>J</given-names></name><name><surname>Sanchez</surname><given-names>A</given-names></name><name><surname>Villanueva</surname><given-names>J</given-names></name></person-group>:
<article-title>msmsTests: LC-MS/MS Differential Expression Tests.</article-title>R package version 1.25.0 .<year>2019</year><pub-id pub-id-type="doi">10.18129/B9.bioc.msmsTests</pub-id></mixed-citation>
    </ref>
    <ref id="ref-11">
      <label>11</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wilkinson</surname><given-names>GN</given-names></name><name><surname>Rogers</surname><given-names>CE</given-names></name></person-group>:
<article-title>Symbolic description of factorial models for analysis of variance.</article-title><source><italic toggle="yes">J R Stat Soc Ser C (Applied Statistics).</italic></source><year>1973</year>;<volume>22</volume>(<issue>3</issue>):<fpage>392</fpage>–<lpage>399</lpage>.
<pub-id pub-id-type="doi">10.2307/2346786</pub-id></mixed-citation>
    </ref>
    <ref id="ref-12">
      <label>12</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Nelder</surname><given-names>JA</given-names></name><name><surname>Wedderburn</surname><given-names>RWM</given-names></name></person-group>:
<article-title>Generalized linear models.</article-title><source><italic toggle="yes">J R Stat Soc Ser A.</italic></source><year>1972</year>;<volume>135</volume>(<issue>3</issue>):<fpage>370</fpage>–<lpage>384</lpage>.
<pub-id pub-id-type="doi">10.2307/2344614</pub-id></mixed-citation>
    </ref>
    <ref id="ref-13">
      <label>13</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>McCullagh</surname><given-names>P</given-names></name><name><surname>Nelder</surname><given-names>JA</given-names></name></person-group>:
<article-title>Generalized Linear Models</article-title>. Second Edition.
<italic>Chapman and Hall/CRC Monographs on Statistics and Applied Probability Series.</italic>Chapman &amp; Hall,<year>1989</year> ISBN 9780412317606.
<ext-link ext-link-type="uri" xlink:href="https://www.bibsonomy.org/bibtex/23a882b729f3f7333923cd713869d3f5f/peter.ralph">Reference Source</ext-link>
</mixed-citation>
    </ref>
    <ref id="ref-14">
      <label>14</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Chambers</surname><given-names>JM</given-names></name><name><surname>Hastie</surname><given-names>T</given-names></name></person-group>:
<article-title>Statistical Models in S</article-title>.
<italic>Wadsworth &amp; Brooks/Cole computer science series</italic> Wadsworth &amp; Brooks/Cole Advanced Books &amp; Software,<year> 1992</year> ISBN 9780534167646.
<ext-link ext-link-type="uri" xlink:href="https://www.bibsonomy.org/bibtex/24109d2f7212a5005fc76a37d54796b34/vivion">Reference Source</ext-link>
</mixed-citation>
    </ref>
    <ref id="ref-15">
      <label>15</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Soneson</surname><given-names>C</given-names></name><name><surname>Marini</surname><given-names>F</given-names></name><name><surname>Geier</surname><given-names>F</given-names></name><etal/></person-group>:
<article-title>ExploreModelMatrix</article-title>. August<year>2020</year><pub-id pub-id-type="doi">10.5281/zenodo.4008415</pub-id></mixed-citation>
    </ref>
    <ref id="ref-16">
      <label>16</label>
      <mixed-citation publication-type="journal"><collab>R Core Team</collab>:
<article-title>R: A language and environment for statistical computing</article-title>.<year>2020</year><ext-link ext-link-type="uri" xlink:href="https://www.R-project.org/">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-17">
      <label>17</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Chang</surname><given-names>W</given-names></name><name><surname>Cheng</surname><given-names>J</given-names></name><name><surname>Allaire</surname><given-names>JJ</given-names></name><etal/></person-group>:
<article-title>shiny: Web Application Framework for R</article-title>. R package version 1.4.0.2.<year>2020</year><ext-link ext-link-type="uri" xlink:href="https://CRAN.R-project.org/package=shiny">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-18">
      <label>18</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Huber</surname><given-names>W</given-names></name><name><surname>Carey</surname><given-names>VJ</given-names></name><name><surname>Gentleman</surname><given-names>R</given-names></name><etal/></person-group>:
<article-title>Orchestrating high-throughput genomic analysis with Bioconductor.</article-title><source><italic toggle="yes">Nat Methods.</italic></source><year>2015</year>;<volume>12</volume>(<issue>2</issue>):<fpage>115</fpage>–<lpage>121</lpage>.
<pub-id pub-id-type="doi">10.1038/nmeth.3252</pub-id><!--<pub-id pub-id-type="pmcid">4509590</pub-id>--><?supplied-pmid 25633503?><pub-id pub-id-type="pmid">25633503</pub-id></mixed-citation>
    </ref>
    <ref id="ref-19">
      <label>19</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ganz</surname><given-names>C</given-names></name></person-group>:
<article-title>rintrojs: A wrapper for the intro.js library.</article-title><source><italic toggle="yes">J Open Source Softw.</italic></source><year>2016</year>;<volume>1</volume><pub-id pub-id-type="doi">10.21105/joss.00063</pub-id></mixed-citation>
    </ref>
    <ref id="ref-20">
      <label>20</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Moore</surname><given-names>EH</given-names></name></person-group>:
<article-title>On the reciprocal of the general algebraic matrix.</article-title><source><italic toggle="yes">B Am Math Soc.</italic></source><year>1920</year>;<volume>26</volume>:<fpage>394</fpage>–<lpage>395</lpage>.</mixed-citation>
    </ref>
    <ref id="ref-21">
      <label>21</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bjerhammar</surname><given-names>A</given-names></name></person-group>:
<article-title>Application of calculus of matrices to method of least squares; with special references to geodetic calculations.</article-title><source><italic toggle="yes">Trans Roy Inst Tech Stockholm.</italic></source><year>1951</year>;<volume>49</volume>.</mixed-citation>
    </ref>
    <ref id="ref-22">
      <label>22</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Penrose</surname><given-names>R</given-names></name></person-group>:
<article-title>A generalized inverse for matrices.</article-title><source><italic toggle="yes">Math Proc Cambridge.</italic></source><year>1955</year>;<volume>51</volume>(<issue>3</issue>):<fpage>406</fpage>–<lpage>413</lpage>.
<pub-id pub-id-type="doi">10.1017/S0305004100030401</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>
<sub-article id="report71434" article-type="peer-review">
  <front-stub>
    <article-id pub-id-type="doi">10.5256/f1000research.29479.r71434</article-id>
    <title-group>
      <article-title>Reviewer response for version 2</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Fan</surname>
          <given-names>Jean</given-names>
        </name>
        <xref ref-type="aff" rid="r71434a1">1</xref>
        <xref ref-type="aff" rid="r71434a2">2</xref>
        <role>Referee</role>
        <contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-0212-5451</contrib-id>
      </contrib>
      <aff id="r71434a1"><label>1</label>Department of Biomedical Engineering, Johns Hopkins University, Baltimore, MD, USA</aff>
      <aff id="r71434a2"><label>2</label>Department of Computer Science, Johns Hopkins University, Baltimore, MD, USA</aff>
    </contrib-group>
    <author-notes>
      <fn fn-type="COI-statement">
        <p><bold>Competing interests: </bold>No competing interests were disclosed.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="epub">
      <day>2</day>
      <month>11</month>
      <year>2020</year>
    </pub-date>
    <permissions>
      <copyright-statement>Copyright: © 2020 Fan J</copyright-statement>
      <copyright-year>2020</copyright-year>
      <license xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an open access peer review report distributed under the terms of the Creative Commons Attribution Licence, which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <related-article related-article-type="peer-reviewed-article" id="d38e2048" ext-link-type="doi" xlink:href="10.12688/f1000research.24187.2">Version 2</related-article>
    <custom-meta-group>
      <custom-meta>
        <meta-name>recommendation</meta-name>
        <meta-value>approve</meta-value>
      </custom-meta>
    </custom-meta-group>
  </front-stub>
  <body>
    <p>The authors have addressed my main concerns and the manuscript is now suitable for publication in F1000Research. </p>
    <p> However, in order to ensure the utility of ExploreModelMatrix both as a guided and self-learning teaching tool, I would strongly encourage the authors to eventually conduct a user study, perhaps in a classroom setting, to assess whether their tool and the features of their tool achieve their stated goal of "helping users interpret a given design and to understand how changing the design influences the way they would perform a given comparison of interest."</p>
    <p> For example, I still find the "Choose reference levels" dropdown panels with the options ordered alphabetically rather by the given level ordering to be confusing from a user standpoint, particularly given that the fitted values plot does use the level ordering. While the authors suggest that the alphabetical ordering "was intentionally designed in this way" as they "reasoned that it's typically easier to find the desired level in a list of the options are listed alphabetically", which ordering is more intuitive for users is best assessed through an actual user study (rather than based on an N=1 feedback from myself).</p>
    <p>Are the conclusions about the tool and its performance adequately supported by the findings presented in the article?</p>
    <p>No</p>
    <p>Is the rationale for developing the new software tool clearly explained?</p>
    <p>Yes</p>
    <p>Is the description of the software tool technically sound?</p>
    <p>Yes</p>
    <p>Are sufficient details of the code, methods and analysis (if applicable) provided to allow replication of the software development and its use by others?</p>
    <p>Yes</p>
    <p>Is sufficient information provided to allow interpretation of the expected output datasets and any results generated using the tool?</p>
    <p>No</p>
    <p>Reviewer Expertise:</p>
    <p>Bioinformatics, Applied Statistics</p>
    <p>I confirm that I have read this submission and believe that I have an appropriate level of expertise to confirm that it is of an acceptable scientific standard.</p>
  </body>
</sub-article>
<sub-article id="report71435" article-type="peer-review">
  <front-stub>
    <article-id pub-id-type="doi">10.5256/f1000research.29479.r71435</article-id>
    <title-group>
      <article-title>Reviewer response for version 2</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>D'Agostino McGowan</surname>
          <given-names>Lucy</given-names>
        </name>
        <xref ref-type="aff" rid="r71435a1">1</xref>
        <role>Referee</role>
        <contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-7297-9359</contrib-id>
      </contrib>
      <aff id="r71435a1"><label>1</label>Department of Mathematics and Statistics, Wake Forest University, Winston-Salem, NC, USA</aff>
    </contrib-group>
    <author-notes>
      <fn fn-type="COI-statement">
        <p><bold>Competing interests: </bold>No competing interests were disclosed.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="epub">
      <day>12</day>
      <month>10</month>
      <year>2020</year>
    </pub-date>
    <permissions>
      <copyright-statement>Copyright: © 2020 D'Agostino McGowan L</copyright-statement>
      <copyright-year>2020</copyright-year>
      <license xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an open access peer review report distributed under the terms of the Creative Commons Attribution Licence, which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <related-article related-article-type="peer-reviewed-article" id="d38e2140" ext-link-type="doi" xlink:href="10.12688/f1000research.24187.2">Version 2</related-article>
    <custom-meta-group>
      <custom-meta>
        <meta-name>recommendation</meta-name>
        <meta-value>approve</meta-value>
      </custom-meta>
    </custom-meta-group>
  </front-stub>
  <body>
    <p>Thank you for addressing the points of my review, this paper and package will provide a nice teaching tool.</p>
    <p>Are the conclusions about the tool and its performance adequately supported by the findings presented in the article?</p>
    <p>Partly</p>
    <p>Is the rationale for developing the new software tool clearly explained?</p>
    <p>Yes</p>
    <p>Is the description of the software tool technically sound?</p>
    <p>Yes</p>
    <p>Are sufficient details of the code, methods and analysis (if applicable) provided to allow replication of the software development and its use by others?</p>
    <p>Yes</p>
    <p>Is sufficient information provided to allow interpretation of the expected output datasets and any results generated using the tool?</p>
    <p>Partly</p>
    <p>Reviewer Expertise:</p>
    <p>Biostatistics</p>
    <p>I confirm that I have read this submission and believe that I have an appropriate level of expertise to confirm that it is of an acceptable scientific standard.</p>
  </body>
</sub-article>
<sub-article id="report64395" article-type="peer-review">
  <front-stub>
    <article-id pub-id-type="doi">10.5256/f1000research.26680.r64395</article-id>
    <title-group>
      <article-title>Reviewer response for version 1</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Ritchie</surname>
          <given-names>Matthew</given-names>
        </name>
        <xref ref-type="aff" rid="r64395a1">1</xref>
        <role>Referee</role>
        <contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-7383-0609</contrib-id>
      </contrib>
      <aff id="r64395a1"><label>1</label>The Walter and Eliza Hall Institute of Medical Research, Parkville, Vic, Australia</aff>
    </contrib-group>
    <author-notes>
      <fn fn-type="COI-statement">
        <p><bold>Competing interests: </bold>No competing interests were disclosed.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="epub">
      <day>13</day>
      <month>7</month>
      <year>2020</year>
    </pub-date>
    <permissions>
      <copyright-statement>Copyright: © 2020 Ritchie M</copyright-statement>
      <copyright-year>2020</copyright-year>
      <license xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an open access peer review report distributed under the terms of the Creative Commons Attribution Licence, which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <related-article related-article-type="peer-reviewed-article" id="d38e2224" ext-link-type="doi" xlink:href="10.12688/f1000research.24187.1">Version 1</related-article>
    <custom-meta-group>
      <custom-meta>
        <meta-name>recommendation</meta-name>
        <meta-value>approve</meta-value>
      </custom-meta>
    </custom-meta-group>
  </front-stub>
  <body>
    <p>Understanding how to set up a design matrix is a significant challenge in genomic data science, especially for new analysts. The manuscript by Soneson
<italic> et al. </italic>presents the ExploreModelMatrix R package which aims to give the user better intuition on this for any arbitrary design.</p>
    <p> This is great contribution and would be really useful in a teaching setting (e.g. when running an Intro to RNA-seq analysis course) to help participants understand how a linear model is parameterised and how this can be changed to suit different biological questions. At the other extreme it is also helpful in the interpretation of coefficients in more complicated designs that include interactions.</p>
    <p> The ExploreModelMatrix output is provided via a shiny app which allows the user to interactively change either their own design based on the data.frame supplied, or choose from a series of standard examples, which was easy to navigate. I particularly liked the interactive tour of the different elements of the interface provided by rintrojs.</p>
    <p> Overall, I really enjoyed using this package and list a few optional suggestions below to help further improve the work.
<list list-type="order"><list-item><p>It might be useful to add a sentence about the intended audience of the package to the abstract.</p></list-item><list-item><p>Can a window be given to show what the line of code looks like to make the design matrix? Just thinking about beginners, who could start the app with ExploreModelMatrix(), choose an example design and then immediately see what code they would need to run at the R command prompt to create the design they're interested in (again helpful for teaching). This would provide a concrete output that the user could take forward in their analysis with a simple copy and paste. Likewise, if they provided their own data frame they will know what to do with it in terms of specifying model.matrix().</p></list-item><list-item><p>Would it be possible to create a dummy x vs y plot (perhaps by simulating data) to show what a fit might look like for theoretical y? This might be rather complicated to implement in practice given the wide array of models one could envisage, however, such a display would provide an intuitive view of what the coefficients represent graphically.  </p></list-item><list-item><p>If a model is parameterised without an intercept, it will generally be necessary to define contrasts between coefficients. Is there a way to point this out to the user in the app, or can a module be added to help set-up contrasts to show how this is done and again provide code that the analyst could then use in their analysis?</p></list-item><list-item><p>On page 3, column 2, paragraph 4, line 2 there appears to be a formatting problem with th'e' in 'the ExploreModelMatrix()'</p></list-item><list-item><p>In the 'Use cases' section, I wondered whether the simple example that features in Figure 1 could be stepped through (again to appeal to beginners) in addition to the complex ASE analysis example of Table 1 and Figure 2 which is likely to be more niche.</p></list-item><list-item><p>In the interactive tour of the interface, the rendering of some equations hasn't occurred properly in steps 19 and 22.</p></list-item><list-item><p>When you 'Flip coordinates' in the Fitted values / Co-occurrence plot, the y-axis labels aren't preserved in the flip (not sure if this is intentional)</p></list-item></list>
</p>
    <p>Are the conclusions about the tool and its performance adequately supported by the findings presented in the article?</p>
    <p>Yes</p>
    <p>Is the rationale for developing the new software tool clearly explained?</p>
    <p>Yes</p>
    <p>Is the description of the software tool technically sound?</p>
    <p>Yes</p>
    <p>Are sufficient details of the code, methods and analysis (if applicable) provided to allow replication of the software development and its use by others?</p>
    <p>Yes</p>
    <p>Is sufficient information provided to allow interpretation of the expected output datasets and any results generated using the tool?</p>
    <p>Yes</p>
    <p>Reviewer Expertise:</p>
    <p>Gene expression analysis</p>
    <p>I confirm that I have read this submission and believe that I have an appropriate level of expertise to confirm that it is of an acceptable scientific standard.</p>
  </body>
  <sub-article id="comment5917-64395" article-type="response">
    <front-stub>
      <contrib-group>
        <contrib contrib-type="author">
          <name>
            <surname>Soneson</surname>
            <given-names>Charlotte</given-names>
          </name>
          <aff>Friedrich Miescher Institute for Biomedical Research, Switzerland</aff>
        </contrib>
      </contrib-group>
      <author-notes>
        <fn fn-type="COI-statement">
          <p><bold>Competing interests: </bold>No competing interests were disclosed.</p>
        </fn>
      </author-notes>
      <pub-date pub-type="epub">
        <day>7</day>
        <month>9</month>
        <year>2020</year>
      </pub-date>
    </front-stub>
    <body>
      <p>Understanding how to set up a design matrix is a significant challenge in genomic data science, especially for new analysts. The manuscript by Soneson et al. presents the ExploreModelMatrix R package which aims to give the user better intuition on this for any arbitrary design. This is great contribution and would be really useful in a teaching setting (e.g. when running an Intro to RNA-seq analysis course) to help participants understand how a linear model is parameterised and how this can be changed to suit different biological questions. At the other extreme it is also helpful in the interpretation of coefficients in more complicated designs that include interactions.</p>
      <p> The ExploreModelMatrix output is provided via a shiny app which allows the user to interactively change either their own design based on the data.frame supplied, or choose from a series of standard examples, which was easy to navigate. I particularly liked the interactive tour of the different elements of the interface provided by rintrojs.</p>
      <p> Overall, I really enjoyed using this package and list a few optional suggestions below to help further improve the work.</p>
      <p>
        <italic>Thank you for your constructive comments and careful evaluation of the software. Point-by-point responses are provided below. </italic>
      </p>
      <p> It might be useful to add a sentence about the intended audience of the package to the abstract.</p>
      <p>
        <italic>We have added a sentence about this in the abstract.</italic>
      </p>
      <p> Can a window be given to show what the line of code looks like to make the design matrix? Just thinking about beginners, who could start the app with ExploreModelMatrix(), choose an example design and then immediately see what code they would need to run at the R command prompt to create the design they're interested in (again helpful for teaching). This would provide a concrete output that the user could take forward in their analysis with a simple copy and paste. Likewise, if they provided their own data frame they will know what to do with it in terms of specifying model.matrix().</p>
      <p>
        <italic>This is an interesting point and something that we may consider in a future version. One challenge is that different analysis packages require the design to be specified in different ways (e.g., as a design formula, or as a design matrix), and in some cases will automatically deal with e.g. non-estimable parameters. Thus, it is not obvious how to provide this code to make it as useful as possible.  </italic>
      </p>
      <p> Would it be possible to create a dummy x vs y plot (perhaps by simulating data) to show what a fit might look like for theoretical y? This might be rather complicated to implement in practice given the wide array of models one could envisage, however, such a display would provide an intuitive view of what the coefficients represent graphically.</p>
      <p>
        <italic>We agree that such plots are often instructive for the user, and some examples are included e.g. in the Data Analysis for the Life Sciences book, which we now also refer to in the application as an additional resource. Implementing them in a very general context, on the other hand, is a non-trivial task, and furthermore there is a risk that a user is misled if the coefficients estimated from the simulated response are different (perhaps with opposite signs) compared to those obtained from their actual data. For these reasons, we currently consider this out of scope for ExploreModelMatrix. </italic>
      </p>
      <p> If a model is parameterised without an intercept, it will generally be necessary to define contrasts between coefficients. Is there a way to point this out to the user in the app, or can a module be added to help set-up contrasts to show how this is done and again provide code that the analyst could then use in their analysis?</p>
      <p>
        <italic>We have expanded on the use case section in the manuscript to provide additional guidance on how the ExploreModelMatrix interface can be used to generate contrasts. </italic>
      </p>
      <p> On page 3, column 2, paragraph 4, line 2 there appears to be a formatting problem with th'e' in 'the ExploreModelMatrix()'</p>
      <p>
        <italic>Thanks for pointing this out. We hope that this has been resolved in typesetting of the revised version. </italic>
      </p>
      <p> In the 'Use cases' section, I wondered whether the simple example that features in Figure 1 could be stepped through (again to appeal to beginners) in addition to the complex ASE analysis example of Table 1 and Figure 2 which is likely to be more niche.</p>
      <p>
        <italic>In the revised manuscript, we have added a paragraph walking through the design in Figure 1 and showing how ExploreModelMatrix can be used to interpret coefficients and generate contrasts of interest. </italic>
      </p>
      <p> In the interactive tour of the interface, the rendering of some equations hasn't occurred properly in steps 19 and 22.</p>
      <p>
        <italic>This is correct - unfortunately the rintrojs package currently doesn't support proper rendering of equations via e.g. MathJax. We have initiated a discussion with the developer and hope that a solution can be engineered - in the meantime, we hope that the non-rendered equations still provide some help with the interpretation.   </italic>
      </p>
      <p> When you 'Flip coordinates' in the Fitted values / Co-occurrence plot, the y-axis labels aren't preserved in the flip (not sure if this is intentional)</p>
      <p>
        <italic>We were not able to reproduce this behaviour - when the coordinates are flipped, the labels are flipped as well. If you would be willing to open an issue in the GitHub repository with a reproducible example, that would be super helpful! </italic>
      </p>
    </body>
  </sub-article>
</sub-article>
<sub-article id="report64393" article-type="peer-review">
  <front-stub>
    <article-id pub-id-type="doi">10.5256/f1000research.26680.r64393</article-id>
    <title-group>
      <article-title>Reviewer response for version 1</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>D'Agostino McGowan</surname>
          <given-names>Lucy</given-names>
        </name>
        <xref ref-type="aff" rid="r64393a1">1</xref>
        <role>Referee</role>
        <contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-7297-9359</contrib-id>
      </contrib>
      <aff id="r64393a1"><label>1</label>Department of Mathematics and Statistics, Wake Forest University, Winston-Salem, NC, USA</aff>
    </contrib-group>
    <author-notes>
      <fn fn-type="COI-statement">
        <p><bold>Competing interests: </bold>No competing interests were disclosed.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="epub">
      <day>7</day>
      <month>7</month>
      <year>2020</year>
    </pub-date>
    <permissions>
      <copyright-statement>Copyright: © 2020 D'Agostino McGowan L</copyright-statement>
      <copyright-year>2020</copyright-year>
      <license xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an open access peer review report distributed under the terms of the Creative Commons Attribution Licence, which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <related-article related-article-type="peer-reviewed-article" id="d38e2464" ext-link-type="doi" xlink:href="10.12688/f1000research.24187.1">Version 1</related-article>
    <custom-meta-group>
      <custom-meta>
        <meta-name>recommendation</meta-name>
        <meta-value>approve-with-reservations</meta-value>
      </custom-meta>
    </custom-meta-group>
  </front-stub>
  <body>
    <p>
      <bold>Summary</bold>
    </p>
    <p> This article describes an R package and corresponding shiny application, ExploreModelMatrix, that can be used to explore design matrices for linear models. I can see this having a lot of utility for helping partitioners understand their design for simple research questions or for pedagogical use in the classroom. While I see this being extremely useful, the current design falls somewhere in the middle, a bit basic for complex research questions and a bit too complex for those with little statistical background. My suggestions assume that the primary user will be in the latter group.</p>
    <p>
      <bold>Major Comments</bold>
      <list list-type="order">
        <list-item>
          <p>The main take away seems to be from the "fitted values" boxes (both the plot and the table at the top of the application display this information). These seem to show the exact same content, so it feels repetitive to have both. The table is much more legible, but I can also see the utility of visualizing this. Perhaps these should be a
<italic>single</italic> box with two tabs, one with the table and one with the plot. I find the content in these depictions of the fitted values confusing, the variable names here are referring to the beta coefficients from the model, not the variable values themselves. To someone familiar with R / model output this may be obvious, but I'm not sure that is the case for the target user. Additionally, the use of : to indicate an interaction is not something I would expect novice users to know. If this is meant to help users interpret/calculate fitted values after they fit their models, perhaps the "pseudo" model output could be printed above the "fitted values" plot/table. This would explain where the values that are being plugged into each of these variable names come from. Additionally, this fitted values plot becomes quickly illegible, it would be great to have some simple defaults built in to expand the plot space if there are several inputs (see #5).</p>
        </list-item>
        <list-item>
          <p>There are several terms used in the application that may not be familiar to those without statistical/mathematical backgrounds. It would be great to have definitions provided to explain the plots/terms. For example, you could have a question mark next to each term that will pop up an explanation when the user hovers. Terms that need defining in the application: Design Matrix, Pseudoinverse of the design matrix, Variance inflation factors, Co-occurrence plot. </p>
        </list-item>
        <list-item>
          <p>Several of the boxes output `code` type texts (for example "Design matrix" and "Sample table summary") I am not sure what the utility of this being in this format is. If this was something the user could copy and paste into R, for example, this design choice would make sense, but I don't believe that is the purpose.</p>
        </list-item>
        <list-item>
          <p>The first argument of the R function is `sampleData`, however everywhere else in the application/documentation this is referred to as a `sample table`. This should be consistent. </p>
        </list-item>
        <list-item>
          <p>There are several pieces for the user to control that could have some better defaults based on user inputs (for example the height of the plots, the size of the text, etc). Especially for a novice user, it would be great if the defaults for these values were reactive (updated based on the user input) and were
<italic>mostly</italic> correct, allowing for tweaking only if absolutely necessary. In that case, you could hide these options in an "Advanced plot settings" tab in the sidebar, rather than having them visible when the user first opens the application. I think this would greatly improve the user experience.</p>
        </list-item>
      </list>
    </p>
    <p>
      <bold>Minor Comments</bold>
      <list list-type="order">
        <list-item>
          <p>The "Rank" box outputs text using the textOuput() function, this means that you end up with a [1] prepending the text (which may be confusing to a novice user). Using renderUI() and uiOutput() instead would remove this [1].</p>
        </list-item>
        <list-item>
          <p>If you remove the value from some of the numeric inputs, you end up with an error that is hard to parse ("An error has occurred. Check your logs or contact the app author for clarification."). You can check for whether the values needed for each value/plot are input using the validate() function and provide better error messages if not. (It looks like this is done for the formula input, just needs to be done for other inputs, for example, plot height, text size, etc.)</p>
        </list-item>
      </list>
    </p>
    <p>Are the conclusions about the tool and its performance adequately supported by the findings presented in the article?</p>
    <p>Partly</p>
    <p>Is the rationale for developing the new software tool clearly explained?</p>
    <p>Yes</p>
    <p>Is the description of the software tool technically sound?</p>
    <p>Yes</p>
    <p>Are sufficient details of the code, methods and analysis (if applicable) provided to allow replication of the software development and its use by others?</p>
    <p>Yes</p>
    <p>Is sufficient information provided to allow interpretation of the expected output datasets and any results generated using the tool?</p>
    <p>Partly</p>
    <p>Reviewer Expertise:</p>
    <p>Biostatistics</p>
    <p>I confirm that I have read this submission and believe that I have an appropriate level of expertise to confirm that it is of an acceptable scientific standard, however I have significant reservations, as outlined above.</p>
  </body>
  <sub-article id="comment5916-64393" article-type="response">
    <front-stub>
      <contrib-group>
        <contrib contrib-type="author">
          <name>
            <surname>Soneson</surname>
            <given-names>Charlotte</given-names>
          </name>
          <aff>Friedrich Miescher Institute for Biomedical Research, Switzerland</aff>
        </contrib>
      </contrib-group>
      <author-notes>
        <fn fn-type="COI-statement">
          <p><bold>Competing interests: </bold>No competing interests were disclosed.</p>
        </fn>
      </author-notes>
      <pub-date pub-type="epub">
        <day>7</day>
        <month>9</month>
        <year>2020</year>
      </pub-date>
    </front-stub>
    <body>
      <p>Summary</p>
      <p> This article describes an R package and corresponding shiny application, ExploreModelMatrix, that can be used to explore design matrices for linear models. I can see this having a lot of utility for helping partitioners understand their design for simple research questions or for pedagogical use in the classroom. While I see this being extremely useful, the current design falls somewhere in the middle, a bit basic for complex research questions and a bit too complex for those with little statistical background. My suggestions assume that the primary user will be in the latter group.</p>
      <p>
        <italic>Thank you for your constructive comments. Please find point-by-point responses to each comment below. </italic>
      </p>
      <p> Major Comments</p>
      <p> The main take away seems to be from the "fitted values" boxes (both the plot and the table at the top of the application display this information). These seem to show the exact same content, so it feels repetitive to have both. The table is much more legible, but I can also see the utility of visualizing this. Perhaps these should be a single box with two tabs, one with the table and one with the plot. </p>
      <p>
        <italic>This is a good idea, and also frees up more of the horizontal screen space for the plot. In the revised version of the package (v1.1.5, available on GitHub and in the devel branch of Bioconductor), these two representations are now shown in a single box with two tabs.</italic>
      </p>
      <p> I find the content in these depictions of the fitted values confusing, the variable names here are referring to the beta coefficients from the model, not the variable values themselves. To someone familiar with R / model output this may be obvious, but I'm not sure that is the case for the target user. Additionally, the use of : to indicate an interaction is not something I would expect novice users to know. If this is meant to help users interpret/calculate fitted values after they fit their models, perhaps the "pseudo" model output could be printed above the "fitted values" plot/table. This would explain where the values that are being plugged into each of these variable names come from. Additionally, this fitted values plot becomes quickly illegible, it would be great to have some simple defaults built in to expand the plot space if there are several inputs (see #5).</p>
      <p>
        <italic>The main motivation for this representation is to simplify the interpretation of the beta coefficients and the generation of appropriate contrasts. The actual values of the predictor variables are given as row and column names, and when combined provide a "label" for each box in the plot. For example, in the example shown in Figure 1, to find the estimated genotype effect in the control group, one would take the fitted value for the "genotype B" control samples ((Intercept) + genotypeB) and subtract the fitted value for the "genotype A" control samples ((Intercept)). The result (genotypeB) is the coefficient (column) in the design matrix to test for significance. Thus, it is essential that what is shown in the figure/table are the coefficient names (as generated by R's model.matrix()), since they are directly referred back to the column names of the design matrix. It is, in a way, less important to understand exactly why the coefficients are named as they are - the important thing is to be able to extract the proper combination of them for testing. We have addressed the automatic space allocation for the panel depending on the number of predictors and levels - see comment below. </italic>
      </p>
      <p> There are several terms used in the application that may not be familiar to those without statistical/mathematical backgrounds. It would be great to have definitions provided to explain the plots/terms. For example, you could have a question mark next to each term that will pop up an explanation when the user hovers. Terms that need defining in the application: Design Matrix, Pseudoinverse of the design matrix, Variance inflation factors, Co-occurrence plot. </p>
      <p>
        <italic>The tour provided with the application (accessible via the question mark icon in the top-right corner) provides some of these descriptions and additional help for interpretation. In the revised version, we have expanded on these and also added links to external documentation. In addition, we have added a question mark to each panel. Clicking on this will open the corresponding step of the built-in tour. </italic>
      </p>
      <p> Several of the boxes output `code` type texts (for example "Design matrix" and "Sample table summary") I am not sure what the utility of this being in this format is. If this was something the user could copy and paste into R, for example, this design choice would make sense, but I don't believe that is the purpose.</p>
      <p>
        <italic>The original purpose of this formatting was to display the output as it would be shown in R, to make it easier for users to make the connection. For the sample table summary, it is also important to display the class of each column (to see, for example, if a column that displays as numbers is really a factor). In the revised version of the package, the user has the choice of whether to display the design matrix as a data table or as 'regular' R output.</italic>
      </p>
      <p> The first argument of the R function is `sampleData`, however everywhere else in the application/documentation this is referred to as a `sample table`. This should be consistent. </p>
      <p>
        <italic>We have updated the application to be more consistent by replacing 'sample table' by 'sample data table'. We have also updated the text in the manuscript for consistency. </italic>
      </p>
      <p> There are several pieces for the user to control that could have some better defaults based on user inputs (for example the height of the plots, the size of the text, etc). Especially for a novice user, it would be great if the defaults for these values were reactive (updated based on the user input) and were mostly correct, allowing for tweaking only if absolutely necessary. In that case, you could hide these options in an "Advanced plot settings" tab in the sidebar, rather than having them visible when the user first opens the application. I think this would greatly improve the user experience.</p>
      <p>
        <italic>In the revised package, we have implemented a reactive panel size for the fitted values plot, which changes with the total number of displayed 'rows' (number of panels x number of levels of the predictor shown on the y-axis). It is still possible to tweak if desired. We now also collapse all plot settings in the sidebar by default. </italic>
      </p>
      <p> Minor Comments</p>
      <p> The "Rank" box outputs text using the textOutput() function, this means that you end up with a [1] prepending the text (which may be confusing to a novice user). Using renderUI() and uiOutput() instead would remove this [1].</p>
      <p>
        <italic>We have changed the renderPrint() in these statements to renderText(), which removes the [1].</italic>
      </p>
      <p> If you remove the value from some of the numeric inputs, you end up with an error that is hard to parse ("An error has occurred. Check your logs or contact the app author for clarification."). You can check for whether the values needed for each value/plot are input using the validate() function and provide better error messages if not. (It looks like this is done for the formula input, just needs to be done for other inputs, for example, plot height, text size, etc.)</p>
      <p>
        <italic>This has been fixed, and the app now displays more informative messages if numeric inputs are not properly specified. </italic>
      </p>
    </body>
  </sub-article>
</sub-article>
<sub-article id="report64392" article-type="peer-review">
  <front-stub>
    <article-id pub-id-type="doi">10.5256/f1000research.26680.r64392</article-id>
    <title-group>
      <article-title>Reviewer response for version 1</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Fan</surname>
          <given-names>Jean</given-names>
        </name>
        <xref ref-type="aff" rid="r64392a1">1</xref>
        <xref ref-type="aff" rid="r64392a2">2</xref>
        <role>Referee</role>
        <contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-0212-5451</contrib-id>
      </contrib>
      <aff id="r64392a1"><label>1</label>Department of Biomedical Engineering, Johns Hopkins University, Baltimore, MD, USA</aff>
      <aff id="r64392a2"><label>2</label>Department of Computer Science, Johns Hopkins University, Baltimore, MD, USA</aff>
    </contrib-group>
    <author-notes>
      <fn fn-type="COI-statement">
        <p><bold>Competing interests: </bold>No competing interests were disclosed.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="epub">
      <day>18</day>
      <month>6</month>
      <year>2020</year>
    </pub-date>
    <permissions>
      <copyright-statement>Copyright: © 2020 Fan J</copyright-statement>
      <copyright-year>2020</copyright-year>
      <license xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an open access peer review report distributed under the terms of the Creative Commons Attribution Licence, which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <related-article related-article-type="peer-reviewed-article" id="d38e2733" ext-link-type="doi" xlink:href="10.12688/f1000research.24187.1">Version 1</related-article>
    <custom-meta-group>
      <custom-meta>
        <meta-name>recommendation</meta-name>
        <meta-value>approve-with-reservations</meta-value>
      </custom-meta>
    </custom-meta-group>
  </front-stub>
  <body>
    <p>
      <bold>Executive Summary</bold>
    </p>
    <p> Choosing between different model designs is a common first step in hypothesis testing. Here, Soneson
<italic>et al. </italic>created an R/Bioconductor package called ExploreModelMatrix that provides an interactive Shiny interface for exploring such model designs. While the potential utility of such a package in a guided teaching setting is evident, its utility in a research setting is currently limited by its inability to accommodate larger, more complex designs common to real biological research. Most pressingly, it remains unclear how each of the explorer's modules can be used to guide a non-mathematical user to choose the appropriate model design. </p>
    <p> ---</p>
    <p>
      <bold>Major comments:</bold>
      <list list-type="order">
        <list-item>
          <p>Overall, it is unclear to me who is intended to be the target user for this package. The authors suggest that ExploreModelMatrix can be use in biological research or teaching, where many users will not be formal mathematicians.</p>
          <p> However, if I try to model using redundant variables, I get a warning "The design matrix is not full rank," which is a difficult message to interpret, particularly for non-mathematicians. </p>
          <p> Likewise, if the number of observations in the design matrix is the same as its rank, I get a warning "The residual degrees of freedom is 0. Values such as variances or dispersions can not be estimated from data with this design," which again is a difficult message to interpret, particularly for non-mathematicians. </p>
          <p> A more actionable jargon-free set of recommendations would be important for users. </p>
        </list-item>
        <list-item>
          <p>In biological research, it is not uncommon to have dozens of patients and dozens of cell-types for multiple treatments across multiple time points for example. For designs with more than a few options per predictor, the current interface becomes quickly unusable. For example:</p>
          <p> ```</p>
          <p> celltype &lt;- factor(sapply(1:10, function(x) rep(paste0('celltype', x), 30)))</p>
          <p> patient &lt;- as.factor(sample(1:10, 300, replace=TRUE))</p>
          <p> levels(patient) &lt;- paste0('patient', 1:10)</p>
          <p> names(celltype) &lt;- names(patient) &lt;- paste0('cell', 1:300)</p>
          <p> sampleData &lt;- data.frame(patient, celltype)</p>
          <p> head(sampleData)</p>
          <p> ExploreModelMatrix(sampleData = sampleData,</p>
          <p>                    designFormula = ~ patient + celltype)</p>
          <p> ```</p>
          <p> The 'Fitted values', 'Pseudoinverse of design matrix', and 'Correlation plot', all become overlapping and illegible, rendering the interface unusable. </p>
        </list-item>
        <list-item>
          <p>Testing two different design formula (one with and one without intercepts):</p>
          <p> ```</p>
          <p> ExploreModelMatrix(sampleData = sampleData,</p>
          <p>                    designFormula = ~ genotype + treatment)</p>
          <p> ExploreModelMatrix(sampleData = sampleData,</p>
          <p>                    designFormula = ~ 0 + genotype + treatment)</p>
          <p> ```</p>
          <p> I was unable to achieve the author's stated goals of "extract[ing] the interpretation of each individual coefﬁcient, and formulat[ing] desired linear contrasts" and ultimately deciding which design was best suited for my data. It is not clear how the 'variance inflation factors', 'Pseudoinverse of design matrix', 'Co-occurrence plot', and 'Correlation plot' should be used to inform my decision. </p>
          <p> A video tutorial or walkthrough showing how this could be done would be useful. </p>
        </list-item>
      </list>
    </p>
    <p> ---</p>
    <p>
      <bold>Minor comments:</bold>
      <list list-type="order">
        <list-item>
          <p>I was unable to install the package using the instructions provided:</p>
          <p> ```</p>
          <p> &gt; BiocManager::install("ExploreModelMatrix")</p>
          <p> Bioconductor version 3.9 (BiocManager 1.30.10), R 3.6.0 (2019-04-26)</p>
          <p> Installing package(s) 'ExploreModelMatrix'</p>
          <p> Warning message:</p>
          <p> package ‘ExploreModelMatrix’ is not available (for R version 3.6.0) </p>
          <p> ```</p>
          <p> Instead, I had to use:</p>
          <p> ```</p>
          <p> devtools::install_github('csoneson/ExploreModelMatrix')</p>
          <p> ```</p>
        </list-item>
        <list-item>
          <p>The "Choose reference levels" dropdown panels order the options alphabetically rather by the given level ordering. The fitted values plot does use the correct order though. </p>
        </list-item>
        <list-item>
          <p>All the functions and utilities that are available are not clear. For example, the "Flip coordinates" toggle was very useful and it took me awhile to find it. Again, video tutorial or walkthrough highlighting these features will be very helpful.</p>
        </list-item>
        <list-item>
          <p>If the annotation names ("subjectdummy", "condition", "count", etc) is too long, the Fitted values visualization becomes illegible as the text overlaps each other without wrapping. </p>
        </list-item>
      </list>
    </p>
    <p>Are the conclusions about the tool and its performance adequately supported by the findings presented in the article?</p>
    <p>No</p>
    <p>Is the rationale for developing the new software tool clearly explained?</p>
    <p>Yes</p>
    <p>Is the description of the software tool technically sound?</p>
    <p>Yes</p>
    <p>Are sufficient details of the code, methods and analysis (if applicable) provided to allow replication of the software development and its use by others?</p>
    <p>Yes</p>
    <p>Is sufficient information provided to allow interpretation of the expected output datasets and any results generated using the tool?</p>
    <p>No</p>
    <p>Reviewer Expertise:</p>
    <p>Bioinformatics, Applied Statistics</p>
    <p>I confirm that I have read this submission and believe that I have an appropriate level of expertise to confirm that it is of an acceptable scientific standard, however I have significant reservations, as outlined above.</p>
  </body>
  <sub-article id="comment5915-64392" article-type="response">
    <front-stub>
      <contrib-group>
        <contrib contrib-type="author">
          <name>
            <surname>Soneson</surname>
            <given-names>Charlotte</given-names>
          </name>
          <aff>Friedrich Miescher Institute for Biomedical Research, Switzerland</aff>
        </contrib>
      </contrib-group>
      <author-notes>
        <fn fn-type="COI-statement">
          <p><bold>Competing interests: </bold>No competing interests were disclosed.</p>
        </fn>
      </author-notes>
      <pub-date pub-type="epub">
        <day>7</day>
        <month>9</month>
        <year>2020</year>
      </pub-date>
    </front-stub>
    <body>
      <p>Executive Summary</p>
      <p>Choosing between different model designs is a common first step in hypothesis testing. Here, Soneson et al. created an R/Bioconductor package called ExploreModelMatrix that provides an interactive Shiny interface for exploring such model designs. While the potential utility of such a package in a guided teaching setting is evident, its utility in a research setting is currently limited by its inability to accommodate larger, more complex designs common to real biological research. Most pressingly, it remains unclear how each of the explorer's modules can be used to guide a non-mathematical user to choose the appropriate model design. </p>
      <p>
        <italic>Thank you for your constructive comments. We provide point-by-point responses below. Generally, we would like to emphasize that the main purpose of the application is to help users interpret a given design, and to understand how changing the design influences the way you would perform a given comparison of interest, rather than choosing a design for a specific experiment (the latter needs to be guided by insights and expectations about the system at hand, and possibly in consultation with a statistical collaborator). </italic>
      </p>
      <p>---</p>
      <p>Major comments:</p>
      <p>Overall, it is unclear to me who is intended to be the target user for this package. The authors suggest that ExploreModelMatrix can be use in biological research or teaching, where many users will not be formal mathematicians.</p>
      <p>However, if I try to model using redundant variables, I get a warning "The design matrix is not full rank," which is a difficult message to interpret, particularly for non-mathematicians. </p>
      <p>Likewise, if the number of observations in the design matrix is the same as its rank, I get a warning "The residual degrees of freedom is 0. Values such as variances or dispersions can not be estimated from data with this design," which again is a difficult message to interpret, particularly for non-mathematicians. </p>
      <p>A more actionable jargon-free set of recommendations would be important for users. </p>
      <p>
        <italic>In the revised version, we have expanded on these messages and added links to external documentation. We have also expanded the built-in tour, which provides additional interpretation assistance for the different concepts.</italic>
      </p>
      <p>In biological research, it is not uncommon to have dozens of patients and dozens of cell-types for multiple treatments across multiple time points for example. For designs with more than a few options per predictor, the current interface becomes quickly unusable. For example:</p>
      <p>```</p>
      <p>celltype &lt;- factor(sapply(1:10, function(x) rep(paste0('celltype', x), 30)))</p>
      <p>patient &lt;- as.factor(sample(1:10, 300, replace=TRUE))</p>
      <p>levels(patient) &lt;- paste0('patient', 1:10)</p>
      <p>names(celltype) &lt;- names(patient) &lt;- paste0('cell', 1:300)</p>
      <p>sampleData &lt;- data.frame(patient, celltype)</p>
      <p>head(sampleData)</p>
      <p>ExploreModelMatrix(sampleData = sampleData,</p>
      <p>                   designFormula = ~ patient + celltype)</p>
      <p>```</p>
      <p>The 'Fitted values', 'Pseudoinverse of design matrix', and 'Correlation plot', all become overlapping and illegible, rendering the interface unusable. </p>
      <p>
        <italic>It is true that with a large number of levels for each factor, the available screen space can be too small. There are several ways around this. First, the size of the displayed text as well as of the panels can be modified. In the revised package we have implemented a reactive panel height for the fitted values plot, which should avoid the need for the user to change it manually. Furthermore, by combining the plot and table representations of the fitted values in one panel, the full width of the application is used for the plot. Second, if the number of levels becomes very large, it may be better to use the non-interactive interface where the output can be written to a file of arbitrary dimensions. Third, in order to understand a given type of model, it is often possible to work with a reduced version, with fewer levels per predictor but the same underlying structure. </italic>
      </p>
      <p>Testing two different design formula (one with and one without intercepts):</p>
      <p>```</p>
      <p>ExploreModelMatrix(sampleData = sampleData,</p>
      <p>                   designFormula = ~ genotype + treatment)</p>
      <p>ExploreModelMatrix(sampleData = sampleData,</p>
      <p>                   designFormula = ~ 0 + genotype + treatment)</p>
      <p>```</p>
      <p>I was unable to achieve the author's stated goals of "extract[ing] the interpretation of each individual coefﬁcient, and formulat[ing] desired linear contrasts" and ultimately deciding which design was best suited for my data. It is not clear how the 'variance inflation factors', 'Pseudoinverse of design matrix', 'Co-occurrence plot', and 'Correlation plot' should be used to inform my decision. </p>
      <p>A video tutorial or walkthrough showing how this could be done would be useful. </p>
      <p>
        <italic>The main purpose of the application is to help users interpret a given design, and to understand how changing the design influences the way you would perform a given comparison of interest, rather than choosing a design for a specific experiment (the latter needs to be guided by insights and expectations about the system at hand). In the example above, the fitted values panel will inform the user about, e.g., the contrast required to compare two of the treatment groups. Neither design is more 'suitable' for the data, but depending on which one is selected, the contrast needs to be adapted.</italic>
      </p>
      <p>---</p>
      <p>Minor comments:</p>
      <p>I was unable to install the package using the instructions provided:</p>
      <p>```</p>
      <p>&gt; BiocManager::install("ExploreModelMatrix")</p>
      <p>Bioconductor version 3.9 (BiocManager 1.30.10), R 3.6.0 (2019-04-26)</p>
      <p>Installing package(s) 'ExploreModelMatrix'</p>
      <p>Warning message:</p>
      <p>package ‘ExploreModelMatrix’ is not available (for R version 3.6.0) </p>
      <p>```</p>
      <p>Instead, I had to use:</p>
      <p>```</p>
      <p>devtools::install_github('csoneson/ExploreModelMatrix')</p>
      <p>```</p>
      <p>
        <italic>ExploreModelMatrix was added to Bioconductor in release 3.11 (the current release, since April 2020). Thus, in order to install it via BiocManager::install() you need to have the most recent Bioconductor release. We now mention this in the manuscript, and we have expanded a bit on the installation instructions in the README to clarify this point. </italic>
      </p>
      <p>The "Choose reference levels" dropdown panels order the options alphabetically rather by the given level ordering. The fitted values plot does use the correct order though. </p>
      <p>
        <italic>This was intentionally designed in this way - if the user wants to choose a new reference level, the current level ordering doesn't matter, and we reasoned that it's typically easier to find the desired level in a list if the options are listed alphabetically. </italic>
      </p>
      <p>All the functions and utilities that are available are not clear. For example, the "Flip coordinates" toggle was very useful and it took me awhile to find it. Again, video tutorial or walkthrough highlighting these features will be very helpful.</p>
      <p>
        <italic>The application contains a walkthrough (accessible via the question mark in the top-right corner), pointing out useful features. Moreover, we have added a question mark button to each panel, which will open up the corresponding step in the tour. We have also moved the "Flip coordinates" toggle inside the panel with the fitted values plot for easier access. </italic>
      </p>
      <p>If the annotation names ("subjectdummy", "condition", "count", etc) is too long, the Fitted values visualization becomes illegible as the text overlaps each other without wrapping. </p>
      <p>
        <italic>This is difficult to manage automatically, since the actual width of the panel depends on the size of the browser window (as opposed to the height, which is set in pixels). It is best remedied by changing the font size of the displayed text in the side bar. We have intentionally kept the full coefficient name on a single line, to avoid misinterpretations and make it easier to match it back to the column names of the design matrix.</italic>
      </p>
    </body>
  </sub-article>
</sub-article>

<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">7191716</article-id>
    <article-id pub-id-type="publisher-id">3495</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-020-3495-9</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>YSMR: a video tracking and analysis program for bacterial motility</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-2803-0167</contrib-id>
        <name>
          <surname>Schwanbeck</surname>
          <given-names>Julian</given-names>
        </name>
        <address>
          <email>julian.schwanbeck@med.uni-goettingen.de</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Oehmig</surname>
          <given-names>Ines</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Dretzke</surname>
          <given-names>Jerôme</given-names>
        </name>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Zautner</surname>
          <given-names>Andreas E.</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Groß</surname>
          <given-names>Uwe</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Bohne</surname>
          <given-names>Wolfgang</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 0482 5331</institution-id><institution-id institution-id-type="GRID">grid.411984.1</institution-id><institution>Institute for Medical Microbiology, University Medical Center Göttingen, </institution></institution-wrap>Göttingen, Germany </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 2163 2777</institution-id><institution-id institution-id-type="GRID">grid.9122.8</institution-id><institution>Institute of Applied Mathematics, Leibniz University Hannover, </institution></institution-wrap>Hannover, Germany </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>29</day>
      <month>4</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>29</day>
      <month>4</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2020</year>
    </pub-date>
    <volume>21</volume>
    <elocation-id>166</elocation-id>
    <history>
      <date date-type="received">
        <day>28</day>
        <month>8</month>
        <year>2019</year>
      </date>
      <date date-type="accepted">
        <day>15</day>
        <month>4</month>
        <year>2020</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s). 2020</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold>This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">Motility in bacteria forms the basis for taxis and is in some pathogenic bacteria important for virulence. Video tracking of motile bacteria allows the monitoring of bacterial swimming behaviour and taxis on the level of individual cells, which is a prerequisite to study the underlying molecular mechanisms.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">The open-source python program YSMR (Your Software for Motility Recognition) was designed to simultaneously track a large number of bacterial cells on standard computers from video files in various formats. In order to cope with the high number of tracked objects, we use a simple detection and tracking approach based on grey-value and position, followed by stringent selection against suspicious data points. The generated data can be used for statistical analyses either directly with YSMR or with external programs.</p>
      </sec>
      <sec>
        <title>Conclusion</title>
        <p id="Par3">In contrast to existing video tracking software, which either requires expensive computer hardware or only tracks a limited number of bacteria for a few seconds, YSMR is an open-source program which allows the 2-D tracking of several hundred objects over at least 5 minutes on standard computer hardware.</p>
        <p id="Par4">The code is freely available at <ext-link ext-link-type="uri" xlink:href="https://github.com/schwanbeck/YSMR">https://github.com/schwanbeck/YSMR</ext-link></p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Bacterial motility</kwd>
      <kwd>Video tracking</kwd>
      <kwd>openCV</kwd>
      <kwd>Python</kwd>
      <kwd>Video microscopy</kwd>
      <kwd>2D object tracking</kwd>
      <kwd>Open-source software</kwd>
      <kwd>Multi-object tracking</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>Federal State of Lower Saxony, Niedersächsisches Vorab </institution>
        </funding-source>
        <award-id>VWZN2889/3215/3266</award-id>
        <principal-award-recipient>
          <name>
            <surname>Groß</surname>
            <given-names>Uwe</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2020</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par20">Bacteria developed different types of motility, most of them driven by flagella or pili. The molecular processes that regulate motility in bacteria are an active area in research, as they form the basis for dispersion, tactile processes, and virulence in some pathogenic bacteria [<xref ref-type="bibr" rid="CR1">1</xref>].</p>
    <p id="Par21">The particular type of bacterial swimming varies significantly among bacterial species and depends on the number of flagella and their distribution on the bacterial cell body [<xref ref-type="bibr" rid="CR2">2</xref>]. The best studied example is the “run and tumble” motility type of <italic>Escherichia coli</italic>, in which counter clockwise rotation of flagella leads to a run phase, while clockwise rotation leads to a tumbling phase with a random cell rotation [<xref ref-type="bibr" rid="CR3">3</xref>]. However, in recent years additional motility types were discovered, as the “forward-revers-flick” motility type in <italic>Vibrio alginolyticus</italic> [<xref ref-type="bibr" rid="CR4">4</xref>] or the “stop-and-coil” type in <italic>Rhodobacter sphaeroides</italic> [<xref ref-type="bibr" rid="CR5">5</xref>].</p>
    <p id="Par22">To study bacterial motility pattern, microscopic monitoring and analysis of single cell motility is required. Manual analysis of motility videos increases the risk of inadvertent cherry picking, as well as being tedious. The application of video tracking software is thus advisable for the quantification of various motility parameters such as the average speed, the length of travel paths, the time of swimming and tumbling, arc-chord ratio, percentage of immotile cells, and preferred direction of travel.</p>
    <p id="Par23">To our knowledge, video tracking software, which can be used for this purpose, have been designed with a high priority on tracking accuracy, as for example TrackMate2 [<xref ref-type="bibr" rid="CR6">6</xref>], or require additional licences to be used [<xref ref-type="bibr" rid="CR7">7</xref>].</p>
    <p id="Par24">However, a high accuracy tracking program monitors several parameters per tracked object per frame and can quickly run into hardware limitations, when several hundred objects are simultaneously analysed. Using such programs forces the user to choose between fewer cells per frame or shorter videos in order to be still functional.</p>
    <p id="Par25">We therefore felt the need for an open-source tracking program, which uses only simple parameters for tracking, in order to be able to cope with the large amount of tracked objects for at least 5 minutes. Here, we use the grey value of the bacterium for detection, and the distance between frames for tracking. As the sample size is very large, typically in the range of several hundred bacteria per frame, the loss of tracked objects is less important. After initial tracking, we subsequently filter out questionable data points and tracks in multiple steps. We also include the possibility for statistical analysis of the generated data.</p>
    <sec id="Sec2">
      <title>Software</title>
      <sec id="Sec3">
        <title>File requirements</title>
        <p id="Par26">During the initial setup, YSMR requires various parameters to be set in an automatically generated settings file, “tracking.ini”. The file was created with the idea in mind that it should be simple to set the basic values, but still allow for more in-depth configurations. Basic required settings are pixel per micrometre factor, frames per second, frame dimensions, whether the bacteria are brighter or darker than the background, as well as whether rod shaped or coccoid bacteria are tracked.</p>
        <p id="Par27">In order to take advantage from multi-core CPUs, YSMR is designed to handle a video file per available processor core in parallel. Files can be loaded by specifying them in the file dialog, as arguments for the YSMR function, or by specifying the path in the tracking.ini file. The user has to provide a video file in any format accepted by ffmpeg. We so far successfully tested .wmv, .avi, .mov, .mp4, and .mkv.</p>
      </sec>
      <sec id="Sec4">
        <title>Bacteria detection by grey value</title>
        <p id="Par28">Recorded bacteria can be either brighter or darker than the background. The program reads one frame at a time. During the process of bacterial detection, the frame is first converted into grey-scale (see Fig. <xref rid="Fig1" ref-type="fig">1</xref> a &amp; b). The noise in the frame is reduced by a 2D Gaussian blur in order to reduce the rate of false positive areas (Fig. <xref rid="Fig1" ref-type="fig">1</xref> c). are set using an adaptive threshold with an 11 by 11 Gaussian kernel (Fig. <xref rid="Fig1" ref-type="fig">1</xref> d). In order to exclude erroneous detections, a second adaptive Gaussian threshold with an increased threshold is used to generate marker positions (Fig. <xref rid="Fig1" ref-type="fig">1</xref> e). Whenever no white area from Fig. <xref rid="Fig1" ref-type="fig">1</xref> e is contained within a white area from Fig. <xref rid="Fig1" ref-type="fig">1</xref> d, that area is disregarded. From this, the frame depicted in Fig. <xref rid="Fig1" ref-type="fig">1</xref> f is generated. The outermost points of the edges in Fig. <xref rid="Fig1" ref-type="fig">1</xref> f are then used to create a rectangle and each newly generated rectangle receives a unique ID (Fig. <xref rid="Fig1" ref-type="fig">1</xref> g). The centre-point of the rectangle (named “tracking target”) is set as the x-, y-coordinate of the bacterium, which is used for tracking.
<fig id="Fig1"><label>Fig. 1</label><caption><p>From original frame to final detection. <bold>a</bold>: the original frame from the video file. <bold>b</bold>: the frame is converted to grey scale. <bold>c</bold>: a Gaussian blur with a 3 by 3 kernel is applied. <bold>d</bold>: the adaptive threshold is applied, leaving white areas as potential bacteria. <bold>e</bold>: a second, higher, adaptive threshold is applied to generate markers. <bold>f</bold>: white areas from <bold>d</bold> which contain markers from E are used as outlines. <bold>g</bold>: each area is encased in a rectangle and assigned a unique ID, displayed on the original frame</p></caption><graphic xlink:href="12859_2020_3495_Fig1_HTML" id="MO1"/></fig></p>
        <p id="Par29">Optionally, either simple adaptive thresholding, without the marker based approach, or simple thresholding based on the grey value of the frame can be used. For simple thresholding, the average grey value of the entire frame, its standard deviation, as well as a user definable offset is used to calculate a threshold value. To reduce fluctuations in the threshold, a moving average over a timeframe of 5 s is used. Using the previously calculated threshold value, the frame is converted to a binary black and white image in which bacteria are always defined as white areas which are subsequently used for edge detection.</p>
      </sec>
      <sec id="Sec5">
        <title>The tracking process</title>
        <p id="Par30">Tracking is performed by calculating the distances of all tracking targets between each frame and joining the neighbours with the least distance between frames. In addition, a Gaussian sum finite impulse response filter using a constant velocity model is used to filter the measured signal as well as to produce predictions of positions for tracking [<xref ref-type="bibr" rid="CR8">8</xref>]. When a new frame has more tracking targets than a previous frame, new IDs are assigned to the additional tracking targets. Tracking targets which cannot be assigned will be given the width and height dimensions of 0.0 for missing frames, while their last predicted x-, y-coordinate will be used for tracking. Centre-points that cannot be assigned within 1 second of the last detection will be removed. The generated information per frame, consisting of ID, filtered position, width, height, time, and rotation angle, is periodically saved to disc in a .csv file. When all frames have been read, the resulting .csv file is sorted by ID and time.</p>
      </sec>
      <sec id="Sec6">
        <title>Track selection</title>
        <p id="Par31">The data is then loaded as a pandas data frame and all tracks are checked for plausibility or errors before further calculations are performed. Track selection is performed in two parts, as some erroneous data points as well as entirely too short tracks can be excluded directly, which saves processing time and increases precision in the secondary finer selection step.</p>
        <p id="Par32">(i) In the initial step, entire tracks are discarded. This includes all tracks whose bounding rectangles are on average below or above user specified bacterial size limits. The lower limit discards most events which have a small bounding rectangle for a few frames, followed by frames with an area of zero for 1 second, averaging close to zero in total. The upper limit excludes areas of bright spots caused by dirt, chromatic aberrations in the microscope, or other unwanted objects. We find that using a lower limit of 20% of the average bacterial size in px<sup>2</sup> and an upper limit of five times that area can be used as a rule of thumb for the initial broad exclusion limits. When a user defined minimum tracking time is given, all tracks below this limit at this stage are also excluded.</p>
        <p id="Par33">(ii) In the second step, erroneous single measurements are deleted. This includes all single measurement points where the area is zero. This is caused by the tracker, which zeros width and height when the track cannot be linked in between frames. The position given at such points is the last predicted position.</p>
        <p id="Par34">(iii) Optionally, single data points can be excluded if they surpass a specified multiple of the average bounding rectangle area of a track. This can occur when bacteria overlap, which increases the size of the bounding rectangle by the area of the second bacterium. In this case, one bacterium is erroneously assigned a larger size, while the other cannot be tracked.</p>
        <p id="Par35">After removing erroneous data points and tracks, each track is sequentially filtered through user defined criteria. A count of how often a track has been excluded through each criterion is reported afterwards. We will hereafter refer to removed measurement points as “gaps” in the measurement. The following criteria are included: (iv) first, the duration in time of the track must be above a user defined minimum time limit, if one is specified. (v) The track may not have more than a set amount of consecutive frame gaps, which ensures continuous tracking. (vi) Optionally, distance outliers within tracks can be calculated. Outliers are defined as those above the outer fence of all distances. As this is prone to error when too many tracked objects are immotile, the feature can optionally disable itself if the detected outliers are above a specified percentage of all data points. If too large consecutive gaps in measurement or distance outliers are present, the track is split and both halves are analysed again, starting at the first check. (vii) The data points of the track may not have more than a user defined percentage of gaps. (viii) The average bacterial size within a track can be used as an exclusion parameter. If the average size is outside a percentile of all size measurements, the track is excluded. The percentile is also defined by the user. Area outliers missed by the hard limit of the initial sorting step ‘i’ are excluded at the possible expense of excluding a fraction of correct tracks. (ix) The average position of the track must not be within a given percentage of the screen edges. These tracks can be excluded as a precaution, since IDs near the screen edges could be wrongly reassigned when other bacteria enter the frame.</p>
        <p id="Par36">If all checks are passed, the track is added to the results. If a track was split and several parts pass the checks, the longest part is selected and all others are discarded. Optionally, tracks can be limited to a user defined maximal duration. When an upper time limit is set the track is shortened to the exact duration or, if a gap is at that position, the closest data point below the set time limit. This behaviour can be changed so that shortened tracks which fall below the limit are discarded instead.</p>
      </sec>
    </sec>
    <sec id="Sec7">
      <title>Data processing, analysis and illustration</title>
      <p id="Par37">The tracking process can either be displayed during analysis or saved as an .avi file encoded in MJPEG. The generated raw data from the tracking, the results from the subsequent fine selection, as well as the results from the statistical analysis can each be saved as an individual .csv file. The statistical analysis .csv files can also as a convenience function be collated into a .xlsx file.</p>
      <p id="Par38">Tracks can be graphically visualized in a coordinate graph with a marker at the starting position, or as a rose graph with starting x−/y-coordinates set to 0,0. In each case, the tracks are coloured depending on travelled distance.</p>
      <p id="Par39">Tracks can be analysed for the following parameter: (i) total travelled distance (μm), (ii) speed (μm/s), (iii) duration (s), (iv) maximum distance between tracked positions (μm), (v) percentage of time where bacterium was motile, (vi) turn points per second, and (vii) arc-chord ratio. Generated statistics can be displayed as violin plots.</p>
    </sec>
    <sec id="Sec8">
      <title>Comparison to TrackMate</title>
      <p id="Par40">TrackMate is a widely used tracking program designed for sub-pixel localisation and tracking of eukaryotic cells [<xref ref-type="bibr" rid="CR6">6</xref>]. Smaller objects, such as bacteria, can also be tracked. It is in contrast to YSMR a semi-automatic application requiring user supervision and input during tracking. A further limitation is the maximum video length when tracking a large number of objects due to increasing RAM requirements. We compared the performance and results between YSMR and TrackMate on the example video which was shortened to 30 s (Supplementary Fig. <xref rid="MOESM2" ref-type="media">1</xref>, Supplementary Video <xref rid="MOESM1" ref-type="media">1</xref>, and Supplementary Table <xref rid="MOESM3" ref-type="media">1</xref>). The analysis was done in comparable time (YSMR 140.5 s, TrackMate 141.8 s) with default options for YSMR. However, YSMR used fewer computational resources, since it is designed for parallel analysis of multiple videos. YSMR used only one thread, whereas TrackMate used four. The peak RAM usage was 6.3 GB for TrackMate and 1.1 GB for YSMR. Comparing the results, when overlaid, YSMR detects 91.1% of all positions that overlap with those detected by TrackMate. Mean values for speed, distance, displacement, arc-chord ratio, and percentage of motility are in a similar range with variations between 6.23 and 19.81% of the means (Supplementary Table <xref rid="MOESM3" ref-type="media">1</xref>).</p>
    </sec>
  </sec>
  <sec id="Sec9">
    <title>Discussion and conclusion</title>
    <p id="Par41">YSMR is a python program for generating tracking data and statistics from video files depicting motile bacteria. It offers the possibility to determine and quantify the most relevant bacterial motility parameters, for example total travelled distance, speed, percentage of time where bacteria are motile and turn points per second, among others. A thorough analysis of these data can provide the basis for novel insights into the motility behaviour of bacteria and its regulation.</p>
    <p id="Par42">Existing tracking programs have a focus on the high accuracy of generated tracking trails from video files and were often performed on very small sample sizes, due to the need to track single cells frame-by-frame throughout the video. In contrast, YSMR is optimized for the simultaneous tracking of a very large number of bacteria, typically in the range of 100–1000 per frame from video files generated with a 10x objective. YSMR is based on a moderate fidelity, high selectivity approach, which keeps the processing time short. Instead of using computational intensive approaches for bacterial detection, for example machine learning, we found that the detection could be reduced to a very simple approach, namely finding bacteria by grey value threshold. We concluded that we could simplify the whole process down to the described detection and tracking mechanism, as long as in a secondary step we rigorously select against suspect data points. The entire process is inexpensive enough to be run on standard desktop computers and was adapted to take advantage of multicore processors for parallelisation.</p>
    <p id="Par43">In our setup, efficient tracking of flagellated <italic>Bacillus subtilis</italic> was possible with YSMR by using video files generated with a 30 fps camera (Aptina CMOS Sensor 18MP 1/2.3″ Color) on a microscope with a 10x objective (Nikon Eclipse TE2000-S, Nikon PlanFluor 10x). The comparatively large depth of the focal plane of a 10x objective minimizes the number of bacteria that move out of focus during tracking. A frequent experimental design is to analyse bacterial motility statistics for a population under varying conditions (for example different pH, nutrient availability, growth phase, or cell densities). YSMR can analyse generated video files for this purposes quickly and in parallel. On the other hand, if the exact motility pattern of single bacteria, the movement in 3D, or bacteria-bacteria interaction is of interest, or the cell density is below 50 objects per frame, other programs with higher tracking accuracy might be a better choice. To assess the performance of YSMR for a given task, the debug option lets the user review the detection process. For a straightforward assessment of the generated data, the save video option displays the generated measurements directly on the original video. YSMR was optimized to analyse bacterial motility statistics from a large number of bacteria in short time. Even if more precision is required, YSMR can still be used as a simple and quick pre-screening in order to select files for more complex and time consuming processes.</p>
    <sec id="Sec10">
      <title>Availability and requirements</title>
      <p id="Par44">Project name: YSMR v 0.1.0.</p>
      <p id="Par45">Project home page: <ext-link ext-link-type="uri" xlink:href="https://github.com/schwanbeck/YSMR">https://github.com/schwanbeck/YSMR</ext-link></p>
      <p id="Par46">Operating systems: Platform independent.</p>
      <p id="Par47">Programming Language: Python ≥3.6.</p>
      <p id="Par48">Other requirements: opencv (opencv-contrib-python/opencv-python v3/v4, v2 untested), numpy, pandas, tkinter, matplotlib, scipy, seaborn.</p>
      <p id="Par49">Optional: xlsxwriter.</p>
      <p id="Par50">License: GNU GPL v3.0.</p>
      <p id="Par51">Any restrictions to use by non-academics: None.</p>
    </sec>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary information</title>
    <sec id="Sec11">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="12859_2020_3495_MOESM1_ESM.mp4">
            <caption>
              <p><bold>Additional file 1: Supplementary Video 1.</bold> A video of motile <italic>Bacillus subtilis</italic> 168 in LB. The video was taken with a 30 fps camera (Aptina CMOS Sensor 18MP 1/2.3″ Color) on a microscope with a 10x objective (Nikon Eclipse TE2000-S, Nikon PlanFluor 10x).</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM2">
          <media xlink:href="12859_2020_3495_MOESM2_ESM.png">
            <caption>
              <p><bold>Additional file 2: Supplementary Figure S1.</bold> Comparison between tracked positions of YSMR and TrackMate. All x- and y-axes are in pixel. The example Video (supplementary Video <xref rid="MOESM1" ref-type="media">1</xref>) was truncated to 30 s, as TrackMate cannot analyse the full video. Each frame was converted to 8 bit grey scale .tiff files. The images were loaded into Fiji and subsequently tracked with TrackMate. We applied no filters to the results generated by TrackMate. The first 10 s of the results were overlaid with those generated with YSMR for the same section of the video in <bold>supplementary Figure 1 A.</bold> The position of five randomly picked tracks, which were compared in detail between TrackMate and YSMR (Fig. 1 B-F) are marked with blue arrows. Spots in orange were only identified by YSMR (2.87% of all spots). Spots in black were only identified by TrackMate (67.78% of all spots). Spots in green were identified by both (29.35% of all spots). <bold>Supplementary Figure 1 B-F.</bold> show individual tracks in direct comparison with YSMR in orange and TrackMate in black. The majority of tracks which were only recognised by TrackMate and not by YSMR are located in the periphery. For YSMR the standard settings for track selection were used, which actively removes tracks which are mainly near the frame edges in addition to otherwise questionable tracks, leaving only high quality tracks. This explains the lower number of tracks recognised by YSMR compared to TrackMate in this example.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM3">
          <media xlink:href="12859_2020_3495_MOESM3_ESM.xlsx">
            <caption>
              <p><bold>Additional file 3: Supplementary Table S1.</bold> A comparison between results generated by TrackMate and YSMR. All tracks with a duration between 5 and 10 s were selected and the mean of motility parameter was calculated.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>ACR</term>
        <def>
          <p id="Par5">Arc-chord ratio</p>
        </def>
      </def-item>
      <def-item>
        <term>CPU</term>
        <def>
          <p id="Par6">Central processing unit</p>
        </def>
      </def-item>
      <def-item>
        <term>FIR</term>
        <def>
          <p id="Par7">Finite impulse response filter</p>
        </def>
      </def-item>
      <def-item>
        <term>GB</term>
        <def>
          <p id="Par8">Gigabyte</p>
        </def>
      </def-item>
      <def-item>
        <term>GSFF</term>
        <def>
          <p id="Par9">Gaussian-sum finite impulse response filter</p>
        </def>
      </def-item>
      <def-item>
        <term>ID</term>
        <def>
          <p id="Par10">Identifier</p>
        </def>
      </def-item>
      <def-item>
        <term>IQR</term>
        <def>
          <p id="Par11">Interquartile range</p>
        </def>
      </def-item>
      <def-item>
        <term>LSFF</term>
        <def>
          <p id="Par12">Least square finite impulse response filter</p>
        </def>
      </def-item>
      <def-item>
        <term>MJPEG</term>
        <def>
          <p id="Par13">Motion JPEG</p>
        </def>
      </def-item>
      <def-item>
        <term>OS</term>
        <def>
          <p id="Par14">Operating system</p>
        </def>
      </def-item>
      <def-item>
        <term>YSMR</term>
        <def>
          <p id="Par15">Your Software for Motility Recognition</p>
        </def>
      </def-item>
      <def-item>
        <term>csv</term>
        <def>
          <p id="Par16">Comma-separated values file</p>
        </def>
      </def-item>
      <def-item>
        <term>fps</term>
        <def>
          <p id="Par17">Frames per second</p>
        </def>
      </def-item>
      <def-item>
        <term>pH</term>
        <def>
          <p id="Par18">Power of hydrogen, negative base 10 logarithm of the concentration of hydrogen</p>
        </def>
      </def-item>
      <def-item>
        <term>px</term>
        <def>
          <p id="Par19">Pixel</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher’s Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <sec>
    <title>Supplementary information</title>
    <p><bold>Supplementary information</bold> accompanies this paper at 10.1186/s12859-020-3495-9.</p>
  </sec>
  <ack>
    <title>Acknowledgements</title>
    <p>We would like to thank Prof. Burkhard Morgenstern for reading the manuscript and supporting the project. We would like to thank Avril von Hoyningen-Huene for proofreading and providing corrections for the manuscript.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors’ contributions</title>
    <p>JS was the main developer of YSMR. IO performed the laboratory work. JD implemented the Gaussian-sum FIR filter in Python and tested it. AZ, UG and WB tested the application on various systems, contributed ideas, supervised the project and were involved in the preparation of the manuscript. All authors read and approved the final manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>This work was funded by the Federal State of Lower Saxony, Niedersächsisches Vorab (VWZN2889/3215/3266). The funding body had no role in the design of the study or writing the manuscript; nor the collection, analysis, or interpretation of data.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>An example video of <italic>Bacillus subtilis</italic> is provided in the supplementary.</p>
  </notes>
  <notes>
    <title>Ethics approval and consent to participate</title>
    <p id="Par52">Not applicable.</p>
  </notes>
  <notes>
    <title>Consent for publication</title>
    <p id="Par53">Not applicable.</p>
  </notes>
  <notes notes-type="COI-statement">
    <title>Competing interests</title>
    <p id="Par54">The Authors declare no conflict of interest.</p>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <mixed-citation publication-type="other">Watts KJ, Vaknin A, Fuqua C, Kazmierczak BI. New Twists and Turns in Bacterial Locomotion and Signal Transduction. J Bacteriol. 2019; July. doi:10.1128/JB.00439-19.</mixed-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <mixed-citation publication-type="other">Bastos-Arrieta J, Revilla-Guarinos A, Uspal WE, Simmchen J. Bacterial Biohybrid Microswimmers. Front Robot AI. 2018;5:1–16. doi:10.3389/frobt.2018.00097.</mixed-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sarkar</surname>
            <given-names>MK</given-names>
          </name>
          <name>
            <surname>Paul</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Blair</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>Chemotaxis signaling protein CheY binds to the rotor protein FliN to control the direction of flagellar rotation in Escherichia coli</article-title>
        <source>Proc Natl Acad Sci</source>
        <year>2010</year>
        <volume>107</volume>
        <fpage>9370</fpage>
        <lpage>9375</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.1000935107</pub-id>
        <pub-id pub-id-type="pmid">20439729</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Xie</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Altindal</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Chattopadhyay</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>X-L</given-names>
          </name>
        </person-group>
        <article-title>Bacterial flagellum as a propeller and as a rudder for efficient chemotaxis</article-title>
        <source>Proc Natl Acad Sci</source>
        <year>2011</year>
        <volume>108</volume>
        <fpage>2246</fpage>
        <lpage>2251</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.1011953108</pub-id>
        <pub-id pub-id-type="pmid">21205908</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Haya</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Tokumaru</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Abe</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Kaneko</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Aizawa</surname>
            <given-names>SI</given-names>
          </name>
        </person-group>
        <article-title>Characterization of lateral flagella of Selenomonas ruminantium</article-title>
        <source>Appl Environ Microbiol</source>
        <year>2011</year>
        <volume>77</volume>
        <fpage>2799</fpage>
        <lpage>2802</lpage>
        <pub-id pub-id-type="doi">10.1128/AEM.00286-11</pub-id>
        <pub-id pub-id-type="pmid">21335384</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <mixed-citation publication-type="other">Tinevez JY, Perry N, Schindelin J, Hoopes GM, Reynolds GD, Laplantine E, et al. TrackMate: an open and extensible platform for single-particle tracking. Methods. 2017;115:80–90. doi:10.1016/j.ymeth.2016.09.016.</mixed-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <mixed-citation publication-type="other">Taute KM, Gude S, Tans SJ, Shimizu TS. High-throughput 3D tracking of bacteria on a standard phase contrast microscope. Nat Commun. 2015:8776. doi:10.1038/ncomms9776.</mixed-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <mixed-citation publication-type="other">Pak JM. Gaussian sum FIR filtering for 2D target tracking. Int J Control Autom Syst 2019;17:1–7. doi:10.1007/s12555-018-0938-4.</mixed-citation>
    </ref>
  </ref-list>
</back>

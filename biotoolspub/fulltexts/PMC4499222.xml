<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Syst Biol</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Syst Biol</journal-id>
    <journal-title-group>
      <journal-title>BMC Systems Biology</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1752-0509</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">4499222</article-id>
    <article-id pub-id-type="publisher-id">179</article-id>
    <article-id pub-id-type="doi">10.1186/s12918-015-0179-6</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>CytoASP: a Cytoscape app for qualitative consistency reasoning, prediction and repair in biological networks</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Kittas</surname>
          <given-names>Aristotelis</given-names>
        </name>
        <address>
          <email>akittas@gmail.com</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Barozet</surname>
          <given-names>Amélie</given-names>
        </name>
        <address>
          <email>abarozet@gmail.com</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Sereshti</surname>
          <given-names>Jekaterina</given-names>
        </name>
        <address>
          <email>jekaterina.sirjajeva@gmx.de</email>
        </address>
        <xref ref-type="aff" rid="Aff2"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Grabe</surname>
          <given-names>Niels</given-names>
        </name>
        <address>
          <email>niels.grabe@bioquant.uni-heidelberg.de</email>
        </address>
        <xref ref-type="aff" rid="Aff2"/>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Tsoka</surname>
          <given-names>Sophia</given-names>
        </name>
        <address>
          <email>sophia.tsoka@kcl.ac.uk</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <aff id="Aff1"><label/>Department of Informatics, King’s College London, Strand, London, WC2R 2LS UK </aff>
      <aff id="Aff2"><label/>Department of Medical Oncology, NCT, University of Heidelberg, Im Neuenheimer Feld 267, Heidelberg, 69120 Germany </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>11</day>
      <month>7</month>
      <year>2015</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>11</day>
      <month>7</month>
      <year>2015</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2015</year>
    </pub-date>
    <volume>9</volume>
    <elocation-id>34</elocation-id>
    <history>
      <date date-type="received">
        <day>23</day>
        <month>1</month>
        <year>2015</year>
      </date>
      <date date-type="accepted">
        <day>11</day>
        <month>6</month>
        <year>2015</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© Kittas et al. 2015</copyright-statement>
      <license license-type="open-access">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0">http://creativecommons.org/licenses/by/4.0</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly credited. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p>Qualitative reasoning frameworks, such as the Sign Consistency Model (SCM), enable modelling regulatory networks to check whether observed behaviour can be explained or if unobserved behaviour can be predicted. The BioASP software collection offers ideal tools for such analyses. Additionally, the Cytoscape platform can offer extensive functionality and visualisation capabilities. However, specialist programming knowledge is required to use BioASP and no methods exist to integrate both of these software platforms effectively.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>We report the implementation of CytoASP, an app that allows the use of BioASP for influence graph consistency checking, prediction and repair operations through Cytoscape. While offering inherent benefits over traditional approaches using BioASP, it provides additional advantages such as customised visualisation of predictions and repairs, as well as the ability to analyse multiple networks in parallel, exploiting multi-core architecture. We demonstrate its usage in a case study of a yeast genetic network, and highlight its capabilities in reasoning over regulatory networks.</p>
      </sec>
      <sec>
        <title>Conclusion</title>
        <p>We have presented a user-friendly Cytoscape app for the analysis of regulatory networks using BioASP. It allows easy integration of qualitative modelling, combining the functionality of BioASP with the visualisation and processing capability in Cytoscape, and thereby greatly simplifying qualitative network modelling, promoting its use in relevant projects.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Biological networks</kwd>
      <kwd>Regulatory networks</kwd>
      <kwd>BioASP</kwd>
      <kwd>Qualitative modelling</kwd>
    </kwd-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2015</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p>Biological networks can be modelled at different levels of abstraction. Whereas quantitative models rely on the availability of kinetic parameters, qualitative models are primarily based on the network structure, rendering them generally applicable to large-scale analyses [<xref ref-type="bibr" rid="CR1">1</xref>]. Among qualitative reasoning platforms, the Sign Consistency Model (SCM) [<xref ref-type="bibr" rid="CR2">2</xref>] is a framework for modelling influence graphs by confronting a network of labelled interactions with quantitative data, imposing a collection of constraints. In the context of regulatory networks, SCM can be used to check whether an observed behaviour can be explained or if unobserved behaviour can be predicted.</p>
    <p>Given genes, proteins, or metabolites and a graph of labelled interactions among these entities, cases are identified where experimental observations are inconsistent with known regulation patterns to indicate either unreliable data or missing regulations. It is assumed that data originates from steady-state shift experiments where, given a perturbation, the difference between two steady states corresponds to protein or metabolite changes in concentration. Logical modelling may then be employed to determine viable states of molecular interactions when the network is confronted with experimental data by using the SCM framework. Further specific experiments can also be suggested to validate the system behaviour through reconciling with the regulatory conditions needed to achieve it [<xref ref-type="bibr" rid="CR3">3</xref>].</p>
    <p>The BioASP software collection <sup>1</sup> implements methods for modelling metabolic and gene regulatory networks [<xref ref-type="bibr" rid="CR3">3</xref>], using logical rules with Answer Set Programming (ASP) [<xref ref-type="bibr" rid="CR4">4</xref>]. ASP is a form of declarative programming that can address difficult, NP-hard search problems. The building blocks for ASP programs are atoms, literals, and rules. Atoms are elementary propositions (factual statements) that may be true or false, literals are atoms and their negations, rules are expressions composed of atoms and programs are finite collections of rules [<xref ref-type="bibr" rid="CR5">5</xref>]. The consistency problem is thus encoded by a collection of rules, such that its intended models, called <italic>answer sets</italic>, represent solutions to the problem.</p>
    <p>A publicly available Python script, <italic>ingranalyze</italic><sup>2</sup>, facilitates influence graph modelling without knowledge of ASP. However, it provides no graphical user interface and specialist user input is required (i.e. file formatting, syntactic restrictions, pre/post-processing through command line etc.). A web service<sup>3</sup> also exists, which provides a point-and-click interface but no visualisation of the results.</p>
    <p>Cytoscape [<xref ref-type="bibr" rid="CR6">6</xref>] offers an ideal platform for network analysis encompassing visualisation, layout and processing capabilities [<xref ref-type="bibr" rid="CR6">6</xref>]. A Cytoscape 3.x app, named CytoASP, is implemented and reported here, that uses <italic>ingranalyze</italic> as a back-end for influence graph consistency checking, prediction and repair operations through Cytoscape. User input is provided through a graphical interface, while integration with Cytoscape provides additional functionality features for visualisation and further analysis.</p>
  </sec>
  <sec id="Sec2">
    <title>Implementation</title>
    <p>The interaction between Cytoscape and CytoASP was implemented in Java. This part of the program starts by displaying the graphical interface where the user selects the desired options. Once the calculation is requested by the user, it executes parallel threads, one for each of the different networks. Each of these threads writes two text files, one describing the network, and another one containing the corresponding observations. It then runs a Python script that will make use of those two text files and interact with the BioASP <italic>ingranalyze</italic> package.</p>
    <p>The Python script plays the intermediary role between information in the text files and the <italic>ingranalyze</italic> Python package. It processes raw data from the text files and passes them on (along with the options chosen by the user) to <italic>ingranalyze</italic>, which executes the binaries for the <italic>clasp</italic> and <italic>gringo</italic> ASP solvers. Once the predictions are made, it obtains the results and writes them to files in the chosen directory. The Java threads finally read the result files when the Python processing is over and update the visualisation in Cytoscape accordingly.</p>
    <sec id="Sec3">
      <title>App functionality</title>
      <p>The main functionality of CytoASP is the analysis of sign influence graphs, which are directed graphs where vertices are the input and state variables of a system and edges express their effects on each other. An edge <italic>i</italic>→<italic>j</italic> means that the variation of <italic>i</italic> through time influences the level of <italic>j</italic>. The edges are labeled with positive and negative signs indicating activations and inhibitions respectively.</p>
      <p>On this basis, CytoASP provides the following functionality through Cytoscape: i) checking the network for consistency, ii) identifying minimal inconsistent cores (MICs), iii) computing repair sets, and iv) predicting node variation under consistency and repair. Assuming a steady state and some form of perturbation, the difference between initial and final states is used as input. The algorithm proceeds to determine consistency and predict unknown regulation effects and repair sets. By overlaying experimental data on the network, some of the system variables are fixed, allowing checks on whether observed data agree with underlying graph interactions.</p>
    </sec>
    <sec id="Sec4">
      <title>Consistency and repair</title>
      <p>The SCM defines the general rule to determine network consistency: “The variation of each node (which is not considered as input) must be explained by an influence received from at least one of its predecessors” [<xref ref-type="bibr" rid="CR2">2</xref>]. A network is considered consistent if there exists a total labelling of its edges and nodes which overrides the current labelling and which is consistent with regard to the SCM rule. This can be formulated as a boolean satisfiability problem which is known to be NP-hard and may be efficiently tackled by the ASP approach [<xref ref-type="bibr" rid="CR7">7</xref>]. A particular instance of network, with overlaid data, is consistent if its (potentially partial) labelling is consistent.</p>
      <p>BioASP defines different rules that allow checking the consistency of a network. These rules are then handled by a grounder and then by a solver. If the network is consistent, there will be at least one answer set. In this case, predictions may be calculated, which are the set of values for the unobserved nodes in the intersection of all possible solutions (i.e. answer sets of predicted node variations).</p>
      <p>If the network is inconsistent, various repair options may be possible. A repair set is a set of modifications of your data or graph which makes it consistent. One is usually interested in “minimal repairs”, i.e. ones that result in the smallest number of changes in the dataset. By using BioASP, it is possible to identify all possible repair sets for the analysed network, which may be repaired using either of these options:
<list list-type="order"><list-item><p>Flipping observations, i.e. changing the signs for the variation of each node.</p></list-item><list-item><p>Defining certain nodes as input, namely nodes which are not influenced by their predecessors.</p></list-item><list-item><p>Flipping influences, i.e. changing the signs of the network edges.</p></list-item><list-item><p>Adding new influences in the network.</p></list-item></list></p>
      <p>Each repair set is output as a different file. As it is possible to have many repair sets, these cannot be visualised simultaneously. However, it maybe the case that some repairs are common in all repair sets, and these are visualised on the network as nodes with alternating fill and border colour (see e.g. Fig <xref rid="Fig2" ref-type="fig">2</xref>), or edges with alternating shape and colour. Predictions can also be made under different repair modes, which are the deductions for the variation of unobserved nodes that hold true under all repair sets.
</p>
      <p>When calculating repairs, it is often useful to provide concise explanations when an experimental profile is inconsistent with an influence graph, by isolating parts of the network responsible for the inconsistency. These are minimal sub-graphs of an influence graph with a given partial labelling, such that the vertices and edges cannot be labelled consistently. These sub-graphs are called Minimal Inconsistent Cores (MICS)s [<xref ref-type="bibr" rid="CR7">7</xref>], and CytoASP can calculate them, by checking the appropriate setting in its options.</p>
    </sec>
    <sec id="Sec5">
      <title>Usage</title>
      <p>In a typical work session, the user loads a session in Cytoscape (Fig. <xref rid="Fig1" ref-type="fig">1</xref>), namely a set of networks and associated tables, classifying interactions between: i) positive, ii) negative and iii) unknown. The experimental profile is then specified, by either defining node observations as attributes or loading them from a file. For the first option, we can create column observations in the node table, and fill it either with relative variations or with −/ +.
<fig id="Fig1"><label>Fig. 1</label><caption><p>User interface of CytoASP. A typical workflow in CytoASP consists of four distinct steps: i. interaction assignment, ii. specifying observations iii. repair options and iv. visualisation options. After these options have been assigned the app proceeds to analyse the selected network and output the results</p></caption><graphic xlink:href="12918_2015_179_Fig1_HTML" id="MO2"/></fig></p>
      <p>After nodes and edges are assigned, the user defines repair options: flip variations, flip influences, turn nodes into inputs (i.e. not having their variation defined by any predecessors) or add edges. In the next step, the colours for visualising the results from computations are chosen. Once all options are set, the app calls <italic>ingranalyze</italic> to perform the computations and suggest predictions.</p>
      <p>CytoASP is packaged as standalone software including solver binaries, Python libraries and Python itself. Therefore, it runs with no dependencies on any system where the BioASP solvers can be compiled. It is currently offered for Linux 64-bit systems as standalone software, due to its dependency on Python and availability of the BioASP solvers. We are considering a future implementation (CytoASP 2.0) providing execution via a web service to offer platform independence.</p>
    </sec>
  </sec>
  <sec id="Sec6">
    <title>Results and discussion</title>
    <sec id="Sec7">
      <title>Case study</title>
      <p>We demonstrate the application of CytoASP on the yeast transcription regulatory network provided in [<xref ref-type="bibr" rid="CR8">8</xref>], a genetic network comprising sets of genes that interact through directed transcriptional regulation. The yeast regulatory network contains 935 genetic or biochemical regulations, all of which have been established experimentally, among 447 genes. On this network, gene expression data from whole-genome microarray analysis of SNF2 knock-out mutants from [<xref ref-type="bibr" rid="CR9">9</xref>] is overlaid. It is noted that SNF2 is a catalytic subunit of the SWI/SNF chromatin remodelling complex, that controls transcription by perturbing the structure of nucleosomes.</p>
      <p>Genes that exert a regulatory role encode dedicated transcription factors can bind to specific DNA control regions of regulated genes to activate or inhibit their transcription. Regulated genes may themselves act in a regulatory manner, in which case they participate in a causal pathway. This transcriptional regulatory network is represented as a graph where vertices are genes and directed edges denote activating or repressing effects on transcription.</p>
      <p>Comparing the yeast regulatory network with the genetic profile of SNF2, we found the data to be inconsistent with the network. Multiple repair modes, as outlined above, can be employed in order to re-establish consistency. In our case, repairs are suggested through CytoASP by flipping observations (Fig. <xref rid="Fig2" ref-type="fig">2</xref>). The network can be repaired with a minimal set of 11 operations, has 48 minimal repair sets and 71 predictions that hold under all repair sets. These results can be evaluated experimentally or through expert knowledge. CytoASP presents these repair suggestions through an output window screen, in addition to saving the corresponding files for predictions and repairs. Predictions are presented as border-coloured nodes (Fig. <xref rid="Fig2" ref-type="fig">2</xref>) and observations as solid coloured nodes, where cyan and yellow represent up and down regulation respectively. These colours can be customised by the user.
<fig id="Fig2"><label>Fig. 2</label><caption><p>Network modelling in CytoASP. Overview of analysis done in network from [<xref ref-type="bibr" rid="CR8">8</xref>], using transcriptional data from [<xref ref-type="bibr" rid="CR9">9</xref>]. Detailed view of central part of the network, where one can spot regulations in observed and predicted nodes, as well as repairs common in all minimal repair sets. Predictions are presented as border-coloured nodes and observations as solid coloured, where cyan and yellow represent up and down regulation respectively. In the close-up view nodes are highlighted after post-processing the network exported from Cytoscape using the vector editing software Inkscape (<ext-link ext-link-type="uri" xlink:href="https://inkscape.org/">https://inkscape.org/</ext-link>)</p></caption><graphic xlink:href="12918_2015_179_Fig2_HTML" id="MO1"/></fig></p>
      <p>Such visualisation capability facilitates spotting repairs that hold under all repair sets, since these are visualised as coloured nodes with alternating border colour. As an example, consider node (1) HSC82 (YMR186W) (Fig. <xref rid="Fig2" ref-type="fig">2</xref>). This gene was observed as up-regulated in the microarray dataset however, as consistency checks have indicated that it is down-regulated in <italic>all</italic> repair sets, it is highly likely that gene expression measurement may be inaccurate and further scrutiny can be planned for verification. It is noted that similar visualisation is possible if flipping influences (edges) or defining nodes as input are selected as a repair options.</p>
      <p>This approach also provides predictions for unknown expression, based on the transcriptomics data and underlying network. Consider e.g. nodes YCL050C, YPL075W, YDR050C (2) in Fig. <xref rid="Fig2" ref-type="fig">2</xref>. Expression of APA1 gene (YCL050C) is regulated by the carbon source and requires the protein GCR1 (YPL075W) [<xref ref-type="bibr" rid="CR10">10</xref>]. GCR1 mutations substantially decrease the expression of glycolytic genes, such as TPI1 (YDR050C), compared to those in the wild-type strain [<xref ref-type="bibr" rid="CR11">11</xref>]. The observed down-regulation of TPI1 allows to predict the subsequent downregulation of GCR1 and APA1 which is inline with observations from the literature.</p>
      <p>Another example are MET4 (YNL103W) and MET16 (YPR167C) which are linked with a positive influence (3). Transcription of MET16 and other genes required for sulfate assimilation is activated in the absence of methionine. The up-regulation of MET16 allows us to predict the up-regulation of MET4. Mutation in the MET4 gene abolishes transcription of MET16, thus MET4 is essential for MET16 expression [<xref ref-type="bibr" rid="CR12">12</xref>]. Therefore the model provides a plausible explanation for the up-regulation of MET16 via the MET4 transcription factor.</p>
    </sec>
    <sec id="Sec8">
      <title>Comparison with existing software</title>
      <p>The COMA Cytoscape plugin [<xref ref-type="bibr" rid="CR13">13</xref>] implements a method to facilitate consistency checks for gene expression studies given a gene regulatory network. This approach is tailored to transcriptional gene regulatory interactions and can identify local inconsistencies for genes that are controlled by a set of transcription factors. However, it is limited in determining specific consistent patterns of genes regulated by a number of transcription factors, it does not provide global predictions and it is not able to suggest repairs in the case of inconsistency.</p>
      <p>Integer linear programming (ILP) has also been recently employed on interaction graphs to encode constraints on the qualitative behaviour of the nodes [<xref ref-type="bibr" rid="CR14">14</xref>]. This approach determines topology-consistent explanation for responses of signalling nodes measured in a stimulus-response experiment and identifies the optimal subgraph of the given network topology which can best reflect measurements from a set of experimental scenarios. In contrast, our backend (<italic>ingranalyze</italic>) that uses BioASP does not focus on generating subgraphs, rather it suggests edge/node repairs on the given network structure.</p>
      <p>Qualitative influence graph modelling is currently available in Cytoscape 2.x via the BioQuali Cytoscape app [<xref ref-type="bibr" rid="CR15">15</xref>]. This approach uses ternary decision diagrams (TDDs) to answer the consistency problem. TDDs provide an efficient representation of all the possible solutions of a qualitative system of constraints, however computation time increases significantly for large networks. On the other hand, BioASP only calculates predictions under repair that hold true under all repair sets (i.e. not all possible), however it is capable of dealing problems of much larger size, rendering it ideal for modelling large scale regulatory networks.</p>
      <p>A significant advantage of the ASP paradigm is its flexibility and extensibility. Defining a new variation value for a node, (e.g. such as the null-variation), can be done by adding new rules into the program, while in the TDD approach, this requires modification of a significant part of its implementation. BioASP also offers significant capability for repairs not found in BioQuali, such as calculation of all minimal repair sets either as nodes or edges, and identification of minimal inconsistent cores.</p>
      <p>While CytoASP has the advantages of ASP due to its usage of BioASP as back-end, it also offers additional benefits. It has extended options for visualising repair options under any repair mode, and customising the visualisation of repairs. The app runs locally, but has no dependencies so the only requirement is an existing Cytoscape installation. Furthermore, it runs each network analysis in a separate process, allowing parallel processing of all selected networks, thus taking advantage of any multi-processing capabilities. A detailed comparison is available in Table <xref rid="Tab1" ref-type="table">1</xref>.
<table-wrap id="Tab1"><label>Table 1</label><caption><p>Feature comparison of CytoASP and BioQuali [<xref ref-type="bibr" rid="CR15">15</xref>]</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"/><th align="left">CytoASP</th><th align="left">BioQuali</th></tr></thead><tbody><tr><td align="left"><italic>Execution Model</italic></td><td align="left">Local</td><td align="left">Remote (Web Service)</td></tr><tr><td align="left"><italic>Reasoning Engine</italic></td><td align="left">ASP solvers (through ingranalyze &amp; BioASP)</td><td align="left">Decision Diagrams</td></tr><tr><td align="left"><italic>Parallel Processing</italic></td><td align="left">Yes, multiple networks may be analysed simultaneously using all available CPU cores</td><td align="left">No</td></tr><tr><td align="left"><italic>Visualisation Options</italic></td><td align="left">Custom, user can select colors for visualisation</td><td align="left">Fixed, colors are pre-selected</td></tr><tr><td align="left"><italic>Repair Options</italic></td><td align="left">i) Flip observations, ii) Flip influences, iii) Define nodes as input, iv) Add influences</td><td align="left">Neutralise influences</td></tr><tr><td align="left"><italic>Repair Visualisation</italic></td><td align="left">Common repairs are visualised for all four repair modes</td><td align="left">Neutralised influences</td></tr><tr><td align="left"><italic>Repair Sets</italic></td><td align="left">Yes, all minimal repair sets for nodes / edges are calculated</td><td align="left">No</td></tr><tr><td align="left"><italic>Minimal Inconsistent Cores</italic></td><td align="left">Yes</td><td align="left">No</td></tr></tbody></table></table-wrap></p>
      <p>In terms of memory requirements, CytoASP uses 64-bit versions of Cytoscape and ASP solvers and therefore it is practically limited by the theoretical limit of a 64-bit system architecture (16 exabytes). However, it is noted that memory requirement for a graph with <italic>n</italic> number of nodes increases by <italic>O</italic>(<italic>n</italic><sup>2</sup>), therefore large graphs (e.g. &gt;10<sup>6</sup> nodes) may occupy a large amount of system memory. Since Cytoscape uses adjacency list as its internal representation format, sparse graphs will occupy less space in memory.</p>
      <p>The performance of CytoASP depends on BioASP, since the latter is used as back-end to perform calculations and provide the consistency analysis, predictions and repairs. Modern ASP solvers are based on advanced Boolean constraint solving technology and thus provide highly efficient inference engines [<xref ref-type="bibr" rid="CR7">7</xref>]. The computation of the network in this case study completes within seconds. The average runtime may vary, depending on feasibility of repair modes on consistent as well as inconsistent observations. A detailed analysis on repair and prediction times with respect to the corresponding repair operation is provided elsewhere [<xref ref-type="bibr" rid="CR16">16</xref>]. The most demanding process in terms of computation time is the identification of MICs, which increases quadratically with respect to grounding times of gringo ASP solver, in line with ground instantiations for MIC encoding growing quadratically with the size of influence graphs. A detailed analysis in the run-times when calculating MICs is provided in [<xref ref-type="bibr" rid="CR7">7</xref>].</p>
    </sec>
  </sec>
  <sec id="Sec9" sec-type="conclusion">
    <title>Conclusions</title>
    <p>We have presented CytoASP, proposing a Cytoscape app for determining consistency and making predictions and repairs in influence graphs. The software takes advantage of the extensive BioASP functionality in manipulating influence graphs, allowing for the modelling of large scale regulatory networks and dealing with inconsistency with extensive repair capabilities.</p>
    <p>CytoASP provides customised visualisation in predictions and repair options. Common repairs can be visualised in node and edge repair mode, in addition to determining all repair sets through BioASP. In addition, multiple networks may be selected and analysed simultaneously, taking advantage of parallel processing capabilities. This functionality may be easily incorporated into a network analysis pipeline, through Cytoscape, allowing further analysis and visualisation.</p>
    <p>CytoASP implements seamless and user-friendly integration of modelling graphs through BioASP with visualisation and processing options in Cytoscape. Therefore, it greatly simplifies qualitative network modelling by enabling non-programming experts to apply logical reasoning in gene regulations networks, facilitating its use in relevant Systems Biology projects.</p>
  </sec>
  <sec id="Sec10">
    <title>Availability and requirements</title>
    <p>
      <list list-type="bullet">
        <list-item>
          <p><bold>Project name:</bold> CytoASP</p>
        </list-item>
        <list-item>
          <p>
            <bold>Project home page:</bold>
            <ext-link ext-link-type="uri" xlink:href="https://bitbucket.org/akittas/cytoasp">https://bitbucket.org/akittas/cytoasp</ext-link>
          </p>
        </list-item>
        <list-item>
          <p><bold>Operating system(s):</bold> Linux 64-bit</p>
        </list-item>
        <list-item>
          <p><bold>Execution model:</bold> Multi-threading implementation, allowing the analysis of multiple networks in parallel using all available CPU cores.</p>
        </list-item>
        <list-item>
          <p><bold>Programming language:</bold> Java, Python</p>
        </list-item>
        <list-item>
          <p><bold>Other requirements:</bold> Cytoscape 3.x</p>
        </list-item>
        <list-item>
          <p><bold>License:</bold> MIT license</p>
        </list-item>
      </list>
    </p>
  </sec>
  <sec id="Sec11">
    <title>Endnotes</title>
    <p><sup>1</sup><ext-link ext-link-type="uri" xlink:href="http://bioasp.github.io">http://bioasp.github.io</ext-link>.</p>
    <p><sup>2</sup><ext-link ext-link-type="uri" xlink:href="https://github.com/bioasp/ingranalyze/">https://github.com/bioasp/ingranalyze/</ext-link>.</p>
    <p><sup>3</sup><ext-link ext-link-type="uri" xlink:href="http://mobyle.genouest.org/cgi-bin/Mobyle/portal.py">http://mobyle.genouest.org/cgi-bin/Mobyle/portal.py</ext-link>.</p>
  </sec>
</body>
<back>
  <fn-group>
    <fn>
      <p>
        <bold>Competing interests</bold>
      </p>
      <p>The authors declare that they have no competing interests.</p>
    </fn>
    <fn>
      <p>
        <bold>Authors’ contributions</bold>
      </p>
      <p>Designed the software: AK, Implemented the software: AB, JS, AK, Performed simulations: AK, AB, Analysed results: AK, NG, ST, Wrote the paper: AK, ST. All authors read and approved the final manuscript.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>The authors would like to acknowledge Dr. Carito Guziolowski and Dr. Sven Thiele for helpful discussions. AK acknowledges funding from the Leverhulme Trust (to ST, RPG-2012-686). Funding from the EU (to ST, HEALTH-F2-2011-261366) is gratefully acknowledged.</p>
  </ack>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Samaga</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Klamt</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Modeling approaches for qualitative and semi-quantitative analysis of cellular signaling networks</article-title>
        <source>Cell Commun Sign</source>
        <year>2013</year>
        <volume>11</volume>
        <issue>1</issue>
        <fpage>43</fpage>
        <pub-id pub-id-type="doi">10.1186/1478-811X-11-43</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Siegel</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Radulescu</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Le Borgne</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Qualitative analysis of the relation between DNA microarray data and behavioral models of regulation networks</article-title>
        <source>Bio Syst</source>
        <year>2006</year>
        <volume>84</volume>
        <issue>2</issue>
        <fpage>153</fpage>
        <lpage>74</lpage>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Gebser</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>König</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Schaub</surname>
            <given-names>T</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The BioASP library: ASP solutions for systems biology</article-title>
        <source>2010 22nd IEEE Int. Conf. on Tools with Art. Intel. (ICTAI)</source>
        <year>2010</year>
        <publisher-loc>Arras</publisher-loc>
        <publisher-name>IEEE</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Baral</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <source>Knowledge Representation, Reasoning, and Declarative Problem Solving</source>
        <year>2003</year>
        <publisher-loc>New York, NY, USA</publisher-loc>
        <publisher-name>Cambridge University Press</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Brewka</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Eiter</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Truszczyński</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Answer set programming at a glance</article-title>
        <source>Commun ACM</source>
        <year>2011</year>
        <volume>54</volume>
        <issue>12</issue>
        <fpage>92</fpage>
        <lpage>103</lpage>
        <pub-id pub-id-type="doi">10.1145/2043174.2043195</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Shannon</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Markiel</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Ozier</surname>
            <given-names>O</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Cytoscape: A software environment for integrated models of biomolecular interaction networks</article-title>
        <source>Genome Res</source>
        <year>2003</year>
        <volume>13</volume>
        <issue>11</issue>
        <fpage>2498</fpage>
        <lpage>504</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.1239303</pub-id>
        <?supplied-pmid 14597658?>
        <pub-id pub-id-type="pmid">14597658</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Gebser</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Schaub</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Thiele</surname>
            <given-names>S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Detecting inconsistencies in large biological networks with answer set programming</article-title>
        <source>Logic Programming. Lect. Notes in Comp. Sci.</source>
        <year>2008</year>
        <publisher-loc>Berlin</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Guelzim</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Bottani</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Bourgine</surname>
            <given-names>P</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Topological and causal structure of the yeast transcriptional regulatory network</article-title>
        <source>Nat Genet</source>
        <year>2002</year>
        <volume>31</volume>
        <issue>1</issue>
        <fpage>60</fpage>
        <lpage>3</lpage>
        <pub-id pub-id-type="doi">10.1038/ng873</pub-id>
        <?supplied-pmid 11967534?>
        <pub-id pub-id-type="pmid">11967534</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sudarsanam</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Iyer</surname>
            <given-names>VR</given-names>
          </name>
          <name>
            <surname>Brown</surname>
            <given-names>PO</given-names>
          </name>
          <name>
            <surname>Winston</surname>
            <given-names>F</given-names>
          </name>
        </person-group>
        <article-title>Whole-genome expression analysis of snf/swi mutants of saccharomyces cerevisiae</article-title>
        <source>Proc Nat Acad Sci</source>
        <year>2000</year>
        <volume>97</volume>
        <issue>7</issue>
        <fpage>3364</fpage>
        <lpage>369</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.97.7.3364</pub-id>
        <?supplied-pmid 10725359?>
        <pub-id pub-id-type="pmid">10725359</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>García-Arranz</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Maldonado</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Mazón</surname>
            <given-names>MJ</given-names>
          </name>
          <name>
            <surname>Portillo</surname>
            <given-names>F</given-names>
          </name>
        </person-group>
        <article-title>Transcriptional control of yeast plasma membrane h(+)-ATPase by glucose. cloning and characterization of a new gene involved in this regulation</article-title>
        <source>J Biol Chemi</source>
        <year>1994</year>
        <volume>269</volume>
        <issue>27</issue>
        <fpage>18076</fpage>
        <lpage>82</lpage>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sasaki</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Uemura</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Influence of low glycolytic activities ingcr1 andgcr2 mutants on the expression of other metabolic pathway genes inSaccharomyces cerevisiae</article-title>
        <source>Yeast</source>
        <year>2005</year>
        <volume>22</volume>
        <issue>2</issue>
        <fpage>111</fpage>
        <lpage>27</lpage>
        <pub-id pub-id-type="doi">10.1002/yea.1198</pub-id>
        <?supplied-pmid 15645478?>
        <pub-id pub-id-type="pmid">15645478</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Thomas</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Barbey</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Surdin-Kerjan</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>Gene-enzyme relationship in the sulfate assimilation pathway of saccharomyces cerevisiae. study of the 3’-phosphoadenylylsulfate reductase structural gene</article-title>
        <source>J Biol Chem</source>
        <year>1990</year>
        <volume>265</volume>
        <issue>26</issue>
        <fpage>15518</fpage>
        <lpage>24</lpage>
        <?supplied-pmid 2203779?>
        <pub-id pub-id-type="pmid">2203779</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Baumbach</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Apeltsin</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>Linking Cytoscape and the corynebacterial reference database CoryneRegNet</article-title>
        <source>BMC Genomics</source>
        <year>2008</year>
        <volume>9</volume>
        <issue>1</issue>
        <fpage>184</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2164-9-184</pub-id>
        <?supplied-pmid 18426593?>
        <pub-id pub-id-type="pmid">18426593</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Melas</surname>
            <given-names>IN</given-names>
          </name>
          <name>
            <surname>Samaga</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Alexopoulos</surname>
            <given-names>LG</given-names>
          </name>
          <name>
            <surname>Klamt</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Detecting and removing inconsistencies between experimental data and signaling network topologies using integer linear programming on interaction graphs</article-title>
        <source>PLoS Comput Biol</source>
        <year>2013</year>
        <volume>9</volume>
        <issue>9</issue>
        <fpage>1003204</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1003204</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Guziolowski</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Bourd’e</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Moreews</surname>
            <given-names>F</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>BioQuali cytoscape plugin: analysing the global consistency of regulatory networks</article-title>
        <source>BMC Genomics</source>
        <year>2009</year>
        <volume>10</volume>
        <issue>1</issue>
        <fpage>244</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2164-10-244</pub-id>
        <?supplied-pmid 19470162?>
        <pub-id pub-id-type="pmid">19470162</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16</label>
      <mixed-citation publication-type="other">Gebser M, Guziolowski C, Ivanchev M, et al.Repair and prediction (under inconsistency) in large biological networks with answer set programming. In: Twelfth International Conference on the Principles of Knowledge Representation and Reasoning 2010. <ext-link ext-link-type="uri" xlink:href="http://aaai.org/ocs/index.php/KR/KR2010/paper/view/1334">http://aaai.org/ocs/index.php/KR/KR2010/paper/view/1334</ext-link>.</mixed-citation>
    </ref>
  </ref-list>
</back>

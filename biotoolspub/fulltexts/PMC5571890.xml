<?properties open_access?>
<?subarticle report24522?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v3.0 20080202//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName journalpublishing3.dtd?>
<?SourceDTD.Version 3.0?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Wellcome Open Res</journal-id>
    <journal-id journal-id-type="iso-abbrev">Wellcome Open Res</journal-id>
    <journal-id journal-id-type="pmc">Wellcome Open Res</journal-id>
    <journal-title-group>
      <journal-title>Wellcome Open Research</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2398-502X</issn>
    <publisher>
      <publisher-name>F1000Research</publisher-name>
      <publisher-loc>London, UK</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">5571890</article-id>
    <article-id pub-id-type="pmid">28951892</article-id>
    <article-id pub-id-type="doi">10.12688/wellcomeopenres.12201.1</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software Tool Article</subject>
      </subj-group>
      <subj-group>
        <subject>Articles</subject>
        <subj-group>
          <subject>Bioinformatics</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>WeBCMD: A cross-platform interface for the BCMD modelling framework</article-title>
      <fn-group content-type="pub-status">
        <fn>
          <p>[version 1; referees: 2 approved]</p>
        </fn>
      </fn-group>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Russell-Buckland</surname>
          <given-names>Joshua</given-names>
        </name>
        <role content-type="http://credit.casrai.org/">Conceptualization</role>
        <role content-type="http://credit.casrai.org/">Data Curation</role>
        <role content-type="http://credit.casrai.org/">Resources</role>
        <role content-type="http://credit.casrai.org/">Software</role>
        <role content-type="http://credit.casrai.org/">Writing – Original Draft Preparation</role>
        <contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-7559-1413</contrib-id>
        <xref ref-type="corresp" rid="c1">a</xref>
        <xref ref-type="aff" rid="a1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Caldwell</surname>
          <given-names>Matthew</given-names>
        </name>
        <role content-type="http://credit.casrai.org/">Software</role>
        <role content-type="http://credit.casrai.org/">Writing – Review &amp; Editing</role>
        <xref ref-type="aff" rid="a1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Tachtsidis</surname>
          <given-names>Ilias</given-names>
        </name>
        <role content-type="http://credit.casrai.org/">Funding Acquisition</role>
        <role content-type="http://credit.casrai.org/">Project Administration</role>
        <role content-type="http://credit.casrai.org/">Supervision</role>
        <role content-type="http://credit.casrai.org/">Writing – Review &amp; Editing</role>
        <xref ref-type="aff" rid="a1">1</xref>
      </contrib>
      <aff id="a1"><label>1</label>Department of Medical Physics and Biomedical Engineering, University College London, London, WC1E 6BT, UK</aff>
    </contrib-group>
    <author-notes>
      <corresp id="c1">
        <label>a</label>
        <email xlink:href="mailto:joshua.russell-buckland.15@ucl.ac.uk">joshua.russell-buckland.15@ucl.ac.uk</email>
      </corresp>
      <fn fn-type="COI-statement">
        <p><bold>Competing interests: </bold>No competing interests were disclosed.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="epub">
      <day>26</day>
      <month>7</month>
      <year>2017</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2017</year>
    </pub-date>
    <volume>2</volume>
    <elocation-id>56</elocation-id>
    <history>
      <date date-type="accepted">
        <day>25</day>
        <month>7</month>
        <year>2017</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright: © 2017 Russell-Buckland J et al.</copyright-statement>
      <copyright-year>2017</copyright-year>
      <license xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an open access article distributed under the terms of the Creative Commons Attribution Licence, which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri content-type="pdf" xlink:type="simple" xlink:href="wellcomeopenres-2-13208.pdf"/>
    <abstract>
      <p>Multimodal monitoring of the brain generates a great quantity of data, providing the potential for great insight into both healthy and injured cerebral dynamics. In particular, near-infrared spectroscopy can be used to measure various physiological variables of interest, such as haemoglobin oxygenation and the redox state of cytochrome-c-oxidase, alongside systemic signals, such as blood pressure. Interpreting these measurements is a complex endeavour, and much work has been done to develop mathematical models that can help to provide understanding of the underlying processes that contribute to the overall dynamics. BCMD is a software framework that was developed to run such models. However, obtaining, installing and running this software is no simple task. Here we present WeBCMD, an online environment that attempts to make the process simpler and much more accessible. By leveraging modern web technologies, an extensible and cross-platform package has been created that can also be accessed remotely from the cloud. WeBCMD is available as a Docker image and an online service.</p>
    </abstract>
    <kwd-group kwd-group-type="author">
      <kwd>mathematical modelling</kwd>
      <kwd>web technology</kwd>
      <kwd>cloud platform</kwd>
      <kwd>NIRS</kwd>
    </kwd-group>
    <funding-group>
      <award-group id="fund-1" xlink:href="http://dx.doi.org/10.13039/100004440">
        <funding-source>Wellcome Trust</funding-source>
        <award-id>104580</award-id>
      </award-group>
      <funding-statement>This work was supported by The Wellcome Trust [104580].</funding-statement>
    </funding-group>
  </article-meta>
</front>
<body>
  <sec sec-type="intro">
    <title>Introduction</title>
    <p>Understanding data collected when measuring a biological system can be a complex process. One approach to aid understanding is the use of mathematical models. These can be used alongside the measured data to try and understand the underlying processes that contribute to the observed dynamics. Whilst a lot of time is spent in developing these models, the accessibility and usability of them is often forgotten.</p>
    <p>UCL’s Biomedical Optics Research Laboratory has previously developed two software interfaces for defining and solving complex physiological models, BrainCirc
<sup><xref rid="ref-1" ref-type="bibr">1</xref>,
<xref rid="ref-2" ref-type="bibr">2</xref></sup> and BCMD (Brain/Circulation Model Developer)
<sup><xref rid="ref-3" ref-type="bibr">3</xref></sup>. While the latter provides simplified modelling and improved stability and portability, it remains challenging to install and use, with some facilities, such as parameter optimisation, only easily available on Linux. In addition, the requirement to create detailed input specification files to define simulation parameters constitutes a significant barrier to use by non-technical specialists.</p>
    <p>WeBCMD is an attempt to solve both of these problems by packaging the BCMD framework inside a Docker container and accessing it via a web browser. In taking this approach it has also been possible to develop the interface to access a “cloud service” version of the framework, which is run remotely and managed by the research team. This allows for non-specialists to simply log on to a website and use the software without having to download anything.</p>
    <sec>
      <title>Previous models</title>
      <p>It is important to briefly outline the models for which WeBCMD is intended for use. These models are used to help interpret near infrared spectroscopy (NIRS) measurements of the brain.</p>
      <p>The BCMD modelling framework was developed to run a number of different mathematical models of brain haemodynamics and metabolism. These models are often extremely complex and do require a reasonable amount of domain knowledge to understand. It is recommended that if you are not familiar with these models that you read their relevant papers in order to better understand them.</p>
      <p><bold>BrainSignals.</bold> The WeBCMD framework will focus on using the BrainSignals model
<sup><xref rid="ref-4" ref-type="bibr">4</xref></sup> and its derivatives. BrainSignals is itself a simplification of the earlier model BrainCirc
<sup><xref rid="ref-2" ref-type="bibr">2</xref></sup>, also adding the ability to model metabolism. All of the BrainSignals derived models retain its general structure, with many of the inputs and outputs remaining the same, with small variations to allow for model specific additions, such as scalp blood flow. A simplification of this structure is shown in
<xref ref-type="fig" rid="f1">Figure 1</xref>. There are four constituent submodels - blood flow, oxygen transport from blood to tissue, oxidative metabolism within the tissue, and measurement - with a number of state variables passing information between them. For more information on these, please see Banaji
<italic>et al.</italic>
<sup><xref rid="ref-4" ref-type="bibr">4</xref></sup>.</p>
      <fig fig-type="figure" id="f1" orientation="portrait" position="anchor">
        <label>Figure 1. </label>
        <caption>
          <title>A simplified representation of the BrainSignals structure, as per Caldwell
<italic>et al.</italic>
<sup><xref rid="ref-3" ref-type="bibr">3</xref></sup>.</title>
        </caption>
        <graphic xlink:href="wellcomeopenres-2-13208-g0000"/>
      </fig>
      <p><bold>Derivatives.</bold> A number of derivative models have been built on top of BrainSignals, such as the simplified BSRV
<sup><xref rid="ref-3" ref-type="bibr">3</xref></sup>, which reduced the number of variables and parameters within the model by making various simplifications. This was then developed further to include a scalp submodel and used to investigate the potentially confounding effect of systemic physiological factors on NIRS measurements
<sup><xref rid="ref-5" ref-type="bibr">5</xref></sup>.</p>
      <p>The model was also developed for use in interpreting data from studies using a piglet model, a common surrogate for the neonatal brain. The models based around this data are often called BrainPiglet models
<sup><xref rid="ref-6" ref-type="bibr">6</xref></sup>. Amongst other things, they have been used to investigate the effects of hypoxic-ischemia on the brain
<sup><xref rid="ref-7" ref-type="bibr">7</xref></sup>, including functionality to simulate cell death due to oxygen deprivation.</p>
    </sec>
  </sec>
  <sec sec-type="methods">
    <title>Methods</title>
    <sec>
      <title>Implementation</title>
      <p>WeBCMD was designed to make the BCMD software easily accessible across all operating systems. The software included a number of external dependencies that were either difficult to satisfy or entirely unavailable on Windows and Mac computers. The solution to this was to wrap the entire process inside a Docker container, with all necessary installation steps being handled by the Dockerfile when building the image. This however removed access to the original graphical interface.</p>
      <p>Providing native cross-platform GUI support within a Docker application is impractical. Instead, a web-based interface was developed, using a Python web server to mediate the mathematical modelling. As well as supporting cross-platform use locally, this has the additional benefit of allowing the models to be made available in ‘the cloud’.</p>
      <p>WeBCMD is built primarily around the idea of a "representational state transfer application programming interface" or REST API
<sup><xref rid="ref-8" ref-type="bibr">8</xref></sup>. A ‘request’ is sent from the ‘client’ to ‘server’, which handles the request before sending back a ‘response’, as seen in
<xref ref-type="fig" rid="f2">Figure 2</xref>.</p>
      <fig fig-type="figure" id="f2" orientation="portrait" position="anchor">
        <label>Figure 2. </label>
        <caption>
          <title>A simplified representation of a web API.</title>
        </caption>
        <graphic xlink:href="wellcomeopenres-2-13208-g0001"/>
      </fig>
      <p>REST systems of varying complexity are ubiquitous across the internet. The form used in WeBCMD is quite basic, serving simply to separate the interface from the mathematical modelling. Doing so makes the interface easily extensible through the addition of new API routes, while ensuring that the command line interface remains usable.</p>
      <p>The client side component of the interface is written entirely in HTML, CSS and javascript and is compatible with any modern web browser. Frameworks, such as Bootstrap and AngularJS, which provide a modern and user friendly design, are easily integrated. The server side component uses the Flask micro webframework, written in Python. It uses API routes to interface with the BCMD modelling software, processing JSON requests sent from the browser, then returning model information and outputs.</p>
      <p>Both client-side and server-side components are distributed and installed using Docker, with the files required to build and run the container separate to the WeBCMD code itself. Because the container will run a Linux-based OS, pulling directly to this rather than to the host computer first can avoid problems with different line endings on Windows and Unix-based computers.</p>
      <p>To build the Docker container, Docker will need to be installed [
<ext-link ext-link-type="uri" xlink:href="https://docs.docker.com/engine/installation/">Docker documentation</ext-link>], and if using Linux, Docker Compose will also need installing separately [
<ext-link ext-link-type="uri" xlink:href="https://docs.docker.com/compose/install/">Docker Compose documentation</ext-link>] - it is already included in Docker for Windows and Docker for Mac. Once these have been installed, the WeBCMD Docker files can be downloaded in zipped form or cloned from the
<ext-link ext-link-type="uri" xlink:href="https://github.com/buck06191/WeBCMD">GitHub repository</ext-link>. The latter allows for updates to be easily pushed and installed using Git. After downloading, navigate to the directory using a terminal emulator such as CMD or Powershell on Windows, Terminal on Mac or xterm on Linux. Build the Docker container using the command:</p>
      <p>
        <monospace>docker-compose up</monospace>
      </p>
      <p>which will also load all environment variables.</p>
      <p>There are two Docker containers used in the local distribution: the WeBCMD container, which is the same as that used for the online version, and a MongoDB container. The latter is used to store information about models, such as parameter values and default inputs and outputs. It is expected that over time other features will be added that utilise this database, such as detailed descriptions of the physiological significance of each model variable.</p>
      <p><bold><italic>Other uses.</italic></bold> There are some features that have not yet been fully implemented within the graphical interface, such as sensitivity analysis and model optimisation, and existing users of the software may wish to access these. Whilst these features will not be explored in detail within this paper, this functionality can still be accessed inside the Docker container by using the command line.</p>
      <p>To build and launch the container to do this, a slightly different process is required.</p>
      <list list-type="simple">
        <list-item>
          <label>1. </label>
          <p><bold>Build.</bold> The container needs to be built before running, and the following command needs to be run from inside the directory within the Dockerfile, which ensures that the most recent version of each intermediate container is used:</p>
          <p>
            <monospace>docker build --no-cache --rm -t webcmd:latest.</monospace>
          </p>
        </list-item>
        <list-item>
          <label>2. </label>
          <p><bold>Running.</bold> When using the command line interface, if you want to access and store data on the host computer, you will need to use the ‘working’ directory with the following command. Any data you wish to use with the models must be stored in the
<monospace>host_data</monospace> directory. These can be individual files or child directories.</p>
          <p>
            <monospace>docker run -it -v /home/user/path/to/host_data:/BCMD/working --entrypoint /bin/bash webcmd</monospace>
          </p>
        </list-item>
      </list>
    </sec>
    <sec>
      <title>Operation</title>
      <p>The WeBCMD software is available via two main methods: accessing the software via “the cloud", by visiting the WeBCMD website or by downloading the software and running it from inside the Docker container. It is also possible, though not recommended, to run the interface directly using Python. This is most likely to work if the operating system used is a Unix variant, as this is the operating system used within the Docker container.</p>
      <p>If accessing the online version of the software, all models and their associated information have already been compiled and stored. The user needs only to follow the on screen steps.</p>
      <p>If using the local distribution, the installation steps outlined above will need to be followed. Once this has been done and the containers built and launched, models must be compiled and their information uploaded to the local database. This can be done by accessing the Admin panel in the navigation menu. The local distribution has its own admin user and password that give access to this section. They are</p>
      <p>                                                        
<bold>USER:</bold>    LOCAL_USER</p>
      <p>                                            
<bold>PASSWORD:</bold>    LOCAL_PASSWORD</p>
      <p>Inside the admin section of the interface there are the options to compile a model and to upload model information. Models will need compiling before information can be uploaded, as the model information is generated by running the model itself. Once this has been done, returning to the ‘Home’ tab allows users to review the models that have been compiled and to run them.</p>
    </sec>
  </sec>
  <sec>
    <title>Use cases</title>
    <p>There are two distinct use cases for the WeBCMD software at present:</p>
    <list list-type="simple">
      <list-item>
        <label>1. </label>
        <p>Running a model</p>
      </list-item>
      <list-item>
        <label>2. </label>
        <p>Comparing steady state simulations of autoregulation against a default BrainSignals run</p>
      </list-item>
    </list>
  </sec>
  <sec>
    <title>Running a model</title>
    <p>There are 7 main steps to running a model in WeBCMD, once it has been compiled and its data uploaded.
<xref ref-type="fig" rid="f3">Figure 3</xref> shows the general process of running a model in the WeBCMD interface. We will outline this in three specific use cases:</p>
    <fig fig-type="figure" id="f3" orientation="portrait" position="anchor">
      <label>Figure 3. </label>
      <caption>
        <title>Model run process.</title>
      </caption>
      <graphic xlink:href="wellcomeopenres-2-13208-g0002"/>
    </fig>
    <list list-type="simple">
      <list-item>
        <label>1. </label>
        <p>A Lotka-Volterra model that requires no input data, run with the default parameters and model inputs and outputs;</p>
      </list-item>
      <list-item>
        <label>2. </label>
        <p>Driving a BrainSignals model with systemic data, with non-default parameter values;</p>
      </list-item>
      <list-item>
        <label>3. </label>
        <p>Simulating a number of functional activation tests in BrainSignals, using the demand function generator to create this demand data.</p>
      </list-item>
    </list>
    <p>
      <bold>
        <italic>Lotka-Volterra.</italic>
      </bold>
      <italic>The Lotka-Volterra model outlined here is available as part of the WeBCMD distribution. However, solving models such as this is not the intended use of WeBCMD, and there are likely more efficient methods of running and investigating such a model.</italic>
    </p>
    <p>The Lotka-Volterra model is a commonly used model for Predator-Prey dynamics in ecology
<sup><xref rid="ref-9" ref-type="bibr">9</xref></sup>. The version shown here consists of two equations</p>
    <p>
      <disp-formula id="e2">
        <mml:math id="math2">
          <mml:mtable columnalign="left">
            <mml:mtr>
              <mml:mtd>
                <mml:mfrac>
                  <mml:mrow>
                    <mml:mtext>d</mml:mtext>
                    <mml:mi>x</mml:mi>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:mtext>d</mml:mtext>
                    <mml:mi>t</mml:mi>
                  </mml:mrow>
                </mml:mfrac>
                <mml:mo>=</mml:mo>
                <mml:mi>a</mml:mi>
                <mml:mi>x</mml:mi>
                <mml:mo>−</mml:mo>
                <mml:mi>b</mml:mi>
                <mml:mi>x</mml:mi>
                <mml:mi>y</mml:mi>
              </mml:mtd>
            </mml:mtr>
            <mml:mtr>
              <mml:mtd>
                <mml:mfrac>
                  <mml:mrow>
                    <mml:mtext>d</mml:mtext>
                    <mml:mi>y</mml:mi>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:mtext>d</mml:mtext>
                    <mml:mi>t</mml:mi>
                  </mml:mrow>
                </mml:mfrac>
                <mml:mo>=</mml:mo>
                <mml:mi>c</mml:mi>
                <mml:mi>x</mml:mi>
                <mml:mi>y</mml:mi>
                <mml:mo>−</mml:mo>
                <mml:mi>d</mml:mi>
                <mml:mi>y</mml:mi>
              </mml:mtd>
            </mml:mtr>
          </mml:mtable>
        </mml:math>
      </disp-formula>
    </p>
    <p>where
<italic>x</italic> represents the number of prey in the system,
<italic>y</italic> represents the number of predators in the system,
<italic>t</italic> is time and
<italic>a</italic>,
<italic>b</italic>,
<italic>c</italic>,
<italic>d</italic> are positive, real parameters representing the interactions between the two species.</p>
    <p>This model will be simulated using a ‘Default Run’, where all parameters are set to their default values and any changes made to them by the user will not be included in the simulation.</p>
    <p>The seven main steps to running this model are:</p>
    <list list-type="simple">
      <list-item>
        <label>1. </label>
        <p>Select ‘Lotka-Volterra’ in the model select screen.</p>
      </list-item>
      <list-item>
        <label>2. </label>
        <p>No data is uploaded, so simply click next.</p>
      </list-item>
      <list-item>
        <label>3. </label>
        <p>Generate time data here by choosing start and end times, as well as the desired time step, before clicking ‘Generate Time’. Once the time data has been generated ‘t’ will appear in the inputs list at the top of the screen.</p>
      </list-item>
      <list-item>
        <label>4. </label>
        <p>Demand is BrainSignals specific and so is not required. De-select the checkbox here before clicking next.</p>
      </list-item>
      <list-item>
        <label>5. </label>
        <p>Because we are using default parameters, simply advance to the next page without altering any values.</p>
      </list-item>
      <list-item>
        <label>6. </label>
        <p>On the ‘Default’ tab, choose our time point data, which in this case is
<monospace>t</monospace>. All inputs and outputs are the defaults found in the original model definition. Clicking ‘Run Model’ will send the information to the backend of the interface. When the model output has been returned it will then be possible to click ‘Next’.</p>
      </list-item>
      <list-item>
        <label>7. </label>
        <p>On this final screen it is possible to visualise and download the returned model data as a comma-separated values (.csv) file. This can the be compared to the
<monospace>model-output-LV.csv</monospace> file.</p>
      </list-item>
    </list>
    <p><bold><italic>BrainSignals.</italic></bold> The BrainSignals models are a collection of models that represent the physiological dynamics of the brain. The version referenced here is the original BrainSignals model. For this model, input data is used to drive various inputs, such as blood pressure, partial pressure of CO
<sub>2</sub> and arterial oxygen saturation.</p>
    <p>There are two different run types demonstrated here. The first uses systemic data to drive the model, whilst the second uses the built in ‘demand creator’ to simulate a number of demand increases.</p>
    <p><bold>Systemic data.</bold> The seven steps to running this simulation are:</p>
    <list list-type="simple">
      <list-item>
        <label>1. </label>
        <p>Select ‘BrainSignals’ in the model select screen.</p>
      </list-item>
      <list-item>
        <label>2. </label>
        <p>Click “Browse...” and select the supplied data, which has a default name of
<monospace>synthetic_input_data.csv</monospace>. Select all of the options as inputs, and confirm. You can leave outputs blank.</p>
      </list-item>
      <list-item>
        <label>3. </label>
        <p>Click ‘Next’ on the time creation screen as this information is provided in the input file.</p>
      </list-item>
      <list-item>
        <label>4. </label>
        <p>As we are not simulating functional activation here, we don’t need to create a demand trace so just click ‘Next’ here.</p>
      </list-item>
      <list-item>
        <label>5. </label>
        <p>Alter parameters to whatever values are desired - in this case the supplied output data was generated by increasing the parameter
<monospace>R_autp to 6</monospace>.</p>
      </list-item>
      <list-item>
        <label>6. </label>
        <p>On the ‘Custom’ tab, select the time data to be our
<monospace>t</monospace> data. Then select the appropriate input data for each input parameter:
<monospace>Pa</monospace> for ‘P_a’,
<monospace>PaCO2</monospace> for ‘Pa_CO2’ and
<monospace>SaO2</monospace> for ‘SaO2sup’. Leave all output values as their default settings and then set the ‘Burn in’ time to ‘250’ seconds. Click ‘Run Model’ and when the model has finished running click to visualise on the next screen.</p>
      </list-item>
      <list-item>
        <label>7. </label>
        <p>On this final screen it is possible to visualise and download the returned model data as a comma-separated values (.csv) file. This can the be compared to the
<monospace>model-output-BS-systemic.csv</monospace> file.</p>
      </list-item>
    </list>
    <p><bold>Changing demand.</bold> The second run type doesn’t use any input data and instead generates a synthetic input demand. The demand created is not physiologically accurate, but is instead used as a way of showing the possibilities of this functionality. It is expected that more demand input types will be added over time.</p>
    <list list-type="simple">
      <list-item>
        <label>1. </label>
        <p>Select ‘BrainSignals’ in the model select screen.</p>
      </list-item>
      <list-item>
        <label>2. </label>
        <p>Click ‘Next’ on this screen as no input data is needed.</p>
      </list-item>
      <list-item>
        <label>3. </label>
        <p>Set the final time to 1000 seconds and click ‘Generate Time’. Once the time data has been created, the inputs section at the top will now contain the letter
<monospace>t</monospace>. Click ‘Next’.</p>
      </list-item>
      <list-item>
        <label>4. </label>
        <p>The Demand Creation page will have detected the information from the previous screen and already filled in the Start and End times, as well as the time interval.</p>
        <p>To create a demand peak, click ‘Add Another Peak’. For this example, set the start time for the peak to 120, the end time to 180, the peak height to 5 and select a peak type of ‘Top Hat’. This will create a single square wave with a height of 5 and lasting 60 seconds, starting at 120 seconds. We will repeat this 3 times by clicking repeat peak, typing in 3 for the number of repeats and setting an interval of 60 seconds between each. You can preview this by clicking ‘Generate Demand’.</p>
        <p>We will then add 3 more demand peaks of a different type. Click ‘Add Another Peak’ and enter a start time of 480, end time of 540, peak hight of 5 and select a peak type of ‘Wavelet’. Select ‘Repeat peak’ and repeat it 3 times with an interval of 60 seconds. Click ‘Generate Demand’ and you should get a figure like that in
<xref ref-type="fig" rid="f4">Figure 4</xref>. Click ‘Next’.</p>
      </list-item>
      <list-item>
        <label>5. </label>
        <p>We will leave all parameters at their default values.</p>
      </list-item>
      <list-item>
        <label>6. </label>
        <p>On the ‘Default’ tab, select the time data, t, to be our ‘t’ data and u to be‘u’. Click ‘Run Model’ and when the model has finished running click to visualise on the next screen.</p>
      </list-item>
      <list-item>
        <label>7. </label>
        <p>On this final screen it is possible to visualise and download the returned model data as a comma-separated values (.csv) file. This can the be compared to the
<monospace>model-output-BS-demand.csv</monospace> file.</p>
      </list-item>
    </list>
    <fig fig-type="figure" id="f4" orientation="portrait" position="anchor">
      <label>Figure 4. </label>
      <caption>
        <title>Example demand trace.</title>
      </caption>
      <graphic xlink:href="wellcomeopenres-2-13208-g0003"/>
    </fig>
    <sec>
      <title>Steady state simulations of autoregulation</title>
      <p>Steady state simulations of autoregulation are a way of considering the validity of a haemodynamic model like BrainSignals. By altering a single input value, running the model for a period of time and then altering it again, it is possible to compare the autoregulation response of the model to a default data set created using the ‘Default BrainSignals Model’. The input values changed are the arterial blood pressure (
<italic>P
<sub>a</sub></italic>), oxygen saturation (
<italic>Sa</italic>O
<sub>2</sub>) and partial pressure of carbon dioxide (
<italic>Pa</italic>CO
<sub>2</sub>).</p>
      <p>To run a steady state simulation, simply go to the Steady State tab and choose a model. After doing this, you have the option of changing any model parameters, allowing you to visualise their effect on the steady state autoregulation curve. You can then choose whether top run the steady state simulation varying the paramaters in one of three ways:</p>
      <list list-type="bullet" id="L1">
        <list-item>
          <p><bold>Up</bold>: Vary from min to max</p>
        </list-item>
        <list-item>
          <p><bold>Down</bold>: Vary from max to min</p>
        </list-item>
        <list-item>
          <p><bold>Both</bold>: Vary from min to max to min, allowing for the detection of hysteresis</p>
        </list-item>
      </list>
      <p>Once the model has finished running, going to the next page allows you to visualise the autoregulation curve for this model run alongside the Default BrainSignals curve.</p>
      <p><xref ref-type="fig" rid="f5">Figure 5</xref> shows the steady state response curves, when varying from min to max (up), for the BrainSignals model with the
<monospace>R_auto</monospace> parameter, which is responsible for the autoregulatory reactivity to oxygen, set to 6.</p>
      <fig fig-type="figure" id="f5" orientation="portrait" position="anchor">
        <label>Figure 5. </label>
        <caption>
          <title>Example steady state output.</title>
          <p>In blue is the response curve for the default BrainSignals model and in orange is the response curve for this model run’s settings (
<monospace>R_auto=6</monospace>).</p>
        </caption>
        <graphic xlink:href="wellcomeopenres-2-13208-g0004"/>
      </fig>
    </sec>
  </sec>
  <sec>
    <title>Summary</title>
    <p>When dealing with mathematical models that are themselves complex, it is import to simplify the process of running and analysing these models as much as is possible. If not, there is a risk that the use of the models by non-technical experts will be limited, preventing the potential for insights from the wider scientific community.</p>
    <p>WeBCMD has taken the BCMD framework for brain circulation models and made it significantly easier to install and run. The process of installing and managing dependencies can be handled by the framework developers, leaving the process of running and analysing the models to the user. Additionally, the web interface has made input file creation significantly easier by breaking it into easy to follow steps.</p>
    <p>The final, and arguably most significant, benefit of the new interface is the cloud based web app. Users who are unable to install the software or simply wish to test the model out before installing are now able to do so by simply accessing a website. The benefits of opening up the modelling software in this manner cannot be overstated. By removing the obvious barrier of installation, the framework and its associated models are now accessible to anyone with access to the internet. This also means that the most recent and stable models will be easily accessible.</p>
  </sec>
  <sec>
    <title>Software and data availability</title>
    <p>Web app:
<ext-link ext-link-type="uri" xlink:href="http://www.webcmd.org">http://www.webcmd.org</ext-link>
</p>
    <p>Source code:
<ext-link ext-link-type="uri" xlink:href="https://github.com/buck06191/WeBCMD">https://github.com/buck06191/WeBCMD</ext-link>
</p>
    <p>Archived source code as at time of publication: WeBCMD is distributed across two repositories. The dockerised distribution can be found at
<ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5281/zenodo.832795">https://doi.org/10.5281/zenodo.832795</ext-link>
<sup><xref rid="ref-10" ref-type="bibr">10</xref></sup> and is the main source for the software. The dockerised container pulls from a second repository that can be found at
<ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5281/zenodo.834661">https://doi.org/10.5281/zenodo.834661</ext-link>
<sup><xref rid="ref-11" ref-type="bibr">11</xref></sup>. The second repository is not intended for direct use.</p>
    <p>License: MIT</p>
    <p>All data files are available via Zenodo
<ext-link ext-link-type="uri" xlink:href="http://doi.org/10.5281/zenodo.817467">http://doi.org/10.5281/zenodo.817467</ext-link>
<sup><xref rid="ref-12" ref-type="bibr">12</xref></sup>.</p>
  </sec>
</body>
<back>
  <ref-list>
    <ref id="ref-1">
      <label>1</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Banaji</surname><given-names>M</given-names></name><name><surname>Moroz</surname><given-names>T</given-names></name></person-group>:
<article-title>The Braincirc modelling environment</article-title>.
<ext-link ext-link-type="uri" xlink:href="https://sourceforge.net/projects/braincirc/">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-2">
      <label>2</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Banaji</surname><given-names>M</given-names></name></person-group>:
<article-title>The BRAINCIRC model: Modelling the Human Brain Circulation</article-title>.<year>2004</year><ext-link ext-link-type="uri" xlink:href="http://www.medphys.ucl.ac.uk/braincirc/">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-3">
      <label>3</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Caldwell</surname><given-names>M</given-names></name><name><surname>Hapuarachchi</surname><given-names>T</given-names></name><name><surname>Highton</surname><given-names>D</given-names></name><etal/></person-group>:
<article-title>BrainSignals Revisited: Simplifying a Computational Model of Cerebral Physiology.</article-title><source><italic>PLoS One.</italic></source><year>2015</year>;<volume>10</volume>(<issue>5</issue>):<fpage>e0126695</fpage>.
<pub-id pub-id-type="doi">10.1371/journal.pone.0126695</pub-id><!--<pub-id pub-id-type="pmcid">4427507</pub-id>--><?supplied-pmid 25961297?><pub-id pub-id-type="pmid">25961297</pub-id></mixed-citation>
    </ref>
    <ref id="ref-4">
      <label>4</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Banaji</surname><given-names>M</given-names></name><name><surname>Mallet</surname><given-names>A</given-names></name><name><surname>Elwell</surname><given-names>CE</given-names></name><etal/></person-group>:
<article-title>A model of brain circulation and metabolism: NIRS signal changes during physiological challenges.</article-title><source><italic>PLoS Comput Biol.</italic></source><year>2008</year>;<volume>4</volume>(<issue>11</issue>):<fpage>e1000212</fpage>.
<pub-id pub-id-type="doi">10.1371/journal.pcbi.1000212</pub-id><!--<pub-id pub-id-type="pmcid">2573000</pub-id>--><?supplied-pmid 18989392?><pub-id pub-id-type="pmid">18989392</pub-id></mixed-citation>
    </ref>
    <ref id="ref-5">
      <label>5</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Caldwell</surname><given-names>M</given-names></name><name><surname>Scholkmann</surname><given-names>F</given-names></name><name><surname>Wolf</surname><given-names>U</given-names></name><etal/></person-group>:
<article-title>Modelling confounding effects from extracerebral contamination and systemic factors on functional near-infrared spectroscopy.</article-title><source><italic>Neuroimage.</italic></source><year>2016</year>;<volume>143</volume>:<fpage>91</fpage>–<lpage>105</lpage>.
<pub-id pub-id-type="doi">10.1016/j.neuroimage.2016.08.058</pub-id><!--<pub-id pub-id-type="pmcid">5139986</pub-id>--><?supplied-pmid 27591921?><pub-id pub-id-type="pmid">27591921</pub-id></mixed-citation>
    </ref>
    <ref id="ref-6">
      <label>6</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Moroz</surname><given-names>T</given-names></name><name><surname>Banaji</surname><given-names>M</given-names></name><name><surname>Robertson</surname><given-names>NJ</given-names></name><etal/></person-group>:
<article-title>Computational modelling of the piglet brain to simulate near-infrared spectroscopy and magnetic resonance spectroscopy data collected during oxygen deprivation.</article-title><source><italic>J R Soc Interface.</italic></source><year>2012</year>;<volume>9</volume>(<issue>72</issue>):<fpage>1499</fpage>–<lpage>509</lpage>.
<pub-id pub-id-type="doi">10.1098/rsif.2011.0766</pub-id><!--<pub-id pub-id-type="pmcid">3367814</pub-id>--><?supplied-pmid 22279158?><pub-id pub-id-type="pmid">22279158</pub-id></mixed-citation>
    </ref>
    <ref id="ref-7">
      <label>7</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Caldwell</surname><given-names>M</given-names></name><name><surname>Moroz</surname><given-names>T</given-names></name><name><surname>Hapuarachchi</surname><given-names>T</given-names></name><etal/></person-group>:
<article-title>Modelling Blood Flow and Metabolism in the Preclinical Neonatal Brain during and Following Hypoxic-Ischaemia.</article-title><source><italic>PLoS One.</italic></source><year>2015</year>;<volume>10</volume>(<issue>10</issue>):<fpage>e0140171</fpage>.
<pub-id pub-id-type="doi">10.1371/journal.pone.0140171</pub-id><!--<pub-id pub-id-type="pmcid">4596480</pub-id>--><?supplied-pmid 26445281?><pub-id pub-id-type="pmid">26445281</pub-id></mixed-citation>
    </ref>
    <ref id="ref-8">
      <label>8</label>
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Massé</surname><given-names>M</given-names></name></person-group>:
<article-title>REST API design rulebook</article-title>. O’Reilly,<year>2012</year><ext-link ext-link-type="uri" xlink:href="https://doc.lagout.org/programmation/Webservers/REST%20API%20Design%20Rulebook%20-%20Masse%20-%20O%27Reilly%20%282012%29/REST%20API%20Design%20Rulebook%20-%20Masse%20-%20O%27Reilly%20%282012%29.pdf">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-9">
      <label>9</label>
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Freedman</surname><given-names>HI</given-names></name></person-group>:
<article-title>Deterministic mathematical models in population ecology</article-title>. Dekker M,<year>1980</year><ext-link ext-link-type="uri" xlink:href="https://books.google.co.in/books/about/Deterministic_mathematical_models_in_pop.html?id=0ggUAQAAIAAJ&amp;redir_esc=y">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-10">
      <label>10</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Russell-Buckland</surname><given-names>J</given-names></name></person-group>:
<article-title>buck06191/WeBCMD:WeBCMD Version 1.</article-title><source><italic>Zenodo.</italic></source><year>2017</year><ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.5281/zenodo.832795">Data Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-11">
      <label>11</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Russell-Buckland</surname><given-names>J</given-names></name></person-group>:
<article-title>buck06191/WeBCMD:WeBCMD Version 1.</article-title><source><italic>Zenodo.</italic></source><year>2017</year><ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5281/zenodo.834661">Data Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-12">
      <label>12</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Russell-Buckland</surname><given-names>J</given-names></name><name><surname>Caldwell</surname><given-names>M</given-names></name><name><surname>Tachtsidis</surname><given-names>I</given-names></name></person-group>:
<article-title>WeBCMD: A Cross-Platform Interface for the BCMD Modelling Framework.</article-title><source><italic>Zenodo.</italic></source><year>2017</year><ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.5281/zenodo.817467">Data Source</ext-link></mixed-citation>
    </ref>
  </ref-list>
</back>
<sub-article id="report24522" article-type="peer-review">
  <front-stub>
    <article-id pub-id-type="doi">10.21956/wellcomeopenres.13208.r24522</article-id>
    <title-group>
      <article-title>Referee response for version 1</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Diamond</surname>
          <given-names>Solomon G.</given-names>
        </name>
        <xref ref-type="aff" rid="r24522a1">1</xref>
        <role>Referee</role>
      </contrib>
      <aff id="r24522a1"><label>1</label>Thayer School of Engineering,  Dartmouth College, Hanover, NH, USA</aff>
    </contrib-group>
    <author-notes>
      <fn fn-type="COI-statement">
        <p><bold>Competing interests: </bold>No competing interests were disclosed.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="epub">
      <day>22</day>
      <month>8</month>
      <year>2017</year>
    </pub-date>
    <related-article id="d35e1272" related-article-type="peer-reviewed-article" ext-link-type="doi" xlink:href="10.12688/wellcomeopenres.12201.1">Version 1</related-article>
    <custom-meta-group>
      <custom-meta>
        <meta-name>recommendation</meta-name>
        <meta-value>approve</meta-value>
      </custom-meta>
    </custom-meta-group>
  </front-stub>
  <body>
    <p>One of the biggest ongoing challenges in neuroimaging research is to accurately interpret measurements in terms of brain physiology and rather than mapping of signal or statistical contrast. Multimodal monitoring of the brain generally and specific tools such as near-infrared spectroscopy help to provide the needed measurements but models of dynamic brain physiology are critically needed for data interpretation. Emerging models of dynamic brain physiology address this need but barriers remain in model implementation for broad dissemination and collaboration in research community. WeBCMD addresses these barriers and has the potential to accelerate scientific advancement in the field.</p>
    <p> WeBCMD in its current form is already a functional and useful research tool. I was particularly pleased to see the steady state simulations of autoregulation since this check of model validity is too often omitted. I agree with the other referee that addition of units for all the parameter values is needed. The variables should also have units and those should be reported in the exported data. Dimensional analysis is one of the key approaches for novices to begin understanding model terms, inputs and outputs and for experts to debug the models.</p>
    <p> My other request is that information be provided about computational load when running online such as memory and computing time. It is quite easy to define models or simulation runs with highly intensive computational demands and so this must always be kept in mind by users and developers alike.</p>
    <p>I have read this submission. I believe that I have an appropriate level of expertise to confirm that it is of an acceptable scientific standard.</p>
  </body>
</sub-article>
<sub-article id="report24518" article-type="peer-review">
  <front-stub>
    <article-id pub-id-type="doi">10.21956/wellcomeopenres.13208.r24518</article-id>
    <title-group>
      <article-title>Referee response for version 1</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Payne</surname>
          <given-names>Stephen J.</given-names>
        </name>
        <xref ref-type="aff" rid="r24518a1">1</xref>
        <role>Referee</role>
        <contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-1156-2810</contrib-id>
      </contrib>
      <aff id="r24518a1"><label>1</label>Institute of Biomedical Engineering, Department of Engineering Science, University of Oxford, Oxford, UK</aff>
    </contrib-group>
    <author-notes>
      <fn fn-type="COI-statement">
        <p><bold>Competing interests: </bold>No competing interests were disclosed.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="epub">
      <day>7</day>
      <month>8</month>
      <year>2017</year>
    </pub-date>
    <related-article id="d35e1331" related-article-type="peer-reviewed-article" ext-link-type="doi" xlink:href="10.12688/wellcomeopenres.12201.1">Version 1</related-article>
    <custom-meta-group>
      <custom-meta>
        <meta-name>recommendation</meta-name>
        <meta-value>approve</meta-value>
      </custom-meta>
    </custom-meta-group>
  </front-stub>
  <body>
    <p>One of the main difficulties in the exploitation of mathematical modelling of physiological systems is the fact that it remains highly challenging to reproduce published results. The problems associated with missing or inconsistent equations and/or parameter values will be well known to every researcher who has attempted to implement a mathematical model from the literature. However, without such models being fully reproducible, it is difficult to use them in any meaningful way. There have been some steps in the direction of model repositories, for example the CellML database (https://www.cellml.org/), which is based on the XML markup language. Despite this, these repositories do require users to download and to learn to use particular software, which can be at different levels of development and require a considerable effort to run. For the dedicated user, such an effort can well be worthwhile; it does, however, make the barrier to entry into the field quite high.</p>
    <p> The approach adopted in this article is thus to try to remove as many of these barriers as possible, which is a thoroughly welcome step. The models that have been implemented have been developed over the last 10-15 years and are now well-established in the field of cerebral blood flow and metabolism. They can be used with confidence, and the equations and parameter values are presented clearly both here and in the literature.</p>
    <p> I used the model directly through the webpage (I did not try the alternative approach of downloading it and running it from inside the Docker container). For a first release it is wisely kept deliberately simple and the model parameters are clearly presented with default values. It was extremely easy to use and the simulations were completed very quickly with the very useful feature of being able to download the results in .csv format. It is helpful to have the Lotka-Volterra example so that users can try a very simple model first if desired.</p>
    <p> This is thus an enormously positive and helpful piece of work, smoothing the path to entry very considerably. Any user can run the model directly from the webpage. The only barrier to entry is now being able to understand the physiological model being implemented. It will be extremely helpful in exploiting these models and it would be hoped that in the future other models will be added to develop a 'one-stop shop' for such models. There are a few minor typos that could usefully be ironed out and I am sure that the authors plan to add a few more features in future (top of my request list would be the addition of units for all the parameter values!); however, I applaud the authors for what they have achieved already and look forward to its future development.</p>
    <p>I have read this submission. I believe that I have an appropriate level of expertise to confirm that it is of an acceptable scientific standard.</p>
  </body>
</sub-article>

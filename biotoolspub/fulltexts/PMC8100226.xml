<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v2.3 20070202//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName journalpublishing.dtd?>
<?SourceDTD.Version 2.3?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Front Neuroinform</journal-id>
    <journal-id journal-id-type="iso-abbrev">Front Neuroinform</journal-id>
    <journal-id journal-id-type="publisher-id">Front. Neuroinform.</journal-id>
    <journal-title-group>
      <journal-title>Frontiers in Neuroinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1662-5196</issn>
    <publisher>
      <publisher-name>Frontiers Media S.A.</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">8100226</article-id>
    <article-id pub-id-type="doi">10.3389/fninf.2021.561689</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Neuroscience</subject>
        <subj-group>
          <subject>Technology and Code</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>QDECR: A Flexible, Extensible Vertex-Wise Analysis Framework in R</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Lamballais</surname>
          <given-names>Sander</given-names>
        </name>
        <xref ref-type="aff" rid="aff1">
          <sup>1</sup>
        </xref>
        <xref ref-type="aff" rid="aff2">
          <sup>2</sup>
        </xref>
        <xref ref-type="corresp" rid="c001">
          <sup>*</sup>
        </xref>
        <uri xlink:type="simple" xlink:href="http://loop.frontiersin.org/people/803859/overview"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Muetzel</surname>
          <given-names>Ryan L.</given-names>
        </name>
        <xref ref-type="aff" rid="aff2">
          <sup>2</sup>
        </xref>
        <xref ref-type="aff" rid="aff3">
          <sup>3</sup>
        </xref>
        <uri xlink:type="simple" xlink:href="http://loop.frontiersin.org/people/395304/overview"/>
      </contrib>
    </contrib-group>
    <aff id="aff1"><sup>1</sup><institution>Department of Clinical Genetics, Erasmus MC University Medical Center</institution>, <addr-line>Rotterdam</addr-line>, <country>Netherlands</country></aff>
    <aff id="aff2"><sup>2</sup><institution>Department of Epidemiology, Erasmus MC University Medical Center</institution>, <addr-line>Rotterdam</addr-line>, <country>Netherlands</country></aff>
    <aff id="aff3"><sup>3</sup><institution>Department of Child and Adolescent Psychiatry/Psychology, Erasmus MC University Medical Center</institution>, <addr-line>Rotterdam</addr-line>, <country>Netherlands</country></aff>
    <author-notes>
      <fn fn-type="edited-by">
        <p>Edited by: Pedro Antonio Valdes-Sosa, University of Electronic Science and Technology of China, China</p>
      </fn>
      <fn fn-type="edited-by">
        <p>Reviewed by: Theodore Satterthwaite, University of Pennsylvania, United States; Mike Hawrylycz, Allen Institute for Brain Science, United States</p>
      </fn>
      <corresp id="c001">*Correspondence: Sander Lamballais, <email>s.lamballaistessensohn@erasmusmc.nl</email></corresp>
    </author-notes>
    <pub-date pub-type="epub">
      <day>22</day>
      <month>4</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2021</year>
    </pub-date>
    <volume>15</volume>
    <elocation-id>561689</elocation-id>
    <history>
      <date date-type="received">
        <day>13</day>
        <month>5</month>
        <year>2020</year>
      </date>
      <date date-type="accepted">
        <day>29</day>
        <month>3</month>
        <year>2021</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright © 2021 Lamballais and Muetzel.</copyright-statement>
      <copyright-year>2021</copyright-year>
      <copyright-holder>Lamballais and Muetzel</copyright-holder>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License (CC BY). The use, distribution or reproduction in other forums is permitted, provided the original author(s) and the copyright owner(s) are credited and that the original publication in this journal is cited, in accordance with accepted academic practice. No use, distribution or reproduction is permitted which does not comply with these terms.</license-p>
      </license>
    </permissions>
    <abstract>
      <p>The cerebral cortex is fundamental to the functioning of the mind and body. <italic>In vivo</italic> cortical morphology can be studied through magnetic resonance imaging in several ways, including reconstructing surface-based models of the cortex. However, existing software for surface-based statistical analyses cannot accommodate “big data” or commonly used statistical methods such as the imputation of missing data, extensive bias correction, and non-linear modeling. To address these shortcomings, we developed the QDECR package, a flexible and extensible R package for group-level statistical analysis of cortical morphology. QDECR was written with large population-based epidemiological studies in mind and was designed to fully utilize the extensive modeling options in R. QDECR currently supports vertex-wise linear regression. Design matrix generation can be done through simple, familiar R formula specification, and includes user-friendly extensions for R options such as polynomials, splines, interactions and other terms. QDECR can handle unimputed and imputed datasets with thousands of participants. QDECR has a modular design, and new statistical models can be implemented which utilize several aspects from other generic modules which comprise QDECR. In summary, QDECR provides a framework for vertex-wise surface-based analyses that enables flexible statistical modeling and features commonly used in population-based and clinical studies, which have until now been largely absent from neuroimaging research.</p>
    </abstract>
    <kwd-group>
      <kwd>cerebral cortex</kwd>
      <kwd>neuroimaging</kwd>
      <kwd>statistics</kwd>
      <kwd>surface-based</kwd>
      <kwd>vertex-wise analysis</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source id="cn001">Horizon 2020 Framework Programme<named-content content-type="fundref-id">10.13039/100010661</named-content></funding-source>
      </award-group>
      <award-group>
        <funding-source id="cn002">Stichting Vrienden van het Sophia<named-content content-type="fundref-id">10.13039/501100009480</named-content></funding-source>
      </award-group>
      <award-group>
        <funding-source id="cn003">Erasmus Universiteit Rotterdam<named-content content-type="fundref-id">10.13039/501100001828</named-content></funding-source>
      </award-group>
    </funding-group>
    <counts>
      <fig-count count="4"/>
      <table-count count="2"/>
      <equation-count count="2"/>
      <ref-count count="24"/>
      <page-count count="10"/>
      <word-count count="0"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec id="S1">
    <title>Introduction</title>
    <p>The cerebral cortex is integral to human psychological and physical functioning, and has been studied for centuries (<xref rid="B6" ref-type="bibr">Fan and Markram, 2019</xref>). Modern neuroimaging techniques have enabled non-invasive assessment of the cortex, which has led to a myriad of studies elucidating the antecedents and consequences of typical and atypical cortical features. One common method for obtaining <italic>in vivo</italic> brain scans is with magnetic resonance imaging (MRI). The images begin as a grid of 3-dimensional grayscale pixels (voxels) which are commonly further processed by classifying (segmenting) the voxels into gray matter, white matter and cerebrospinal fluid components (<xref rid="B23" ref-type="bibr">Wright et al., 1995</xref>). Other tools subsequently trace and isolate the cortex to create surface-based representations of the brain as a series of interconnected points (vertices) forming a 2D mesh (<xref rid="B5" ref-type="bibr">Dale and Sereno, 1993</xref>; <xref rid="B7" ref-type="bibr">Fischl, 2012</xref>). Specific characteristics of the cortex like its thickness or curvature can be derived from these surface representations at unique locations across the cortical mantle. These maps tend to consist of hundreds of thousands of vertices, allowing the study of the cerebral cortex at a fine-grain resolution. With advent of <italic>population neuroscience</italic> (<xref rid="B14" ref-type="bibr">Paus, 2010</xref>) and the introduction of several large-scale open-access neuroimaging initiatives (<xref rid="B3" ref-type="bibr">Alfaro-Almagro et al., 2018</xref>; <xref rid="B4" ref-type="bibr">Casey et al., 2018</xref>), it is imperative that the neuroimaging community has a repertoire of tools available which are able to accommodate these massive, high dimensional data sets.</p>
    <p>Tools for vertex-wise analyses of brain imaging data have been around since the creation of surface-based cortical models. One widely used tool which implements the linear model is Qdec<sup><xref ref-type="fn" rid="footnote1">1</xref></sup>, which stands for Query, Design, Estimate, Contrast. Qdec is bundled with FreeSurfer (<xref rid="B7" ref-type="bibr">Fischl, 2012</xref>), an open source software suite designed to generate surface-based maps of the brain from structural MRI data. Qdec facilitates whole-brain, vertex-wise analyses from a graphical user interface. Though brilliantly user-friendly, the interface has limitations including model specification (e.g., restrictions on the number of continuous and categorical variables that can be used) and handling of missing data. Qdec is the front-end interface which was built on top of the mri_glmfit program; a tool which was written in C++, works from the command line, and can handle larger datasets and more complicated design matrices. Another tool, SurfStat (<xref rid="B22" ref-type="bibr">Worsley et al., 2009</xref>), was developed in MATLAB and has a number of user-friendly features that mri_glmfit does not have, including formula-based creation of design matrices. SurfStat is still widely used (e.g., <xref rid="B2" ref-type="bibr">Albaugh et al., 2019</xref>), but has not been updated since 2008 and requires a MATLAB license.</p>
    <p>The field of neuroimaging is rapidly developing, particularly with studies generally growing in sample size due to the advent of open databases, consortia collaborations, and population neuroscience initiatives (<xref rid="B14" ref-type="bibr">Paus, 2010</xref>). These studies, increasingly more epidemiologic in nature, require analytical tools that can handle statistical and epidemiological characteristics like big datasets, correction for confounding and selection bias, allowing imputed data to account for missingness, and creating more flexibility in statistical model specification (<xref rid="B18" ref-type="bibr">Smith and Nichols, 2018</xref>). The previously described vertex-wise analysis tools were designed with vertex-wise analyses as their core purpose, but may lack features that are now crucial to begin integrating into neuroimaging as common practice to ensure proper analysis and interpretation of the data. Furthermore, expansion of features of those tools is not always straightforward as they were not designed in a modular fashion. Lastly, each tool is designed within a software framework which was not originally designed with statistical computing in mind.</p>
    <p>We designed the QDECR package, a flexible and extensible R package for vertex-wise analyses. R is a programming language designed around statistical computing (<xref rid="B15" ref-type="bibr">R Core Team, 2016</xref>) and has become increasingly popular in academia and neuroimaging (<xref rid="B13" ref-type="bibr">Muschelli et al., 2019</xref>). More importantly, R has a standardized syntax for statistical modeling, arguably has the most extensive statistical functionality of all existing programming languages, and its codebase is improving and expanding every day through a large user base and open source framework. We designed QDECR to fully utilize R’s existing statistical infrastructure. We also designed QDECR to use the same user-friendly syntax as all other R modeling functions, so new users are immediately familiar with the QDECR syntax. Finally, we designed it to be an extensible and modular framework, where advanced users can implement their own type of statistical analyses on a vertex-wise level while still using core features of the framework (e.g., reading data, generating figures). In this manuscript we will describe the structure and features of the QDECR package.</p>
  </sec>
  <sec sec-type="materials|methods" id="S2">
    <title>Materials and Methods</title>
    <sec id="S2.SS1">
      <title>General Work Flow</title>
      <p>The general work flow of the QDECR package is shown in <xref ref-type="fig" rid="F1">Figure 1</xref>.</p>
      <fig id="F1" position="float">
        <label>FIGURE 1</label>
        <caption>
          <p>General workflow of the QDECR package, from data collection to post-processing.</p>
        </caption>
        <graphic xlink:href="fninf-15-561689-g001"/>
      </fig>
      <sec id="S2.SS1.SSS1">
        <title>Input: FreeSurfer-Processed Images</title>
        <p>Two sources of data need to be available in order to conduct analyses. The first stream of data consists of the T<sub>1</sub>-weighted MR images, which have been fully processed through the FreeSurfer analysis suite (i.e., “recon-all”). Of note, after running the full primary “recon-all” reconstruction, users also need to run the “qcache” processing with “recon-all.” Activating the “-qcache” flag will co-register a given dataset into a standard coordinate system and spatially smooth the surface-based maps with a set of full width half max (FWHM) values. It outputs these maps in.mgh file format (Massachusetts General Hospital) in the “surf” subdirectory of the FreeSurfer output. As part of the FreeSurfer installation, the “SUBJECTS_DIR” environmental variable is set to indicate the directory where all of the subject data are stored; QDECR will recognize this environmental variable, and users can set (or override) it via an optional argument when calling QDECR.</p>
      </sec>
      <sec id="S2.SS1.SSS2">
        <title>Input: Phenotype/Covariate Data</title>
        <p>The second stream of data involves the other information relevant to the research question, specifically the phenotypic information of interest and covariates (e.g., age and sex). These data should be loaded into R with the user’s method of choice, and ideally stored as a standard (imputed) data frame object. Furthermore, the phenotype data must include the identifier which was used to store the MRI data in order to link the two data types during analysis (i.e., the identifier variable the MRI data are stored on).</p>
      </sec>
      <sec id="S2.SS1.SSS3">
        <title>Analysis With QDECR</title>
        <p>The next step is to run one of the analysis functions from the QDECR package, for example “qdecr_fastlm” for linear regression. At minimum, the following input arguments need to be specified:</p>
        <list list-type="simple">
          <list-item>
            <label>•</label>
            <p>“formula”: a formula object, specifying the linear model to be used;</p>
          </list-item>
          <list-item>
            <label>•</label>
            <p>“data”: a data frame containing the non-vertex (e.g., phenotype/covariate) data related to the research question;</p>
          </list-item>
          <list-item>
            <label>•</label>
            <p>“id”: the name of the column in the data frame that identifies each subject;</p>
          </list-item>
          <list-item>
            <label>•</label>
            <p>“hemi”: a hemisphere (“lh” for left, “rh” for right);</p>
          </list-item>
          <list-item>
            <label>•</label>
            <p>“project”: a project name used for labeling output files.</p>
          </list-item>
        </list>
        <p>As an example, to run a vertex-wise analysis to study the effect of age and sex on cortical thickness of the left hemisphere, the R code would be:</p>
        <list list-type="simple">
          <list-item>
            <p>“qdecr_fastlm(qdecr_thickness ∼ age + sex, data = pheno, id = “id,” hemi = “lh,” project = “test”)”</p>
          </list-item>
        </list>
        <p>where “pheno” is an R data frame object containing at least the columns “id”, “age,” and “sex”. All rows in “pheno” must correspond to an existing MRI session in “SUBJECTS_DIR”. During the analysis, information on the input data as well as the progress of the analysis will be printed on the console. The analysis will generate a number of files on disk (<xref rid="T1" ref-type="table">Table 1</xref>). The output of the analysis can be stored directly into an R variable, or it can be loaded back in at a later point in time.</p>
        <table-wrap id="T1" position="float">
          <label>TABLE 1</label>
          <caption>
            <p>Overview of the output files.</p>
          </caption>
          <table frame="hsides" rules="groups" cellspacing="5" cellpadding="5">
            <thead>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">
                  <bold>Name</bold>
                </td>
                <td valign="top" align="center" rowspan="1" colspan="1">
                  <bold>Per stack</bold>
                </td>
                <td valign="top" align="left" rowspan="1" colspan="1">
                  <bold>Description</bold>
                </td>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">“project”.rds</td>
                <td valign="top" align="center" rowspan="1" colspan="1">no</td>
                <td valign="top" align="left" rowspan="1" colspan="1">A file that stores the qdecr output object and can be reloaded with “qdecr_load.”</td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">finalMask.mgh</td>
                <td valign="top" align="center" rowspan="1" colspan="1">no</td>
                <td valign="top" align="left" rowspan="1" colspan="1">The final mask that was used for the analyses.</td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">fwhm.dat</td>
                <td valign="top" align="center" rowspan="1" colspan="1">no</td>
                <td valign="top" align="left" rowspan="1" colspan="1">A file containing the estimated smoothness.</td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">significant_clusters.txt</td>
                <td valign="top" align="center" rowspan="1" colspan="1">no</td>
                <td valign="top" align="left" rowspan="1" colspan="1">Contains all significant clusters (the output of “summary(vw, annot = TRUE)”).</td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">stack_names.txt</td>
                <td valign="top" align="center" rowspan="1" colspan="1">no</td>
                <td valign="top" align="left" rowspan="1" colspan="1">Contains the link for variable name-stack number.</td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">stack*.coef.mgh</td>
                <td valign="top" align="center" rowspan="1" colspan="1">yes</td>
                <td valign="top" align="left" rowspan="1" colspan="1">Contains the vertex-wise regression coefficients from the linear regression.</td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">stack*.se.mgh</td>
                <td valign="top" align="center" rowspan="1" colspan="1">yes</td>
                <td valign="top" align="left" rowspan="1" colspan="1">Vertex-wise standard errors from the linear regression.</td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">stack*.t.mgh</td>
                <td valign="top" align="center" rowspan="1" colspan="1">yes</td>
                <td valign="top" align="left" rowspan="1" colspan="1">Vertex-wise <italic>t</italic>-values from the linear regression.</td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">stack*.p.mgh</td>
                <td valign="top" align="center" rowspan="1" colspan="1">yes</td>
                <td valign="top" align="left" rowspan="1" colspan="1">Vertex-wise <italic>p</italic>-values from the linear regression.</td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">stack*.cache.th*.abs.sig.cluster.mgh</td>
                <td valign="top" align="center" rowspan="1" colspan="1">yes</td>
                <td valign="top" align="left" rowspan="1" colspan="1">Vertex-wise log10-transformed <italic>p</italic>-values of the cluster-wise significance.</td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">stack*.cache.th*.abs.sig.cluster.summary</td>
                <td valign="top" align="center" rowspan="1" colspan="1">yes</td>
                <td valign="top" align="left" rowspan="1" colspan="1">Text file with summary information about clusters from the “mri_surfcluster” call.</td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">stack*.cache.th*.abs.sig.masked.mgh</td>
                <td valign="top" align="center" rowspan="1" colspan="1">yes</td>
                <td valign="top" align="left" rowspan="1" colspan="1">Vertex-wise values after setting the non-cluster vertices to zero.</td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">stack*.cache.th*.abs.sig.ocn.annot</td>
                <td valign="top" align="center" rowspan="1" colspan="1">yes</td>
                <td valign="top" align="left" rowspan="1" colspan="1">Vertex-wise annotations for the clusters to which each vertex belongs.</td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">stack*.cache.th*.abs.sig.ocn.mgh</td>
                <td valign="top" align="center" rowspan="1" colspan="1">yes</td>
                <td valign="top" align="left" rowspan="1" colspan="1">Vertex-wise values for the clusters to which each vertex belongs.</td>
              </tr>
              <tr>
                <td valign="top" align="left" rowspan="1" colspan="1">stack*.cache.th*.abs.sig.voxel.mgh</td>
                <td valign="top" align="center" rowspan="1" colspan="1">yes</td>
                <td valign="top" align="left" rowspan="1" colspan="1">Vertex-wise value for the corrected voxel-wise significance.</td>
              </tr>
            </tbody>
          </table>
          <table-wrap-foot>
            <attrib>
              <italic>The “project”.rds file will have the name of the outputted project name. The “stack*” names will be replaced with the stack number, e.g., “stack1.” The “th*” names will be replaced with the threshold of the cluster-wise threshold. All “.cache.” files are output from mri_surfcluster.</italic>
            </attrib>
          </table-wrap-foot>
        </table-wrap>
        <p>In the current version of QDECR, results which are corrected for multiple comparisons (i.e., tests across all vertices) are by default also saved. This is done automatically in “qdecr_fastlm” using pre-cached smoothed Gaussian Monte Carlo – known as MCZ – simulations on a cluster level (<xref rid="B9" ref-type="bibr">Hagler et al., 2006</xref>). The cluster-forming threshold can be changed by specifying the “mcz_thr” argument [default = 0.001 based on previous work showing correspondence with full permutation tests (<xref rid="B8" ref-type="bibr">Greve and Fischl, 2018</xref>)]. The cluster-wise <italic>p</italic>-values are further corrected for performing additional analyses (e.g., in both hemispheres), which can be set with the “cwp_thr” argument (default = 0.025, which is 0.05 Bonferroni corrected for running both left and right hemispheres).</p>
        <p>The “qdecr_fastlm” function has many, additional arguments that users can specify. Information on the function and its arguments can be obtained by calling “?qdecr_fastlm.” Several arguments may be of particular interest to users. First, users can a path to SUBJECTS_DIR into “qdecr_fastlm” directly with the “dir_subj” argument, and to FREESURFER_HOME with the “freesurfer_home” argument. Second, the “target” argument allows for specification of the target template to use. Users can input templates that are available in SUBJECTS_DIR, but note that “–qcache” must be run with whichever target template has been specified. By default, the “fsaverage” template is used. Third, users can differentiate which level of smoothing (i.e., FWHM) should be used by using the “fwhm” argument, which is set to 10 by default.</p>
      </sec>
      <sec id="S2.SS1.SSS4">
        <title>Inspection of QDECR Output</title>
        <p>The output of the analysis can be explored with an array of functions within the QDECR package. Most of these functions were built on top of commonly used R functions. For example, the “print” and “summary” functions – which are familiar to most R users – can be used to extract information about the analysis and the significant brain areas (clusters) identified, respectively. Furthermore, QDECR provides functions to visualize the data (e.g., “hist” and “freeview”).</p>
      </sec>
    </sec>
    <sec id="S2.SS2">
      <title>Internal Structure</title>
      <p>The field of neuroimaging has grown extensively over the last few decades, and a wealth of analysis methods have been developed. This can be daunting for new users, who would benefit from user-friendly and restricted analysis software. However, such restrictions may deter advanced users who require flexibility in applying their methods. QDECR was designed with both audiences in mind: straightforward and intuitive to use for beginners, yet flexible and extensible for advanced users. To achieve this, QDECR was designed to contain six modules:</p>
      <list list-type="simple">
        <list-item>
          <label>1.</label>
          <p>Input checking. All input arguments undergo integrity checks. For example, provided paths are checked if they already exist in the system, and datasets are checked for the presence of the variables in the model specification, i.e., the formula.</p>
        </list-item>
        <list-item>
          <label>2.</label>
          <p>Model preparation. The first steps of the statistical modeling are done here. The user-specified model is created and all steps that can be done before the vertex-wise calculations are processed. For example, in linear regression the portion of the design matrix that is common to all vertices is generated here.</p>
        </list-item>
        <list-item>
          <label>3.</label>
          <p>Loading the vertex-wise data. In this step, the dataset and the provided paths are used to load in the vertex-wise data into a file-backed matrix.</p>
        </list-item>
        <list-item>
          <label>4.</label>
          <p>Vertex-wise analysis. This module builds upon step 2 and runs the statistical model for every vertex. The output of each model is stored in dedicated file-backed matrices.</p>
        </list-item>
        <list-item>
          <label>5.</label>
          <p>Multiple testing correction. Once all analyses are done, multiple testing correction can be applied across all vertices.</p>
        </list-item>
        <list-item>
          <label>6.</label>
          <p>Output generation. An R object is compiled to contain all the information on the QDECR call, and output files are generated on disk to store the results more permanently.</p>
        </list-item>
      </list>
      <p>These modules are implemented into the “qdecr” function. At its core, “qdecr” can handle any statistical model that is entered as long as a model preparation module (module #2) and a corresponding vertex-wise analysis module (module #4) exist. Functions like “qdecr_fastlm” are wrappers that automatically use the appropriate modules in “qdecr” to perform vertex-wise linear regression. Thus, users who only want to perform analyses do not have to think about any of the modules nor the underlying “qdecr” function, while advanced users can use the framework to more easily implement new types of models.</p>
    </sec>
    <sec id="S2.SS3">
      <title>Formula Objects</title>
      <p>An important part of regression modeling is the creation of a design matrix. R uses formula objects in building design matrices. Formulas usually have three components: (<xref rid="B6" ref-type="bibr">Fan and Markram, 2019</xref>) the left hand side (the outcome or dependent variable) (<xref rid="B23" ref-type="bibr">Wright et al., 1995</xref>) the right hand side (the determinants or independent variables) and (<xref rid="B5" ref-type="bibr">Dale and Sereno, 1993</xref>) a tilde to separate the sides. For example, in the formula “qdecr_thickness ∼ age + sex,” the qdecr_thickness is clearly defined as the outcome variable, and age and sex are denoted as the determinant variables. Using R formula objects for design matrix creation has a number of strengths:</p>
      <list list-type="simple">
        <list-item>
          <label>•</label>
          <p>Categorical variables (like “sex”) are automatically recoded. By default, the levels will be dummy-coded according to the default behavior of linear regression in R, but other contrasts are available.</p>
        </list-item>
        <list-item>
          <label>•</label>
          <p>Interaction terms can be introduced using the “<sup>∗</sup>” (main effects plus interaction) or “:” (interaction only) symbols, for example “qdecr_thickness ∼ age <sup>∗</sup> sex.”</p>
        </list-item>
        <list-item>
          <label>•</label>
          <p>Variables can be customized within the formula, for example by adding polynomial terms (e.g., “poly(age, 3)”), adding splines (e.g., “splines::ns(age, 3)”), standardizing a variable (e.g., “scale(age)”) and recoding of variables (e.g., “cut(age, 3)”).</p>
        </list-item>
        <list-item>
          <label>•</label>
          <p>New features for formulas can be seamlessly introduced, such has been done with the “Formula” package (<xref rid="B24" ref-type="bibr">Zeileis and Croissant, 2010</xref>).</p>
        </list-item>
      </list>
      <p>Thus, R formula objects – when used properly – allow for intuitive and extremely powerful behavior related to the creation of a design matrix. QDECR builds upon these principles, and in general most functions that manipulate formula objects will automatically work in QDECR as well, offering users continuity in syntax they already know from R.</p>
      <p>Note that QDECR can handle all vertex-wise measures that FreeSurfer outputs by default, and the names are simply the FreeSurfer-assigned names preceded by “qdecr_” (<xref rid="T2" ref-type="table">Table 2</xref>), such as “qdecr_thickness” and “qdecr_area.pial.” The only modification is “w-g.pct,” which is written as “qdecr_w_g.pct” as the hyphen (or minus sign) has a specific meaning in R formula objects. In certain cases, users may choose to create custom surface maps (e.g., functional activation maps). QDECR can be used to analyze those maps, by specifying the “custom_measure” argument of “qdecr_fastlm.” Users should supply the name of the vertex measure preceded by “qdecr_” (e.g., “qdecr_radialdistance”). Furthermore, the surface files must be placed in the “surf” directory of the FreeSurfer output of each participant. Finally, the surface files have to follow the same naming convention as the other surface maps (e.g., “lh.radialdistance.fwhm10.fsaverage.mgh”).</p>
      <table-wrap id="T2" position="float">
        <label>TABLE 2</label>
        <caption>
          <p>Overview of the surface-based measures.</p>
        </caption>
        <table frame="hsides" rules="groups" cellspacing="5" cellpadding="5">
          <thead>
            <tr>
              <td valign="top" align="left" rowspan="1" colspan="1">
                <bold>Surface measure in FreeSurfer</bold>
              </td>
              <td valign="top" align="left" rowspan="1" colspan="1">
                <bold>Name in QDECR</bold>
              </td>
              <td valign="top" align="left" rowspan="1" colspan="1">
                <bold>Description</bold>
              </td>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td valign="top" align="left" rowspan="1" colspan="1">area</td>
              <td valign="top" align="left" rowspan="1" colspan="1">qdecr_area</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Surface area of the white matter surface</td>
            </tr>
            <tr>
              <td valign="top" align="left" rowspan="1" colspan="1">area.pial</td>
              <td valign="top" align="left" rowspan="1" colspan="1">qdecr_area.pial</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Surface area of the pial matter surface</td>
            </tr>
            <tr>
              <td valign="top" align="left" rowspan="1" colspan="1">curv</td>
              <td valign="top" align="left" rowspan="1" colspan="1">qdecr_curv</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Smoothed mean curvature</td>
            </tr>
            <tr>
              <td valign="top" align="left" rowspan="1" colspan="1">jacobian_white</td>
              <td valign="top" align="left" rowspan="1" colspan="1">qdecr_jacobian_white</td>
              <td valign="top" align="left" rowspan="1" colspan="1">The Jacobian of the spherical transformation</td>
            </tr>
            <tr>
              <td valign="top" align="left" rowspan="1" colspan="1">sulc</td>
              <td valign="top" align="left" rowspan="1" colspan="1">qdecr_sulc</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Average convexity compared to the average surface</td>
            </tr>
            <tr>
              <td valign="top" align="left" rowspan="1" colspan="1">thickness</td>
              <td valign="top" align="left" rowspan="1" colspan="1">qdecr_thickness</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Cortical thickness; the distance between the white and pial surfaces</td>
            </tr>
            <tr>
              <td valign="top" align="left" rowspan="1" colspan="1">volume</td>
              <td valign="top" align="left" rowspan="1" colspan="1">qdecr_volume</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Cortical volume</td>
            </tr>
            <tr>
              <td valign="top" align="left" rowspan="1" colspan="1">w-g.pct</td>
              <td valign="top" align="left" rowspan="1" colspan="1">qdecr_w_g.pct</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Gray to white signal intensity ratio</td>
            </tr>
            <tr>
              <td valign="top" align="left" rowspan="1" colspan="1">white.H</td>
              <td valign="top" align="left" rowspan="1" colspan="1">qdecr_white.H</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Mean curvature of the white surface</td>
            </tr>
            <tr>
              <td valign="top" align="left" rowspan="1" colspan="1">white.K</td>
              <td valign="top" align="left" rowspan="1" colspan="1">qdecr_white.K</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Gaussian curvature of the white surface</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
    </sec>
    <sec id="S2.SS4">
      <title>Statistical Modeling of Linear Regression</title>
      <p>The base model implemented in QDECR is a vertex-wise linear regression model with the vertex-wise metric, e.g., cortical thickness, as the outcome. At each vertex, a least squares regression would be performed:</p>
      <disp-formula id="S2.Ex1">
        <mml:math id="M1">
          <mml:mrow>
            <mml:mrow>
              <mml:mpadded width="+3.3pt">
                <mml:mi mathvariant="normal">β</mml:mi>
              </mml:mpadded>
              <mml:mo rspace="5.8pt">=</mml:mo>
              <mml:mrow>
                <mml:msup>
                  <mml:mrow>
                    <mml:mo stretchy="false">(</mml:mo>
                    <mml:mrow>
                      <mml:msup>
                        <mml:mtext mathvariant="bold">X</mml:mtext>
                        <mml:mi mathvariant="bold">T</mml:mi>
                      </mml:msup>
                      <mml:mo>⁢</mml:mo>
                      <mml:mtext mathvariant="bold">X</mml:mtext>
                    </mml:mrow>
                    <mml:mo stretchy="false">)</mml:mo>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:mo>-</mml:mo>
                    <mml:mn mathvariant="bold">1</mml:mn>
                  </mml:mrow>
                </mml:msup>
                <mml:mo>⁢</mml:mo>
                <mml:msup>
                  <mml:mtext mathvariant="bold">X</mml:mtext>
                  <mml:mi mathvariant="bold">T</mml:mi>
                </mml:msup>
                <mml:mo>⁢</mml:mo>
                <mml:mtext mathvariant="bold">y</mml:mtext>
              </mml:mrow>
            </mml:mrow>
            <mml:mo>,</mml:mo>
          </mml:mrow>
        </mml:math>
      </disp-formula>
      <p>where <bold>X</bold> is an <italic>N</italic> (subjects) × <italic>p</italic> (variables) matrix that is the design matrix, y is an <italic>N</italic> × 1 vector with the values at a given vertex, and β is a <italic>p</italic> × 1 vector of regression coefficients.</p>
      <p>Running a linear regression for each separate vertex using the default “lm” function from the “stats” package would take a significant amount of time in R as R is an interpreted programming language. In interpreted languages the interpreting and execution of a line of code requires some operation time. Given the thousands of vertices that maps exist of, and given that linear regressions take milliseconds to perform, the compute time can become hours to days. The regression coefficients for all <italic>m</italic> vertices can be determined in a single step with the formula:</p>
      <disp-formula id="S2.Ex2">
        <mml:math id="M2">
          <mml:mrow>
            <mml:mrow>
              <mml:mtext mathvariant="bold">B</mml:mtext>
              <mml:mo rspace="5.8pt">=</mml:mo>
              <mml:mrow>
                <mml:msup>
                  <mml:mrow>
                    <mml:mo stretchy="false">(</mml:mo>
                    <mml:mrow>
                      <mml:msup>
                        <mml:mtext mathvariant="bold">X</mml:mtext>
                        <mml:mi mathvariant="bold">T</mml:mi>
                      </mml:msup>
                      <mml:mo>⁢</mml:mo>
                      <mml:mtext mathvariant="bold">X</mml:mtext>
                    </mml:mrow>
                    <mml:mo stretchy="false">)</mml:mo>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:mo>-</mml:mo>
                    <mml:mn mathvariant="bold">1</mml:mn>
                  </mml:mrow>
                </mml:msup>
                <mml:mo>⁢</mml:mo>
                <mml:msup>
                  <mml:mtext mathvariant="bold">X</mml:mtext>
                  <mml:mi mathvariant="bold">T</mml:mi>
                </mml:msup>
                <mml:mo>⁢</mml:mo>
                <mml:mtext mathvariant="bold">Y</mml:mtext>
              </mml:mrow>
            </mml:mrow>
            <mml:mo>,</mml:mo>
          </mml:mrow>
        </mml:math>
      </disp-formula>
      <p>Where <bold>Y</bold> is an <italic>n</italic> × <italic>m</italic> (number of vertices) matrix with all vertex-wise values, and <bold>B</bold> is a <italic>p</italic> × <italic>m</italic> matrix of regression coefficients. Note that the vertex measures are the outcome, and thus the design matrix for all vertices is identical. In order to decrease run time QDECR therefore only builds the design matrix once.</p>
      <p>The matrices may become exceedingly large given thousands of vertices, thousands of participants and tens of imputed datasets. This would then exceed the RAM size of the RAM size of consumer grade computers. To avoid this, QDECR internally splits <bold>Y</bold> into “chunks,” or smaller partitions, so that the analyses can be run in smaller sets limiting the amount of required RAM at a given moment. By default, “qdecr_fastlm” creates chunks of 1,000 vertices, but the size can be fine-tuned to a given setup (e.g., number of subjects, RAM availability, imputed datasets, etc.) with the “chunk_size” argument.</p>
    </sec>
    <sec id="S2.SS5">
      <title>Handling Imputed Data</title>
      <p>Missing covariate or phenotypic data in datasets can pose problems for statistical analyses. Previous vertex-wise tools require complete data, and thus any subjects with missing covariate or phenotypic data would have to be excluded for analysis, which could lead to loss of power and an increase in bias (<xref rid="B16" ref-type="bibr">Rubin, 1976</xref>). Rather than using only complete observations, methods have been developed to impute the missing data, typically under the assumption that the missingness is random and that the missingness can be predicted from other available data. To account for uncertainty in the imputation process, the imputation is repeated to generate several imputed datasets. For users who decide imputations are useful and feasible for their particular set of analyses, QDECR was designed to handle such imputed datasets from the most commonly used R imputation packages. Internally, QDECR uses a function called “imp2list” that converts any prespecified data object to a list of data frames. Consequently, “qdecr_fastlm” accepts the following object types for its “data” argument: Data frames, matrices, and lists of data frames, as well as imputed objects from the following R packages: mice (<xref rid="B21" ref-type="bibr">van Buuren and Groothuis-Oudshoorn, 2011</xref>), mi (<xref rid="B20" ref-type="bibr">Su et al., 2011</xref>), amelia (<xref rid="B10" ref-type="bibr">Honaker et al., 2011</xref>), and missForest (<xref rid="B19" ref-type="bibr">Stekhoven and Buhlmann, 2012</xref>). Furthermore, users can implement methods for new classes by converting their object to a list of datasets. In regression analyses, the estimates across the imputed datasets are pooled using Rubin’s rules (<xref rid="B17" ref-type="bibr">Rubin, 1987</xref>).</p>
    </sec>
    <sec id="S2.SS6">
      <title>Proof of Principle for Vertex-Wise Linear Regression</title>
      <p>To illustrate the QDECR package we performed vertex-wise analyses in 1,000 randomly selected participants from the UK Biobank (<xref rid="B3" ref-type="bibr">Alfaro-Almagro et al., 2018</xref>). The participants had a mean age of 63.9 years (standard deviation: 7.7, range: 47.1 – 80.0) and 52.8% was female. The T<sub>1</sub>-weighted images were processed with FreeSurfer version 6.0 (<xref rid="B7" ref-type="bibr">Fischl, 2012</xref>). Additionally, in order to facilitate reproducible benchmarking and testing, a set of 10,000 simulated surface-based cortical thickness maps have also been made publicly available alongside a full installation of QDECR at Code Ocean (<xref rid="B12" ref-type="bibr">Lamballais and Muetzel, 2020</xref>), and can be freely explored and tested via the web interface<sup><xref ref-type="fn" rid="footnote2">2</xref></sup>. A full tutorial on how to use QDECR can be found in the <xref ref-type="supplementary-material" rid="SM1">Supplementary Materials</xref> (Section 1) and via the GitHub repository<sup><xref ref-type="fn" rid="footnote3">3</xref></sup>.</p>
    </sec>
  </sec>
  <sec id="S3">
    <title>Results</title>
    <sec id="S3.SS1">
      <title>Age Associations: Example in the UK Biobank</title>
      <p>Within the UK Biobank sample, we aimed to study the association between age and vertex-wise cortical thickness, adjusted for sex. This can be achieved by running the following code in R:</p>
      <list list-type="simple">
        <list-item>
          <p>vw &lt;- qdecr_fastlm(qdecr_thickness ∼ age + sex, data = pheno, id = “id,” hemi = “lh,” project = “test_project”)</p>
        </list-item>
      </list>
      <p>The formula (i.e., qdecr_thickness ∼ age + sex) captures cortical thickness as the dependent variable, and age and sex as the independent variables. The variable “pheno” contains the information on age and sex per participant, and the identifier is “id.” By specifying “hemi = “lh””, we specify that the left hemisphere should be analyzed. Finally, the project name “test_project” is used, which will be incorporated in the names of the files that will be written to disk. The output is stored in the variable “vw.”</p>
      <p>Once the analysis is done, a summary of the analysis can be viewed with “print(vw)” (<xref ref-type="fig" rid="F2">Figure 2A</xref>). The significant clusters can be tabulated with “summary(vw)” (<xref ref-type="fig" rid="F2">Figure 2B</xref>), which shows that a number of clusters have a significant association with age. Further inspection of the vertex-wise data can be done with “hist(vw)” (<xref ref-type="fig" rid="F3">Figure 3A</xref>), which generates a histogram of the vertex-wise mean cortical thickness. The results can be visualized with the FreeSurfer FreeView tool by typing “freeview(vw)” (<xref ref-type="fig" rid="F3">Figure 3B</xref>). Within the FreeView visualization it is clear that cortical thickness generally decreases with age, particularly in the temporal lobe and the precentral gyrus.</p>
      <fig id="F2" position="float">
        <label>FIGURE 2</label>
        <caption>
          <p>Examination of the QDECR analysis on the association of age and cortical thickness in a subset of the UK Biobank. <bold>(A)</bold> The “print” function returns the key information of the analyzed project, including the input arguments, the included formula, the size of the dataset and the number of included vertices. <bold>(B)</bold> An example of output from the “summary” function. Each row represents a statistically significant cluster.</p>
        </caption>
        <graphic xlink:href="fninf-15-561689-g002"/>
      </fig>
      <fig id="F3" position="float">
        <label>FIGURE 3</label>
        <caption>
          <p>Plots of the QDECR analysis results. <bold>(A)</bold> A histogram of the vertex-wise mean cortical thickness for the study sample, generated with “hist.” <bold>(B)</bold> FreeView can be called with the “freeview” function. This panel displays the vertex-wise map for the effect of age on cortical thickness.</p>
        </caption>
        <graphic xlink:href="fninf-15-561689-g003"/>
      </fig>
    </sec>
    <sec id="S3.SS2">
      <title>Age Associations: Comparison to mri_glmfit</title>
      <p>In order to demonstrate the accuracy and consistency of the tool, we compared the results from the previous paragraph to those of mri_glmfit using the same data from the UKBB. A linear model for the association of age and sex with cortical thickness was generated in mri_glmfit with a DOSS (Different Offset, Same Slope) design. A full description of the input and code is given in the <xref ref-type="supplementary-material" rid="SM1">Supplementary Materials</xref> (Section 2). The vertex-wise regression coefficients – or betas – for age were examined. The mean absolute difference in the regression coefficients for age across the tested vertices was 7.9 ⋅ 10<sup>–7</sup>, which arose from differences in rounding. The correlation between the betas was near perfect (Pearson’s <italic>r</italic> = 1.00, Spearman’s ρ = 0.9999954).</p>
    </sec>
    <sec id="S3.SS3">
      <title>Performance Benchmark</title>
      <p>In order to demonstrate how QDECR performs in terms of compute time in comparison to other tools, we used simulated data to benchmark the performance of “qdecr_fastlm.” We studied the influence of sex and age on cortical thickness of the left hemisphere in 100, 500, 1,000, 5,000 and 10,000 participants. Further, we tested the impact of multiple imputation by generating 1, 33 or 100 imputed datasets. Lastly, we studied the impact of parallel processing by using 1 or 4 CPU cores. <xref ref-type="fig" rid="F4">Figure 4A</xref> contains the results of the benchmark. The time it took to perform an analysis on unimputed data ranged from 0.8 min for a sample of 100 datasets to 26.7 min for a sample of 10,000 datasets. When the dataset with 10,000 was further imputed 100 times for missing covariates, the time increased to 146.4 min (i.e., 448% longer than unimputed). The performance can be boosted by recruiting more CPU cores for the analysis. For example, using 4 cores compared to 1 core on 10,000 datasets with 100 imputed datasets dropped the analysis time from 146.4 to 54.9 min (i.e., 62.5% reduction).</p>
      <fig id="F4" position="float">
        <label>FIGURE 4</label>
        <caption>
          <p>Computation time benchmark of the QDECR package. <bold>(A)</bold> Displays the computation time of an analysis with QDECR when varying sample size, number of cores (threads) used and number of imputed datasets that were included. <bold>(B)</bold> Compares the computation time for mri_glmfit, QDEC and QDECR when using a single core (thread) and unimputed data. For QDEC we used the time that the analysis took, without loading or assembling of the data or the multiple testing correction. For mri_glmfit we measured the time it took to run three commands: (<xref rid="B6" ref-type="bibr">Fan and Markram, 2019</xref>) mri_preproc to assemble the FreeSurfer output, (<xref rid="B23" ref-type="bibr">Wright et al., 1995</xref>) mri_glmfit to run the analysis and (<xref rid="B5" ref-type="bibr">Dale and Sereno, 1993</xref>) mri_glmfit-sim to perform the multiple testing correction. **Note: QDEC returned errors when attempting to run the analyses on 3,333 and 10,000 participants and is thus not represented for those sample sizes in panel <bold>(B)</bold>. <bold>(C)</bold> Compares the peak memory use in gigabytes (GB) for mri_glmfit and QDECR when using a single core (thread) and unimputed data.</p>
        </caption>
        <graphic xlink:href="fninf-15-561689-g004"/>
      </fig>
      <p>We further compared the QDECR performance with Qdec and mri_glmfit (<xref ref-type="fig" rid="F4">Figure 4B</xref>). Both Qdec and mri_glmfit were faster than QDECR on samples of 100 individuals, and slower for samples with 333 participants and more. Furthermore, Qdec was not able to finish the analyses on 3,333 and 10,000 participants due to errors that arose when merging the underlying MRI data into a single set. While mri_glmfit did succeed in running the analyses, compared to QDECR it was much slower for the set of 3,333 individuals (42.8 vs. 6.8 min with QDECR) and 10,000 individuals (313.1 vs. 26.7 min with QDECR). Finally, we compared the peak memory use of QDECR with that of mri_glmfit (<xref ref-type="fig" rid="F4">Figure 4C</xref>). Overall, QDECR had a higher peak memory use than mri_glmfit. Where QDECR reached a peak memory use of 8.4 GB for 3,333 individuals and 20.8 GB for 10,000 individuals, mri_glmfit used 5.3 and 14.4 GB, respectively.</p>
    </sec>
  </sec>
  <sec id="S4">
    <title>Discussion</title>
    <p>QDECR provides a framework to perform vertex-wise analyses in R. It has the same base functionality as other vertex-wise tools and adds several functionalities. We have shown that QDECR runs faster on large datasets than other tools, and can additionally handle imputed datasets to minimize bias or loss of power due to exclusion of participants. Moreover, we aimed to maximize user friendliness for individuals familiar with R through the implementation of formula objects to handle design matrix specification and through writing functions with similar arguments as other base functions. Finally, QDECR sets the stage for further development of statistical applications to study the cerebral cortex in population neuroscience settings.</p>
    <p>QDECR has a number of limitations. The primary focus of the package has been to implement vertex-wise analyses in R. In contrast, glmfit has a myriad of options for the MRI data available. It works with both voxel-wise and vertex-wise data with all volume files that are recognized by the FreeSurfer mri_convert function (.mgh,.nii, etc.). It also has several options related to the analysis that are not available in QDECR yet, such as different methods for multiple testing correction (e.g., permutation testing) and weighted least squares. However, QDECR is still in development, and these options will likely be available in the future. Another limitation for part of the potential users is that QDECR is only available in R. Qdec will therefore remain more feasible for users with little programming experience, and MATLAB and Python users would have to learn basic R skills in order to use it. Furthermore, developing new modules requires mastery of R. Still, we opted for R as it provides an ideal environment to further develop the statistical options for vertex-wise analyses. Furthermore, R is gaining popularity in medical research, especially with the advent of Bioconductor (<xref rid="B11" ref-type="bibr">Huber et al., 2015</xref>) and more recently Neuroconductor (<xref rid="B13" ref-type="bibr">Muschelli et al., 2019</xref>).</p>
    <p>While QDECR presents a substantial contribution to vertex-wise analyses, several areas of opportunity for expansion and improvement exist. First, at the moment only the general linear model is implemented. We envision logistic regression, linear mixed models, and structural equation models to be the next key targets for future implementation. Next, though QDECR relies on multiple testing correction that is native to the FreeSurfer library, new modeling techniques may require new methods for adjusting analyses for multiple comparisons. Thus, another target for development is implementing permutation testing and other state-of-the-art methods in the field of neuroimaging. Finally, QDECR in its first implementation can handle the mgh file format and assumes a FreeSurfer image reconstruction. In the future, new methods should be implemented to accommodate other file format types [e.g., Minc/Civet (<xref rid="B1" ref-type="bibr">Ad-Dab’bagh et al., 2006</xref>)], and allow for 3D voxel data in addition to surface data (e.g., Nifti format data).</p>
  </sec>
  <sec id="S5">
    <title>Conclusion</title>
    <p>QDECR extends the capabilities of existing whole-brain vertex-wise statistical software for neuroimaging data analysis, allowing for larger (population-based) datasets, incorporation of novel epidemiological and statistical concepts, and elegant expansion within the widely used and open-source R statistical framework.</p>
  </sec>
  <sec id="S6">
    <title>Software Availability Statement</title>
    <p>The code is made available at <ext-link ext-link-type="uri" xlink:href="https://github.com/slamballais/QDECR">https://github.com/slamballais/QDECR</ext-link>. Supporting information and further tutorials can be found at <ext-link ext-link-type="uri" xlink:href="https://www.qdecr.com">https://www.qdecr.com</ext-link>. QDECR uses the GNU General Public License version 3.0 (GPL-3).</p>
  </sec>
  <sec sec-type="data-availability" id="S7">
    <title>Data Availability Statement</title>
    <p>The data analyzed in this study is subject to the following licenses/restrictions: legal and informed consent restrictions. Requests to access these datasets should be directed to the UK Biobank (<ext-link ext-link-type="uri" xlink:href="http://www.ukbiobank.ac.uk">http://www.ukbiobank.ac.uk</ext-link>).</p>
  </sec>
  <sec id="S8">
    <title>Ethics Statement</title>
    <p>The studies involving human participants were reviewed and approved by the NHS National Research Ethics Service (ref 11/NW/0382). The patients/participants provided their written informed consent to participate in this study.</p>
  </sec>
  <sec id="S9">
    <title>Author Contributions</title>
    <p>RM conceived the package. SL and RM designed the package. SL adapted all the functions and code, and optimized the performance. Both authors wrote the manuscript and approved the final manuscript.</p>
  </sec>
  <sec sec-type="COI-statement" id="conf1">
    <title>Conflict of Interest</title>
    <p>The authors declare that the research was conducted in the absence of any commercial or financial relationships that could be construed as a potential conflict of interest.</p>
  </sec>
</body>
<back>
  <fn-group>
    <fn fn-type="financial-disclosure">
      <p><bold>Funding.</bold> This work was supported by the European Union’s Horizon 2020 Research and Innovation Programme (project: ORACLE, grant agreement no: 678543), the Sophia Foundation [grant S18-20 (RM)], and the Erasmus University Fellowship (RM).</p>
    </fn>
  </fn-group>
  <ack>
    <p>This research has been conducted using the UK Biobank Resource under application number 23509. We would like to thank Doug Greve for giving us extensive comments and feedback on the design of the package. We would also like to thank Heath Pardoe, who wrote the code for the “load.mgh” and “save.mgh” functions that are included in the package.</p>
  </ack>
  <fn-group>
    <fn id="footnote1">
      <label>1</label>
      <p>
        <ext-link ext-link-type="uri" xlink:href="https://surfer.nmr.mgh.harvard.edu/">https://surfer.nmr.mgh.harvard.edu/</ext-link>
      </p>
    </fn>
    <fn id="footnote2">
      <label>2</label>
      <p>
        <ext-link ext-link-type="uri" xlink:href="https://codeocean.com/capsule/6804031/tree/v2">https://codeocean.com/capsule/6804031/tree/v2</ext-link>
      </p>
    </fn>
    <fn id="footnote3">
      <label>3</label>
      <p>
        <ext-link ext-link-type="uri" xlink:href="https://github.com/slamballais/QDECR">https://github.com/slamballais/QDECR</ext-link>
      </p>
    </fn>
  </fn-group>
  <sec id="S12" sec-type="supplementary material">
    <title>Supplementary Material</title>
    <p>The Supplementary Material for this article can be found online at: <ext-link ext-link-type="uri" xlink:href="https://www.frontiersin.org/articles/10.3389/fninf.2021.561689/full#supplementary-material">https://www.frontiersin.org/articles/10.3389/fninf.2021.561689/full#supplementary-material</ext-link></p>
    <supplementary-material content-type="local-data" id="SM1">
      <media xlink:href="Data_Sheet_1.docx">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
  <ref-list>
    <title>References</title>
    <ref id="B1">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Ad-Dab’bagh</surname><given-names>Y.</given-names></name><name><surname>Lyttelton</surname><given-names>O.</given-names></name><name><surname>Muehlboeck</surname><given-names>J. S.</given-names></name><name><surname>Lepage</surname><given-names>C.</given-names></name><name><surname>Einarson</surname><given-names>D.</given-names></name><name><surname>Mok</surname><given-names>K.</given-names></name><etal/></person-group> (<year>2006</year>). “<article-title>The CIVET image-processing environment: a fully automated comprehensive pipeline for anatomical neuroimaging research</article-title>,” in <source><italic>Proceedings of the 12th Annual Meeting of the Organization for Human Brain Mapping</italic></source>, <publisher-loc>Italy</publisher-loc>.</mixed-citation>
    </ref>
    <ref id="B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Albaugh</surname><given-names>M. D.</given-names></name><name><surname>Hudziak</surname><given-names>J. J.</given-names></name><name><surname>Orr</surname><given-names>C.</given-names></name><name><surname>Spechler</surname><given-names>P. A.</given-names></name><name><surname>Chaarani</surname><given-names>B.</given-names></name><name><surname>Mackey</surname><given-names>S.</given-names></name><etal/></person-group> (<year>2019</year>). <article-title>Amygdalar reactivity is associated with prefrontal cortical thickness in a large population-based sample of adolescents.</article-title>
<source><italic>PLoS One</italic></source>
<volume>14</volume>:<issue>e0216152</issue>. <pub-id pub-id-type="doi">10.1371/journal.pone.0216152</pub-id>
<?supplied-pmid 31048888?><pub-id pub-id-type="pmid">31048888</pub-id></mixed-citation>
    </ref>
    <ref id="B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Alfaro-Almagro</surname><given-names>F.</given-names></name><name><surname>Jenkinson</surname><given-names>M.</given-names></name><name><surname>Bangerter</surname><given-names>N. K.</given-names></name><name><surname>Andersson</surname><given-names>J. L. R.</given-names></name><name><surname>Griffanti</surname><given-names>L.</given-names></name><name><surname>Douaud</surname><given-names>G.</given-names></name><etal/></person-group> (<year>2018</year>). <article-title>Image processing and quality control for the first 10,000 brain imaging datasets from UK Biobank.</article-title>
<source><italic>Neuroimage</italic></source>
<volume>166</volume>
<fpage>400</fpage>–<lpage>424</lpage>. <pub-id pub-id-type="doi">10.1016/j.neuroimage.2017.10.034</pub-id>
<?supplied-pmid 29079522?><pub-id pub-id-type="pmid">29079522</pub-id></mixed-citation>
    </ref>
    <ref id="B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Casey</surname><given-names>B. J.</given-names></name><name><surname>Cannonier</surname><given-names>T.</given-names></name><name><surname>Conley</surname><given-names>M. I.</given-names></name><name><surname>Cohen</surname><given-names>A. O.</given-names></name><name><surname>Barch</surname><given-names>D. M.</given-names></name><name><surname>Heitzeg</surname><given-names>M. M.</given-names></name><etal/></person-group> (<year>2018</year>). <article-title>The adolescent brain cognitive development (ABCD) study: imaging acquisition across 21 sites.</article-title>
<source><italic>Dev. Cogn. Neurosci.</italic></source>
<volume>32</volume>
<fpage>43</fpage>–<lpage>54</lpage>. <pub-id pub-id-type="doi">10.1016/j.dcn.2018.03.001</pub-id>
<?supplied-pmid 29567376?><pub-id pub-id-type="pmid">29567376</pub-id></mixed-citation>
    </ref>
    <ref id="B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Dale</surname><given-names>A. M.</given-names></name><name><surname>Sereno</surname><given-names>M. I.</given-names></name></person-group> (<year>1993</year>). <article-title>Improved localizadon of cortical activity by combining EEG and MEG with MRI cortical surface reconstruction: a linear approach.</article-title>
<source><italic>J. Cogn. Neurosci.</italic></source>
<volume>5</volume>
<fpage>162</fpage>–<lpage>176</lpage>. <pub-id pub-id-type="doi">10.1162/jocn.1993.5.2.162</pub-id>
<?supplied-pmid 23972151?><pub-id pub-id-type="pmid">23972151</pub-id></mixed-citation>
    </ref>
    <ref id="B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fan</surname><given-names>X.</given-names></name><name><surname>Markram</surname><given-names>H. A.</given-names></name></person-group> (<year>2019</year>). <article-title>Brief history of simulation neuroscience.</article-title>
<source><italic>Front. Neuroinform.</italic></source>
<volume>13</volume>:<issue>32</issue>. <pub-id pub-id-type="doi">10.3389/fninf.2019.00032</pub-id>
<?supplied-pmid 31133838?><pub-id pub-id-type="pmid">31133838</pub-id></mixed-citation>
    </ref>
    <ref id="B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fischl</surname><given-names>B.</given-names></name></person-group> (<year>2012</year>). <article-title>FreeSurfer.</article-title>
<source><italic>Neuroimage</italic></source>
<volume>62</volume>
<fpage>774</fpage>–<lpage>781</lpage>. <pub-id pub-id-type="doi">10.1016/j.neuroimage.2012.01.021</pub-id>
<?supplied-pmid 22248573?><pub-id pub-id-type="pmid">22248573</pub-id></mixed-citation>
    </ref>
    <ref id="B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Greve</surname><given-names>D. N.</given-names></name><name><surname>Fischl</surname><given-names>B.</given-names></name></person-group> (<year>2018</year>). <article-title>False positive rates in surface-based anatomical analysis.</article-title>
<source><italic>Neuroimage</italic></source>
<volume>171</volume>
<fpage>6</fpage>–<lpage>14</lpage>. <pub-id pub-id-type="doi">10.1016/j.neuroimage.2017.12.072</pub-id>
<?supplied-pmid 29288131?><pub-id pub-id-type="pmid">29288131</pub-id></mixed-citation>
    </ref>
    <ref id="B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hagler</surname><given-names>D. J.</given-names><suffix>Jr.</suffix></name><name><surname>Saygin</surname><given-names>A. P.</given-names></name><name><surname>Sereno</surname><given-names>M. I.</given-names></name></person-group> (<year>2006</year>). <article-title>Smoothing and cluster thresholding for cortical surface-based group analysis of fMRI data.</article-title>
<source><italic>Neuroimage</italic></source>
<volume>33</volume>
<fpage>1093</fpage>–<lpage>1103</lpage>. <pub-id pub-id-type="doi">10.1016/j.neuroimage.2006.07.036</pub-id>
<?supplied-pmid 17011792?><pub-id pub-id-type="pmid">17011792</pub-id></mixed-citation>
    </ref>
    <ref id="B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Honaker</surname><given-names>J.</given-names></name><name><surname>King</surname><given-names>G.</given-names></name><name><surname>Blackwell</surname><given-names>M.</given-names></name></person-group> (<year>2011</year>). <article-title>Amelia II: a program for missing data.</article-title>
<source><italic>J. Stat. Softw.</italic></source>
<volume>45</volume>
<fpage>1</fpage>–<lpage>47</lpage>.</mixed-citation>
    </ref>
    <ref id="B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Huber</surname><given-names>W.</given-names></name><name><surname>Carey</surname><given-names>V. J.</given-names></name><name><surname>Gentleman</surname><given-names>R.</given-names></name><name><surname>Anders</surname><given-names>S.</given-names></name><name><surname>Carlson</surname><given-names>M.</given-names></name><name><surname>Carvalho</surname><given-names>B. S.</given-names></name><etal/></person-group> (<year>2015</year>). <article-title>Orchestrating high-throughput genomic analysis with Bioconductor.</article-title>
<source><italic>Nat. Methods</italic></source>
<volume>12</volume>
<fpage>115</fpage>–<lpage>121</lpage>. <pub-id pub-id-type="doi">10.1038/nmeth.3252</pub-id>
<?supplied-pmid 25633503?><pub-id pub-id-type="pmid">25633503</pub-id></mixed-citation>
    </ref>
    <ref id="B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lamballais</surname><given-names>S.</given-names></name><name><surname>Muetzel</surname><given-names>R. L.</given-names></name></person-group> (<year>2020</year>). <article-title>QDECR: a flexible, extensible vertex-wise analysis framework in R.</article-title>
<source><italic>Code Ocean</italic></source>
<pub-id pub-id-type="doi">10.24433/CO.2177760.v2</pub-id>
<?supplied-pmid 33132403?><pub-id pub-id-type="pmid">33132403</pub-id></mixed-citation>
    </ref>
    <ref id="B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Muschelli</surname><given-names>J.</given-names></name><name><surname>Gherman</surname><given-names>A.</given-names></name><name><surname>Fortin</surname><given-names>J. P.</given-names></name><name><surname>Avants</surname><given-names>B.</given-names></name><name><surname>Whitcher</surname><given-names>B.</given-names></name><name><surname>Clayden</surname><given-names>J. D.</given-names></name><etal/></person-group> (<year>2019</year>). <article-title>Neuroconductor: an R platform for medical imaging analysis.</article-title>
<source><italic>Biostatistics</italic></source>
<volume>20</volume>
<fpage>218</fpage>–<lpage>239</lpage>. <pub-id pub-id-type="doi">10.1093/biostatistics/kxx068</pub-id>
<?supplied-pmid 29325029?><pub-id pub-id-type="pmid">29325029</pub-id></mixed-citation>
    </ref>
    <ref id="B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Paus</surname><given-names>T.</given-names></name></person-group> (<year>2010</year>). <article-title>Population neuroscience: why and how.</article-title>
<source><italic>Hum. Brain Mapp.</italic></source>
<volume>31</volume>
<fpage>891</fpage>–<lpage>903</lpage>. <pub-id pub-id-type="doi">10.1002/hbm.21069</pub-id>
<?supplied-pmid 20496380?><pub-id pub-id-type="pmid">20496380</pub-id></mixed-citation>
    </ref>
    <ref id="B15">
      <mixed-citation publication-type="book"><collab>R Core Team</collab> (<year>2016</year>). <source><italic>R: A language and environment for statistical computing.</italic></source>
<publisher-loc>Vienna</publisher-loc>: <publisher-name>R Foundation for Statistical Computing</publisher-name>.</mixed-citation>
    </ref>
    <ref id="B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rubin</surname><given-names>D. B.</given-names></name></person-group> (<year>1976</year>). <article-title>Inference and missing data.</article-title>
<source><italic>Biometrika</italic></source>
<volume>63</volume>
<fpage>581</fpage>–<lpage>590</lpage>. <pub-id pub-id-type="doi">10.1093/biomet/63.3.581</pub-id></mixed-citation>
    </ref>
    <ref id="B17">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Rubin</surname><given-names>D. B.</given-names></name></person-group> (<year>1987</year>). <source><italic>Multiple Imputation for Nonresponse in Surveys.</italic></source>
<publisher-loc>New York, NY</publisher-loc>: <publisher-name>John Wiley &amp; Sons</publisher-name>.</mixed-citation>
    </ref>
    <ref id="B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Smith</surname><given-names>S. M.</given-names></name><name><surname>Nichols</surname><given-names>T. E.</given-names></name></person-group> (<year>2018</year>). <article-title>Statistical Challenges in “Big Data” Human Neuroimaging.</article-title>
<source><italic>Neuron</italic></source>
<volume>97</volume>
<fpage>263</fpage>–<lpage>268</lpage>. <pub-id pub-id-type="doi">10.1016/j.neuron.2017.12.018</pub-id>
<?supplied-pmid 29346749?><pub-id pub-id-type="pmid">29346749</pub-id></mixed-citation>
    </ref>
    <ref id="B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Stekhoven</surname><given-names>D. J.</given-names></name><name><surname>Buhlmann</surname><given-names>P.</given-names></name></person-group> (<year>2012</year>). <article-title>Miss forest–non-parametric missing value imputation for mixed-type data.</article-title>
<source><italic>Bioinformatics</italic></source>
<volume>28</volume>
<fpage>112</fpage>–<lpage>118</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btr597</pub-id>
<?supplied-pmid 22039212?><pub-id pub-id-type="pmid">22039212</pub-id></mixed-citation>
    </ref>
    <ref id="B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Su</surname><given-names>Y. S.</given-names></name><name><surname>Gelman</surname><given-names>A.</given-names></name><name><surname>Hill</surname><given-names>J.</given-names></name><name><surname>Yajima</surname><given-names>M.</given-names></name></person-group> (<year>2011</year>). <article-title>Multiple imputation with diagnostics (mi) in R: opening windows into the black box.</article-title>
<source><italic>J. Stat. Softw.</italic></source>
<volume>45</volume>
<fpage>1</fpage>–<lpage>31</lpage>.</mixed-citation>
    </ref>
    <ref id="B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>van Buuren</surname><given-names>S.</given-names></name><name><surname>Groothuis-Oudshoorn</surname><given-names>K.</given-names></name></person-group> (<year>2011</year>). <article-title>mice: multivariate imputation by chained equations in R.</article-title>
<source><italic>J. Stat. Softw.</italic></source>
<volume>45</volume>
<fpage>1</fpage>–<lpage>67</lpage>.</mixed-citation>
    </ref>
    <ref id="B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Worsley</surname><given-names>K. J.</given-names></name><name><surname>Taylor</surname><given-names>J. E.</given-names></name><name><surname>Carbonell</surname><given-names>F.</given-names></name><name><surname>Chung</surname><given-names>M. K.</given-names></name><name><surname>Duerden</surname><given-names>E.</given-names></name><name><surname>Bernhardt</surname><given-names>B.</given-names></name><etal/></person-group> (<year>2009</year>). <article-title>SurfStat: a matlab toolbox for the statistical analysis of univariate and multivariate surface and volumetric data using linear mixed effects models and random fied theory.</article-title>
<source><italic>Neuroimage</italic></source>
<volume>47</volume>:<issue>S102</issue>.</mixed-citation>
    </ref>
    <ref id="B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wright</surname><given-names>I. C.</given-names></name><name><surname>McGuire</surname><given-names>P. K.</given-names></name><name><surname>Poline</surname><given-names>J. B.</given-names></name><name><surname>Travere</surname><given-names>J. M.</given-names></name><name><surname>Murray</surname><given-names>R. M.</given-names></name><name><surname>Frith</surname><given-names>C. D.</given-names></name><etal/></person-group> (<year>1995</year>). <article-title>A voxel-based method for the statistical analysis of gray and white matter density applied to schizophrenia.</article-title>
<source><italic>Neuroimage</italic></source>
<volume>2</volume>
<fpage>244</fpage>–<lpage>252</lpage>. <pub-id pub-id-type="doi">10.1006/nimg.1995.1032</pub-id>
<?supplied-pmid 9343609?><pub-id pub-id-type="pmid">9343609</pub-id></mixed-citation>
    </ref>
    <ref id="B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zeileis</surname><given-names>A.</given-names></name><name><surname>Croissant</surname><given-names>Y.</given-names></name></person-group> (<year>2010</year>). <article-title>Extended model formulas in R: multiple parts and multiple responses.</article-title>
<source><italic>J. Stat. Softw.</italic></source>
<volume>34</volume>
<fpage>1</fpage>–<lpage>13</lpage>.</mixed-citation>
    </ref>
  </ref-list>
</back>

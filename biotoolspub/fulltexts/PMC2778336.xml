<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v2.2 20060430//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName journalpublishing.dtd?>
<?SourceDTD.Version 2.2?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-id journal-id-type="hwp">bioinfo</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">2778336</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btp554</article-id>
    <article-id pub-id-type="publisher-id">btp554</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Applications Note</subject>
        <subj-group>
          <subject>Sequence Analysis</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>MOODS: fast search for position weight matrix matches in DNA sequences</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Korhonen</surname>
          <given-names>Janne</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>1</sup>
        </xref>
        <xref ref-type="corresp" rid="COR1">
          <sup>*</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Martinmäki</surname>
          <given-names>Petri</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Pizzi</surname>
          <given-names>Cinzia</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>2</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Rastas</surname>
          <given-names>Pasi</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Ukkonen</surname>
          <given-names>Esko</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>1</sup>
        </xref>
      </contrib>
    </contrib-group>
    <aff id="AFF1"><sup>1</sup> Department of Computer Science and Helsinki Institute for Information Technology, University of Helsinki, Helsinki, Finland and <sup>2</sup> Department of Information Engineering, University of Padova, Padova, Italy</aff>
    <author-notes>
      <corresp id="COR1"><sup>*</sup> To whom correspondence should be addressed.</corresp>
      <fn>
        <p>Associate Editor: Alex Bateman</p>
      </fn>
    </author-notes>
    <pub-date pub-type="ppub">
      <day>1</day>
      <month>12</month>
      <year>2009</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>22</day>
      <month>9</month>
      <year>2009</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>22</day>
      <month>9</month>
      <year>2009</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the
							<pub-date pub-type="epub"/>. -->
    <volume>25</volume>
    <issue>23</issue>
    <fpage>3181</fpage>
    <lpage>3182</lpage>
    <history>
      <date date-type="received">
        <day>14</day>
        <month>7</month>
        <year>2009</year>
      </date>
      <date date-type="rev-recd">
        <day>3</day>
        <month>9</month>
        <year>2009</year>
      </date>
      <date date-type="accepted">
        <day>15</day>
        <month>9</month>
        <year>2009</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2009. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2009</copyright-year>
      <license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by-nc/2.0/uk/">
        <license-p><!--CREATIVE COMMONS-->This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by-nc/2.5/uk/">http://creativecommons.org/licenses/by-nc/2.5/uk/</ext-link>) which permits unrestricted non-commercial use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <abstract>
      <p><bold>Summary:</bold> MOODS (MOtif Occurrence Detection Suite) is a software package for matching position weight matrices against DNA sequences. MOODS implements state-of-the-art online matching algorithms, achieving considerably faster scanning speed than with a simple brute-force search. MOODS is written in C++, with bindings for the popular BioPerl and Biopython toolkits. It can easily be adapted for different purposes and integrated into existing workflows. It can also be used as a C++ library.</p>
      <p><bold>Availability:</bold> The package with documentation and examples of usage is available at <ext-link ext-link-type="uri" xlink:href="http://www.cs.helsinki.fi/group/pssmfind">http://www.cs.helsinki.fi/group/pssmfind</ext-link>. The source code is also available under the terms of a GNU General Public License (GPL).</p>
      <p>
        <bold>Contact:</bold>
        <email>janne.h.korhonen@helsinki.fi</email>
      </p>
    </abstract>
  </article-meta>
</front>
<body>
  <sec sec-type="intro" id="SEC1">
    <title>1 INTRODUCTION</title>
    <p>Position weight matrices (PWMs), also known as position-specific scoring matrices or weighted patterns, are a simple, yet important model for signals in biological sequences (Stormo <italic>et al.</italic>, <xref ref-type="bibr" rid="B11">1982</xref>). For example, they are widely used to model transcription factor binding sites in the DNA. Due to the vast amount of biological data, both in PWM and DNA databases, high-performance algorithms for matrix search are needed.</p>
    <p>Recent theoretical developments into PWM search algorithms can be roughly categorized into two groups, the index-based algorithms and the online algorithms. The index-based algorithms preprocess the target sequence into an index structure, typically a suffix tree or a suffix array, and use the index structure to facilitate quick search for matrix matches (Beckstette <italic>et al.</italic>, <xref ref-type="bibr" rid="B1">2006</xref>). The online algorithms, on the other hand, perform a simple sequential search over the target sequence. Most state-of-the-art algorithms of this type are based on classical string matching algorithms (Liefooghe <italic>et al.</italic>, <xref ref-type="bibr" rid="B5">2009</xref>; Pizzi <italic>et al.</italic>, <xref ref-type="bibr" rid="B7">2007</xref>, <xref ref-type="bibr" rid="B8">2009</xref>; Salmela and Tarhio, <xref ref-type="bibr" rid="B9">2007</xref>; Wu <italic>et al.</italic>, <xref ref-type="bibr" rid="B12">2000</xref>).</p>
    <p>While index-based algorithms may offer significantly faster search times, they also require a large amount of time and space for the construction of the index structure. For this reason, online algorithms are generally more practical in most situations, as typical DNA databases offer only raw sequence data. However, the work on advanced online algorithms has so far been mostly of theoretical nature, and no implementation packages intended for end-users have been published. To fill this gap, we have implemented a suite of efficient algorithms, called Motif Occurrence Detection Suite (MOODS). MOODS implements the algorithms developed in Pizzi <italic>et al.</italic> (<xref ref-type="bibr" rid="B7">2007</xref>, <xref ref-type="bibr" rid="B8">2009</xref>), where also an extensive performance comparison of the new and old algorithms is reported. MOODS can be used as an extension to various scripting languages popular in bioinformatics. So far we have implemented bindings for the BioPerl (<ext-link ext-link-type="uri" xlink:href="http://www.bioperl.org">http://www.bioperl.org</ext-link>) and Biopython (<ext-link ext-link-type="uri" xlink:href="http://www.biopython.org">http://www.biopython.org</ext-link>; Cock <italic>et al.</italic> <xref ref-type="bibr" rid="B3">2009</xref>)) toolkits.</p>
  </sec>
  <sec id="SEC2">
    <title>2 ALGORITHMS AND IMPLEMENTATION</title>
    <p>The core of MOODS is formed by the search algorithms themselves, implemented in C++ and making use of the C++ Standard Template Library. The package contains the following algorithms described and experimentally compared in detail in Pizzi <italic>et al.</italic> (<xref ref-type="bibr" rid="B8">2009</xref>):
<list list-type="bullet"><list-item><p>The <italic>lookahead filtration algorithm</italic> (LF) and its <italic>multi-matrix</italic> version [multi-matrix lookahead filtration algorithm (MLF)]. For a given input PWM <italic>M</italic>, these algorithms first find the statistically most significant submatrix (i.e. the most selective submatrix against the background) of fixed length <italic>h</italic>, called <italic>the scanning window</italic> of <italic>M</italic>. Then the target DNA sequence is scanned with a finite state automaton that finds subsequences that score well against the scanning window. The full score against <italic>M</italic> is calculated only at these sequence positions. Scanning with the finite state automaton takes <italic>O</italic>(<italic>n</italic>) time, where <italic>n</italic> is the length of the DNA sequence, leading to nearly linear overall performance. The memory requirement of the finite state automaton is limited by the length <italic>h</italic> of the scanning window. In the multi-matrix variant, we combine all the automata into a single automaton, making it possible to efficiently find matches for a large PWM set in just one pass over the sequence.</p></list-item><list-item><p>The <italic>naive super-alphabet algorithm</italic> (NS), which is as the naive matching algorithm, but uses a large alphabet consisting of tuples of original alphabet symbols. It works well for very long matrices (&gt;30 bp).</p></list-item></list>
</p>
    <p>The MLF algorithm is most suitable for PWM search tasks in practice and has the best overall performance out of the algorithms of MOODS. For completeness, we have also included implementations of the naive algorithm, which directly evaluates the matrix score at all sequence positions, and the permutated lookahead algorithm (Wu <italic>et al.</italic>, <xref ref-type="bibr" rid="B12">2000</xref>). In addition, the package contains the well-known dynamic programming algorithm for converting <italic>P</italic>-values into score thresholds (Staden, <xref ref-type="bibr" rid="B10">1989</xref>; Wu <italic>et al.</italic>, <xref ref-type="bibr" rid="B12">2000</xref>).</p>
    <p>MOODS uses the standard scoring model (log-odds against the background distribution) of PWMs, as described, e.g. in Pizzi <italic>et al.</italic> (<xref ref-type="bibr" rid="B8">2009</xref>). A user can specify the pseudocounts for the calculation of log-odds scores from matrices. This calculation can also account for the background distribution of the alphabet in the DNA sequence, which can be specified by the user or estimated directly from the sequence. The scoring thresholds can be specified via <italic>P</italic>-values or as absolute thresholds.</p>
    <p>The package includes Perl and Python interfaces to the algorithms, making use of the respective bioinformatics toolkits. These interfaces can utilize classes from the existing toolkits as input and return the results as Perl or Python data structures.</p>
    <p>We have tested our software on Linux with gcc C++ compiler. It should be usable on any UNIX-like operating system supported by gcc and either BioPerl or Biopython.</p>
  </sec>
  <sec sec-type="discussion" id="SEC3">
    <title>3 DISCUSSION</title>
    <p>With BioPerl and Biopython interfaces, the MOODS algorithms can easily be included into existing workflows. Likewise, scripts can be written to use the implemented algorithms for specific purposes. Existing facilities can be used to load sequences from formatted files or to fetch data from online databases. The results can then be processed further, for example, to find subsequences with statistically significant amounts of matches. On the other hand, the C++ algorithm implementations can also be directly integrated into existing or new software, thanks to the open source licensing. The MOODS web page (<ext-link ext-link-type="uri" xlink:href="http://cs.helsinki.fi/group/pssmfind">http://cs.helsinki.fi/group/pssmfind</ext-link>) provides several example scripts, as well as a simple C++ program for basic usage and as an example of C++ integration.</p>
    <p>To benchmark the performance of our package, we tested the naive algorithm, the permutated lookahead algorithm and the MLF algorithm with real biological data. We did similar benchmark also for the Motility library (part of the Cartwheel bioinformatics toolkit; Brown <italic>et al.</italic> <xref ref-type="bibr" rid="B2">2005</xref>), TFBS BioPerl extension (Lenhard and Wasserman, <xref ref-type="bibr" rid="B4">2002</xref>) and Biopython's built-in PWM matching algorithm. These packages all use the naive algorithm.</p>
    <p>The test setup was as follows. We used matrices from the TRANSFAC public database (Matys <italic>et al.</italic>, <xref ref-type="bibr" rid="B6">2003</xref>) as our matrix set, containing a total of 398 matrices. The target sequences were taken from the human genome. We matched both the original matrices and their reverse complements against the sequences, in effect searching both strands of the DNA. This means that the MLF algorithm scanned for 796 matrices simultaneously. We ran the tests on a 3.16 GHz Intel Core 2 Duo desktop computer with 2 GB of main memory, running Linux operating system.</p>
    <p>The results of our tests are displayed in <xref ref-type="table" rid="T1">Table 1</xref>. The results illustrate the advantages of carefully tuned C++ algorithm implementations and also indicate that more advanced algorithms offer practical benefits. We also tested matching the TRANSFAC matrices against both strands of the whole human genome with <italic>P</italic>-value 10<sup>−6</sup>, using the MLF algorithm. The total scanning time was about 42.1 min, with the number of matches being 29 354 584. Overall, these experiments indicate that our implementations perform well even on large datasets.
<table-wrap id="T1" position="float"><label>Table 1.</label><caption><p>Algorithm benchmarks</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th rowspan="1" colspan="1"/><th align="left" colspan="2" rowspan="1">600k<hr/></th><th align="left" colspan="2" rowspan="1">Chr20<hr/></th></tr><tr><th align="left" rowspan="1" colspan="1"><italic>P</italic>-value</th><th align="left" rowspan="1" colspan="1">10<sup>−6</sup></th><th align="left" rowspan="1" colspan="1">10<sup>−4</sup></th><th align="left" rowspan="1" colspan="1">10<sup>−6</sup></th><th align="left" rowspan="1" colspan="1">10<sup>−4</sup></th></tr></thead><tbody align="left"><tr><td align="left" rowspan="1" colspan="1">MOODS</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/></tr><tr><td align="left" rowspan="1" colspan="1"> Naive algorithm</td><td align="left" rowspan="1" colspan="1">6.5 s</td><td align="left" rowspan="1" colspan="1">7.3 s</td><td align="left" rowspan="1" colspan="1">689 s</td><td align="left" rowspan="1" colspan="1">782 s</td></tr><tr><td align="left" rowspan="1" colspan="1"> Permutated lookahead</td><td align="left" rowspan="1" colspan="1">3.8 s</td><td align="left" rowspan="1" colspan="1">6.3 s</td><td align="left" rowspan="1" colspan="1">405 s</td><td align="left" rowspan="1" colspan="1">677 s</td></tr><tr><td align="left" rowspan="1" colspan="1"> MLF</td><td align="left" rowspan="1" colspan="1">0.4 s</td><td align="left" rowspan="1" colspan="1">1.1 s</td><td align="left" rowspan="1" colspan="1">16.0 s</td><td align="left" rowspan="1" colspan="1">117 s</td></tr><tr><td colspan="5" rowspan="1"><hr/></td></tr><tr><td align="left" rowspan="1" colspan="1">TFBS</td><td align="left" rowspan="1" colspan="1">20.4 s</td><td align="left" rowspan="1" colspan="1">53.1 s</td><td align="left" rowspan="1" colspan="1">–</td><td align="left" rowspan="1" colspan="1">–</td></tr><tr><td align="left" rowspan="1" colspan="1">Motility</td><td align="left" rowspan="1" colspan="1">103 s</td><td align="left" rowspan="1" colspan="1">103 s</td><td align="left" rowspan="1" colspan="1">180 min</td><td align="left" rowspan="1" colspan="1">181 min</td></tr><tr><td align="left" rowspan="1" colspan="1">Biopython</td><td align="left" rowspan="1" colspan="1">42 min</td><td align="left" rowspan="1" colspan="1">41 min</td><td align="left" rowspan="1" colspan="1">–</td><td align="left" rowspan="1" colspan="1">–</td></tr><tr><td colspan="5" rowspan="1"><hr/></td></tr><tr><td align="left" rowspan="1" colspan="1">Matches</td><td align="left" rowspan="1" colspan="1">952</td><td align="left" rowspan="1" colspan="1">7.3 × 10<sup>4</sup></td><td align="left" rowspan="1" colspan="1">1.1 × 10<sup>5</sup></td><td align="left" rowspan="1" colspan="1">6.7 × 10<sup>6</sup></td></tr></tbody></table><table-wrap-foot><fn><p>We used two target sequences: ‘600k’ is a 600 kb long human DNA fragment, and ‘Chr20’ is the 62 Mb long human chromosome 20. The total scanning times for each algorithm or package are given, with ‘–’ indicating that the dataset was too large to be processed. The reported times include the construction of the data structures required in scanning as well as the scanning itself. The ‘matches’ row gives the total number of matches found for each <italic>P</italic>-value.</p></fn></table-wrap-foot></table-wrap>
</p>
    <p><italic>Funding</italic>: Academy of Finland (grant 7523004, Algorithmic Data Analysis); the European Union's Sixth Framework Programme (contract LSHG-CT-2003-503265, BioSapiens Network of Excellence).</p>
    <p><italic>Conflict of interest</italic>: none declared.</p>
  </sec>
</body>
<back>
  <ref-list>
    <title>REFERENCES</title>
    <ref id="B1">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Beckstette</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Fast index based algorithms for matching position specific scoring matrices</article-title>
        <source>BMC Bioinformatics</source>
        <year>2006</year>
        <volume>7</volume>
        <fpage>389</fpage>
        <pub-id pub-id-type="pmid">16930469</pub-id>
      </element-citation>
    </ref>
    <ref id="B2">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Brown</surname>
            <given-names>CT</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Paircomp, FamilyRelationsII and Cartwheel: tools for interspecific sequence comparison</article-title>
        <source>BMC Bioinformatics</source>
        <year>2005</year>
        <volume>6</volume>
        <fpage>70</fpage>
        <pub-id pub-id-type="pmid">15790396</pub-id>
      </element-citation>
    </ref>
    <ref id="B3">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cock</surname>
            <given-names>PJA</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Biopython: freely available Python tools for computational molecular biology and bioinformatics</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <fpage>1422</fpage>
        <lpage>1423</lpage>
        <pub-id pub-id-type="pmid">19304878</pub-id>
      </element-citation>
    </ref>
    <ref id="B4">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lenhard</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Wasserman</surname>
            <given-names>WW</given-names>
          </name>
        </person-group>
        <article-title>TFBS: computational framework for transcription factor binding site analysis</article-title>
        <source>Bioinformatics</source>
        <year>2002</year>
        <volume>18</volume>
        <fpage>1135</fpage>
        <lpage>1136</lpage>
        <pub-id pub-id-type="pmid">12176838</pub-id>
      </element-citation>
    </ref>
    <ref id="B5">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Liefooghe</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Self-overlapping occurrences and Knuth-Morris-Pratt algorithm for weighted matching</article-title>
        <source>Proceedings of Third International Conference on Language and Automata Theory and Applications (LATA)</source>
        <year>2009</year>
        <volume>5457</volume>
        <publisher-loc>Tarragona, Spain</publisher-loc>
        <publisher-name>Springer</publisher-name>
        <fpage>481</fpage>
        <lpage>492</lpage>
        <comment>of <italic>Lecture Notes in Computer Science</italic></comment>
      </element-citation>
    </ref>
    <ref id="B6">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Matys</surname>
            <given-names>V</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>TRANSFAC(R): transcriptional regulation, from patterns to profiles</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2003</year>
        <volume>31</volume>
        <fpage>374</fpage>
        <lpage>378</lpage>
        <pub-id pub-id-type="pmid">12520026</pub-id>
      </element-citation>
    </ref>
    <ref id="B7">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Pizzi</surname>
            <given-names>C</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Fast search algorithms for position specific scoring matrices</article-title>
        <source>Proceedings of Bioinformatics Research and Development Conference (BIRD)</source>
        <year>2007</year>
        <volume>4414</volume>
        <publisher-loc>Berlin, Germany</publisher-loc>
        <publisher-name>Springer</publisher-name>
        <fpage>239</fpage>
        <lpage>250</lpage>
        <comment>of <italic>Lecture Notes in Bioinformatics</italic></comment>
      </element-citation>
    </ref>
    <ref id="B8">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pizzi</surname>
            <given-names>C</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Finding significant matches of position weight matrices in linear time</article-title>
        <source>IEEE/ACM Trans Comput. Biol. Bioinform.</source>
        <year>2009</year>
        <comment>(in press)</comment>
      </element-citation>
    </ref>
    <ref id="B9">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Salmela</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Tarhio</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Algorithms for weighted matching</article-title>
        <source>Proceedings of International Symposium on String Processing and Information Retrieval (SPIRE)</source>
        <year>2007</year>
        <volume>4726</volume>
        <publisher-loc>Santiago, Chile</publisher-loc>
        <publisher-name>Springer</publisher-name>
        <fpage>276</fpage>
        <lpage>286</lpage>
        <comment>of <italic>Lecture Notes in Computer Science</italic></comment>
      </element-citation>
    </ref>
    <ref id="B10">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Staden</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Methods for calculating the probabilities of finding patterns in sequences</article-title>
        <source>Comput. Appl. Biosci.</source>
        <year>1989</year>
        <volume>5</volume>
        <fpage>89</fpage>
        <lpage>96</lpage>
        <pub-id pub-id-type="pmid">2720468</pub-id>
      </element-citation>
    </ref>
    <ref id="B11">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Stormo</surname>
            <given-names>GD</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Use of the ‘perceptron’ algorithm to distinguish translational initiation sites in e. coli</article-title>
        <source>Nucleic Acids Res.</source>
        <year>1982</year>
        <volume>10</volume>
        <fpage>2997</fpage>
        <lpage>3012</lpage>
        <pub-id pub-id-type="pmid">7048259</pub-id>
      </element-citation>
    </ref>
    <ref id="B12">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wu</surname>
            <given-names>TD</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Fast probabilistic analysis of sequence function using scoring matrices</article-title>
        <source>Bioinformatics</source>
        <year>2000</year>
        <volume>16</volume>
        <fpage>233</fpage>
        <lpage>244</lpage>
        <pub-id pub-id-type="pmid">10869016</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

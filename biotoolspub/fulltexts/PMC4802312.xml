<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NPG//DTD XML Article//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName NPG_XML_Article.dtd?>
<?SourceDTD.Version 2.7.10?>
<?ConverterInfo.XSLTName nature2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Sci Rep</journal-id>
    <journal-id journal-id-type="iso-abbrev">Sci Rep</journal-id>
    <journal-title-group>
      <journal-title>Scientific Reports</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2045-2322</issn>
    <publisher>
      <publisher-name>Nature Publishing Group</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">4802312</article-id>
    <article-id pub-id-type="pii">srep23466</article-id>
    <article-id pub-id-type="doi">10.1038/srep23466</article-id>
    <article-id pub-id-type="pmid">27001340</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>UniBic: Sequential row-based biclustering algorithm for analysis of gene expression data</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Wang</surname>
          <given-names>Zhenjia</given-names>
        </name>
        <xref ref-type="aff" rid="a1">1</xref>
        <xref ref-type="author-notes" rid="n1">*</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Li</surname>
          <given-names>Guojun</given-names>
        </name>
        <xref ref-type="corresp" rid="c1">a</xref>
        <xref ref-type="aff" rid="a1">1</xref>
        <xref ref-type="aff" rid="a3">3</xref>
        <xref ref-type="author-notes" rid="n1">*</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Robinson</surname>
          <given-names>Robert W.</given-names>
        </name>
        <xref ref-type="aff" rid="a2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Huang</surname>
          <given-names>Xiuzhen</given-names>
        </name>
        <xref ref-type="corresp" rid="c2">b</xref>
        <xref ref-type="aff" rid="a3">3</xref>
      </contrib>
      <aff id="a1"><label>1</label><institution>School of Mathematics, Shandong University</institution>, Jinan, Shandong 250100, <country>P.R. China</country></aff>
      <aff id="a2"><label>2</label><institution>Department of Computer Science, University of Georgia</institution>, Athens, GA 30602, <country>USA</country></aff>
      <aff id="a3"><label>3</label><institution>Department of Computer Science, Arkansas State University</institution>, Jonesboro, AR72467.</aff>
    </contrib-group>
    <author-notes>
      <corresp id="c1">
        <label>a</label>
        <email>guojunsdu@gmail.com</email>
      </corresp>
      <corresp id="c2">
        <label>b</label>
        <email>xhuang@astate.edu</email>
      </corresp>
      <fn id="n1">
        <label>*</label>
        <p>These authors contributed equally to this work.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="epub">
      <day>22</day>
      <month>03</month>
      <year>2016</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2016</year>
    </pub-date>
    <volume>6</volume>
    <elocation-id>23466</elocation-id>
    <history>
      <date date-type="received">
        <day>18</day>
        <month>06</month>
        <year>2015</year>
      </date>
      <date date-type="accepted">
        <day>08</day>
        <month>03</month>
        <year>2016</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright © 2016, Macmillan Publishers Limited</copyright-statement>
      <copyright-year>2016</copyright-year>
      <copyright-holder>Macmillan Publishers Limited</copyright-holder>
      <license xmlns:xlink="http://www.w3.org/1999/xlink" license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <!--author-paid-->
        <license-p>This work is licensed under a Creative Commons Attribution 4.0 International License. The images or other third party material in this article are included in the article’s Creative Commons license, unless indicated otherwise in the credit line; if the material is not included under the Creative Commons license, users will need to obtain permission from the license holder to reproduce the material. To view a copy of this license, visit <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link></license-p>
      </license>
    </permissions>
    <abstract>
      <p>Biclustering algorithms, which aim to provide an effective and efficient way to analyze gene expression data by finding a group of genes with trend-preserving expression patterns under certain conditions, have been widely developed since Morgan <italic>et al.</italic> pioneered a work about partitioning a data matrix into submatrices with approximately constant values. However, the identification of general trend-preserving biclusters which are the most meaningful substructures hidden in gene expression data remains a highly challenging problem. We found an elementary method by which biologically meaningful trend-preserving biclusters can be readily identified from noisy and complex large data. The basic idea is to apply the longest common subsequence (LCS) framework to selected pairs of rows in an index matrix derived from an input data matrix to locate a seed for each bicluster to be identified. We tested it on synthetic and real datasets and compared its performance with currently competitive biclustering tools. We found that the new algorithm, named UniBic, outperformed all previous biclustering algorithms in terms of commonly used evaluation scenarios except for BicSPAM on narrow biclusters. The latter was somewhat better at finding narrow biclusters, the task for which it was specifically designed.</p>
    </abstract>
  </article-meta>
</front>
<body>
  <p>Gene expression microarray data measures expression levels of transcribed mRNA and is arranged in a matrix in which genes correspond to rows and experimental conditions (samples) to columns. Each entry (a real number) represents the expression level of a gene under a specific condition. The need to analyze vast amounts of biological data, including gene expression data, has been driving the development of new data mining (especially biclustering) methods. At first, algorithms such as hierarchical clustering<xref ref-type="bibr" rid="b1">1</xref> and k-means<xref ref-type="bibr" rid="b2">2</xref> were investigated to identify sets of functionally related genes or conditions. These traditional clustering methods usually group genes which exhibit similar expression levels across all conditions by maximizing across-cluster variations or minimizing within-cluster variations. But genes may not co-express under all conditions. For instance, a cellular process may only affect a small set of genes under certain conditions, so that a subset of genes may be co-regulated or co-expressed under only a subset of experimental conditions. Biologically, genes which are co-regulated under a subset of experimental conditions exhibit expression patterns which are <italic>trend-preserving</italic>, but which may be quite different in values under those conditions. Here a gene expression pattern refers to the vector of expression values of the gene under the specific conditions. Two gene expression patterns are said to be trend-preserving if and only if their corresponding vectors are either order-preserving or order-reversing. Two vectors <italic>x</italic> and <italic>y</italic> are said to be order-preserving if and only if any two corresponding components have the same rank (with respect to the numerical value) in their respective vectors, and order-reversing if and only if <italic>x</italic> and -<italic>y</italic> (or equivalently -<italic>x</italic> and <italic>y</italic>) are order-preserving. For general purpose applicability, the entries in a row within a trend-preserving bicluster are allowed to be same. Consider the following example.</p>
  <p><bold>Example 1</bold>: A trend-preserving bicluster of three genes under seven conditions. The first and second rows are order-preserving, and the other two possibilities (first and third rows, second and third rows) are both order-reversing.<disp-formula id="eq9"><inline-graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="srep23466-m9.jpg" id="d32e186"/></disp-formula></p>
  <p>We call a bicluster order-preserving if every pair of rows is order-preserving. Obviously, any trend-preserving bicluster is either order-preserving, or else the disjoint union of two order-preserving biclusters. In example 1 these are {<italic>g</italic><sub>1</sub>, <italic>g</italic><sub>2</sub>} and {<italic>g</italic><sub>3</sub>}.</p>
  <p>Finding a maximum subset of genes of trend-preserving expression patterns under a maximum subset of conditions is impossible using traditional clustering methods. Moreover, a single gene may participate in multiple pathways under different subsets of conditions, resulting in one function pattern under one subset of conditions and a different one under another, making the problem even more challenging. Biclustering methods have been proposed with the aim of overcoming these limitations in order to uncover the genetic relationships that are not apparent. Biclustering algorithms have been widely developed since Morgan <italic>et al.</italic><xref ref-type="bibr" rid="b3">3</xref> pioneered a work on partitioning a matrix into submatrices with approximately constant values. Cheng and Church<xref ref-type="bibr" rid="b4">4</xref> were the first to apply the biclustering idea to analyze gene expression data. Since then research on biclustering algorithm development in bioinformatics has focused on this application. Existing biclustering algorithms can be grouped into five categories in terms of the techniques on which they are based<xref ref-type="bibr" rid="b5">5</xref>:
<list id="l1" list-type="order"><list-item><p>Iterative row and column clustering combination: row clusters are combined with column clusters and vice versa, e.g. Interrelated Two-Way Clustering<xref ref-type="bibr" rid="b6">6</xref> and Coupled Two-Way Clustering<xref ref-type="bibr" rid="b7">7</xref>;</p></list-item><list-item><p>Divide and conquer: the problem is recursively broken down into checkerboard sub-problems, e.g. BiMax<xref ref-type="bibr" rid="b8">8</xref>, Hartigan<xref ref-type="bibr" rid="b9">9</xref>;</p></list-item><list-item><p>Greedy iterative search: locally optimal results are chosen in hopes that they might be globally optimal, e.g. Cheng and Church<xref ref-type="bibr" rid="b4">4</xref>, the Flexible Overlapped biclustering algorithm<xref ref-type="bibr" rid="b10">10</xref>, xMOTIFs<xref ref-type="bibr" rid="b11">11</xref>;</p></list-item><list-item><p>Exhaustive bicluster enumeration: enumerating all the possible biclusters, e.g. SAMBA<xref ref-type="bibr" rid="b12">12</xref>, OP-Cluster<xref ref-type="bibr" rid="b13">13</xref>;</p></list-item><list-item><p>Distribution parameter identification: biclusters are assumed to follow a given statistical model and parameters are identified to fit in the best way, e.g. Spectral biclustering methods<xref ref-type="bibr" rid="b14">14</xref>, Plaid<xref ref-type="bibr" rid="b15">15</xref> and Sheng <italic>et al.</italic><xref ref-type="bibr" rid="b16">16</xref>.</p></list-item></list></p>
  <p>Each of these biclustering algorithms is restricted to specific types of biclusters and datasets. In the assessment of twelve biclustering algorithms on twenty synthetic datasets from six models<xref ref-type="bibr" rid="b17">17</xref>, each algorithm performed well on one or a few datasets, but none performed well on all of them. With the availability of more and more microarray datasets, it has become important to develop a comprehensive biclustering algorithm to analyze gene expression data. In this article we present an elementary method for biclustering. Our method substantially overcomes the limitations of all prior biclustering algorithms, and enables discovery of the most biologically meaningful biclusters in gene expression datasets.</p>
  <p>Biologically speaking, trend-preserving biclusters are the most meaningful local structures hidden in a data matrix. Trend-preserving biclusters are a generalization of all widely studied types of biclusters, including constant, shift, scale, and shift-scale biclusters. The latter two types of biclusters were ever considered computationally challenging to identify<xref ref-type="bibr" rid="b18">18</xref>.</p>
  <p>Ben-Dor <italic>et al.</italic><xref ref-type="bibr" rid="b19">19</xref> developed an algorithm (OPSM) to discover significant order-preserving biclusters based on statistical strategies. In their model, the rows of the input matrix are required to be permutations of some <italic>m</italic> positive integers, <italic>1</italic>, <italic>2</italic>, …, <italic>m</italic>, as well as to be pairwise different. The technique used in OPSM is essentially an exhaustive approach by iteratively growing each possible submatrix based on statistical evaluations. It has proved unsatisfactory to apply OPSM to the analysis of gene expression datasets<xref ref-type="bibr" rid="b17">17</xref>. Ever since many methods have been proposed to mine frequent sequential patterns as the extension of the OPSM approach, e.g. OPSM-RM<xref ref-type="bibr" rid="b20">20</xref> collects results from repeated experiments to cope with noise, GeBOPSM<xref ref-type="bibr" rid="b21">21</xref> proposes a generalized OPSM model by relaxing the requirement that each row has to be composed of different integers in OPSM, and POPSM<xref ref-type="bibr" rid="b22">22</xref> captures similar local correlations in probabilistic matrices with uncertain data. However in these models the optimal solutions may not be guaranteed as long patterns with few supports might be pruned in early stage and the requirements of computational resource are explosive. Jiang <italic>et al.</italic><xref ref-type="bibr" rid="b23">23</xref> also proposed a parallel partitioning and mining method based on Butterfly Network to extend and improve OPSM.</p>
  <p>The biclustering algorithm QUBIC<xref ref-type="bibr" rid="b24">24</xref> we previously developed attempts to discover trend-preserving biclusters in gene expression data by granulating gene expression values into <italic>r</italic> ≥ 1 ranks. However, its performance degrades rapidly as the number of ranks of gene expression values increases. Example 2 shows what is wrong with QUBIC for an example of a bad case.</p>
  <p><bold>Example 2</bold>: bad case for QUBIC</p>
  <p>
    <disp-formula id="eq1">
      <inline-graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="srep23466-m1.jpg" id="d32e303"/>
    </disp-formula>
  </p>
  <p>Obviously, expression patterns (2, 2, 4, 4, 4) of <italic>g</italic><sub>1</sub> and (4, 4, 8, 8, 8) of <italic>g</italic><sub>2</sub> under conditions 1, 2, 3, 4, 5 are order-preserving. After ranking as in QUBIC (for any <italic>r</italic> &gt; 0), these two order preserved patterns could no longer be identified, which leads to an incorrect result. If <italic>r</italic> = 1 then all ranks are 1, so the whole 2 × 10 array is outputted as a bicluster, but it is not meaningful. If <italic>r</italic> = 2, the pattern becomes</p>
  <p>
    <disp-formula id="eq2">
      <inline-graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="srep23466-m2.jpg" id="d32e329"/>
    </disp-formula>
  </p>
  <p>which contains only the empty bicluster. Similarly, QUBIC recognizes only the empty bicluster in (<italic>g</italic><sub>1</sub>, <italic>g</italic><sub>2</sub>) for any <italic>r</italic> &gt; 1. Our observation, which is very natural, leads to a Universal approach for discovering trend-preserving Biclusters in gene expression data, which is based on an application of the longest common subsequence (LCS) algorithm<xref ref-type="bibr" rid="b25">25</xref> to a new matrix derived from the input data matrix. We tested and compared UniBic with six other competitive biclustering algorithms, including OPSM<xref ref-type="bibr" rid="b19">19</xref>, QUBIC<xref ref-type="bibr" rid="b24">24</xref>, ISA<xref ref-type="bibr" rid="b26">26</xref>, FABIA<xref ref-type="bibr" rid="b27">27</xref>, CPB<xref ref-type="bibr" rid="b28">28</xref>, and BicSPAM<xref ref-type="bibr" rid="b29">29</xref>, on large scale synthetic and real datasets. The comparison results demonstrate that UniBic overwhelmingly outperforms all of them with an exception that it is inferior to BicSPAM only when finding extremely narrow biclusters because BicSPAM was specifically designed for this purpose.</p>
  <sec disp-level="1">
    <title>Results</title>
    <sec disp-level="2">
      <title>Algorithm Validation</title>
      <p>To evaluate the biclustering algorithm UniBic, we compared it with six currently popular biclustering algorithms, including OPSM<xref ref-type="bibr" rid="b19">19</xref>, BicSPAM<xref ref-type="bibr" rid="b29">29</xref>, QUBIC<xref ref-type="bibr" rid="b24">24</xref>, ISA<xref ref-type="bibr" rid="b26">26</xref>, FABIA<xref ref-type="bibr" rid="b27">27</xref> and CPB<xref ref-type="bibr" rid="b28">28</xref>, on both synthetic and real datasets. Biclustering algorithms developed based on different methods tend to perform differently on various datasets, while some algorithms may perform better on one kind of datasets, others may tend to be better on other kinds of datasets. In order to fairly evaluate these algorithms, we tested them on six different types of synthetic datasets and eight real datasets from GEO database<xref ref-type="bibr" rid="b30">30</xref> with the aid of BiBench framework<xref ref-type="bibr" rid="b17">17</xref>.</p>
    </sec>
    <sec disp-level="2">
      <title>Validation on synthetic data</title>
      <p>As the biclusters to be discovered in synthetic data are supposed to be known, we compared identified biclusters with the genuine ones. Let <italic>b</italic><sub>1</sub> and <italic>b</italic><sub>2</sub> be two biclusters, their similarity is measured by Jaccard coefficient<xref ref-type="bibr" rid="b31">31</xref>:</p>
      <p>
        <disp-formula id="eq3">
          <inline-graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="srep23466-m3.jpg" id="d32e404"/>
        </disp-formula>
      </p>
      <p>where |<italic>b</italic><sub>1</sub> ∩ <italic>b</italic><sub>2</sub>| is the number of genes in their intersection, and |<italic>b</italic><sub>1</sub> ∪ <italic>b</italic><sub>2</sub>| is the number of their union. For two sets of biclusters <italic>M</italic><sub>1</sub> and <italic>M</italic><sub>2</sub>, the similarity score between them is calculated using the formula introduced in<xref ref-type="bibr" rid="b8">8</xref>:</p>
      <p>
        <disp-formula id="eq4">
          <inline-graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="srep23466-m4.jpg" id="d32e442"/>
        </disp-formula>
      </p>
      <p>which measures the average similarity of biclusters in <italic>M</italic><sub>1</sub> with the biclusters in <italic>M</italic><sub>2</sub>. <italic>Recovery score</italic> is defined as <italic>S</italic>(<italic>G</italic>, <italic>D</italic>), and <italic>relevance score</italic> as <italic>S</italic>(<italic>D</italic>, <italic>G</italic>), where <italic>G</italic> and <italic>D</italic> represent the sets of genuine biclusters and discovered biclusters, respectively.</p>
    </sec>
    <sec disp-level="2">
      <title>Validation on GDS data</title>
      <p>Evaluation of results on real data is different from on synthetic data as the genuine biclusters are not known. We validated biclusters by calculating the Gene Ontology enrichment (a statistically significant test which describes the probability of a gene set containing a certain number of particular GO terms) for genes in the discovered biclusters. This functional analysis was carried out using the GO stats package<xref ref-type="bibr" rid="b32">32</xref>. A bicluster here is assumed to be enriched if it has at least one GO term with statistically significant <italic>p</italic>-value smaller than 0.05, where the <italic>p</italic>-value is adjusted by multiple test correction using the method from Benjamini and Hochberg<xref ref-type="bibr" rid="b33">33</xref> (a way to control the false discovery rate in large datasets to reduce the number of false positives).</p>
    </sec>
    <sec disp-level="2">
      <title>Testing on Synthetic Datasets</title>
      <p>We first tested UniBic and the other six tools on synthetic datasets. All the algorithms were executed with their optimized parameters, respectively. For the test on synthetic datasets, there was no need to run the preprocessing steps (see Methods for more details) since all of the synthetic data was to be treated as genuine. To skip over the preprocessing steps, UniBic simply ran with parameters <italic>q</italic> = 0.5 and <italic>r</italic> = <italic>m</italic>. Here <italic>m</italic> is the number of columns in the input data matrix.</p>
      <p>Six different types of synthetic datasets were generated. The background matrices of synthetic datasets are of given large size with entries randomly chosen from Gaussian distribution <italic>N</italic>(0, 1), then given smaller sized submatrices were chosen with entries modified in according to the rules presented for Types I–VI, which are type I: trend-preserving biclusters; type II: column-constant biclusters; type III: row-constant biclusters; type IV: shift-scale biclusters; type V: shift biclusters; type VI: scale biclusters. Type I is biologically the most meaningful type and is a generalization of the others. It is generated by randomly selecting a base row within a selected submatrix and then rearranging the entries in other rows of the submatrix so that the rearranged submatrix is trend-preserving. Type II is generated by randomly selecting a row within a selected submatrix, and copying it to other rows in this submatrix. Type III is generated by randomly selecting a column within a selected submatrix, and copying it to other columns in this submatrix. Type IV is generated by randomly selecting a row within a selected submatrix as a base row, and replacing the other rows of the submatrix by both shifting and scaling of the base row. Type V is generated as in the type IV but with scaling parameter 1. Type VI is generated as in the type IV but with shifting parameter 0.</p>
    </sec>
    <sec disp-level="2">
      <title>Comparison on six types of biclusters</title>
      <p>To begin with, we generated at random three kinds of non-overlapping test matrices: a) matrices of size 150 × 100 with three implanted biclusters of size 15 × 15; b) matrices of size 200 × 150 with four implanted biclusters of size 20 × 20; c) matrices of size 300 × 200 with five implanted biclusters of size 25 × 25. Five rows were selected as order-reversing rows versus the base row for type I biclusters, and for all the six types of biclusters, five datasets were generated for each kind of test matrix through repetition. The average relevance and recovery scores among all test matrices are shown in <xref ref-type="fig" rid="f1">Fig. 1</xref> for each tool.</p>
      <p>On type I test matrices with trend-preserving biclusters implanted, UniBic overwhelmingly outperformed all other competitive algorithms with an average relevance score of 0.65 compared to the second highest relevance score of 0.33 for BicSPAM, and with an average recovery score of 0.69 versus the second highest recovery score of 0.39 for OPSM. The results show that UniBic discovers trend-preserving biclusters in data array much better than any of the other six tools. The data shows even greater advantages for UniBic with type II and type III test matrices. On the other test matrices, the advantage of UniBic was comparatively less significant, but it still outperformed all the other algorithms. Taken together, the comparisons indicate that UniBic is more stable than any of the other six algorithms, as well as performing better.</p>
      <p>OPSM performed best on type I and type II test matrices, in which the values are strict order-preserving with relatively large value gaps between bigger and smaller values in each row of implanted biclusters. On the type III test matrices, where the entries in each row of implanted biclusters are consist with a constant value, its performance became rather poor. BicSPAM performed slightly better than OPSM on almost all types of test matrices, and as it allows equal values in matrices, it performed well on type III test matrices. QUBIC performed well on type IV and V test matrices with large <italic>q</italic> values because it is suitable for datasets with biclusters which can be granulated to be separated from the background data. ISA and FABIA both showed their best performances on type V test matrices, as they were designed to perform well on datasets generated from data distribution with large variances, and their performances on type IV and type VI test matrices were also better than on other test matrices. CPB showed the least stable performance in repetitive experiments compared with other tools as it starts with a randomly selected set of columns, leading to significant fluctuations in its output.</p>
      <p>The comparison results shown in <xref ref-type="fig" rid="f1">Fig.1</xref> demonstrate that UniBic does overwhelmingly outperform all the compared tools on the datasets with implanted biclusters of nearly square shape. Our original intention in development of biclustering algorithms is to seek those biclusters of (nearly) square shape just like most computational scientists did. However, the narrow biclusters, with huge number of rows but only a few columns, are usually more important to biologists. Simultaneously with the development of the UniBic, we noticed BicSPAM<xref ref-type="bibr" rid="b29">29</xref>, which was designed specifically for extremely narrow biclusters, e.g. of rows more than 200 and columns less than 8. In this extremely situation, BicSPAM performs somewhat better than UniBic as it was mentioned in BicSPAM<xref ref-type="bibr" rid="b29">29</xref> that biclustering algorithms which are designed on the adoption of maximal sequential patterns may to some extent overlook narrow biclusters.</p>
      <p>To evaluate the capability of finding narrow biclusters of UniBic, we further tested it on the datasets with narrow biclusters implanted compared with six other algorithms. Comparison results from <xref ref-type="supplementary-material" rid="S1">Supplementary Fig. S1</xref> show that UniBic overwhelmingly outperforms all the competitive ones, including BicSPAM, unless the to-be-identified biclusters are very narrow, and its performance is almost independent of the number of rows. When the implanted biclusters become very narrow, e.g. with less than 8 columns but with more than hundreds of rows, the algorithm BicSPAM is more capable of returning accurate results as it is specially designed to identify this kind of narrow biclusters. However, BicSPAM’s performance rapidly degrades as the columns of the to-be-identified biclusters increase in number. It is worthy stressing that the version of BicSPAM we compared with in this article is in the absence of enhancements to foster the scalability of the underlying pattern mining searches and to deal with large scale datasets. The improved version<xref ref-type="bibr" rid="b34">34</xref> of BicSPAM has been developed for further integration of network information into its biclustering procedure.</p>
    </sec>
    <sec disp-level="2">
      <title>Comparison on overlapping biclusters</title>
      <p>Then we tested the seven tools on synthetic datasets with overlapping biclusters. The overlapping biclusters were generated by replacing the selected biclusters with trend-preserving biclusters. Four kinds of synthetic matrices were generated with three implanted biclusters overlapped of size 0 × 0, 3 × 3, 6 × 6 and 9 × 9 respectively, where the background matrices are of size 200 × 150 and biclusters are of size 20 × 20. Values in each of the three selected biclusters were shifted with 2, 4 and 6 to ensure that they were still trend-preserved while overlapped. Repeating the procedure five times, we obtained five synthetic matrices for each overlapping size.</p>
      <p>The relevance and recovery scores of seven algorithms on each kind of the test matrices with overlapping biclusters are shown in <xref ref-type="fig" rid="f2">Fig. 2</xref>. The results showed that for most algorithms, their performances went down as the degree of overlap increased. OPSM’s scores did not change much as its initial scores were low. ISA and FABIA showed robust performances with high scores. Our UniBic found nearly all the implanted biclusters when the biclusters were not overlapped. Although our performance was affected when the biclusters were overlapped, it still found most of the implanted biclusters, and the result did not change much when the overlapping size increased. This indicates that UniBic is more capable of finding overlapping biclusters than other compared tools.</p>
    </sec>
    <sec disp-level="2">
      <title>Testing on Real Datasets</title>
      <p>We further tested the seven tools on the eight gene expression datasets GDS181, GDS589, GDS1406, GDS1451, GDS1490, GDS2520, GDS3715, GDS3716 from the GEO database<xref ref-type="bibr" rid="b30">30</xref>. The detailed description of these datasets is summarized in <xref ref-type="table" rid="t1">Table 1</xref>.</p>
      <p>Considering the inactive entries and noise interference, we first preprocessed all the datasets (see Methods for more details). Up- and down-regulated values were separated from the background data with parameter <italic>q</italic> to be 15/<italic>m</italic> and <italic>r</italic> to be 15. For other algorithms that are required to be run on array data without missing values, the PCA imputation<xref ref-type="bibr" rid="b35">35</xref> was carried on the expression datasets, and all the algorithms were run with their parameters optimized. The GO enrichment was evaluated for each bicluster discovered by each tool, with significant <italic>p</italic>-value 0.05. Since different algorithms are based on different theoretic models, and their best performances with respectively optimized parameters may lead to different number of output biclusters, we assessed their performances by the proportion of GO enriched biclusters. All the statistics are shown in <xref ref-type="table" rid="t2">Table 2</xref>. UniBic outputted 62 enriched biclusters from 151 discovered ones, and reached the highest average enrichment level of 41.1% of these eight datasets. FABIA showed 22 enriched biclusters from 80 discovered ones, reached the lowest average enrichment level. ISA discovered the most biclusters of 217, but with a comparative lower average enrichment level of 32.7%. OPSM found the second most biclusters, but still with a comparative lower average enrichment level of 29.5%. QUBIC and CPB both had relatively higher average enrichment levels. We ran BicSPAM on the same real datasets, but we did not get final results because it was always out of memory.</p>
    </sec>
    <sec disp-level="2">
      <title>Utilization of Computing Resources</title>
      <p>Biclustering has been well known to be computationally intractable, and therefore it is highly challenging to develop an effective and efficient heuristic algorithm in order to meet the needs of analyzing large data matrices. Taking the total number of CPU operations required as the measure of time, we see that UniBic takes <italic>O</italic>(<italic>nm</italic>log<italic>m</italic>) times to create the index matrix, <italic>O</italic>(<italic>q</italic><sup>2</sup><italic>n</italic><sup><italic>2</italic></sup><italic>m</italic><sup>2</sup><italic>/k</italic>) to locate seeds of to-be-identified biclusters, and <italic>O</italic>(<italic>q</italic><sup>2</sup><italic>m</italic><sup>2</sup><italic>n</italic><sup>2</sup>) to extend biclusters. Thus the overall running time of UniBic is up bounded by <italic>O</italic>(<italic>q</italic><sup><italic>2</italic></sup><italic>m</italic><sup><italic>2</italic></sup><italic>n</italic><sup>2</sup>), from which we see that the running time of UniBic is independent of size of the biclusters to be identified, and even almost independent of columns of input matrix because <italic>qm</italic> approaches a constant value.</p>
      <p>To compare the computing resource usage for different algorithms, we ran the seven tools on the test matrices with fixed number of 50 columns, and calculated the individual running time distributions of the seven algorithms with their respective default parameters versus the number of rows. The algorithms were tested on these large test sets on a desktop computer (2.66 GHz Inter Core, 2 Duo CPU, and 4 GB memory). <xref ref-type="fig" rid="f3">Figure 3</xref> displays the comparison results among the seven individual running time distributions versus the number of rows.</p>
    </sec>
  </sec>
  <sec disp-level="1">
    <title>Discussion</title>
    <p>Since the first biclustering strategy was pioneered by Morgan <italic>et al.</italic><xref ref-type="bibr" rid="b3">3</xref> in 1963, researchers have attempted to develop an effective and efficient algorithm capable of discovering trend-preserving biclusters. Various biclustering algorithms have been playing important roles in the analysis of gene expression data, but the identification of general trend-preserving biclusters remains a challenging problem. Intuitively, as is also mentioned in<xref ref-type="bibr" rid="b19">19</xref>, the key to discovering biclusters in a data matrix lies in predicting a seed for each significant (trend-preserving) bicluster hidden in the data matrix to be analyzed. It has been considered to be rather challenging<xref ref-type="bibr" rid="b19">19</xref> even in the special case where input matrix consists of <italic>n</italic> distinct permutations of (<italic>1</italic>, <italic>2</italic>, …, <italic>m</italic>). The UniBic captures the essence of how to locate a seed of each to-be-identified bicluster hidden in a background matrix by finding a longest common subsequence between two rows of the index matrix derived from the input matrix. This provides a transformation from the problem of discovering trend-preserving biclusters in a background matrix to a simple problem of finding the longest common subsequence between two rows of the index matrix derived from the background matrix. This transformation may seem to be routine, but it does improve the traditional biclustering approaches. Methodologically, UniBic takes an essential step towards the identification of the most general and meaningful biclusters hidden in a noisy and complex data matrix. The results on both synthetic and real data sets demonstrate that UniBic is more promising in discovery of functionally correlated expression patterns in gene expression data, and proves to be a powerful biclustering analysis tool for large microarray data.</p>
  </sec>
  <sec disp-level="1">
    <title>Methods</title>
    <p>In this section, we present our novel biclustering algorithm, which is capable of discovering all the significant trend-preserving biclusters hidden in a data matrix. The basic idea behind the algorithm comes from the following observations: 1) there exists a column permutation of an order-preserving bicluster such that the entries of each permuted row within the bicluster are increasingly (not necessarily strictly) arranged, and 2) the key to biclustering is the accurate prediction of the columns of each to-be-identified bicluster. Motivated by these two observations, we designed a novel algorithm by applying the LCS algorithm to selected pairs of rows of an index matrix derived from the input data matrix.</p>
    <p>The foundation of the algorithm is the fact that if two rows of the input matrix <italic>A</italic> belong to a significant order-preserving bicluster, then the corresponding two rows of the index matrix <italic>Y</italic> will contain a significant common subsequence with a high probability, and vice versa. This elementary observation leads to a novel method to identify a seed for each potential trend-preserving bicluster. To achieve this goal, we could calculate all the significant common subsequences by applying the LCS algorithm to each pair of rows of <italic>Y</italic>. Instead, we identify a number <italic>k</italic> (see <xref ref-type="supplementary-material" rid="S1">Supplementary Section 1</xref> online) such that every significant order-preserving bicluster <italic>B</italic> must contain at least <italic>k</italic> + 1 rows. Now assume that <italic>B</italic> is such a bicluster, if we equally partition the set of rows of <italic>A</italic> into <italic>k</italic> subsets of rows, then there must be at least two rows of <italic>B</italic> falling into one of these <italic>k</italic> subsets, and the two rows are sufficient to locate a seed for <italic>B</italic>. Therefore, applying the LCS algorithm to each pair of rows in each of the <italic>k</italic> subsets of <italic>Y</italic> would be sufficient to anchor a seed for each significant order-preserving bicluster of more than <italic>k</italic> rows. This process identifies a seed for each potential bicluster hidden in the data matrix. The algorithm follows the steps below in order:</p>
    <sec disp-level="2">
      <title>Algorithm UniBic</title>
      <sec disp-level="3">
        <title>Step 1. Index matrix creation</title>
        <p>Let <italic>Y</italic> = {<italic>y</italic><sub><italic>ij</italic></sub>} be the index matrix derived from input matrix <italic>A</italic> = {<italic>a</italic><sub><italic>ij</italic></sub>} by setting:</p>
        <p>
          <disp-formula id="eq5">
            <inline-graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="srep23466-m5.jpg" id="d32e784"/>
          </disp-formula>
        </p>
        <p>where ties are broken based on the rule that the smaller column index has higher priority to be ranked (see <xref ref-type="supplementary-material" rid="S1">Supplementary Section 4</xref> online).</p>
      </sec>
      <sec disp-level="3">
        <title>Step 2. Index matrix partition</title>
        <p>We calculate an integer <italic>k</italic> based on the significance (default set to 0.05) of the to-be-identified trend-preserving biclusters using the techniques developed in<xref ref-type="bibr" rid="b19">19</xref>. We then equally partition <italic>Y</italic> into <italic>k</italic> subsets of rows.</p>
      </sec>
      <sec disp-level="3">
        <title>Step 3. Application of LCS</title>
        <p>Apply the LCS algorithm to each pair of rows in each of the <italic>k</italic> subsets of <italic>Y</italic> to find all the significant longest common subsequences. For each pair of rows having a significant longest common subsequence, one such subsequence is chosen as a seed to which steps 4, 5 and 6 are to be applied. They are listed in decreasing order in length with the longest one at the front.</p>
      </sec>
      <sec disp-level="3">
        <title>Step 4. Strict order-preserving bicluster development</title>
        <p>We start with a longest seed at the front of the seed list obtained from step 3. The LCS algorithm is then repeatedly applied to find a 3 × <italic>C</italic> order-preserving submatrix of <italic>A</italic>, where two of the rows are from the seed and the value of C is as large as possible. We continue to add rows one at a time in a greedy fashion until the order-preserving submatrix has more rows than columns, at which point the submatrix from the previous stage is passed on to step 5.</p>
      </sec>
      <sec disp-level="3">
        <title>Step 5. Extension to an approximately trend-preserving bicluster</title>
        <p>From the strict order-preserving bicluster obtained in step 4, we extend it by first repeatedly adding new columns one at a time with an error rate <italic>r</italic> ≤ 0.3 until none is available. Up to now, the bicluster obtained is order-preserved. To identify a significant trend-preserving bicluster, we have to get those remaining original rows and their negative ones involved in the row extension process by repeatedly adding new rows (original or negative) one at a time with an error rate ≤0.15 until none is available. The row extension would be achieved by applying the LCS algorithm between the common (consensus) sequence of the column extended order-preserving bicluster and the corresponding index row in <italic>Y</italic> or its reverse row when we consider negative rows to be added. Then remove from the current seed list those with two corresponding rows belonging to discovered biclusters. Repeat step 4 for the next potential trend-preserving bicluster until the list is exhausted.</p>
      </sec>
      <sec disp-level="3">
        <title>Step 6. Output as many trend-preserving biclusters as the user needs</title>
        <p>We calculate the significance value for those trend-preserving biclusters obtained in step 5. Those with <italic>p</italic>-values less than 0.05 are decreasingly ordered in their significance. Then UniBic outputs first <italic>o</italic> trend-preserving biclusters, where <italic>o</italic> is a parameter which can be pre-specified by users with a default set to 100.</p>
        <p><bold>Example 3:</bold> Illustrates how to locate an initial seed of a trend-preserving bicluster in the input matrix <italic>A</italic>.</p>
        <p><bold>Example 3</bold>: Illustration of locating an initial seed.</p>
        <p><bold>Example 3a:</bold> Input matrix <italic>A</italic>:with entries of two rows and eight columns.<disp-formula id="eq6"><inline-graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="srep23466-m6.jpg" id="d32e872"/></disp-formula></p>
        <p><bold>Example 3b:</bold> The index matrix Y of A: with entries being obtained based on <xref ref-type="disp-formula" rid="eq5">eq. (3)</xref>.<disp-formula id="eq7"><inline-graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="srep23466-m7.jpg" id="d32e881"/></disp-formula></p>
        <p><bold>Example 3c:</bold> Initial seed: obtained by the longest common subsequence (2, 3, 6, 5, 1) through applying the LCS algorithm between rows <italic>i</italic> and <italic>j</italic> in <italic>Y</italic>.<disp-formula id="eq8"><inline-graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="srep23466-m8.jpg" id="d32e896"/></disp-formula></p>
      </sec>
    </sec>
    <sec disp-level="2">
      <title>Data Preprocessing</title>
      <p>When the algorithm UniBic is applied to real data matrices, especially gene expression data, it is better to preprocess the input data to alleviate the adverse impacts to data entries since corresponding genes are not activated under all conditions and there is noise interference from data approximation.</p>
    </sec>
    <sec disp-level="2">
      <title>Data separation</title>
      <p>The values of interest are usually hidden in a massive data matrix to be analyzed. Of interest in gene expression microarray matrix are those entries representing genes up- or down-regulated under corresponding conditions, which are usually only a small portion of the whole data matrix. Biologically, up- (down-) regulated expression values tend to be comparatively bigger (smaller). Those middle values which represent genes being inactive under corresponding conditions are comparatively less important in the analysis of gene expression data. Therefore, it is helpful to distinguish the values of interest from others in gene expression microarray data matrices. To do so, we chose a percentage parameter <italic>q</italic> with the default value set to 15/<italic>m</italic> (the value <italic>q</italic> = 0.5 is specially provided for data without separation preprocessing), where <italic>m</italic> is the number of columns of the input matrix, and we selected entries with values significantly away from the median value in each row of input matrix <italic>A</italic> as up- (down-) regulated values as follows:
<list id="l2" list-type="order"><list-item><p>Entries in each row <italic>i</italic> of <italic>A</italic> are increasing ordered: <italic>a</italic><sub><italic>i1</italic></sub>, …<italic>a</italic><sub><italic>is</italic></sub>, …<italic>a</italic><sub><italic>il</italic></sub>, …<italic>a</italic><sub><italic>it</italic></sub>, …<italic>a</italic><sub><italic>im</italic></sub>, where <italic>s</italic> = <italic>qm</italic>, <italic>l</italic> = <italic>m</italic>/2 and <italic>t</italic> = (1− <italic>q</italic>)<italic>m</italic>, <italic>d</italic> = min{<italic>a</italic><sub><italic>il</italic></sub>− <italic>a</italic><sub><italic>is</italic></sub>, <italic>a</italic><sub><italic>it</italic></sub> − <italic>a</italic><sub><italic>il</italic></sub>}.</p></list-item><list-item><p>For the values bigger than <italic>a</italic><sub><italic>il</italic></sub> + <italic>d</italic>, they are treated as up-regulated values, and values smaller than <italic>a</italic><sub><italic>il</italic></sub>–<italic>d</italic> are treated as down-regulated values.</p></list-item><list-item><p>Set all the other entries in <italic>A</italic> to be zero, and denote by <italic>A</italic>’ the resultant matrix.</p></list-item></list></p>
    </sec>
    <sec disp-level="2">
      <title>Data granulation</title>
      <p>Data array, e.g. gene expression microarray data, generated from wet laboratory is inevitably approximated, leading the algorithms, including UniBic, to be affected adversely to some extent. To avoid suffering from this approximation, we further preprocessed the input data by equally partitioning all the up-regulated decreasingly ordered entries in each row of <italic>A</italic>’ into <italic>r</italic> (a parameter which may be pre-specified by user) intervals, then we set all the entries belonging to the <italic>i</italic>’th interval to be the integer <italic>i</italic>, while the down-regulated increasingly ordered entries in each row of <italic>A</italic>’ were also separated into <italic>r</italic> intervals and entries belonging to the <italic>i</italic>’th interval were set to be the integer −<italic>i</italic>, then we get a new integer matrix denoted by <italic>A</italic>”.</p>
      <p>Obviously, the trend-preserving biclusters in <italic>A</italic>” equivalently correspond to those in <italic>A</italic>. Therefore, we may apply the UniBic on <italic>A</italic>” to discover all the significant trend-preserving biclusters hidden in <italic>A</italic>. This approach has been experimentally proved to be helpful in reducing adverse impacts on performance.</p>
    </sec>
  </sec>
  <sec disp-level="1">
    <title>Additional Information</title>
    <p><bold>Data Availability</bold>: The source code as well as all datasets and results are available at: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="uri" xlink:href="http://sourceforge.net/projects/unibic/files/?source=navbar">http://sourceforge.net/projects/unibic/files/?source=navbar</ext-link>. <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="uri" xlink:href="http://www.nature.com/srep"/></p>
    <p><bold>How to cite this article</bold>: Wang, Z. <italic>et al.</italic> UniBic: Sequential row-based biclustering algorithm for analysis of gene expression data. <italic>Sci. Rep.</italic>
<bold>6</bold>, 23466; doi: 10.1038/srep23466 (2016).</p>
  </sec>
  <sec sec-type="supplementary-material" id="S1">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="d32e32">
      <caption>
        <title>Supplementary Information</title>
      </caption>
      <media xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="srep23466-s1.pdf"/>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack>
    <p>This work was partially supported by the grants from NSFC with codes 61432010, 61272016 and 31571354, and also partially supported by National Science Foundation with number 1553680, and the National Institute of Health grants from the National Center for Research Resources (P20RR016460) and the National Institute of General Medical Sciences (P20GM103429), and the support from Arkansas Soybean Promotion Board.</p>
  </ack>
  <ref-list>
    <ref id="b1">
      <mixed-citation publication-type="journal"><name><surname>Sokal</surname><given-names>R. R.</given-names></name><article-title>A statistical method for evaluating systematic relationships</article-title>. <source>Univ Kans Sci Bull</source><volume>38</volume>, <fpage>1409</fpage>–<lpage>1438</lpage> (<year>1958</year>).</mixed-citation>
    </ref>
    <ref id="b2">
      <mixed-citation publication-type="journal"><name><surname>Hartigan</surname><given-names>J. A.</given-names></name> &amp; <name><surname>Wong</surname><given-names>M. A.</given-names></name>
<article-title>Algorithm AS 136: A K-Means Clustering Algorithm</article-title>. <source>Journal of the Royal Statistical Society. Series C (Applied Statistics)</source>
<volume>28</volume>, <fpage>100</fpage>–<lpage>108</lpage>, <pub-id pub-id-type="doi">10.2307/2346830</pub-id> (<year>1979</year>).</mixed-citation>
    </ref>
    <ref id="b3">
      <mixed-citation publication-type="journal"><name><surname>Morgan</surname><given-names>J. N.</given-names></name> &amp; <name><surname>Sonquist</surname><given-names>J. A.</given-names></name>
<article-title>Problems in the analysis of survey data, and a proposal</article-title>. <source>Journal of the American statistical association</source>
<volume>58</volume>, <fpage>415</fpage>–<lpage>434</lpage> (<year>1963</year>).</mixed-citation>
    </ref>
    <ref id="b4">
      <mixed-citation publication-type="other"><name><surname>Cheng</surname><given-names>Y.</given-names></name> &amp; <name><surname>Church</surname><given-names>G. M.</given-names></name> In Proceedings of the Eighth International Conference on Intelligent Systems for Molecular Biology. 93–103.</mixed-citation>
    </ref>
    <ref id="b5">
      <mixed-citation publication-type="journal"><name><surname>Madeira</surname><given-names>S. C.</given-names></name> &amp; <name><surname>Oliveira</surname><given-names>A. L.</given-names></name>
<article-title>Biclustering algorithms for biological data analysis: a survey</article-title>. <source>IEEE/ACM transactions on computational biology and bioinformatics</source>
<volume>1</volume>, <fpage>24</fpage>–<lpage>45</lpage>, <pub-id pub-id-type="doi">10.1109/tcbb.2004.2</pub-id> (<year>2004</year>).<pub-id pub-id-type="pmid">17048406</pub-id></mixed-citation>
    </ref>
    <ref id="b6">
      <mixed-citation publication-type="other"><name><surname>Wang</surname><given-names>H.</given-names></name>, <name><surname>Wang</surname><given-names>W.</given-names></name>, <name><surname>Yang</surname><given-names>J.</given-names></name> &amp; <name><surname>Yu</surname><given-names>P. S.</given-names></name> In Proceedings of the 2002 ACM SIGMOD international conference on Management of data. 394–405 (ACM).</mixed-citation>
    </ref>
    <ref id="b7">
      <mixed-citation publication-type="journal"><name><surname>Getz</surname><given-names>G.</given-names></name>, <name><surname>Levine</surname><given-names>E.</given-names></name> &amp; <name><surname>Domany</surname><given-names>E.</given-names></name>
<article-title>Coupled two-way clustering analysis of gene microarray data</article-title>. <source>Proceedings of the National Academy of Sciences</source>
<volume>97</volume>, <fpage>12079</fpage>–<lpage>12084</lpage> (<year>2000</year>).</mixed-citation>
    </ref>
    <ref id="b8">
      <mixed-citation publication-type="journal"><name><surname>Prelić</surname><given-names>A.</given-names></name><italic>et al.</italic><article-title>A systematic comparison and evaluation of biclustering methods for gene expression data</article-title>. <source>Bioinformatics</source><volume>22</volume>, <fpage>1122</fpage>–<lpage>1129</lpage>, <pub-id pub-id-type="doi">10.1093/bioinformatics/btl060</pub-id> (<year>2006</year>).<pub-id pub-id-type="pmid">16500941</pub-id></mixed-citation>
    </ref>
    <ref id="b9">
      <mixed-citation publication-type="journal"><name><surname>Hartigan</surname><given-names>J. A.</given-names></name><article-title>Direct clustering of a data matrix</article-title>. <source>Journal of the american statistical association</source><volume>67</volume>, <fpage>123</fpage>–<lpage>129</lpage> (<year>1972</year>).</mixed-citation>
    </ref>
    <ref id="b10">
      <mixed-citation publication-type="other"><name><surname>Yang</surname><given-names>J.</given-names></name>, <name><surname>Wang</surname><given-names>W.</given-names></name>, <name><surname>Wang</surname><given-names>H.</given-names></name> &amp; <name><surname>Yu</surname><given-names>P.</given-names></name> In Data Engineering, 2002. Proceedings. 18th International Conference on. 517–528 (IEEE).</mixed-citation>
    </ref>
    <ref id="b11">
      <mixed-citation publication-type="journal"><name><surname>Murali</surname><given-names>T. M.</given-names></name> &amp; <name><surname>Kasif</surname><given-names>S.</given-names></name>
<article-title>Extracting conserved gene expression motifs from gene expression data</article-title>. <source>Pac Symp Biocomput.</source>
<fpage>77</fpage>–<volume>88</volume> (<year>2003</year>).</mixed-citation>
    </ref>
    <ref id="b12">
      <mixed-citation publication-type="journal"><name><surname>Tanay</surname><given-names>A.</given-names></name>, <name><surname>Sharan</surname><given-names>R.</given-names></name> &amp; <name><surname>Shamir</surname><given-names>R.</given-names></name>
<article-title>Discovering statistically significant biclusters in gene expression data</article-title>. <source>Bioinformatics</source>
<volume>18</volume>, <fpage>S136</fpage>–<lpage>S144</lpage> (<year>2002</year>).<pub-id pub-id-type="pmid">12169541</pub-id></mixed-citation>
    </ref>
    <ref id="b13">
      <mixed-citation publication-type="other"><name><surname>Liu</surname><given-names>J.</given-names></name>, <name><surname>Yang</surname><given-names>J.</given-names></name> &amp; <name><surname>Wang</surname><given-names>W.</given-names></name> In Computational Systems Bioinformatics Conference, 2004. CSB 2004. Proceedings. 2004 IEEE. 182–193 (IEEE).</mixed-citation>
    </ref>
    <ref id="b14">
      <mixed-citation publication-type="journal"><name><surname>Kluger</surname><given-names>Y.</given-names></name>, <name><surname>Basri</surname><given-names>R.</given-names></name>, <name><surname>Chang</surname><given-names>J. T.</given-names></name> &amp; <name><surname>Gerstein</surname><given-names>M.</given-names></name>
<article-title>Spectral biclustering of microarray data: coclustering genes and conditions</article-title>. <source>Genome research</source>
<volume>13</volume>, <fpage>703</fpage>–<lpage>716</lpage> (<year>2003</year>).<pub-id pub-id-type="pmid">12671006</pub-id></mixed-citation>
    </ref>
    <ref id="b15">
      <mixed-citation publication-type="journal"><name><surname>Lazzeroni</surname><given-names>L.</given-names></name> &amp; <name><surname>Owen</surname><given-names>A.</given-names></name>
<article-title>Plaid models for gene expression data</article-title>. <source>Statistica sinica</source>
<volume>12</volume>, <fpage>61</fpage>–<lpage>86</lpage> (<year>2002</year>).</mixed-citation>
    </ref>
    <ref id="b16">
      <mixed-citation publication-type="journal"><name><surname>Sheng</surname><given-names>Q.</given-names></name>, <name><surname>Moreau</surname><given-names>Y.</given-names></name> &amp; <name><surname>De Moor</surname><given-names>B.</given-names></name>
<article-title>Biclustering microarray data by Gibbs sampling</article-title>. <source>Bioinformatics</source>
<volume>19</volume>, <fpage>ii196</fpage>–<lpage>ii205</lpage> (<year>2003</year>).<pub-id pub-id-type="pmid">14534190</pub-id></mixed-citation>
    </ref>
    <ref id="b17">
      <mixed-citation publication-type="journal"><name><surname>Eren</surname><given-names>K.</given-names></name>, <name><surname>Deveci</surname><given-names>M.</given-names></name>, <name><surname>Küçüktunç</surname><given-names>O.</given-names></name> &amp; <name><surname>Çatalyürek</surname><given-names>Ü. V.</given-names></name>
<article-title>A comparative analysis of biclustering algorithms for gene expression data</article-title>. <source>Briefings in bioinformatics</source>
<volume>14</volume>, <fpage>279</fpage>–<lpage>292</lpage> (<year>2013</year>).<pub-id pub-id-type="pmid">22772837</pub-id></mixed-citation>
    </ref>
    <ref id="b18">
      <mixed-citation publication-type="journal"><name><surname>Aguilar-Ruiz</surname><given-names>J. S.</given-names></name><article-title>Shifting and scaling patterns from gene expression data</article-title>. <source>Bioinformatics</source><volume>21</volume>, <fpage>3840</fpage>–<lpage>3845</lpage>, <pub-id pub-id-type="doi">10.1093/bioinformatics/bti641</pub-id> (<year>2005</year>).<pub-id pub-id-type="pmid">16144809</pub-id></mixed-citation>
    </ref>
    <ref id="b19">
      <mixed-citation publication-type="journal"><name><surname>Ben-Dor</surname><given-names>A.</given-names></name>, <name><surname>Chor</surname><given-names>B.</given-names></name>, <name><surname>Karp</surname><given-names>R.</given-names></name> &amp; <name><surname>Yakhini</surname><given-names>Z.</given-names></name>
<article-title>Discovering local structure in gene expression data: the order-preserving submatrix problem</article-title>. <source>Journal of computational biology</source>
<volume>10</volume>, <fpage>373</fpage>–<lpage>384</lpage> (<year>2003</year>).<pub-id pub-id-type="pmid">12935334</pub-id></mixed-citation>
    </ref>
    <ref id="b20">
      <mixed-citation publication-type="other"><name><surname>Chui</surname><given-names>C. K.</given-names></name>, <name><surname>Kao</surname><given-names>B.</given-names></name>, <name><surname>Yip</surname><given-names>K. Y.</given-names></name> &amp; <name><surname>Lee</surname><given-names>S. D.</given-names></name> In <italic>Data Mining, 2008. ICDM'08. Eighth IEEE International Conference on.</italic> 133-142 (IEEE).</mixed-citation>
    </ref>
    <ref id="b21">
      <mixed-citation publication-type="journal"><name><surname>Fang</surname><given-names>Q.</given-names></name>, <name><surname>Ng</surname><given-names>W.</given-names></name>, <name><surname>Feng</surname><given-names>J.</given-names></name> &amp; <name><surname>Li</surname><given-names>Y.</given-names></name>
<article-title>Mining bucket order-preserving submatrices in gene expression data</article-title>. <source>Knowledge and Data Engineering, IEEE Transactions on</source>
<volume>24</volume>, <fpage>2218</fpage>–<lpage>2231</lpage> (<year>2012</year>).</mixed-citation>
    </ref>
    <ref id="b22">
      <mixed-citation publication-type="journal"><name><surname>Fang</surname><given-names>Q.</given-names></name>, <name><surname>Ng</surname><given-names>W.</given-names></name>, <name><surname>Feng</surname><given-names>J.</given-names></name> &amp; <name><surname>Li</surname><given-names>Y.</given-names></name>
<article-title>Mining order-preserving submatrices from probabilistic matrices</article-title>. <source>ACM Transactions on Database Systems (TODS)</source>
<volume>39</volume>, <fpage>6</fpage> (<year>2014</year>).</mixed-citation>
    </ref>
    <ref id="b23">
      <mixed-citation publication-type="journal"><name><surname>Jiang</surname><given-names>T.</given-names></name><italic>et al.</italic> In <source>Database and Expert Systems Applications.</source>
<fpage>129</fpage>–<lpage>144</lpage> (Springer).</mixed-citation>
    </ref>
    <ref id="b24">
      <mixed-citation publication-type="journal"><name><surname>Li</surname><given-names>G.</given-names></name>, <name><surname>Ma</surname><given-names>Q.</given-names></name>, <name><surname>Tang</surname><given-names>H.</given-names></name>, <name><surname>Paterson</surname><given-names>A. H.</given-names></name> &amp; <name><surname>Xu</surname><given-names>Y.</given-names></name>
<article-title>QUBIC: a qualitative biclustering algorithm for analyses of gene expression data</article-title>. <source>Nucleic acids research</source>
<volume>37</volume>, <fpage>e101</fpage>–<lpage>e101</lpage> (<year>2009</year>).<pub-id pub-id-type="pmid">19509312</pub-id></mixed-citation>
    </ref>
    <ref id="b25">
      <mixed-citation publication-type="other">Wikipedia contributors. <italic>Longest common subsequence problem</italic>. Available at: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="uri" xlink:href="http://en.wikipedia.org/w/index.php?title=Longest_common_subsequence_problem&amp;oldid=627149016">http://en.wikipedia.org/w/index.php? title=Longest_common_subsequence_problem&amp;oldid=627149016</ext-link>. (Accessed: 18th November 2014).</mixed-citation>
    </ref>
    <ref id="b26">
      <mixed-citation publication-type="journal"><name><surname>Bergmann</surname><given-names>S.</given-names></name>, <name><surname>Ihmels</surname><given-names>J.</given-names></name> &amp; <name><surname>Barkai</surname><given-names>N.</given-names></name>
<article-title>Iterative signature algorithm for the analysis of large-scale gene expression data</article-title>. <source>Physical review E</source>
<volume>67</volume>, <fpage>031902</fpage> (<year>2003</year>).</mixed-citation>
    </ref>
    <ref id="b27">
      <mixed-citation publication-type="journal"><name><surname>Hochreiter</surname><given-names>S.</given-names></name><italic>et al.</italic><article-title>FABIA: factor analysis for bicluster acquisition</article-title>. <source>Bioinformatics</source><volume>26</volume>, <fpage>1520</fpage>–<lpage>1527</lpage> (<year>2010</year>).<pub-id pub-id-type="pmid">20418340</pub-id></mixed-citation>
    </ref>
    <ref id="b28">
      <mixed-citation publication-type="journal"><name><surname>Bozdağ</surname><given-names>D.</given-names></name>, <name><surname>Parvin</surname><given-names>J. D.</given-names></name> &amp; <name><surname>Catalyurek</surname><given-names>U. V.</given-names></name> In <source>Bioinformatics and Computational Biology</source>
<fpage>151</fpage>–<lpage>163</lpage> (Springer, <year>2009</year>).</mixed-citation>
    </ref>
    <ref id="b29">
      <mixed-citation publication-type="journal"><name><surname>Henriques</surname><given-names>R.</given-names></name> &amp; <name><surname>Madeira</surname><given-names>S. C.</given-names></name>
<article-title>BicSPAM: flexible biclustering using sequential patterns</article-title>. <source>BMC bioinformatics</source>
<volume>15</volume>, <fpage>130</fpage> (<year>2014</year>).<pub-id pub-id-type="pmid">24885271</pub-id></mixed-citation>
    </ref>
    <ref id="b30">
      <mixed-citation publication-type="journal"><name><surname>Edgar</surname><given-names>R.</given-names></name>, <name><surname>Domrachev</surname><given-names>M.</given-names></name> &amp; <name><surname>Lash</surname><given-names>A. E.</given-names></name>
<article-title>Gene Expression Omnibus: NCBI gene expression and hybridization array data repository</article-title>. <source>Nucleic acids research</source>
<volume>30</volume>, <fpage>207</fpage>–<lpage>210</lpage> (<year>2002</year>).<pub-id pub-id-type="pmid">11752295</pub-id></mixed-citation>
    </ref>
    <ref id="b31">
      <mixed-citation publication-type="other">Wikipedia contributors. <italic>Jaccard index</italic>. Available at: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="uri" xlink:href="http://en.wikipedia.org/w/index.php?title=Jaccard_index&amp;oldid=634979038">http://en.wikipedia.org/w/index.php? title=Jaccard_index&amp;oldid=634979038</ext-link>. (Accessed: 18th November 2014).</mixed-citation>
    </ref>
    <ref id="b32">
      <mixed-citation publication-type="journal"><name><surname>Falcon</surname><given-names>S.</given-names></name> &amp; <name><surname>Gentleman</surname><given-names>R.</given-names></name>
<article-title>Using GOstats to test gene lists for GO term association</article-title>. <source>Bioinformatics</source>
<volume>23</volume>, <fpage>257</fpage>–<lpage>258</lpage> (<year>2007</year>).<pub-id pub-id-type="pmid">17098774</pub-id></mixed-citation>
    </ref>
    <ref id="b33">
      <mixed-citation publication-type="journal"><name><surname>Hochberg</surname><given-names>Y.</given-names></name> &amp; <name><surname>Benjamini</surname><given-names>Y.</given-names></name>
<article-title>More powerful procedures for multiple significance testing</article-title>. <source>Statistics in medicine</source>
<volume>9</volume>, <fpage>811</fpage>–<lpage>818</lpage> (<year>1990</year>).<pub-id pub-id-type="pmid">2218183</pub-id></mixed-citation>
    </ref>
    <ref id="b34">
      <mixed-citation publication-type="journal"><name><surname>Rui</surname><given-names>H.</given-names></name> &amp; <name><surname>Madeira</surname><given-names>S. C.</given-names></name>
<source>BicNET: Efficient Biclustering of Biological Networks to Unravel Non-Trivial Modules.</source> (Springer Berlin Heidelberg, <year>2015</year>).</mixed-citation>
    </ref>
    <ref id="b35">
      <mixed-citation publication-type="journal"><name><surname>Stacklies</surname><given-names>W.</given-names></name>, <name><surname>Redestig</surname><given-names>H.</given-names></name>, <name><surname>Scholz</surname><given-names>M.</given-names></name>, <name><surname>Walther</surname><given-names>D.</given-names></name> &amp; <name><surname>Selbig</surname><given-names>J.</given-names></name>
<article-title>pcaMethods—a bioconductor package providing PCA methods for incomplete data</article-title>. <source>Bioinformatics</source>
<volume>23</volume>, <fpage>1164</fpage>–<lpage>1167</lpage> (<year>2007</year>).<pub-id pub-id-type="pmid">17344241</pub-id></mixed-citation>
    </ref>
  </ref-list>
  <fn-group>
    <fn fn-type="COI-statement">
      <p>The authors declare no competing financial interests.</p>
    </fn>
    <fn>
      <p><bold>Author Contributions</bold> G.L. conceived and designed the study, Z.W. implemented the software, performed the analysis and evaluation, and helped G.L. writing the manuscript. R.R. and X.H. revised the manuscript. G.L. and X.H. oversaw the project.</p>
    </fn>
  </fn-group>
</back>
<floats-group>
  <fig id="f1">
    <label>Figure 1</label>
    <caption>
      <title>Relevance and recovery scores of the seven algorithms on six types of biclusters, with error bars.</title>
    </caption>
    <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="srep23466-f1"/>
  </fig>
  <fig id="f2">
    <label>Figure 2</label>
    <caption>
      <title>Relevance and recovery scores of the seven algorithms on synthetic matrices with overlapping biclusters, including error bars.</title>
    </caption>
    <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="srep23466-f2"/>
  </fig>
  <fig id="f3">
    <label>Figure 3</label>
    <caption>
      <title>Comparison of the distributions of running time for the seven algorithms versus the number of rows on the matrices of 50 columns, with error bars.</title>
      <p>The time scale is logarithmic.</p>
    </caption>
    <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="srep23466-f3"/>
  </fig>
  <table-wrap position="float" id="t1">
    <label>Table 1</label>
    <caption>
      <title>Description of GDS datasets.</title>
    </caption>
    <table frame="hsides" rules="groups" border="1">
      <colgroup>
        <col align="left"/>
        <col align="center"/>
        <col align="center"/>
        <col align="left"/>
      </colgroup>
      <thead valign="bottom">
        <tr>
          <th align="left" valign="top" charoff="50">Dataset</th>
          <th align="center" valign="top" charoff="50">Genes</th>
          <th align="center" valign="top" charoff="50">Samples</th>
          <th align="left" valign="top" charoff="50">Description</th>
        </tr>
      </thead>
      <tbody valign="top">
        <tr>
          <td align="left" valign="top" charoff="50">GDS181</td>
          <td align="center" valign="top" charoff="50">12626</td>
          <td align="center" valign="top" charoff="50">84</td>
          <td align="left" valign="top" charoff="50">Large-scale analysis of the human Transcriptome</td>
        </tr>
        <tr>
          <td align="left" valign="top" charoff="50">GDS589</td>
          <td align="center" valign="top" charoff="50">8799</td>
          <td align="center" valign="top" charoff="50">122</td>
          <td align="left" valign="top" charoff="50">Multiple normal tissue gene expression across strains</td>
        </tr>
        <tr>
          <td align="left" valign="top" charoff="50">GDS1406</td>
          <td align="center" valign="top" charoff="50">12488</td>
          <td align="center" valign="top" charoff="50">87</td>
          <td align="left" valign="top" charoff="50">Brain regions of various inbred strains</td>
        </tr>
        <tr>
          <td align="left" valign="top" charoff="50">GDS1451</td>
          <td align="center" valign="top" charoff="50">8799</td>
          <td align="center" valign="top" charoff="50">94</td>
          <td align="left" valign="top" charoff="50">Toxicants effect on liver: pooled and individual sample comparison</td>
        </tr>
        <tr>
          <td align="left" valign="top" charoff="50">GDS1490</td>
          <td align="center" valign="top" charoff="50">12488</td>
          <td align="center" valign="top" charoff="50">150</td>
          <td align="left" valign="top" charoff="50">Neural tissue profiling</td>
        </tr>
        <tr>
          <td align="left" valign="top" charoff="50">GDS2520</td>
          <td align="center" valign="top" charoff="50">12625</td>
          <td align="center" valign="top" charoff="50">44</td>
          <td align="left" valign="top" charoff="50">Head and neck squamous cell carcinoma</td>
        </tr>
        <tr>
          <td align="left" valign="top" charoff="50">GDS3715</td>
          <td align="center" valign="top" charoff="50">12626</td>
          <td align="center" valign="top" charoff="50">110</td>
          <td align="left" valign="top" charoff="50">Insulin effect on skeletal muscle</td>
        </tr>
        <tr>
          <td align="left" valign="top" charoff="50">GDS3716</td>
          <td align="center" valign="top" charoff="50">22283</td>
          <td align="center" valign="top" charoff="50">42</td>
          <td align="left" valign="top" charoff="50">Breast cancer: histologically normal breast epithelium</td>
        </tr>
      </tbody>
    </table>
  </table-wrap>
  <table-wrap position="float" id="t2">
    <label>Table 2</label>
    <caption>
      <title>The results of GO enrichment analysis on eight GDS datasets.</title>
    </caption>
    <table frame="hsides" rules="groups" border="1">
      <colgroup>
        <col align="left"/>
        <col align="center"/>
        <col align="center"/>
      </colgroup>
      <thead valign="bottom">
        <tr>
          <th align="left" valign="top" charoff="50">Algorithm</th>
          <th align="center" valign="top" charoff="50">Found</th>
          <th align="center" valign="top" charoff="50">Enriched</th>
        </tr>
      </thead>
      <tbody valign="top">
        <tr>
          <td align="left" valign="top" charoff="50">UniBic</td>
          <td align="center" valign="top" charoff="50">151</td>
          <td align="center" valign="top" charoff="50">62(41.1%)</td>
        </tr>
        <tr>
          <td align="left" valign="top" charoff="50">OPSM</td>
          <td align="center" valign="top" charoff="50">163</td>
          <td align="center" valign="top" charoff="50">48(29.5%)</td>
        </tr>
        <tr>
          <td align="left" valign="top" charoff="50">QUBIC</td>
          <td align="center" valign="top" charoff="50">91</td>
          <td align="center" valign="top" charoff="50">34(37.4%)</td>
        </tr>
        <tr>
          <td align="left" valign="top" charoff="50">ISA</td>
          <td align="center" valign="top" charoff="50">217</td>
          <td align="center" valign="top" charoff="50">71(32.7%)</td>
        </tr>
        <tr>
          <td align="left" valign="top" charoff="50">FABIA</td>
          <td align="center" valign="top" charoff="50">80</td>
          <td align="center" valign="top" charoff="50">22(27.5%)</td>
        </tr>
        <tr>
          <td align="left" valign="top" charoff="50">CPB</td>
          <td align="center" valign="top" charoff="50">96</td>
          <td align="center" valign="top" charoff="50">34(35.4%)</td>
        </tr>
      </tbody>
    </table>
  </table-wrap>
</floats-group>

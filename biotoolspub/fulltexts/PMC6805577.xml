<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6805577</article-id>
    <article-id pub-id-type="publisher-id">3094</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-019-3094-9</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>PlantSimLab - a modeling and simulation web tool for plant biologists</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Ha</surname>
          <given-names>S.</given-names>
        </name>
        <address>
          <email>hass@vmi.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Dimitrova</surname>
          <given-names>E.</given-names>
        </name>
        <address>
          <email>edimit@clemson.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Hoops</surname>
          <given-names>S.</given-names>
        </name>
        <address>
          <email>shoops@vt.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Altarawy</surname>
          <given-names>D.</given-names>
        </name>
        <address>
          <email>daltarawy@vt.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff4">4</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Ansariola</surname>
          <given-names>M.</given-names>
        </name>
        <address>
          <email>ansariom@science.oregonstate.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff5">5</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Deb</surname>
          <given-names>D.</given-names>
        </name>
        <address>
          <email>devdutta123@gmail.com</email>
        </address>
        <xref ref-type="aff" rid="Aff6">6</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Glazebrook</surname>
          <given-names>J.</given-names>
        </name>
        <address>
          <email>jglazebr@umn.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff7">7</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Hillmer</surname>
          <given-names>R.</given-names>
        </name>
        <address>
          <email>rachel.hillmer@gmail.com</email>
        </address>
        <xref ref-type="aff" rid="Aff8">8</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Shahin</surname>
          <given-names>H.</given-names>
        </name>
        <address>
          <email>hshahin@vt.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff4">4</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Katagiri</surname>
          <given-names>F.</given-names>
        </name>
        <address>
          <email>katagiri@umn.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff7">7</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>McDowell</surname>
          <given-names>J.</given-names>
        </name>
        <address>
          <email>johnmcd@vt.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff9">9</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Megraw</surname>
          <given-names>M.</given-names>
        </name>
        <address>
          <email>megrawm@science.oregonstate.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff10">10</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Setubal</surname>
          <given-names>J.</given-names>
        </name>
        <address>
          <email>setubal@iq.usp.br</email>
        </address>
        <xref ref-type="aff" rid="Aff11">11</xref>
        <xref ref-type="aff" rid="Aff12">12</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Tyler</surname>
          <given-names>B. M.</given-names>
        </name>
        <address>
          <email>Brett.Tyler@oregonstate.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff13">13</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-9143-9451</contrib-id>
        <name>
          <surname>Laubenbacher</surname>
          <given-names>R.</given-names>
        </name>
        <address>
          <email>laubenbacher@uchc.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff14">14</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 2228 0996</institution-id><institution-id institution-id-type="GRID">grid.267893.1</institution-id><institution>Department of Computer and Information Sciences, </institution><institution>Virginia Military Institute, </institution></institution-wrap>Lexington, VA USA </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 0665 0280</institution-id><institution-id institution-id-type="GRID">grid.26090.3d</institution-id><institution>School of Mathematical and Statistical Sciences, </institution><institution>Clemson University, </institution></institution-wrap>Clemson, SC USA </aff>
      <aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 0694 4940</institution-id><institution-id institution-id-type="GRID">grid.438526.e</institution-id><institution>Biocomplexity Institute of Virginia Tech, </institution></institution-wrap>Blacksburg, VA USA </aff>
      <aff id="Aff4"><label>4</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 0694 4940</institution-id><institution-id institution-id-type="GRID">grid.438526.e</institution-id><institution>Virginia Tech, </institution></institution-wrap>Blacksburg, VA USA </aff>
      <aff id="Aff5"><label>5</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0004 0461 1802</institution-id><institution-id institution-id-type="GRID">grid.418722.a</institution-id><institution>Celgene, </institution></institution-wrap>San Francisco, CA USA </aff>
      <aff id="Aff6"><label>6</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0004 0396 6863</institution-id><institution-id institution-id-type="GRID">grid.419740.f</institution-id><institution>Department of Natural Sciences, </institution><institution>Mercy College, </institution></institution-wrap>Dobbs Ferry, NY USA </aff>
      <aff id="Aff7"><label>7</label><institution-wrap><institution-id institution-id-type="ISNI">0000000419368657</institution-id><institution-id institution-id-type="GRID">grid.17635.36</institution-id><institution>College of Biological Sciences, </institution><institution>University of Minnesota, </institution></institution-wrap>St. Paul, MN USA </aff>
      <aff id="Aff8"><label>8</label>Mendel Biological Solutions, San Franciso, CA USA </aff>
      <aff id="Aff9"><label>9</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 0694 4940</institution-id><institution-id institution-id-type="GRID">grid.438526.e</institution-id><institution>Department of Plant Pathology, Physiology, and Weed Science, </institution><institution>Virginia Tech, </institution></institution-wrap>Blacksburg, VA USA </aff>
      <aff id="Aff10"><label>10</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 2112 1969</institution-id><institution-id institution-id-type="GRID">grid.4391.f</institution-id><institution>Department of Botany and Plant Pathology, </institution><institution>Oregon State University, </institution></institution-wrap>Corvallis, OR USA </aff>
      <aff id="Aff11"><label>11</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0004 1937 0722</institution-id><institution-id institution-id-type="GRID">grid.11899.38</institution-id><institution>Biochemistry Department, </institution><institution>University of Sao Paolo, </institution></institution-wrap>Sao Paolo, Brazil </aff>
      <aff id="Aff12"><label>12</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0004 0374 0039</institution-id><institution-id institution-id-type="GRID">grid.249880.f</institution-id><institution>The Jackson Laboratory for Genomic Medicine, </institution></institution-wrap>Farmington, CT USA </aff>
      <aff id="Aff13"><label>13</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 2112 1969</institution-id><institution-id institution-id-type="GRID">grid.4391.f</institution-id><institution>Center for Genome Research and Biocomputing, </institution><institution>Oregon State University, </institution></institution-wrap>Corvallis, OR USA </aff>
      <aff id="Aff14"><label>14</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 0860 4915</institution-id><institution-id institution-id-type="GRID">grid.63054.34</institution-id><institution>Center for Quantitative Medicine, School of Medicine, </institution><institution>University of Connecticut, </institution></institution-wrap>Hartford, USA </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>21</day>
      <month>10</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>21</day>
      <month>10</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2019</year>
    </pub-date>
    <volume>20</volume>
    <elocation-id>508</elocation-id>
    <history>
      <date date-type="received">
        <day>3</day>
        <month>12</month>
        <year>2018</year>
      </date>
      <date date-type="accepted">
        <day>10</day>
        <month>9</month>
        <year>2019</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s). 2019</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold>This article is distributed under the terms of the Creative Commons Attribution 4.0 International License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">At the molecular level, nonlinear networks of heterogeneous molecules control many biological processes, so that systems biology provides a valuable approach in this field, building on the integration of experimental biology with mathematical modeling. One of the biggest challenges to making this integration a reality is that many life scientists do not possess the mathematical expertise needed to build and manipulate mathematical models well enough to use them as tools for hypothesis generation. Available modeling software packages often assume some modeling expertise. There is a need for software tools that are easy to use and intuitive for experimentalists.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">This paper introduces PlantSimLab, a web-based application developed to allow plant biologists to construct dynamic mathematical models of molecular networks, interrogate them in a manner similar to what is done in the laboratory, and use them as a tool for biological hypothesis generation. It is designed to be used by experimentalists, without direct assistance from mathematical modelers.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p id="Par3">Mathematical modeling techniques are a useful tool for analyzing complex biological systems, and there is a need for accessible, efficient analysis tools within the biological community. PlantSimLab enables users to build, validate, and use intuitive qualitative dynamic computer models, with a graphical user interface that does not require mathematical modeling expertise. It makes analysis of complex models accessible to a larger community, as it is platform-independent and does not require extensive mathematical expertise.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Mathematical model</kwd>
      <kwd>Biological network</kwd>
      <kwd>Dynamic network model</kwd>
      <kwd>Plant biology</kwd>
      <kwd>Modeling software</kwd>
    </kwd-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2019</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <sec id="Sec2">
      <title>Motivation</title>
      <p id="Par11">“<italic>Like most mathematicians, he takes the hopeful biologist to the edge of a pond, points out that a good swim will help his work, and then pushes him in and leaves him to drown</italic>.” (C. Elton, in a 1935 review of work by A. Lotka) [<xref ref-type="bibr" rid="CR1">1</xref>]. The modern biologist might well have the same reaction when confronted with many of today’s mathematical models and software tools. The ideal approach to (plant) systems biology that avoids this problem might be interdisciplinary research teams integrating biology and computation, with significant overlap in skill sets. This is unfortunately not the every-day reality in the short or medium term. A widespread adoption of tools that bring computation and systems “thinking” to the study of dynamic molecular pathways requires that a biologist use them without access to a modeler and without acquisition of advanced mathematical skills. PlantSimLab, the software package described in this paper, represents an attempt to address this reality. We aimed to build an intuitive tool with a shallow learning curve and some basic utilities, a “flip phone” of modeling tools for the uninitiated, rather than a “smart phone.”</p>
      <p id="Par12">Systems biology is a useful approach to plant biology, and biology in general, at several different scales (see, e.g., [<xref ref-type="bibr" rid="CR2">2</xref>]). Focusing on systems-level dynamic phenomena naturally relies on extensive use of mathematical models. If the interest is in elucidating network topology, then typically tools from graph theory are used to study connectivity features. If the interest is in studying dynamic effects, then one needs to build and analyze dynamic computer models of networks. In both cases, two approaches are used: the so-called “bottom-up” approach, which builds a model of the network from available information about its components, and the “top-down” approach, which extracts network links from experimental, typically high-dimensional, data. Ideally, both approaches are used in combination. The software tool described here in its current form is entirely bottom-up. It provides a graphical user interface that allows the construction of dynamic models of networks, their simulation, and the basic experimental capability of knocking out a node. The fundamental hypothesis underlying PlantSimLab is that, with the right type of modeling paradigm and the right interface, biologists can themselves construct and manipulate useful mathematical models for hypothesis generation, without having expert knowledge or a background in mathematics or modeling. The goal is to provide biologists with an easily usable, virtual laboratory tool to integrate available information and data for the purpose of hypothesis generation. These constraints require a mathematically simple way of constructing models and interpreting model output, making modeling frameworks such as differential equations less well-suited. We have chosen the modeling paradigm of time- and state-discrete dynamical systems, which are essentially generalized Boolean networks. They have been used successfully to capture a wide range of molecular networks in recent years; see, e.g., [<xref ref-type="bibr" rid="CR3">3</xref>–<xref ref-type="bibr" rid="CR6">6</xref>].</p>
    </sec>
    <sec id="Sec3">
      <title>Existing software packages</title>
      <p id="Par13">There are a number of excellent software platforms available for modeling using Boolean networks and their generalizations. The Cell Collective [<xref ref-type="bibr" rid="CR7">7</xref>] is an interactive web tool built with a special emphasis on the collaboration of distributed teams to build large Boolean models of molecular networks; it has many features and an extensive library of models. The popular web tool GinSim [<xref ref-type="bibr" rid="CR8">8</xref>] provides a graphical user interface to build and analyze so-called logical models, which can be viewed as generalized Boolean networks with additional features. The R package BoolNet [<xref ref-type="bibr" rid="CR9">9</xref>] is a very convenient approach to building and simulating stochastic Boolean models, with randomly varying update schemes for the variables. Several other more recent platforms have been developed; see, e.g., [<xref ref-type="bibr" rid="CR6">6</xref>, <xref ref-type="bibr" rid="CR10">10</xref>–<xref ref-type="bibr" rid="CR13">13</xref>] for a partial list. Some of these can deal only with Boolean networks, such as BoolNet, while others can handle multi-state models, such as GinSim. They have in common, to a greater or lesser extent, the assumption that the user has some modeling experience or is willing to undertake a relatively steep learning curve. All of them have a wide variety of features, whether it is the accommodation of different modeling frameworks, the ability to infer dynamic models from data, or features that allow sharing and distributed model construction.</p>
    </sec>
    <sec id="Sec4">
      <title>Our contribution</title>
      <p id="Par14">The modeling platform described here differs from these platforms primarily through its relative simplicity, and ubiquitous default settings that significantly shorten the path to a working model. The user can choose any (finite) number of states for any of the nodes, with state labels chosen from a predetermined menu (with the option to customize). The user then chooses edges between nodes from a set of default choices (e.g., activate, inhibit, custom). For activating or inhibiting edges, an autofilled transition table appears (which can be customized, if desired) that specifies the action of the edge, taking into account the respective numbers of states for source and target nodes and their labels. We have chosen to use basic transition tables to describe the logical rules for the way each node takes up and integrates its different regulatory inputs. The advantage is that, in essence, each row in a transition table represents a biological statement, such as “when <italic>A</italic> is high, <italic>B</italic> is low, and <italic>C</italic> is low at time <italic>t</italic>, then <italic>C</italic> (which is regulated by both) transitions to being medium at time <italic>t</italic>+1,” corresponding to the row [high low low | medium], which, for mathematical purposes gets translated into [2 0 0 | 1]. Thus, model construction is simplified as much as possible. Model analysis in the current version is limited essentially to computing the different steady states the model is capable of, corresponding to the different phenotypes exhibited by the system to be modeled. Basic “experiments” that can be performed with the model include “knock-out” of one or more nodes and the edges connected to the knocked-out node(s), and the ability to observe the resulting changes in system behavior. In our experience, this “bare-bones” approach is effective in providing quick model construction and a check on the consistency of the assumptions underlying the model. This is the first step in using the model for hypothesis discovery. The other existing modeling platforms described above may then serve as an “upgrade” for biologists with more extensive modeling expertise.</p>
    </sec>
  </sec>
  <sec id="Sec5">
    <title>Implementation</title>
    <p id="Par15">The purpose of the software is to let the user construct a dynamic model of a molecular (or other) network from biological knowledge, and allow a basic exploration of model dynamics as well as the effect of certain perturbations. In order to simplify model construction, a number of default settings are used that can subsequently be customized by the user, prioritizing simplicity and speed. The user first constructs a network in the form of a directed graph using a simple user interface, which indicates the causal dependencies of the network nodes. Our modeling framework of choice is that of dynamic models that are time-discrete, i.e., variables are updated in discrete time steps, and state-discrete, i.e., each variable can take on a finite number of possible states (currently up to five), and this number can vary across variables. The result is a finite (but conceivably large) space of possible system states (given in the form of a directed graph, with directed edges indicating state transitions). Each network node has attached to it a function that takes as input the states of all of the nodes from which there is an incoming arrow, and provides as output the “next” state of the node. As a special case, each node could take on exactly two values, resulting in a Boolean network. Such a function can be specified in a number of ways, for instance through a Boolean function in the case of binary inputs. We have chosen the most simple and intuitive description, through the specification of a transition table that specifies the output for each possible input vector of states. Such a table is automatically generated by default, integrating the different inputs in an additive fashion. The table can subsequently be customized, for instance, to use synergistic action instead of additive. Each row of such a table can be interpreted as a biological statement, e.g., “If A is high, B is low, and C is high at time <italic>t</italic>, then C will become low at the next time step,” representing the row [1 0 1 | 0] in the Boolean case. Thus, there is no need to learn any mathematical formalism to specify functions. The user is able to carry out basic computational “experiments,” namely to knock out network nodes and the arrows/interactions connected to those nodes. Finally, the user can analyze the model by computing all steady states, typically corresponding to different cellular phenotypes and attractor basins, corresponding to the relative likelihood of that phenotype.</p>
    <p id="Par16">The fundamental algorithm underlying all these calculations exhaustively enumerates all possible state transitions from the transition table. This is done as follows, using the binary case as an illustration. For a model with <italic>n</italic> nodes, the 2<sup><italic>n</italic></sup> possible network states are arranged alphabetically. The algorithm takes the first state, <bold>x</bold> = (0, 0, …, 0) as input and computes the “next” state, <bold>y</bold>, using the transition table. The new state now becomes the input to the algorithm, which first checks whether <bold>x</bold> = <bold>y</bold>. If yes, it picks the next state in the transition table that has not be used yet. If no, then it computes the next state <bold>z</bold>, using the row of the transition table corresponding to <bold>y</bold>. It then checks whether <bold>z</bold> has appeared earlier in the process. If so, a cycle has been found and the algorithm moves on to the next state not yet used as input. The algorithm ends when all 2<sup><italic>n</italic></sup> states have been used as input. Several other possible algorithms could be used for the same purpose.</p>
    <sec id="Sec6">
      <title>User Interface</title>
      <p id="Par17">The graphical user interface (GUI) guides the user interactively through the modeling and analysis steps. Four arrow-shaped tabs are displayed along the top of the canvas rectangle in the natural order of constructing a model, setting up and carrying out computational experiments, and analyzing the results. The transitions between the different modes can be done automatically according to the functional process of modeling activities or manually by clicking any arrow tab to open a functionality. The currently open mode is always indicated by a green color highlight on its tab, so the user knows which mode is currently selected. We now describe these four modes in more detail. We will use the following small generic model as a running example, which can also be found on the PlantSimLab website:</p>
      <p id="Par18"><italic>A</italic> → <italic>C</italic> ← <italic>B.</italic></p>
      <p id="Par19">where <italic>A</italic> has two states (0, 1), <italic>B</italic> has three states (0, 1, 2), and <italic>C</italic> has four states (0, 1, 2, 3). Here, <italic>A</italic> has an activating influence on <italic>C</italic>, and <italic>B</italic> has an inhibiting influence.</p>
      <sec id="Sec7">
        <title>Model editor</title>
        <p id="Par20">This tab provides a canvas drawing area and a suite of graphical model-editing tools for the user to draw a network model that is a graph-theoretic representation of the molecular network of interest. The user can create a node by clicking on the node icon in the toolbar and then clicking the location to place the node on the canvas. Then the user chooses the number of states for the node with state labels chosen from a predetermined menu or customized. Internally, the states get converted into numerical values, beginning with “0” for the first state in the table, up to “<italic>n</italic>-1,” where <italic>n</italic> is the number of states (currently limited to five).</p>
        <p id="Par21">To create an edge, the user can click on an edge icon (with choices including “activate,” “inhibit”, or “unspecified”) in the toolbar, and then click the input and the target node successively. For an “activate” edge, a state transition table is created that captures the effect of states of the input node on the states of the output node. This table can then be modified by the user, similar to the table for an edge whose nature is unspecified. If a node has several input edges, their effects are combined into a comprehensive transition table called “Big State Transition Table” (BSTT), where the different inputs are integrated using an “additive” rule by default. That is, if a node receives two or more inputs, then the input values are added (e.g., if the edges are activating), respectively subtracted (e.g., if one or more nodes are inhibiting), depending on the edge tables at each time step. We use the arithmetic convention that the resulting number cannot be lower than 0 or larger than <italic>n</italic>-1. Again, the user can customize this default choice. Several editing features simplify the management and editing of large tables.</p>
      </sec>
    </sec>
    <sec id="Sec8">
      <title>Calculation of state transitions</title>
      <p id="Par22">To show how PlantSimLab calculates the predetermined state transitions for a node, we created a very simple network model having only three nodes named “<italic>A</italic>” (2 states), “<italic>B</italic>” (2 states), and “<italic>C</italic>” (3 states), where node <italic>A</italic> activates node <italic>C,</italic> and node <italic>B</italic> inhibits node <italic>C</italic> (Fig. <xref rid="Fig1" ref-type="fig">1</xref>a)). The table in Fig. <xref rid="Fig1" ref-type="fig">1</xref>b is the big state transition table (BSTT) for node <italic>C</italic>. It displays all possible combinations of the input node states in the current time cycle and their corresponding target node states in the next time cycle. Based on additive rules, PlantSimLab calculates the state of the target node <italic>C</italic><sub><italic>t</italic></sub> (<italic>C</italic> at time <italic>t</italic>) in the next time cycle, represented as <italic>C</italic><sub><italic>t</italic> + <italic>dt</italic></sub>, for any possible combinations of the input nodes <italic>A</italic>, <italic>B</italic>, and <italic>C</italic> at time <italic>t</italic> as follows. The table entries in Fig. <xref rid="Fig1" ref-type="fig">1</xref>b for which <italic>B</italic> is equal to 0 give the effect of <italic>A</italic> alone on <italic>C</italic>. Likewise, the entries for which <italic>A</italic> is equal to 0 give the effect of <italic>B</italic> alone. The cumulative effect is assumed to be additive, in the sense that the right-hand column of the table is obtained as follows:
<disp-formula id="Equa"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ {C}_{t+1}={A}_t-{B}_t+{C}_{t,} $$\end{document}</tex-math><mml:math id="M2" display="block"><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>A</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>B</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:msub></mml:math><graphic xlink:href="12859_2019_3094_Article_Equa.gif" position="anchor"/></alternatives></disp-formula>
<fig id="Fig1"><label>Fig. 1</label><caption><p>The wiring diagram of a simple network model containing three nodes (<bold>a</bold>). A table to show the calculation of all possible state transitions for a target node <italic>C</italic> in the network model (<bold>b</bold>). Double clicking on a node on the <italic>Model Editor</italic> canvas highlights the node in the back and opens up the Big State Transition Table (BSTT) for the node (<bold>c</bold>). The user can use the predetermined choice (<bold>d</bold>), or change it by selecting a desired state from the dropdown box in the row (<bold>e</bold>)</p></caption><graphic xlink:href="12859_2019_3094_Fig1_HTML" id="MO1"/></fig></p>
      <p id="Par23">subject to the constraint that the value is equal to 0, if <italic>A</italic><sub><italic>t</italic></sub>-<italic>B</italic><sub><italic>t</italic></sub> + <italic>C</italic><sub><italic>t</italic></sub> <italic>&lt;</italic> 0 (integer arithmetic), and equal to 2 if <italic>A</italic><sub><italic>t</italic></sub>-<italic>B</italic><sub><italic>t</italic></sub> + <italic>C</italic><sub><italic>t</italic></sub> &gt; 2.</p>
      <p id="Par24">Currently, PlantSimLab allows up to 5 states for a node, rendered as 0, 1, …, 4. The exhaustive enumeration of all state transitions is calculated using the same additive rule with adjustment for the lowest and the highest possible state values in this way. The BSTT opens automatically when the node is double-clicked (Fig. <xref rid="Fig1" ref-type="fig">1</xref>c). The user can use the default choice (Fig. <xref rid="Fig1" ref-type="fig">1</xref>d), which completes the right-hand column in Fig. <xref rid="Fig1" ref-type="fig">1</xref>b using the tables for the arrows from <italic>A</italic> and <italic>B</italic>. Or the user can change it by selecting a desired state from the dropdown box in the appropriate row of the BSTT (Fig. <xref rid="Fig1" ref-type="fig">1</xref>e).</p>
      <p id="Par25">A PlantSimLab network model can be thought of as a wiring diagram, with metadata attached, and the content of the canvas can be saved as an image file on the user’s local machine for inclusion in publications or presentations. When a network model is created in <italic>Model Editor</italic>, the user can explore the network dynamics of the unchanged model by running the Dynamical Network Analysis algorithm with a click on a short-cut button “go” provided in the <italic>Model Editor</italic> toolbox. In particular, the user can observe select time courses of model states beginning with initial states of interest, as explained below.</p>
    </sec>
    <sec id="Sec9">
      <title>Experimental setup</title>
      <p id="Par26">This tab provides a canvas drawing space and a menu of experiments, which currently consists of the possibility to simulate the knock-out of one or more nodes.</p>
      <p id="Par27">The default setting for a knocked-out node is constant equal to the node state corresponding to “0” for all simulation time steps. This can be done for several nodes simultaneously. The user can customize this feature and set the state of a “perturbed” node constant equal to any chosen state. In this way, one can also simulate knock-down and overexpression of one node or a combination of these for more nodes simultaneously. Knocking out a node or reversing a knockout can be done on a single node using a context menu popped up at the right-click on a node to knock out or undo (Fig. <xref rid="Fig2" ref-type="fig">2</xref>a), or on multiple nodes at once using the Experimental Setup Table (Fig. <xref rid="Fig2" ref-type="fig">2</xref>b), which provides a knockout button for each node so the user can select the multiple nodes to knock out or undo the knockout all at once.
<fig id="Fig2"><label>Fig. 2</label><caption><p>For an experiment, the user can perturb a model by knocking out nodes and the associated edges. The user can do this on a single node using a context menu popping up after right-clicking on a node to knock out or undo (<bold>a</bold>), or using the Experimental Setup Table. The initial state of the node can be set to the desired state in this tab using Experiment Setup Table (<bold>b</bold>). A knocked-out node has a X mark in red through it (<bold>c</bold>)</p></caption><graphic xlink:href="12859_2019_3094_Fig2_HTML" id="MO2"/></fig></p>
    </sec>
    <sec id="Sec10">
      <title>Model analysis</title>
      <p id="Par28">From a given initial state, the network can evolve to a steady state or a collection of states through which the network cycles, exhibiting oscillatory behavior. A given network might be capable of several different such behaviors, depending on the chosen initial state. The software computes all such steady states and collections of oscillatory nodes, collectively referred to as attractors. The terminology refers to the feature that once the network reaches either a steady state or a collection of states that is oscillatory, it remains there. The basin of attraction for a given attractor simply refers to the collection of states for which the network evolves to that attractor. The size of the basin of attraction, that is, the number of states in it, gives an indication of how likely the attractor is to occur. Thus, model analysis provides a comprehensive view of the dynamic range the network is capable of. In many cases, interest is focused on a particular initial state or small collection of initial states. The user can then simply focus on the time evolution of the network from these states and ignore all other information.</p>
    </sec>
    <sec id="Sec11">
      <title>Results viewer</title>
      <p id="Par29">This tab is designed to display the network analysis results using various HTML forms, styles, and devices to deliver the output information in an intuitive and easy to understand format. The summary Table (ST) shows all attractors of the dynamic network and their basins of attraction. The magnitudes of the node states in the attractor are presented by their numerical values as well as in a heat-map-style color scheme to enable a quick grasp of the information about the attractor. The relative contribution of each attractor basin to the entire state space is given as a percentage. A pie-chart combining all components into a compact view also enables a quick visual gauge of the relative contribution of each attractor. Clicking on a particular row in the ST or a pie segment from the pie-chart opens up a separate window and displays the detailed information about the selected subset of the state space, including the state space graph of the subset. To create a more intuitive and easy to understand space state graph, we used HTML style bar size and color coding for presenting the state of a node. A cell for a low state node in the graph is filled with a small bar in yellow, for a high state node with a full size bar in purple, and for a medium state node with a half size bar in gray (Fig. <xref rid="Fig3" ref-type="fig">3</xref>d). For better visibility, the user can control the direction of the state space graph display horizontally or vertically using toggle buttons. The user will notice that the state transition of any knock-out node remains constant equal to the state corresponding to 0. The ST can be conveniently saved into an Excel file on the user’s local machine.
<fig id="Fig3"><label>Fig. 3</label><caption><p>The summary Table (ST) displays all attractors and the attractor basin in the system for the running example model with three nodes introduced above. The HTML table uses a heat-map style color scheme to display the steady states of nodes. The ST on the left is generated for an unchanged model (<bold>a</bold>) and the ST on the right is for a perturbed model (<bold>b</bold>). For all perturbed models, PlantSimLab displays a CAUTION message to inform of the potential existence of other steady states or limit cycles than the displayed (<bold>b</bold>) (see below for an explanation). The entire state space graph is drawn using different colors and box sizes to make the state space graph more visually intuitive and informative (<bold>c</bold>). A subset of the state space (<bold>d</bold>) can be also drawn for further study of the simulation of a network component selected with a click on a row corresponding to a particular component row in the ST, on a component piece in the pie-chart (<bold>e</bold>), or on a component entry from the Component Summary drop-down box provided in the Results Viewer toolbox</p></caption><graphic xlink:href="12859_2019_3094_Fig3_HTML" id="MO3"/></fig></p>
      <sec id="Sec12">
        <title>Known issues/limitations</title>
        <p id="Par30">Due to space and computation time limitations, PlantSimLab does not draw the state space graph if the size of the state space exceeds 2600 nodes. Furthermore, the current algorithm used for dynamical network analysis was not built to handle models with knocked-out nodes; rather, it automatically enumerates all possible state transitions of all nodes by default. This limits the functionality of the network perturbation feature. To partially resolve the issue, PlantSimLab currently excludes the output display of those steady states or limit cycles where the knocked-out nodes are not in their lowest state. As a result, for a perturbed network only some of the steady states and none of the limit cycles are generated. The user is notified about this through a warning message whenever a perturbed network analysis is performed. The message advises the user to instead simulate a node knockout by setting the node state to low/off in the BSTT if complete information on the steady states is desired.</p>
      </sec>
      <sec id="Sec13">
        <title>YouTube tutorials</title>
        <p id="Par31">We created three YouTube tutorial videos to provide instructions on how to create, perturb, and analyze a network model, and view the network analysis results in PlantSimLab for hypothesis generation. Tutorial #1 shows how to create nodes and edges, and configure them interactively using special tables for building a graphical network model in the <italic>Model Editor tab</italic>. Tutorial #2 shows how to perturb a model by knocking out nodes in the <italic>Experimental Setup tab</italic>. Tutorial #3 explains how to visually inspect the dynamical network analysis results in many different forms in the <italic>Results Viewer</italic> tab. All instructions in these tutorials are easy to follow and it takes only 5 to 11 min for each video. The three PlantSimLab YouTube videos are available through the following links:</p>
        <p id="Par32">PlantSimLab Tutorial #1 - Model Building [<xref ref-type="bibr" rid="CR14">14</xref>].</p>
        <p id="Par33">PlantSimLab Tutorial #2 – Experimental Setup [<xref ref-type="bibr" rid="CR15">15</xref>].</p>
        <p id="Par34">PlantSimLab Tutorial #3 – Network Analysis Results Viewer [<xref ref-type="bibr" rid="CR16">16</xref>].</p>
      </sec>
    </sec>
  </sec>
  <sec id="Sec14">
    <title>Development</title>
    <sec id="Sec15">
      <title>Software components</title>
      <p id="Par35">We developed PlantSimLab as a client-server-based web application running on Apache2 on a dedicated server and supporting most modern web browsers on any platform. The user interface on the client was developed using HTML with significant components of JavaScript and AJAX to enhance the user experience. On the server side we used PHP scripting and an open source MySQL database for model repository management. The use of Google sign-in authentication for the user login promotes user convenience and reduces the burden of user profile management for the software.</p>
      <p id="Par36">To create an intuitive, well-designed, and frustration-free user interface, we applied design principles similar to Shneiderman’s ‘eight golden rules of interface design’ [<xref ref-type="bibr" rid="CR17">17</xref>].</p>
      <sec id="Sec16">
        <title>A use case</title>
        <p id="Par37">To demonstrate the use of PlantSimLab, we implemented and analyzed the model from Espinosa-Soto et al. [<xref ref-type="bibr" rid="CR18">18</xref>]. This paper follows several other investigations into the gene networks driving cell fate determination in the model organism <italic>Arabidopsis thaliana.</italic> The authors focus on the question of robustness of morphological pattern development, in particular floral organ cell fate determination. Experimental studies led to the development of the ABC combinatorial model of gene expression states that predicts the identity of floral organ primordia, which has guided many experimental studies. The model presented in [<xref ref-type="bibr" rid="CR18">18</xref>] is based on a more complete understanding of the genetic components and interactions involved, resulting in model steady states that are coherent with experimental data. The main finding in [<xref ref-type="bibr" rid="CR18">18</xref>] is that all possible initial conditions converge to a few steady states that match experimental observations. Thus, the network provides a dynamic explanation of the ABC model and shows that precise signaling pathways are not required to restrain cell types to those found in <italic>Arabidopsis,</italic> but these are rather determined by the overall gene network dynamics. The cell types recovered depend on the network architecture rather than on specific interaction parameters. Finally, these results support the hypothesis that such a network constitutes a developmental module, and hence provide a possible explanation for the overall conservation of the ABC model and overall floral plan among angiosperms. We now illustrate how this model can be built and analyzed in PlantSimLab. Once the logical rules are extracted from the paper, the model can be built in the software within a matter of hours.</p>
        <p id="Par38">The model consists of 15 nodes, eight of which can assume two states, e.g. ON/OFF (FT, EMF1, SEP, AP2, WUS, UFO, CLF, and Lug) and seven can assume three states, e.g. LOW/MEDUIM/HIGH (LFY, AP1, FUL, TFL1, AG, AP3, and PI). The wiring diagram of the model generated by PlantSimLab is presented in Fig. <xref rid="Fig4" ref-type="fig">4</xref><bold>,</bold> and is identical to Fig. <xref rid="Fig5" ref-type="fig">5</xref> in [<xref ref-type="bibr" rid="CR18">18</xref>]. In [<xref ref-type="bibr" rid="CR18">18</xref>], the logical rules for each node are provided in table form for each node, very similar to PlantSimLab’s transition tables. We implemented in PlantSimLab the proposed wild-type network and the loss-of-function <italic>ap2</italic> mutant. The simulation of the wild-type network generated a total of 40 steady states and no other cycles (Fig. <xref rid="Fig6" ref-type="fig">6</xref>). Among them were the 10 steady states recovered in [<xref ref-type="bibr" rid="CR18">18</xref>], based on the 139,968 initial conditions considered there (the total number of possible initial conditions is 559,872). The simulation of the <italic>ap2</italic> mutant network returned 28 steady states and no other cycles (Fig. <xref rid="Fig7" ref-type="fig">7</xref>), with the seven steady states simulated in [<xref ref-type="bibr" rid="CR18">18</xref>] present among them. We note that both simulations considered all possible initial conditions and, as a result, were able to generate all network steady states, with some of the additional ones having relatively large basins of attraction (up to 22% of all states). It took PlantSimLab only seconds to complete the simulations, and the additional steady states that were discovered may provide valuable additional information about other possible phenotypes of the cells considered.
<fig id="Fig4"><label>Fig. 4</label><caption><p>The software components (<bold>a</bold>) and the software workflow (<bold>b</bold>) of PlantSimLab, highlighting the steps for modeling, analysis, and use. PlantSimLab communicates with the model database repository to load and save user models. To perform network analysis, PlantSimLab runs a Dynamical Network Analysis algorithm, a locally installed application on the server (<bold>b</bold>)</p></caption><graphic xlink:href="12859_2019_3094_Fig4_HTML" id="MO4"/></fig>
<fig id="Fig5"><label>Fig. 5</label><caption><p>Wiring diagram of the network, identical to Fig. <xref rid="Fig4" ref-type="fig">4</xref> in [<xref ref-type="bibr" rid="CR18">18</xref>]</p></caption><graphic xlink:href="12859_2019_3094_Fig5_HTML" id="MO5"/></fig>
<fig id="Fig6"><label>Fig. 6</label><caption><p>The list of steady states and component sizes from the wild-type network simulation</p></caption><graphic xlink:href="12859_2019_3094_Fig6_HTML" id="MO6"/></fig>
<fig id="Fig7"><label>Fig. 7</label><caption><p>The list of steady states and component sizes from the <italic>ap2</italic> knock-out network simulation</p></caption><graphic xlink:href="12859_2019_3094_Fig7_HTML" id="MO7"/></fig></p>
        <p id="Par39">While this software package was developed with applications to plant biology in mind, the tool is in fact quite generic and can be applied in a variety of settings. To illustrate this and to provide the user with further examples to explore the software, we have included three additional models in the model library<bold>.</bold> One is a model of the <italic>lac operon</italic>, one of the earliest examples of a gene regulatory network, taken from [<xref ref-type="bibr" rid="CR19">19</xref>]. The other two models capture some key features of the immune response to vascular injury, published in [<xref ref-type="bibr" rid="CR20">20</xref>]. One of the models captures signaling events in a macrophage recruited to the injured tissue from the circulation, the other models tissue-level events of a population of macrophages. The three models together show the versatility of PlantSimLab for purposes other than plant biology.</p>
      </sec>
    </sec>
  </sec>
  <sec id="Sec17">
    <title>Conclusions</title>
    <p id="Par40">In this work, we present the web-application tool PlantSimLab, a simple, intuitive software tool for creating dynamic network models, performing experimental simulations, and visualizing network analysis results using a variety of formats and dynamic layouts. It provides a computational laboratory for biological scientists to generate novel experimental hypotheses. It is designed to be usable after completing a brief online interactive tutorial that explains the basic input, output, and functionalities of the software. It was our goal to make all features of PlantSimLab’s interface as intuitive and self-explanatory as possible for life science researchers. Future development of the software tool includes a simple natural language parser that allows users to provide English language sentences with prescribed syntax, such as “<italic>A</italic> [interacts with] <italic>B</italic>,” which are then automatically translated into network components. The YouTube tutorials will be extended to cover more advanced technical topics.</p>
    <p id="Par41">We add some miscellaneous comments here. One of the features available in other modeling software tools, such as <italic>GinSim</italic>, mentioned earlier, is the capability of model checking [<xref ref-type="bibr" rid="CR21">21</xref>–<xref ref-type="bibr" rid="CR23">23</xref>]. Among other features, this allows the user to specify constraints the model is required to satisfy, which are then automatically verified. While this feature is very useful for model building, we have opted not to include it in this initial version of the software, which, as explained in the introduction, is focused on implementing the most intuitive and simple functionalities for model building. We plan to include it in future releases, however. As a second comment, we want to emphasize that the software allows the user to specify very general regulatory functions, in addition to the additive mechanisms used for the default settings. The user can specify as much or as little of the transition table for a given edge or node as desired, with the remainder completed as a default setting. In particular, the user can specify the <bold>entire</bold> transition table without constraints, so that arbitrary functions can be used.</p>
  </sec>
  <sec id="Sec18">
    <title>Availability and requirements</title>
    <p id="Par42">Project Name: PlantSimLab.</p>
    <p id="Par43">Project home page: http://app.plantsimlab.org</p>
    <p id="Par44">Operating System(s): Platform independent (Linux, Windows, MacOS).</p>
    <p id="Par45">Programming languages: HTML5, JavaScript, PHP, CCS/LESS, SQL.</p>
    <p id="Par46">Any restriction to use by non-academics: None.</p>
    <p id="Par47">Licenses: None.</p>
    <p id="Par48">Other requirements: A Google email account to sign in.</p>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>AJAX</term>
        <def>
          <p id="Par4">Asynchronous Java Script and XML</p>
        </def>
      </def-item>
      <def-item>
        <term>BSTT</term>
        <def>
          <p id="Par5">Big State Transition Table</p>
        </def>
      </def-item>
      <def-item>
        <term>GUI</term>
        <def>
          <p id="Par6">Graphical User Interface</p>
        </def>
      </def-item>
      <def-item>
        <term>HTML</term>
        <def>
          <p id="Par7">Hypertext Markup Language</p>
        </def>
      </def-item>
      <def-item>
        <term>MySQL</term>
        <def>
          <p id="Par8">Open source relational database management system</p>
        </def>
      </def-item>
      <def-item>
        <term>PHP</term>
        <def>
          <p id="Par9">Hypertext Processor</p>
        </def>
      </def-item>
      <def-item>
        <term>ST</term>
        <def>
          <p id="Par10">Summary Table</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher’s Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>None.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors’ contributions</title>
    <p>SH served as the software development lead of the project, carried out most of the software development, and wrote part of the manuscript. ED tested the software and developed the use case model presented here. She wrote part of the manuscript. SH co-supervised the software development and algorithm implementations. SH, JG, FK, JM, JS, BT, and RL developed the initial concept and served as co-PIs on the project. RL provided the overall project lead, served as PI for the project, and prepared the final version of the manuscript. D.A., M.A., D.D., R.H., and H.S developed portions of the software and tested software components. M.M. contributed to implementation and testing of software components. All authors read and approved the manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>National Science Foundation Award DBI-1146819. The funding agency played no role in the design of the study, software development, and collection, analysis, and interpretation of any data and in writing the manuscript.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>No data have been used in this project. The models used to illustrate PlantSimLab were built based only on information available in the publications cited in the text.</p>
  </notes>
  <notes>
    <title>Ethics approval and consent to participate</title>
    <p id="Par49">Not applicable.</p>
  </notes>
  <notes>
    <title>Consent for publication</title>
    <p id="Par50">Not applicable.</p>
  </notes>
  <notes notes-type="COI-statement">
    <title>Competing interests</title>
    <p id="Par51">The authors declare that they have no competing interests.</p>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Elton</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>Eppur si mouve</article-title>
        <source>J Animal Ecology</source>
        <year>1935</year>
        <volume>4</volume>
        <issue>1</issue>
        <fpage>1480150</fpage>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lucas</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Laplaze</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Bennett</surname>
            <given-names>MJ</given-names>
          </name>
        </person-group>
        <article-title>Plant systems biology: network matters</article-title>
        <source>Plant Cell Environ</source>
        <year>2011</year>
        <volume>34</volume>
        <issue>4</issue>
        <fpage>535</fpage>
        <lpage>553</lpage>
        <pub-id pub-id-type="doi">10.1111/j.1365-3040.2010.02273.x</pub-id>
        <pub-id pub-id-type="pmid">21309807</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dinh</surname>
            <given-names>JL</given-names>
          </name>
          <name>
            <surname>Farcot</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Hodgman</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>The logic of the floral transition: reverse-engineering the switch controlling the identity of lateral organs</article-title>
        <source>PLoS Comput Biol</source>
        <year>2017</year>
        <volume>13</volume>
        <issue>9</issue>
        <fpage>e1005744</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1005744</pub-id>
        <pub-id pub-id-type="pmid">28931004</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Garcia-Gomez</surname>
            <given-names>ML</given-names>
          </name>
          <name>
            <surname>Azpeitia</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Alvarez-Buylla</surname>
            <given-names>ER</given-names>
          </name>
        </person-group>
        <article-title>A dynamic genetic-hormonal regulatory network model explains multiple cellular behaviors of the root apical meristem of Arabidopsis thaliana</article-title>
        <source>PLoS Comput Biol</source>
        <year>2017</year>
        <volume>13</volume>
        <issue>4</issue>
        <fpage>e1005488</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1005488</pub-id>
        <pub-id pub-id-type="pmid">28426669</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Oles</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Panchenko</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Smertenko</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Modeling hormonal control of cambium proliferation</article-title>
        <source>PLoS One</source>
        <year>2017</year>
        <volume>12</volume>
        <issue>2</issue>
        <fpage>e0171927</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0171927</pub-id>
        <pub-id pub-id-type="pmid">28187161</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Velderrain</surname>
            <given-names>JD</given-names>
          </name>
          <name>
            <surname>Martinez-Garcia</surname>
            <given-names>JC</given-names>
          </name>
          <name>
            <surname>Alvarez-Buylla</surname>
            <given-names>ER</given-names>
          </name>
        </person-group>
        <article-title>Boolean dynamic Modeling approaches to study plant gene regulatory networks: integration, validation, and prediction</article-title>
        <source>Methods Mol Biol</source>
        <year>2017</year>
        <volume>1629</volume>
        <fpage>297</fpage>
        <lpage>315</lpage>
        <pub-id pub-id-type="doi">10.1007/978-1-4939-7125-1_19</pub-id>
        <pub-id pub-id-type="pmid">28623593</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Helikar</surname>
            <given-names>T</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The cell collective: toward an open and collaborative approach to systems biology</article-title>
        <source>BMC Syst Biol</source>
        <year>2012</year>
        <volume>6</volume>
        <fpage>96</fpage>
        <pub-id pub-id-type="doi">10.1186/1752-0509-6-96</pub-id>
        <pub-id pub-id-type="pmid">22871178</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chaouiya</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Naldi</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Thieffry</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>Logical modelling of gene regulatory networks with GINsim</article-title>
        <source>Methods Mol Biol</source>
        <year>2012</year>
        <volume>804</volume>
        <fpage>463</fpage>
        <lpage>479</lpage>
        <pub-id pub-id-type="doi">10.1007/978-1-61779-361-5_23</pub-id>
        <pub-id pub-id-type="pmid">22144167</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mussel</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Hopfensitz</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Kestler</surname>
            <given-names>HA</given-names>
          </name>
        </person-group>
        <article-title>BoolNet--an R package for generation, reconstruction and analysis of Boolean networks</article-title>
        <source>Bioinformatics</source>
        <year>2010</year>
        <volume>26</volume>
        <issue>10</issue>
        <fpage>1378</fpage>
        <lpage>1380</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btq124</pub-id>
        <pub-id pub-id-type="pmid">20378558</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dussaut</surname>
            <given-names>JS</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>GeRNet: a gene regulatory network tool</article-title>
        <source>Biosystems</source>
        <year>2017</year>
        <volume>162</volume>
        <fpage>1</fpage>
        <lpage>11</lpage>
        <pub-id pub-id-type="doi">10.1016/j.biosystems.2017.08.006</pub-id>
        <pub-id pub-id-type="pmid">28860069</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Forbes</surname>
            <given-names>AG</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Dynamic influence networks for rule-based models</article-title>
        <source>IEEE Trans Vis Comput Graph</source>
        <year>2018</year>
        <volume>24</volume>
        <issue>1</issue>
        <fpage>184</fpage>
        <lpage>194</lpage>
        <pub-id pub-id-type="doi">10.1109/TVCG.2017.2745280</pub-id>
        <pub-id pub-id-type="pmid">28866584</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Livigni</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A graphical and computational modeling platform for biological pathways</article-title>
        <source>Nat Protoc</source>
        <year>2018</year>
        <volume>13</volume>
        <issue>4</issue>
        <fpage>705</fpage>
        <lpage>722</lpage>
        <pub-id pub-id-type="doi">10.1038/nprot.2017.144</pub-id>
        <pub-id pub-id-type="pmid">29543794</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wu</surname>
            <given-names>H</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>MUFINS: multi-formalism interaction network simulator</article-title>
        <source>NPJ Syst Biol Appl</source>
        <year>2016</year>
        <volume>2</volume>
        <fpage>16032</fpage>
        <pub-id pub-id-type="doi">10.1038/npjsba.2016.32</pub-id>
        <pub-id pub-id-type="pmid">28725480</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <mixed-citation publication-type="other">PlantSimLab. <italic>PlantSimlab Tutorial #1: Model building</italic>. 2017; available from: <ext-link ext-link-type="uri" xlink:href="https://www.youtube.com/watch?v=97qa7rWYelU">https://www.youtube.com/watch?v=97qa7rWYelU</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <mixed-citation publication-type="other">PlantSimLab, <italic>PlantSimLab Tutorial #2: Experimental Setup.</italic> 2017; available from <ext-link ext-link-type="uri" xlink:href="https://www.youtube.com/watch?v=3sFwsxmJ-Qg">https://www.youtube.com/watch?v=3sFwsxmJ-Qg</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <mixed-citation publication-type="other">PlantSimLab, <italic>PlantSimLab Tutorial #3: Network analysis results viewer.</italic> 2017; available from <ext-link ext-link-type="uri" xlink:href="https://www.youtube.com/watch?v=aI96BQF1eC8">https://www.youtube.com/watch?v=aI96BQF1eC8</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <mixed-citation publication-type="other">Shneiderman B, Plaisant C. <italic>Designing the user interface; Strategies for effective human-computer interaction</italic>. 2010. Boston: Addison-Wesley.</mixed-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Espinosa-Soto</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Padilla-Longaria</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Alvarez-Buylla</surname>
            <given-names>ER</given-names>
          </name>
        </person-group>
        <article-title>A gene regulatory network model for cell-fate determination during Arabidopsis thaliana flower development that is robust and recovers experimental gene expression profiles</article-title>
        <source>Plant Cell</source>
        <year>2004</year>
        <volume>16</volume>
        <fpage>2923</fpage>
        <lpage>2939</lpage>
        <pub-id pub-id-type="doi">10.1105/tpc.104.021725</pub-id>
        <pub-id pub-id-type="pmid">15486106</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Veliz-Cuba</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Stigler</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Boolean models can explain bistability in the lac operon</article-title>
        <source>J Comput Biol</source>
        <year>2011</year>
        <volume>18</volume>
        <issue>6</issue>
        <fpage>783</fpage>
        <lpage>794</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2011.0031</pub-id>
        <pub-id pub-id-type="pmid">21563979</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dimitrova</surname>
            <given-names>E</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The innate immune response to ischemic injury: a multiscale modeling perspective</article-title>
        <source>BMC Syst Biol</source>
        <year>2018</year>
        <volume>12</volume>
        <issue>1</issue>
        <fpage>50</fpage>
        <pub-id pub-id-type="doi">10.1186/s12918-018-0580-z</pub-id>
        <pub-id pub-id-type="pmid">29631571</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Klarner</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Streck</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Siebert</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>PyBoolNet: a python package for the generation, analysis and visualization of boolean networks</article-title>
        <source>Bioinformatics</source>
        <year>2017</year>
        <volume>33</volume>
        <issue>5</issue>
        <fpage>770</fpage>
        <lpage>772</lpage>
        <?supplied-pmid 27797783?>
        <pub-id pub-id-type="pmid">27797783</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tran</surname>
            <given-names>QN</given-names>
          </name>
        </person-group>
        <article-title>Algebraic model checking for Boolean gene regulatory networks</article-title>
        <source>Adv Exp Med Biol</source>
        <year>2011</year>
        <volume>696</volume>
        <fpage>113</fpage>
        <lpage>122</lpage>
        <pub-id pub-id-type="doi">10.1007/978-1-4419-7046-6_12</pub-id>
        <pub-id pub-id-type="pmid">21431552</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Traynard</surname>
            <given-names>P</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Logical model specification aided by model-checking techniques: application to the mammalian cell cycle regulation</article-title>
        <source>Bioinformatics</source>
        <year>2016</year>
        <volume>32</volume>
        <issue>17</issue>
        <fpage>i772</fpage>
        <lpage>i780</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btw457</pub-id>
        <pub-id pub-id-type="pmid">27587700</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

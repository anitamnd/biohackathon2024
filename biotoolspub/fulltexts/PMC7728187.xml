<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1d3 20150301//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 39.96?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id>
    <journal-id journal-id-type="iso-abbrev">PLoS Comput Biol</journal-id>
    <journal-id journal-id-type="publisher-id">plos</journal-id>
    <journal-id journal-id-type="pmc">ploscomp</journal-id>
    <journal-title-group>
      <journal-title>PLoS Computational Biology</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1553-734X</issn>
    <issn pub-type="epub">1553-7358</issn>
    <publisher>
      <publisher-name>Public Library of Science</publisher-name>
      <publisher-loc>San Francisco, CA USA</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">7728187</article-id>
    <article-id pub-id-type="pmid">33253147</article-id>
    <article-id pub-id-type="doi">10.1371/journal.pcbi.1008386</article-id>
    <article-id pub-id-type="publisher-id">PCOMPBIOL-D-20-00946</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research Article</subject>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Cell Biology</subject>
          <subj-group>
            <subject>Cellular Types</subject>
            <subj-group>
              <subject>Animal Cells</subject>
              <subj-group>
                <subject>Neurons</subject>
              </subj-group>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Neuroscience</subject>
          <subj-group>
            <subject>Cellular Neuroscience</subject>
            <subj-group>
              <subject>Neurons</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Biophysics</subject>
          <subj-group>
            <subject>Biophysical Simulations</subject>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Physical Sciences</subject>
        <subj-group>
          <subject>Physics</subject>
          <subj-group>
            <subject>Biophysics</subject>
            <subj-group>
              <subject>Biophysical Simulations</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Computational Biology</subject>
          <subj-group>
            <subject>Biophysical Simulations</subject>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Research and Analysis Methods</subject>
        <subj-group>
          <subject>Simulation and Modeling</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Computer and Information Sciences</subject>
        <subj-group>
          <subject>Network Analysis</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Computer and Information Sciences</subject>
        <subj-group>
          <subject>Neural Networks</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Neuroscience</subject>
          <subj-group>
            <subject>Neural Networks</subject>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Biophysics</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Physical Sciences</subject>
        <subj-group>
          <subject>Physics</subject>
          <subj-group>
            <subject>Biophysics</subject>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Neuroscience</subject>
          <subj-group>
            <subject>Cognitive Science</subject>
            <subj-group>
              <subject>Cognitive Psychology</subject>
              <subj-group>
                <subject>Perception</subject>
                <subj-group>
                  <subject>Sensory Perception</subject>
                  <subj-group>
                    <subject>Vision</subject>
                  </subj-group>
                </subj-group>
              </subj-group>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Psychology</subject>
          <subj-group>
            <subject>Cognitive Psychology</subject>
            <subj-group>
              <subject>Perception</subject>
              <subj-group>
                <subject>Sensory Perception</subject>
                <subj-group>
                  <subject>Vision</subject>
                </subj-group>
              </subj-group>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Social Sciences</subject>
        <subj-group>
          <subject>Psychology</subject>
          <subj-group>
            <subject>Cognitive Psychology</subject>
            <subj-group>
              <subject>Perception</subject>
              <subj-group>
                <subject>Sensory Perception</subject>
                <subj-group>
                  <subject>Vision</subject>
                </subj-group>
              </subj-group>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Neuroscience</subject>
          <subj-group>
            <subject>Sensory Perception</subject>
            <subj-group>
              <subject>Vision</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Earth Sciences</subject>
        <subj-group>
          <subject>Soil Science</subject>
          <subj-group>
            <subject>Soil Perturbation</subject>
          </subj-group>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Brain Modeling ToolKit: An open source software suite for multiscale modeling of brain circuits</article-title>
      <alt-title alt-title-type="running-head">Brain Modeling ToolKit</alt-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0002-2147-5895</contrib-id>
        <name>
          <surname>Dai</surname>
          <given-names>Kael</given-names>
        </name>
        <role content-type="https://casrai.org/credit/">Conceptualization</role>
        <role content-type="https://casrai.org/credit/">Data curation</role>
        <role content-type="https://casrai.org/credit/">Formal analysis</role>
        <role content-type="https://casrai.org/credit/">Investigation</role>
        <role content-type="https://casrai.org/credit/">Methodology</role>
        <role content-type="https://casrai.org/credit/">Software</role>
        <role content-type="https://casrai.org/credit/">Validation</role>
        <role content-type="https://casrai.org/credit/">Visualization</role>
        <role content-type="https://casrai.org/credit/">Writing – original draft</role>
        <role content-type="https://casrai.org/credit/">Writing – review &amp; editing</role>
        <xref ref-type="aff" rid="aff001">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0001-8911-2321</contrib-id>
        <name>
          <surname>Gratiy</surname>
          <given-names>Sergey L.</given-names>
        </name>
        <role content-type="https://casrai.org/credit/">Data curation</role>
        <role content-type="https://casrai.org/credit/">Investigation</role>
        <role content-type="https://casrai.org/credit/">Methodology</role>
        <role content-type="https://casrai.org/credit/">Software</role>
        <role content-type="https://casrai.org/credit/">Validation</role>
        <role content-type="https://casrai.org/credit/">Visualization</role>
        <role content-type="https://casrai.org/credit/">Writing – review &amp; editing</role>
        <xref ref-type="aff" rid="aff001">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0001-5200-4992</contrib-id>
        <name>
          <surname>Billeh</surname>
          <given-names>Yazan N.</given-names>
        </name>
        <role content-type="https://casrai.org/credit/">Data curation</role>
        <role content-type="https://casrai.org/credit/">Formal analysis</role>
        <role content-type="https://casrai.org/credit/">Investigation</role>
        <role content-type="https://casrai.org/credit/">Software</role>
        <role content-type="https://casrai.org/credit/">Validation</role>
        <role content-type="https://casrai.org/credit/">Visualization</role>
        <role content-type="https://casrai.org/credit/">Writing – original draft</role>
        <role content-type="https://casrai.org/credit/">Writing – review &amp; editing</role>
        <xref ref-type="aff" rid="aff001">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0002-8249-1514</contrib-id>
        <name>
          <surname>Xu</surname>
          <given-names>Richard</given-names>
        </name>
        <role content-type="https://casrai.org/credit/">Data curation</role>
        <role content-type="https://casrai.org/credit/">Formal analysis</role>
        <role content-type="https://casrai.org/credit/">Investigation</role>
        <role content-type="https://casrai.org/credit/">Validation</role>
        <role content-type="https://casrai.org/credit/">Visualization</role>
        <role content-type="https://casrai.org/credit/">Writing – review &amp; editing</role>
        <xref ref-type="aff" rid="aff001">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Cai</surname>
          <given-names>Binghuang</given-names>
        </name>
        <role content-type="https://casrai.org/credit/">Data curation</role>
        <role content-type="https://casrai.org/credit/">Formal analysis</role>
        <role content-type="https://casrai.org/credit/">Investigation</role>
        <role content-type="https://casrai.org/credit/">Software</role>
        <role content-type="https://casrai.org/credit/">Validation</role>
        <role content-type="https://casrai.org/credit/">Visualization</role>
        <role content-type="https://casrai.org/credit/">Writing – review &amp; editing</role>
        <xref ref-type="aff" rid="aff001">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0002-5848-199X</contrib-id>
        <name>
          <surname>Cain</surname>
          <given-names>Nicholas</given-names>
        </name>
        <role content-type="https://casrai.org/credit/">Investigation</role>
        <role content-type="https://casrai.org/credit/">Methodology</role>
        <role content-type="https://casrai.org/credit/">Software</role>
        <role content-type="https://casrai.org/credit/">Writing – review &amp; editing</role>
        <xref ref-type="aff" rid="aff001">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0002-8312-9875</contrib-id>
        <name>
          <surname>Rimehaug</surname>
          <given-names>Atle E.</given-names>
        </name>
        <role content-type="https://casrai.org/credit/">Data curation</role>
        <role content-type="https://casrai.org/credit/">Formal analysis</role>
        <role content-type="https://casrai.org/credit/">Investigation</role>
        <role content-type="https://casrai.org/credit/">Software</role>
        <role content-type="https://casrai.org/credit/">Validation</role>
        <role content-type="https://casrai.org/credit/">Visualization</role>
        <role content-type="https://casrai.org/credit/">Writing – review &amp; editing</role>
        <xref ref-type="aff" rid="aff002">
          <sup>2</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0003-1646-2472</contrib-id>
        <name>
          <surname>Stasik</surname>
          <given-names>Alexander J.</given-names>
        </name>
        <role content-type="https://casrai.org/credit/">Data curation</role>
        <role content-type="https://casrai.org/credit/">Investigation</role>
        <role content-type="https://casrai.org/credit/">Software</role>
        <role content-type="https://casrai.org/credit/">Writing – review &amp; editing</role>
        <xref ref-type="aff" rid="aff002">
          <sup>2</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0002-5425-5012</contrib-id>
        <name>
          <surname>Einevoll</surname>
          <given-names>Gaute T.</given-names>
        </name>
        <role content-type="https://casrai.org/credit/">Funding acquisition</role>
        <role content-type="https://casrai.org/credit/">Project administration</role>
        <role content-type="https://casrai.org/credit/">Resources</role>
        <role content-type="https://casrai.org/credit/">Supervision</role>
        <role content-type="https://casrai.org/credit/">Writing – review &amp; editing</role>
        <xref ref-type="aff" rid="aff002">
          <sup>2</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0002-2629-7100</contrib-id>
        <name>
          <surname>Mihalas</surname>
          <given-names>Stefan</given-names>
        </name>
        <role content-type="https://casrai.org/credit/">Funding acquisition</role>
        <role content-type="https://casrai.org/credit/">Project administration</role>
        <role content-type="https://casrai.org/credit/">Resources</role>
        <role content-type="https://casrai.org/credit/">Supervision</role>
        <role content-type="https://casrai.org/credit/">Writing – review &amp; editing</role>
        <xref ref-type="aff" rid="aff001">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0001-6482-8067</contrib-id>
        <name>
          <surname>Koch</surname>
          <given-names>Christof</given-names>
        </name>
        <role content-type="https://casrai.org/credit/">Conceptualization</role>
        <role content-type="https://casrai.org/credit/">Funding acquisition</role>
        <role content-type="https://casrai.org/credit/">Project administration</role>
        <role content-type="https://casrai.org/credit/">Resources</role>
        <role content-type="https://casrai.org/credit/">Supervision</role>
        <role content-type="https://casrai.org/credit/">Writing – review &amp; editing</role>
        <xref ref-type="aff" rid="aff001">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0003-1106-8310</contrib-id>
        <name>
          <surname>Arkhipov</surname>
          <given-names>Anton</given-names>
        </name>
        <role content-type="https://casrai.org/credit/">Conceptualization</role>
        <role content-type="https://casrai.org/credit/">Data curation</role>
        <role content-type="https://casrai.org/credit/">Funding acquisition</role>
        <role content-type="https://casrai.org/credit/">Methodology</role>
        <role content-type="https://casrai.org/credit/">Project administration</role>
        <role content-type="https://casrai.org/credit/">Resources</role>
        <role content-type="https://casrai.org/credit/">Software</role>
        <role content-type="https://casrai.org/credit/">Supervision</role>
        <role content-type="https://casrai.org/credit/">Visualization</role>
        <role content-type="https://casrai.org/credit/">Writing – original draft</role>
        <role content-type="https://casrai.org/credit/">Writing – review &amp; editing</role>
        <xref ref-type="aff" rid="aff001">
          <sup>1</sup>
        </xref>
        <xref ref-type="corresp" rid="cor001">*</xref>
      </contrib>
    </contrib-group>
    <aff id="aff001">
      <label>1</label>
      <addr-line>Allen Institute, Seattle, Washington, United States of America</addr-line>
    </aff>
    <aff id="aff002">
      <label>2</label>
      <addr-line>Norwegian University of Life Sciences &amp; University of Oslo, Oslo, Norway</addr-line>
    </aff>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Marinazzo</surname>
          <given-names>Daniele</given-names>
        </name>
        <role>Editor</role>
        <xref ref-type="aff" rid="edit1"/>
      </contrib>
    </contrib-group>
    <aff id="edit1">
      <addr-line>Ghent University, BELGIUM</addr-line>
    </aff>
    <author-notes>
      <fn fn-type="COI-statement" id="coi001">
        <p>The authors have declared that no competing interests exist.</p>
      </fn>
      <corresp id="cor001">* E-mail: <email>antona@alleninstitute.org</email></corresp>
    </author-notes>
    <pub-date pub-type="epub">
      <day>30</day>
      <month>11</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="collection">
      <month>11</month>
      <year>2020</year>
    </pub-date>
    <volume>16</volume>
    <issue>11</issue>
    <elocation-id>e1008386</elocation-id>
    <history>
      <date date-type="received">
        <day>3</day>
        <month>6</month>
        <year>2020</year>
      </date>
      <date date-type="accepted">
        <day>16</day>
        <month>9</month>
        <year>2020</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© 2020 Dai et al</copyright-statement>
      <copyright-year>2020</copyright-year>
      <copyright-holder>Dai et al</copyright-holder>
      <license xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an open access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p>
      </license>
    </permissions>
    <self-uri content-type="pdf" xlink:href="pcbi.1008386.pdf"/>
    <abstract>
      <p>Experimental studies in neuroscience are producing data at a rapidly increasing rate, providing exciting opportunities and formidable challenges to existing theoretical and modeling approaches. To turn massive datasets into predictive quantitative frameworks, the field needs software solutions for systematic integration of data into realistic, multiscale models. Here we describe the Brain Modeling ToolKit (BMTK), a software suite for building models and performing simulations at multiple levels of resolution, from biophysically detailed multi-compartmental, to point-neuron, to population-statistical approaches. Leveraging the SONATA file format and existing software such as NEURON, NEST, and others, BMTK offers a consistent user experience across multiple levels of resolution. It permits highly sophisticated simulations to be set up with little coding required, thus lowering entry barriers to new users. We illustrate successful applications of BMTK to large-scale simulations of a cortical area. BMTK is an open-source package provided as a resource supporting modeling-based discovery in the community.</p>
    </abstract>
    <funding-group>
      <funding-statement>This work was funded by the Allen Institute (KD, SLG, YNB, RX, BC, NC, SM, CK, AA), the Norwegian Ministry of Education and Research through the SUURPh Programme (AER), the Norwegian Research Council through COBRA (No. 250128) and IKTPLUSS (No. 300504) (GTE, AJS), as well as NOTUR (No. NN4661K). The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement>
    </funding-group>
    <counts>
      <fig-count count="8"/>
      <table-count count="0"/>
      <page-count count="23"/>
    </counts>
    <custom-meta-group>
      <custom-meta>
        <meta-name>PLOS Publication Stage</meta-name>
        <meta-value>vor-update-to-uncorrected-proof</meta-value>
      </custom-meta>
      <custom-meta>
        <meta-name>Publication Update</meta-name>
        <meta-value>2020-12-10</meta-value>
      </custom-meta>
      <custom-meta id="data-availability">
        <meta-name>Data Availability</meta-name>
        <meta-value>All code and data are available at <ext-link ext-link-type="uri" xlink:href="https://github.com/AllenInstitute/bmtk">https://github.com/AllenInstitute/bmtk</ext-link> and <ext-link ext-link-type="uri" xlink:href="https://portal.brain-map.org/explore/models/mv1-all-layers">https://portal.brain-map.org/explore/models/mv1-all-layers</ext-link>.</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
  <notes>
    <title>Data Availability</title>
    <p>All code and data are available at <ext-link ext-link-type="uri" xlink:href="https://github.com/AllenInstitute/bmtk">https://github.com/AllenInstitute/bmtk</ext-link> and <ext-link ext-link-type="uri" xlink:href="https://portal.brain-map.org/explore/models/mv1-all-layers">https://portal.brain-map.org/explore/models/mv1-all-layers</ext-link>.</p>
  </notes>
</front>
<body>
  <disp-quote>
    <p>This is a <italic>PLOS Computational Biology</italic> Software paper.</p>
  </disp-quote>
  <sec sec-type="intro" id="sec001">
    <title>Introduction</title>
    <p>Recent emergence of systematic large-scale efforts for comprehensive characterization of brain cell types, their connectivity, and <italic>in vivo</italic> activity (e.g. [<xref rid="pcbi.1008386.ref001" ref-type="bibr">1</xref>–<xref rid="pcbi.1008386.ref006" ref-type="bibr">6</xref>]) is fundamentally reshaping neuroscience research. As the new extremely rich and multimodal data become increasingly available to the community, the need is more urgent than ever to develop sophisticated modeling approaches that could help distill new knowledge from the exuberant complexity of the brain reflected in these datasets [<xref rid="pcbi.1008386.ref007" ref-type="bibr">7</xref>]. While computational modeling, when combined with theoretical and experimental approaches, clearly has a lot of potential to bridge properties of single cells with brain connectivity, neural activity, and ultimately organism behavior, building such bridges has proven difficult. Some of the greatest barriers are presented by technical challenges of constructing and simulating large and complex biologically-realistic models, integration of different modeling approaches, and systematic sharing of models with the community. New software tools are required to overcome these challenges and enable easy workflows for the new generation of computational models.</p>
    <p>One may argue that simulating a huge number of neurons by itself is not a bottleneck any more, thanks to the availability of supercomputers and very successful software packages that enable complex and highly parallelizable simulations, such as NEURON [<xref rid="pcbi.1008386.ref008" ref-type="bibr">8</xref>], NEST [<xref rid="pcbi.1008386.ref009" ref-type="bibr">9</xref>], GENESIS [<xref rid="pcbi.1008386.ref010" ref-type="bibr">10</xref>], MOOSE [<xref rid="pcbi.1008386.ref011" ref-type="bibr">11</xref>], Brian [<xref rid="pcbi.1008386.ref012" ref-type="bibr">12</xref>], Xolotl [<xref rid="pcbi.1008386.ref013" ref-type="bibr">13</xref>], and others. However, existing simulation packages traditionally provide a programming environment for users to develop modeling/simulation software code, rather than data-driven interfaces for interactions with model or simulation data. To build sophisticated models, or even to enable efficient simulations, users often need to become experts in the programming environment and languages specific to a simulation package.</p>
    <p>Several tools have been recently developed that address some aspects of these challenges, e.g., NeuroConstruct [<xref rid="pcbi.1008386.ref014" ref-type="bibr">14</xref>], LFPy [<xref rid="pcbi.1008386.ref015" ref-type="bibr">15</xref>,<xref rid="pcbi.1008386.ref016" ref-type="bibr">16</xref>], BioNet [<xref rid="pcbi.1008386.ref017" ref-type="bibr">17</xref>], Open Source Brain [<xref rid="pcbi.1008386.ref018" ref-type="bibr">18</xref>], HNN [<xref rid="pcbi.1008386.ref019" ref-type="bibr">19</xref>], and NetPyNE [<xref rid="pcbi.1008386.ref020" ref-type="bibr">20</xref>]. These tools do not necessarily provide their own simulation kernel, but instead may rely on an existing simulation engine, such as NEURON, providing a user-friendly interface to this engine. To achieve this, they take advantage of the recent developments of modeling file formats and universal model description languages such as NeuroML [<xref rid="pcbi.1008386.ref021" ref-type="bibr">21</xref>,<xref rid="pcbi.1008386.ref022" ref-type="bibr">22</xref>], PyNN [<xref rid="pcbi.1008386.ref023" ref-type="bibr">23</xref>], NSDF [<xref rid="pcbi.1008386.ref024" ref-type="bibr">24</xref>], and SONATA [<xref rid="pcbi.1008386.ref025" ref-type="bibr">25</xref>].</p>
    <p>These new developments provide great opportunities by making modeling and simulation more accessible to neuroscientists. However, a major issue not fully addressed by existing tools is that often it is desirable to develop and investigate models at different levels of resolution. Multi-compartmental models, point-neuron models, and population-level models all have their benefits and drawbacks scientifically and computationally. Depending on the questions being explored, scientists may have to test and, ideally, release multiple versions of the model at such different levels of resolution. But the cost of learning multiple tools can be excessively prohibitive. To address this, we developed and present here an extensive package for multi-scale modeling and simulation across different levels of resolution called the Brain Modeling Toolkit (BMTK).</p>
    <p>The BMTK extends our previously published work on the software for biophysically detailed simulations, BioNet [<xref rid="pcbi.1008386.ref017" ref-type="bibr">17</xref>], which, at the time, was the most advanced component of the then nascent BMTK suite. Since then, BMTK has developed into a mature ecosystem of tools supporting construction and simulation of models at multiple levels of resolution. While existing tools typically provide an interface to only one simulation engine (for example, NetPyNE [<xref rid="pcbi.1008386.ref020" ref-type="bibr">20</xref>] is a powerful interface specifically to the NEURON simulation engine), BMTK has been explicitly developed to furnish interfaces to multiple simulation engines. Furthermore, these interfaces are constructed so as to provide a similar user experience at each level of resolution, even though these different levels are supported by different simulation engines [<xref rid="pcbi.1008386.ref008" ref-type="bibr">8</xref>,<xref rid="pcbi.1008386.ref009" ref-type="bibr">9</xref>,<xref rid="pcbi.1008386.ref026" ref-type="bibr">26</xref>].</p>
    <p>From the implementation point of view, BMTK is a Python package that can be installed on a personal computer, a cluster or supercomputer, or in a cloud environment. BMTK provides a Python-based modular environment for model building and simulation, where the model building stage is clearly separated from simulation. The workflow process adopted by BMTK was designed to optimally support realistic and heterogeneous networks leveraging the complexity of brain composition and connectivity, like empirically driven placement of synapses, which can be computationally expensive to build. With such cases it is often useful to build a model once and then load pre-built models from files for every new simulation. For simulations, BMTK provides a user experience requiring little-to-no programming and in the majority of cases the parameters required to run and record a simulation can be added and adjusted with a text editor. Thus, BMTK can be a useful option for scientists who might otherwise be dissuaded from modeling due to the learning curve of mastering a new programming language or API. However, advanced users can easily extend BMTK capabilities through their own functions, as BMTK’s open-source Python-based design allows for enhancements in a straightforward manner. In other words, one can use BMTK as a simple interface to harness the power of existing simulation engines without the need for programming, or, alternatively, as a programming environment.</p>
    <p>The diverse capabilities of BMTK are supported by the modeling file format SONATA [<xref rid="pcbi.1008386.ref025" ref-type="bibr">25</xref>], which is unique in that it provides a complete description of models and simulation inputs/outputs (i.e., various properties of cells, connectivity, and activity), employs highly efficient binary solutions for computationally demanding components of models and simulations, and flexibly supports multiple levels of modeling abstraction. Importantly, SONATA is compatible with the neurophysiology data format Neurodata Without Borders, or NWB [<xref rid="pcbi.1008386.ref027" ref-type="bibr">27</xref>], which makes it easy for BMTK to interface with experimental data stored as NWB files. It should be noted that SONATA links descriptions of point neuron models, synapses, and ion channels to the target simulator, such as using MOD files for NEURON (as well as standard NEURON mechanisms, e.g., ExpSyn, IntFire1) and the names of built-in/standard point neuron and synapse models for NEST and PyNN. This is different from the approach of simulator-independent languages such as NeuroML [<xref rid="pcbi.1008386.ref021" ref-type="bibr">21</xref>,<xref rid="pcbi.1008386.ref022" ref-type="bibr">22</xref>], which uses purely mathematical descriptions leveraging pre-defined mechanisms grounded in formal LEMS descriptions. Currently, SONATA supports the NeuroML "biophysicalProperties" and “concentrationModel” block schema for biophysically-detailed neuronal models. Support for other NeuroML/LEMS descriptions will be added later, as these descriptions mature. That will replace the current pragmatic choice of some simulator-dependent descriptions in SONATA (and, hence, BMTK) with the more general fully simulator-independent representation. All the parameters required to completely reproduce a simulation, like the exact placement of synapses or times of incoming spikes, can be saved in the SONATA or the associated parameter files. SONATA even includes parameters for defining seeds for random generators for cases when parameters have not been explicitly defined.</p>
    <p>BMTK has been developed with an emphasis on complex and large-scale models and simulations. As such, through its integration with the excellent tools such as NEST and NEURON, it provides a powerful interface permitting very efficient simulations of sophisticated models at multiple scales. This enables easy access to a broad spectrum of computational applications leveraging the new streams of complex information about the brain. However, BMTK also easily supports simpler simulations, including small networks or single-neuron simulations. Overall, the tool is designed for user convenience and flexibility. BMTK is provided freely to the community as an open-source software package (<ext-link ext-link-type="uri" xlink:href="https://alleninstitute.github.io/bmtk/">https://alleninstitute.github.io/bmtk/</ext-link>) to facilitate development and simulation of models and support systematic model sharing and reproducibility.</p>
  </sec>
  <sec sec-type="results" id="sec002">
    <title>Results</title>
    <sec id="sec003">
      <title>BMTK overview</title>
      <p>BMTK is a Python-based software package (originally developed for Python 2.7 and currently supporting Python 3.6+) for creating and simulating neural network models at multiple levels of resolution. It is also an open-source software development kit, allowing users to modify the existing functionality and easily add new extensions or modules. Currently BMTK contains a Builder module for creating models and four simulator modules–BioNet, PointNet, PopNet, and FilterNet–for simulating the models at different levels of granularity (<bold><xref ref-type="fig" rid="pcbi.1008386.g001">Fig 1</xref></bold>).</p>
      <fig id="pcbi.1008386.g001" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.1371/journal.pcbi.1008386.g001</object-id>
        <label>Fig 1</label>
        <caption>
          <title>Overview of BMTK.</title>
          <p>The BMTK software suite consists of several modules. The Builder module contains functions for constructing network models. The simulator modules provide APIs to the simulation engines. BioNet enables simulations of networks consisting of biophysically detailed, multi-compartmental neuron models by interfacing with NEURON. PointNet supports simulations of point-neuron networks via NEST. FilterNet permits simulations of arrays of filters (integrated with the specific case of a model of visual processing by the mouse LGN). PopNet supports simulations with population-statistical models by interfacing with the DiPDE tool. The BMTK modules can subserve multi-stage operations by writing the outputs as files in SONATA format and reading such files as inputs for the next stage of modeling or simulation.</p>
        </caption>
        <graphic xlink:href="pcbi.1008386.g001"/>
      </fig>
      <p>The simulator modules are the application programming interfaces (APIs) to <italic>simulation engines</italic>
<bold>(<xref ref-type="fig" rid="pcbi.1008386.g001">Fig 1</xref>)</bold>, i.e., these modules provide a Python interface to the underlying software packages that execute simulations. The BioNet module provides an interface to NEURON [<xref rid="pcbi.1008386.ref008" ref-type="bibr">8</xref>] for simulations that involve biophysically detailed, compartmental neuronal models or point-neuron models; PointNet–to NEST [<xref rid="pcbi.1008386.ref009" ref-type="bibr">9</xref>] for highly efficient point-neuron simulations; PopNet–to the package diPDE [<xref rid="pcbi.1008386.ref026" ref-type="bibr">26</xref>], which implements a population density approach for simulations of coupled networks of neuronal populations; and FilterNet–to BMTK’s built-in solver of filter input-output transformations.</p>
      <p>Besides the similarity of user experience across modeling levels of resolution, perhaps the main advantage of BMTK to users is that one does not need to become an expert in the programming environments of any of the individual simulation engines, even if one is building and simulating very sophisticated biologically-realistic network models. This is achieved by relying on the standardized data format, SONATA [<xref rid="pcbi.1008386.ref025" ref-type="bibr">25</xref>], for representing model properties and simulation configurations, as well as inputs and outputs. Users only need to provide SONATA files (either by building them using BMTK Builder or by getting files from existing models), and BMTK’s simulator modules will do the rest by translating the SONATA files into model instantiations and simulations by NEURON, NEST, or other engines (<bold><xref ref-type="fig" rid="pcbi.1008386.g002">Fig 2</xref></bold>). Not only does the SONATA format enable this simple workflow under BMTK, it also supports easy model sharing across software packages, as SONATA is implemented in a broad range of modeling tools, such as Blue Brain’s Brion/Brain (<ext-link ext-link-type="uri" xlink:href="https://github.com/BlueBrain/Brion">https://github.com/BlueBrain/Brion</ext-link>), pyNeuroML [<xref rid="pcbi.1008386.ref021" ref-type="bibr">21</xref>,<xref rid="pcbi.1008386.ref022" ref-type="bibr">22</xref>], pyNN [<xref rid="pcbi.1008386.ref023" ref-type="bibr">23</xref>], and NetPyNE [<xref rid="pcbi.1008386.ref020" ref-type="bibr">20</xref>]. Moreover, SONATA’s specification for model inputs and output (spikes and time series of membrane voltage, calcium concentration, etc.) is compatible via a converter with the experimental neurophysiology file format NWB [<xref rid="pcbi.1008386.ref025" ref-type="bibr">25</xref>,<xref rid="pcbi.1008386.ref027" ref-type="bibr">27</xref>].</p>
      <fig id="pcbi.1008386.g002" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.1371/journal.pcbi.1008386.g002</object-id>
        <label>Fig 2</label>
        <caption>
          <title>Basic workflow that is conserved across modules of BMTK.</title>
          <p>Input SONATA files (represented symbolically as chests of drawers) determine the composition and properties of the nodes/network, as well as incoming stimuli (spikes, firing rates, movies) and simulation configuration. Top: the model construction stage. The BMTK Builder combines elements such as cell or synapse models, connectivity rules, and others, via high-level specifications, instantiates the network model, and saves the instantiation as a set of SONATA files. Bottom: simulation stage. The BMTK simulator modules take in the SONATA files as inputs and perform simulations. The input SONATA files may be generated by the BMTK Builder (dashed arrow), any other Builder software supporting SONATA, or from public repositories, collaborators, etc. The BMTK simulator modules produce output, also in SONATA format, typically containing spikes and/or time series (e.g., membrane voltage in selected cells, as a function of time). Right: the SONATA files produced by the BMTK Builder or simulator modules can be analyzed in terms of the model structure or simulated activity (using any analysis software supporting SONATA, or the software that can read HDF5, CSV, and other components of SONATA specification).</p>
        </caption>
        <graphic xlink:href="pcbi.1008386.g002"/>
      </fig>
      <p>As a result, the basic workflow under BMTK is straightforward and consistent across all levels of resolution (<bold><xref ref-type="fig" rid="pcbi.1008386.g002">Fig 2</xref></bold>). Model building is achieved by scripting in Python using the BMTK Builder module, which specify attributes of and relationships between nodes and edges in the constructed network. This step represents the most typical approach currently in use in the modeling field, where descriptive declarations are used to build network instantiations–often constructing very sophisticated networks with only a few lines of code. The output of this module is a set of SONATA files storing model instantiations. The BMTK simulator modules (<bold><xref ref-type="fig" rid="pcbi.1008386.g002">Fig 2</xref></bold>) then run simulations utilizing the SONATA files that describe model composition, inputs (such as incoming spikes), and simulation configuration (duration, etc.). At simulation completion and, if needed, throughout the simulation duration, the simulators write output to disk also in the form of SONATA files.</p>
      <p>The BMTK output in SONATA format can be then used for analysis and visualization. Whereas a basic visualization of spiking output or firing rates is provided with BMTK, our design philosophy has been to leave analysis and visualization to other packages. Given that the SONATA format is used for output files and that SONATA can be converted to NWB [<xref rid="pcbi.1008386.ref025" ref-type="bibr">25</xref>,<xref rid="pcbi.1008386.ref027" ref-type="bibr">27</xref>], analysis of BMTK output is easily achieved with any package that can read SONATA or NWB, or indeed any package that can read the HDF5 format, which underlies both SONATA’s and NWB’s spikes and time series storage. Visualization of the simulated networks can also be achieved with specialized tools as long as they can read SONATA format, which can be easily implemented via the open source pySONATA API [<xref rid="pcbi.1008386.ref025" ref-type="bibr">25</xref>] (<ext-link ext-link-type="uri" xlink:href="https://github.com/AllenInstitute/sonata">https://github.com/AllenInstitute/sonata</ext-link>). One example of such visualization software that reads SONATA is RTNeuron [<xref rid="pcbi.1008386.ref028" ref-type="bibr">28</xref>], which is used throughout the figures below to visualize examples of BMTK models.</p>
      <p>The utility and versatility of BMTK is illustrated below using several examples. First, we describe the BMTK Builder and how it can be used to create simple or very sophisticated network models. Next, we use an example of a simple network consisting of two uniform populations of neurons (excitatory and inhibitory), which we instantiate and simulate using biophysically-detailed compartmental neuronal models in BioNet, point-neuron models in PointNet, and neuronal populations in PopNet. Next, we describe the FilterNet module, which permits one to process stimuli through arrays of filters, currently focusing on converting visual stimuli to spikes that can be used as inputs to simulations of neural networks of vision. Finally, we illustrate the power of BMTK using a variety of real-world applications: simulations of a 230,000-neuron model of mouse V1 implemented at the biophysically detailed and point-neuron levels, computation of the extracellular current source density in simulated cortical tissue, and high-throughput simulations of optogenetic perturbations to diverse cortical cell types.</p>
    </sec>
    <sec id="sec004">
      <title>Constructing models with BMTK Builder</title>
      <p>The BMTK Builder (<bold><xref ref-type="fig" rid="pcbi.1008386.g003">Fig 3</xref></bold>) is a Python module within the BMTK package. By loading this module, one accesses a variety of functions for building networks and saving results to files in SONATA format. The two major types of tasks performed using the BMTK Builder are instantiating network nodes and instantiating edges.</p>
      <fig id="pcbi.1008386.g003" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.1371/journal.pcbi.1008386.g003</object-id>
        <label>Fig 3</label>
        <caption>
          <title>BMTK Builder.</title>
          <p>The Builder module is used to design and instantiate network models. On the left, examples of the Python commands used in BMTK Builder are presented. Note that in this simple example it is assumed that user-defined connection functions “gaussian_distance” and “random_connections” are employed. The purpose of these commands is illustrated schematically on the right. The main stages of model building workflow are defining the nodes and their attributes, defining the connection rules, and then instantiating and saving the network.</p>
        </caption>
        <graphic xlink:href="pcbi.1008386.g003"/>
      </fig>
      <p>When instantiating nodes, one specifies a name for every node type as well as the number of nodes in the type. Furthermore, optional properties of nodes can be specified, such as their positions, types, and other attributes. Some of the attributes are reserved in SONATA format, but otherwise any attributes can be created and assigned as users desire. Functions are provided to distribute values of node properties according to desired distributions (such as distributing cell positions uniformly in a 3D cylindrical volume).</p>
      <p>Instantiation of edges follows similar logics. One specifies which populations of nodes should be connected and adds attributes to those connections (edges), some of which are reserved SONATA properties, but otherwise arbitrary attributes can be assigned. BMTK Builder supplies basic functions for establishing probabilistic connectivity between nodes based, for example, on distance between the nodes.</p>
      <p>We emphasize that BMTK Builder is designed as a general framework open for extensions. It currently provides functions that, for example, help one to distribute nodes or organize connections according to certain logics, but users are encouraged to utilize their own functions as well. This is easily achieved by the extensible Python interface of the Builder. Additional functions will be added to the core library of the Builder per user feedback.</p>
      <p>The BMTK Builder is versatile in that it can create both relatively simple network models or highly complex and biologically realistic network models. Below, we describe simulations of networks illustrating two such cases: a network consisting only of two neuronal populations with random connectivity [<xref rid="pcbi.1008386.ref029" ref-type="bibr">29</xref>] and a highly sophisticated network model of mouse V1 consisting of 17 cell classes distributed in space across 6 cortical layers, with multiple connectivity rules that account for cell classes, distances, and tuning of physiological responses [<xref rid="pcbi.1008386.ref030" ref-type="bibr">30</xref>]. Both networks were prepared using BMTK Builder (for the former model, see examples in <ext-link ext-link-type="uri" xlink:href="https://github.com/AllenInstitute/bmtk">https://github.com/AllenInstitute/bmtk</ext-link>, and for the latter, see <ext-link ext-link-type="uri" xlink:href="https://portal.brain-map.org/explore/models/mv1-all-layers">https://portal.brain-map.org/explore/models/mv1-all-layers</ext-link>). It should be noted that, naturally, complexity of a model, especially of the connectivity rules, strongly influences the computing expense required for model building. For instance, generating the 230,000-neuron V1 model [<xref rid="pcbi.1008386.ref030" ref-type="bibr">30</xref>] can take ~100 CPU-hours or more, depending on the connectivity rules used (note, however, that instantiating a fully actualized model can be parallelized on a cluster). For cases like this, the BMTK’s approach (<bold>Figs <xref ref-type="fig" rid="pcbi.1008386.g002">2</xref> and <xref ref-type="fig" rid="pcbi.1008386.g003">3</xref></bold>) of building the model and saving it in SONATA files for subsequent simulations, rather than rebuilding the model every time a simulation is run, is clearly beneficial.</p>
      <p>A unique feature of BMTK enabled by the SONATA format is that models prepared for one level of resolution can largely be reused for another. For example, a network connectivity created by BMTK Builder for a biophysically detailed simulation contains connections between individual cells as well as descriptions of where synapses should be located on the dendrites of target neurons. This information is stored in SONATA files, which can be used to run a BioNet biophysically detailed simulations. The same files, however, can be used to run a PointNet simulation, which has no representation of dendrites (all neurons are points). In the latter case, only the cell-to-cell connectivity information is used by PointNet, whereas the dendritic locations are ignored. We also note that SONATA files produced by BMTK Builder can be further edited directly, outside of BMTK, since they use well established formats such as HDF5 and CSV [<xref rid="pcbi.1008386.ref025" ref-type="bibr">25</xref>], which can be read and written by many software packages and programming languages.</p>
    </sec>
    <sec id="sec005">
      <title>Biophysically detailed, point-neuron, and population simulations with BioNet, PointNet, and PopNet</title>
      <p>For simulating networks of <italic>interacting</italic> nodes, BMTK currently offers support at three levels of resolution: biophysically detailed, compartmental models with BioNet [<xref rid="pcbi.1008386.ref008" ref-type="bibr">8</xref>,<xref rid="pcbi.1008386.ref017" ref-type="bibr">17</xref>]; point-neuron models with PointNet [<xref rid="pcbi.1008386.ref009" ref-type="bibr">9</xref>]; and population density dynamics models with PopNet [<xref rid="pcbi.1008386.ref026" ref-type="bibr">26</xref>]. In all cases, a user provides as an input the SONATA files [<xref rid="pcbi.1008386.ref025" ref-type="bibr">25</xref>] specifying the model (either constructed with BMTK Builder or obtained via other software, such as NetPyNE [<xref rid="pcbi.1008386.ref020" ref-type="bibr">20</xref>] or others; <bold><xref ref-type="fig" rid="pcbi.1008386.g002">Fig 2</xref></bold>) and simulation configuration. The latter is supplied in text-based JSON files containing SONATA-compliant specifications of simulation duration, paths to input and output files, etc. [<xref rid="pcbi.1008386.ref025" ref-type="bibr">25</xref>]. The BioNet, PointNet, or PopNet module will then interpret the files, run the simulation, and provide the output–such as spikes or various time series, e.g., membrane voltage–also in SONATA format. One useful functionality provided by BMTK is writing the output to disk at user-defined intervals during the simulation. In the case of parallelized simulations each CPU core will cache intermediate results produced on the given core, with the final results collated from data across all cores. See Documentation for more details (<ext-link ext-link-type="uri" xlink:href="https://alleninstitute.github.io/bmtk/">https://alleninstitute.github.io/bmtk/</ext-link>).</p>
      <p>Because BMTK uses SONATA files to store the network, there is a small cost to simulation instantiation due to the extra disk reads. But BMTK can take advantage of having pre-generated network files so as to optimize simulation setup for each simulation engine based on network topology and hierarchy. Because BMTK must handle different types of networks it will not always be the most efficient, but in many cases it can provide optimization techniques that a novice or casual user would not be necessarily aware of. For multicore simulations BMTK will automatically handle the distribution of nodes and edges across all the processors. PointNet can support both multi-threaded as well as multicore simulations. PointNet can also detect when different edges share the same properties in such a way that calls to NEST’s Connect() method are optimized by using a ‘one-to-one' or ‘all-to-all' connection rule, greatly reducing the time it takes to instantiate the network.</p>
      <p>For users with programming proficiency BMTK provides functionality to change how the network is instantiated. Using python decorators, users can create functions to change the way nodes and connections are instantiated. This can be useful when adding noise to a simulation or adjusting synaptic weights. In the aforementioned V1 model [<xref rid="pcbi.1008386.ref030" ref-type="bibr">30</xref>], the network description was built with a baseline synaptic weights depending on source and target cell-type. Then a custom python function was written to readjust the baseline synaptic weight based on other properties of the individual cells–allowing the modelers to quickly simulate the network under different conditions and rules without having to rebuild the connectivity matrix.</p>
      <p>To illustrate applications of BioNet, PointNet, and PopNet, we constructed at each of the three levels of resolution an instance of a simple randomly connected network with 10,000 excitatory neurons and 2,500 inhibitory neurons, receiving excitatory input from 1,000 external neurons [<xref rid="pcbi.1008386.ref029" ref-type="bibr">29</xref>] (<bold><xref ref-type="fig" rid="pcbi.1008386.g004">Fig 4</xref></bold>). This network can exhibit a variety of possible dynamical regimes [<xref rid="pcbi.1008386.ref029" ref-type="bibr">29</xref>], with different degrees of synchrony and asynchrony between neurons and regularity of spiking of individual neurons. Here we selected one of the possible regimes (the regime with synchronized neuronal populations and regular spiking) for illustration at all three levels of resolution. The implementation of this can be found at <ext-link ext-link-type="uri" xlink:href="https://alleninstitute.github.io/bmtk/examples.html#exc-inh-network-model">https://alleninstitute.github.io/bmtk/examples.html#exc-inh-network-model</ext-link>.</p>
      <fig id="pcbi.1008386.g004" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.1371/journal.pcbi.1008386.g004</object-id>
        <label>Fig 4</label>
        <caption>
          <title>Biophysically detailed, point-neuron, and population simulations with BioNet, PointNet, and PopNet.</title>
          <p>In all three cases, the interconnected populations of excitatory and inhibitory neurons receive excitatory input from an external population (1,000 Poisson sources firing at the frequency of 150 Hz, replaced by a uniform population in the PopNet case). (A) Biophysically detailed network of randomly connected excitatory and inhibitory neurons, 12,500 total. An RTNeuron visualization of the network is shown alongside its spiking output (spikes from a small portion of the network are shown, for clarity) and the firing rate (for the whole excitatory population) produced by the BMTK’s BioNet module. (B) The same network using the point-neuron approximation. An RTNeuron visualization and simulation output from the BMTK’s PointNet module simulation are shown. (C) Population-based representation of the same network. A schematic of the model and the output of population-density simulation (firing rate for the excitatory population is shown) from BMTK’s PopNet module are illustrated.</p>
        </caption>
        <graphic xlink:href="pcbi.1008386.g004"/>
      </fig>
      <p>We first employed BMTK Builder to construct a 12,500-neuron network model using compartmental neuron representations from the published model of Layer 4 of mouse V1 [<xref rid="pcbi.1008386.ref031" ref-type="bibr">31</xref>], with 264 compartments for each excitatory and 121 compartments for each inhibitory neuron (<bold><xref ref-type="fig" rid="pcbi.1008386.g004">Fig 4A</xref></bold>). The SONATA network files totaled 694.6 MB (including 15.6 million recurrent connections and ~125,000 feedforward connections). The neurons were interconnected with 0.1 probability and received spiking inputs from 1,000 Poisson firing rate sources firing at the frequency of 150 Hz. The model was simulated using BioNet, and we adjusted synaptic parameters to obtain the desired dynamical regime. To compare with the other levels of resolution (below), we plotted the spike rasters and population firing rates, which show that neurons fire in a synchronized and regular fashion (<bold><xref ref-type="fig" rid="pcbi.1008386.g004">Fig 4A</xref></bold>). The population as a whole exhibits oscillations at the main frequency of ~20 Hz.</p>
      <p>For the PointNet example, we took the model used for the BioNet simulation above and used all of its components applicable to point-neuron simulations–such as the information about which cell connects to which, but not where individual synapses are placed. Naturally, parameters of neurons and of synapses (such as synaptic strengths) needed to be adjusted, as the meaning of many of such parameters are very different between compartmental and point-neuron models. PointNet simulations were carried out, and the synaptic weights were adjusted to obtain the dynamical regime (<bold><xref ref-type="fig" rid="pcbi.1008386.g004">Fig 4B</xref></bold>) similar to that in the BioNet simulation above, with the synchronized neurons emitting bursts of population activity at ~20 Hz.</p>
      <p>Finally, at the PopNet level (<bold><xref ref-type="fig" rid="pcbi.1008386.g004">Fig 4C</xref></bold>), the network was reduced to three nodes–the excitatory, the inhibitory, and the external stimulus populations, with connections between them. After building this very simple network in BMTK Builder, we simulated it with PopNet and adjusted parameters to obtain the desired dynamical regime. Since only the population rate was available here as the output, it was impossible to judge the regularity of firing of individual neurons, but the population activity was clearly similar to the BioNet and PointNet cases. The firing rate exhibited sharp oscillations of population activity at ~20 Hz, with the activity reaching close to zero level between each peak, indicating complete silence of all neurons at regular intervals. Note that, like in the BioNet and PointNet cases, the external population here provides a constant level of activity (i.e., individual neurons in the external population fire spikes at irregular intervals according to Poisson statistics, but their collective output at the population level is approximately constant at all times).</p>
    </sec>
    <sec id="sec006">
      <title>Simulations using filter arrays with FilterNet</title>
      <p>Many models of the nervous system utilize filters–mathematical objects that take in multi-dimensional data and return an output, typically by performing a convolution of the input data with certain functions. FilterNet is a module of BMTK that allows users to operate with filters. A typical application may be processing of peripheral sensory input (<bold><xref ref-type="fig" rid="pcbi.1008386.g005">Fig 5</xref></bold>). For example, an array of filters may be used to represent retinal cells, with the input being movies and the output being retinal firing rates or spikes. These output signals in turn can be used as inputs to neurons deeper in the brain explicitly simulated using other modules of BMTK, such as BioNet or PointNet.</p>
      <fig id="pcbi.1008386.g005" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.1371/journal.pcbi.1008386.g005</object-id>
        <label>Fig 5</label>
        <caption>
          <title>The FilterNet module.</title>
          <p>Top, general workflow in FilterNet. In case of a visual stimulus, a movie is processed by an array of filters distributed in the visual space. Each filter convolves the frames of the movie with the spatial and temporal kernels, performs rectification, and outputs a time dependent firing rate representing the response of the filter to the movie, which can be also converted to instantiations of spike trains. Bottom, illustration of inputs and outputs of FilterNet. Inputs include specifications of parameters such as duration, frame rate, and file locations, as well as contents of the files describing the input patterns and filter properties and distributions. The “run_filternet.py” script is used to carry out the calculations. The output may contain the time series of time-dependent firing rates for each filter and spike trains (illustrated) generated from these time series.</p>
        </caption>
        <graphic xlink:href="pcbi.1008386.g005"/>
      </fig>
      <p>Like the other simulation modules of BMTK, FilterNet is an API that allows users to specify and interact with simulations. FilterNet provides a similar user experience to BioNet, PointNet, and PopNet, in that users work with SONATA-formatted input files that determine functional forms and parameters of the filters, whereas simulation configuration files determine simulation parameters, such as its duration, and location of input and output files.</p>
      <p>The current implementation of FilterNet contains the LGNModel simulator, which was created to provide thalamocortical inputs to biologically realistic models of the mouse visual cortex [<xref rid="pcbi.1008386.ref030" ref-type="bibr">30</xref>,<xref rid="pcbi.1008386.ref031" ref-type="bibr">31</xref>]. This simulator assumes that the input is a movie (a 3D array–two dimensions for space and one for time) and produces the output which is a time-varying firing rate for each filter. A filter here represents an individual cell in the Lateral Geniculate Nucleus (LGN) of mouse thalamus, which projects to the visual cortex. Realistic parameters for such filters, optimized based on the experimental recordings, are available online (<ext-link ext-link-type="uri" xlink:href="http://portal.brain-map.org/explore/models/mv1-all-layers">http://portal.brain-map.org/explore/models/mv1-all-layers</ext-link>). The FilterNet API can also be easily connected with user-defined functions modeling the input-output filter relationship, which may represent various types of inputs (for example, other sensory stimuli beyond the visual 3D arrays).</p>
      <p>An example workflow of FilterNet with LGNModel is illustrated in <bold><xref ref-type="fig" rid="pcbi.1008386.g005">Fig 5</xref></bold>. Here, a movie clip is provided as a 3-dimensional matrix (schematically represented by an image on the top left). A user defines the frame rate, so that the frames can be pinned to the output time axis, and also selects the types of the filters to be used, their numbers, and how they are distributed in the visual space. The types of the filters and their parameters can be taken from our online repository (<ext-link ext-link-type="uri" xlink:href="http://portal.brain-map.org/explore/models/mv1-all-layers">http://portal.brain-map.org/explore/models/mv1-all-layers</ext-link>) where the filters were optimized to match types of <italic>in vivo</italic> responses of neurons in the mouse LGN [<xref rid="pcbi.1008386.ref030" ref-type="bibr">30</xref>,<xref rid="pcbi.1008386.ref032" ref-type="bibr">32</xref>], or one can easily replace these parameters with those of their own choosing. Each filter performs a spatially-temporally separable convolution with the input movie array using two kernels–one operating on the time course of the movie and the other in the visual space (frame pixels). The result of this transformation is rectified. The output of each filter is then a time-varying firing rate, sampled at a frequency defined by the users. FilterNet can also instantiate spike trains from these firing rates using a Poisson process (<bold><xref ref-type="fig" rid="pcbi.1008386.g005">Fig 5</xref></bold>).</p>
      <p>In typical applications one runs a simulation where a movie is passed through an array of filters, each filter returning the firing rate and, potentially, a set of instantiated spike trains (each train corresponding to a single trial). These spike trains can be used as inputs to models of neuronal networks (see an example below of a network model of mouse V1 driven by spikes from the LGN, <bold><xref ref-type="fig" rid="pcbi.1008386.g006">Fig 6</xref></bold>). In these applications, the filters become external nodes for other BMTK simulations. In such applications, typically, the FilterNet simulations would be done first and their output saved to files, and these outputs would then be reused in subsequent network simulations. The critical intermediate step of determining which filter supplies inputs to which target neuron in the simulated network is accomplished via BMTK Builder, where users can define functions for connecting external nodes to internal ones. The subsequent simulations can be performed with BioNet, PointNet, or PopNet.</p>
      <fig id="pcbi.1008386.g006" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.1371/journal.pcbi.1008386.g006</object-id>
        <label>Fig 6</label>
        <caption>
          <title>The biophysical and point-neuron V1 models.</title>
          <p>(A) Visualizations of the biophysical and point-neuron models. The 230,000-neuron models emulate the central portion of the mouse V1, across the full cortical depth, containing layers 1, 2/3, 4, 5, and 6 (layer boundaries are indicated). In the top model, the core portion, ~50,000 neurons, is simulated using biophysically detailed compartmental neuronal models, and the annulus around the core using leaky integrate-and-fire (LIF) point-neuron models. In the bottom model, both core and the annulus employ the generalized LIF neuronal models. Neurons are colored by cell class: hues of red for excitatory cells in layers 2/3, 4, 5, and 6, and blue, cyan and green for Parvalbumin- (Pvalb), Somatostatin- (SST), and 5-hydroxytryptamine receptor 3A- (Htr3a) expressing inhibitory cells classes. (B) Summary of firing rates and direction selectivity index (DSI) obtained from the biophysical and point-neuron simulations, vs. experimental extracellular electrophysiology recordings, by cell class. The data were obtained from 2.5-second long presentations of drifting gratings at 8 different directions, 10 trials each. “RS” and “FS” are experimentally determined regular- and fast-spiking cells, roughly corresponding to excitatory and Pvalb inhibitory neurons; the SST and Htr3a neurons could not be identified from experiments. (C) Performance benchmarks and scaling of simulations and setup (including disk I/O) of the biophysical version of the V1 model using BMTK’s BioNet. The simulation involved 0.5 s presentation of gray screen and 2.5 s of a drifting grating. The time shown is the wallclock time it took to obtain 1 second of simulated time, averaged over 3 s of simulation. The dashed lines indicate ideal scaling (relative to 125 cores, which is a typical choice for simulation of such scale).</p>
        </caption>
        <graphic xlink:href="pcbi.1008386.g006"/>
      </fig>
    </sec>
    <sec id="sec007">
      <title>Examples of BMTK applications to biological problems</title>
      <p>Finally, we present real-life examples of scientific simulations of brain circuits using BMTK. We illustrate large-scale simulations of highly complex brain networks at different levels of resolution (<bold><xref ref-type="fig" rid="pcbi.1008386.g006">Fig 6</xref></bold>); computation of an extracellular electric potential, which is an observable relating the network activity with measurements of a physical signal (<bold><xref ref-type="fig" rid="pcbi.1008386.g007">Fig 7</xref></bold>); and versatile perturbations of network components to mimic optogenetic experiments (<bold><xref ref-type="fig" rid="pcbi.1008386.g008">Fig 8</xref></bold>).</p>
      <fig id="pcbi.1008386.g007" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.1371/journal.pcbi.1008386.g007</object-id>
        <label>Fig 7</label>
        <caption>
          <title>Computing extracellular field potential in BMTK.</title>
          <p>A simulation using a version of the V1 model (<bold><xref ref-type="fig" rid="pcbi.1008386.g006">Fig 6</xref></bold>) with a white full-field flash stimulus is illustrated. The BioNet module of BMTK was used to run the simulation and compute the extracellular potential at multiple virtual electrode locations along the cortical depth; consequently, the potential was used to obtain the Local Field Potential and Current Source Density (CSD). Top row: LFP from example simulation and example mouse. The LFPs are found from averaging over 5 trials in the simulation and 75 trials in the experiments. Middle row: Corresponding CSDs for the LFPs in top row. The CSD is estimated using the delta-source iCSD method [<xref rid="pcbi.1008386.ref051" ref-type="bibr">51</xref>] assuming a column diameter of 0.8 mm for the simulation (the diameter of the core with biophysically detailed neurons in the model) and 1.6 mm for the experiment (roughly in accordance with the diameter of mouse V1). Bottom row: firing rates for the excitatory (“E”) and inhibitory (“I”) populations in each layer (2/3, 4, 5, and 6). Black: experiment mean. Gray: experiment standard deviation. Blue: simulation mean. Simulation rates are averaged over all neurons in a population and 5 trials. Experimental data are averaged over all neurons of the given type recorded from 47 mice, 75 trials each.</p>
        </caption>
        <graphic xlink:href="pcbi.1008386.g007"/>
      </fig>
      <fig id="pcbi.1008386.g008" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.1371/journal.pcbi.1008386.g008</object-id>
        <label>Fig 8</label>
        <caption>
          <title>Simulation of optogenetic perturbations using BMTK.</title>
          <p>The point-neuron version of the V1 model (<bold><xref ref-type="fig" rid="pcbi.1008386.g006">Fig 6</xref></bold>) is used here for illustration. Perturbations are achieved by injecting positive or negative current into cells. (A) Raster plots from 3-second simulations (stimulus: 0.5 s gray followed by 2.5 s of a drifting grating). Simulations without perturbation, with complete silencing of all Layer 6 excitatory cells (E6), and activation of all E6 cells (current equal to 0.5 of the rheobase of each neuron at rest is injected) are illustrated. The perturbation here is applied throughout the course of simulation. (B) Summary of silencing individual cell classes in the V1 model, for the same visual stimulus as in (A). The cell classes listed along the horizontal axis are silenced one by one, and the effect on each cell class (listed along the vertical axis) is characterized using the Optogenetic Modulation Index (OMI; see Main text), averaged over 10 trials and over all cells in the class. The entries “allHtr3a”, “allPvalb”, and “allSst” refer to simulations where, e.g., the Sst class of neurons was silenced in all layers (“allSst”). (C) Activation of Layer 6 excitatory or Pvalb inhibitory neurons, for the same visual stimulus as in (A). Different amplitudes of perturbations are sampled. OMI is computed as in (B), and is shown for 3 select cell classes. Due to inter-laminar projections of Layer 6 Pvalb interneurons to upper layers, activation of either Layer 6 excitatory or Layer 6 inhibitory Pvalb cells leads to the suppression of activity in Layer 4.</p>
        </caption>
        <graphic xlink:href="pcbi.1008386.g008"/>
      </fig>
    </sec>
    <sec id="sec008">
      <title>Biophysical and point-neuron simulations of the mouse cortical area V1</title>
      <p>A recent study [<xref rid="pcbi.1008386.ref030" ref-type="bibr">30</xref>] integrated a wide array of experimental information on the composition (cell class, intrinsic properties, and neuron morphologies), connection probabilities and synaptic properties, as well as <italic>in vivo</italic> physiology of neuronal responses in the mouse primary visual cortex (area V1) to construct a comprehensive model of this cortical area (<bold><xref ref-type="fig" rid="pcbi.1008386.g006">Fig 6A</xref></bold>). The model was constructed using the BMTK Builder. It received thalamocortical inputs from the Lateral Geniculate Nucleus (LGN) of the thalamus, which provided the external drive due to visual stimuli (as illustrated in <bold><xref ref-type="fig" rid="pcbi.1008386.g005">Fig 5</xref></bold> for the FIlterNet module): 17,400 filters responded to movies (as visual stimuli) and supplied resulting spike trains as inputs to the V1 neurons. These filters represented 14 types of LGN cells, parameterized based on experimental recordings from the LGN [<xref rid="pcbi.1008386.ref032" ref-type="bibr">32</xref>], and were distributed over the whole visual space. The filters were connected to the V1 cells according to experimental data on anatomical and functional properties of the LGN-to-V1 projections (e.g., [<xref rid="pcbi.1008386.ref033" ref-type="bibr">33</xref>–<xref rid="pcbi.1008386.ref039" ref-type="bibr">39</xref>]). Consequently, arbitrary movies can be used to stimulate the model, enabling direct comparison with experimental trials that used specific movies shown to awake mice while recording extracellular electrophysiology from V1 with the high-throughput Neuropixles probes [<xref rid="pcbi.1008386.ref040" ref-type="bibr">40</xref>].</p>
      <p>The model of V1 was constructed at two levels of resolution: the biophysical level (using compartmental neuron models) and the point-neuron level. The biophysical version was in fact a hybrid model, as the central portion of interest in the model, with ~50,000 neurons, was represented using compartmental neuron models, whereas the remaining annulus was represented with point-neuron models (<bold><xref ref-type="fig" rid="pcbi.1008386.g006">Fig 6A</xref></bold>). The annulus’s role was primarily to provide a smooth boundary. This hybrid model was simulated with BioNet/NEURON, relying on their ability to handle both compartmental and integrate-and-fire types of models. The fully point-neuron version of the model consisted of Generalized Leaky Integrate-and-Fire (GLIF) neuronal models and was simulated with PointNet/NEST. The neuronal models were sourced from the Allen Cell Types Database [<xref rid="pcbi.1008386.ref041" ref-type="bibr">41</xref>–<xref rid="pcbi.1008386.ref043" ref-type="bibr">43</xref>].</p>
      <p>The two models were each other’s clones, in the sense that they used the same cell positions, individual connections, and all other properties that were applicable to both levels of resolution (as opposed to those applicable to only one level, e.g., dendritic targeting of synapses), the corresponding SONATA files being prepared once in BMTK Builder and then used for both the BioNet and PointNet models. The networks consisted of ~230,000 neurons, covering all layers of V1 from Layer 1 to Layer 6 and including 17 neuron classes [<xref rid="pcbi.1008386.ref030" ref-type="bibr">30</xref>]. The total size of the SONATA network files was a little more than 3.9 GB. The models used cell-class-dependent, distance-dependent, and neuron-tuning-dependent connection probability rules and synaptic weight rules. Heavily constrained by experimental data and trained on a small sample of visual stimuli (a single trial of 0.5 s of gray screen and same duration drifting grating), the models generalized well to different stimuli and exhibited many similarities with the experimental recordings. For example, they exhibited firing rates and levels of direction selectivity across cortical layers and cell classes that were similar to experimental ones (<bold><xref ref-type="fig" rid="pcbi.1008386.g006">Fig 6B</xref></bold>). From comparisons of these V1 model simulations to experimental recordings, several predictions were made with regard to the logics of connectivity between cortical cells of different classes, depending on the functional tuning of these cells [<xref rid="pcbi.1008386.ref030" ref-type="bibr">30</xref>]. The V1 model and simulations are freely available online (<ext-link ext-link-type="uri" xlink:href="https://portal.brain-map.org/explore/models/mv1-all-layers">https://portal.brain-map.org/explore/models/mv1-all-layers</ext-link>).</p>
      <p>Benchmarks of BioNet simulations of this 230,000-neuron V1 model (<bold><xref ref-type="fig" rid="pcbi.1008386.g006">Fig 6C</xref></bold>) show an approximately linear scaling of both the simulation execution time and the model loading time with the number of CPU cores. With the partition of 384 CPU cores, we observe the throughput of approximately 1 second of simulated biological time for slightly over 1 hour of “wall clock” (real) time. These results indicate that extensive simulations for such a large-scale and highly detailed models are possible [<xref rid="pcbi.1008386.ref030" ref-type="bibr">30</xref>], although that does require substantial computing resources. On the other hand, we found that the point-neuron version of the V1 model could be simulated efficiently with PointNet on a single CPU core, providing the performance of 1 second of simulated time in approximately 3 minutes of real time. While one gains in speed even further with parallel PointNet simulations of the V1 model, the convenience and speed of the self-contained single-core simulations are such that typically users find them to be the preferred mode for PointNet simulations of such size. Thus, BMTK’s PointNet enables simulations of large-scale models incorporating much biological complexity even with modest computational resources.</p>
      <p>It should be noted that the computational performance of BioNet and PointNet relies on the excellent performance and parallelization capabilities of NEURON [<xref rid="pcbi.1008386.ref008" ref-type="bibr">8</xref>] and NEST [<xref rid="pcbi.1008386.ref009" ref-type="bibr">9</xref>]. What these BMTK modules add is the convenience and interoperability. For example, although NEURON provides powerful parallelization environment, users typically need to write parallel code in that environment to run their simulations. Likewise, constructing sophisticated bio-realistic models in NEURON or NEST requires substantial amount of coding. BMTK streamlines the latter part through the uniform model building operations in BMTK Builder and obviates the former part for the users by dealing with NEURON or NEST parallelization “under the hood”, so that users do not need to write any code at all.</p>
    </sec>
    <sec id="sec009">
      <title>Computation of the extracellular electric potential</title>
      <p>Computing the extracellular field potential in the modeled brain tissue is an important application [<xref rid="pcbi.1008386.ref007" ref-type="bibr">7</xref>,<xref rid="pcbi.1008386.ref044" ref-type="bibr">44</xref>–<xref rid="pcbi.1008386.ref049" ref-type="bibr">49</xref>] that requires capturing the spatially distributed electric compartments and synapses, as done in biophysically detailed network models. BMTK BioNet’s ability to perform such calculations is illustrated in <bold><xref ref-type="fig" rid="pcbi.1008386.g007">Fig 7</xref></bold> (using previously unpublished simulations). BioNet allows users to compute the extracellular potential using the line-source approximation [<xref rid="pcbi.1008386.ref017" ref-type="bibr">17</xref>,<xref rid="pcbi.1008386.ref050" ref-type="bibr">50</xref>]. The potential is then processed to obtain the low-frequency component–the local field potential (LFP), similar to other recently developed tools providing such functionality (e.g., LFPy [<xref rid="pcbi.1008386.ref015" ref-type="bibr">15</xref>,<xref rid="pcbi.1008386.ref016" ref-type="bibr">16</xref>], NetPyNE [<xref rid="pcbi.1008386.ref020" ref-type="bibr">20</xref>]). BioNet allows users to set up an arbitrary number of recording sites and distribute them in space. One can then compute the LFP from multiple electrodes which in turn can be used to estimate the current source density (CSD) based on a suitable CSD estimation method such as iCSD [<xref rid="pcbi.1008386.ref051" ref-type="bibr">51</xref>] or kCSD [<xref rid="pcbi.1008386.ref052" ref-type="bibr">52</xref>]. Resulting LFPs and estimated CSDs can then be directly compared to experimental ones (<bold><xref ref-type="fig" rid="pcbi.1008386.g007">Fig 7</xref></bold>; see <ext-link ext-link-type="uri" xlink:href="https://portal.brain-map.org/explore/models/mv1-all-layers">https://portal.brain-map.org/explore/models/mv1-all-layers</ext-link>, under “Extracellular Field Potential”). Note that the CSD corresponds to the net transmembrane volume current density which also can be computed directly from neural network simulations. A comparison of such a “ground-truth” CSD, found by binning transmembrane currents into voxels, and the CSD estimated from the corresponding LFP was previously done by us for a cortical column [<xref rid="pcbi.1008386.ref053" ref-type="bibr">53</xref>].</p>
      <p>The V1 model in <bold><xref ref-type="fig" rid="pcbi.1008386.g006">Fig 6</xref></bold> showed good agreement with experiments for firing rate metrics such as direction selectivity. As a next step, one can use BMTK to investigate the extracellular field dynamics. <bold><xref ref-type="fig" rid="pcbi.1008386.g007">Fig 7</xref></bold> shows one example among a number of model configurations generated (differing, e.g., in the strengths of connections among cell types, the ways how LGN inputs are provided, or distribution of synapses on the neuronal arbors). The LFP, CSD and the firing rates across the cortical layers (in response to a full-field flash stimulus) are compared with the experimental data [<xref rid="pcbi.1008386.ref040" ref-type="bibr">40</xref>]. Note that experimental data show substantial variability across mice, and the example from one mouse shown is not representative of all observed LFP/CSD patterns. A majority of the 47 mice in this dataset, however, do contain main features seen in <bold><xref ref-type="fig" rid="pcbi.1008386.g007">Fig 7</xref></bold>: an early sink (blue CSD) in Layers 2/3-4 (L2/3-L4), which is then replaced by a source (red CSD), and a delayed but strong sink in L5-L6.</p>
      <p>The model captures some of these properties of CSD, though not precisely. The L2/3-4 sink is more sustained than in the experiment, and the later source in these layers is less prominent. The L5-L6 sink starts earlier in the simulation and is narrower along the depth dimension. The overall magnitude of CSD peaks and troughs is also smaller in simulation than in experiment. Nevertheless, it is reassuring that the model captures overall trends in both the dynamics of the firing rates and the major features of CSD (<bold><xref ref-type="fig" rid="pcbi.1008386.g007">Fig 7</xref></bold>). Much further work is necessary to understand how the circuit architecture determines the spiking and LFP/CSD responses. With BMTK and the bio-realistic V1 model [<xref rid="pcbi.1008386.ref030" ref-type="bibr">30</xref>], iterations of simulations and adjustments to the model circuit structure will shed light on this question and will lead to improved agreement with experiments.</p>
    </sec>
    <sec id="sec010">
      <title>Applications to perturbative studies of brain circuits</title>
      <p>BMTK also offers approaches to apply a variety of perturbations and manipulations, which can be specified in the simulation configuration file, e.g., by providing the list of cell IDs to be perturbed and parameterizing the perturbation function. (The scripting interface permits further unlimited possibilities for simulating custom perturbations.) See <ext-link ext-link-type="uri" xlink:href="https://alleninstitute.github.io/bmtk/tutorial_pointnet_modeling.html">https://alleninstitute.github.io/bmtk/tutorial_pointnet_modeling.html</ext-link>.</p>
      <p>As an example, injection of current directly into neurons is a common technique that can be used effectively to mimic optogenetic perturbations. A follow-up study [<xref rid="pcbi.1008386.ref054" ref-type="bibr">54</xref>] to the V1 model work [<xref rid="pcbi.1008386.ref030" ref-type="bibr">30</xref>] used this technique to investigate perturbations of neurons, from single to multiple at a time, selected according to their location, cell class, and functional properties. Many thousands of perturbative simulations were performed using the point-neuron version of the V1 model via the BMTK’s PointNet module. The results agreed with the recent single-neuron optogenetics experiments [<xref rid="pcbi.1008386.ref055" ref-type="bibr">55</xref>] and suggested coexistence of efficient and robust coding in cortical circuits [<xref rid="pcbi.1008386.ref054" ref-type="bibr">54</xref>]. <bold><xref ref-type="fig" rid="pcbi.1008386.g008">Fig 8</xref></bold> shows a complementary set of simulations (until now, unpublished) conducted as part of that project, which consist of silencing or activation of whole cell classes, including titrated perturbations (see <ext-link ext-link-type="uri" xlink:href="https://portal.brain-map.org/explore/models/mv1-all-layers">https://portal.brain-map.org/explore/models/mv1-all-layers</ext-link>, under “GLIF_network”). Currently, BMTK offers an easy way of defining perturbations to either cell populations or a set of individual cells.</p>
      <p><bold><xref ref-type="fig" rid="pcbi.1008386.g008">Fig 8A</xref></bold> shows spiking activity in the core of the V1 model (see <bold><xref ref-type="fig" rid="pcbi.1008386.g006">Fig 6</xref></bold>) in response to visual stimulation with a drifting grating, for a control condition and two types of perturbation to the Layer 6 excitatory cells: complete silencing and modest activation of these neurons. With BMTK, it is easy to sample perturbations to all cell classes in the model and characterize the effect of each on all the other classes. This is illustrated in <bold><xref ref-type="fig" rid="pcbi.1008386.g008">Fig 8B</xref></bold>, which uses the Optogenetic Modulation Index (OMI) to characterize the effect of perturbation. The OMI of a neuron <italic>i</italic> is defined as:
<disp-formula id="pcbi.1008386.e001"><alternatives><graphic xlink:href="pcbi.1008386.e001.jpg" id="pcbi.1008386.e001g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M1"><mml:msub><mml:mrow><mml:mi>O</mml:mi><mml:mi>M</mml:mi><mml:mi>I</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msubsup><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>t</mml:mi><mml:mi>u</mml:mi><mml:mi>r</mml:mi><mml:mi>b</mml:mi><mml:mi>e</mml:mi><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup><mml:mo>−</mml:mo><mml:msubsup><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>n</mml:mi><mml:mi>t</mml:mi><mml:mi>r</mml:mi><mml:mi>o</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup></mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>t</mml:mi><mml:mi>u</mml:mi><mml:mi>r</mml:mi><mml:mi>b</mml:mi><mml:mi>e</mml:mi><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>n</mml:mi><mml:mi>t</mml:mi><mml:mi>r</mml:mi><mml:mi>o</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mfrac></mml:math></alternatives></disp-formula>
where <inline-formula id="pcbi.1008386.e002"><alternatives><graphic xlink:href="pcbi.1008386.e002.jpg" id="pcbi.1008386.e002g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M2"><mml:msubsup><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>t</mml:mi><mml:mi>u</mml:mi><mml:mi>r</mml:mi><mml:mi>b</mml:mi><mml:mi>e</mml:mi><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup></mml:math></alternatives></inline-formula> and <inline-formula id="pcbi.1008386.e003"><alternatives><graphic xlink:href="pcbi.1008386.e003.jpg" id="pcbi.1008386.e003g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M3"><mml:msubsup><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>n</mml:mi><mml:mi>t</mml:mi><mml:mi>r</mml:mi><mml:mi>o</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup></mml:math></alternatives></inline-formula> are the firing rates of this neuron during and in the absence of perturbation, respectively. Negative OMI indicates suppression of cell’s firing due to perturbation (OMI = −1 means that the cell is fully suppressed), and positive values indicate elevated firing due to perturbation. Mean OMIs for every cell class in <bold><xref ref-type="fig" rid="pcbi.1008386.g008">Fig 8B</xref></bold> exhibit a rich pattern of various effects depending on the population silenced, including non-intuitive effects of silencing the excitatory populations: e.g., silencing of excitatory populations in Layer 2/3 (E2/3) leads to suppression of E5, but mild activation of E4 and E6.</p>
      <p>The latter effect may reflect the cell-type specific connectivity across layers in the V1 model, estimated using available experimental data [<xref rid="pcbi.1008386.ref030" ref-type="bibr">30</xref>]. Connections from E2/3 to inhibitory cells in L4 are stronger and of higher probability than connections to excitatory cells; thus, suppression of E2/3 leads to disinhibition of E4. The E6 is then mildly excited, likely due to the excitatory connections from E4, whereas E5 is inhibited due to the relatively strong connections from E4 to inhibitory cells in L5 and the weakening of excitatory drive from E2/3 (due to suppression of E2/3). Ultimately, though, it is hard to assign a specific reason for such effects or predict these effects simply by examining connection diagrams in this highly recurrently connected system, which illustrates the need for detailed bio-realistic simulations to make quantitative predictions about dynamics in such complex networks.</p>
      <p>Furthermore, BMTK permits one to sample the magnitude of perturbation (<bold><xref ref-type="fig" rid="pcbi.1008386.g008">Fig 8C</xref></bold>), which can be done with separate amplitudes applied for every cell, e.g., by tying the amount of injected current to the previously measured rheobase of each cell model. <bold><xref ref-type="fig" rid="pcbi.1008386.g008">Fig 8C</xref></bold> shows the effect of such different perturbation magnitudes applied to the E6 or i6Pvalb cell classes (i.e., excitatory and inhibitory Pvalb cells in Layer 6). Both perturbations lead to activation of i6Pvalb, but in the first case E6 firing increases, whereas in the second it decreases. Non-intuitively, both perturbations result in suppression of activity in Layer 4. This particular effect of Layer 6 perturbation is due to interlaminar projections from inhibitory Layer 6 Pvalb neurons to upper layers. These results are consistent with the overall inhibitory modulation of superficial layers by Layer 6, demonstrated experimentally (Olsen et al. 2012; Bortone, Olsen, and Scanziani 2014).</p>
      <p>Together, these examples demonstrate the capability of BMTK to sample a wide variety of perturbations and therefore enable extensive comparisons with experiments and biologically meaningful predictive studies.</p>
    </sec>
  </sec>
  <sec sec-type="conclusions" id="sec011">
    <title>Discussion</title>
    <p>The Brain Modeling ToolKit (BMTK) is a Python package that provides convenient and powerful user interfaces for building and simulating computational models for neuroscience applications. Network models, from very simple to highly complex and biologically realistic, can be constructed using BMTK Builder. BMTK’s FilterNet module provides functionality to process multi-dimensional stimuli via arrays of filters, resulting in time series or spike trains that can be used, e.g., as incoming stimuli for network simulations. The actual network simulations are carried out using BMTK modules BioNet, PointNet, and PopNet, which take advantage of the powerful simulation engines NEURON [<xref rid="pcbi.1008386.ref008" ref-type="bibr">8</xref>], NEST [<xref rid="pcbi.1008386.ref009" ref-type="bibr">9</xref>], and diPDE [<xref rid="pcbi.1008386.ref026" ref-type="bibr">26</xref>]. Through these modules, BMTK supports simulations at multiple levels of modeling resolution–from filters and population dynamics, to point-neuron and biophysically-detailed compartmental neuronal models.</p>
    <p>There are multiple benefits of BMTK for users. The most standard practice in the field is to build relatively simple networks, that can be described by a few lines of code. BMTK is fully compatible with such a practice, as BMTK Builder supports exactly this approach. An additional benefit of modularity is provided by separating the model building and simulating stages, so that it becomes easier to keep track of specific instantiations of models that may be simulated with a variety of different input parameters. On the other hand, a growing area of modeling applications is the development of very sophisticated and biologically realistic models drawing on extensive experimental datasets, and here BMTK is useful as well. BMTK Builder enables very complex and computationally expensive approaches to constructing network models, as exemplified by the model of mouse V1 described above [<xref rid="pcbi.1008386.ref030" ref-type="bibr">30</xref>] (<bold><xref ref-type="fig" rid="pcbi.1008386.g006">Fig 6</xref></bold>). The same example also illustrates how, after constructing a model once, one can reuse many components of the model for simulations at different levels of resolution, such as biophysical with BioNet and point-neuron with PointNet.</p>
    <p>Another aspect of benefits to users is the standardization of user experience. The simulation modules of BMTK provide very similar interfaces for interacting with simulations at different levels of resolution, whether with BioNet, PointNet, or PopNet. All steps in the modeling and simulation processes are bound together by employing the SONATA format [<xref rid="pcbi.1008386.ref025" ref-type="bibr">25</xref>] for input and output files. This simplifies and standardizes workflows, and also provides a backbone for sharing models and simulations with the community. Beyond applications in BMTK itself, SONATA ensures a wide spectrum of possibilities for sharing and reusing BMTK models with other tools, and vice versa, since SONATA is supported by or compatible with a growing list of software tools and standards, including NetPyNE, NeuroML, PyNN, RTNeuron, Brion/Brain, and NWB [<xref rid="pcbi.1008386.ref020" ref-type="bibr">20</xref>–<xref rid="pcbi.1008386.ref023" ref-type="bibr">23</xref>,<xref rid="pcbi.1008386.ref027" ref-type="bibr">27</xref>,<xref rid="pcbi.1008386.ref028" ref-type="bibr">28</xref>].</p>
    <p>Finally, BMTK enables even non-expert users to perform computationally efficient simulations. The BMTK simulator modules enable simple straightforward simulations, but also harness the excellent capabilities of NEURON [<xref rid="pcbi.1008386.ref008" ref-type="bibr">8</xref>] and NEST [<xref rid="pcbi.1008386.ref009" ref-type="bibr">9</xref>] to carry out very large-scale simulations with high computational efficiency, employing parallelization techniques. The latter is an essential requirement for efficient simulations of large and biologically realistic model networks. Previously, in many cases one had to become an expert in parallel programming under the simulator environment and write their own parallel simulation code in that environment. BMTK implements this step for users, so that even users with no experience in programming can perform highly computationally demanding simulations very efficiently. At the same time, due to BMTK’s open-source design as a set of Python modules, those users who are more proficient in software coding can easily implement additional capability of their choice by interfacing their functions with BMTK.</p>
    <p>As we showed above, BMTK is a mature tool providing ample opportunities for modeling applications. One can build models, provide realistic inputs, such as visual inputs corresponding to arbitrary movies that might be used in experiments, and perform extensive simulations of brain networks under realistic conditions to obtain a variety of outputs (<bold>Figs. <xref ref-type="fig" rid="pcbi.1008386.g005">5</xref> and <xref ref-type="fig" rid="pcbi.1008386.g006">6</xref></bold>). Current BMTK implementation easily supports output of spikes, membrane voltages, and variables such as calcium concentration. BioNet also permits one to simulate and save the extracellular potential for computing such metrics as LFP and CSD (<bold><xref ref-type="fig" rid="pcbi.1008386.g007">Fig 7</xref></bold>). Importantly, BMTK also permits a variety of perturbations applied to the simulated system, for example in the form of current injections into neurons (<bold><xref ref-type="fig" rid="pcbi.1008386.g008">Fig 8</xref></bold>). One critical application of such capabilities is simulation of optogenetic perturbations of brain circuits, which have become a very powerful tool for interrogating circuit function in experiments (e.g., [<xref rid="pcbi.1008386.ref056" ref-type="bibr">56</xref>–<xref rid="pcbi.1008386.ref062" ref-type="bibr">62</xref>]).</p>
    <p>BMTK is intended as an open ecosystem that can grow and develop with time. While many useful features are already available based on the initial applications, we intend to add new features, especially driven by user feedback and requests. In addition, BMTK is an open-source project hosted on GitHub (<ext-link ext-link-type="uri" xlink:href="https://github.com/AllenInstitute/bmtk/">https://github.com/AllenInstitute/bmtk/</ext-link>), and users are welcome to submit their own new features and solutions to enhance the tool’s capabilities for everyone’s benefit. One area for improving user experience is visualization. Currently BMTK provides basic visualization of spiking output or firing rates; more sophisticated visualizations of simulation output can certainly be useful. In terms of model structure and activity visualization in 3D, other existing tools compatible with SONATA, such as RTNeuron (Hernando et al., 2013), can be employed, but, again, native model visualization within BMTK will be a convenient addition. Another area for improvement is post-processing and standard analysis tools for simulation data. It may be beneficial to provide a repository of such analysis tools–e.g., including functionality for analyses in <bold>Figs <xref ref-type="fig" rid="pcbi.1008386.g006">6</xref>, <xref ref-type="fig" rid="pcbi.1008386.g007">7</xref> and <xref ref-type="fig" rid="pcbi.1008386.g008">8</xref></bold> –as part of BMTK suite. Yet another aspect deserving attention is support for using BMTK in the cloud environment, the demand for which is expected to grow rapidly in the next few years. We welcome user feedback and suggestions for new features of BMTK and will strive to support its further evolution driven by such user demands.</p>
    <p>As we continue to expand the capabilities of BMTK, we also hope to use it to drive and develop community adopted standards. For example, formats like SONATA, or NWB with user extensions, specify how users may define spikes or step-current stimulus with pre-generated files. And though useful in most cases, a common request is for more dynamic methods of generating simulation stimuli. Some input types, like extracellular electrodes, are not yet defined in the SONATA format. BMTK adopted certain ways of defining inputs and will continue to develop and test better ways to do so, yet ultimately the goal is using the lessons learnt and incorporate such features into formats like SONATA or NWB. This will increase the lifespan and utility of BMTK and can also be utilized by other software for a rich and diverse toolbox for neuroscientists.</p>
    <p>In summary, we anticipate that BMTK, combined with the SONATA format, can be useful for a broad spectrum of applications on personal computers, supercomputers, and in the cloud environments. Our hope is that BMTK will save effort of many researchers who will be able to focus more on their scientific research and will fuel many discoveries at the interface between modeling, theory, and experimentation.</p>
  </sec>
</body>
<back>
  <ack>
    <p>3-D visualizations were generated using RTNeuron with the support of the Blue Brain Project. We are grateful to Michael Hines for many helpful discussions and suggestions. We wish to thank the Allen Institute founder, Paul G. Allen, for his vision, encouragement, and support.</p>
  </ack>
  <ref-list>
    <title>References</title>
    <ref id="pcbi.1008386.ref001">
      <label>1</label>
      <mixed-citation publication-type="journal"><name><surname>Amunts</surname><given-names>K</given-names></name>, <name><surname>Ebell</surname><given-names>C</given-names></name>, <name><surname>Muller</surname><given-names>J</given-names></name>, <name><surname>Telefont</surname><given-names>M</given-names></name>, <name><surname>Knoll</surname><given-names>A</given-names></name>, <name><surname>Lippert</surname><given-names>T</given-names></name>. <article-title>The Human Brain Project: Creating a European Research Infrastructure to Decode the Human Brain</article-title>. <source>Neuron</source>. <year>2016</year>;<volume>92</volume>: <fpage>574</fpage>–<lpage>581</lpage>. <pub-id pub-id-type="doi">10.1016/j.neuron.2016.10.046</pub-id><?supplied-pmid 27809997?><pub-id pub-id-type="pmid">27809997</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref002">
      <label>2</label>
      <mixed-citation publication-type="journal"><name><surname>Bouchard</surname><given-names>KE</given-names></name>, <name><surname>Aimone</surname><given-names>JB</given-names></name>, <name><surname>Chun</surname><given-names>M</given-names></name>, <name><surname>Dean</surname><given-names>T</given-names></name>, <name><surname>Denker</surname><given-names>M</given-names></name>, <name><surname>Diesmann</surname><given-names>M</given-names></name>, <etal>et al</etal><article-title>High-Performance Computing in Neuroscience for Data-Driven Discovery, Integration, and Dissemination</article-title>. <source>Neuron</source>. <year>2016</year>;<volume>92</volume>: <fpage>628</fpage>–<lpage>631</lpage>. <pub-id pub-id-type="doi">10.1016/j.neuron.2016.10.035</pub-id><?supplied-pmid 27810006?><pub-id pub-id-type="pmid">27810006</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref003">
      <label>3</label>
      <mixed-citation publication-type="journal"><name><surname>Hawrylycz</surname><given-names>M</given-names></name>, <name><surname>Anastassiou</surname><given-names>C</given-names></name>, <name><surname>Arkhipov</surname><given-names>A</given-names></name>, <name><surname>Berg</surname><given-names>J</given-names></name>, <name><surname>Buice</surname><given-names>M</given-names></name>, <name><surname>Cain</surname><given-names>N</given-names></name>, <etal>et al</etal><article-title>Inferring cortical function in the mouse visual system through large-scale systems neuroscience</article-title>. <source>Proc Natl Acad Sci U S A</source>. <year>2016</year>;<fpage>113</fpage><pub-id pub-id-type="doi">10.1073/pnas.1618558114</pub-id><?supplied-pmid 27940911?><pub-id pub-id-type="pmid">27940911</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref004">
      <label>4</label>
      <mixed-citation publication-type="journal"><name><surname>Koch</surname><given-names>C</given-names></name>, <name><surname>Jones</surname><given-names>A</given-names></name>. <article-title>Big Science, Team Science, and Open Science for Neuroscience</article-title>. <source>Neuron</source>. <year>2016</year>;<volume>92</volume>: <fpage>612</fpage>–<lpage>616</lpage>. <pub-id pub-id-type="doi">10.1016/j.neuron.2016.10.019</pub-id><?supplied-pmid 27810003?><pub-id pub-id-type="pmid">27810003</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref005">
      <label>5</label>
      <mixed-citation publication-type="journal"><name><surname>Martin</surname><given-names>CL</given-names></name>, <name><surname>Chun</surname><given-names>M</given-names></name>. <article-title>The BRAIN Initiative: Building, Strengthening, and Sustaining</article-title>. <source>Neuron</source>. <year>2016</year>;<volume>92</volume>: <fpage>570</fpage>–<lpage>573</lpage>. <pub-id pub-id-type="doi">10.1016/j.neuron.2016.10.039</pub-id><?supplied-pmid 27809996?><pub-id pub-id-type="pmid">27809996</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref006">
      <label>6</label>
      <mixed-citation publication-type="journal"><name><surname>Vogelstein</surname><given-names>JT</given-names></name>, <name><surname>Mensh</surname><given-names>B</given-names></name>, <name><surname>Häusser</surname><given-names>M</given-names></name>, <name><surname>Spruston</surname><given-names>N</given-names></name>, <name><surname>Evans</surname><given-names>AC</given-names></name>, <name><surname>Kording</surname><given-names>K</given-names></name>, <etal>et al</etal><article-title>To the Cloud! A Grassroots Proposal to Accelerate Brain Science Discovery</article-title>. <source>Neuron</source>. <year>2016</year>;<volume>92</volume>: <fpage>622</fpage>–<lpage>627</lpage>. <pub-id pub-id-type="doi">10.1016/j.neuron.2016.10.033</pub-id><?supplied-pmid 27810005?><pub-id pub-id-type="pmid">27810005</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref007">
      <label>7</label>
      <mixed-citation publication-type="journal"><name><surname>Einevoll</surname><given-names>GT</given-names></name>, <name><surname>Destexhe</surname><given-names>A</given-names></name>, <name><surname>Diesmann</surname><given-names>M</given-names></name>, <name><surname>Grün</surname><given-names>S</given-names></name>, <name><surname>Jirsa</surname><given-names>V</given-names></name>, <name><surname>de Kamps</surname><given-names>M</given-names></name>, <etal>et al</etal><article-title>The Scientific Case for Brain Simulations</article-title>. <source>Neuron</source>. <year>2019</year>;<volume>102</volume>: <fpage>735</fpage>–<lpage>744</lpage>. <pub-id pub-id-type="doi">10.1016/j.neuron.2019.03.027</pub-id><?supplied-pmid 31121126?><pub-id pub-id-type="pmid">31121126</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref008">
      <label>8</label>
      <mixed-citation publication-type="book"><name><surname>Carnevale</surname><given-names>N</given-names></name>, <name><surname>Hines</surname><given-names>M</given-names></name>. <source>The NEURON Book</source>. <edition designator="1">1st ed</edition><publisher-loc>New York</publisher-loc>: <publisher-name>Cambridge University Press</publisher-name>; <year>2006</year>.</mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref009">
      <label>9</label>
      <mixed-citation publication-type="journal"><name><surname>Gewaltig</surname><given-names>M-O</given-names></name>, <name><surname>Diesmann</surname><given-names>M</given-names></name>. <article-title>NEST (NEural Simulation Tool)</article-title>. <source>Scholarpedia</source>. <year>2007</year>;<volume>2</volume>: <fpage>1430</fpage><pub-id pub-id-type="doi">10.4249/scholarpedia.1430</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref010">
      <label>10</label>
      <mixed-citation publication-type="book"><name><surname>Bower</surname><given-names>J</given-names></name>, <name><surname>Beeman</surname><given-names>D</given-names></name>. <source>The Book of GENESIS: Exploring Realistic Neural Models with the GEneral NEural SImulation System</source>. <edition designator="1">1st ed</edition><publisher-loc>New York</publisher-loc>: <collab>Springer</collab>; <year>1997</year>.</mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref011">
      <label>11</label>
      <mixed-citation publication-type="journal"><name><surname>Ray</surname><given-names>S</given-names></name>, <name><surname>Bhalla</surname><given-names>U</given-names></name>. <article-title>PyMOOSE: interoperable scripting in Python for MOOSE</article-title>. <source>Frontiers in Neuroinformatics</source>. <year>2008</year> p. <fpage>6</fpage>
<pub-id pub-id-type="doi">10.3389/neuro.11.006.2008</pub-id>
<?supplied-pmid 19129924?><pub-id pub-id-type="pmid">19129924</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref012">
      <label>12</label>
      <mixed-citation publication-type="journal"><name><surname>Goodman</surname><given-names>D</given-names></name>, <name><surname>Brette</surname><given-names>R</given-names></name>. <article-title>Brian: a simulator for spiking neural networks in Python</article-title>. <source>Frontiers in Neuroinformatics</source>. <year>2008</year> p. <fpage>5</fpage>
<pub-id pub-id-type="doi">10.3389/neuro.11.005.2008</pub-id>
<?supplied-pmid 19115011?><pub-id pub-id-type="pmid">19115011</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref013">
      <label>13</label>
      <mixed-citation publication-type="journal"><name><surname>Gorur-Shandilya</surname><given-names>S</given-names></name>, <name><surname>Hoyland</surname><given-names>A</given-names></name>, <name><surname>Marder</surname><given-names>E</given-names></name>. <article-title>Xolotl: An Intuitive and Approachable Neuron and Network Simulator for Research and Teaching</article-title>. <source>Frontiers in Neuroinformatics</source>. <year>2018</year> p. <fpage>87</fpage>
<pub-id pub-id-type="doi">10.3389/fninf.2018.00087</pub-id>
<?supplied-pmid 30534067?><pub-id pub-id-type="pmid">30534067</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref014">
      <label>14</label>
      <mixed-citation publication-type="journal"><name><surname>Gleeson</surname><given-names>P</given-names></name>, <name><surname>Steuber</surname><given-names>V</given-names></name>, <name><surname>Silver</surname><given-names>RA</given-names></name>. <article-title>neuroConstruct: A Tool for Modeling Networks of Neurons in 3D Space</article-title>. <source>Neuron</source>. <year>2007</year>;<volume>54</volume>: <fpage>219</fpage>–<lpage>235</lpage>. <pub-id pub-id-type="doi">10.1016/j.neuron.2007.03.025</pub-id><?supplied-pmid 17442244?><pub-id pub-id-type="pmid">17442244</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref015">
      <label>15</label>
      <mixed-citation publication-type="journal"><name><surname>Lindén</surname><given-names>H</given-names></name>, <name><surname>Hagen</surname><given-names>E</given-names></name>, <name><surname>Leski</surname><given-names>S</given-names></name>, <name><surname>Norheim</surname><given-names>E</given-names></name>, <name><surname>Pettersen</surname><given-names>K</given-names></name>, <name><surname>Einevoll</surname><given-names>G</given-names></name>. <article-title>LFPy: a tool for biophysical simulation of extracellular potentials generated by detailed model neurons</article-title>. <source>Frontiers in Neuroinformatics</source>. <year>2014</year> p. <fpage>41</fpage> Available: <ext-link ext-link-type="uri" xlink:href="https://www.frontiersin.org/article/10.3389/fninf.2013.00041">https://www.frontiersin.org/article/10.3389/fninf.2013.00041</ext-link>
<?supplied-pmid 24474916?><pub-id pub-id-type="pmid">24474916</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref016">
      <label>16</label>
      <mixed-citation publication-type="journal"><name><surname>Hagen</surname><given-names>E</given-names></name>, <name><surname>Næss</surname><given-names>S</given-names></name>, <name><surname>Ness</surname><given-names>T V</given-names></name>, <name><surname>Einevoll</surname><given-names>GT</given-names></name>. <article-title>Multimodal Modeling of Neural Network Activity: Computing LFP, ECoG, EEG, and MEG Signals With LFPy 2.0</article-title>. <source>Frontiers in Neuroinformatics</source>. <year>2018</year> p. <fpage>92</fpage> Available: <ext-link ext-link-type="uri" xlink:href="https://www.frontiersin.org/article/10.3389/fninf.2018.00092">https://www.frontiersin.org/article/10.3389/fninf.2018.00092</ext-link>
<?supplied-pmid 30618697?><pub-id pub-id-type="pmid">30618697</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref017">
      <label>17</label>
      <mixed-citation publication-type="journal"><name><surname>Gratiy</surname><given-names>SL</given-names></name>, <name><surname>Billeh</surname><given-names>YN</given-names></name>, <name><surname>Dai</surname><given-names>K</given-names></name>, <name><surname>Mitelut</surname><given-names>C</given-names></name>, <name><surname>Feng</surname><given-names>D</given-names></name>, <name><surname>Gouwens</surname><given-names>NW</given-names></name>, <etal>et al</etal><article-title>BioNet: A Python interface to NEURON for modeling large-scale networks</article-title>. <source>PLoS One</source>. <year>2018</year>;<volume>13</volume>: <fpage>e0201630</fpage><pub-id pub-id-type="doi">10.1371/journal.pone.0201630</pub-id><?supplied-pmid 30071069?><pub-id pub-id-type="pmid">30071069</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref018">
      <label>18</label>
      <mixed-citation publication-type="journal"><name><surname>Gleeson</surname><given-names>P</given-names></name>, <name><surname>Cantarelli</surname><given-names>M</given-names></name>, <name><surname>Marin</surname><given-names>B</given-names></name>, <name><surname>Quintana</surname><given-names>A</given-names></name>, <name><surname>Earnshaw</surname><given-names>M</given-names></name>, <name><surname>Sadeh</surname><given-names>S</given-names></name>, <etal>et al</etal><article-title>Open Source Brain: A Collaborative Resource for Visualizing, Analyzing, Simulating, and Developing Standardized Models of Neurons and Circuits</article-title>. <source>Neuron</source>. <year>2019</year>;<volume>103</volume>: <fpage>395</fpage>–<lpage>411.e5</lpage>. <pub-id pub-id-type="doi">10.1016/j.neuron.2019.05.019</pub-id><?supplied-pmid 31201122?><pub-id pub-id-type="pmid">31201122</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref019">
      <label>19</label>
      <mixed-citation publication-type="journal"><name><surname>Neymotin</surname><given-names>SA</given-names></name>, <name><surname>Daniels</surname><given-names>DS</given-names></name>, <name><surname>Caldwell</surname><given-names>B</given-names></name>, <name><surname>McDougal</surname><given-names>RA</given-names></name>, <name><surname>Carnevale</surname><given-names>NT</given-names></name>, <name><surname>Jas</surname><given-names>M</given-names></name>, <etal>et al</etal><article-title>Human Neocortical Neurosolver (HNN), a new software tool for interpreting the cellular and network origin of human MEG/EEG data</article-title>. <name><surname>Ivry</surname><given-names>RB</given-names></name>, <name><surname>Stolk</surname><given-names>A</given-names></name>, <name><surname>Stolk</surname><given-names>A</given-names></name>, <name><surname>Dalal</surname><given-names>SS</given-names></name>, editors. <source>Elife</source>. <year>2020</year>;<volume>9</volume>: <fpage>e51214</fpage><pub-id pub-id-type="doi">10.7554/eLife.51214</pub-id><?supplied-pmid 31967544?><pub-id pub-id-type="pmid">31967544</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref020">
      <label>20</label>
      <mixed-citation publication-type="journal"><name><surname>Dura-Bernal</surname><given-names>S</given-names></name>, <name><surname>Suter</surname><given-names>BA</given-names></name>, <name><surname>Gleeson</surname><given-names>P</given-names></name>, <name><surname>Cantarelli</surname><given-names>M</given-names></name>, <name><surname>Quintana</surname><given-names>A</given-names></name>, <name><surname>Rodriguez</surname><given-names>F</given-names></name>, <etal>et al</etal><article-title>NetPyNE, a tool for data-driven multiscale modeling of brain circuits</article-title>. <source>Elife</source>. <year>2019</year>;<fpage>8</fpage><pub-id pub-id-type="doi">10.7554/eLife.44494</pub-id><?supplied-pmid 31025934?><pub-id pub-id-type="pmid">31025934</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref021">
      <label>21</label>
      <mixed-citation publication-type="journal"><name><surname>Gleeson</surname><given-names>P</given-names></name>, <name><surname>Crook</surname><given-names>S</given-names></name>, <name><surname>Cannon</surname><given-names>RC</given-names></name>, <name><surname>Hines</surname><given-names>ML</given-names></name>, <name><surname>Billings</surname><given-names>GO</given-names></name>, <name><surname>Farinella</surname><given-names>M</given-names></name>, <etal>et al</etal><article-title>NeuroML: A language for describing data driven models of neurons and networks with a high degree of biological detail</article-title>. <source>PLoS Comput Biol</source>. <year>2010</year>;<volume>6</volume>: <fpage>1</fpage>–<lpage>19</lpage>. <pub-id pub-id-type="doi">10.1371/journal.pcbi.1000815</pub-id><?supplied-pmid 20585541?><pub-id pub-id-type="pmid">20585541</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref022">
      <label>22</label>
      <mixed-citation publication-type="journal"><name><surname>Cannon</surname><given-names>RC</given-names></name>, <name><surname>Gleeson</surname><given-names>P</given-names></name>, <name><surname>Crook</surname><given-names>S</given-names></name>, <name><surname>Ganapathy</surname><given-names>G</given-names></name>, <name><surname>Marin</surname><given-names>B</given-names></name>, <name><surname>Piasini</surname><given-names>E</given-names></name>, <etal>et al</etal><article-title>LEMS: a language for expressing complex biological models in concise and hierarchical form and its use in underpinning NeuroML 2</article-title>. <source>Front Neuroinform</source>. <year>2014</year>;<volume>8</volume>: <fpage>79</fpage><pub-id pub-id-type="doi">10.3389/fninf.2014.00079</pub-id><?supplied-pmid 25309419?><pub-id pub-id-type="pmid">25309419</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref023">
      <label>23</label>
      <mixed-citation publication-type="journal"><name><surname>Davison</surname><given-names>AP</given-names></name>, <name><surname>Brüderle</surname><given-names>D</given-names></name>, <name><surname>Eppler</surname><given-names>J</given-names></name>, <name><surname>Kremkow</surname><given-names>J</given-names></name>, <name><surname>Muller</surname><given-names>E</given-names></name>, <name><surname>Pecevski</surname><given-names>D</given-names></name>, <etal>et al</etal><article-title>PyNN: A common interface for neuronal network simulators</article-title>. <source>Front Neuroinform</source>. <year>2009</year>;<fpage>2</fpage><pub-id pub-id-type="doi">10.3389/neuro.11.002.2009</pub-id><?supplied-pmid 19198662?><pub-id pub-id-type="pmid">19198662</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref024">
      <label>24</label>
      <mixed-citation publication-type="journal"><name><surname>Ray</surname><given-names>S</given-names></name>, <name><surname>Chintaluri</surname><given-names>C</given-names></name>, <name><surname>Bhalla</surname><given-names>US</given-names></name>, <name><surname>Wójcik</surname><given-names>DK</given-names></name>. <article-title>NSDF: Neuroscience Simulation Data Format</article-title>. <source>Neuroinformatics</source>. <year>2016</year>;<volume>14</volume>: <fpage>147</fpage>–<lpage>167</lpage>. <pub-id pub-id-type="doi">10.1007/s12021-015-9282-5</pub-id><?supplied-pmid 26585711?><pub-id pub-id-type="pmid">26585711</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref025">
      <label>25</label>
      <mixed-citation publication-type="journal"><name><surname>Dai</surname><given-names>K</given-names></name>, <name><surname>Hernando</surname><given-names>J</given-names></name>, <name><surname>Billeh</surname><given-names>YN</given-names></name>, <name><surname>Gratiy</surname><given-names>SL</given-names></name>, <name><surname>Planas</surname><given-names>J</given-names></name>, <name><surname>Davison</surname><given-names>AP</given-names></name>, <etal>et al</etal><article-title>The SONATA data format for efficient description of large-scale network models</article-title>. <source>PLOS Comput Biol</source>. <year>2020</year>;<volume>16</volume>: <fpage>e1007696</fpage> Available: <pub-id pub-id-type="doi">10.1371/journal.pcbi.1007696</pub-id>
<?supplied-pmid 32092054?><pub-id pub-id-type="pmid">32092054</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref026">
      <label>26</label>
      <mixed-citation publication-type="journal"><name><surname>Cain</surname><given-names>N</given-names></name>, <name><surname>Iyer</surname><given-names>R</given-names></name>, <name><surname>Koch</surname><given-names>C</given-names></name>, <name><surname>Mihalas</surname><given-names>S</given-names></name>. <article-title>The Computational Properties of a Simplified Cortical Column Model</article-title>. <source>PLoS Comput Biol</source>. <year>2016</year>;<fpage>12</fpage><pub-id pub-id-type="doi">10.1371/journal.pcbi.1005045</pub-id><?supplied-pmid 27617444?><pub-id pub-id-type="pmid">27617444</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref027">
      <label>27</label>
      <mixed-citation publication-type="journal"><name><surname>Rubel</surname><given-names>O</given-names></name>, <name><surname>Tritt</surname><given-names>A</given-names></name>, <name><surname>Dichter</surname><given-names>B</given-names></name>, <name><surname>Braun</surname><given-names>T</given-names></name>, <name><surname>Cain</surname><given-names>N</given-names></name>, <name><surname>Oliver</surname><given-names>R</given-names></name>, <etal>et al</etal><article-title>NWB : N 2. 0 : An Accessible Data Standard for Neurophysiology</article-title>. <source>bioRxiv</source>. <year>2019</year>; <fpage>523035</fpage><pub-id pub-id-type="doi">10.1101/523035</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref028">
      <label>28</label>
      <mixed-citation publication-type="other">Hernando JB, Biddiscombe J, Bohara B, Eilemann S, Schürmann F. Practical parallel rendering of detailed neuron simulations. EGPGV ‘13 Proceedings of the 13th Eurographics Symposium on Parallel Graphics and Visualization. Eurographics Association PP—Aire-la-Ville, Switzerland; 2013. pp. 49–56. <pub-id pub-id-type="doi">10.2312/EGPGV/EGPGV13/049-056</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref029">
      <label>29</label>
      <mixed-citation publication-type="journal"><name><surname>Brunel</surname><given-names>N</given-names></name>. <article-title>Dynamics of sparsely connected networks of excitatory and inhibitory spiking neurons</article-title>. <source>J Comput Neurosci</source>. <year>2000</year>;<volume>8</volume>: <fpage>183</fpage>–<lpage>208</lpage>. Available: <pub-id pub-id-type="doi">10.1023/a:1008925309027</pub-id><?supplied-pmid 10809012?><pub-id pub-id-type="pmid">10809012</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref030">
      <label>30</label>
      <mixed-citation publication-type="journal"><name><surname>Billeh</surname><given-names>YN</given-names></name>, <name><surname>Cai</surname><given-names>B</given-names></name>, <name><surname>Gratiy</surname><given-names>SL</given-names></name>, <name><surname>Dai</surname><given-names>K</given-names></name>, <name><surname>Iyer</surname><given-names>R</given-names></name>, <name><surname>Gouwens</surname><given-names>NW</given-names></name>, <etal>et al</etal><article-title>Systematic Integration of Structural and Functional Data into Multi-scale Models of Mouse Primary Visual Cortex</article-title>. <source>Neuron</source>. <year>2020</year>;<volume>106</volume>: <fpage>388</fpage>–<lpage>403.e18</lpage>. <pub-id pub-id-type="doi">10.1016/j.neuron.2020.01.040</pub-id><?supplied-pmid 32142648?><pub-id pub-id-type="pmid">32142648</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref031">
      <label>31</label>
      <mixed-citation publication-type="journal"><name><surname>Arkhipov</surname><given-names>A</given-names></name>, <name><surname>Gouwens</surname><given-names>NW</given-names></name>, <name><surname>Billeh</surname><given-names>YN</given-names></name>, <name><surname>Gratiy</surname><given-names>S</given-names></name>, <name><surname>Iyer</surname><given-names>R</given-names></name>, <name><surname>Wei</surname><given-names>Z</given-names></name>, <etal>et al</etal><article-title>Visual physiology of the layer 4 cortical circuit in silico</article-title>. <source>PLoS Comput Biol</source>. <year>2018</year>;<volume>14</volume>: <fpage>e1006535</fpage><pub-id pub-id-type="doi">10.1371/journal.pcbi.1006535</pub-id><?supplied-pmid 30419013?><pub-id pub-id-type="pmid">30419013</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref032">
      <label>32</label>
      <mixed-citation publication-type="journal"><name><surname>Durand</surname><given-names>S</given-names></name>, <name><surname>Iyer</surname><given-names>R</given-names></name>, <name><surname>Mizuseki</surname><given-names>K</given-names></name>, <name><surname>De Vries</surname><given-names>S</given-names></name>, <name><surname>Mihalas</surname><given-names>S</given-names></name>, <name><surname>Reid</surname><given-names>RC</given-names></name>. <article-title>A comparison of visual response properties in the lateral geniculate nucleus and primary visual cortex of awake and anesthetized mice</article-title>. <source>J Neurosci</source>. <year>2016</year>;<fpage>36</fpage><pub-id pub-id-type="doi">10.1523/JNEUROSCI.1741-16.2016</pub-id><?supplied-pmid 27903724?><pub-id pub-id-type="pmid">27903724</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref033">
      <label>33</label>
      <mixed-citation publication-type="journal"><name><surname>Lien</surname><given-names>AD</given-names></name>, <name><surname>Scanziani</surname><given-names>M</given-names></name>. <article-title>Cortical direction selectivity emerges at convergence of thalamic synapses</article-title>. <source>Nature</source>. <year>2018</year>;<volume>558</volume>: <fpage>80</fpage>–<lpage>86</lpage>. <pub-id pub-id-type="doi">10.1038/s41586-018-0148-5</pub-id><?supplied-pmid 29795349?><pub-id pub-id-type="pmid">29795349</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref034">
      <label>34</label>
      <mixed-citation publication-type="journal"><name><surname>Lien</surname><given-names>AD</given-names></name>, <name><surname>Scanziani</surname><given-names>M</given-names></name>. <article-title>Tuned thalamic excitation is amplified by visual cortical circuits</article-title>. <source>Nat Neurosci</source>. <year>2013</year>;<volume>16</volume>: <fpage>1315</fpage>–<lpage>23</lpage>. <pub-id pub-id-type="doi">10.1038/nn.3488</pub-id><?supplied-pmid 23933748?><pub-id pub-id-type="pmid">23933748</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref035">
      <label>35</label>
      <mixed-citation publication-type="journal"><name><surname>Morgenstern</surname><given-names>NA</given-names></name>, <name><surname>Bourg</surname><given-names>J</given-names></name>, <name><surname>Petreanu</surname><given-names>L</given-names></name>. <article-title>Multilaminar networks of cortical neurons integrate common inputs from sensory thalamus</article-title>. <source>Nat Neurosci</source>. <year>2016</year>;<volume>19</volume>: <fpage>1034</fpage>–<lpage>1040</lpage>. <pub-id pub-id-type="doi">10.1038/nn.4339</pub-id><?supplied-pmid 27376765?><pub-id pub-id-type="pmid">27376765</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref036">
      <label>36</label>
      <mixed-citation publication-type="journal"><name><surname>Kloc</surname><given-names>M</given-names></name>, <name><surname>Maffei</surname><given-names>A</given-names></name>. <article-title>Target-Specific Properties of Thalamocortical Synapses onto Layer 4 of Mouse Primary Visual Cortex</article-title>. <source>J Neurosci</source>. <year>2014</year>;<volume>34</volume>: <fpage>15455 LP</fpage>– <lpage>15465</lpage>. <pub-id pub-id-type="doi">10.1523/JNEUROSCI.2595-14.2014</pub-id>
<?supplied-pmid 25392512?><pub-id pub-id-type="pmid">25392512</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref037">
      <label>37</label>
      <mixed-citation publication-type="journal"><name><surname>Ji</surname><given-names>X</given-names></name>, <name><surname>Zingg</surname><given-names>B</given-names></name>, <name><surname>Mesik</surname><given-names>L</given-names></name>, <name><surname>Xiao</surname><given-names>Z</given-names></name>, <name><surname>Zhang</surname><given-names>LI</given-names></name>, <name><surname>Tao</surname><given-names>HW</given-names></name>. <article-title>Thalamocortical Innervation Pattern in Mouse Auditory and Visual Cortex: Laminar and Cell-Type Specificity</article-title>. <source>Cereb Cortex</source>. <year>2015</year>;<volume>26</volume>: <fpage>2612</fpage>–<lpage>2625</lpage>. <pub-id pub-id-type="doi">10.1093/cercor/bhv099</pub-id><?supplied-pmid 25979090?><pub-id pub-id-type="pmid">25979090</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref038">
      <label>38</label>
      <mixed-citation publication-type="journal"><name><surname>Schoonover</surname><given-names>CE</given-names></name>, <name><surname>Tapia</surname><given-names>J-C</given-names></name>, <name><surname>Schilling</surname><given-names>VC</given-names></name>, <name><surname>Wimmer</surname><given-names>V</given-names></name>, <name><surname>Blazeski</surname><given-names>R</given-names></name>, <name><surname>Zhang</surname><given-names>W</given-names></name>, <etal>et al</etal><article-title>Comparative Strength and Dendritic Organization of Thalamocortical and Corticocortical Synapses onto Excitatory Layer 4</article-title><source>Neurons. J Neurosci</source>. <year>2014</year>;<volume>34</volume>: <fpage>6746 LP</fpage>– <lpage>6758</lpage>. <pub-id pub-id-type="doi">10.1523/JNEUROSCI.0305-14.2014</pub-id>
<?supplied-pmid 24828630?><pub-id pub-id-type="pmid">24828630</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref039">
      <label>39</label>
      <mixed-citation publication-type="journal"><name><surname>Bopp</surname><given-names>R</given-names></name>, <name><surname>Holler-Rickauer</surname><given-names>S</given-names></name>, <name><surname>Martin</surname><given-names>KAC</given-names></name>, <name><surname>Schuhknecht</surname><given-names>GFP</given-names></name>. <article-title>An Ultrastructural Study of the Thalamic Input to Layer 4 of Primary Motor and Primary Somatosensory Cortex in the Mouse</article-title>. <source>J Neurosci</source>. <year>2017</year>;<volume>37</volume>: <fpage>2435 LP</fpage>– <lpage>2448</lpage>. <pub-id pub-id-type="doi">10.1523/JNEUROSCI.2557-16.2017</pub-id>
<?supplied-pmid 28137974?><pub-id pub-id-type="pmid">28137974</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref040">
      <label>40</label>
      <mixed-citation publication-type="journal"><name><surname>Siegle</surname><given-names>JH</given-names></name>, <name><surname>Jia</surname><given-names>X</given-names></name>, <name><surname>Durand</surname><given-names>S</given-names></name>, <name><surname>Gale</surname><given-names>S</given-names></name>, <name><surname>Bennett</surname><given-names>C</given-names></name>, <name><surname>Graddis</surname><given-names>N</given-names></name>, <etal>et al</etal><article-title>A survey of spiking activity reveals a functional hierarchy of mouse corticothalamic visual areas</article-title>. <source>Nature</source>. <year>2020</year>; In press. <pub-id pub-id-type="doi">10.1101/805010</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref041">
      <label>41</label>
      <mixed-citation publication-type="journal"><name><surname>Gouwens</surname><given-names>NW</given-names></name>, <name><surname>Berg</surname><given-names>J</given-names></name>, <name><surname>Feng</surname><given-names>D</given-names></name>, <name><surname>Sorensen</surname><given-names>SA</given-names></name>, <name><surname>Zeng</surname><given-names>H</given-names></name>, <name><surname>Hawrylycz</surname><given-names>MJ</given-names></name>, <etal>et al</etal><article-title>Systematic generation of biophysically detailed models for diverse cortical neuron types</article-title>. <source>Nat Commun</source>. <year>2018</year>;<volume>9</volume>: <fpage>710</fpage><pub-id pub-id-type="doi">10.1038/s41467-017-02718-3</pub-id><?supplied-pmid 29459718?><pub-id pub-id-type="pmid">29459718</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref042">
      <label>42</label>
      <mixed-citation publication-type="journal"><name><surname>Gouwens</surname><given-names>NW</given-names></name>, <name><surname>Sorensen</surname><given-names>SA</given-names></name>, <name><surname>Berg</surname><given-names>J</given-names></name>, <name><surname>Lee</surname><given-names>C</given-names></name>, <name><surname>Jarsky</surname><given-names>T</given-names></name>, <name><surname>Ting</surname><given-names>J</given-names></name>, <etal>et al</etal><article-title>Classification of electrophysiological and morphological neuron types in the mouse visual cortex</article-title>. <source>Nat Neurosci</source>. <year>2019</year>;<volume>22</volume>: <fpage>1182</fpage>–<lpage>1195</lpage>. <pub-id pub-id-type="doi">10.1038/s41593-019-0417-0</pub-id><?supplied-pmid 31209381?><pub-id pub-id-type="pmid">31209381</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref043">
      <label>43</label>
      <mixed-citation publication-type="journal"><name><surname>Teeter</surname><given-names>C</given-names></name>, <name><surname>Iyer</surname><given-names>R</given-names></name>, <name><surname>Menon</surname><given-names>V</given-names></name>, <name><surname>Gouwens</surname><given-names>N</given-names></name>, <name><surname>Feng</surname><given-names>D</given-names></name>, <name><surname>Berg</surname><given-names>J</given-names></name>, <etal>et al</etal><article-title>Generalized leaky integrate-and-fire models classify multiple neuron types</article-title>. <source>Nat Commun</source>. <year>2018</year><pub-id pub-id-type="doi">10.1038/s41467-017-02717-4</pub-id><?supplied-pmid 29459723?><pub-id pub-id-type="pmid">29459723</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref044">
      <label>44</label>
      <mixed-citation publication-type="journal"><name><surname>Einevoll</surname><given-names>GT</given-names></name>, <name><surname>Kayser</surname><given-names>C</given-names></name>, <name><surname>Logothetis</surname><given-names>NK</given-names></name>, <name><surname>Panzeri</surname><given-names>S</given-names></name>. <article-title>Modelling and analysis of local field potentials for studying the function of cortical circuits</article-title>. <source>Nat Rev Neurosci</source>. <year>2013</year>;<volume>14</volume>: <fpage>770</fpage>–<lpage>785</lpage>. Available: <pub-id pub-id-type="doi">10.1038/nrn3599</pub-id><?supplied-pmid 24135696?><pub-id pub-id-type="pmid">24135696</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref045">
      <label>45</label>
      <mixed-citation publication-type="journal"><name><surname>Lindén</surname><given-names>H</given-names></name>, <name><surname>Tetzlaff</surname><given-names>T</given-names></name>, <name><surname>Potjans</surname><given-names>TC</given-names></name>, <name><surname>Pettersen</surname><given-names>KH</given-names></name>, <name><surname>Grün</surname><given-names>S</given-names></name>, <name><surname>Diesmann</surname><given-names>M</given-names></name>, <etal>et al</etal><article-title>Modeling the Spatial Reach of the LFP</article-title>. <source>Neuron</source>. <year>2011</year>;<volume>72</volume>: <fpage>859</fpage>–<lpage>872</lpage>. <pub-id pub-id-type="doi">10.1016/j.neuron.2011.11.006</pub-id><?supplied-pmid 22153380?><pub-id pub-id-type="pmid">22153380</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref046">
      <label>46</label>
      <mixed-citation publication-type="journal"><name><surname>Gold</surname><given-names>C</given-names></name>, <name><surname>Henze</surname><given-names>DA</given-names></name>, <name><surname>Koch</surname><given-names>C</given-names></name>, <name><surname>Buzsáki</surname><given-names>G</given-names></name>. <article-title>On the Origin of the Extracellular Action Potential Waveform: A Modeling Study</article-title>. <source>J Neurophysiol</source>. <year>2006</year>;<volume>95</volume>: <fpage>3113</fpage>–<lpage>3128</lpage>. <pub-id pub-id-type="doi">10.1152/jn.00979.2005</pub-id><?supplied-pmid 16467426?><pub-id pub-id-type="pmid">16467426</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref047">
      <label>47</label>
      <mixed-citation publication-type="journal"><name><surname>Senzai</surname><given-names>Y</given-names></name>, <name><surname>Fernandez-Ruiz</surname><given-names>A</given-names></name>, <name><surname>Buzsáki</surname><given-names>G</given-names></name>. <article-title>Layer-Specific Physiological Features and Interlaminar Interactions in the Primary Visual Cortex of the Mouse</article-title>. <source>Neuron</source>. <year>2019</year>;<volume>101</volume>: <fpage>500</fpage>–<lpage>513.e5</lpage>. <pub-id pub-id-type="doi">10.1016/j.neuron.2018.12.009</pub-id><?supplied-pmid 30635232?><pub-id pub-id-type="pmid">30635232</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref048">
      <label>48</label>
      <mixed-citation publication-type="journal"><name><surname>Buzsáki</surname><given-names>G</given-names></name>, <name><surname>Anastassiou</surname><given-names>CA</given-names></name>, <name><surname>Koch</surname><given-names>C</given-names></name>. <article-title>The origin of extracellular fields and currents—EEG, ECoG, LFP and spikes</article-title>. <source>Nat Rev Neurosci</source>. <year>2012</year>;<volume>13</volume>: <fpage>407</fpage>–<lpage>420</lpage>. <pub-id pub-id-type="doi">10.1038/nrn3241</pub-id><?supplied-pmid 22595786?><pub-id pub-id-type="pmid">22595786</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref049">
      <label>49</label>
      <mixed-citation publication-type="journal"><name><surname>Mitzdorf</surname><given-names>U</given-names></name>. <article-title>Properties of the Evoked Potential Generators: Current Source-Density Analysis of Visually Evoked Potentials in the Cat Cortex</article-title>. <source>Int J Neurosci</source>. <year>1987</year>;<volume>33</volume>: <fpage>33</fpage>–<lpage>59</lpage>. <pub-id pub-id-type="doi">10.3109/00207458708985928</pub-id><?supplied-pmid 3610492?><pub-id pub-id-type="pmid">3610492</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref050">
      <label>50</label>
      <mixed-citation publication-type="journal"><name><surname>Plonsey</surname><given-names>R</given-names></name>. <article-title>The active fiber in a volume conductor</article-title>. <source>IEEE Trans Biomed Eng</source>. <year>1974</year>;<volume>BME-21</volume>: <fpage>371</fpage>–<lpage>381</lpage>. <pub-id pub-id-type="doi">10.1109/TBME.1974.324406</pub-id><?supplied-pmid 4461667?><pub-id pub-id-type="pmid">4461667</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref051">
      <label>51</label>
      <mixed-citation publication-type="journal"><name><surname>Pettersen</surname><given-names>KH</given-names></name>, <name><surname>Devor</surname><given-names>A</given-names></name>, <name><surname>Ulbert</surname><given-names>I</given-names></name>, <name><surname>Dale</surname><given-names>AM</given-names></name>, <name><surname>Einevoll</surname><given-names>GT</given-names></name>. <article-title>Current-source density estimation based on inversion of electrostatic forward solution: Effects of finite extent of neuronal activity and conductivity discontinuities</article-title>. <source>J Neurosci Methods</source>. <year>2006</year>;<volume>154</volume>: <fpage>116</fpage>–<lpage>133</lpage>. <pub-id pub-id-type="doi">10.1016/j.jneumeth.2005.12.005</pub-id><?supplied-pmid 16436298?><pub-id pub-id-type="pmid">16436298</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref052">
      <label>52</label>
      <mixed-citation publication-type="journal"><name><surname>Potworowski</surname><given-names>J</given-names></name>, <name><surname>Jakuczun</surname><given-names>W</given-names></name>, <name><surname>Łȩski</surname><given-names>S</given-names></name>, <name><surname>Wójcik</surname><given-names>D</given-names></name>. <article-title>Kernel Current Source Density Method</article-title>. <source>Neural Comput</source>. <year>2011</year>;<volume>24</volume>: <fpage>541</fpage>–<lpage>575</lpage>. <pub-id pub-id-type="doi">10.1162/NECO_a_00236</pub-id><?supplied-pmid 22091662?><pub-id pub-id-type="pmid">22091662</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref053">
      <label>53</label>
      <mixed-citation publication-type="journal"><name><surname>Pettersen</surname><given-names>KH</given-names></name>, <name><surname>Hagen</surname><given-names>E</given-names></name>, <name><surname>Einevoll</surname><given-names>GT</given-names></name>. <article-title>Estimation of population firing rates and current source densities from laminar electrode recordings</article-title>. <source>J Comput Neurosci</source>. <year>2008</year>;<volume>24</volume>: <fpage>291</fpage>–<lpage>313</lpage>. <pub-id pub-id-type="doi">10.1007/s10827-007-0056-4</pub-id><?supplied-pmid 17926125?><pub-id pub-id-type="pmid">17926125</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref054">
      <label>54</label>
      <mixed-citation publication-type="journal"><name><surname>Cai</surname><given-names>B</given-names></name>, <name><surname>Billeh</surname><given-names>YN</given-names></name>, <name><surname>Chettih</surname><given-names>SN</given-names></name>, <name><surname>Harvey</surname><given-names>CD</given-names></name>, <name><surname>Koch</surname><given-names>C</given-names></name>, <name><surname>Arkhipov</surname><given-names>A</given-names></name>, <etal>et al</etal><article-title>Modeling robust and efficient coding in the mouse primary visual cortex using computational perturbations</article-title>. <source>Society for Neuroscience Meeting 2019</source>. Chicago; <year>2019</year>. p.</mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref055">
      <label>55</label>
      <mixed-citation publication-type="journal"><name><surname>Chettih</surname><given-names>SN</given-names></name>, <name><surname>Harvey</surname><given-names>CD</given-names></name>. <article-title>Single-neuron perturbations reveal feature-specific competition in V1</article-title>. <source>Nature</source>. <year>2019</year>;<volume>567</volume>: <fpage>334</fpage>–<lpage>340</lpage>. <pub-id pub-id-type="doi">10.1038/s41586-019-0997-6</pub-id><?supplied-pmid 30842660?><pub-id pub-id-type="pmid">30842660</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref056">
      <label>56</label>
      <mixed-citation publication-type="journal"><name><surname>Li</surname><given-names>N</given-names></name>, <name><surname>Chen</surname><given-names>S</given-names></name>, <name><surname>Guo Z</surname><given-names>V</given-names></name>, <name><surname>Chen</surname><given-names>H</given-names></name>, <name><surname>Huo</surname><given-names>Y</given-names></name>, <name><surname>Inagaki</surname><given-names>HK</given-names></name>, <etal>et al</etal><article-title>Spatiotemporal limits of optogenetic manipulations in cortical circuits</article-title>. <source>bioRxiv</source>. <year>2019</year>; <volume>642215</volume><pub-id pub-id-type="doi">10.1101/642215</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref057">
      <label>57</label>
      <mixed-citation publication-type="journal"><name><surname>Li</surname><given-names>N</given-names></name>, <name><surname>Chen</surname><given-names>T-W</given-names></name>, <name><surname>Guo</surname><given-names>Z V</given-names></name>, <name><surname>Gerfen</surname><given-names>CR</given-names></name>, <name><surname>Svoboda</surname><given-names>K</given-names></name>. <article-title>A motor cortex circuit for motor planning and movement</article-title>. <source>Nature</source>. <year>2015</year>;<volume>519</volume>: <fpage>51</fpage>–<lpage>56</lpage>. <pub-id pub-id-type="doi">10.1038/nature14178</pub-id><?supplied-pmid 25731172?><pub-id pub-id-type="pmid">25731172</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref058">
      <label>58</label>
      <mixed-citation publication-type="journal"><name><surname>Madisen</surname><given-names>L</given-names></name>, <name><surname>Mao</surname><given-names>T</given-names></name>, <name><surname>Koch</surname><given-names>H</given-names></name>, <name><surname>Zhuo</surname><given-names>J</given-names></name>, <name><surname>Berenyi</surname><given-names>A</given-names></name>, <name><surname>Fujisawa</surname><given-names>S</given-names></name>, <etal>et al</etal><article-title>A toolbox of Cre-dependent optogenetic transgenic mice for light-induced activation and silencing</article-title>. <source>Nat Neurosci</source>. <year>2012</year>;<volume>15</volume>: <fpage>793</fpage>–<lpage>802</lpage>. <pub-id pub-id-type="doi">10.1038/nn.3078</pub-id><?supplied-pmid 22446880?><pub-id pub-id-type="pmid">22446880</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref059">
      <label>59</label>
      <mixed-citation publication-type="journal"><name><surname>Carrillo-Reid</surname><given-names>L</given-names></name>, <name><surname>Yang</surname><given-names>W</given-names></name>, <name><surname>Kang Miller</surname><given-names>J</given-names></name>, <name><surname>Peterka</surname><given-names>DS</given-names></name>, <name><surname>Yuste</surname><given-names>R</given-names></name>. <article-title>Imaging and Optically Manipulating Neuronal Ensembles</article-title>. <source>Annu Rev Biophys</source>. <year>2017</year>;<volume>46</volume>: <fpage>271</fpage>–<lpage>293</lpage>. <pub-id pub-id-type="doi">10.1146/annurev-biophys-070816-033647</pub-id><?supplied-pmid 28301770?><pub-id pub-id-type="pmid">28301770</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref060">
      <label>60</label>
      <mixed-citation publication-type="journal"><name><surname>Deisseroth</surname><given-names>K</given-names></name>. <article-title>Optogenetics: 10 years of microbial opsins in neuroscience</article-title>. <source>Nat Neurosci</source>. <year>2015</year>;<volume>18</volume>: <fpage>1213</fpage>–<lpage>1225</lpage>. <pub-id pub-id-type="doi">10.1038/nn.4091</pub-id><?supplied-pmid 26308982?><pub-id pub-id-type="pmid">26308982</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref061">
      <label>61</label>
      <mixed-citation publication-type="journal"><name><surname>Kim</surname><given-names>CK</given-names></name>, <name><surname>Adhikari</surname><given-names>A</given-names></name>, <name><surname>Deisseroth</surname><given-names>K</given-names></name>. <article-title>Integration of optogenetics with complementary methodologies in systems neuroscience</article-title>. <source>Nat Rev Neurosci</source>. <year>2017</year>;<volume>18</volume>: <fpage>222</fpage>–<lpage>235</lpage>. <pub-id pub-id-type="doi">10.1038/nrn.2017.15</pub-id><?supplied-pmid 28303019?><pub-id pub-id-type="pmid">28303019</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1008386.ref062">
      <label>62</label>
      <mixed-citation publication-type="journal"><name><surname>Boyden</surname><given-names>ES</given-names></name>. <article-title>Optogenetics and the future of neuroscience</article-title>. <source>Nat Neurosci</source>. <year>2015</year>;<volume>18</volume>: <fpage>1200</fpage>–<lpage>1201</lpage>. <pub-id pub-id-type="doi">10.1038/nn.4094</pub-id><?supplied-pmid 26308980?><pub-id pub-id-type="pmid">26308980</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

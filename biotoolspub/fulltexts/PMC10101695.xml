<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinform Adv</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinform Adv</journal-id>
    <journal-id journal-id-type="publisher-id">bioadv</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics Advances</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2635-0041</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10101695</article-id>
    <article-id pub-id-type="doi">10.1093/bioadv/vbad035</article-id>
    <article-id pub-id-type="publisher-id">vbad035</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Application Note</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Genetics and Population Analysis</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title><monospace>easyPheno</monospace>: An easy-to-use and easy-to-extend <monospace>Python</monospace> framework for phenotype prediction using Bayesian optimization</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-5702-376X</contrib-id>
        <name>
          <surname>Haselbeck</surname>
          <given-names>Florian</given-names>
        </name>
        <role vocab="credit" vocab-identifier="http://credit.niso.org" vocab-term="Conceptualization" vocab-term-identifier="http://credit.niso.org/contributor-roles/conceptualization" degree-contribution="equal">Conceptualization</role>
        <role vocab="credit" vocab-identifier="http://credit.niso.org" vocab-term="Data curation" vocab-term-identifier="http://credit.niso.org/contributor-roles/data-curation" degree-contribution="equal">Data curation</role>
        <role vocab="credit" vocab-identifier="http://credit.niso.org" vocab-term="Methodology" vocab-term-identifier="http://credit.niso.org/contributor-roles/methodology" degree-contribution="equal">Methodology</role>
        <role vocab="credit" vocab-identifier="http://credit.niso.org" vocab-term="Resources" vocab-term-identifier="http://credit.niso.org/contributor-roles/resources" degree-contribution="equal">Resources</role>
        <role vocab="credit" vocab-identifier="http://credit.niso.org" vocab-term="Software" vocab-term-identifier="http://credit.niso.org/contributor-roles/software" degree-contribution="equal">Software</role>
        <role vocab="credit" vocab-identifier="http://credit.niso.org" vocab-term="Writing – original draft" vocab-term-identifier="http://credit.niso.org/contributor-roles/writing-original-draft" degree-contribution="equal">Writing – original draft</role>
        <aff><institution>Technical University of Munich, Campus Straubing for Biotechnology and Sustainability, Bioinformatics</institution>, Straubing 94315, <country country="DE">Germany</country></aff>
        <aff><institution>Weihenstephan-Triesdorf University of Applied Sciences, Bioinformatics</institution>, Straubing 94315, <country country="DE">Germany</country></aff>
        <xref rid="vbad035-FM1" ref-type="author-notes"/>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-2773-2426</contrib-id>
        <name>
          <surname>John</surname>
          <given-names>Maura</given-names>
        </name>
        <role vocab="credit" vocab-identifier="http://credit.niso.org" vocab-term="Conceptualization" vocab-term-identifier="http://credit.niso.org/contributor-roles/conceptualization" degree-contribution="equal">Conceptualization</role>
        <role vocab="credit" vocab-identifier="http://credit.niso.org" vocab-term="Data curation" vocab-term-identifier="http://credit.niso.org/contributor-roles/data-curation" degree-contribution="equal">Data curation</role>
        <role vocab="credit" vocab-identifier="http://credit.niso.org" vocab-term="Methodology" vocab-term-identifier="http://credit.niso.org/contributor-roles/methodology" degree-contribution="equal">Methodology</role>
        <role vocab="credit" vocab-identifier="http://credit.niso.org" vocab-term="Resources" vocab-term-identifier="http://credit.niso.org/contributor-roles/resources" degree-contribution="equal">Resources</role>
        <role vocab="credit" vocab-identifier="http://credit.niso.org" vocab-term="Software" vocab-term-identifier="http://credit.niso.org/contributor-roles/software" degree-contribution="equal">Software</role>
        <role vocab="credit" vocab-identifier="http://credit.niso.org" vocab-term="Writing – original draft" vocab-term-identifier="http://credit.niso.org/contributor-roles/writing-original-draft" degree-contribution="equal">Writing – original draft</role>
        <aff><institution>Technical University of Munich, Campus Straubing for Biotechnology and Sustainability, Bioinformatics</institution>, Straubing 94315, <country country="DE">Germany</country></aff>
        <aff><institution>Weihenstephan-Triesdorf University of Applied Sciences, Bioinformatics</institution>, Straubing 94315, <country country="DE">Germany</country></aff>
        <xref rid="vbad035-FM1" ref-type="author-notes"/>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0003-2085-4591</contrib-id>
        <name>
          <surname>Grimm</surname>
          <given-names>Dominik G</given-names>
        </name>
        <role vocab="credit" vocab-identifier="http://credit.niso.org" vocab-term="Conceptualization" vocab-term-identifier="http://credit.niso.org/contributor-roles/conceptualization" degree-contribution="equal">Conceptualization</role>
        <role vocab="credit" vocab-identifier="http://credit.niso.org" vocab-term="Funding acquisition" vocab-term-identifier="http://credit.niso.org/contributor-roles/funding-acquisition" degree-contribution="lead">Funding acquisition</role>
        <role vocab="credit" vocab-identifier="http://credit.niso.org" vocab-term="Methodology" vocab-term-identifier="http://credit.niso.org/contributor-roles/methodology" degree-contribution="equal">Methodology</role>
        <role vocab="credit" vocab-identifier="http://credit.niso.org" vocab-term="Project administration" vocab-term-identifier="http://credit.niso.org/contributor-roles/project-administration" degree-contribution="lead">Project administration</role>
        <role vocab="credit" vocab-identifier="http://credit.niso.org" vocab-term="Software" vocab-term-identifier="http://credit.niso.org/contributor-roles/software" degree-contribution="supporting">Software</role>
        <role vocab="credit" vocab-identifier="http://credit.niso.org" vocab-term="Supervision" vocab-term-identifier="http://credit.niso.org/contributor-roles/supervision" degree-contribution="lead">Supervision</role>
        <role vocab="credit" vocab-identifier="http://credit.niso.org" vocab-term="Writing – original draft" vocab-term-identifier="http://credit.niso.org/contributor-roles/writing-original-draft" degree-contribution="equal">Writing – original draft</role>
        <role vocab="credit" vocab-identifier="http://credit.niso.org" vocab-term="Writing – review &amp; editing" vocab-term-identifier="http://credit.niso.org/contributor-roles/writing-review-editing" degree-contribution="equal">Writing – review &amp; editing</role>
        <aff><institution>Technical University of Munich, Campus Straubing for Biotechnology and Sustainability, Bioinformatics</institution>, Straubing 94315, <country country="DE">Germany</country></aff>
        <aff><institution>Weihenstephan-Triesdorf University of Applied Sciences, Bioinformatics</institution>, Straubing 94315, <country country="DE">Germany</country></aff>
        <aff><institution>Technical University of Munich, Department of Informatics</institution>, Garching 85748, <country country="DE">Germany</country></aff>
        <xref rid="vbad035-cor1" ref-type="corresp"/>
        <!--dominik.grimm@hswt.de-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Mulder</surname>
          <given-names>Nicola</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <fn id="vbad035-FM1">
        <p>The authors wish it to be known that, in their opinion, Florian Haselbeck and Maura John should be regarded as Joint First Authors.</p>
      </fn>
      <corresp id="vbad035-cor1">To whom correspondence should be addressed. <email>dominik.grimm@hswt.de</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2023-03-22">
      <day>22</day>
      <month>3</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>22</day>
      <month>3</month>
      <year>2023</year>
    </pub-date>
    <volume>3</volume>
    <issue>1</issue>
    <elocation-id>vbad035</elocation-id>
    <history>
      <date date-type="received">
        <day>07</day>
        <month>2</month>
        <year>2023</year>
      </date>
      <date date-type="rev-recd">
        <day>08</day>
        <month>3</month>
        <year>2023</year>
      </date>
      <date date-type="editorial-decision">
        <day>15</day>
        <month>3</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>21</day>
        <month>3</month>
        <year>2023</year>
      </date>
      <date date-type="corrected-typeset">
        <day>13</day>
        <month>4</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2023. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2023</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="vbad035.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Summary</title>
        <p>Predicting complex traits from genotypic information is a major challenge in various biological domains. With <monospace>easyPheno</monospace>, we present a comprehensive <monospace>Python</monospace> framework enabling the rigorous training, comparison and analysis of phenotype predictions for a variety of different models, ranging from common genomic selection approaches over classical machine learning and modern deep learning-based techniques. Our framework is easy-to-use, also for non-programming-experts, and includes an automatic hyperparameter search using state-of-the-art Bayesian optimization. Moreover, <monospace>easyPheno</monospace> provides various benefits for bioinformaticians developing new prediction models. <monospace>easyPheno</monospace> enables to quickly integrate novel models and functionalities in a reliable framework and to benchmark against various integrated prediction models in a comparable setup. In addition, the framework allows the assessment of newly developed prediction models under pre-defined settings using simulated data. We provide a detailed documentation with various hands-on tutorials and videos explaining the usage of <monospace>easyPheno</monospace> to novice users.</p>
      </sec>
      <sec id="s2">
        <title>Availability and implementation</title>
        <p><monospace>easyPheno</monospace> is publicly available at <ext-link xlink:href="https://github.com/grimmlab/easyPheno" ext-link-type="uri">https://github.com/grimmlab/easyPheno</ext-link> and can be easily installed as <monospace>Python</monospace> package via <ext-link xlink:href="https://pypi.org/project/easypheno/" ext-link-type="uri">https://pypi.org/project/easypheno/</ext-link> or using <monospace>Docker</monospace>. A comprehensive documentation including various tutorials complemented with videos can be found at <ext-link xlink:href="https://easypheno.readthedocs.io/" ext-link-type="uri">https://easypheno.readthedocs.io/</ext-link>.</p>
      </sec>
      <sec id="s4">
        <title>Supplementary information</title>
        <p><xref rid="sup1" ref-type="supplementary-material">Supplementary data</xref> are available at <italic toggle="yes">Bioinformatics Advances</italic> online.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Federal Ministry of Education and Research</institution>
            <institution-id institution-id-type="DOI">10.13039/501100002347</institution-id>
          </institution-wrap>
        </funding-source>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="4"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Predicting complex traits from genotypic information remains a major challenge in modern biology, whether to reduce costs and accelerate the breeding process in plants and animals or to assess the risk of diseases in humans. So far, existing studies on phenotype prediction in plants (<xref rid="vbad035-B6" ref-type="bibr">John <italic toggle="yes">et al.</italic>, 2022</xref>), animals (<xref rid="vbad035-B1" ref-type="bibr">Abdollahi-Arpanahi <italic toggle="yes">et al.</italic>, 2020</xref>) and humans (<xref rid="vbad035-B3" ref-type="bibr">Bellot <italic toggle="yes">et al.</italic>, 2018</xref>) fail to determine an overall pre-dominant prediction method. Their results show that the prediction performance is highly dependent on the species-trait combination, thus requiring the re-evaluation of various prediction models. Existing phenotype prediction packages, such as <monospace>BWGS</monospace> (<xref rid="vbad035-B4" ref-type="bibr">Charmet <italic toggle="yes">et al.</italic>, 2020</xref>), <monospace>learnMET</monospace> (<xref rid="vbad035-B9" ref-type="bibr">Westhues <italic toggle="yes">et al.</italic>, 2022</xref>) and <monospace>G2PDeep</monospace> (<xref rid="vbad035-B10" ref-type="bibr">Zeng <italic toggle="yes">et al.</italic>, 2021</xref>), are focused on certain pre-processing and prediction methods without straightforward enhancement options or apply a basic hyperparameter search. Despite <monospace>Python</monospace> being one of the most popular programming languages, there is currently no comprehensive phenotype prediction package available. We present <monospace>easyPheno</monospace>, an easy-to-use and open-source <monospace>Python</monospace> framework that enables the rigorous training, comparison and analysis of a variety of phenotype prediction models. More importantly, besides an extensive data pre-processing module, <monospace>easyPheno</monospace> leverages Bayesian optimization for an advanced and automatic hyperparameter search. We further designed <monospace>easyPheno</monospace> to be user-friendly, also for non-programming-experts, and simplified the integration and benchmarking of new prediction models. As a further plus, <monospace>easyPheno</monospace> integrates the simulation of phenoypic data, i.a., to assess newly developed approaches under pre-defined settings. Beyond that, we provide a comprehensive online documentation, including various hands-on tutorials and videos.</p>
  </sec>
  <sec>
    <title>2 Use cases</title>
    <p><monospace>easyPheno</monospace> offers a variety of use cases for end users that might not have programming expertise, e.g. plant or animal breeders, as well as bioinformaticians that aim to develop new prediction models and functionalities. In the following, we outline the main benefits for both user groups.</p>
    <sec>
      <title>2.1 State-of-the-art and easy-to-use phenotype prediction</title>
      <p><monospace>easyPheno</monospace> provides a command line interface only requiring a single-line command to run state-of-the-art prediction approaches on discrete and continuous traits. In <xref rid="vbad035-F1" ref-type="fig">Figure 1</xref>, we summarize <monospace>easyPheno’s</monospace> main packages and visualize the phenotype prediction pipeline. To start the main workflow, users only need to supply a fully imputed genotype matrix and the corresponding phenotype values for one or more traits of interest. <monospace>easyPheno</monospace> completely automates the data pre-processing as well as the hyperparameter tuning using state-of-the-art Bayesian optimization techniques, see Section 3 for further details. <monospace>easyPheno</monospace> ensures reproducibility of the whole pipeline, e.g. regarding the data split, to allow comparability of results. With its easy-to-use command line interface, <monospace>easyPheno</monospace> allows to quickly run comparative studies employing various prediction models ranging from classical genomic selection approaches over machine learning (ML) methods to modern deep learning (DL) architectures. Users can start the pipeline both for multiple prediction models and phenotypes simultaneously. Hence, <monospace>easyPheno</monospace> is a powerful tool also for users without ML and programming expertise, enabling them to conduct state-of-the-art phenotype prediction. An exemplary workflow of <monospace>easyPheno</monospace> with real and synthetic data is shown in <xref rid="sup1" ref-type="supplementary-material">Supplementary Material</xref>.</p>
      <fig position="float" id="vbad035-F1">
        <label>Fig. 1.</label>
        <caption>
          <p>Overview of <monospace>easyPheno’</monospace>s main modules. In the <monospace>preprocess</monospace> module, various methods are offered to unify, filter and split data to enable a reproducible data pre-processing. Several prediction models from which the user can choose are already integrated. In addition, the design of the <monospace>model</monospace> subpackage allows a straightforward extension. Further, parameter-free fitting and state-of-the-art Bayesian optimization for automatic hyperparameter search are included (<monospace>optimization</monospace>). To analyze the results, various <monospace>evaluation</monospace> metrics for continuous and discrete phenotypes are included, as well as methods for an easy analysis of the prediction results (<monospace>postprocess</monospace>). For end users, we offer an easy-to-use command line interface, allowing to run state-of-the-art phenotype prediction with a single-line command. <monospace>easyPheno</monospace> is further available as a <monospace>Python</monospace> package. Besides a quick integration of new prediction models in a reliable framework, this allows bioinformaticians to benchmark newly developed approaches in a comparable setup. In addition, the <monospace>simulate</monospace> module allows to generate synthetic phenotype data, which can be used for a model assessment under pre-defined conditions</p>
        </caption>
        <graphic xlink:href="vbad035f1" position="float"/>
      </fig>
    </sec>
    <sec>
      <title>2.2 Quick integration and benchmarking of new predictors</title>
      <p>Besides a command line interface enabling a straightforward application of state-of-the-art phenotype prediction approaches, <monospace>easyPheno</monospace> is offered as a <monospace>Python</monospace> package, i.a., to simplify the implementation of new functionalities for developers. Our framework is designed to enable a quick integration of new prediction models, especially for methods based on the most widely applied ML frameworks <monospace>scikit-learn</monospace>, <monospace>PyTorch</monospace> and <monospace>TensorFlow</monospace>. This easy-to-extend design allows bioinformaticians to focus on the model design while relying on thoroughly tested data pre-processing and state-of-the-art hyperparameter optimization. This is particularly interesting for DL-based methods, which are currently not widely used in the domain of phenotype prediction and might require new approaches to show their full potential. Hence, <monospace>easyPheno</monospace> supports a faster development of new prediction models, lowers the risk of errors and decreases testing efforts. Beyond that, <monospace>easyPheno</monospace> enables users to quickly benchmark newly developed prediction models against multiple comparison partners in a comparable and fair setup. Finally, also end users can benefit from this easy-to-extend design, making further prediction approaches available.</p>
    </sec>
    <sec>
      <title>2.3 Systematic model assessment using synthetic data</title>
      <p>To enable the evaluation of prediction models under pre-defined genotype-phenotype relationships, <monospace>easyPheno</monospace> allows the creation of synthetic phenotypes based on real genotypic data. Due to the pre-defined settings, this synthetic data is especially beneficial to evaluate the strengths and limitations of newly implemented prediction models. <xref rid="sup1" ref-type="supplementary-material">Supplementary Material</xref> contains an example on how to create synthetic data and analyze the results.</p>
    </sec>
    <sec>
      <title>2.4 Further use cases</title>
      <p>Furthermore, <monospace>easyPheno</monospace> provides functions to analyze prediction results, such as generating figures that provide a comparison of multiple predictors and phenotypes in a heat map. The framework supports the application of previously optimized models on new data, for instance to get predictions employing new samples of the same genotype-phenotype combination. Beyond that, <monospace>easyPheno</monospace> enables the integration of packages from <monospace>R</monospace>, thus allowing the enhancement of existing <monospace>R</monospace> code with new functionalities provided by our framework.</p>
    </sec>
  </sec>
  <sec>
    <title>3 Implementation and features</title>
    <p>As outlined, <monospace>easyPheno’s</monospace> easy-to-use and easy-to-extend design provides various benefits for end users and developers. Subsequently, we provide more details on <monospace>easyPheno’s</monospace> main features and their implementation.</p>
    <sec>
      <title>3.1 Data pre-processing and management</title>
      <p><monospace>easyPheno</monospace> accepts various file formats for genotypic and phenotypic data, e.g. PLINK and CSV files. Details on the required format and accepted file types can be found in our Data Guide: <ext-link xlink:href="http://bioweb.me/ep-dataguide" ext-link-type="uri">http://bioweb.me/ep-dataguide</ext-link>. First, the data is transformed and saved in a unified format to enable consistent handling. In addition, common pre-processing techniques such as minor allele frequency filtering and three parameterizable types of data splits (train-validation-test, cross-validation with a separate test set and nested cross-validation) are implemented. Further, different genotype encodings are available through the <monospace>preprocess</monospace> module. All indices for data splits and pre-processing filters are stored in a dedicated HDF5 file referring to the usually large genotype data. This saves disk space and ensures a reproducible data preparation, even across different machines, and thus leads to comparable optimization results.</p>
    </sec>
    <sec>
      <title>3.2 Prediction models and extendability</title>
      <p>We distinguish between approaches that require a hyperparameter search (<italic toggle="yes">_base_model</italic>) as well as those with fixed parameters (<italic toggle="yes">_param_free_base_model</italic>). For both cases, we created a base class that contains useful methods for all related prediction models. Further, abstract methods and attributes are defined that have to be implemented in every child class. We provide classes already realizing most of the mandatory methods, e.g. the training loops, for the commonly used ML frameworks <monospace>scikit-learn</monospace> (<italic toggle="yes">_sklearn_model</italic>), <monospace>PyTorch</monospace> (<italic toggle="yes">_torch_model</italic>) and <monospace>TensorFlow</monospace> (<italic toggle="yes">_tensorflow_model</italic>). To implement a phenotype prediction model based on one of these widely used ML libraries, a user only needs to define two attributes, namely the default and possible nucleotide encodings, as well as two methods: the prediction model itself and potential hyperparameters including ranges. Hence, our design enables a straightforward and quick integration of further prediction models. In our online documentation, we show detailed information on how to integrate a new prediction model, including a step-by-step example in a video tutorial. Besides common genomic selection approaches, i.e. ridge regression best linear unbiased prediction (RR-BLUP) (<xref rid="vbad035-B7" ref-type="bibr">Meuwissen <italic toggle="yes">et al.</italic>, 2001</xref>) and models from the Bayesian alphabet (Bayes A, Bayes B and Bayes C) (<xref rid="vbad035-B5" ref-type="bibr">Habier <italic toggle="yes">et al.</italic>, 2011</xref>; <xref rid="vbad035-B7" ref-type="bibr">Meuwissen <italic toggle="yes">et al.</italic>, 2001</xref>), our framework already includes various ML methods. These range from regularized linear respective logistic regression approaches (L1-, L2- and Elastic Net-regularization) over Support Vector Machine and Regression to the ensemble learners Random Forest and XGBoost. Additionally, we implemented three DL-based architectures, i.e. Multilayer Perceptron, Convolutional Neural Network (CNN) and Local CNN. We further demonstrate the integration of <monospace>R</monospace> packages by utilizing <monospace>BGLR’s</monospace> (<xref rid="vbad035-B8" ref-type="bibr">Pérez and de los Campos, 2014</xref>) efficient implementation for Bayesian alphabet models (<italic toggle="yes">_bayesfromR</italic>). Detailed descriptions of all integrated prediction models can be found in our online documentation: <ext-link xlink:href="http://bioweb.me/ep-models" ext-link-type="uri">http://bioweb.me/ep-models</ext-link>.</p>
    </sec>
    <sec>
      <title>3.3 Automated optimization pipeline</title>
      <p>We employ an automatic hyperparameter search using state-of-the-art Bayesian optimization via the <monospace>Python</monospace> package <monospace>Optuna</monospace> (<xref rid="vbad035-B2" ref-type="bibr">Akiba <italic toggle="yes">et al.</italic>, 2019</xref>). Here, hyperparameters are suggested based on the performance of previous parameter sets. This might lead to a more efficient hyperparameter optimization compared to commonly used techniques, such as grid search or random search. Furthermore, for efficiency reasons, we stop the evaluation of non-promising parameter combinations based on intermediate cross-validation results. Beyond that, we use a consistent interface for prediction models with fixed parameters (<italic toggle="yes">_param_free_base_model</italic>) that only need to be fitted to the training data. This allows the user to employ both model types in the same pipeline.</p>
    </sec>
    <sec>
      <title>3.4 Result analyses</title>
      <p><monospace>easyPheno</monospace> provides several methods to analyze prediction results, for which we also provide step-by-step tutorials in our documentation. For instance, we offer code to summarize the results of multiple optimization runs in a single CSV file. We further enable the generation of heat maps that contain prediction performances for multiple models and phenotypes.</p>
    </sec>
    <sec>
      <title>3.5 Synthetic phenotype data</title>
      <p>Using a linear mixed model, <monospace>easyPheno</monospace> offers to simulate phenotypic data based on real genotypic data. This simulation contains various parameterization options, for instance to model different numbers of causative markers and phenotypic distributions. More details regarding the underlying model and simulation options can be found in our online documentation: <ext-link xlink:href="http://bioweb.me/ep-simulation" ext-link-type="uri">http://bioweb.me/ep-simulation</ext-link>. Hence, this enables the evaluation of a prediction model under pre-defined settings. To analyze how well the most influential markers are captured, <monospace>easyPheno</monospace> offers to plot the known effect sizes of simulated data against feature importances of several prediction models.</p>
    </sec>
  </sec>
  <sec>
    <title>4 Documentation</title>
    <p>We provide a comprehensive documentation for <monospace>easyPheno</monospace> at <ext-link xlink:href="https://easypheno.readthedocs.io/" ext-link-type="uri">https://easypheno.readthedocs.io/</ext-link>. In addition to a complete API reference (<ext-link xlink:href="http://bioweb.me/ep-api" ext-link-type="uri">http://bioweb.me/ep-api</ext-link>), we provide an Installation Guide for setting up <monospace>easyPheno</monospace> with <monospace>Docker</monospace> and as a <monospace>Python</monospace> package: <ext-link xlink:href="http://bioweb.me/ep-install" ext-link-type="uri">http://bioweb.me/ep-install</ext-link>. Besides the tutorials mentioned above on how to integrate a new prediction model and analyze results, we included additional hands-on guides and videos at <ext-link xlink:href="http://bioweb.me/ep-tutorials" ext-link-type="uri">http://bioweb.me/ep-tutorials</ext-link>. For instance, we show how to use <monospace>easyPheno</monospace> in combination with <monospace>Docker</monospace>. Furthermore, with a code walkthrough video, we support users to comprehend <monospace>easyPheno’s</monospace> structure. All video tutorials guiding through the framework are embedded in our documentation but can also be found on YouTube: <ext-link xlink:href="http://bioweb.me/ep-youtube" ext-link-type="uri">http://bioweb.me/ep-youtube</ext-link>.</p>
  </sec>
  <sec>
    <title>5 Conclusion</title>
    <p>With <monospace>easyPheno</monospace>, we present a comprehensive <monospace>Python</monospace> framework enabling the rigorous training, comparison and analysis of phenotype predictions for various models, ranging from common genomic selection approaches and classical ML to modern DL techniques. The framework allows state-of-the-art phenotype prediction also for non-programming-experts and fully automates the data pre-processing, the model optimization and the analysis of results. Further, the easy-to-extend design provides several benefits for bioinformaticians and invites other scientists to collaborate on <monospace>easyPheno’s</monospace> future. An additional advantage of our universal framework is the transfer to other prediction tasks with modest effort, as this only requires a re-implementation of the data pre-processing.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>vbad035_Supplementary_Data</label>
      <media xlink:href="vbad035_supplementary_data.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack id="ack1">
    <title>Acknowledgements</title>
    <p>The authors thank Jan Winter for designing the logo of <monospace>easyPheno</monospace>.</p>
  </ack>
  <sec>
    <title>Author contributions</title>
    <p>Florian Haselbeck (Conceptualization, Data curation, Methodology, Resources, Software, Writing—original draft [equal]), Maura John (Conceptualization, Data curation, Methodology, Resources, Software, Writing—original draft [equal]), and Dominik Grimm (Conceptualization [equal], Funding acquisition [lead], Methodology [equal], Project administration [lead], Software [supporting], Supervision [lead], Writing—original draft [equal], Writing—review &amp; editing [equal])</p>
  </sec>
  <sec>
    <title>Funding</title>
    <p>This work was supported by funds of the Federal Ministry of Education and Research (BMBF), Germany [01|S21038]. This article was funded by the Open Access Publication Fund of Weihenstephan-Triesdorf University of Applied Sciences.</p>
    <p><italic toggle="yes">Conflict of Interest</italic>: none declared.</p>
  </sec>
  <sec sec-type="data-availability">
    <title>Data availability</title>
    <p><monospace>easyPheno’s</monospace> source code is publicly available at: <ext-link xlink:href="https://github.com/grimmlab/easyPheno" ext-link-type="uri">https://github.com/grimmlab/easyPheno</ext-link>. <monospace>easyPheno</monospace> is available as a Python package: <ext-link xlink:href="https://pypi.org/project/easypheno/" ext-link-type="uri">https://pypi.org/project/easypheno/</ext-link>. A comprehensive documentation including various tutorials complemented with videos can be found at: <ext-link xlink:href="https://easypheno.readthedocs.io/" ext-link-type="uri">https://easypheno.readthedocs.io/</ext-link>. In our GitHub repository, we provide exemplary data for testing <monospace>easyPheno</monospace> and debugging newly developed prediction models: <ext-link xlink:href="http://bioweb.me/ep-testdata" ext-link-type="uri">http://bioweb.me/ep-testdata</ext-link>.</p>
  </sec>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="vbad035-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Abdollahi-Arpanahi</surname><given-names>R.</given-names></string-name></person-group><etal>et al</etal> (<year>2020</year>) <article-title>Deep learning versus parametric and ensemble methods for genomic prediction of complex phenotypes</article-title>. <source>Genet. Select. Evol. GSE</source>, <volume>52</volume>, <fpage>12</fpage>.</mixed-citation>
    </ref>
    <ref id="vbad035-B2">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Akiba</surname><given-names>T.</given-names></string-name></person-group><etal>et al</etal> (<year>2019</year>) Optuna: a next-generation hyperparameter optimization framework. In: <italic toggle="yes">Proceedings of the 25th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining</italic>, pp. 2623–2631. Association for Computing Machinery, New York, NY, USA.</mixed-citation>
    </ref>
    <ref id="vbad035-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bellot</surname><given-names>P.</given-names></string-name></person-group><etal>et al</etal> (<year>2018</year>) <article-title>Can deep learning improve genomic prediction of complex human traits?</article-title><source>Genetics</source>, <volume>210</volume>, <fpage>809</fpage>–<lpage>819</lpage>.<pub-id pub-id-type="pmid">30171033</pub-id></mixed-citation>
    </ref>
    <ref id="vbad035-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Charmet</surname><given-names>G.</given-names></string-name></person-group><etal>et al</etal> (<year>2020</year>) <article-title>BWGS: a R package for genomic selection and its application to a wheat breeding programme</article-title>. <source>PLoS One</source>, <volume>15</volume>, <fpage>e0222733</fpage>.<pub-id pub-id-type="pmid">32240182</pub-id></mixed-citation>
    </ref>
    <ref id="vbad035-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Habier</surname><given-names>D.</given-names></string-name></person-group><etal>et al</etal> (<year>2011</year>) <article-title>Extension of the Bayesian alphabet for genomic selection</article-title>. <source>BMC Bioinformatics</source>, <volume>12</volume>, <fpage>186</fpage>.<pub-id pub-id-type="pmid">21605355</pub-id></mixed-citation>
    </ref>
    <ref id="vbad035-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>John</surname><given-names>M.</given-names></string-name></person-group><etal>et al</etal> (<year>2022</year>) <article-title>A comparison of classical and machine learning-based phenotype prediction methods on simulated data and three plant species</article-title>. <source>Front. Plant Sci</source>., <volume>13</volume>, 932512.</mixed-citation>
    </ref>
    <ref id="vbad035-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Meuwissen</surname><given-names>T.H.</given-names></string-name></person-group><etal>et al</etal> (<year>2001</year>) <article-title>Prediction of total genetic value using genome-wide dense marker maps</article-title>. <source>Genetics</source>, <volume>157</volume>, <fpage>1819</fpage>–<lpage>1829</lpage>.<pub-id pub-id-type="pmid">11290733</pub-id></mixed-citation>
    </ref>
    <ref id="vbad035-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Pérez</surname><given-names>P</given-names></string-name>, <string-name><surname>de los Campos</surname><given-names>G.</given-names></string-name></person-group> (<year>2014</year>) <article-title>Genome-wide regression and prediction with the BGLR statistical package</article-title>. <source>Genetics</source>, <volume>198</volume>, <fpage>483</fpage>–<lpage>495</lpage>.<pub-id pub-id-type="pmid">25009151</pub-id></mixed-citation>
    </ref>
    <ref id="vbad035-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Westhues</surname><given-names>C.C.</given-names></string-name></person-group><etal>et al</etal> (<year>2022</year>) <article-title>learnMET: an R package to apply machine learning methods for genomic prediction using multi-environment trial data</article-title>. <source>G3 Genes|Genomes|Genetics</source>, <volume>12</volume>, jkac226. <pub-id pub-id-type="doi">10.1093/g3journal/jkac226</pub-id>.</mixed-citation>
    </ref>
    <ref id="vbad035-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zeng</surname><given-names>S.</given-names></string-name></person-group><etal>et al</etal> (<year>2021</year>) <article-title>G2PDeep: a web-based deep-learning framework for quantitative phenotype prediction and discovery of genomic markers</article-title>. <source>Nucleic Acids Res</source>., <volume>49</volume>, <fpage>W228</fpage>–<lpage>W236</lpage>.<pub-id pub-id-type="pmid">34037802</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

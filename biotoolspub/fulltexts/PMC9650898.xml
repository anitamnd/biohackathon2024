<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">J Cheminform</journal-id>
    <journal-id journal-id-type="iso-abbrev">J Cheminform</journal-id>
    <journal-title-group>
      <journal-title>Journal of Cheminformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1758-2946</issn>
    <publisher>
      <publisher-name>Springer International Publishing</publisher-name>
      <publisher-loc>Cham</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">9650898</article-id>
    <article-id pub-id-type="publisher-id">656</article-id>
    <article-id pub-id-type="doi">10.1186/s13321-022-00656-x</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Scaffold Generator: a Java library implementing molecular scaffold functionalities in the Chemistry Development Kit (CDK)</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-1554-6666</contrib-id>
        <name>
          <surname>Schaub</surname>
          <given-names>Jonas</given-names>
        </name>
        <address>
          <email>jonas.schaub@uni-jena.de</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0001-8197-076X</contrib-id>
        <name>
          <surname>Zander</surname>
          <given-names>Julian</given-names>
        </name>
        <address>
          <email>zanderjulian@gmx.de</email>
        </address>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-0722-4229</contrib-id>
        <name>
          <surname>Zielesny</surname>
          <given-names>Achim</given-names>
        </name>
        <address>
          <email>achim.zielesny@w-hs.de</email>
        </address>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0001-6966-0814</contrib-id>
        <name>
          <surname>Steinbeck</surname>
          <given-names>Christoph</given-names>
        </name>
        <address>
          <email>christoph.steinbeck@uni-jena.de</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="GRID">grid.9613.d</institution-id><institution-id institution-id-type="ISNI">0000 0001 1939 2794</institution-id><institution>Institute for Inorganic and Analytical Chemistry, </institution><institution>Friedrich-Schiller-University Jena, </institution></institution-wrap>Lessing Strasse 8, 07743 Jena, Germany </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="GRID">grid.454254.6</institution-id><institution-id institution-id-type="ISNI">0000 0004 0647 4362</institution-id><institution>Institute for Bioinformatics and Chemoinformatics, </institution><institution>Westphalian University of Applied Sciences, </institution></institution-wrap>August-Schmidt-Ring 10, 45665 Recklinghausen, Germany </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>10</day>
      <month>11</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>10</day>
      <month>11</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2022</year>
    </pub-date>
    <volume>14</volume>
    <elocation-id>79</elocation-id>
    <history>
      <date date-type="received">
        <day>24</day>
        <month>2</month>
        <year>2022</year>
      </date>
      <date date-type="accepted">
        <day>30</day>
        <month>10</month>
        <year>2022</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2022</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold>This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <p id="Par1">The concept of molecular scaffolds as defining core structures of organic molecules is utilised in many areas of chemistry and cheminformatics, e.g. drug design, chemical classification, or the analysis of high-throughput screening data. Here, we present Scaffold Generator, a comprehensive open library for the generation, handling, and display of molecular scaffolds, scaffold trees and networks. The new library is based on the Chemistry Development Kit (CDK) and highly customisable through multiple settings, e.g. five different structural framework definitions are available. For display of scaffold hierarchies, the open GraphStream Java library is utilised. Performance snapshots with natural products (NP) from the COCONUT (COlleCtion of Open Natural prodUcTs) database and drug molecules from DrugBank are reported. The generation of a scaffold network from more than 450,000 NP can be achieved within a single day.</p>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Cheminformatics</kwd>
      <kwd>Chemistry Development Kit</kwd>
      <kwd>CDK</kwd>
      <kwd>Natural products</kwd>
      <kwd>Scaffold</kwd>
      <kwd>Scaffold tree</kwd>
      <kwd>Scaffold network</kwd>
      <kwd>Fragmentation</kwd>
      <kwd>Chemical space</kwd>
      <kwd>Clustering</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100007569</institution-id>
            <institution>Carl-Zeiss-Stiftung</institution>
          </institution-wrap>
        </funding-source>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>Friedrich-Schiller-Universität Jena (1010)</institution>
        </funding-source>
      </award-group>
      <open-access>
        <p>Open Access funding enabled and organized by Projekt DEAL.</p>
      </open-access>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2022</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Introduction</title>
    <sec id="Sec2">
      <title>Scaffold concept and applications</title>
      <p id="Par20">Molecular scaffolds, defined as the core structures of molecules and also referred to as chemotypes or frameworks in some studies, are a concept used in many areas of chemistry. In drug design, the scaffold of a molecule is considered the main structure that determines its shape and places the functional moieties into the right positions to interact with the target. For this reason, developing new drug molecules with different cores but similar biological activities has been termed “scaffold hopping” [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR2">2</xref>]. Combinatorial chemistry makes use of the concept in designing compound libraries by substituting a set of scaffolds with combinations of different side chains. And structures in chemical patents are often defined analogously as Markush structures [<xref ref-type="bibr" rid="CR3">3</xref>]. The intuitive chemical scaffold concept can also be utilised for classification purposes, especially in natural product (NP) research [<xref ref-type="bibr" rid="CR4">4</xref>–<xref ref-type="bibr" rid="CR7">7</xref>]. In cheminformatics, scaffold-based approaches can be applied for the analysis of high-throughput screening (HTS) data [<xref ref-type="bibr" rid="CR6">6</xref>–<xref ref-type="bibr" rid="CR10">10</xref>], mapping and visualising chemical spaces [<xref ref-type="bibr" rid="CR5">5</xref>, <xref ref-type="bibr" rid="CR11">11</xref>], or even train-test splits of molecular data sets for machine learning projects [<xref ref-type="bibr" rid="CR12">12</xref>].</p>
      <p id="Par21">Another application of scaffold-based methods is identifying privileged substructures in active molecules or NP that can be used as lead structures in the development of new drugs [<xref ref-type="bibr" rid="CR5">5</xref>, <xref ref-type="bibr" rid="CR13">13</xref>–<xref ref-type="bibr" rid="CR19">19</xref>]. Within NP chemical space, macrocyclic structures or cyclic peptides are of specific interest for these medicinal chemistry purposes [<xref ref-type="bibr" rid="CR20">20</xref>–<xref ref-type="bibr" rid="CR23">23</xref>].</p>
    </sec>
    <sec id="Sec3">
      <title>Scaffold approaches in cheminformatics</title>
      <p id="Par22">The first general definition of a molecular scaffold was the Murcko framework developed by Bemis and Murcko in 1996 [<xref ref-type="bibr" rid="CR11">11</xref>]. According to this concept, a scaffold consists of all the rings in a molecule and the non-cyclic chains connecting them, called linkers. Excluded from the scaffold are all terminal side chains. In addition to the Murcko framework definition representing molecular properties like atomic elements and bond multiplicities, Bemis and Murcko introduced a more abstract representation that reduced each atom in the framework to a simple graph node and each bond to a simple graph vertex, called graph framework or archetype. The authors used their framework definitions to assess the structural diversity of a set of drug molecules.</p>
      <p id="Par23">In addition to ignoring all non-cyclic molecules, the Murcko framework has one major drawback: small changes in the ring structure or the addition of a cyclic substituent, e.g. a benzene ring in drug design or a sugar moiety in NP research, can lead to very similar molecules not being grouped together due to non-equivalent scaffolds. Therefore, multiple approaches have been developed for organising molecular scaffolds in a graph-based structure to relate similar scaffolds to each other and to create a systematic scaffold hierarchy [<xref ref-type="bibr" rid="CR4">4</xref>, <xref ref-type="bibr" rid="CR5">5</xref>, <xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR9">9</xref>, <xref ref-type="bibr" rid="CR10">10</xref>, <xref ref-type="bibr" rid="CR13">13</xref>, <xref ref-type="bibr" rid="CR24">24</xref>–<xref ref-type="bibr" rid="CR27">27</xref>].</p>
      <p id="Par24">Early work to this end was done by Xu and Johnson, who developed multiple concepts of dissecting Murcko frameworks into constituting ring systems or abstracting them into reduced representations. They used these concepts to assign molecular equivalence numbers to molecular structures and thus classify them within chemical libraries [<xref ref-type="bibr" rid="CR25">25</xref>].</p>
      <p id="Par25">Wilkens et al. in their hierarchical scaffold clustering (HierS) approach [<xref ref-type="bibr" rid="CR10">10</xref>] use a scaffold definition similar to Murcko frameworks but additionally include all atoms that are directly attached to rings and linkers via multiple bonds. Non-cyclic molecules are taken into consideration as well and are assigned scaffolds based on their multiple bonds. To build a scaffold hierarchy, the original scaffold extracted from each molecule is dissected into its smaller parent scaffolds first. This is done by generating all smaller scaffolds that can result from the stepwise removal of ring systems, i.e. isolated single rings or fused multiple rings that share bonds or atoms, from the original scaffold. After the removal of one ring, linker atoms that have become side chains are also removed. The process is finished when only the individual ring systems are left. Via a substructure search, the scaffold hierarchy is constructed in the second step by linking parent and child scaffold if the smaller parent scaffold is a substructure of the bigger child scaffold. In the end, a tree-like hierarchy results with the individual ring systems as roots at the top, and their combinations in more complex scaffolds on the following levels. A scaffold that is not a single ring system has multiple parents in the hierarchy.</p>
      <p id="Par26">While HierS overcomes most limitations of the Murcko framework approach and is a good first attempt for scaffold classification, it also has some disadvantages: ring systems are not split into their constituting single rings, which can be especially problematic when studying complex ring systems of NP where the approach may be too coarse-grained. In addition, child scaffolds are linked to multiple parents in the hierarchy, which is a multi-class assignment that is often undesirable for classification tasks.</p>
      <p id="Par27">The latter drawback of HierS is addressed in the structural classification of natural products (SCONP) approach by Koch et al. [<xref ref-type="bibr" rid="CR5">5</xref>] that uses the same structural scaffold definition (apart from again ignoring linear molecules) but differs in its hierarchy construction routine. One major difference is that scaffolds are not dissected here. Only the directly extracted, original scaffolds of the studied molecule set are used to construct their relations in a tree-like fashion. A more complex scaffold is linked to only a single parent scaffold that is selected from all possible parent scaffolds representing substructures of the child following a set of chemical rules. These take characteristics of the parent scaffolds into account like hetero atom count, size, and frequency in the studied dataset. This last aspect makes the approach dataset-dependent, which can lead to problems in classification tasks.</p>
      <p id="Par28">A combination of scaffold dissection and single-parent assignments through chemical prioritisation rules is the scaffold tree approach by Schuffenhauer et al. [<xref ref-type="bibr" rid="CR7">7</xref>]. As a first step, scaffolds are extracted from the given molecules according to the Murcko framework definition but additionally including all atoms connected via a double-bond to ring or linker atoms in the scaffolds. These elements are included as well to preserve correct hybridisation and structural alignment of the scaffold atoms. Via an iterative removal of rings, smaller parent scaffolds are created from the original child scaffolds. Ring perception for the removal is based on a smallest set of smallest rings (SSSR) approach. This way, ring systems sharing atoms or bonds between multiple rings are not considered as one entity but dissected into their constituting rings as well. One important aspect about the scaffold tree approach is the application of 13 chemical prioritisation rules at every ring removal step. Following these rules, only one terminal ring is specifically selected for removal and only one possible parent scaffold created at every scaffold dissection step. The term “terminal” indicates that the removal does not result in a disconnected scaffold structure. The specific prioritisation rules take only molecular characteristics of the rings, like size, hetero atom count, and aromaticity, into account and aim at removing the less characteristic, peripheral rings first to extract the characteristic, central parent scaffold. The scaffold dissection process continues until only one ring remains. When studying a collection of molecules, their original scaffolds and sets of created parent scaffolds are arranged in a hierarchy tree, the scaffold tree. Single-ring scaffolds form the roots and more complex scaffolds are placed at the higher levels. Due to the linear scaffold dissection process using the prioritisation rules, every child scaffold in the hierarchy is exclusively assigned to only one parent scaffold. Therefore, the scaffold tree represents a hierarchical, deterministic, and unique classification of chemical scaffolds. Unlike SCONP, it is dataset-independent because it does not consider the frequency of a scaffold in the studied collection. In conclusion, the scaffold tree is a useful tool for scaffold-based classification and visualisation of large compound sets and can be successfully employed to identify active scaffolds in HTS data and promising candidates for drug development [<xref ref-type="bibr" rid="CR6">6</xref>–<xref ref-type="bibr" rid="CR8">8</xref>, <xref ref-type="bibr" rid="CR28">28</xref>–<xref ref-type="bibr" rid="CR30">30</xref>].</p>
      <p id="Par29">By definition of prioritisation rules, Schuffenhauer et al. intended to create a chemically intuitive classification system which opposes a classification focussing on pharmacophoric elements [<xref ref-type="bibr" rid="CR7">7</xref>]. Also, its capability to identify biologically active substructural motives is limited because its exploration of possible parent scaffolds is limited due to the prioritisation rules. For this reason, Varin et al. introduced the concept of scaffold networks [<xref ref-type="bibr" rid="CR9">9</xref>], where scaffolds are extracted and dissected analogously but without the application of prioritisation rules. In this way, every possible parent scaffold is generated for a given original scaffold and the resulting hierarchy, the scaffold Network, contains multi-parent relationships between its nodes. Varin et al. generated considerably more active scaffolds in primary screening data using scaffold networks compared to the scaffold tree approach. The reason for this is the exhaustive enumeration of parent scaffolds which leads to the scaffold network containing significantly more scaffolds than a scaffold tree. Additionally, a scaffold is not linked to all parent scaffolds that are substructures of it in the scaffold tree, only to the one determined as its characteristic core. As a consequence, this scaffold may be regarded to be less active.</p>
      <p id="Par30">The scaffold network approach explores the scaffold space more exhaustively and supports the identification of areas that a specific compound set does not cover. In addition, more virtual scaffolds can be identified, i.e. scaffolds that are only generated as a result of scaffold dissection and do not appear directly as original scaffolds in the given molecular structures. When studying a compound set linked to bioactivity data, these structures are usually of high interest when appearing frequently in active molecules [<xref ref-type="bibr" rid="CR29">29</xref>, <xref ref-type="bibr" rid="CR30">30</xref>].</p>
      <p id="Par31">On the other hand, scaffold networks can become large and complex with a comparably small number of molecules, which makes it difficult to visualise them. When linked to bioactivity data, Varin et al. suggest to only include islands of relevant, active scaffolds in the display.</p>
      <p id="Par32">As a conclusion, scaffold trees are generally more suitable for a complete visualisation and overview of the defining motives and structural classes in a limited compound set. Whereas scaffold networks can be seen as more helpful for analysing compound sets linked with bioactivity data to reasonably limit the display and identify active substructural motives [<xref ref-type="bibr" rid="CR9">9</xref>].</p>
      <p id="Par33">An even more extensive scaffold network approach was published recently by Manelfi et al. named “Molecular Anatomy” [<xref ref-type="bibr" rid="CR26">26</xref>]. While the aforementioned approaches mostly rely on one single scaffold definition, respectively, nine different scaffold types of different abstraction levels were introduced here. All of them can be dissected analogously into parent scaffolds and linked in a network representation. This way, common substructure patterns can be identified on a higher abstraction level than with scaffold networks and more relevant similar compounds determined. This may be helpful for analysing HTS data or preparing structure activity relationship (SAR) studies of scaffolds and their side chains. However, this type of scaffold network including also more abstract scaffold representations has an even stronger tendency to grow very quickly with an increasing number of included structures and hence to quickly become unfathomable without sensibly limiting the display.</p>
      <p id="Par34">An analogous scaffold tree-like approach to hierarchical clustering based on Xu and Johnson’s more abstract scaffold representations was published by Medina-Franco et al. [<xref ref-type="bibr" rid="CR24">24</xref>]. Here, scaffolds are not dissected into parent scaffolds but clustered in a tree structure based on scaffold representations with a lower chemical resolution at each higher level.</p>
      <p id="Par35">An inherently different approach to scaffold generation and clustering are methods based on analog series. Here, no a priori scaffold definition like the Murcko framework is applied. Instead, all structures in a given set are grouped into analog series based on methods like matched molecular pairs with additionally deriving precursor structures using the RECAP (Retrosynthetic Combinatorial Analysis Procedure) [<xref ref-type="bibr" rid="CR31">31</xref>] rules. This way, the scaffolds extracted as representatives of an analog series take synthetic accessibility into account, an important aspect in medicinal chemistry but mostly ignored in the approaches above. The analog series and their representative scaffolds can be visualised by R-group tables, mapped into coordinate-based chemical space [<xref ref-type="bibr" rid="CR32">32</xref>], annotated with activity information to support SAR studies, or used to extract favourable lead structures for drug design campaigns [<xref ref-type="bibr" rid="CR17">17</xref>, <xref ref-type="bibr" rid="CR18">18</xref>, <xref ref-type="bibr" rid="CR33">33</xref>–<xref ref-type="bibr" rid="CR38">38</xref>].</p>
    </sec>
    <sec id="Sec4">
      <title>Open implementations</title>
      <p id="Par36">Most of the original software tools implementing the scaffold-based approaches described in the previous section have not been published openly (Murcko frameworks, SCONP, scaffold tree) or are not findable anymore (HierS). As a result, a number of open re-implementations and more advanced, versatile software for scaffold analyses has been developed and published [<xref ref-type="bibr" rid="CR28">28</xref>, <xref ref-type="bibr" rid="CR29">29</xref>, <xref ref-type="bibr" rid="CR39">39</xref>–<xref ref-type="bibr" rid="CR44">44</xref>].</p>
      <p id="Par37">The first open software application that implemented a scaffold tree was Scaffold Hunter [<xref ref-type="bibr" rid="CR28">28</xref>, <xref ref-type="bibr" rid="CR29">29</xref>, <xref ref-type="bibr" rid="CR39">39</xref>]. Starting as a tool mainly for generating and visualising scaffold trees, it has evolved into a multi-functional cheminformatics platform for visual data analysis. By default, the prioritisation rules are applied as published by Schuffenhauer et al. [<xref ref-type="bibr" rid="CR7">7</xref>], but they can be customised by the user or even turned off completely. Varin et al. used the latter option to generate their scaffold networks using Scaffold Hunter [<xref ref-type="bibr" rid="CR9">9</xref>]. The rich-client application is implemented in Java and employs the Chemistry Development Kit (CDK) [<xref ref-type="bibr" rid="CR45">45</xref>–<xref ref-type="bibr" rid="CR47">47</xref>] for cheminformatics tasks.</p>
      <p id="Par38">The open command-line tool Scaffold Network Generator [<xref ref-type="bibr" rid="CR41">41</xref>] was designed to generate both, scaffold trees and scaffold networks. It lacks the extensive visualisation functionality of Scaffold Hunter but can therefore be integrated into automated analysis workflows that do not require human interaction. Scaffold Network Generator was implemented in Java as well and employs the CDK and Open Babel [<xref ref-type="bibr" rid="CR48">48</xref>] cheminformatics toolkits. Unfortunately, it cannot be found at the internet address given in the original publication anymore.</p>
      <p id="Par39">The cheminformatics toolkit RDKit [<xref ref-type="bibr" rid="CR49">49</xref>] recently integrated an extensive scaffold network functionality into its range of capabilities [<xref ref-type="bibr" rid="CR40">40</xref>]. The module named “rdScaffoldNetwork” primarily offers the generation of scaffold networks based on a HierS-like scaffold dissection (no splitting of fused rings). Custom fragmentation rules can be added in the form of reaction SMARTS [<xref ref-type="bibr" rid="CR50">50</xref>]. In addition, more abstract atom- and bond-generic scaffold representations can be generated. The new functionality has been employed in a study evaluating different approaches to automate chemical series classifications in medicinal chemistry [<xref ref-type="bibr" rid="CR51">51</xref>].</p>
      <p id="Par40">These three open software tools for scaffold-based analyses are only a limited number of examples for many more such tools developed in the past years [<xref ref-type="bibr" rid="CR42">42</xref>–<xref ref-type="bibr" rid="CR44">44</xref>].</p>
    </sec>
    <sec id="Sec5">
      <title>Motivation</title>
      <p id="Par41">Structural scaffold analyses are relevant in diverse areas of cheminformatics, e.g. clustering, visualisation of chemical spaces, and SAR analyses [<xref ref-type="bibr" rid="CR4">4</xref>–<xref ref-type="bibr" rid="CR10">10</xref>, <xref ref-type="bibr" rid="CR26">26</xref>, <xref ref-type="bibr" rid="CR30">30</xref>]. Hence, numerous open software tools for such purposes have been developed [<xref ref-type="bibr" rid="CR28">28</xref>, <xref ref-type="bibr" rid="CR29">29</xref>, <xref ref-type="bibr" rid="CR39">39</xref>–<xref ref-type="bibr" rid="CR44">44</xref>]. The popular cheminformatics toolkit RDKit even integrated scaffold functionalities into its core modules. For the Chemistry Development Kit, only the generation of Murcko frameworks is currently available [<xref ref-type="bibr" rid="CR52">52</xref>]. Outside core CDK, there is no open scaffold software library exclusively based on CDK to use in workflows and software based on the toolkit. Scaffold Hunter implemented its scaffold functionalities as part of a software application, and they cannot be easily extracted from it. Scaffold Network Generator is based on CDK but on Open Babel as well and not findable anymore.</p>
      <p id="Par42">Here, we present Scaffold Generator, an open, stand-alone Java library for scaffold functionalities based on CDK, to fill this void. It offers the generation of scaffold trees and scaffold networks with comprehensive additional scaffold-related functionalities. An integration into the main CDK modules is intended.</p>
    </sec>
  </sec>
  <sec id="Sec6">
    <title>Implementation</title>
    <p id="Par43">The Scaffold Generator library was implemented in Java version 17 and is based on the Chemistry Development Kit (CDK) version 2.8. The openly available source code can be found on GitHub: <ext-link ext-link-type="uri" xlink:href="https://github.com/Julian-Z98/ScaffoldGenerator">https://github.com/Julian-Z98/ScaffoldGenerator</ext-link>. With Scaffold Generator, different scaffold representations can be extracted from given molecules, dissected into parent scaffolds in multiple ways, and organised in scaffold trees and networks. These can be visualised using the GraphStream library version 2.0 [<xref ref-type="bibr" rid="CR53">53</xref>, <xref ref-type="bibr" rid="CR54">54</xref>].</p>
    <sec id="Sec7">
      <title>Available functionalities</title>
      <sec id="Sec8">
        <title>Scaffold types</title>
        <p id="Par44">Molecules are passed to Scaffold Generator as instances implementing the central CDK molecular structure representation, the <italic>IAtomContainer</italic> interface [<xref ref-type="bibr" rid="CR55">55</xref>]. From these, molecular scaffolds can be extracted according to different scaffold definitions available. These include the Murcko framework and the scaffold definition used in most of the established approaches, like HierS or the scaffold tree. It is based on Murcko frameworks but additionally includes all atoms connected to ring or linker atoms via double-bonds [<xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR10">10</xref>]. In Scaffold Generator, this has been extended to all atoms connected via non-single bonds to cyclic or linker atoms. Higher bond orders than 2 are considered rare in such configurations but they influence the hybridisation and structural configuration of the scaffold as strongly as exocyclic or exolinker double-bonds. Another crucial aspect to consider here is the synthetic accessibility of the represented scaffolds that is significantly influenced by the presence or absence of exocyclic or exolinker multi-bonds. Additionally, two more abstract scaffold representations taken from Molecular Anatomy are available in Scaffold Generator: basic framework and basic wireframe [<xref ref-type="bibr" rid="CR26">26</xref>]. Similar abstracted scaffold definitions have been described in earlier works as well, like the graph framework by Bemis and Murcko (analogous to basic wireframe) or the aryl cyclic system by Xu and Johnson (analogous to basic framework), but the naming was chosen here in analogy to Molecular Anatomy. A fifth scaffold type was analogously termed elemental wireframe. Here, all bonds are abstracted to single bonds, but hetero atoms are preserved (Fig. <xref rid="Fig1" ref-type="fig">1</xref>). For the creation of scaffolds of all types, the CDK <italic>MurckoFragmenter</italic> class [<xref ref-type="bibr" rid="CR52">52</xref>] is used internally and the extracted Murcko framework is post-processed according to the chosen scaffold type if necessary. If a given molecular structure has no rings, no scaffold can be extracted and an empty <italic>IAtomContainer</italic> instance is returned.<fig id="Fig1"><label>Fig. 1</label><caption><p>Different scaffold types available in Scaffold Generator. <bold>A</bold> Unaltered structure of the antibiotic agent flucloxacillin (PubChem CID 21319). <bold>B</bold> Murcko framework of flucloxacillin. <bold>C</bold> Scaffold of flucloxacillin. <bold>D</bold> Elemental wireframe of flucloxacillin. <bold>E</bold> Basic framework of flucloxacillin. <bold>F</bold> Basic wireframe of flucloxacillin</p></caption><graphic xlink:href="13321_2022_656_Fig1_HTML" id="MO1"/></fig></p>
        <p id="Par45">Another functionality of Scaffold Generator is to return the building blocks of scaffolds, i.e. rings and linkers, separately. The terminal side chains excluded from the scaffold structure can also be extracted (Fig. <xref rid="Fig2" ref-type="fig">2</xref>).<fig id="Fig2"><label>Fig. 2</label><caption><p>Dissection of scaffolds into building blocks. <bold>A</bold> Flucloxacillin with its Murcko framework marked in blue. <bold>B</bold> Rings of flucloxacillin marked in blue. It is important to note that the fused ring system on the right would be split into its two constituting rings in the structure set returned by the described routine of Scaffold Generator. <bold>C</bold> Linkers of flucloxacillin marked in blue. <bold>D</bold> Terminal side chains of flucloxacillin marked in blue</p></caption><graphic xlink:href="13321_2022_656_Fig2_HTML" id="MO2"/></fig></p>
      </sec>
      <sec id="Sec9">
        <title>Ring detection</title>
        <p id="Par46">Scaffold Generator dissects fused ring systems, i.e. rings that share bonds or atoms, into their constituting separate rings. This is the case not only when returning scaffold building blocks but also for the generation of parent scaffolds (see below). Internally, the CDK <italic>Cycles.relevant</italic> cycle finder algorithm is employed for ring detection. This algorithm detects the logical union of all smallest sets of smallest rings (SSSR, also minimum cycle basis, MCB) in the given molecule [<xref ref-type="bibr" rid="CR56">56</xref>, <xref ref-type="bibr" rid="CR57">57</xref>]. This way, fused ring systems are not detected as one entity, but their constituting cycles are detected separately. The <italic>Cycles.relevant</italic> cycle finder was chosen for Scaffold Generator to be in accordance with the original scaffold tree implementation [<xref ref-type="bibr" rid="CR7">7</xref>]. But in rare cases, this cycle detection algorithm identifies too many rings in a given molecule, defined as more rings than there are atoms in the structure. One example is the natural product (NP) CNP0103752, taken from the COCONUT [<xref ref-type="bibr" rid="CR58">58</xref>] database (Fig. <xref rid="Fig3" ref-type="fig">3</xref>). Since the overarching ring connecting all 11 glycosidic rings in the structure can be detected on many different paths, <italic>Cycles.relevant</italic> detects 2059 rings here. In cases like this, i.e. more rings are detected than there are atoms in the molecule, Scaffold Generator uses the algorithm <italic>Cycles.mcb</italic> instead, which identifies one single set of SSSR/MCB instead of the logical union of all possible ones [<xref ref-type="bibr" rid="CR56">56</xref>, <xref ref-type="bibr" rid="CR57">57</xref>]. In CNP0103752, it detects a more useful number for this application of 12 cycles.<fig id="Fig3"><label>Fig. 3</label><caption><p>Rings of CNP0103752 taken from COCONUT. The CDK <italic>Cycles.relevant</italic> algorithm identifies 2059 rings here while <italic>Cycles.mcb</italic> detects 12</p></caption><graphic xlink:href="13321_2022_656_Fig3_HTML" id="MO3"/></fig></p>
      </sec>
      <sec id="Sec10">
        <title>Ring removal</title>
        <p id="Par47">In the parent scaffold generation routines (see below), only rings adhering to a set of criteria are considered for removal at the individual dissection steps. The first requirement is that a ring needs to be terminal, i.e. its removal must not result in a disconnected scaffold structure. This is checked internally by removing all atoms and bonds constituting the respective ring from the scaffold, discarding potential side chains that were connected to it, e.g. when the scaffold structural definition is used, and assessing whether the structure does not consist of multiple disconnected parts afterwards. If it does, the ring in question is not deemed terminal and hence not removable. This routine of checking for terminal rings has two major consequences: Internal rings that could be removed without resulting in a disconnected structure by turning some of their atoms and bonds into linker structures are still not considered terminal (Fig. <xref rid="Fig4" ref-type="fig">4</xref>a). Secondly, the removal of rings from a scaffold cannot result in an artificially created spiro-ring system in Scaffold Generator (Fig. <xref rid="Fig4" ref-type="fig">4</xref>b). Such cases are described in the original scaffold tree publication [<xref ref-type="bibr" rid="CR7">7</xref>] and the fifth prioritisation rule there is intended to prevent them if other rings can be removed first. But they are possible in general and would appear in a set of all possible parent scaffolds. Because the conversion of ring atoms to linker atoms and the artificial creation of spiro-ring systems are chemically non-intuitive when generating parent scaffolds, these possibilities have been excluded in Scaffold Generator.<fig id="Fig4"><label>Fig. 4</label><caption><p>Impossible parent scaffolds in Scaffold Generator. <bold>A</bold> Dodecahydro-s-indacene (PubChem CID 13214318) representing an example scaffold cannot be dissected in a way that turns former ring atoms into linker atoms in the created parent scaffold. <bold>B</bold> Tricyclo[7.2.1.01,6]dodecane (PubChem CID 12,758,808) representing an example scaffold cannot be dissected in a way that creates a parent scaffold with a spiro-ring system which was not there in the molecule before</p></caption><graphic xlink:href="13321_2022_656_Fig4_HTML" id="MO4"/></fig></p>
        <p id="Par48">Another requirement to consider a ring for removal is that it must contain at least one atom that is not part of another ring as well. This criterion is adopted from the original scaffold tree publication [<xref ref-type="bibr" rid="CR7">7</xref>]. Here, the authors explain it with the example of adamantane. Using a ring detection algorithm that identifies the logical union of all SSSR in a structure, four rings are identified here and no atom is part of only one of them (compare Schuffenhauer et al. [<xref ref-type="bibr" rid="CR7">7</xref>] Scheme 2). Hence, the removal of one ring is not possible because its atoms and bonds that are part of other rings as well are generally preserved in the Scaffold Generator ring removal routines. Structures like adamantane are therefore not dissected at all.</p>
        <p id="Par49">A similar case of structures that cannot be dissected are specific fused aromatic systems, i.e. aromatic rings that share the same atom with at least two other rings. When removing an aromatic ring sharing a bond with another ring, Scaffold Generator turns the shared bond into a double-bond to preserve the correct hybridisation of the formerly shared atoms in the remaining ring. In arrangements where the aromatic ring to remove shares an atom with at least two other rings, this double-bond insertion is not possible without violating valence rules. Such structures are not dissected as a consequence. This behaviour follows the ring removal algorithm described in the original scaffold tree publication (compare Schuffenhauer et al. [<xref ref-type="bibr" rid="CR7">7</xref>] Scheme 3). But Scaffold Generator makes one addition here: In the original scaffold tree, this double-bond insertion is only done if an aromatic ring is fused to a non-aromatic ring and the aromatic ring is removed. In Scaffold Generator, it is also done if the remaining ring is aromatic as well. This addition has been made to preserve hybridisations and aromaticity in the remaining ring and to ensure that aromatic ring systems, if they can be dissected, are decomposed into parent scaffolds that can always be represented as valid contributing structures (as opposed to resonance hybrids). As a consequence, Scaffold Generator does not dissect most fused aromatic ring systems, e.g. pyrene. In these systems, most rings cannot be removed without altering hybridisations and bond orders in the remaining ones. And since a partial dissection does not appear reasonable because it would not produce meaningful parent scaffolds, these structures are not dissected at all. A possible future extension to Scaffold Generator could be a routine that extracts meaningful parent scaffolds from fused aromatic systems, e.g. a benzene ring as root scaffold from pyrene and similar structures.</p>
        <p id="Par50">Another specially treated system are rings of size three containing one hetero atom that share the bond opposite to the hetero atom with another ring (Fig. <xref rid="Fig5" ref-type="fig">5</xref>). When rings like this are removed, the shared bond is turned into a double bond to produce the precursor structure the hetero atom was most likely added to. This special case is described in the first ring removal prioritisation rule by Schuffenhauer et al. [<xref ref-type="bibr" rid="CR7">7</xref>] but is part of the general ring removal routine of Scaffold Generator. This deviation from the original implementation does not influence the parent scaffold generation according to the scaffold tree prioritisation rules but is important to note for the enumerative generation of all possible parent scaffolds (see below).<fig id="Fig5"><label>Fig. 5</label><caption><p>Removal of 3-membered hetero cycles. If the oxirane ring marked in blue is removed from himeyoshin (COCONUT CNP0151718) during parent scaffold generation, the bond shared with the cyclohexanone ring is turned into a double bond</p></caption><graphic xlink:href="13321_2022_656_Fig5_HTML" id="MO5"/></fig></p>
      </sec>
      <sec id="Sec11">
        <title>Scaffold trees and networks</title>
        <p id="Par51">Using Scaffold Generator, extracted molecular scaffolds can be dissected in different ways. The first one, as described above, is to decompose it into the constituting building blocks, i.e. rings and linkers. Another option is the enumerative removal that generates all possible parent scaffolds. At every iteration step, each ring adhering to the criteria listed above is removed separately to produce the resulting parent scaffold. This is repeated until only single-ring scaffolds remain, or no ring is removable anymore. These final scaffolds are called the root scaffolds. All generated parent scaffolds are substructures of the original scaffold. An example for the enumerative removal is shown in Fig. <xref rid="Fig6" ref-type="fig">6</xref>. This routine can be applied to a given molecule and it returns a list with all possible parent scaffolds plus the original scaffold of the molecule. Parent scaffolds generated multiple times in the enumerative removal are returned only once. This scaffold dissection routine is the basis for generating scaffold networks. The dissection result of a single molecule can already be represented as a scaffold network by returning it as the corresponding data structure instead of a list.<fig id="Fig6"><label>Fig. 6</label><caption><p>Enumerative parent scaffold generation of flucloxacillin. Conceptual depiction of the enumerative parent scaffold generation routine applied to the scaffold of flucloxacillin (on the left). All possible parent scaffolds that can be created through the removal of a terminal ring are created. Marked in blue are all structures that are returned by the routine, indicating that structures occurring multiple times are still returned only once</p></caption><graphic xlink:href="13321_2022_656_Fig6_HTML" id="MO6"/></fig></p>
        <p id="Par52">Scaffold Generator implements the 13 chemical prioritisation rules that are applied in the original scaffold tree publication to specifically select only one parent scaffold at every scaffold dissection step [<xref ref-type="bibr" rid="CR7">7</xref>]. In principle, these rules are applied to select only one ring removal path from all possible ones that are pursued in the enumerative removal (compare Fig. <xref rid="Fig6" ref-type="fig">6</xref>). Only a few minor changes have been done to the original rules and underlying routines as reported above. Additionally, the final tie-breaking rule has been adapted to use unique SMILES representations [<xref ref-type="bibr" rid="CR59">59</xref>, <xref ref-type="bibr" rid="CR60">60</xref>] as produced by the CDK, instead of canonical ones. From a given molecular structure, Scaffold Generator can generate a list of all parent scaffolds resulting from the Schuffenhauer dissection routine, plus the original scaffold (Fig. <xref rid="Fig7" ref-type="fig">7</xref>). It produces the structures that can be used to build a scaffold tree in the second step. As with scaffold networks, a scaffold tree can already be constructed from a single molecule as well.<fig id="Fig7"><label>Fig. 7</label><caption><p>Schuffenhauer parent scaffold generation of flucloxacillin. Conceptual depiction of the parent scaffold generation routine employing the Schuffenhauer prioritisation rules applied to the scaffold of flucloxacillin (on the left). The rules are used to select only one parent scaffold out of all possible ones at every dissection step</p></caption><graphic xlink:href="13321_2022_656_Fig7_HTML" id="MO7"/></fig></p>
        <p id="Par53">The main functionality of Scaffold Generator is the construction of scaffold trees and networks from given molecule collections (Fig. <xref rid="Fig8" ref-type="fig">8</xref>). In the first step, the first molecule in the given collection is dissected into its parent scaffolds and the result is used to build the starting point of the desired structure. One by one, the remaining molecules are decomposed as well and their original scaffolds and parent scaffolds added to the tree or network if they are not already part of it. Scaffold Generator implements data structures that manage the graph nodes representing scaffolds and their parent–child connections as edges in scaffold trees and networks. Both graphs are subdivided into levels with the root scaffolds on level 0 and their child scaffolds on the consecutive levels. The leaves are formed by the original scaffolds of the given molecules. But it is important to note that lower levels down to the roots can contain original scaffolds as well, e.g. when single-ring molecules are part of the given molecular set. The merging routines that are employed in the construction of a tree or network to add more scaffolds to it are also accessible after the final structures have been returned.<fig id="Fig8"><label>Fig. 8</label><caption><p>Scaffold network and tree depicted with the Scaffold Generator GraphStream visualisation. The scaffold network (<bold>a</bold>) and scaffold tree (<bold>b</bold>) of diazepam (PubChem CID 3016) (1), bromazepam (PubChem CID 2441) (2), and zolazepam (PubChem CID 35775) (3) are displayed side-by-side for direct comparison (original scaffolds marked in blue). All three compounds are diazepinenones, a class of anxiolytics. The scaffold tree correctly identifies the diazepinenone ring as root scaffold of all three structures. But the scaffold network additionally reveals that diazepam (1) shares two-ring parent scaffolds with both the other structures, respectively. It also shows that the benzene ring is shared by all three compounds as well</p></caption><graphic xlink:href="13321_2022_656_Fig8_HTML" id="MO8"/></fig></p>
        <p id="Par54">The scaffold tree and network structures differ in some aspects: In scaffold trees, each node has only one parent node. This results from the Schuffenhauer scaffold dissection where a scaffold produces only one parent scaffold in each step. In scaffold networks, on the other hand, a node can have multiple parents since a scaffold usually produces multiple parent scaffolds in each step during the enumerative removal.</p>
        <p id="Par55">Another distinct aspect of scaffold trees is that only those molecules with their original scaffolds and parent scaffolds can be combined in one tree that share the same root scaffold. This is the scaffold (usually a single-ring scaffold) which results as parent scaffold in the final step of the Schuffenhauer dissection. It is unambiguously determined by the prioritisation rules. Scaffold Generator compiles the generated scaffolds of multiple molecules in one scaffold tree instance if they have the same root scaffold. If molecules with different root scaffolds are given in the molecule set, multiple scaffold tree instances will be created and returned in a list, termed scaffold forest in the nomenclature of Scaffold Generator. In the construction of scaffold networks, only one parent scaffold, i.e. at least one ring, needs to be shared between two molecules to be able to combine them in one network. But the scaffold network data structure of Scaffold Generator is also able to handle multiple disconnected graphs of scaffolds in one instance, unlike the scaffold tree structure.</p>
        <p id="Par56">The tree and network data structures can generate an adjacency matrix representation of themselves that can be used for export or visualisation. Scaffold Generator offers an initial visualisation functionality for scaffold trees and networks based on the GraphStream library. The two structures can be visualised as graphs in a Java Swing application window. A layout algorithm attempts to place the nodes and edges as readable as possible but modifications to the layout can be done by dragging nodes. The display can also be zoomed and moved using key commands. Some figures in this publication have been created using the Scaffold Generator GraphStream display (Figs. <xref rid="Fig8" ref-type="fig">8</xref> and <xref rid="Fig9" ref-type="fig">9</xref>). While this visualisation was helpful during the development process for visual inspection and debugging, it is not considered powerful enough for real-world use cases and will most likely not be part of a CDK integration of Scaffold Generator. A scaffold hierarchy visualisation tool that might sprout from Scaffold Generator as a separate project would have to be very interactive, i.e. zoomable, draggable, and collapsable. Especially scaffold networks tend to grow very fast with the number of included molecules. Therefore, their display needs to be limited in a comprehensive way, e.g. by only visualising islands of active scaffolds as proposed by Varin et al. [<xref ref-type="bibr" rid="CR9">9</xref>]. Scaffold trees can become big as well, but they have the advantage that one can look at only one tree out of the forest at a time since they are disconnected.<fig id="Fig9"><label>Fig. 9</label><caption><p>Scaffold tree with activated stereochemistry consideration. The Scaffold tree of ( +)-thalidomide (PubChem CID 75792, on the left) and (−)-thalidomide (PubChem CID 92142, on the right) with activated stereochemistry consideration is shown in the Scaffold Generator GraphStream display. If the consideration of stereochemistry in tree building was turned off, both compounds would be sharing the same two-ring scaffold as well</p></caption><graphic xlink:href="13321_2022_656_Fig9_HTML" id="MO9"/></fig></p>
        <p id="Par57">When a tree or network is constructed, a crucial step is querying whether a scaffold is already part of it. This matching is done using SMILES representations of the scaffolds. The default setting is to use unique SMILES with aromaticity encoding but without stereochemical information. This can be adjusted, e.g. to include stereochemistry. Scaffold Generator generally retains given stereochemical information during scaffold creation and dissection by transferring the CDK <italic>IStereoElement</italic> [<xref ref-type="bibr" rid="CR61">61</xref>] objects to the newly created structures. But this only works if all defining elements of a stereo group, i.e. atoms and/or bonds, are still present in the generated substructures. Since in the majority of cases side chains define stereochemistry and stereochemical information is often not given or incomplete in molecular data sets, the consideration of given stereochemical information in tree or network construction is turned off per default as stated above. But it can be enabled for use cases where it is relevant (Fig. <xref rid="Fig9" ref-type="fig">9</xref>). Other molecular characteristics that can generally be taken into account or not (depending on the specific use case) for the determination of equivalence between two structures in cheminformatic analyses are tautomeric forms or protonation states, for example. Standardising these structures if needed has to be done in a data curation protocol that is applied to the input structures before they are passed to Scaffold Generator.</p>
        <p id="Par58">The instances representing scaffold nodes in the trees and networks contain structural information about their scaffold and have references to their parents in the hierarchies. Additionally, they preserve SMILES codes of their origin molecules, i.e. structures from the data set that possess the respective scaffold. These origins are subdivided into virtual and non-virtual ones. Non-virtual origin molecules are those that have the node scaffold as their original scaffold, e.g. their Murcko framework. Virtual origins on the other hand are molecules that generate the respective scaffold only through enumerative or Schuffenhauer dissection, i.e. it is one of their parent scaffolds. This concept has been introduced in Scaffold Generator based on the definition of virtual scaffolds described in the literature [<xref ref-type="bibr" rid="CR29">29</xref>, <xref ref-type="bibr" rid="CR30">30</xref>]. This term denotes scaffolds that are not directly in the data set but only identified when parent scaffolds are generated. If a scaffold node has only virtual origins, it is a virtual scaffold in Scaffold Generator. When analysing the results of a high-throughput screening (HTS) campaign, virtual scaffolds can be of particular interest if many of their child scaffolds exhibit bioactivity. A promising next step can be a second screening with a smaller library based on this scaffold because the first screen might have failed to include the true active scaffold structure.</p>
        <p id="Par59">An annotation of scaffold nodes in trees or networks with e.g. bioactivity data can be achieved via the stored origin molecules as well. One way to do this is to deposit the (unique) SMILES representation of the molecules in the studied data set linked to the respective annotation in a map structure. After the hierarchy is generated, its nodes can be annotated through comparing the origin molecule SMILES codes with the previously compiled annotation map. This way, e.g. scaffold nodes could be coloured according to bioactivity [<xref ref-type="bibr" rid="CR7">7</xref>] or the hierarchy display limited to active scaffolds [<xref ref-type="bibr" rid="CR9">9</xref>] in a more advanced visualisation tool as proposed above. During the development of Scaffold Generator, it was decided against keeping the original <italic>IAtomContainer</italic> instances with their structures and properties as origin references in favour of only their SMILES representations to reduce random-access memory (RAM) consumption.</p>
      </sec>
    </sec>
    <sec id="Sec12">
      <title>Aromaticity handling</title>
      <p id="Par60">Aromaticity information and detection is relevant in multiple Scaffold Generator functionalities. As stated above, when an aromatic ring is removed, bonds it shares with other rings are turned into double bonds in some cases to preserve hybridisations and aromaticity. Since this is not possible in all configurations, aromaticity information is also relevant in the determination of possibly removable rings (see above). And many fused aromatic ring systems, e.g. pyrene, are not dissected by Scaffold Generator as a result.</p>
      <p id="Par61">Aromaticity information is also significant in two of the 13 scaffold tree prioritisation rules for parent scaffold determination, namely rule 7 “A Fully Aromatic Ring System Must Not Be Dissected in a Way That the Resulting System Is Not Aromatic Any More”) and rule 11 “For Mixed Aromatic/Nonaromatic Ring Systems, Retain Nonaromatic Rings with Priority”) [<xref ref-type="bibr" rid="CR7">7</xref>]. The seventh rule makes it necessary to generate all possible parent scaffolds producible by the removal of one ring at the given dissection step and apply aromaticity determination to each of them to assess whether aromaticity was lost in the remaining ring(s). Because this consumes a lot of computation time and aromaticity should be conserved in most cases through the double-bond insertion, the application of the seventh prioritisation rule can be turned off individually in Scaffold Generator.</p>
      <p id="Par62">Aromaticity determination in CDK and hence in Scaffold Generator is carried out by <italic>Aromaticity</italic> instances [<xref ref-type="bibr" rid="CR62">62</xref>] constructed from the combination of an <italic>ElectronDonation</italic> model [<xref ref-type="bibr" rid="CR63">63</xref>] and a <italic>CycleFinder</italic> algorithm [<xref ref-type="bibr" rid="CR56">56</xref>]. The former defines which atom types can contribute how many electrons to the aromatic system and the latter determines the cycles that can form them. All aromaticity models in CDK loosely follow the Hückel rule heuristic [<xref ref-type="bibr" rid="CR62">62</xref>]. The specific <italic>Aromaticity</italic> instance used in Scaffold Generator can be configured because different models are suited for different applications.</p>
      <p id="Par63">Since multiple intermediate steps in scaffold dissection rely on aromaticity information of specific substructures, an initial aromaticity detection is applied at the primary scaffold generation. And again at the end of a scaffold dissection process, a final aromaticity detection is applied to all generated parent scaffolds to make sure that the aromaticity information stored on the scaffold objects is in agreement with the returned structures. This last step might lead to cases where the same ring is not detected as aromatic in a smaller parent scaffold but in the bigger child scaffold in which it is a substructure. This is due to the cycle finder algorithms usually employed for aromaticity detection that are not SSSR-/MCB-based but also take cycles into account that span multiple rings of the molecule. It should be interpreted in the way that the ring in the parent scaffold gained aromaticity in the child scaffold through combination with other rings.</p>
      <p id="Par64">An additional option is to turn off aromaticity detection completely in all Scaffold Generator routines. This was implemented because this process takes a lot of time and makes the results of scaffold dissection routines dependent on mostly toolkit-specific and heuristic aromaticity models. If it is disabled, initially defined aromaticity information in the input structures is preserved.</p>
      <p id="Par65">It must also be noted here again that all aromaticity models in CDK are based on the Hückel rule, which is the most used heuristic for aromaticity determination but not the only one and has a long list of exemptions. Furthermore, it is only a heuristic determination method for the concept of aromaticity, which is itself not uniquely defined [<xref ref-type="bibr" rid="CR64">64</xref>–<xref ref-type="bibr" rid="CR67">67</xref>].</p>
    </sec>
    <sec id="Sec13">
      <title>Settings and options</title>
      <p id="Par66">The functionalities and routines of Scaffold Generator can be adopted for various applications by a variety of settings available (Table <xref rid="Tab1" ref-type="table">1</xref>). Five different structural scaffold definitions can be chosen for initial scaffold extraction and scaffold dissection (Fig. <xref rid="Fig1" ref-type="fig">1</xref>). The default setting of the scaffold mode setting is to use the scaffold including all atoms directly connected to rings or linkers via non-single bonds.<table-wrap id="Tab1"><label>Table 1</label><caption><p>Settings and options of Scaffold Generator</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Setting name</th><th align="left">Options</th><th align="left">Default</th></tr></thead><tbody><tr><td align="left" rowspan="5">Scaffold mode</td><td align="left">Scaffold</td><td align="left" rowspan="5">Scaffold</td></tr><tr><td align="left">Murcko framework</td></tr><tr><td align="left">Basic wireframe</td></tr><tr><td align="left">Basic framework</td></tr><tr><td align="left">Elemental wireframe</td></tr><tr><td align="left">Determine aromaticity</td><td align="left">True/False</td><td align="left">True</td></tr><tr><td align="left">Aromaticity model</td><td align="left">All combinations of <italic>CycleFinder</italic> and <italic>ElectronDonation</italic> instances available in CDK</td><td align="left"><italic>ElectronDonation.cdk</italic> and <italic>Cycles.cdkAromaticSet</italic></td></tr><tr><td align="left">Retain only hybridisations at aromatic bonds</td><td align="left">True/False</td><td align="left">False</td></tr><tr><td align="left">Rule seven applied (“A Fully Aromatic Ring System Must Not Be Dissected in a Way That the Resulting System Is Not Aromatic Any More” [<xref ref-type="bibr" rid="CR7">7</xref>])</td><td align="left">True/False</td><td align="left">True</td></tr><tr><td align="left">SMILES generator</td><td align="left">All <italic>SmilesGenerator</italic> configurations available in CDK</td><td align="left"><italic>SmiFlavor.Unique</italic> and <italic>SmiFlavor.UseAromaticSymbols</italic></td></tr></tbody></table><table-wrap-foot><p>The settings listed in this table together with their options and default values are available in Scaffold Generator to adjust its results to specific use cases</p></table-wrap-foot></table-wrap></p>
      <p id="Par67">Multiple steps in scaffold dissection and the construction of Scaffold trees and networks require the testing for equivalence of molecular structures. These include the enumerative generation of all possible parent scaffolds to avoid duplicates and the identification of equivalent scaffolds when merging trees or networks. In Scaffold Generator, this is done using CDK unique SMILES codes. To allow the user the definition of structural features taken into account at these steps, e.g. stereochemistry, isotopes, or aromaticity, the CDK <italic>SmilesGenerator</italic> [<xref ref-type="bibr" rid="CR68">68</xref>] instance employed can be set externally. By default, stereochemistry and atomic masses are not encoded but aromaticity is. The set <italic>SmilesGenerator</italic> instance is also used to create SMILES codes for origin molecules of a respective scaffold stored on nodes of scaffold trees and networks. It is important to note here that molecular characteristics of the input molecules and resulting (parent) scaffolds, like protonation states or tautomeric forms, are taken by Scaffold Generator “as is”, or rather as they are represented in the chosen SMILES encoding. The only exemption is the detection of aromatic systems which is done on input structures by default. Therefore, users have to take care of preprocessing their input data sets according to their specific needs, e.g. standardising tautomeric forms and protonation states in all input molecules, before using Scaffold Generator.</p>
      <p id="Par68">Another option is to exclude or include the Schuffenhauer prioritisation rule 7. This rule makes it necessary to apply aromaticity detection to different parent scaffolds created for testing purposes. This procedure is time-consuming and might not lead to a definite decision in favour of one specific parent scaffold in most cases. But by default, it is activated to be in accordance with the originally published scaffold tree implementation [<xref ref-type="bibr" rid="CR7">7</xref>].</p>
      <p id="Par69">The aromaticity detection done in multiple steps of scaffold dissection (see above) can be configured by choosing which CDK aromaticity model is to be employed for this purpose. By default, aromaticity is determined using the <italic>ElectronDonation.cdk</italic> model and the <italic>Cycles.cdkAromaticSet</italic> cycle finder algorithm.</p>
      <p id="Par70">Additionally, aromaticity detection can be turned off completely in all routines to preserve initial aromaticity information of the input structures and make the results less dependent on specific aromaticity models. If this is the case, rule 7 is automatically excluded from the Schuffenhauer prioritisation rules as well.</p>
      <p id="Par71">The fifth option of Scaffold Generator concerns post-processing after ring removal: As explained above, a double bond is inserted in some cases when an aromatic ring is removed to preserve hybridisation and aromaticity in the remaining ring(s) if possible. As an option, this insertion of double bonds can also be applied to non-aromatic systems wherever there are two sp<sup>2</sup> hybridised atoms adjacent to a single bond that was previously shared between two rings. The bond is turned into a double bond if the two adjacent atoms would lose their sp<sup>2</sup> hybridisation because of the ring removal and if it is possible without violating valence rules (Fig. <xref rid="Fig10" ref-type="fig">10</xref>).<fig id="Fig10"><label>Fig. 10</label><caption><p>Parent scaffold of 1,2,3,4,6,7-hexahydroisoquinoline depending on the set value of the retain only hybridisations at aromatic bonds setting. When the cyclohexadiene ring is removed from 1,2,3,4,6,7-hexahydroisoquinoline (PubChem CID 89002720) in parent scaffold generation, the formerly shared bond with the piperidine ring is turned into a double bond if the retain only hybridisations at aromatic bonds setting is set to false. In this case, double bonds are always inserted if possible to preserve atom hybridisations in the remaining ring. If the setting is set to true, this is only done when an aromatic ring is removed. In this case, no double bond is inserted in the remaining piperidine ring</p></caption><graphic xlink:href="13321_2022_656_Fig10_HTML" id="MO10"/></fig></p>
    </sec>
    <sec id="Sec14">
      <title>Software architecture</title>
      <p id="Par72">The central class of the Scaffold Generator library is <italic>ScaffoldGenerator</italic>. When instantiated, all available settings are set to their default values (Table <xref rid="Tab1" ref-type="table">1</xref>) and can be adjusted using methods of the class. All main functionalities of Scaffold Generator described above can be accessed through an instance of the <italic>ScaffoldGenerator</italic> class, i.e. generation of scaffolds, their decomposition into building blocks, parent scaffold generation through enumerative or Schuffenhauer dissection, and the generation of scaffolds trees and networks. The two scaffold hierarchy structures are represented by a class of their own, respectively: <italic>ScaffoldTree</italic> and <italic>ScaffoldNetwork</italic>. Both extend the same base class, <italic>ScaffoldNodeCollectionBase</italic>, for basic functionalities and manage scaffold nodes as <italic>TreeNode</italic> or <italic>NetworkNode</italic> instances that both stem from the abstract base class <italic>ScaffoldNodeBase</italic>. These six classes manage scaffold structures, parent–child relationships of scaffold nodes, and origin molecule references. Trees and networks can be traversed and merged with instances of the same class, respectively. Scaffold trees can additionally be checked for validity, i.e. whether all nodes have parents, except the root node, and there is only one root node. Scaffold tree and network instances can also be exported as adjacency matrices along with scaffold structures for each represented node. This is utilised by the class <italic>GraphStreamUtility</italic> to display scaffold trees and networks in an interactive Java Swing application window with the GraphStream library.</p>
      <p id="Par73">The JUnit [<xref ref-type="bibr" rid="CR69">69</xref>] test class <italic>ScaffoldGeneratorTest</italic> implements automatic tests for the basic Scaffold Generator routines, tests employing the GraphStream visualisation of scaffold trees and networks for visual inspection, and code examples for the application of Scaffold Generator. Another important set of test routines checks whether the Schuffenhauer prioritisation rules as implemented in Scaffold Generator are in accordance with the original implementation, based on the examples given in the scaffold tree publication [<xref ref-type="bibr" rid="CR7">7</xref>]. Furthermore, the COCONUT database is used to test the basic routines on a large set of natural product (NP) structures.</p>
      <p id="Par74">The class <italic>PerformanceTest</italic> represents a command-line application based on Scaffold Generator that can be used to assess its computational speed on a given structure data file (SDF). The results on COCONUT and DrugBank [<xref ref-type="bibr" rid="CR70">70</xref>, <xref ref-type="bibr" rid="CR71">71</xref>] are presented in the “<xref rid="Sec15" ref-type="sec">Results and discussion</xref>” section.</p>
    </sec>
  </sec>
  <sec id="Sec15">
    <title>Results and discussion</title>
    <p id="Par75">A programming library for molecular scaffold functionalities named Scaffold Generator was implemented based on the Chemistry Development Kit (CDK). The openly available source code of Scaffold Generator can be found on GitHub: <ext-link ext-link-type="uri" xlink:href="https://github.com/Julian-Z98/ScaffoldGenerator">https://github.com/Julian-Z98/ScaffoldGenerator</ext-link>. It can be utilised to extract different types of scaffolds from input molecules and dissect them further into parent scaffolds using an enumerative generation of all possible ones or a dissection according to the scaffold tree prioritisation rules. Additionally, the scaffolds and parent scaffolds can be arranged in scaffold trees and networks with these hierarchies being visualised.</p>
    <sec id="Sec16">
      <title>Performance</title>
      <p id="Par76">Scaffold Generator can be packaged in a JAR file and used as a command-line application. It requires an SD file as input parameter and creates a performance snapshot of the main functionalities of Scaffold Generator with the given data set. First, all molecules are imported and stored in memory. From these, all structures having more than ten rings are discarded. This is done because they occur rather rarely but would influence the overall processing time disproportionally. No further filtering or preprocessing, e.g. removal of counter-ions or elimination of duplicates, is done for the purpose of this performance snapshot and the following exemplary analyses. For an initial performance snapshot, all remaining molecules are processed according to the enumerative generation of parent scaffolds and the parent scaffold generation according to the scaffold tree prioritisation rules. Afterwards, the dataset is subdivided into equally large portions. The total number of fractions has to be specified in the second command-line parameter. In each following step, a growing number of created molecule subsets is combined and all included structures used to build a scaffold network and a scaffold forest, i.e. a set of scaffold trees. The number of molecules and the needed processing time is logged in every step. In the final step, all scaffolds in the network and the trees, respectively, and their frequencies determined based on their numbers of origin molecules are exported to an output file. The scaffold structures are exported as SMILES strings.</p>
      <p id="Par77">For this article, two performance snapshots were conducted. The first one was done on the DrugBank database containing drug molecules (DrugBank “all structures” downloaded on 8th November 2021). For comparison, the COCONUT NP database (downloaded on 1st December 2021) was analysed as well. Additionally, for some analyses, a subset of COCONUT containing 40,000 structures was compiled from the complete collection using the RDKit MaxMin algorithm implementation [<xref ref-type="bibr" rid="CR49">49</xref>, <xref ref-type="bibr" rid="CR72">72</xref>]. All analyses were conducted on a workstation computer with an Intel(R) Xeon(R) Gold 6254 CPU (18 cores, 3.10 GHz) and 512 GB RAM on a single core only (no multi-core parallelization). All Scaffold Generator settings were set to their default values.</p>
      <p id="Par78">The complete COCONUT database contained 406,747 NP structures (Table <xref rid="Tab2" ref-type="table">2</xref>). 11,297 of these possessed 11 or more rings and were filtered. The remaining 395,450 NP were subjected to the parent scaffold generation according to the Schuffenhauer rules, which took 1,211,063 ms (20 min). On average, the dissection of one COCONUT NP into its scaffold and parent scaffolds according to the Schuffenhauer prioritisation rules took 3 ms. Generating all possible parent scaffolds with the enumerative routine took 2,037,357 ms (34 min) for the same molecule set. This is 5 ms per molecule on average.<table-wrap id="Tab2"><label>Table 2</label><caption><p>Performance snapshot of the mere parent scaffold generation routines applied to COCONUT and DrugBank</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"/><th align="left">COCONUT</th><th align="left">DrugBank</th></tr></thead><tbody><tr><td align="left">Initial number of molecules</td><td align="left">406,747</td><td align="left">11,172</td></tr><tr><td align="left">Number of molecules after filtering (&lt; 11 rings)</td><td align="left">395,450</td><td align="left">11,127</td></tr><tr><td align="left">Schuffenhauer dissection total</td><td align="left">1,211,063 ms (20 min)</td><td align="left">27,656 ms (0.46 min)</td></tr><tr><td align="left">Schuffenhauer dissection average per molecule</td><td align="left">3 ms</td><td align="left">2.5 ms</td></tr><tr><td align="left">Enumerative dissection total</td><td align="left">2,037,357 ms (34 min)</td><td align="left">33,938 ms (0.57 min)</td></tr><tr><td align="left">Enumerative dissection average per molecule</td><td align="left">5 ms</td><td align="left">3 ms</td></tr></tbody></table></table-wrap></p>
      <p id="Par79">The DrugBank data set of 11,172 molecules contained 45 structures with more than 10 rings that needed to be filtered. The Schuffenhauer dissection of all structures took 27,656 ms (0.46 min, 2.5 ms per molecule on average) and the enumerative parent scaffold generation took 33,938 ms (0.57 min, 3 ms per molecule on average).</p>
      <p id="Par80">It is interesting to note that the enumeration of all possible parent scaffolds at every step required more computation time than the application of up to 13 prioritisation rules at every step. This was the case for NP as well as drug molecules which have less rings in general. The latter characteristic of drug molecules as opposed to NP is also considered the reason for the lower time it took on average to dissect the DrugBank structures. It must also be noted that these processes, the pure dissection of each molecule, scale linearly with the number of molecules and can be parallelised in multiple threads for further speed up.</p>
      <p id="Par81">In a second step, it was measured how much time it took to construct scaffold forests and networks from an increasing number of molecules taken from the COCONUT subset and DrugBank, respectively. Figure <xref rid="Fig11" ref-type="fig">11</xref> shows the results for the area of molecule number of DrugBank (0–11,127 molecules) and Fig. <xref rid="Fig12" ref-type="fig">12</xref> for the area of the COCONUT subset (0–39,324 molecules). Exponential approximations show that the individual processes scaled between O(N<sup>1.2</sup>) and O(N<sup>1.6</sup>). This comparatively good scaling below a quadratic behaviour is most likely due to the stepwise construction of the scaffold hierarchies that repeats the two steps of scaffold dissection and integration for each molecule instead of generating all scaffolds first and constructing the hierarchy later using substructure searches to establish parent–child scaffold relationships.<fig id="Fig11"><label>Fig. 11</label><caption><p>Performance snapshot of scaffold forest and scaffold network construction in DrugBank range of molecule number. The graph visualises the processing time it took to construct a scaffold forest or scaffold network depending on the number of input molecules taken from COCONUT or DrugBank. Exponential approximations have been applied to assess the scaling behaviour of the processes. The given range of the number of molecules is adjusted to the size of DrugBank (11,127 molecules)</p></caption><graphic xlink:href="13321_2022_656_Fig11_HTML" id="MO11"/></fig><fig id="Fig12"><label>Fig. 12</label><caption><p>Performance snapshot of scaffold forest and scaffold network construction in COCONUT subset range of molecule number. The graph visualises the processing time it took to construct a scaffold forest or scaffold network depending on the number of input molecules taken from COCONUT or DrugBank. Exponential approximations have been applied to assess the scaling behaviour of the processes. The given range of the number of molecules is adjusted to the size of the curated COCONUT subset (39,324 molecules)</p></caption><graphic xlink:href="13321_2022_656_Fig12_HTML" id="MO12"/></fig></p>
      <p id="Par82">Both, the generation of scaffold networks and trees from NP, scaled with higher exponents than the analogous processes for drug molecules, which can again be explained by the generally higher number of rings in the former class of compounds.</p>
      <p id="Par83">The generation of scaffold networks from NP structures scaled with the highest exponent. Since the number of scaffolds in a network grows faster than in a forest because more parent scaffolds are constructed for each molecule, it takes more time in network construction to integrate new molecules, i.e. their scaffolds. This traversal of the scaffold forest or network for the integration of new scaffolds is considered to be the algorithm step that dictates the scaling behaviour. In addition, this step would be more challenging to parallelise and speed up through multithreading because the same data structure would be accessed by all threads. The scaffold tree and network representations in Scaffold Generator are currently not implemented to be thread-safe, i.e. safe to use for concurrent modification.</p>
      <p id="Par84">According to the exponential approximation for the COCONUT subset of 40,000 NP structures, a scaffold network of up to 456,000 NP molecules could still be constructed in a single day using Scaffold Generator. The measured runtime for the complete COCONUT database of 395,450 compounds with less than 11 rings was 16.5 h (5 h for the construction of a scaffold forest). This is below the runtime of 19.2 h expected for this data set size according to the exponential function approximating the scaling behaviour of the COCONUT subset network generation. The underlying effect can be that with growing size of the network, less new scaffolds need to be integrated per newly added molecule. Here, one also has to take into account that the subset used for the performance and scaling snapshot was compiled using a diversity-preserving method [<xref ref-type="bibr" rid="CR72">72</xref>]. This may have increased the effect even further.</p>
      <p id="Par85">The memory consumption of the scaffold tree and scaffold network constructed from the complete COCONUT database was below the 512 GB RAM available at all times but similar experiments on a machine with 256 GB failed.</p>
    </sec>
    <sec id="Sec17">
      <title>Most frequent scaffolds in COCONUT and DrugBank</title>
      <p id="Par86">The Scaffold Generator command-line application logs the numbers of different scaffolds in network and forest built from the given data set and exports the scaffolds as SMILES representations with their frequencies as a final step. These scaffold numbers for COCONUT and DrugBank can be found in Table <xref rid="Tab3" ref-type="table">3</xref>. The COCONUT scaffold network contained 392,888 different (parent) scaffolds, while the DrugBank network contained 23,765. The COCONUT scaffold forest consisted of only 173,526 scaffolds distributed among 6200 individual scaffold trees. For DrugBank, it was 10,716 scaffolds in 766 trees. According to these numbers, the enumerative parent scaffold generation produced more than twice as many scaffolds as the Schuffenhauer dissection. Using a classification by root scaffolds, the two data sets could be classified into a number of different classes according to the number of resulting scaffold trees.<table-wrap id="Tab3"><label>Table 3</label><caption><p>Numbers of resulting scaffolds in scaffold network and scaffold forest constructed from COCONUT and DrugBank</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"/><th align="left">COCONUT</th><th align="left">DrugBank</th></tr></thead><tbody><tr><td align="left">Number of molecules after filtering (&lt; 11 rings)</td><td align="left">395,450</td><td align="left">11,127</td></tr><tr><td align="left">Number of scaffold network scaffolds</td><td align="left">392,888</td><td align="left">23,765</td></tr><tr><td align="left">Number of scaffold trees</td><td align="left">6200</td><td align="left">766</td></tr><tr><td align="left">Number of scaffold tree scaffolds</td><td align="left">173,526</td><td align="left">10,716</td></tr></tbody></table></table-wrap></p>
      <p id="Par87">The 20 most frequent scaffolds in the COCONUT scaffold network and scaffold forest, respectively, as determined in this exemplary showcase analysis, are displayed in Figs. <xref rid="Fig13" ref-type="fig">13</xref> and <xref rid="Fig14" ref-type="fig">14</xref>. The frequencies are given as numbers of origin molecules that produced the respective scaffold in parent scaffold generation or had it as an original scaffold. The frequencies for the network scaffolds correspond precisely to the number of molecules that possess the respective scaffold as a substructure, whereas the frequencies for the forest scaffolds correspond to the number of molecules that possess the scaffold as their most characteristic or central parent scaffold in one step of the Schuffenhauer dissection according to the prioritisation rules. Hence, 225,272 COCONUT molecules contain a benzene ring (Fig. <xref rid="Fig13" ref-type="fig">13</xref>) but only in 29,258 molecules, it is the characteristic or central parent scaffold (Fig. <xref rid="Fig14" ref-type="fig">14</xref>). Still, it is striking that the benzene ring is the most frequent root scaffold in the forest because some Schuffenhauer prioritisation rules explicitly assign a low relevance to it and favour its removal over that of other rings.<fig id="Fig13"><label>Fig. 13</label><caption><p>20 most frequent scaffold network scaffolds of COCONUT with their numbers of origin molecules</p></caption><graphic xlink:href="13321_2022_656_Fig13_HTML" id="MO13"/></fig><fig id="Fig14"><label>Fig. 14</label><caption><p>20 most frequent scaffold forest scaffolds of COCONUT with their numbers of origin molecules</p></caption><graphic xlink:href="13321_2022_656_Fig14_HTML" id="MO14"/></fig></p>
      <p id="Par88">As could be expected, the first ranks in both charts are dominated by single-ring scaffolds, since they represent the final stage of scaffold dissection and have the most origin molecules, therefore. The first ranks are also dominated by 6-membered rings and parent scaffolds that are most likely resulting from the dissection of polyketides. The frequency of oxygen-containing scaffolds is higher than that of nitrogen, as can be expected for NP. The empty cells in both charts represent empty scaffolds, i.e. scaffolds of molecules that have no rings. Hence, 21,882 molecules in COCONUT do not possess any circular structures. Of 406,747, the share of linear molecules is low (5%), but one should keep in mind that these structures are usually completely neglected in ring-based analyses like most scaffold methods.</p>
      <p id="Par89">Figures <xref rid="Fig15" ref-type="fig">15</xref> and <xref rid="Fig16" ref-type="fig">16</xref> analogously display the most frequent scaffolds of the created DrugBank scaffold network and scaffold forest. The first observation here is that the share of nitrogen hetero cycles is higher in these drug molecules than in NP structures. This has been reported before [<xref ref-type="bibr" rid="CR73">73</xref>]. Also, the share of linear molecules (1467 of 11,172, 13%) is much higher than in NP. Benzene is again the most frequent scaffold in both analyses. But while it is by far the most frequent scaffold in the DrugBank network (6578 origin molecules compared to 972 for the second most frequent scaffold, pyridine), its prominence is way lower in the forest (1819 origin molecules compared to 611 for pyrimidine in second place).<fig id="Fig15"><label>Fig. 15</label><caption><p>20 most frequent scaffold network scaffolds of DrugBank with their numbers of origin molecules</p></caption><graphic xlink:href="13321_2022_656_Fig15_HTML" id="MO15"/></fig><fig id="Fig16"><label>Fig. 16</label><caption><p>20 most frequent scaffold forest scaffolds of DrugBank with their numbers of origin molecules</p></caption><graphic xlink:href="13321_2022_656_Fig16_HTML" id="MO16"/></fig></p>
      <p id="Par90">The core results of this showcase analysis comparing the most frequent NP and drug molecule scaffolds (i.e. commonness of benzene, oxygen as the dominant hetero atom in NP, nitrogen in drug molecules) are in general agreement with similar studies [<xref ref-type="bibr" rid="CR15">15</xref>, <xref ref-type="bibr" rid="CR19">19</xref>, <xref ref-type="bibr" rid="CR74">74</xref>–<xref ref-type="bibr" rid="CR76">76</xref>]. A significantly higher prevalence of aromatic scaffolds in drug molecules as opposed to NP that most of these studies report cannot be observed here. This stresses that the results presented here are only a proof of concept for the application of Scaffold Generator. A more detailed analysis would first of all need an extensive data curation pipeline to standardise input molecules or filter or mark duplicates between the two data sets. Furthermore, a more extensive analysis of physicochemical property distributions in the extracted scaffolds could be conducted.</p>
      <p id="Par91">This analysis of the most frequent scaffolds in COCONUT and DrugBank is only supposed to serve as a basic example for what kind of studies Scaffold Generator may be used. These results may also have been achieved through the mere dissection of scaffolds into parent scaffolds and a subsequent matching and counting of the resulting structures. With its ability to generate and represent scaffold networks and forests, Scaffold Generator may be applied to a wider variety of analyses like hierarchical classification and clustering, chemical space mapping, or HTS data interpretation. But for these, a more powerful visualisation than the existing GraphStream-based one would be very helpful.</p>
    </sec>
    <sec id="Sec18">
      <title>Future work</title>
      <p id="Par92">Scaffold Generator meets the need for an open, versatile, CDK-based library for scaffold functionalities that can be employed in software and workflows built upon this cheminformatics toolkit. To make it more accessible to potential users, an integration into the CDK core modules would be desirable since the toolkit would benefit from having more scaffold functionalities available. A corresponding request to the library maintainers has been made.</p>
      <p id="Par93">Another aspect that would make Scaffold Generator more applicable is a more powerful visualisation functionality than the currently available one based on the GraphStream library. It should display the hierarchies in suitable layouts, i.e. a tree layout for scaffold trees and a similar layout for scaffold networks that arranges the network in its defined levels. The display should be draggable, zoomable, and collapsable. The latter aspect is especially important for scaffold networks that tend to grow very fast with the number of included molecules. For example, all scaffolds below a chosen node should be easily collapsable or only active islands of scaffolds should be displayed when bioactivity data is linked to the given molecules [<xref ref-type="bibr" rid="CR9">9</xref>]. Especially the analysis of HTS data or the derivation of SAR insights would benefit from a versatile scaffold hierarchy visualisation. To further support these analyses, methods to display scaffolds and their parent scaffolds hierarchically in a standardised, directly visually accessible way, like the work of Alex M. Clark [<xref ref-type="bibr" rid="CR77">77</xref>], should be explored in future developments.</p>
      <p id="Par94">Scaffold Generator can serve as core for a variety of scaffold-based functionalities. Classification, clustering, and scaffold-based fingerprints are possible applications that can be used in a second step for picking diverse training and test sets for machine learning models for example [<xref ref-type="bibr" rid="CR12">12</xref>]. The concept of scaffolds and parent scaffolds as characteristic molecular fragments of molecules can help in the development of QSAR/QSPR models or computer-assisted structure elucidation. Applied to NP, scaffolds can serve as starting points for the creation of pseudo-NP that are regarded as promising candidates for new drug molecules [<xref ref-type="bibr" rid="CR78">78</xref>, <xref ref-type="bibr" rid="CR79">79</xref>]. Additionally, the study of macrocyclic structures in NP with existing scaffold methodologies and the development of new, specialised approaches for these structures are promising ways of identifying new drug candidates [<xref ref-type="bibr" rid="CR20">20</xref>–<xref ref-type="bibr" rid="CR23">23</xref>].</p>
      <p id="Par95">Possible functional extensions of Scaffold Generator include the incorporation of more abstract scaffold representations, based on the work by Xu and Johnson [<xref ref-type="bibr" rid="CR25">25</xref>], and the possibility to build scaffold networks or trees encompassing multiple scaffold definitions of varying chemical resolution, like in Molecular Anatomy [<xref ref-type="bibr" rid="CR26">26</xref>] or the tree-like classification of Medina-Franco et al. [<xref ref-type="bibr" rid="CR24">24</xref>]. A major addition to the functionality of Scaffold Generator would be the inclusion of analog series based scaffold methodologies. Since these have demonstrated significant relevance in the past years, this addition must be considered.</p>
    </sec>
  </sec>
  <sec id="Sec19">
    <title>Conclusion</title>
    <p id="Par96">An open, CDK-based, stand-alone Java library named Scaffold Generator has been developed to meet the need for scaffold functionalities in CDK-based workflows and software. It offers the extraction of different scaffolds, the dissection of scaffolds into building blocks, and the generation of parent scaffolds in two different ways. An enumerative parent scaffold generation routine produces all parent scaffolds that can be created through the removal of terminal rings and forms the basis for scaffold networks. Alternatively, only characteristic or central parent scaffolds can be extracted according to the Schuffenhauer prioritisation rules that are used to build scaffold trees. Scaffold trees and networks can be internally represented as data structures and visualised in a basic display based on the GraphStream library. The generation of a scaffold network from more than 450,000 natural product structures can be achieved in a single day. A request for the integration of Scaffold Generator into the CDK core modules has been made and the process started. Scaffold Generator may serve as a starting point for diverse scaffold-based software tools, e.g. for clustering or fingerprint functionalities.</p>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>CDK</term>
        <def>
          <p id="Par2">Chemistry Development Kit</p>
        </def>
      </def-item>
      <def-item>
        <term>CID</term>
        <def>
          <p id="Par3">Compound IDentifier</p>
        </def>
      </def-item>
      <def-item>
        <term>CNP</term>
        <def>
          <p id="Par4">COCONUT Natural Product</p>
        </def>
      </def-item>
      <def-item>
        <term>COCONUT</term>
        <def>
          <p id="Par5">COlleCtion of Open Natural prodUcTs</p>
        </def>
      </def-item>
      <def-item>
        <term>CPU</term>
        <def>
          <p id="Par6">Central Processing Unit</p>
        </def>
      </def-item>
      <def-item>
        <term>HierS</term>
        <def>
          <p>Hierarchical Scaffold clustering</p>
        </def>
      </def-item>
      <def-item>
        <term>HTS</term>
        <def>
          <p id="Par7">High-Throughput Screening</p>
        </def>
      </def-item>
      <def-item>
        <term>JAR</term>
        <def>
          <p id="Par8">Java ARchive</p>
        </def>
      </def-item>
      <def-item>
        <term>MCB</term>
        <def>
          <p id="Par9">Minimum Cycle Basis</p>
        </def>
      </def-item>
      <def-item>
        <term>NP</term>
        <def>
          <p id="Par10">Natural Product(s)</p>
        </def>
      </def-item>
      <def-item>
        <term>QSAR/QSPR</term>
        <def>
          <p id="Par11">Quantitative Structure Activity/Property Relationship</p>
        </def>
      </def-item>
      <def-item>
        <term>R</term>
        <def>
          <p id="Par12">Registered trademark</p>
        </def>
      </def-item>
      <def-item>
        <term>RAM</term>
        <def>
          <p id="Par13">Random-Access Memory</p>
        </def>
      </def-item>
      <def-item>
        <term>RECAP</term>
        <def>
          <p id="Par14">REtrosynthetic Combinatorial Analysis Procedure</p>
        </def>
      </def-item>
      <def-item>
        <term>SAR</term>
        <def>
          <p id="Par15">Structure Activity Relationship</p>
        </def>
      </def-item>
      <def-item>
        <term>SCONP</term>
        <def>
          <p>Structural Classification Of Natural Products</p>
        </def>
      </def-item>
      <def-item>
        <term>SD(F)</term>
        <def>
          <p id="Par16">Structure Data (File)</p>
        </def>
      </def-item>
      <def-item>
        <term>SMARTS</term>
        <def>
          <p id="Par17">SMILES Arbitrary Target Specification</p>
        </def>
      </def-item>
      <def-item>
        <term>SMILES</term>
        <def>
          <p id="Par18">Simplified Molecular Line Entry System</p>
        </def>
      </def-item>
      <def-item>
        <term>SSSR</term>
        <def>
          <p id="Par19">Smallest Set of Smallest Rings</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher's Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>The authors would like to thank the communities that created the open software libraries utilised in the development of Scaffold Generator, especially the CDK community for support during this process. Further thanks go to the authors of the scaffold tree publication, Schuffenhauer et al., for describing their prioritisation rules in a detailed way that allowed straightforward reimplementation.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Author contributions</title>
    <p>JS designed and supervised the study. JS and JZ designed, tested, applied, and validated the features of Scaffold Generator and wrote the paper. JZ developed the Java code. CS and AZ conceived the study and acquired the funding. All authors read and approved the final manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>Open Access funding enabled and organized by Projekt DEAL. This work was supported by the Carl-Zeiss-Foundation.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>Data and software are freely available under the LGPL v2.1 licence. The source code of Scaffold Generator is available on GitHub at <ext-link ext-link-type="uri" xlink:href="https://github.com/Julian-Z98/ScaffoldGenerator">https://github.com/Julian-Z98/ScaffoldGenerator</ext-link></p>
    <p>Project name: Scaffold Generator. Project home page: <ext-link ext-link-type="uri" xlink:href="https://github.com/Julian-Z98/ScaffoldGenerator">https://github.com/Julian-Z98/ScaffoldGenerator</ext-link>. Current version: v1.0.3. DOI of archived current version: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5281/zenodo.7245473">https://doi.org/10.5281/zenodo.7245473</ext-link>. Operating system(s): Platform independent. Programming language: Java. Other requirements: Java v17 or higher, Maven v4 or higher, CDK v2.8 (fetched by Maven), GraphStream v2.0 (fetched by Maven), JUnit v4.13.2 (fetched by Maven). Licence: GNU Lesser General Public Licence (LGPL) v2.1. Any restrictions to use by non-academics: None</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar1" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par97">AZ is Co-founder of GNWI—Gesellschaft für naturwissenschaftliche Informatik mbH, Dortmund, Germany.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Schneider</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Neidhart</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Giller</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Schmid</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>“Scaffold-Hopping” by topological pharmacophore search: a contribution to virtual screening</article-title>
        <source>Angew Chem Int Ed</source>
        <year>1999</year>
        <volume>38</volume>
        <issue>19</issue>
        <fpage>2894</fpage>
        <lpage>2896</lpage>
        <pub-id pub-id-type="doi">10.1002/(SICI)1521-3773(19991004)38:19&lt;2894::AID-ANIE2894&gt;3.0.CO;2-F</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Böhm</surname>
            <given-names>H-J</given-names>
          </name>
          <name>
            <surname>Flohr</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Stahl</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Scaffold hopping</article-title>
        <source>Drug Discov Today Technol</source>
        <year>2004</year>
        <volume>1</volume>
        <issue>3</issue>
        <fpage>217</fpage>
        <lpage>224</lpage>
        <pub-id pub-id-type="doi">10.1016/j.ddtec.2004.10.009</pub-id>
        <?supplied-pmid 24981488?>
        <pub-id pub-id-type="pmid">24981488</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <mixed-citation publication-type="other">E. A. (1924) Markush, ‘Pyrazolone dye and process of making the same’, USA101506316. <ext-link ext-link-type="uri" xlink:href="https://pdfpiw.uspto.gov/.piw?PageNum=USA101506316&amp;docid=01506316&amp;IDKey=83E682D73B35&amp;HomeUrl=http%3A%2F%2Fpatft.uspto.gov%2Fnetacgi%2Fnph-Parser%3FSect1%3DPTO1%2526Sect2%3DHITOFF%2526p%3D1%2526u%3D%2Fnetahtml%2FPTO%2Fsrchnum.html%2526r%3D1%2526f%3DG%2526l%3D50%2526d%3DPALL%2526s1%3D1506316.PN.%2526OS%3D%2526RS%3D">https://pdfpiw.uspto.gov/.piw?PageNum=USA101506316&amp;docid=01506316&amp;IDKey=83E682D73B35&amp;HomeUrl=http%3A%2F%2Fpatft.uspto.gov%2Fnetacgi%2Fnph-Parser%3FSect1%3DPTO1%2526Sect2%3DHITOFF%2526p%3D1%2526u%3D%2Fnetahtml%2FPTO%2Fsrchnum.html%2526r%3D1%2526f%3DG%2526l%3D50%2526d%3DPALL%2526s1%3D1506316.PN.%2526OS%3D%2526RS%3D</ext-link> Accessed 07 Jan 2022 [cito:citesAsAuthority]</mixed-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Schuffenhauer</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Varin</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>Rule-based classification of chemical structures by scaffold</article-title>
        <source>Mol Inform</source>
        <year>2011</year>
        <volume>30</volume>
        <issue>8</issue>
        <fpage>646</fpage>
        <lpage>664</lpage>
        <pub-id pub-id-type="doi">10.1002/minf.201100078</pub-id>
        <?supplied-pmid 27467257?>
        <pub-id pub-id-type="pmid">27467257</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Koch</surname>
            <given-names>MA</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Charting biologically relevant chemical space: a structural classification of natural products (SCONP)</article-title>
        <source>Proc Natl Acad Sci</source>
        <year>2005</year>
        <volume>102</volume>
        <issue>48</issue>
        <fpage>17272</fpage>
        <lpage>17277</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.0503647102</pub-id>
        <?supplied-pmid 16301544?>
        <pub-id pub-id-type="pmid">16301544</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Schuffenhauer</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Brown</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Ertl</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Jenkins</surname>
            <given-names>JL</given-names>
          </name>
          <name>
            <surname>Selzer</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Hamon</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Clustering and rule-based classifications of chemical structures evaluated in the biological activity space</article-title>
        <source>J Chem Inf Model</source>
        <year>2007</year>
        <volume>47</volume>
        <issue>2</issue>
        <fpage>325</fpage>
        <lpage>336</lpage>
        <pub-id pub-id-type="doi">10.1021/ci6004004</pub-id>
        <?supplied-pmid 17286395?>
        <pub-id pub-id-type="pmid">17286395</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Schuffenhauer</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Ertl</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Roggo</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Wetzel</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Koch</surname>
            <given-names>MA</given-names>
          </name>
          <name>
            <surname>Waldmann</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>The scaffold tree—visualization of the scaffold universe by hierarchical scaffold classification</article-title>
        <source>J Chem Inf Model</source>
        <year>2007</year>
        <volume>47</volume>
        <issue>1</issue>
        <fpage>47</fpage>
        <lpage>58</lpage>
        <pub-id pub-id-type="doi">10.1021/ci600338x</pub-id>
        <?supplied-pmid 17238248?>
        <pub-id pub-id-type="pmid">17238248</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Varin</surname>
            <given-names>T</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Compound set enrichment: a novel approach to analysis of primary HTS data</article-title>
        <source>J Chem Inf Model</source>
        <year>2010</year>
        <volume>50</volume>
        <issue>12</issue>
        <fpage>2067</fpage>
        <lpage>2078</lpage>
        <pub-id pub-id-type="doi">10.1021/ci100203e</pub-id>
        <?supplied-pmid 21073183?>
        <pub-id pub-id-type="pmid">21073183</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Varin</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Schuffenhauer</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Ertl</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Renner</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Mining for bioactive scaffolds with scaffold networks: improved compound set enrichment from primary screening data</article-title>
        <source>J Chem Inf Model</source>
        <year>2011</year>
        <volume>51</volume>
        <issue>7</issue>
        <fpage>1528</fpage>
        <lpage>1538</lpage>
        <pub-id pub-id-type="doi">10.1021/ci2000924</pub-id>
        <?supplied-pmid 21615076?>
        <pub-id pub-id-type="pmid">21615076</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wilkens</surname>
            <given-names>SJ</given-names>
          </name>
          <name>
            <surname>Janes</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Su</surname>
            <given-names>AI</given-names>
          </name>
        </person-group>
        <article-title>HierS: hierarchical scaffold clustering using topological chemical graphs</article-title>
        <source>J Med Chem</source>
        <year>2005</year>
        <volume>48</volume>
        <issue>9</issue>
        <fpage>3182</fpage>
        <lpage>3193</lpage>
        <pub-id pub-id-type="doi">10.1021/jm049032d</pub-id>
        <?supplied-pmid 15857124?>
        <pub-id pub-id-type="pmid">15857124</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bemis</surname>
            <given-names>GW</given-names>
          </name>
          <name>
            <surname>Murcko</surname>
            <given-names>MA</given-names>
          </name>
        </person-group>
        <article-title>The properties of known drugs. 1. molecular frameworks</article-title>
        <source>J Med Chem</source>
        <year>1996</year>
        <volume>39</volume>
        <issue>15</issue>
        <fpage>2887</fpage>
        <lpage>2893</lpage>
        <pub-id pub-id-type="doi">10.1021/jm9602928</pub-id>
        <?supplied-pmid 8709122?>
        <pub-id pub-id-type="pmid">8709122</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Simm</surname>
            <given-names>J</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Splitting chemical structure data sets for federated privacy-preserving machine learning</article-title>
        <source>J Cheminformatics</source>
        <year>2021</year>
        <volume>13</volume>
        <issue>1</issue>
        <fpage>96</fpage>
        <pub-id pub-id-type="doi">10.1186/s13321-021-00576-2</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Schreiber</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Target-oriented and diversity-oriented organic synthesis in drug discovery</article-title>
        <source>Science</source>
        <year>2000</year>
        <volume>287</volume>
        <issue>5460</issue>
        <fpage>1964</fpage>
        <lpage>1969</lpage>
        <pub-id pub-id-type="doi">10.1126/science.287.5460.1964</pub-id>
        <?supplied-pmid 10720315?>
        <pub-id pub-id-type="pmid">10720315</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tan</surname>
            <given-names>DS</given-names>
          </name>
        </person-group>
        <article-title>Diversity-oriented synthesis: exploring the intersections between chemistry and biology</article-title>
        <source>Nat Chem Biol</source>
        <year>2005</year>
        <volume>1</volume>
        <issue>2</issue>
        <fpage>74</fpage>
        <lpage>84</lpage>
        <pub-id pub-id-type="doi">10.1038/nchembio0705-74</pub-id>
        <?supplied-pmid 16408003?>
        <pub-id pub-id-type="pmid">16408003</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chen</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Rosenkranz</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Hirte</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Kirchmair</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Ring systems in natural products: structural diversity, physicochemical properties, and coverage by synthetic compounds</article-title>
        <source>Nat Prod Rep</source>
        <year>2022</year>
        <volume>39</volume>
        <issue>8</issue>
        <fpage>1544</fpage>
        <lpage>1556</lpage>
        <pub-id pub-id-type="doi">10.1039/D2NP00001F</pub-id>
        <?supplied-pmid 35708009?>
        <pub-id pub-id-type="pmid">35708009</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Stone</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Newman</surname>
            <given-names>DJ</given-names>
          </name>
          <name>
            <surname>Colletti</surname>
            <given-names>SL</given-names>
          </name>
          <name>
            <surname>Tan</surname>
            <given-names>DS</given-names>
          </name>
        </person-group>
        <article-title>Cheminformatic analysis of natural product-based drugs and chemical probes</article-title>
        <source>Nat Prod Rep</source>
        <year>2022</year>
        <volume>39</volume>
        <issue>1</issue>
        <fpage>20</fpage>
        <lpage>32</lpage>
        <pub-id pub-id-type="doi">10.1039/D1NP00039J</pub-id>
        <?supplied-pmid 34342327?>
        <pub-id pub-id-type="pmid">34342327</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dimova</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Stumpfe</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Hu</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Bajorath</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Analog series-based scaffolds: computational design and exploration of a new type of molecular scaffolds for medicinal chemistry</article-title>
        <source>Future Science OA</source>
        <year>2016</year>
        <pub-id pub-id-type="doi">10.4155/fsoa-2016-0058</pub-id>
        <?supplied-pmid 28116132?>
        <pub-id pub-id-type="pmid">28116132</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Stumpfe</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Dimova</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Bajorath</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>computational method for the systematic identification of analog series and key compounds representing series and their biological activity profiles</article-title>
        <source>J Med Chem</source>
        <year>2016</year>
        <volume>59</volume>
        <issue>16</issue>
        <fpage>7667</fpage>
        <lpage>7676</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jmedchem.6b00906</pub-id>
        <?supplied-pmid 27501131?>
        <pub-id pub-id-type="pmid">27501131</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ertl</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Schuhmann</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>Cheminformatics analysis of natural product scaffolds: comparison of scaffolds produced by animals, plants, fungi and bacteria</article-title>
        <source>Mol Inf</source>
        <year>2020</year>
        <volume>39</volume>
        <issue>11</issue>
        <fpage>2000017</fpage>
        <pub-id pub-id-type="doi">10.1002/minf.202000017</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Marsault</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Peterson</surname>
            <given-names>ML</given-names>
          </name>
        </person-group>
        <article-title>Macrocycles are great cycles: applications, opportunities, and challenges of synthetic macrocycles in drug discovery</article-title>
        <source>J Med Chem</source>
        <year>2011</year>
        <volume>54</volume>
        <issue>7</issue>
        <fpage>1961</fpage>
        <lpage>2004</lpage>
        <pub-id pub-id-type="doi">10.1021/jm1012374</pub-id>
        <?supplied-pmid 21381769?>
        <pub-id pub-id-type="pmid">21381769</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ermert</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Design, properties and recent application of macrocycles in medicinal chemistry</article-title>
        <source>Chimia</source>
        <year>2017</year>
        <volume>71</volume>
        <issue>10</issue>
        <fpage>678</fpage>
        <pub-id pub-id-type="doi">10.2533/chimia.2017.678</pub-id>
        <?supplied-pmid 29070413?>
        <pub-id pub-id-type="pmid">29070413</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dougherty</surname>
            <given-names>PG</given-names>
          </name>
          <name>
            <surname>Qian</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Pei</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>Macrocycles as protein–protein interaction inhibitors</article-title>
        <source>Biochemical Journal</source>
        <year>2017</year>
        <volume>474</volume>
        <issue>7</issue>
        <fpage>1109</fpage>
        <lpage>1125</lpage>
        <pub-id pub-id-type="doi">10.1042/BCJ20160619</pub-id>
        <?supplied-pmid 28298556?>
        <pub-id pub-id-type="pmid">28298556</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kramer</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Podewitz</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Ertl</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Liedl</surname>
            <given-names>K</given-names>
          </name>
        </person-group>
        <article-title>Unique macrocycles in the taiwan traditional chinese medicine database</article-title>
        <source>Planta Med</source>
        <year>2015</year>
        <volume>81</volume>
        <issue>06</issue>
        <fpage>459</fpage>
        <lpage>466</lpage>
        <pub-id pub-id-type="doi">10.1055/s-0035-1545881</pub-id>
        <?supplied-pmid 25856438?>
        <pub-id pub-id-type="pmid">25856438</pub-id>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Medina-Franco</surname>
            <given-names>JL</given-names>
          </name>
          <name>
            <surname>Petit</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Maggiora</surname>
            <given-names>GM</given-names>
          </name>
        </person-group>
        <article-title>hierarchical strategy for identifying active chemotype classes in compound databases</article-title>
        <source>Chem Biol Drug Des</source>
        <year>2006</year>
        <volume>67</volume>
        <issue>6</issue>
        <fpage>395</fpage>
        <lpage>408</lpage>
        <pub-id pub-id-type="doi">10.1111/j.1747-0285.2006.00397.x</pub-id>
        <?supplied-pmid 16882314?>
        <pub-id pub-id-type="pmid">16882314</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Xu</surname>
            <given-names>Y-J</given-names>
          </name>
          <name>
            <surname>Johnson</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Using molecular equivalence numbers to visually explore structural features that distinguish chemical libraries</article-title>
        <source>J Chem Inf Comput Sci</source>
        <year>2002</year>
        <volume>42</volume>
        <issue>4</issue>
        <fpage>912</fpage>
        <lpage>926</lpage>
        <pub-id pub-id-type="doi">10.1021/ci025535l</pub-id>
        <?supplied-pmid 12132893?>
        <pub-id pub-id-type="pmid">12132893</pub-id>
      </element-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Manelfi</surname>
            <given-names>C</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>“Molecular Anatomy”: a new multi-dimensional hierarchical scaffold analysis tool</article-title>
        <source>J Cheminformatics</source>
        <year>2021</year>
        <volume>13</volume>
        <issue>1</issue>
        <fpage>54</fpage>
        <pub-id pub-id-type="doi">10.1186/s13321-021-00526-y</pub-id>
      </element-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hu</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Bajorath</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Combining horizontal and vertical substructure relationships in scaffold hierarchies for activity prediction</article-title>
        <source>J Chem Inf Model</source>
        <year>2011</year>
        <volume>51</volume>
        <issue>2</issue>
        <fpage>248</fpage>
        <lpage>257</lpage>
        <pub-id pub-id-type="doi">10.1021/ci100448a</pub-id>
        <?supplied-pmid 21271729?>
        <pub-id pub-id-type="pmid">21271729</pub-id>
      </element-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Klein</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Koch</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Kriege</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Mutzel</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Schäfer</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>Visual analysis of biological activity data with scaffold hunter</article-title>
        <source>Mol Inform</source>
        <year>2013</year>
        <volume>32</volume>
        <issue>11–12</issue>
        <fpage>964</fpage>
        <lpage>975</lpage>
        <pub-id pub-id-type="doi">10.1002/minf.201300087</pub-id>
        <?supplied-pmid 27481142?>
        <pub-id pub-id-type="pmid">27481142</pub-id>
      </element-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wetzel</surname>
            <given-names>S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Interactive exploration of chemical space with Scaffold Hunter</article-title>
        <source>Nat Chem Biol</source>
        <year>2009</year>
        <volume>5</volume>
        <issue>8</issue>
        <fpage>581</fpage>
        <lpage>583</lpage>
        <pub-id pub-id-type="doi">10.1038/nchembio.187</pub-id>
        <?supplied-pmid 19561620?>
        <pub-id pub-id-type="pmid">19561620</pub-id>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ertl</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Schuffenhauer</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Renner</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>The scaffold tree an efficient navigation in the scaffold universe</article-title>
        <source>Chemoinformatics Comput Chem Biol</source>
        <year>2010</year>
        <pub-id pub-id-type="doi">10.1007/978-1-60761-839-3_10</pub-id>
      </element-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lewell</surname>
            <given-names>XQ</given-names>
          </name>
          <name>
            <surname>Judd</surname>
            <given-names>DB</given-names>
          </name>
          <name>
            <surname>Watson</surname>
            <given-names>SP</given-names>
          </name>
          <name>
            <surname>Hann</surname>
            <given-names>MM</given-names>
          </name>
        </person-group>
        <article-title>RECAP-retrosynthetic combinatorial analysis procedure: a powerful new technique for identifying privileged molecular fragments with useful applications in combinatorial chemistry</article-title>
        <source>J Chem Inf Comput Sci</source>
        <year>1998</year>
        <volume>38</volume>
        <issue>3</issue>
        <fpage>511</fpage>
        <lpage>522</lpage>
        <pub-id pub-id-type="doi">10.1021/ci970429i</pub-id>
        <?supplied-pmid 9611787?>
        <pub-id pub-id-type="pmid">9611787</pub-id>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Naveja</surname>
            <given-names>JJ</given-names>
          </name>
          <name>
            <surname>Medina-Franco</surname>
            <given-names>JL</given-names>
          </name>
        </person-group>
        <article-title>Finding constellations in chemical space through core analysis</article-title>
        <source>Front Chem</source>
        <year>2019</year>
        <volume>7</volume>
        <fpage>510</fpage>
        <pub-id pub-id-type="doi">10.3389/fchem.2019.00510</pub-id>
        <?supplied-pmid 31380353?>
        <pub-id pub-id-type="pmid">31380353</pub-id>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bajorath</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Improving the utility of molecular scaffolds for medicinal and computational chemistry</article-title>
        <source>Future Med Chem</source>
        <year>2018</year>
        <volume>10</volume>
        <issue>14</issue>
        <fpage>1645</fpage>
        <lpage>1648</lpage>
        <pub-id pub-id-type="doi">10.4155/fmc-2018-0106</pub-id>
        <?supplied-pmid 29957045?>
        <pub-id pub-id-type="pmid">29957045</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Naveja</surname>
            <given-names>JJ</given-names>
          </name>
          <name>
            <surname>Vogt</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Automatic identification of analogue series from large compound data sets: methods and applications</article-title>
        <source>Molecules</source>
        <year>2021</year>
        <volume>26</volume>
        <issue>17</issue>
        <fpage>5291</fpage>
        <pub-id pub-id-type="doi">10.3390/molecules26175291</pub-id>
        <?supplied-pmid 34500724?>
        <pub-id pub-id-type="pmid">34500724</pub-id>
      </element-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Naveja</surname>
            <given-names>JJ</given-names>
          </name>
          <name>
            <surname>Vogt</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Stumpfe</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Medina-Franco</surname>
            <given-names>JL</given-names>
          </name>
          <name>
            <surname>Bajorath</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Systematic extraction of analogue series from large compound collections using a new computational compound-core relationship method</article-title>
        <source>ACS Omega</source>
        <year>2019</year>
        <volume>4</volume>
        <issue>1</issue>
        <fpage>1027</fpage>
        <lpage>1032</lpage>
        <pub-id pub-id-type="doi">10.1021/acsomega.8b03390</pub-id>
        <?supplied-pmid 31459378?>
        <pub-id pub-id-type="pmid">31459378</pub-id>
      </element-citation>
    </ref>
    <ref id="CR36">
      <label>36.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wawer</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Bajorath</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Local structural changes, global data views: graphical substructure−activity relationship trailing</article-title>
        <source>J Med Chem</source>
        <year>2011</year>
        <volume>54</volume>
        <issue>8</issue>
        <fpage>2944</fpage>
        <lpage>2951</lpage>
        <pub-id pub-id-type="doi">10.1021/jm200026b</pub-id>
        <?supplied-pmid 21443196?>
        <pub-id pub-id-type="pmid">21443196</pub-id>
      </element-citation>
    </ref>
    <ref id="CR37">
      <label>37.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>de León</surname>
            <given-names>AD</given-names>
          </name>
          <name>
            <surname>Bajorath</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Matched molecular pairs derived by retrosynthetic fragmentation</article-title>
        <source>MedChemComm</source>
        <year>2014</year>
        <pub-id pub-id-type="doi">10.1039/C3MD00259D</pub-id>
      </element-citation>
    </ref>
    <ref id="CR38">
      <label>38.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Naveja</surname>
            <given-names>JJ</given-names>
          </name>
          <name>
            <surname>Pilón-Jiménez</surname>
            <given-names>BA</given-names>
          </name>
          <name>
            <surname>Bajorath</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Medina-Franco</surname>
            <given-names>JL</given-names>
          </name>
        </person-group>
        <article-title>A general approach for retrosynthetic molecular core analysis</article-title>
        <source>J Cheminform</source>
        <year>2019</year>
        <volume>11</volume>
        <issue>1</issue>
        <fpage>61</fpage>
        <pub-id pub-id-type="doi">10.1186/s13321-019-0380-5</pub-id>
        <?supplied-pmid 33430974?>
        <pub-id pub-id-type="pmid">33430974</pub-id>
      </element-citation>
    </ref>
    <ref id="CR39">
      <label>39.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Schäfer</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Kriege</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Humbeck</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Klein</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Koch</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Mutzel</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Scaffold Hunter: a comprehensive visual analytics framework for drug discovery</article-title>
        <source>J Cheminformatics</source>
        <year>2017</year>
        <volume>9</volume>
        <issue>1</issue>
        <fpage>28</fpage>
        <pub-id pub-id-type="doi">10.1186/s13321-017-0213-3</pub-id>
      </element-citation>
    </ref>
    <ref id="CR40">
      <label>40.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kruger</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Stiefl</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Landrum</surname>
            <given-names>GA</given-names>
          </name>
        </person-group>
        <article-title>rdScaffoldNetwork: the scaffold Network implementation in RDKit</article-title>
        <source>J Chem Inf Model</source>
        <year>2020</year>
        <volume>60</volume>
        <issue>7</issue>
        <fpage>3331</fpage>
        <lpage>3335</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jcim.0c00296</pub-id>
        <?supplied-pmid 32584031?>
        <pub-id pub-id-type="pmid">32584031</pub-id>
      </element-citation>
    </ref>
    <ref id="CR41">
      <label>41.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Matlock</surname>
            <given-names>MK</given-names>
          </name>
          <name>
            <surname>Zaretzki</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Swamidass</surname>
            <given-names>SJ</given-names>
          </name>
        </person-group>
        <article-title>Scaffold network generator: a tool for mining molecular structures</article-title>
        <source>Bioinformatics</source>
        <year>2013</year>
        <volume>29</volume>
        <issue>20</issue>
        <fpage>2655</fpage>
        <lpage>2656</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btt448</pub-id>
        <?supplied-pmid 23918250?>
        <pub-id pub-id-type="pmid">23918250</pub-id>
      </element-citation>
    </ref>
    <ref id="CR42">
      <label>42.</label>
      <mixed-citation publication-type="other">Jianxing and EX2L <italic>Scaffold Network Generator</italic>. Peking University HSC. <ext-link ext-link-type="uri" xlink:href="https://github.com/huluxiaohuowa/scaffold_network_generator">https://github.com/huluxiaohuowa/scaffold_network_generator</ext-link> Accessed Jan 12 2022. [cito:citesAsAuthority]</mixed-citation>
    </ref>
    <ref id="CR43">
      <label>43.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Scott</surname>
            <given-names>OB</given-names>
          </name>
          <name>
            <surname>Edith Chan</surname>
            <given-names>AW</given-names>
          </name>
        </person-group>
        <article-title>ScaffoldGraph: an open-source library for the generation and analysis of molecular scaffold networks and scaffold trees</article-title>
        <source>Bioinformatics</source>
        <year>2020</year>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btaa219</pub-id>
        <?supplied-pmid 32232438?>
        <pub-id pub-id-type="pmid">32232438</pub-id>
      </element-citation>
    </ref>
    <ref id="CR44">
      <label>44.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Agrafiotis</surname>
            <given-names>DK</given-names>
          </name>
          <name>
            <surname>Wiener</surname>
            <given-names>JJM</given-names>
          </name>
        </person-group>
        <article-title>Scaffold explorer: an interactive tool for organizing and mining structure−activity data spanning multiple chemotypes</article-title>
        <source>J Med Chem</source>
        <year>2010</year>
        <volume>53</volume>
        <issue>13</issue>
        <fpage>5002</fpage>
        <lpage>5011</lpage>
        <pub-id pub-id-type="doi">10.1021/jm1004495</pub-id>
        <?supplied-pmid 20524668?>
        <pub-id pub-id-type="pmid">20524668</pub-id>
      </element-citation>
    </ref>
    <ref id="CR45">
      <label>45.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Steinbeck</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Han</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Kuhn</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Horlacher</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Luttmann</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Willighagen</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <article-title>The chemistry development kit (CDK): an open-source java library for chemo-and bioinformatics</article-title>
        <source>J Chem Inf Comput Sci</source>
        <year>2003</year>
        <volume>43</volume>
        <issue>2</issue>
        <fpage>493</fpage>
        <lpage>500</lpage>
        <pub-id pub-id-type="doi">10.1021/ci025584y</pub-id>
        <?supplied-pmid 12653513?>
        <pub-id pub-id-type="pmid">12653513</pub-id>
      </element-citation>
    </ref>
    <ref id="CR46">
      <label>46.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Steinbeck</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Hoppe</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Kuhn</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Floris</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Guha</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Willighagen</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <article-title>Recent developments of the chemistry development kit (CDK)—an open-source java library for chemo-and bioinformatics</article-title>
        <source>Curr Pharm Des</source>
        <year>2006</year>
        <volume>12</volume>
        <issue>17</issue>
        <fpage>2111</fpage>
        <lpage>2120</lpage>
        <pub-id pub-id-type="doi">10.2174/138161206777585274</pub-id>
        <?supplied-pmid 16796559?>
        <pub-id pub-id-type="pmid">16796559</pub-id>
      </element-citation>
    </ref>
    <ref id="CR47">
      <label>47.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Willighagen</surname>
            <given-names>EL</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The Chemistry Development Kit (CDK) v2.0: atom typing, depiction, molecular formulas, and substructure searching</article-title>
        <source>J Cheminformatics</source>
        <year>2017</year>
        <pub-id pub-id-type="doi">10.1186/s13321-017-0220-4</pub-id>
      </element-citation>
    </ref>
    <ref id="CR48">
      <label>48.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>O’Boyle</surname>
            <given-names>NM</given-names>
          </name>
          <name>
            <surname>Banck</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>James</surname>
            <given-names>CA</given-names>
          </name>
          <name>
            <surname>Morley</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Vandermeersch</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Hutchison</surname>
            <given-names>GR</given-names>
          </name>
        </person-group>
        <article-title>Open babel: an open chemical toolbox</article-title>
        <source>J Cheminformatics</source>
        <year>2011</year>
        <volume>3</volume>
        <issue>1</issue>
        <fpage>33</fpage>
        <pub-id pub-id-type="doi">10.1186/1758-2946-3-33</pub-id>
      </element-citation>
    </ref>
    <ref id="CR49">
      <label>49.</label>
      <mixed-citation publication-type="other">RDKit: Open-Source Cheminformatics Software. <ext-link ext-link-type="uri" xlink:href="http://www.rdkit.org">http://www.rdkit.org</ext-link> Accessed 14 Jan 2022 [cito:citesAsAuthority]</mixed-citation>
    </ref>
    <ref id="CR50">
      <label>50.</label>
      <mixed-citation publication-type="other">Daylight Theory: SMARTS—A Language for Describing Molecular Patterns. <ext-link ext-link-type="uri" xlink:href="https://www.daylight.com/dayhtml/doc/theory/theory.smarts.html">https://www.daylight.com/dayhtml/doc/theory/theory.smarts.html</ext-link> Accessed 21 Feb 2022. [cito:citesAsAuthority]</mixed-citation>
    </ref>
    <ref id="CR51">
      <label>51.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kruger</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Fechner</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Stiefl</surname>
            <given-names>N</given-names>
          </name>
        </person-group>
        <article-title>automated identification of chemical series: classifying like a medicinal chemist</article-title>
        <source>J Chem Inf Model</source>
        <year>2020</year>
        <volume>60</volume>
        <issue>6</issue>
        <fpage>2888</fpage>
        <lpage>2902</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jcim.0c00204</pub-id>
        <?supplied-pmid 32374165?>
        <pub-id pub-id-type="pmid">32374165</pub-id>
      </element-citation>
    </ref>
    <ref id="CR52">
      <label>52.</label>
      <mixed-citation publication-type="other">R. Guha, <italic>MurckoFragmenter</italic>. [Chemistry Development Kit (CDK)]. <ext-link ext-link-type="uri" xlink:href="https://github.com/cdk/cdk/blob/master/tool/fragment/src/main/java/org/openscience/cdk/fragment/MurckoFragmenter.java">https://github.com/cdk/cdk/blob/master/tool/fragment/src/main/java/org/openscience/cdk/fragment/MurckoFragmenter.java</ext-link> Accessed 14 Jan 2022 [cito:citesAsAuthority] [cito:usesMethodIn]</mixed-citation>
    </ref>
    <ref id="CR53">
      <label>53.</label>
      <mixed-citation publication-type="other">A. Dutot, F. Guinand, D. Olivier, and Y. Pigné. (2007) GraphStream: A Tool for bridging the gap between Complex Systems and Dynamic Graphs, Dresden. Germany. <ext-link ext-link-type="uri" xlink:href="https://hal.archives-ouvertes.fr/hal-00264043">https://hal.archives-ouvertes.fr/hal-00264043</ext-link> Accessed 21 Feb 2022 [cito:citesAsAuthority] [cito:usesMethodIn]</mixed-citation>
    </ref>
    <ref id="CR54">
      <label>54.</label>
      <mixed-citation publication-type="other">GraphStream—A Dynamic Graph Library. <italic>GraphStream—A Dynamic Graph Library</italic>. <ext-link ext-link-type="uri" xlink:href="http://graphstream-project.org/">http://graphstream-project.org/</ext-link> Accessed 24 Jan 2022 [cito:citesAsAuthority] [cito:usesMethodIn]</mixed-citation>
    </ref>
    <ref id="CR55">
      <label>55.</label>
      <mixed-citation publication-type="other">C. Steinbeck. <italic>IAtomContainer Interface</italic>. [Chemistry Development Kit (CDK)]. <ext-link ext-link-type="uri" xlink:href="https://github.com/cdk/cdk/blob/master/base/interfaces/src/main/java/org/openscience/cdk/interfaces/IAtomContainer.java">https://github.com/cdk/cdk/blob/master/base/interfaces/src/main/java/org/openscience/cdk/interfaces/IAtomContainer.java</ext-link> Accessed Jan 24, 2022 [cito:citesAsAuthority] [cito:usesMethodIn]</mixed-citation>
    </ref>
    <ref id="CR56">
      <label>56.</label>
      <mixed-citation publication-type="other">J. May, <italic>Cycles</italic>. [Chemistry Development Kit (CDK)]. <ext-link ext-link-type="uri" xlink:href="https://github.com/cdk/cdk/blob/master/base/core/src/main/java/org/openscience/cdk/graph/Cycles.java">https://github.com/cdk/cdk/blob/master/base/core/src/main/java/org/openscience/cdk/graph/Cycles.java</ext-link> Accessed 24 Jan 2022 [cito:citesAsAuthority] [cito:usesMethodIn]</mixed-citation>
    </ref>
    <ref id="CR57">
      <label>57.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>May</surname>
            <given-names>JW</given-names>
          </name>
          <name>
            <surname>Steinbeck</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>Efficient ring perception for the chemistry development kit</article-title>
        <source>J Cheminformatics</source>
        <year>2014</year>
        <volume>6</volume>
        <issue>1</issue>
        <fpage>3</fpage>
        <pub-id pub-id-type="doi">10.1186/1758-2946-6-3</pub-id>
      </element-citation>
    </ref>
    <ref id="CR58">
      <label>58.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sorokina</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Merseburger</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Rajan</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Yirik</surname>
            <given-names>MA</given-names>
          </name>
          <name>
            <surname>Steinbeck</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>COCONUT online: collection of open natural products database</article-title>
        <source>J Cheminformatics</source>
        <year>2021</year>
        <volume>13</volume>
        <issue>1</issue>
        <fpage>2</fpage>
        <pub-id pub-id-type="doi">10.1186/s13321-020-00478-9</pub-id>
      </element-citation>
    </ref>
    <ref id="CR59">
      <label>59.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Weininger</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>SMILES, a chemical language and information system. 1. Introduction to methodology and encoding rules</article-title>
        <source>J Chem Inf Model</source>
        <year>1988</year>
        <volume>28</volume>
        <issue>1</issue>
        <fpage>31</fpage>
        <lpage>36</lpage>
        <pub-id pub-id-type="doi">10.1021/ci00057a005</pub-id>
      </element-citation>
    </ref>
    <ref id="CR60">
      <label>60.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Weininger</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Weininger</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Weininger</surname>
            <given-names>JL</given-names>
          </name>
        </person-group>
        <article-title>SMILES. 2. Algorithm for generation of unique SMILES notation</article-title>
        <source>J Chem Inf Comput Sci</source>
        <year>1989</year>
        <volume>29</volume>
        <issue>2</issue>
        <fpage>97</fpage>
        <lpage>101</lpage>
        <pub-id pub-id-type="doi">10.1021/ci00062a008</pub-id>
      </element-citation>
    </ref>
    <ref id="CR61">
      <label>61.</label>
      <mixed-citation publication-type="other">E. Willighagen and J. W. Mayfield. (2022) <italic>IStereoElement</italic>. [Chemistry Development Kit (CDK)]. <ext-link ext-link-type="uri" xlink:href="https://github.com/cdk/cdk/blob/master/base/interfaces/src/main/java/org/openscience/cdk/interfaces/IStereoElement.java">https://github.com/cdk/cdk/blob/master/base/interfaces/src/main/java/org/openscience/cdk/interfaces/IStereoElement.java</ext-link> Accessed 24 Jan 2022 [cito:citesAsAuthority] [cito:usesMethodIn]</mixed-citation>
    </ref>
    <ref id="CR62">
      <label>62.</label>
      <mixed-citation publication-type="other">J. May. <italic>Aromaticity</italic>. [Chemistry Development Kit (CDK)]. <ext-link ext-link-type="uri" xlink:href="https://github.com/cdk/cdk/blob/master/base/standard/src/main/java/org/openscience/cdk/aromaticity/Aromaticity.java">https://github.com/cdk/cdk/blob/master/base/standard/src/main/java/org/openscience/cdk/aromaticity/Aromaticity.java</ext-link> Accessed 24 Jan 2022 [cito:citesAsAuthority] [cito:usesMethodIn]</mixed-citation>
    </ref>
    <ref id="CR63">
      <label>63.</label>
      <mixed-citation publication-type="other">J. May. <italic>ElectronDonation</italic>. [Chemistry Development Kit (CDK)]. <ext-link ext-link-type="uri" xlink:href="https://github.com/cdk/cdk/blob/master/base/standard/src/main/java/org/openscience/cdk/aromaticity/ElectronDonation.java">https://github.com/cdk/cdk/blob/master/base/standard/src/main/java/org/openscience/cdk/aromaticity/ElectronDonation.java</ext-link> Accessed 24 Jan 2022 [cito:citesAsAuthority] [cito:usesMethodIn]</mixed-citation>
    </ref>
    <ref id="CR64">
      <label>64.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Solà</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Connecting and combining rules of aromaticity. towards a unified theory of aromaticity</article-title>
        <source>WIREs Comput Mol Sci</source>
        <year>2019</year>
        <pub-id pub-id-type="doi">10.1002/wcms.1404</pub-id>
      </element-citation>
    </ref>
    <ref id="CR65">
      <label>65.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chen</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Wannere</surname>
            <given-names>CS</given-names>
          </name>
          <name>
            <surname>Corminboeuf</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Puchta</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Schleyer</surname>
            <given-names>PvR</given-names>
          </name>
        </person-group>
        <article-title>Nucleus-independent chemical shifts (NICS) as an aromaticity criterion</article-title>
        <source>Chem Rev</source>
        <year>2005</year>
        <pub-id pub-id-type="doi">10.1021/cr030088+</pub-id>
        <?supplied-pmid 16351058?>
        <pub-id pub-id-type="pmid">16351058</pub-id>
      </element-citation>
    </ref>
    <ref id="CR66">
      <label>66.</label>
      <mixed-citation publication-type="other">K. Krämer. ‘The search for the grand unification of aromaticity’, <italic>Chemistry World</italic>, Jul. 26, 2021. <ext-link ext-link-type="uri" xlink:href="https://www.chemistryworld.com/features/the-search-for-the-grand-unification-of-aromaticity/4013915.article">https://www.chemistryworld.com/features/the-search-for-the-grand-unification-of-aromaticity/4013915.article</ext-link> Accessed 25 Oct 2022 [cito:citesAsAuthority]</mixed-citation>
    </ref>
    <ref id="CR67">
      <label>67.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Stanger</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>What is… aromaticity: a critique of the concept of aromaticity—can it really be defined?</article-title>
        <source>Chem Commun</source>
        <year>2009</year>
        <pub-id pub-id-type="doi">10.1039/b816811c</pub-id>
      </element-citation>
    </ref>
    <ref id="CR68">
      <label>68.</label>
      <mixed-citation publication-type="other">O. Horlacher, S. Kuhn, and J. May. <italic>SmilesGenerator</italic>. [Chemistry Development Kit (CDK)]. <ext-link ext-link-type="uri" xlink:href="https://github.com/cdk/cdk/blob/master/storage/smiles/src/main/java/org/openscience/cdk/smiles/SmilesGenerator.java">https://github.com/cdk/cdk/blob/master/storage/smiles/src/main/java/org/openscience/cdk/smiles/SmilesGenerator.java</ext-link> Accessed 24 Jan 2022 [cito:citesAsAuthority] [cito:usesMethodIn]</mixed-citation>
    </ref>
    <ref id="CR69">
      <label>69.</label>
      <mixed-citation publication-type="other"><italic>JUnit</italic>. <ext-link ext-link-type="uri" xlink:href="https://junit.org/junit4/">https://junit.org/junit4/</ext-link> Accessed 25 Jan 2022 [cito:usesMethodIn]</mixed-citation>
    </ref>
    <ref id="CR70">
      <label>70.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wishart</surname>
            <given-names>DS</given-names>
          </name>
        </person-group>
        <article-title>DrugBank: a comprehensive resource for in silico drug discovery and exploration</article-title>
        <source>Nucleic Acids Res</source>
        <year>2006</year>
        <volume>34</volume>
        <issue>90001</issue>
        <fpage>D668</fpage>
        <lpage>D672</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkj067</pub-id>
        <?supplied-pmid 16381955?>
        <pub-id pub-id-type="pmid">16381955</pub-id>
      </element-citation>
    </ref>
    <ref id="CR71">
      <label>71.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wishart</surname>
            <given-names>DS</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>DrugBank 5.0: a major update to the DrugBank database for 2018</article-title>
        <source>Nucleic Acids Res</source>
        <year>2018</year>
        <volume>46</volume>
        <issue>D1</issue>
        <fpage>D1074</fpage>
        <lpage>D1082</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkx1037</pub-id>
        <?supplied-pmid 29126136?>
        <pub-id pub-id-type="pmid">29126136</pub-id>
      </element-citation>
    </ref>
    <ref id="CR72">
      <label>72.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ashton</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Identification of diverse database subsets using property-based and fragment-based molecular descriptions</article-title>
        <source>Quant Struct-Act Relatsh</source>
        <year>2002</year>
        <volume>21</volume>
        <issue>6</issue>
        <fpage>598</fpage>
        <lpage>604</lpage>
        <pub-id pub-id-type="doi">10.1002/qsar.200290002</pub-id>
      </element-citation>
    </ref>
    <ref id="CR73">
      <label>73.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ertl</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Schuhmann</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>a systematic cheminformatics analysis of functional groups occurring in natural products</article-title>
        <source>J Nat Prod</source>
        <year>2019</year>
        <volume>82</volume>
        <issue>5</issue>
        <fpage>1258</fpage>
        <lpage>1263</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jnatprod.8b01022</pub-id>
        <?supplied-pmid 30933507?>
        <pub-id pub-id-type="pmid">30933507</pub-id>
      </element-citation>
    </ref>
    <ref id="CR74">
      <label>74.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Grabowski</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Baringhaus</surname>
            <given-names>K-H</given-names>
          </name>
          <name>
            <surname>Schneider</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>Scaffold diversity of natural products: inspiration for combinatorial library design</article-title>
        <source>Nat Prod Rep</source>
        <year>2008</year>
        <volume>25</volume>
        <issue>5</issue>
        <fpage>892</fpage>
        <pub-id pub-id-type="doi">10.1039/b715668p</pub-id>
        <?supplied-pmid 18820757?>
        <pub-id pub-id-type="pmid">18820757</pub-id>
      </element-citation>
    </ref>
    <ref id="CR75">
      <label>75.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chen</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Garcia de Lomana</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Friedrich</surname>
            <given-names>N-O</given-names>
          </name>
          <name>
            <surname>Kirchmair</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Characterization of the chemical space of known and readily obtainable natural products</article-title>
        <source>J Chem Inf Model</source>
        <year>2018</year>
        <volume>58</volume>
        <issue>8</issue>
        <fpage>1518</fpage>
        <lpage>1532</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jcim.8b00302</pub-id>
        <?supplied-pmid 30010333?>
        <pub-id pub-id-type="pmid">30010333</pub-id>
      </element-citation>
    </ref>
    <ref id="CR76">
      <label>76.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ertl</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Jelfs</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Mühlbacher</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Schuffenhauer</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Selzer</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Quest for the rings. in silico exploration of ring universe to identify novel bioactive heteroaromatic scaffolds</article-title>
        <source>J Med Chem</source>
        <year>2006</year>
        <volume>49</volume>
        <issue>15</issue>
        <fpage>4568</fpage>
        <lpage>4573</lpage>
        <pub-id pub-id-type="doi">10.1021/jm060217p</pub-id>
        <?supplied-pmid 16854061?>
        <pub-id pub-id-type="pmid">16854061</pub-id>
      </element-citation>
    </ref>
    <ref id="CR77">
      <label>77.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Clark</surname>
            <given-names>AM</given-names>
          </name>
        </person-group>
        <article-title>2D Depiction of fragment hierarchies</article-title>
        <source>J Chem Inf Model</source>
        <year>2010</year>
        <volume>50</volume>
        <issue>1</issue>
        <fpage>37</fpage>
        <lpage>46</lpage>
        <pub-id pub-id-type="doi">10.1021/ci900350h</pub-id>
        <?supplied-pmid 20038186?>
        <pub-id pub-id-type="pmid">20038186</pub-id>
      </element-citation>
    </ref>
    <ref id="CR78">
      <label>78.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Grigalunas</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Natural product fragment combination to performance-diverse pseudo-natural products</article-title>
        <source>Nat Commun</source>
        <year>2021</year>
        <volume>12</volume>
        <issue>1</issue>
        <fpage>1883</fpage>
        <pub-id pub-id-type="doi">10.1038/s41467-021-22174-4</pub-id>
        <?supplied-pmid 33767198?>
        <pub-id pub-id-type="pmid">33767198</pub-id>
      </element-citation>
    </ref>
    <ref id="CR79">
      <label>79.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Grigalunas</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Burhop</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Christoforow</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Waldmann</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Pseudo-natural products and natural product-inspired methods in chemical biology and drug discovery</article-title>
        <source>Curr Opin Chem Biol</source>
        <year>2020</year>
        <volume>56</volume>
        <fpage>111</fpage>
        <lpage>118</lpage>
        <pub-id pub-id-type="doi">10.1016/j.cbpa.2019.10.005</pub-id>
        <?supplied-pmid 32362382?>
        <pub-id pub-id-type="pmid">32362382</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

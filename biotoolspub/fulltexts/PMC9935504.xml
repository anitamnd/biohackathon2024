<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Sci Rep</journal-id>
    <journal-id journal-id-type="iso-abbrev">Sci Rep</journal-id>
    <journal-title-group>
      <journal-title>Scientific Reports</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2045-2322</issn>
    <publisher>
      <publisher-name>Nature Publishing Group UK</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">9935504</article-id>
    <article-id pub-id-type="pmid">36797269</article-id>
    <article-id pub-id-type="publisher-id">29277</article-id>
    <article-id pub-id-type="doi">10.1038/s41598-023-29277-6</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Deep reinforcement learning-based pairwise DNA sequence alignment method compatible with embedded edge devices</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Lall</surname>
          <given-names>Aryan</given-names>
        </name>
        <address>
          <email>aryanlall53@gmail.com</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Tallur</surname>
          <given-names>Siddharth</given-names>
        </name>
        <address>
          <email>stallur@ee.iitb.ac.in</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <aff id="Aff1"><institution-wrap><institution-id institution-id-type="GRID">grid.417971.d</institution-id><institution-id institution-id-type="ISNI">0000 0001 2198 7527</institution-id><institution>Department of Electrical Engineering (EE), </institution><institution>IIT Bombay, </institution></institution-wrap>Mumbai, 400076 India </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>16</day>
      <month>2</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>16</day>
      <month>2</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2023</year>
    </pub-date>
    <volume>13</volume>
    <elocation-id>2773</elocation-id>
    <history>
      <date date-type="received">
        <day>17</day>
        <month>10</month>
        <year>2022</year>
      </date>
      <date date-type="accepted">
        <day>1</day>
        <month>2</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2023</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold>This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <p id="Par1">Sequence alignment is an essential component of bioinformatics, for identifying regions of similarity that may indicate functional, structural, or evolutionary relationships between the sequences. Genome-based diagnostics relying on DNA sequencing have benefited hugely from the boom in computing power in recent decades, particularly due to cloud-computing and the rise of graphics processing units (GPUs) and other advanced computing platforms for running advanced algorithms. Translating the success of such breakthroughs in diagnostics to affordable solutions for low-cost healthcare requires development of algorithms that can operate on the edge instead of in the cloud, using low-cost and low-power electronic systems such as microcontrollers and field programmable gate arrays (FPGAs). In this work, we present EdgeAlign, a deep reinforcement learning based method for performing pairwise DNA sequence alignment on stand-alone edge devices. EdgeAlign uses deep reinforcement learning to train a deep Q-network (DQN) agent for performing sequence alignment on fixed length sub-sequences, using a sliding window that is scanned over the length of the entire sequence. The hardware resource-consumption for implementing this scheme is thus independent of the lengths of the sequences to be aligned, and is further optimized using a novel AutoML based method for neural network model size reduction. Unlike other algorithms for sequence alignment reported in literature, the model demonstrated in this work is highly compact and deployed on two edge devices (NVIDIA Jetson Nano Developer Kit and Digilent Arty A7-100T, containing Xilinx XC7A35T Artix-7 FPGA) for demonstration of alignment for sequences from the publicly available Influenza sequences at the National Center for Biotechnology Information (NCBI) Virus Data Hub.</p>
    </abstract>
    <kwd-group kwd-group-type="npg-subject">
      <title>Subject terms</title>
      <kwd>Genome informatics</kwd>
      <kwd>Electrical and electronic engineering</kwd>
    </kwd-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2023</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Introduction</title>
    <p id="Par2">Genomic medicine has the potential to make disease detection more efficient and cost-effective<sup><xref ref-type="bibr" rid="CR1">1</xref></sup>. Genetics will be crucial not just in determining the cause of a disease, but also in determining how a person responds to various treatments. Nanopore sequencing is a unique, scalable technology that enables direct, real-time analysis of long DNA or RNA fragments. Oxford Nanopore Technologies MinION<sup><xref ref-type="bibr" rid="CR2">2</xref></sup> is one such portable nanopore sequencing device that can be easily operated in the field with features including monitoring of run progress and selective sequencing. Data collected through such devices are typically stored and analysed on the cloud, or desktop-grade servers in well-equipped laboratories. To truly harness the potential of genome-based diagnostics for affordable healthcare solutions, that do not rely on expensive cloud storage and connectivity (e.g. for resource-constrained communities in low and middle income countries), it is necessary to develop efficient methods for analysing the data and delivering insights with automated and easy-to-implement workflows integrated with portable edge-devices. One such data analysis requirement is DNA sequence alignment, an essential component of bioinformatics and computational genomics for comparing two or more sequences, in order to identify regions of similarity that may be a consequence of functional, structural or evolutionary relationships between the sequences.</p>
    <p id="Par3">Several heuristic methods and algorithms have been proposed for the sequence alignment problem, of which the Needleman–Wunsch (NW) algorithm<sup><xref ref-type="bibr" rid="CR3">3</xref></sup> is one of the earliest and most commonly used method for pairwise sequence alignment. However, the computational complexity of such a dynamic programming-based alignment approach is proportional to the product of the lengths of the two DNA sequences, and is therefore challenging to be implemented on hardware devices with limited memory and computation blocks. In a multiple sequence alignment (MSA) problem, several sequences are aligned simultaneously. Clustal W<sup><xref ref-type="bibr" rid="CR4">4</xref></sup> is a well-known tool for MSA. It uses the progressive alignment method and determines the best alignment by matching sequences that are most similar first, then moving on to sequences that are least similar. Several implementations have also been proposed for improving this sequence alignment method including a few multi-thread based implementations on graphics processing units (GPUs)<sup><xref ref-type="bibr" rid="CR5">5</xref>–<xref ref-type="bibr" rid="CR7">7</xref></sup> for improving the throughput. Pairwise alignment is commonly performed using various tools such as banded alignment, BLAST, MUMmer<sup><xref ref-type="bibr" rid="CR8">8</xref>–<xref ref-type="bibr" rid="CR10">10</xref></sup> etc. along with various cloud processing solutions<sup><xref ref-type="bibr" rid="CR11">11</xref></sup>. BLAST<sup><xref ref-type="bibr" rid="CR12">12</xref></sup> is the most commonly used tool, which is also available to be downloaded and run on a local computer, or an edge-computing platform running an operating system such as NVIDIA Jetson Nano. BLAST is also often used as part of other algorithms that require approximate sequence matching. The algorithm emphasises more on speed and in most cases, it cannot guarantee optimal alignment of the query and base sequences. Moreover, regions with low-complexity sequences can create problems in sequence similarity searching by causing artificial hits, and are not appropriate for analysing with BLAST. Such sequences are usually determined and masked out in BLAST using DustMasker<sup><xref ref-type="bibr" rid="CR13">13</xref></sup> and separately analysed visually.</p>
    <p id="Par4">To overcome limitations of conventional alignment methods, a few reinforcement learning (RL) based techniques have recently been proposed in literature. Mircea et al.<sup><xref ref-type="bibr" rid="CR14">14</xref></sup> presented one of the first RL implementations for solving the DNA sequence alignment using Markov decision process (MDP). Jafari et al.<sup><xref ref-type="bibr" rid="CR15">15</xref></sup> introduced deep Q-Network (DQN) and an actor-critic algorithm in their work. The DQN model architecture was based on long short-term memory (LSTM) network which involves sequential computation to process the DNA sequence as a 1D data series. Song et al.<sup><xref ref-type="bibr" rid="CR16">16</xref></sup> provided a comprehensive deep RL based solution for pairwise sequence alignment, employing various pre-processing techniques such as Clustal, MUMmer, etc. to improve the alignment results, and highlighted the influence of various system parameters such as learning rate, window size, etc. on the model accuracy. Ramakrishnan et al.<sup><xref ref-type="bibr" rid="CR17">17</xref></sup> utilised asynchronous advantage actor critic (A3C) framework for MSA. They used a convolutional neural network (CNN) based architecture for their actor-critic model. However, this model is too complex to be applied to practical datasets with dozens of sequences and hundreds of molecules. Joeres et al.<sup><xref ref-type="bibr" rid="CR18">18</xref></sup> offered a comprehensive analysis of the performance of different RL algorithms for MSA, and observed that RL algorithms are typically much slower as compared to traditional solutions. However, all of these RL implementations either used very large models, which are challenging to implement on resource-constrained hardware, or or employed neural networks such as LSTMs, that are slower and currently not supported by machine learning frameworks for microcontrollers such as TensorFlow Lite<sup><xref ref-type="bibr" rid="CR19">19</xref></sup>. In this work, we present EdgeAlign, a compact deep RL model for pairwise sequence alignment deployed on embedded edge device platforms such as the NVIDIA Jetson Nano Developer Kit and Digilent Arty A7-100T, containing Xilinx XC7A35T Artix-7 FPGA. The RL agent is modelled as a dueling DQN architecture, the number of parameters in which are optimised using a technique presented in this work for neural network model size reduction using AutoML<sup><xref ref-type="bibr" rid="CR20">20</xref></sup> for deep RL applications. The results are benchmarked on sequences from the publicly available Influenza sequences at the National Center for Biotechnology Information (NCBI) Virus Data Hub. EdgeAlign implementation source code is freely available on GitHub<sup><xref ref-type="bibr" rid="CR21">21</xref></sup>.</p>
  </sec>
  <sec id="Sec2">
    <title>Methods</title>
    <sec id="Sec3">
      <title>Pairwise sequence alignment using deep reinforcement learning</title>
      <p id="Par5">Deep RL is a very popular topic among machine learning enthusiasts and researchers, with varied range of applications such as robotics, autonomous driving, navigation, human-like behavior in AI, system modeling, etc.<sup><xref ref-type="bibr" rid="CR22">22</xref></sup>. Unlike supervised learning, where the feedback provided to an agent (model) is correct set of actions for performing a task (classification), RL employs an agent to learn in an interactive environment by trial and error, using feedback from its own actions and experiences in form of rewards and punishments as signals for positive and negative behaviour, respectively. RL also differs from unsupervised learning in terms of the goals of the model. The goal of an RL model is to devise a suitable action model that maximises the cumulative reward of the agent for a wide range of test cases, while the goal in unsupervised learning is to find similarities and differences (anomalies) between data points. Most conventional RL algorithms are based on a tabular approach for choosing the best actions by observing the current environment or states. However, in many practical decision-making scenarios, the states are high-dimensional and often difficult to be modelled by traditional RL algorithms. On the other hand, deep neural networks are known to be excellent function approximators<sup><xref ref-type="bibr" rid="CR23">23</xref></sup>, and therefore more suitable for modelling complex systems.</p>
      <p id="Par6">For the pairwise sequence alignment problem addressed in this paper, we have employed a deep Q-network (DQN) agent to estimate the scoring strategy for taking appropriate action in a given state. The DQN architecture explicitly separates the representation of state values and state-dependent action advantages via two separate streams. We have also used a dueling neural network architecture which consists of two streams that represent the value and advantage functions, while sharing a common convolutional feature-learning module<sup><xref ref-type="bibr" rid="CR24">24</xref></sup>. The two streams are combined via a special aggregating layer to produce an estimate of the state (<italic>s</italic>)-action (<italic>a</italic>) value function <italic>Q</italic>(<italic>s</italic>, <italic>a</italic>). The key motivation behind this architecture is that it is not necessary to know the value of each action at every step; only the most advantageous action needs to be determined. The DNA sequences to be aligned were represented as 3D images, which were processed by the network. Each type of nucleotide (A, C, G, T) was converted to a <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$3 \times 3$$\end{document}</tex-math><mml:math id="M2"><mml:mrow><mml:mn>3</mml:mn><mml:mo>×</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="41598_2023_29277_Article_IEq1.gif"/></alternatives></inline-formula> pixel square with CMYK color representation. To separate the left, right, top, and bottom ends of the sub-sequences, <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$3 \times 3$$\end{document}</tex-math><mml:math id="M4"><mml:mrow><mml:mn>3</mml:mn><mml:mo>×</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="41598_2023_29277_Article_IEq2.gif"/></alternatives></inline-formula> empty pixels were padded. During training, the nucleotide representation was converted into RGB format for dimensionality reduction and ease of visualisation. The agent operates upon a finite-sized window i.e. subset of the sequences to be aligned, and takes appropriate action (forward, insertion or deletion) for the first nucleotide in each sub-sequence based on the information contained in the window. Each action incurs a suitable reward or penalty, as discussed below. The window was accordingly updated and slid over the length of the entire sequence, and the process was repeated to complete the alignment task. Since the window size is fixed, the number of computations, and therefore hardware resources required, are fixed for any sub-alignment task. This is highly advantageous for larger sequences, as they can be processed using finite pool of resources.</p>
      <p id="Par7">Figure <xref rid="Fig1" ref-type="fig">1</xref>a illustrates the dataflow in EdgeAlign algorithm. Analysis of data in a window (of size <italic>W</italic>) starts from a prescribed starting point of both sequences, and the window is slid till it reaches the end of either of the sequences. <italic>x</italic> and <italic>y</italic> represent the current nucleotide indices for the first (Seq1) and second (Seq2) sequence, respectively. Figure <xref rid="Fig1" ref-type="fig">1</xref>b illustrates how the RL environment/state is formed and updated based on the predicted action. Figure <xref rid="Fig1" ref-type="fig">1</xref>c shows the 3 possible discrete actions of the RL agent in the pairwise sequence alignment problem. In case of forward action, the agent simply shifts the window to the right by one position for both the sequences, corresponding to finding a a match at the current index. The ultimate result could be either a true nucleotide match e.g. (<italic>i</italic>, <italic>iii</italic>, <italic>vii</italic>) or a mis-match e.g. (<italic>iv</italic>), however, the agent simply decided to go forward. In case of insertion, the agent inserts a gap in the second sequence e.g. (<italic>ii</italic>) and shifts the window to the right by one position for the first sequence, thus corresponding to insertion of an extra nucleotide in the first sequence and a gap in the second sequence. Similarly, in case of deletion, the agent inserts a gap in the first sequence e.g. (<italic>v</italic>) and shifts the window to the right by one position for the second sequence. These 3 actions will correspond to 3 different Q-values at the output of the deep Q-network.<fig id="Fig1"><label>Figure 1</label><caption><p>(<bold>a</bold>) Overview of EdgeAlign algorithm, operated on two sequences (Seq1 and Seq2). <italic>x</italic> and <italic>y</italic> denote the current nucleotide indices for the first and second sequence, respectively, and <italic>W</italic> denotes the size of the window which is slid over the sequences, starting from the current nucleotide indexes. The next action is predicted using a deep neural network-based RL agent. (<bold>b</bold>) The deep Q network RL agent operates upon sub-sequences in the current window (environment) and chooses a suitable action using the RL agent, earning a reward (or penalty) accordingly. Once the reward and action are determined, the agent moves on to the next window, which is updated based on the current action. The overall sequence alignment is performed by repeating these sub-alignments, until the agent reaches the end of either of the sequences. (<bold>c</bold>) The EdgeAlign RL agent can choose among the possible actions: forward (F), insertion (I), and deletion (D) to maximise the obtained rewards in an alignment task.</p></caption><graphic xlink:href="41598_2023_29277_Fig1_HTML" id="MO1"/></fig></p>
    </sec>
    <sec id="Sec4">
      <title>Alignment score and reward policy</title>
      <p id="Par8">EdgeAlign aligns two given sequences in such a way that we obtain maximum number of matches between the sequences. However, alignments with too many gaps or mismatches are not desirable. A commonly used metric to characterise the quality of the alignment is the BLAST alignment score. This rule-based metric assigns a numerical score to any alignment, with a higher score indicating better alignment. This alignment score is computed by assigning a value to each aligned pair of nucleotides and then adding these values over the length of the sequence. For nucleotide alignments, the default BLAST options<sup><xref ref-type="bibr" rid="CR25">25</xref></sup> use a reward of <inline-formula id="IEq3"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$+\,1$$\end{document}</tex-math><mml:math id="M6"><mml:mrow><mml:mo>+</mml:mo><mml:mspace width="0.166667em"/><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="41598_2023_29277_Article_IEq3.gif"/></alternatives></inline-formula> for each match and a penalty of <inline-formula id="IEq4"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$-\,3$$\end{document}</tex-math><mml:math id="M8"><mml:mrow><mml:mo>-</mml:mo><mml:mspace width="0.166667em"/><mml:mn>3</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="41598_2023_29277_Article_IEq4.gif"/></alternatives></inline-formula> for each mismatch. The creation or opening of a gap in an alignment results in a negative gap-opening penalty of <inline-formula id="IEq5"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$-\,5$$\end{document}</tex-math><mml:math id="M10"><mml:mrow><mml:mo>-</mml:mo><mml:mspace width="0.166667em"/><mml:mn>5</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="41598_2023_29277_Article_IEq5.gif"/></alternatives></inline-formula>, with each extension of an existing gap incurring a lesser penalty of <inline-formula id="IEq6"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$-\,2$$\end{document}</tex-math><mml:math id="M12"><mml:mrow><mml:mo>-</mml:mo><mml:mspace width="0.166667em"/><mml:mn>2</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="41598_2023_29277_Article_IEq6.gif"/></alternatives></inline-formula>. The BLAST alignment score should also influence the reward system used for training the agent, since the alignment results from the RL tool would be evaluated using this scoring mechanism. In EdgeAlign implementation, the rewards (i.e. penalties) for mismatch <inline-formula id="IEq7"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(-\,0.6)$$\end{document}</tex-math><mml:math id="M14"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>-</mml:mo><mml:mspace width="0.166667em"/><mml:mn>0.6</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="41598_2023_29277_Article_IEq7.gif"/></alternatives></inline-formula>, gap opening <inline-formula id="IEq8"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(-\,1)$$\end{document}</tex-math><mml:math id="M16"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>-</mml:mo><mml:mspace width="0.166667em"/><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="41598_2023_29277_Article_IEq8.gif"/></alternatives></inline-formula>, and gap extension <inline-formula id="IEq9"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(-\,0.4)$$\end{document}</tex-math><mml:math id="M18"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>-</mml:mo><mml:mspace width="0.166667em"/><mml:mn>0.4</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="41598_2023_29277_Article_IEq9.gif"/></alternatives></inline-formula> were down-scaled and chosen to be in the range of <inline-formula id="IEq10"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(-\,1, 1)$$\end{document}</tex-math><mml:math id="M20"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>-</mml:mo><mml:mspace width="0.166667em"/><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="41598_2023_29277_Article_IEq10.gif"/></alternatives></inline-formula>. The reward for a match was chosen to be <inline-formula id="IEq11"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$+\,1$$\end{document}</tex-math><mml:math id="M22"><mml:mrow><mml:mo>+</mml:mo><mml:mspace width="0.166667em"/><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="41598_2023_29277_Article_IEq11.gif"/></alternatives></inline-formula> in order to introduce a bias towards obtaining more matches. As an example alignment shown in Fig. <xref rid="Fig1" ref-type="fig">1</xref>c, there are 3 nucleotide matches (<italic>i</italic>, <italic>iii</italic>, <italic>vii</italic>), 1 mis-match (<italic>iv</italic>), 2 gap openings (<italic>ii</italic>, <italic>v</italic>) and 1 gap extension (<italic>vi</italic>). Thus, the total alignment score is the cumulative sum of the individual rewards, which in this case comes out to be <inline-formula id="IEq12"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(3\times 1) + \left( 1\times (-\,0.6)\right) + \left( 2\times (-\,1)\right) + \left( 1\times (-\,0.4)\right) = 0$$\end{document}</tex-math><mml:math id="M24"><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>3</mml:mn><mml:mo>×</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mfenced close=")" open="("><mml:mn>1</mml:mn><mml:mo>×</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mo>-</mml:mo><mml:mspace width="0.166667em"/><mml:mn>0.6</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mfenced><mml:mo>+</mml:mo><mml:mfenced close=")" open="("><mml:mn>2</mml:mn><mml:mo>×</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mo>-</mml:mo><mml:mspace width="0.166667em"/><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mfenced><mml:mo>+</mml:mo><mml:mfenced close=")" open="("><mml:mn>1</mml:mn><mml:mo>×</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mo>-</mml:mo><mml:mspace width="0.166667em"/><mml:mn>0.4</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mfenced><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="41598_2023_29277_Article_IEq12.gif"/></alternatives></inline-formula>.</p>
    </sec>
    <sec id="Sec5">
      <title>Preprocessing</title>
      <p id="Par9">EdgeAlign utilises a sliding window-based approach to employ RL for performing sequence alignment, and is therefore a sequential method wherein any decision or action once implemented for the sub-sequences in a window, cannot be modified or undone as the window slides forward. Thus, the quality of the solution (i.e. alignment score) is greatly dependent on the starting position in each sequence, because the alignment procedure is performed only in one direction. We can remove such variability by applying pre-processing techniques used in conventional alignment methods (Clustal Omega and the MUMmer), such as the longest-common substring (LCS)<sup><xref ref-type="bibr" rid="CR16">16</xref></sup>. EdgeAlign uses this technique to find the longest substring which is common to both sequences. Using this longest-common substring (LCS) as the starting point, the alignment task is split into two sub-alignment jobs. For all sub-sequences to the left of LCS, the alignment task is performed in the backward direction. On the other hand, for all sub-sequences to the right of LCS, the alignment task is performed in the forward direction. The aligned sub-sequences from both sub-alignment jobs are stitched back to the LCS, to obtain the overall alignment solution. Figure <xref rid="Fig2" ref-type="fig">2</xref> illustrates the LCS preprocessing method. The computational time complexity of the LCS algorithm for two sequences of length <italic>m</italic> and <italic>n</italic> respectively, is <italic>O</italic>(<italic>mn</italic>). Thus, it may not be feasible to use this method when working with very large sequences (e.g. human genomes). In such cases, it may be advisable to bypass this preprocessing step and only proceed with the forward alignment.<fig id="Fig2"><label>Figure 2</label><caption><p>Illustration of longest common substring (LCS) preprocessing method. LCS provides the starting point for the alignment process. The forward and backward sub-alignment results are combined together to obtain the final alignment result.</p></caption><graphic xlink:href="41598_2023_29277_Fig2_HTML" id="MO2"/></fig></p>
    </sec>
    <sec id="Sec6">
      <title>Network architecture and training</title>
      <p id="Par10">The DQN agent was modelled using a CNN with a dueling network architecture. By representing the sequences as images, the task of determining reward and action for sub-alignment within a window is posed as an image classification problem. CNN is the most widely used network architecture for image classification tasks due to advantages it affords in terms of dimensionality reduction, feature sharing, and pattern finding. Using the dueling method, the RL agent learns the scores of the states (value) and actions separately, thus helping improve the stability and convergence of the learning process. Figure <xref rid="Fig3" ref-type="fig">3</xref> and Table <xref rid="Tab1" ref-type="table">1</xref> show the detailed network architecture and the model parameters, respectively. We used 4 convolutional block layers with ReLU output activation for identifying the features in the input image, each with an increasing number of filters and granularity. Since we require a fixed size and flattened output at the end of the CNN operations, the filter shape of the last convolutional layer depends on the window size. The last layer of the model has 4 output neurons with linear activation corresponding to the state value and advantage values for 3 different actions. The value and advantage outputs are aggregated to yield the Q-values. In the implementation presented here, a single fully-connected layer (FC2) is used for computing both the value and advantage outputs. We could also design different networks for handling the value and advantage output streams separately, or introduce more fully-connected layers for computing the output of each stream in a branched manner. However, this would result in an increase in the number of parameters in the model, and therefore greater resource consumption and inference time. For demonstrating the feasibility of our method, we have limited our study to a single fully-connected layer at the output.<fig id="Fig3"><label>Figure 3</label><caption><p>Illustration of network architecture (<inline-formula id="IEq13"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$W =$$\end{document}</tex-math><mml:math id="M26"><mml:mrow><mml:mi>W</mml:mi><mml:mo>=</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="41598_2023_29277_Article_IEq13.gif"/></alternatives></inline-formula> window size). The filter shape at each step is represented by the dimension of the corresponding convolution block. Input to the network is an RGB image.</p></caption><graphic xlink:href="41598_2023_29277_Fig3_HTML" id="MO3"/></fig><table-wrap id="Tab1"><label>Table 1</label><caption><p>Network architecture (<inline-formula id="IEq14"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$W =$$\end{document}</tex-math><mml:math id="M28"><mml:mrow><mml:mi>W</mml:mi><mml:mo>=</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="41598_2023_29277_Article_IEq14.gif"/></alternatives></inline-formula> window size). <inline-formula id="IEq15"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\lceil {*}\rceil }{~}$$\end{document}</tex-math><mml:math id="M30"><mml:mrow><mml:mrow><mml:mo>⌈</mml:mo><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow><mml:mo>⌉</mml:mo></mml:mrow><mml:mspace width="3.33333pt"/></mml:mrow></mml:math><inline-graphic xlink:href="41598_2023_29277_Article_IEq15.gif"/></alternatives></inline-formula> denotes the ceiling function.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Layer</th><th align="left">Input size</th><th align="left">Filter shape</th><th align="left">Stride</th><th align="left">Padding</th></tr></thead><tbody><tr><td align="left">Conv1</td><td align="left"><inline-formula id="IEq16"><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$3(W+2) \times 12 \times 3$$\end{document}</tex-math><mml:math id="M32"><mml:mrow><mml:mn>3</mml:mn><mml:mo stretchy="false">(</mml:mo><mml:mi>W</mml:mi><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>×</mml:mo><mml:mn>12</mml:mn><mml:mo>×</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="41598_2023_29277_Article_IEq16.gif"/></alternatives></inline-formula></td><td align="left"><inline-formula id="IEq17"><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$9 \times 9 \times 32$$\end{document}</tex-math><mml:math id="M34"><mml:mrow><mml:mn>9</mml:mn><mml:mo>×</mml:mo><mml:mn>9</mml:mn><mml:mo>×</mml:mo><mml:mn>32</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="41598_2023_29277_Article_IEq17.gif"/></alternatives></inline-formula></td><td align="left"><inline-formula id="IEq18"><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$3 \times 3$$\end{document}</tex-math><mml:math id="M36"><mml:mrow><mml:mn>3</mml:mn><mml:mo>×</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="41598_2023_29277_Article_IEq18.gif"/></alternatives></inline-formula></td><td align="left">Same</td></tr><tr><td align="left">Conv2</td><td align="left"><inline-formula id="IEq19"><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(W+2) \times 4 \times 32$$\end{document}</tex-math><mml:math id="M38"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>W</mml:mi><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>×</mml:mo><mml:mn>4</mml:mn><mml:mo>×</mml:mo><mml:mn>32</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="41598_2023_29277_Article_IEq19.gif"/></alternatives></inline-formula></td><td align="left"><inline-formula id="IEq20"><alternatives><tex-math id="M39">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$6 \times 6 \times 64$$\end{document}</tex-math><mml:math id="M40"><mml:mrow><mml:mn>6</mml:mn><mml:mo>×</mml:mo><mml:mn>6</mml:mn><mml:mo>×</mml:mo><mml:mn>64</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="41598_2023_29277_Article_IEq20.gif"/></alternatives></inline-formula></td><td align="left"><inline-formula id="IEq21"><alternatives><tex-math id="M41">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$3 \times 3$$\end{document}</tex-math><mml:math id="M42"><mml:mrow><mml:mn>3</mml:mn><mml:mo>×</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="41598_2023_29277_Article_IEq21.gif"/></alternatives></inline-formula></td><td align="left">Same</td></tr><tr><td align="left">Conv3</td><td align="left"><inline-formula id="IEq22"><alternatives><tex-math id="M43">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${{\lceil {(W+2)/3}\rceil }} \times 2 \times 64$$\end{document}</tex-math><mml:math id="M44"><mml:mrow><mml:mrow><mml:mo>⌈</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>W</mml:mi><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">/</mml:mo><mml:mn>3</mml:mn></mml:mrow><mml:mo>⌉</mml:mo></mml:mrow><mml:mo>×</mml:mo><mml:mn>2</mml:mn><mml:mo>×</mml:mo><mml:mn>64</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="41598_2023_29277_Article_IEq22.gif"/></alternatives></inline-formula></td><td align="left"><inline-formula id="IEq23"><alternatives><tex-math id="M45">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$3 \times 3 \times 64$$\end{document}</tex-math><mml:math id="M46"><mml:mrow><mml:mn>3</mml:mn><mml:mo>×</mml:mo><mml:mn>3</mml:mn><mml:mo>×</mml:mo><mml:mn>64</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="41598_2023_29277_Article_IEq23.gif"/></alternatives></inline-formula></td><td align="left"><inline-formula id="IEq24"><alternatives><tex-math id="M47">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1 \times 1$$\end{document}</tex-math><mml:math id="M48"><mml:mrow><mml:mn>1</mml:mn><mml:mo>×</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="41598_2023_29277_Article_IEq24.gif"/></alternatives></inline-formula></td><td align="left">Same</td></tr><tr><td align="left">Conv4</td><td align="left"><inline-formula id="IEq25"><alternatives><tex-math id="M49">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${{\lceil {(W+2)/3}\rceil }} \times 2 \times 64$$\end{document}</tex-math><mml:math id="M50"><mml:mrow><mml:mrow><mml:mo>⌈</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>W</mml:mi><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">/</mml:mo><mml:mn>3</mml:mn></mml:mrow><mml:mo>⌉</mml:mo></mml:mrow><mml:mo>×</mml:mo><mml:mn>2</mml:mn><mml:mo>×</mml:mo><mml:mn>64</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="41598_2023_29277_Article_IEq25.gif"/></alternatives></inline-formula></td><td align="left"><inline-formula id="IEq26"><alternatives><tex-math id="M51">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${{\lceil {(W+2)/3}\rceil }} \times 2 \times 512$$\end{document}</tex-math><mml:math id="M52"><mml:mrow><mml:mrow><mml:mo>⌈</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>W</mml:mi><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">/</mml:mo><mml:mn>3</mml:mn></mml:mrow><mml:mo>⌉</mml:mo></mml:mrow><mml:mo>×</mml:mo><mml:mn>2</mml:mn><mml:mo>×</mml:mo><mml:mn>512</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="41598_2023_29277_Article_IEq26.gif"/></alternatives></inline-formula></td><td align="left"><inline-formula id="IEq27"><alternatives><tex-math id="M53">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1 \times 1$$\end{document}</tex-math><mml:math id="M54"><mml:mrow><mml:mn>1</mml:mn><mml:mo>×</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="41598_2023_29277_Article_IEq27.gif"/></alternatives></inline-formula></td><td align="left">Valid</td></tr><tr><td align="left">FC1</td><td align="left">512</td><td align="left">128</td><td align="left">–</td><td align="left">–</td></tr><tr><td align="left">FC2</td><td align="left">128</td><td align="left">4</td><td align="left">–</td><td align="left">–</td></tr></tbody></table></table-wrap></p>
      <p id="Par11">The nature of the pairwise sequence alignment problem makes it easy to generate artificial DNA sequence data with controllably introduced mutations for training the RL agent. These sequences must be generated using a definite rule and should be able to mimic various mutations such as SNP (single nucleotide polymorphism), insertions and deletions (InDels). For this purpose, we generated various random sequences, and their corresponding paired sequence through introducing mutations using JC69 model to create SNP mutations<sup><xref ref-type="bibr" rid="CR26">26</xref></sup>, and Zipfian distribution-based InDel length model for generating InDels<sup><xref ref-type="bibr" rid="CR27">27</xref></sup>. This functionality was implemented using Python as this allowed us to easily integrate the sequence generator with our RL environment. We used Keras-RL<sup><xref ref-type="bibr" rid="CR28">28</xref></sup> as the RL framework for training the dueling DQN agent, implemented using <italic>Dueling DQNAgent</italic> from the Keras-RL framework with a <italic>Greedy</italic> policy for determining suitable actions. Figure <xref rid="Fig4" ref-type="fig">4</xref> shows increasing trend in number of matches with increasing epochs, obtained by the RL agent for 2 different window sizes (50 and 70) during a training session for sequences of length 1500.<fig id="Fig4"><label>Figure 4</label><caption><p>Increasing trend observed for the number of matches obtained by the EdgeAlign RL agent during training for window sizes of 50 and 70.</p></caption><graphic xlink:href="41598_2023_29277_Fig4_HTML" id="MO4"/></fig></p>
    </sec>
    <sec id="Sec7">
      <title>Model size reduction using AutoML</title>
      <p id="Par12">It is important that the model size for pairwise sequence alignment using EdgeAlign be minimal, so that the trained model could be implemented on an edge device. For a window size of 50, the implementation described in the previous section (Table <xref rid="Tab1" ref-type="table">1</xref>) comprises of approximately 1.36 M parameters, and is therefore not suitable for edge implementation. Pruning and quantisation are commonly employed methods for performing model compression<sup><xref ref-type="bibr" rid="CR29">29</xref>,<xref ref-type="bibr" rid="CR30">30</xref></sup>. However, it is often cumbersome to evaluate the importance of each neuron in the network for pruning, and usually requires manual fine-tuning. Another method for model compression is knowledge distillation<sup><xref ref-type="bibr" rid="CR31">31</xref></sup>, wherein a pre-defined smaller network is trained using a fully-trained larger network as ground truth. This approach is similar to transfer learning, and requires setting up a fully-trained network. Quantisation is a well-known approach for compressing a model, by representing the model parameters using 8-bit integers instead of floating point numbers. This provides large savings in memory footprint for storing the model parameters, albeit with deteriorated model performance due to reduction of numeric precision and resolution. In pairwise sequence alignment, this is undesirable, because the alignment is performed in a sequential and unidirectional manner, and therefore errors in each alignment task for sub-sequences accumulate and degrade the overall model performance.</p>
      <p id="Par13">For a given labelled dataset, neural architecture search (NAS)<sup><xref ref-type="bibr" rid="CR32">32</xref></sup>, is a suitable technique for automating the design of neural network architectures within a desired set of constraints e.g. maximum allowed model size, number of operations, latency etc. NAS only requires the search-space constraints to be specified, and a labelled dataset to be provided to the NAS tool for generating an optimal model that provides best performance under the user-specified constraints on that dataset. In this paper, we have utilised the power of NAS using AutoKeras, an open-source tool for performing the model size reduction. AutoKeras is an open-source AutoML system based on the Keras framework<sup><xref ref-type="bibr" rid="CR33">33</xref></sup>. It provides a simple and effective approach for automatically finding top-performing models for a wide range of predictive modelling tasks, including tabular or structured classification and regression datasets.</p>
      <p id="Par14">The technique of AutoML is best suited for supervised learning applications with comprehensive, labelled datasets. On the other hand, RL frameworks rely on learning underlying rules in a training environment and do not require a labelled dataset. Moreover in the sequence alignment problem, the next pair of sub-sequences to be analysed (once the window is slid) will be decided by the current action predicted by the partially-trained model. Hence, the data is also influenced by the model, and it is therefore difficult to incorporate conventional NAS techniques for model size reduction in EdgeAlign. However, using the conventional deep-Q network presented in the previous section (e.g. model with window size of 50 and approximately 1.36 M parameters), it is possible to replicate the performance of this RL agent with a smaller model generated with AutoKeras. This is achieved by running the sequence alignment model on any given pair of input sequences and saving the intermediate states (window of sub-sequences) separately. Further, the pre-trained network is used to generate a labelled dataset, which consists of predicted actions corresponding to each of these input states. Next, we can feed this generated dataset to the AutoKeras framework for finding an optimal (i.e. reduced size) model architecture with far lesser number of parameters. In theory, this optimal model should be able to replicate the performance of the pre-trained network. This process can be summarised using the following equations:<disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="M55">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f(s,\theta ) \longleftrightarrow \text {AutoKeras}\longleftrightarrow f^{\prime}(s,\theta ^{\prime})$$\end{document}</tex-math><mml:math id="M56" display="block"><mml:mrow><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>θ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">⟷</mml:mo><mml:mtext>AutoKeras</mml:mtext><mml:mo stretchy="false">⟷</mml:mo><mml:msup><mml:mi>f</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>θ</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><graphic xlink:href="41598_2023_29277_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula><disp-formula id="Equ2"><label>2</label><alternatives><tex-math id="M57">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f(s,\theta ) \approx f^{\prime}(s,\theta ^{\prime}), |\theta ^{\prime}|\ll |\theta |$$\end{document}</tex-math><mml:math id="M58" display="block"><mml:mrow><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>θ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>≈</mml:mo><mml:msup><mml:mi>f</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>θ</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo>,</mml:mo><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msup><mml:mi>θ</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo>≪</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>θ</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:math><graphic xlink:href="41598_2023_29277_Article_Equ2.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq28"><alternatives><tex-math id="M59">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\theta$$\end{document}</tex-math><mml:math id="M60"><mml:mi>θ</mml:mi></mml:math><inline-graphic xlink:href="41598_2023_29277_Article_IEq28.gif"/></alternatives></inline-formula> and <inline-formula id="IEq29"><alternatives><tex-math id="M61">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\theta ^{\prime}$$\end{document}</tex-math><mml:math id="M62"><mml:msup><mml:mi>θ</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:math><inline-graphic xlink:href="41598_2023_29277_Article_IEq29.gif"/></alternatives></inline-formula> are the model parameters of the pre-trained and the reduced size model, respectively, <italic>s</italic> represents the input states, and <italic>f</italic> and <inline-formula id="IEq30"><alternatives><tex-math id="M63">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f^{\prime}$$\end{document}</tex-math><mml:math id="M64"><mml:msup><mml:mi>f</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:math><inline-graphic xlink:href="41598_2023_29277_Article_IEq30.gif"/></alternatives></inline-formula> represent the neural network functions for the pre-trained and the reduced size model, respectively. The actions predicted by the pre-trained network are used to assign labels, and used for training the network generated by AutoKeras. For reducing the input dimension, we also represented each individual nucleotide with a <inline-formula id="IEq31"><alternatives><tex-math id="M65">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$2\times 2$$\end{document}</tex-math><mml:math id="M66"><mml:mrow><mml:mn>2</mml:mn><mml:mo>×</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="41598_2023_29277_Article_IEq31.gif"/></alternatives></inline-formula> pixel square for the reduced size model. Using this technique, the pre-trained network for window size of 50 with approximately 1.36 M parameters was reduced to a network with approximately 98 k parameters using AutoKeras. Our proposed technique is fully automated and does not require any manual fine-tuning or prior information regarding the reduced size model architecture, unlike quantisation or pruning. The detailed network architecture of the reduced size model, benchmarking results and inference timing as compared to the pre-trained network are discussed in the next section.</p>
    </sec>
  </sec>
  <sec id="Sec8">
    <title>Results and discussion</title>
    <p id="Par15">We evaluated the performance of EdgeAlign on publicly available Influenza sequences at the National Center for Biotechnology Information (NCBI) Virus Data Hub<sup><xref ref-type="bibr" rid="CR34">34</xref></sup>. The NCBI online tool also provides the BLAST alignment result for a chosen pair of sequences. The objective is to compare the alignment score obtained by the NCBI online tool and EdgeAlign. For fair benchmarking, we analysed the following error metric (<italic>E</italic>) for a given pair of input sequences:<disp-formula id="Equ3"><label>3</label><alternatives><tex-math id="M67">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$E = \left\{ {\begin{array}{*{20}l} {0,} &amp; {{\text{R}} \ge {\text{G}}} \\ {\frac{{G - R}}{G}} &amp; {{\text{R}} &lt; {\text{G}}} \\ \end{array} } \right.$$\end{document}</tex-math><mml:math id="M68" display="block"><mml:mrow><mml:mi>E</mml:mi><mml:mo>=</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mtext>R</mml:mtext><mml:mo>≥</mml:mo><mml:mtext>G</mml:mtext></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mfrac><mml:mrow><mml:mi>G</mml:mi><mml:mo>-</mml:mo><mml:mi>R</mml:mi></mml:mrow><mml:mi>G</mml:mi></mml:mfrac></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mtext>R</mml:mtext><mml:mo>&lt;</mml:mo><mml:mtext>G</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:math><graphic xlink:href="41598_2023_29277_Article_Equ3.gif" position="anchor"/></alternatives></disp-formula>where <italic>R</italic> denotes the alignment score obtained using EdgeAlign, and <italic>G</italic> denotes the alignment score obtained using the NCBI online tool (ground truth). We evaluate the mean error for the target dataset (<italic>N</italic> pair of sequences): <inline-formula id="IEq32"><alternatives><tex-math id="M69">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{1}{N}\sum _i E_i$$\end{document}</tex-math><mml:math id="M70"><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mi>N</mml:mi></mml:mfrac><mml:msub><mml:mo>∑</mml:mo><mml:mi>i</mml:mi></mml:msub><mml:msub><mml:mi>E</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="41598_2023_29277_Article_IEq32.gif"/></alternatives></inline-formula>. This evaluation was performed on a dataset comprising of 40 randomly chosen sequences, with 5 different window sizes. Further, we deployed the DQN network on the NVIDIA Jetson Nano Developer Kit and obtained the inference time required for predicting a single action. The NVIDIA Jetson Nano Developer Kit is a small (69<inline-formula id="IEq33"><alternatives><tex-math id="M71">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\times$$\end{document}</tex-math><mml:math id="M72"><mml:mo>×</mml:mo></mml:math><inline-graphic xlink:href="41598_2023_29277_Article_IEq33.gif"/></alternatives></inline-formula>45 mm), powerful computer with Jetson Nano 2 GB module (128 core NVIDIA Maxwell GPU, Quad-core Arm Cortex-A57 MPCore processor, 2 GB LPDDR4 Memory) that consumes less than 5 W power and is suitable for edge-computing applications. Table <xref rid="Tab2" ref-type="table">2</xref> and Fig. <xref rid="Fig5" ref-type="fig">5</xref> summarise the benchmarking results on the NCBI Virus Data Hub dataset. As evident from the results, the mean error decreases with an increase in the window size. With a larger window, the agent can observe more sequences and take a more informed action. This increased awareness leads to better results as the chosen actions are more reliable for securing higher rewards over the length of the sequence. However, it also increases resource consumption and consequentially, the inference time. These trade-offs must be accounted for while choosing the window size and device for edge implementation. For this study, we performed model size reduction using AutoKeras for 2 different window sizes: 50 and 70. Table <xref rid="Tab3" ref-type="table">3</xref> shows the resulting network architecture and the model parameters obtained for a window size of 50. The benchmarking results on the NCBI Virus Data Hub influenza dataset and the inference time and mean error obtained from the optimised models are shown in Table <xref rid="Tab4" ref-type="table">4</xref>.<table-wrap id="Tab2"><label>Table 2</label><caption><p>Benchmarking results of DQN networks on the NCBI Virus Data Hub influenza dataset.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Window size</th><th align="left">Number of parameters</th><th align="left">Inference time (ms)</th><th align="left">Mean error (%)</th></tr></thead><tbody><tr><td align="left">30</td><td char="." align="char">906,116</td><td align="left">15.67</td><td align="left">19.19</td></tr><tr><td align="left">40</td><td char="." align="char">1,102,724</td><td align="left">16.96</td><td align="left">16.18</td></tr><tr><td align="left">50</td><td char="." align="char">1,364,868</td><td align="left">18.36</td><td align="left">15.01</td></tr><tr><td align="left">60</td><td char="." align="char">1,561,476</td><td align="left">21.33</td><td align="left">13.12</td></tr><tr><td align="left">70</td><td char="." align="char">1,758,084</td><td align="left">25.77</td><td align="left">12.47</td></tr></tbody></table></table-wrap></p>
    <p id="Par16">
      <fig id="Fig5">
        <label>Figure 5</label>
        <caption>
          <p>Benchmarking results on the NCBI Virus Data Hub influenza dataset.</p>
        </caption>
        <graphic xlink:href="41598_2023_29277_Fig5_HTML" id="MO8"/>
      </fig>
      <table-wrap id="Tab3">
        <label>Table 3</label>
        <caption>
          <p>Network architecture of the optimal AutoKeras model (window size: 50).</p>
        </caption>
        <table frame="hsides" rules="groups">
          <thead>
            <tr>
              <th align="left">Layer</th>
              <th align="left">Input size</th>
              <th align="left">Filter shape</th>
              <th align="left">Stride</th>
              <th align="left">Padding</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">Conv1</td>
              <td align="left">
                <inline-formula id="IEq34">
                  <alternatives>
                    <tex-math id="M73">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$100 \times 4 \times 3$$\end{document}</tex-math>
                    <mml:math id="M74">
                      <mml:mrow>
                        <mml:mn>100</mml:mn>
                        <mml:mo>×</mml:mo>
                        <mml:mn>4</mml:mn>
                        <mml:mo>×</mml:mo>
                        <mml:mn>3</mml:mn>
                      </mml:mrow>
                    </mml:math>
                    <inline-graphic xlink:href="41598_2023_29277_Article_IEq34.gif"/>
                  </alternatives>
                </inline-formula>
              </td>
              <td align="left">
                <inline-formula id="IEq35">
                  <alternatives>
                    <tex-math id="M75">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$3 \times 3 \times 32$$\end{document}</tex-math>
                    <mml:math id="M76">
                      <mml:mrow>
                        <mml:mn>3</mml:mn>
                        <mml:mo>×</mml:mo>
                        <mml:mn>3</mml:mn>
                        <mml:mo>×</mml:mo>
                        <mml:mn>32</mml:mn>
                      </mml:mrow>
                    </mml:math>
                    <inline-graphic xlink:href="41598_2023_29277_Article_IEq35.gif"/>
                  </alternatives>
                </inline-formula>
              </td>
              <td align="left">
                <inline-formula id="IEq36">
                  <alternatives>
                    <tex-math id="M77">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1 \times 1$$\end{document}</tex-math>
                    <mml:math id="M78">
                      <mml:mrow>
                        <mml:mn>1</mml:mn>
                        <mml:mo>×</mml:mo>
                        <mml:mn>1</mml:mn>
                      </mml:mrow>
                    </mml:math>
                    <inline-graphic xlink:href="41598_2023_29277_Article_IEq36.gif"/>
                  </alternatives>
                </inline-formula>
              </td>
              <td align="left">Same</td>
            </tr>
            <tr>
              <td align="left">Conv2</td>
              <td align="left">
                <inline-formula id="IEq37">
                  <alternatives>
                    <tex-math id="M79">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$100 \times 4 \times 32$$\end{document}</tex-math>
                    <mml:math id="M80">
                      <mml:mrow>
                        <mml:mn>100</mml:mn>
                        <mml:mo>×</mml:mo>
                        <mml:mn>4</mml:mn>
                        <mml:mo>×</mml:mo>
                        <mml:mn>32</mml:mn>
                      </mml:mrow>
                    </mml:math>
                    <inline-graphic xlink:href="41598_2023_29277_Article_IEq37.gif"/>
                  </alternatives>
                </inline-formula>
              </td>
              <td align="left">
                <inline-formula id="IEq38">
                  <alternatives>
                    <tex-math id="M81">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$3 \times 3 \times 32$$\end{document}</tex-math>
                    <mml:math id="M82">
                      <mml:mrow>
                        <mml:mn>3</mml:mn>
                        <mml:mo>×</mml:mo>
                        <mml:mn>3</mml:mn>
                        <mml:mo>×</mml:mo>
                        <mml:mn>32</mml:mn>
                      </mml:mrow>
                    </mml:math>
                    <inline-graphic xlink:href="41598_2023_29277_Article_IEq38.gif"/>
                  </alternatives>
                </inline-formula>
              </td>
              <td align="left">
                <inline-formula id="IEq39">
                  <alternatives>
                    <tex-math id="M83">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1 \times 1$$\end{document}</tex-math>
                    <mml:math id="M84">
                      <mml:mrow>
                        <mml:mn>1</mml:mn>
                        <mml:mo>×</mml:mo>
                        <mml:mn>1</mml:mn>
                      </mml:mrow>
                    </mml:math>
                    <inline-graphic xlink:href="41598_2023_29277_Article_IEq39.gif"/>
                  </alternatives>
                </inline-formula>
              </td>
              <td align="left">Same</td>
            </tr>
            <tr>
              <td align="left">Max pooling</td>
              <td align="left">
                <inline-formula id="IEq40">
                  <alternatives>
                    <tex-math id="M85">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$100 \times 4 \times 32$$\end{document}</tex-math>
                    <mml:math id="M86">
                      <mml:mrow>
                        <mml:mn>100</mml:mn>
                        <mml:mo>×</mml:mo>
                        <mml:mn>4</mml:mn>
                        <mml:mo>×</mml:mo>
                        <mml:mn>32</mml:mn>
                      </mml:mrow>
                    </mml:math>
                    <inline-graphic xlink:href="41598_2023_29277_Article_IEq40.gif"/>
                  </alternatives>
                </inline-formula>
              </td>
              <td align="left">
                <inline-formula id="IEq41">
                  <alternatives>
                    <tex-math id="M87">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$2 \times 2$$\end{document}</tex-math>
                    <mml:math id="M88">
                      <mml:mrow>
                        <mml:mn>2</mml:mn>
                        <mml:mo>×</mml:mo>
                        <mml:mn>2</mml:mn>
                      </mml:mrow>
                    </mml:math>
                    <inline-graphic xlink:href="41598_2023_29277_Article_IEq41.gif"/>
                  </alternatives>
                </inline-formula>
              </td>
              <td align="left">
                <inline-formula id="IEq42">
                  <alternatives>
                    <tex-math id="M89">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$2\times 2$$\end{document}</tex-math>
                    <mml:math id="M90">
                      <mml:mrow>
                        <mml:mn>2</mml:mn>
                        <mml:mo>×</mml:mo>
                        <mml:mn>2</mml:mn>
                      </mml:mrow>
                    </mml:math>
                    <inline-graphic xlink:href="41598_2023_29277_Article_IEq42.gif"/>
                  </alternatives>
                </inline-formula>
              </td>
              <td align="left">–</td>
            </tr>
            <tr>
              <td align="left">Conv3</td>
              <td align="left">
                <inline-formula id="IEq43">
                  <alternatives>
                    <tex-math id="M91">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$50 \times 2 \times 32$$\end{document}</tex-math>
                    <mml:math id="M92">
                      <mml:mrow>
                        <mml:mn>50</mml:mn>
                        <mml:mo>×</mml:mo>
                        <mml:mn>2</mml:mn>
                        <mml:mo>×</mml:mo>
                        <mml:mn>32</mml:mn>
                      </mml:mrow>
                    </mml:math>
                    <inline-graphic xlink:href="41598_2023_29277_Article_IEq43.gif"/>
                  </alternatives>
                </inline-formula>
              </td>
              <td align="left">
                <inline-formula id="IEq44">
                  <alternatives>
                    <tex-math id="M93">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$3 \times 3 \times 64$$\end{document}</tex-math>
                    <mml:math id="M94">
                      <mml:mrow>
                        <mml:mn>3</mml:mn>
                        <mml:mo>×</mml:mo>
                        <mml:mn>3</mml:mn>
                        <mml:mo>×</mml:mo>
                        <mml:mn>64</mml:mn>
                      </mml:mrow>
                    </mml:math>
                    <inline-graphic xlink:href="41598_2023_29277_Article_IEq44.gif"/>
                  </alternatives>
                </inline-formula>
              </td>
              <td align="left">
                <inline-formula id="IEq45">
                  <alternatives>
                    <tex-math id="M95">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1 \times 1$$\end{document}</tex-math>
                    <mml:math id="M96">
                      <mml:mrow>
                        <mml:mn>1</mml:mn>
                        <mml:mo>×</mml:mo>
                        <mml:mn>1</mml:mn>
                      </mml:mrow>
                    </mml:math>
                    <inline-graphic xlink:href="41598_2023_29277_Article_IEq45.gif"/>
                  </alternatives>
                </inline-formula>
              </td>
              <td align="left">Same</td>
            </tr>
            <tr>
              <td align="left">Conv4</td>
              <td align="left">
                <inline-formula id="IEq46">
                  <alternatives>
                    <tex-math id="M97">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$50 \times 2 \times 64$$\end{document}</tex-math>
                    <mml:math id="M98">
                      <mml:mrow>
                        <mml:mn>50</mml:mn>
                        <mml:mo>×</mml:mo>
                        <mml:mn>2</mml:mn>
                        <mml:mo>×</mml:mo>
                        <mml:mn>64</mml:mn>
                      </mml:mrow>
                    </mml:math>
                    <inline-graphic xlink:href="41598_2023_29277_Article_IEq46.gif"/>
                  </alternatives>
                </inline-formula>
              </td>
              <td align="left">
                <inline-formula id="IEq47">
                  <alternatives>
                    <tex-math id="M99">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$3 \times 3 \times 32$$\end{document}</tex-math>
                    <mml:math id="M100">
                      <mml:mrow>
                        <mml:mn>3</mml:mn>
                        <mml:mo>×</mml:mo>
                        <mml:mn>3</mml:mn>
                        <mml:mo>×</mml:mo>
                        <mml:mn>32</mml:mn>
                      </mml:mrow>
                    </mml:math>
                    <inline-graphic xlink:href="41598_2023_29277_Article_IEq47.gif"/>
                  </alternatives>
                </inline-formula>
              </td>
              <td align="left">
                <inline-formula id="IEq48">
                  <alternatives>
                    <tex-math id="M101">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1 \times 1$$\end{document}</tex-math>
                    <mml:math id="M102">
                      <mml:mrow>
                        <mml:mn>1</mml:mn>
                        <mml:mo>×</mml:mo>
                        <mml:mn>1</mml:mn>
                      </mml:mrow>
                    </mml:math>
                    <inline-graphic xlink:href="41598_2023_29277_Article_IEq48.gif"/>
                  </alternatives>
                </inline-formula>
              </td>
              <td align="left">Same</td>
            </tr>
            <tr>
              <td align="left">Max pooling</td>
              <td align="left">
                <inline-formula id="IEq49">
                  <alternatives>
                    <tex-math id="M103">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$50 \times 2\times 32$$\end{document}</tex-math>
                    <mml:math id="M104">
                      <mml:mrow>
                        <mml:mn>50</mml:mn>
                        <mml:mo>×</mml:mo>
                        <mml:mn>2</mml:mn>
                        <mml:mo>×</mml:mo>
                        <mml:mn>32</mml:mn>
                      </mml:mrow>
                    </mml:math>
                    <inline-graphic xlink:href="41598_2023_29277_Article_IEq49.gif"/>
                  </alternatives>
                </inline-formula>
              </td>
              <td align="left">
                <inline-formula id="IEq50">
                  <alternatives>
                    <tex-math id="M105">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$2 \times 2$$\end{document}</tex-math>
                    <mml:math id="M106">
                      <mml:mrow>
                        <mml:mn>2</mml:mn>
                        <mml:mo>×</mml:mo>
                        <mml:mn>2</mml:mn>
                      </mml:mrow>
                    </mml:math>
                    <inline-graphic xlink:href="41598_2023_29277_Article_IEq50.gif"/>
                  </alternatives>
                </inline-formula>
              </td>
              <td align="left">
                <inline-formula id="IEq51">
                  <alternatives>
                    <tex-math id="M107">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$2 \times 2$$\end{document}</tex-math>
                    <mml:math id="M108">
                      <mml:mrow>
                        <mml:mn>2</mml:mn>
                        <mml:mo>×</mml:mo>
                        <mml:mn>2</mml:mn>
                      </mml:mrow>
                    </mml:math>
                    <inline-graphic xlink:href="41598_2023_29277_Article_IEq51.gif"/>
                  </alternatives>
                </inline-formula>
              </td>
              <td align="left">–</td>
            </tr>
            <tr>
              <td align="left">Flatten</td>
              <td align="left">
                <inline-formula id="IEq52">
                  <alternatives>
                    <tex-math id="M109">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$25 \times 1 \times 32$$\end{document}</tex-math>
                    <mml:math id="M110">
                      <mml:mrow>
                        <mml:mn>25</mml:mn>
                        <mml:mo>×</mml:mo>
                        <mml:mn>1</mml:mn>
                        <mml:mo>×</mml:mo>
                        <mml:mn>32</mml:mn>
                      </mml:mrow>
                    </mml:math>
                    <inline-graphic xlink:href="41598_2023_29277_Article_IEq52.gif"/>
                  </alternatives>
                </inline-formula>
              </td>
              <td align="left">–</td>
              <td align="left">–</td>
              <td align="left">–</td>
            </tr>
            <tr>
              <td align="left">FC1</td>
              <td align="left">800</td>
              <td align="left">64</td>
              <td align="left">–</td>
              <td align="left">–</td>
            </tr>
            <tr>
              <td align="left">FC2</td>
              <td align="left">64</td>
              <td align="left">4</td>
              <td align="left">–</td>
              <td align="left">–</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      <table-wrap id="Tab4">
        <label>Table 4</label>
        <caption>
          <p>Benchmarking results of pre-trained DQN and optimised model generated using AutoKeras on the NCBI Virus Data Hub influenza dataset. The computations were performed on the NVIDIA Jetson Nano Developer Kit with floating point precision.</p>
        </caption>
        <table frame="hsides" rules="groups">
          <thead>
            <tr>
              <th align="left">Window size</th>
              <th align="left" colspan="2">50</th>
              <th align="left" colspan="2">70</th>
            </tr>
            <tr>
              <th align="left">Model</th>
              <th align="left">Pre-trained DQN</th>
              <th align="left">AutoKeras</th>
              <th align="left">Pre-trained DQN</th>
              <th align="left">AutoKeras</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">Number of parameters</td>
              <td align="left">1,364,739</td>
              <td align="left">98,628</td>
              <td align="left">1,758,084</td>
              <td align="left">119,108</td>
            </tr>
            <tr>
              <td align="left">Inference time (ms)</td>
              <td align="left">18.36</td>
              <td align="left">2.32</td>
              <td align="left">25.77</td>
              <td align="left">9.82</td>
            </tr>
            <tr>
              <td align="left">Mean error (%)</td>
              <td align="left">15.01</td>
              <td align="left">17.98</td>
              <td align="left">12.47</td>
              <td align="left">11.79</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
    </p>
    <p id="Par17">The reduced size model generated with AutoKeras is suitable for edge deployment. We deployed and evaluated performance of the model with window size of 50 on some representative edge platforms. To evaluate performance on a low-cost embedded platform with very limited resources, we chose the 32F746GDISCOVERY Discovery kit containing the STMicroelectronics Arm Cortex-M7-core-based STM32F746NG microcontroller with 1 MB of Flash memory and 340 kB of RAM. The AutoKeras generated model was exported as a TensorFlow Lite model (.tflite), and converted to a header file (.h) that can be processed by TensorFlow Lite for Microcontrollers framework<sup><xref ref-type="bibr" rid="CR19">19</xref></sup>. During run-time, we first read both sequences from a host computer using an UART port. Next, we invoke the TesorFlow Lite model and perform sequence alignment on the edge device. Finally, we send the list of actions computed by the model back to the host computer via the same UART port. A pySerial (Python serial port extension) link was setup on the host computer interface to navigate this communication. Presently, TensorFlow Lite for Microcontrollers does not support fixed-point precision. Using 8-bit integer representation resulted in a model of size approximately 100 kB for window size 50. However, as expected the reduction of numeric precision resulted in large errors, with approximately 70% reduction in number of matches found as compared to the pre-trained DQN network. Therefore, it is necessary to use floating-point precision for representing the model, and hence a microcontroller device cannot be used as the edge platform.</p>
    <p id="Par18">We then evaluated the model performance on a more capable embedded system, namely a field programmable gate array (FPGA) device. For this purpose, we chose the Digilent Arty A7-100T, containing Xilinx XC7A35T Artix-7 FPGA. The program instructions and model data are stored in the onboard DDR3 memory, and the block RAM (BRAM) is reserved for implementing custom hardware accelerator IPs. We observed the inference time for predicting a single action with the AutoKeras model of window size 50 to be 2.05 s for 100 MHz clock. The mean error on the FPGA remains same as before since all the computations were performed in floating-precision. To improve the performance, we implemented a CNN-layer accelerator to perform the convolution operation based on the row-stationary approach, inspired by the Eyeriss architecture<sup><xref ref-type="bibr" rid="CR35">35</xref></sup>, which is an energy-efficient reconfigurable accelerator for deep convolutional neural networks. Such a design allows us to maximise parallelism and data reuse in the convolution operation. This IP was designed and implemented using the Xilinx Vivado HLS tool (version 2021.2), and was integrated with the on-chip MicroBlaze (32-bit RISC soft processor) core using the Xilinx Vivado tool. The reference code and detailed documentation for porting TensorFlow Lite model to MicroBlaze core is available on GitHub<sup><xref ref-type="bibr" rid="CR36">36</xref></sup>. The corresponding TFLite kernels were also modified to invoke the custom IPs. This resulted in a speed-up factor of 2 X, and inference time of 1 s for 100 MHz clock. While this is considerably slower than the low-cost GPU (NVIDIA Jetson Nano Developer Kit), the ability to deploy sequence alignment algorithms on embedded systems such as microcontrollers and FPGAs presented in this work enables the use of such platforms for low-cost bioinformatics applications. Table <xref rid="Tab5" ref-type="table">5</xref> shows the resource utilisation for the FPGA implementation, with and without the usage of custom accelerator IPs. For interested readers, a more detailed report about the hardware implementation and design of custom accelerators used in this work is provided on GitHub<sup><xref ref-type="bibr" rid="CR37">37</xref></sup>.</p>
    <p id="Par19">A common feature of deep reinforcement learning-based implementations for sequence alignment reported in literature<sup><xref ref-type="bibr" rid="CR15">15</xref>,<xref ref-type="bibr" rid="CR17">17</xref>,<xref ref-type="bibr" rid="CR18">18</xref></sup>, is that none of them are deployed on edge devices, and therefore relevant performance metrics such as inference time (per action) are not reported. The implementation reported by Jafari et al. uses a model with &gt; 33 K parameters<sup><xref ref-type="bibr" rid="CR15">15</xref></sup>, and Ramchalam et al. reported a model with &gt; 0.19 M parameters<sup><xref ref-type="bibr" rid="CR17">17</xref></sup>. Model size was not reported for the implementation shown by Joeres et al.<sup><xref ref-type="bibr" rid="CR18">18</xref></sup>. All these implementations were based on multiple sequence alignment and used SP score (sum-of-pairs) as the alignment scoring metric. The pairwise sequence alignment implementation by Song et al.<sup><xref ref-type="bibr" rid="CR16">16</xref></sup> used a model with &gt; 1.38 M parameters, with a simulation based inference timing of 14 ms. The alignment score was evaluated using Exact Matches metric. The EdgeAlign model uses BLAST score as the alignment score, and the model size of approximately 98 k parameters and inference time of 2.32 ms per action (AutoKeras with window size of 50, implemented on NVIDIA Jetson Nano Developer Kit) are better than the implementation reported by Song et al.<sup><xref ref-type="bibr" rid="CR16">16</xref></sup>.<table-wrap id="Tab5"><label>Table 5</label><caption><p>Resource utilisation for the Arty A7-100T FPGA implementation.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Resources in Arty A7-100T FPGA</th><th align="left">36kbit BRAM</th><th align="left">DSP slices</th><th align="left">Flip-flop</th><th align="left">LUT</th></tr></thead><tbody><tr><td align="left">Maximum available</td><td char="." align="char">135</td><td char="." align="char">240</td><td char="." align="char">126,800</td><td char="." align="char">63,400</td></tr><tr><td align="left">Without hardware acceleration</td><td char="." align="char">13</td><td char="." align="char">5</td><td char="." align="char">12,922</td><td char="." align="char">11,363</td></tr><tr><td align="left">With hardware acceleration</td><td char="." align="char">51</td><td char="." align="char">89</td><td char="." align="char">29,012</td><td char="." align="char">25,513</td></tr></tbody></table></table-wrap></p>
  </sec>
  <sec id="Sec9">
    <title>Conclusion</title>
    <p id="Par20">In summary, this work presents a method to develop compact deep RL models using AutoML for performing pairwise DNA sequence alignment on embedded edge devices. We has demonstrated a novel method based on AutoML for reducing model size for deep reinforcement learning, while preserving floating-point precision for greater accuracy. The models thus produced have an order of magnitude lesser number of trainable parameters compared to deep RL models designed using conventional DQN architecture, and the use of Keras-RL library further streamlines the design and training process and enables easy debugging of the code. EdgeAlign, the RL-based sequence alignment tool presented in this work, is capable of processing sequences of arbitrary lengths with fixed resource utilisation, albeit with a trade-off in inference time for longer sequences. The performance results for EdgeAlign are benchmarked using the publicly available NCBI Virus Data Hub dataset to evaluate the trade-off between accuracy and throughput. Additional improvements may focus on further optimisation of the reward system and model architecture, to improve inference time and reduce resource utilisation. The window size could also be made adaptable to account for diversity in the input DNA sequences i.e., if the input sequences are less diverse, we could use a shorter window size. This parameter can be adjusted during run-time, based on live performance of the model. The AutoML based model size reduction technique can also be used in various other applications where inference time is a critical specification, such as visual applications including drone navigation, simultaneous localisation and mapping (SLAM), beamforming, etc.</p>
  </sec>
</body>
<back>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher's note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>The authors thank Dr. Anirvan Chatterjee at HaystackAnalytics Pvt. Ltd. and Prof. Kiran Kondabagil at IIT Bombay for insightful discussions on sequence alignment, and the Wadhwani Electronics Lab (WEL) at IIT Bombay for providing hardware and computational resources to support this work. Activities at WEL are supported through a grant from the Wadhwani Foundation [grant DO/2015-WEL001].</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Author contributions</title>
    <p>A.L. and S.T. conceived the experiments, A.L. conducted the experiments. Both authors analysed the results and prepared the manuscript.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Data availability</title>
    <p>The sequences used for benchmarking EdgeAlign performance were obtained from the publicly available Influenza sequences at the National Center for Biotechnology Information (NCBI) Virus Data Hub<sup><xref ref-type="bibr" rid="CR34">34</xref></sup>. FASTA format files of the sequences analysed are available on GitHub<sup><xref ref-type="bibr" rid="CR21">21</xref></sup>: <ext-link ext-link-type="uri" xlink:href="https://github.com/aryanlall11/EdgeAlign/tree/master/Influenza">https://github.com/aryanlall11/EdgeAlign/tree/master/Influenza</ext-link>.</p>
  </notes>
  <notes id="FPar1" notes-type="COI-statement">
    <title>Competing interests</title>
    <p id="Par21">The authors declare no competing interests.</p>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mattick</surname>
            <given-names>JS</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The impact of genomics on the future of medicine and health</article-title>
        <source>Med. J. Aust.</source>
        <year>2014</year>
        <volume>201</volume>
        <fpage>17</fpage>
        <lpage>20</lpage>
        <pub-id pub-id-type="doi">10.5694/mja13.10920</pub-id>
        <?supplied-pmid 24999876?>
        <pub-id pub-id-type="pmid">24999876</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jain</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Olsen</surname>
            <given-names>HE</given-names>
          </name>
          <name>
            <surname>Paten</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Akeson</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>The Oxford Nanopore MinION: Delivery of nanopore sequencing to the genomics community</article-title>
        <source>Genome Biol.</source>
        <year>2016</year>
        <volume>17</volume>
        <fpage>1</fpage>
        <lpage>11</lpage>
        <pub-id pub-id-type="pmid">26753840</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Needleman</surname>
            <given-names>SB</given-names>
          </name>
          <name>
            <surname>Wunsch</surname>
            <given-names>CD</given-names>
          </name>
        </person-group>
        <article-title>A general method applicable to the search for similarities in the amino acid sequence of two proteins</article-title>
        <source>J. Mol. Biol.</source>
        <year>1970</year>
        <volume>48</volume>
        <fpage>443</fpage>
        <lpage>453</lpage>
        <pub-id pub-id-type="doi">10.1016/0022-2836(70)90057-4</pub-id>
        <?supplied-pmid 5420325?>
        <pub-id pub-id-type="pmid">5420325</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Larkin</surname>
            <given-names>MA</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Clustal W and Clustal X version 2.0</article-title>
        <source>Bioinformatics</source>
        <year>2007</year>
        <volume>23</volume>
        <fpage>2947</fpage>
        <lpage>2948</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btm404</pub-id>
        <?supplied-pmid 17846036?>
        <pub-id pub-id-type="pmid">17846036</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Edgar</surname>
            <given-names>RC</given-names>
          </name>
        </person-group>
        <article-title>MUSCLE: Multiple sequence alignment with high accuracy and high throughput</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2004</year>
        <volume>32</volume>
        <fpage>1792</fpage>
        <lpage>1797</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkh340</pub-id>
        <?supplied-pmid 15034147?>
        <pub-id pub-id-type="pmid">15034147</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Katoh</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Standley</surname>
            <given-names>DM</given-names>
          </name>
        </person-group>
        <article-title>MAFFT multiple sequence alignment software version 7: Improvements in performance and usability</article-title>
        <source>Mol. Biol. Evol.</source>
        <year>2013</year>
        <volume>30</volume>
        <fpage>772</fpage>
        <lpage>780</lpage>
        <pub-id pub-id-type="doi">10.1093/molbev/mst010</pub-id>
        <?supplied-pmid 23329690?>
        <pub-id pub-id-type="pmid">23329690</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sievers</surname>
            <given-names>F</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Fast, scalable generation of high-quality protein multiple sequence alignments using Clustal Omega</article-title>
        <source>Mol. Syst. Biol.</source>
        <year>2011</year>
        <volume>7</volume>
        <fpage>539</fpage>
        <pub-id pub-id-type="doi">10.1038/msb.2011.75</pub-id>
        <?supplied-pmid 21988835?>
        <pub-id pub-id-type="pmid">21988835</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chao</surname>
            <given-names>K-M</given-names>
          </name>
          <name>
            <surname>Pearson</surname>
            <given-names>WR</given-names>
          </name>
          <name>
            <surname>Miller</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <article-title>Aligning two sequences within a specified diagonal band</article-title>
        <source>Bioinformatics</source>
        <year>1992</year>
        <volume>8</volume>
        <fpage>481</fpage>
        <lpage>487</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/8.5.481</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Camacho</surname>
            <given-names>C</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>BLAST+: Architecture and applications</article-title>
        <source>BMC Bioinform.</source>
        <year>2009</year>
        <volume>10</volume>
        <fpage>1</fpage>
        <lpage>9</lpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-10-421</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Marçais</surname>
            <given-names>G</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>MUMmer4: A fast and versatile genome alignment system</article-title>
        <source>PLoS Comput. Biol.</source>
        <year>2018</year>
        <volume>14</volume>
        <fpage>e1005944</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1005944</pub-id>
        <?supplied-pmid 29373581?>
        <pub-id pub-id-type="pmid">29373581</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <mixed-citation publication-type="other">NCBI, B. L. A. S. T. Basic local alignment search tool—NCBI. <ext-link ext-link-type="uri" xlink:href="https://blast.ncbi.nlm.nih.gov/Blast.cgi">https://blast.ncbi.nlm.nih.gov/Blast.cgi</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>McGinnis</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Madden</surname>
            <given-names>TL</given-names>
          </name>
        </person-group>
        <article-title>BLAST: At the core of a powerful and diverse set of sequence analysis tools</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2004</year>
        <volume>32</volume>
        <fpage>W20</fpage>
        <lpage>W25</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkh435</pub-id>
        <?supplied-pmid 15215342?>
        <pub-id pub-id-type="pmid">15215342</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Morgulis</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Gertz</surname>
            <given-names>EM</given-names>
          </name>
          <name>
            <surname>Schäffer</surname>
            <given-names>AA</given-names>
          </name>
          <name>
            <surname>Agarwala</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>A fast and symmetric DUST implementation to mask low-complexity DNA sequences</article-title>
        <source>J. Comput. Biol.</source>
        <year>2006</year>
        <volume>13</volume>
        <fpage>1028</fpage>
        <lpage>1040</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2006.13.1028</pub-id>
        <?supplied-pmid 16796549?>
        <pub-id pub-id-type="pmid">16796549</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <mixed-citation publication-type="other">Mircea, I.-G., Bocicor, I. &amp; Czibula, G. A reinforcement learning based approach to multiple sequence alignment. In <italic>International Workshop Soft Computing Applications</italic> 54–70 (Springer, 2016).</mixed-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jafari</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Javidi</surname>
            <given-names>M M</given-names>
          </name>
          <name>
            <surname>Kuchaki Rafsanjani</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Using deep reinforcement learning approach for solving the multiple sequence alignment problem</article-title>
        <source>SN Appl. Sci.</source>
        <year>2019</year>
        <volume>1</volume>
        <fpage>1</fpage>
        <lpage>12</lpage>
        <pub-id pub-id-type="doi">10.1007/s42452-019-0611-4</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Song</surname>
            <given-names>Y-J</given-names>
          </name>
          <name>
            <surname>Ji</surname>
            <given-names>DJ</given-names>
          </name>
          <name>
            <surname>Seo</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Han</surname>
            <given-names>GB</given-names>
          </name>
          <name>
            <surname>Cho</surname>
            <given-names>D-H</given-names>
          </name>
        </person-group>
        <article-title>Pairwise heuristic sequence alignment algorithm based on deep reinforcement learning</article-title>
        <source>IEEE Open J. Eng. Med. Biol.</source>
        <year>2021</year>
        <volume>2</volume>
        <fpage>36</fpage>
        <lpage>43</lpage>
        <pub-id pub-id-type="doi">10.1109/OJEMB.2021.3055424</pub-id>
        <?supplied-pmid 35402983?>
        <pub-id pub-id-type="pmid">35402983</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <mixed-citation publication-type="other">Ramakrishnan, R. K., Singh, J. &amp; Blanchette, M. RLALIGN: A reinforcement learning approach for multiple sequence alignment. In <italic>2018 IEEE 18th International Conference on Bioinformatics and Bioengineering (BIBE)</italic> 61–66 (IEEE, 2018).</mixed-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <mixed-citation publication-type="other">Joeres, R. Multiple sequence alignment using deep reinforcement learning. SKILL 2021 (2021).</mixed-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>David</surname>
            <given-names>R</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>TensorFlow Lite Micro: Embedded machine learning for TinyML systems</article-title>
        <source>Proc. Mach. Learn. Syst.</source>
        <year>2021</year>
        <volume>3</volume>
        <fpage>800</fpage>
        <lpage>811</lpage>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>He</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Zhao</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Chu</surname>
            <given-names>X</given-names>
          </name>
        </person-group>
        <article-title>AutoML: A survey of the state-of-the-art</article-title>
        <source>Knowl. Based Syst.</source>
        <year>2021</year>
        <volume>212</volume>
        <fpage>106622</fpage>
        <pub-id pub-id-type="doi">10.1016/j.knosys.2020.106622</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <mixed-citation publication-type="other">Lall, A. EdgeAlign. <ext-link ext-link-type="uri" xlink:href="https://github.com/aryanlall11/EdgeAlign">https://github.com/aryanlall11/EdgeAlign</ext-link> (2022).</mixed-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <mixed-citation publication-type="other">Li, Y. Deep reinforcement learning: An overview. arXiv preprint <ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/1701.07274">arXiv:1701.07274</ext-link> (2017).</mixed-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hornik</surname>
            <given-names>K</given-names>
          </name>
        </person-group>
        <article-title>Approximation capabilities of multilayer feedforward networks</article-title>
        <source>Neural Netw.</source>
        <year>1991</year>
        <volume>4</volume>
        <fpage>251</fpage>
        <lpage>257</lpage>
        <pub-id pub-id-type="doi">10.1016/0893-6080(91)90009-T</pub-id>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <mixed-citation publication-type="other">Wang, Z. <italic>et al.</italic> Dueling network architectures for deep reinforcement learning. In <italic>International Conference on Machine Learning</italic> 1995–2003 (PMLR, 2016).</mixed-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <mixed-citation publication-type="other">Manual, A. N. B. C. L. A. U. Appendices—ncbi blast command line applications user manual. <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/books/NBK279684/">https://www.ncbi.nlm.nih.gov/books/NBK279684/</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jukes</surname>
            <given-names>TH</given-names>
          </name>
          <name>
            <surname>Cantor</surname>
            <given-names>CR</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Evolution of protein molecules</article-title>
        <source>Mamm. Protein Metab.</source>
        <year>1969</year>
        <volume>3</volume>
        <fpage>21</fpage>
        <lpage>132</lpage>
        <pub-id pub-id-type="doi">10.1016/B978-1-4832-3211-9.50009-7</pub-id>
      </element-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Qian</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Goldstein</surname>
            <given-names>R A</given-names>
          </name>
        </person-group>
        <article-title>Distribution of indel lengths</article-title>
        <source>Proteins Struct. Funct. Bioinform.</source>
        <year>2001</year>
        <volume>45</volume>
        <fpage>102</fpage>
        <lpage>104</lpage>
        <pub-id pub-id-type="doi">10.1002/prot.1129</pub-id>
      </element-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <mixed-citation publication-type="other">Plappert, M. keras-rl. <ext-link ext-link-type="uri" xlink:href="https://github.com/keras-rl/keras-rl">https://github.com/keras-rl/keras-rl</ext-link> (2016).</mixed-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Liang</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Glossner</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Shi</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>X</given-names>
          </name>
        </person-group>
        <article-title>Pruning and quantization for deep neural network acceleration: A survey</article-title>
        <source>Neurocomputing</source>
        <year>2021</year>
        <volume>461</volume>
        <fpage>370</fpage>
        <lpage>403</lpage>
        <pub-id pub-id-type="doi">10.1016/j.neucom.2021.07.045</pub-id>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Deng</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Han</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Shi</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Xie</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>Model compression and hardware acceleration for neural networks: A comprehensive survey</article-title>
        <source>Proc. IEEE</source>
        <year>2020</year>
        <volume>108</volume>
        <fpage>485</fpage>
        <lpage>532</lpage>
        <pub-id pub-id-type="doi">10.1109/JPROC.2020.2976475</pub-id>
      </element-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gou</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Yu</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Maybank</surname>
            <given-names>SJ</given-names>
          </name>
          <name>
            <surname>Tao</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>Knowledge distillation: A survey</article-title>
        <source>Int. J. Comput. Vis.</source>
        <year>2021</year>
        <volume>129</volume>
        <fpage>1789</fpage>
        <lpage>1819</lpage>
        <pub-id pub-id-type="doi">10.1007/s11263-021-01453-z</pub-id>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ren</surname>
            <given-names>P</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A comprehensive survey of neural architecture search: Challenges and solutions</article-title>
        <source>ACM Comput. Surv. (CSUR)</source>
        <year>2021</year>
        <volume>54</volume>
        <fpage>1</fpage>
        <lpage>34</lpage>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <mixed-citation publication-type="other">Jin, H., Song, Q. &amp; Hu, X. Auto-Keras: An efficient neural architecture search system. In <italic>Proceedings of the 25th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining</italic> 1946–1956 (ACM, 2019).</mixed-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hatcher</surname>
            <given-names>EL</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Virus variation resource—Improved response to emergent viral outbreaks</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2017</year>
        <volume>45</volume>
        <fpage>D482</fpage>
        <lpage>D490</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkw1065</pub-id>
        <?supplied-pmid 27899678?>
        <pub-id pub-id-type="pmid">27899678</pub-id>
      </element-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chen</surname>
            <given-names>Y-H</given-names>
          </name>
          <name>
            <surname>Krishna</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Emer</surname>
            <given-names>JS</given-names>
          </name>
          <name>
            <surname>Sze</surname>
            <given-names>V</given-names>
          </name>
        </person-group>
        <article-title>Eyeriss: An energy-efficient reconfigurable accelerator for deep convolutional neural networks</article-title>
        <source>IEEE J. Solid-State Circuits</source>
        <year>2016</year>
        <volume>52</volume>
        <fpage>127</fpage>
        <lpage>138</lpage>
        <pub-id pub-id-type="doi">10.1109/JSSC.2016.2616357</pub-id>
      </element-citation>
    </ref>
    <ref id="CR36">
      <label>36.</label>
      <mixed-citation publication-type="other">Lall, A. TFLite-Micro-Accelerator. <ext-link ext-link-type="uri" xlink:href="https://github.com/aryanlall11/TFLite-Micro-Accelerator">https://github.com/aryanlall11/TFLite-Micro-Accelerator</ext-link> (2022).</mixed-citation>
    </ref>
    <ref id="CR37">
      <label>37.</label>
      <mixed-citation publication-type="other">Lall, A. EdgeAlign Hardware Implementation. <ext-link ext-link-type="uri" xlink:href="https://github.com/aryanlall11/EdgeAlign/blob/master/DDP_Report_17D070053.pdf">https://github.com/aryanlall11/EdgeAlign/blob/master/DDP_Report_17D070053.pdf</ext-link> (2022).</mixed-citation>
    </ref>
  </ref-list>
</back>

<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v2.3 20070202//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName journalpublishing.dtd?>
<?SourceDTD.Version 2.3?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <?epub April-4-2013?>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Nucleic Acids Res</journal-id>
    <journal-id journal-id-type="iso-abbrev">Nucleic Acids Res</journal-id>
    <journal-id journal-id-type="publisher-id">nar</journal-id>
    <journal-id journal-id-type="hwp">nar</journal-id>
    <journal-title-group>
      <journal-title>Nucleic Acids Research</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">0305-1048</issn>
    <issn pub-type="epub">1362-4962</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">3664803</article-id>
    <article-id pub-id-type="doi">10.1093/nar/gkt214</article-id>
    <article-id pub-id-type="publisher-id">gkt214</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Methods Online</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>The Subread aligner: fast, accurate and scalable read mapping by seed-and-vote</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Liao</surname>
          <given-names>Yang</given-names>
        </name>
        <xref ref-type="aff" rid="gkt214-AFF1">
          <sup>1</sup>
        </xref>
        <xref ref-type="aff" rid="gkt214-AFF1">
          <sup>2</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Smyth</surname>
          <given-names>Gordon K.</given-names>
        </name>
        <xref ref-type="aff" rid="gkt214-AFF1">
          <sup>1</sup>
        </xref>
        <xref ref-type="aff" rid="gkt214-AFF1">
          <sup>3</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Shi</surname>
          <given-names>Wei</given-names>
        </name>
        <xref ref-type="aff" rid="gkt214-AFF1">
          <sup>1</sup>
        </xref>
        <xref ref-type="aff" rid="gkt214-AFF1">
          <sup>2</sup>
        </xref>
        <xref ref-type="corresp" rid="gkt214-COR1">*</xref>
      </contrib>
    </contrib-group>
    <aff id="gkt214-AFF1"><sup>1</sup>Division of Bioinformatics, The Walter and Eliza Hall Institute of Medical Research, 1G Royal Parade, Parkville, Victoria 3052, Australia, <sup>2</sup>Department of Computing and Information Systems, The University of Melbourne, Parkville, Victoria 3010, Australia and <sup>3</sup>Department of Mathematics and Statistics, The University of Melbourne, Parkville, Victoria 3010, Australia</aff>
    <author-notes>
      <corresp id="gkt214-COR1">*To whom correspondence should be addressed. Tel: <phone>+61 3 93452629</phone>; Fax: <fax>+61 3 93470852</fax>; Email: <email>shi@wehi.edu.au</email></corresp>
    </author-notes>
    <pub-date pub-type="ppub">
      <month>5</month>
      <year>2013</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>3</day>
      <month>4</month>
      <year>2013</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>3</day>
      <month>4</month>
      <year>2013</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the
							<pub-date pub-type="epub"/>. -->
    <volume>41</volume>
    <issue>10</issue>
    <fpage>e108</fpage>
    <lpage>e108</lpage>
    <history>
      <date date-type="received">
        <day>14</day>
        <month>10</month>
        <year>2012</year>
      </date>
      <date date-type="rev-recd">
        <day>7</day>
        <month>3</month>
        <year>2013</year>
      </date>
      <date date-type="accepted">
        <day>8</day>
        <month>3</month>
        <year>2013</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2013. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2013</copyright-year>
      <license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by-nc/3.0/">
        <license-p><!--CREATIVE COMMONS-->This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by-nc/3.0/">http://creativecommons.org/licenses/by-nc/3.0/</ext-link>), which permits unrestricted non-commercial use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <abstract>
      <p>Read alignment is an ongoing challenge for the analysis of data from sequencing technologies. This article proposes an elegantly simple multi-seed strategy, called seed-and-vote, for mapping reads to a reference genome. The new strategy chooses the mapped genomic location for the read directly from the seeds. It uses a relatively large number of short seeds (called subreads) extracted from each read and allows all the seeds to vote on the optimal location. When the read length is &lt;160 bp, overlapping subreads are used. More conventional alignment algorithms are then used to fill in detailed mismatch and indel information between the subreads that make up the winning voting block. The strategy is fast because the overall genomic location has already been chosen before the detailed alignment is done. It is sensitive because no individual subread is required to map exactly, nor are individual subreads constrained to map close by other subreads. It is accurate because the final location must be supported by several different subreads. The strategy extends easily to find exon junctions, by locating reads that contain sets of subreads mapping to different exons of the same gene. It scales up efficiently for longer reads.</p>
    </abstract>
    <counts>
      <page-count count="17"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>INTRODUCTION</title>
    <p>Developments in next-generation (next-gen) sequencing technologies that parallelize the sequencing process have dramatically increased world-wide sequencing capacity in the past few years. Individual projects, such as the 1000 Genomes project (<xref ref-type="bibr" rid="gkt214-B1">1</xref>) or The Cancer Genome Atlas (<ext-link ext-link-type="uri" xlink:href="http://cancergenome.nih.gov">http://cancergenome.nih.gov</ext-link>, March 2013), can produce tens or hundreds of terabytes of sequence. A single Illumina HiSeq system now has the capacity to generate &gt;4 billion bases of sequence per hour. Meanwhile the typical length of an individual sequence read has increased from ∼30 to 100 bp, and is likely to increase further.</p>
    <p>Next-gen sequencing is revolutionalizing many areas of biological research. It may be used to detect variation in genomic DNA, to measure gene expression, to identify RNA transcripts and for many other purposes. Read mapping, the alignment of sequence reads to a reference genome, is the first step for many of these analyses and is often the most computationally intensive part of the analysis.</p>
    <p>All read aligners have to take algorithmic shortcuts because the computational cost of exhaustively comparing every read to every possible position in the genome is prohibitively expensive. The first step is almost always to map a shorter part of the read (a <italic>seed</italic>) to the genome. Typically, only a small number of mismatches are permitted, and indels are disallowed entirely. This is partly for specificity, but also because too many mismatches may cause later steps like backtracking to fail. Most aligners then work out from the location that the seed mapped to, trying to match the remainder of the read to the genome surrounding the original location, a process often called the <italic>extension</italic> step (<xref ref-type="bibr" rid="gkt214-B2">2</xref>). Typically a short seed will map to multiple locations in the genome, so the seed must be extended at multiple locations before it can be settled which of the original locations has the best overall match to the complete read. At each location, the extension step must contend with the possibility of sequencing errors, polymorphisms or indel events. If the read was generated from RNA, then each extension step must moreover deal with the possibility that the read might span two or more exons that might be well separated in the genome. The extension steps are far more expensive than mapping the original seed, especially for longer reads. Much of the computational cost is incurred because the final mapping location cannot be decided until all the extension steps are largely complete. If the original seed contains too many sequencing errors or mutations relative to the reference genome, or spans an unexpected exon junction, then the read alignment may be doomed from the start.</p>
    <p>Popular aligners that extend from a seed in various ways include Bowtie (<xref ref-type="bibr" rid="gkt214-B3">3</xref>), Bowtie2 (<xref ref-type="bibr" rid="gkt214-B4">4</xref>), BWA (<xref ref-type="bibr" rid="gkt214-B5">5</xref>), Novoalign (<ext-link ext-link-type="uri" xlink:href="http://www.novocraft.com">http://www.novocraft.com</ext-link>, 2013), Maq (<xref ref-type="bibr" rid="gkt214-B6">6</xref>) and MrsFast (<xref ref-type="bibr" rid="gkt214-B7">7</xref>). The extension step usually involves backtracking (<xref ref-type="bibr" rid="gkt214-B3">3</xref>,<xref ref-type="bibr" rid="gkt214-B5">5</xref>), Smith–Waterman dynamic programming (<xref ref-type="bibr" rid="gkt214-B4 gkt214-B5 gkt214-B6">4–6</xref>,<xref ref-type="bibr" rid="gkt214-B8">8</xref>) or Needleman–Wunsch dynamic programming (<xref ref-type="bibr" rid="gkt214-B9">9</xref>) (Novoalign). A survey of read aligners can be found in (<xref ref-type="bibr" rid="gkt214-B10">10</xref>). In general, the running time of dynamic programming increases quadratically with read length (<xref ref-type="bibr" rid="gkt214-B11">11</xref>,<xref ref-type="bibr" rid="gkt214-B12">12</xref>). Many clever algorithms have been proposed to make the extension step more efficient, including bounded backtracking (<xref ref-type="bibr" rid="gkt214-B5">5</xref>) and banded and bit-vector versions of dynamic programming (<xref ref-type="bibr" rid="gkt214-B13">13</xref>,<xref ref-type="bibr" rid="gkt214-B14">14</xref>). Bowtie2 has abandoned backtracking in favour of an Single Instruction Multiple Data-accelerated dynamic programming procedure (<xref ref-type="bibr" rid="gkt214-B4">4</xref>). Despite all efforts, seed extension remains intrinsically expensive for longer reads.</p>
    <p>A recent trend to avoid problems with the choice of seed is to try multiple spaced seeds (<xref ref-type="bibr" rid="gkt214-B8">8</xref>,<xref ref-type="bibr" rid="gkt214-B9">9</xref>,<xref ref-type="bibr" rid="gkt214-B13">13</xref>,<xref ref-type="bibr" rid="gkt214-B15 gkt214-B16 gkt214-B17 gkt214-B18">15–18</xref>). This multiplies the candidate locations, which must then be prioritized by some form of filtering to improve specificity. A recent technique to do this is <italic>q</italic>-gram filtering. This procedure extracts a number of <italic>q</italic>-grams (substrings or seeds of length <italic>q</italic>) from a sliding window moved along the read (<xref ref-type="bibr" rid="gkt214-B13">13</xref>,<xref ref-type="bibr" rid="gkt214-B19 gkt214-B20 gkt214-B21">19–21</xref>) or from the entire read (<xref ref-type="bibr" rid="gkt214-B8">8</xref>,<xref ref-type="bibr" rid="gkt214-B9">9</xref>,<xref ref-type="bibr" rid="gkt214-B17">17</xref>). A measure of local similarity or a count of matched <italic>q</italic>-grams is then used to determine whether the candidate regions should be included for further examination. Local similarity has been measured efficiently using parallelograms (<xref ref-type="bibr" rid="gkt214-B13">13</xref>).</p>
    <p>In this article, we propose a new multi-seed strategy that differs from previous algorithms by choosing the mapped genomic location for the read directly from the seeds. The strategy consists of a <italic>seed-and-vote</italic> step, which achieves local alignment simultaneously in multiple parts of the read, followed by an in-fill step to complete the alignment. The new strategy uses a relatively large number of short equi-spaced seeds from each read, which we call <italic>subreads</italic>. Instead of trying to prioritize the seeds, the strategy allows all the subreads to vote on the optimal location for the read. The voting procedure has similarities with <italic>q</italic>-gram counting, but is used instead to determine a unique location. The new strategy differs from previous procedures in a number of ways: the subreads are shorter and more numerous than conventional seeds; they are mapped without mismatches; and the local alignment is determined directly by counting subreads without further intermediate steps. The subread procedure then uses conventional algorithms including dynamic programming to complete the alignment, filling in the detailed mismatch and indel information between the subreads that make up the winning voting block. The alignment is extremely fast because the overall genomic location has already been chosen before the detailed alignment is done, and because the in-fill is required for very short local regions only, with known flanking locations already provided by the matched subreads. The strategy has been implemented in two software tools: <italic>Subread</italic> for general purpose alignment and <italic>Subjunc</italic> for detecting exon–exon junctions from RNA reads.</p>
    <p>Seed-and-vote local alignment may at first impression seem too naive, as it does not require any conventional concept of sequence similarity like edit distance to be specified explicitly. Instead, a suitable balance between sensitivity and specificity is achieved implicitly by choosing a considerable number of relatively short subreads. In extensive testing, the strategy proves to be not only fast but more than competitive with existing aligners in terms of sensitivity and accuracy. The strategy is sensitive because no individual subread is required to map exactly, nor are individual subreads constrained to map close by other subreads. The strategy is accurate because the final location must be supported by several different subreads. Crucially, the strategy scales up efficiently for longer reads.</p>
    <p>Insertions and deletions are genomic variants that have been linked to the onset and progression of a number of diseases. For example, a 6 bp indel in the promoter region of gene <italic>Casp8</italic> was identified to be associated with susceptibility to multiple cancers (<xref ref-type="bibr" rid="gkt214-B22">22</xref>). A 14 bp indel in the gene <italic>Ncx1</italic> was found to modulate the age at onset in late-onset Alzheimer’s disease (<xref ref-type="bibr" rid="gkt214-B23">23</xref>). Indel detection is an important part of read alignment when mapping genomic DNA, but presents special problems for many aligners. The need to detect indels makes dynamic programming and backtracking very time-consuming, and the presence of indels can make similarity measures like Hamming distance misleading. <italic>Q</italic>-gram filtering methods are seldom designed for detecting insertions and deletions. SWIFT, for example, can detect insertions and deletions within the sliding windows, but not in the entire region of the read (<xref ref-type="bibr" rid="gkt214-B20">20</xref>). By contrast, our Subread software finds indels rapidly anywhere in the read, mainly leveraging the fact that indels can be restricted to very small regions bounded by flanking local alignments.</p>
    <p>RNA-seq presents particular challenges for aligners because RNA transcripts typically comprise multiple exons that might be thousands of bases apart in genomic location. Elucidating the splicing mechanism is important for understanding various biological processes, which might make use of different isoforms from the same genes to exert their functions. Ordinary DNA mapping techniques designed for contiguous reads cannot be applied successfully to map sequences that span exon–exon junctions. RNA-seq mapping has therefore concentrated on the detection of exon–exon junctions in the read. Junction detectors need to split the read into smaller segments, typically non-overlapping segments of about 25 bp (<xref ref-type="bibr" rid="gkt214-B24 gkt214-B25 gkt214-B26">24–26</xref>). Each segment is then mapped separately to the reference genome, and an exon–exon junction is detected when segments from the same read map to different exons. Our subread strategy can be viewed as a more flexible and higher resolution version of segmentation that uses shorter more numerous overlapping segments. Subjunc is a specialized version of our subread software that performs complete alignment of RNA-seq reads including detection of exon–exon junctions. Compared with segmentation, the use of overlapping subreads allows shorter subsequences to be matched to exons while taking full advantage of longer single-exon subsequences when they exist. Junctions can be detected closer to the ends of the reads. At the same time, the seed-and-vote strategy provides speed improvements both at the full read level and within each single-exon subsequence.</p>
    <p>Not all analyses of RNA-seq data require detection of splice junctions. A popular type of gene-level differential expression analysis uses read counts that are summarized at the gene level (<xref ref-type="bibr" rid="gkt214-B27 gkt214-B28 gkt214-B29 gkt214-B30">27–30</xref>). For this type of analysis, the seed-and-vote paradigm provides a special efficiency, because each read can be anchored to a particular exon in a particular gene, even before the exon–exon junctions have been detected. This means that Subread can be used to generate gene-level count summaries, without the need to run Subjunc. This provides spectacular speed improvements for this particular type of analysis over alternative alignment pipelines.</p>
    <p>This article presents results from an extensive suite of test scenarios to compare Subread with other popular aligners. We present results both from simulations and from a range of calibration data sets, including the 1000 Genomes project, sequencing data with spike-in controls, and benchmark RNA-seq data from the Sequencing Quality Control (SEQC) project. The tests include indel detection for genomic DNA mapping scenarios and exon-junction detection for RNA-seq. Special attention is given in our comparisons to accuracy, i.e. to incorrectly mapped reads, as well as to the more commonly examined questions of sensitivity and speed.</p>
  </sec>
  <sec sec-type="materials|methods">
    <title>MATERIALS AND METHODS</title>
    <sec>
      <title>Data sets</title>
      <p>We used a 1000 Genomes data set, a SEQC data set and simulation data sets to compare alternative methods for read mapping and exon–exon junction detection. The 1000 Genomes data set includes 27.5 million pairs of 100 bp reads, which were generated from an exome sequencing of a Puerto Rico individual (SRR070481). The sequencing was performed by Washington University Genome Sequencing Center in October 2010, using an Illumina Genome Analyzer II sequencer.</p>
      <p>The SEQC project, which is the third stage of the well-known MAQC project (<xref ref-type="bibr" rid="gkt214-B31">31</xref>), is producing benchmark next-gen sequencing data. It aims to use these data to evaluate current analysis methods and to provide a guideline for analysing the sequencing data. Four types of samples are being sequenced in this project, including A, B, C and D. Sample A is the Universal Human Reference RNA (UHRR). Sample B is the Human Brain Reference RNA (HBRR). Samples C and D are mixed from A and B at mixing percentages of 75%A:25%B and 25%A:75%B, respectively. We chose one library for each sample and included them in this study. Each library has ∼6 million pairs of 101 bp reads. This data set was generated by City of Hope, USA, in August 2011, using an Illumina HiSeq sequencer.</p>
      <p>One hundred and one base pair simulation data were generated from a modified human reference genome GRCh37(hg19), in which 80 bp or longer repetitive sequences were removed so as to make each simulated read have a unique known mapping location. SNPs and indels were randomly introduced to the human genome GRCh37, at rates of 0.0009 and 0.0001, respectively, to simulate genomic variation. This setting is the same as that used in the work of Li and Durbin (<xref ref-type="bibr" rid="gkt214-B5">5</xref>). Real quality scores, extracted from a 101 bp SEQC Sample A read data set, were used for simulation reads. Sequencing errors were generated according to the quality score each read base has. The lower the quality score, the more likely a sequencing error was introduced. So the distribution of sequencing errors is similar to that of the real base calling errors. This makes the simulation read data very similar to the real read data. <ext-link ext-link-type="uri" xlink:href="http://nar.oxfordjournals.org/lookup/suppl/doi:10.1093/nar/gkt214/-/DC1">Supplemental Figure S1</ext-link> shows the mean error rates at each base location in SEQC reads and in simulation reads.</p>
      <p>Two 101 bp simulation data sets were generated. One contained indels and the other did not. Indels were not introduced to the reference genome when generating the data set containing no indels. Each data set included 10 million single-end reads. Two 202 bp simulation data sets (one contained indels and the other did not) were generated in the similar means, except that quality score of each base in each SEQC read was duplicated before being assigned to the longer reads.</p>
      <p>In addition to the simulation data sets generated from the filtered human genome, we generated a 101 bp simulation data set from the unfiltered human genome, in which repetitive regions were kept. This data set contained indels in it. We also used Mason (<xref ref-type="bibr" rid="gkt214-B32">32</xref>) and Art (<xref ref-type="bibr" rid="gkt214-B33">33</xref>) to generate two extra simulation data sets. The unfiltered human genome was used for them as well. We generated 100 000 100-bp-long reads from using each read simulator. For Mason, we used an SNP rate of 0.0009, an indel rate of 0.0001 and the default sequencing error rate (0.004). For Art, we provided it with a quality profile, which was created from the SEQC data set used in this study, to make it introduce sequencing errors using the real base calling errors. The indel rate used was 0.001. For all other parameters of Maons and Art, default values were used. Versions of Mason and Art used are 0.1 and 1.5.0, respectively.</p>
    </sec>
    <sec>
      <title>ERCC spike-in control data</title>
      <p>The Ambion(textregistered) External RNA Controls Consortium (ERCC) spike-in control includes 92 spike-in transcripts, which are spiked in difference concentrations in each of the two mixes (Mix 1 and Mix 2) (<ext-link ext-link-type="uri" xlink:href="http://www.lifetechnologies.com">http://www.lifetechnologies.com</ext-link>, 2013). The transcripts in these two mixes are present at defined Mix 1:Mix 2 molar concentration ratios, described by four subgroups (log fold changes of 2, 0, −0.58 and −1, respectively). Each group contains 23 transcripts spanning a 10<sup>6</sup>-fold concentration range, with approximately the same transcript size and GC content. The median length of the spike-in transcript sequence is 994 bp.</p>
      <p>The ERCC spike-in control sequencing data used in this study were created as part of the SEQC study. Mix 1 and Mix 2 were pooled with SEQC sample A (UHRR) and sample B (HBRR), respectively, before library preparation was performed. Spike-in transcript sequences were combined with human genome so that a hybrid index can be built by each aligner. Spike-in reads and human reads were then mapped to the hybrid index.</p>
      <p>To compute fold changes for each spike-in transcript, read counts were normalized by total number of mapped spike-in reads and by the transcript length (reads per 1 kb transcript per 10 000 mapped spike-in reads). An offset count of 0.5 was added to the raw read counts to avoid taking the log of zero.</p>
    </sec>
    <sec>
      <title>Exon–exon junctions derived from NCBI RefSeq annotation</title>
      <p>When comparing different methods for detecting exon–exon junctions, we assessed their ability to discover junctions that originate from annotated exons. We obtained chromosomal coordinates of annotated exons from NCBI RefSeq human gene annotation (Build 37.2). We call a reported junction as a ‘known’ junction, if it connects two annotated exons from the same gene, i.e. the 5′ splicing point of the junction is located at the last base position of the 5′ exon and the 3′ splicing point is located one base before the first base of the 3′ exon.</p>
    </sec>
    <sec>
      <title>Mapping quality scores</title>
      <p>Subread and Subjunc output a mapping quality score (MQS) for each mapped read, defined by
<disp-formula><graphic xlink:href="gkt214um1"/></disp-formula>
where <italic>l</italic> is the read length, <italic>p<sub>i</sub></italic> is the base-calling <italic>P</italic> value for the <italic>i</italic>th base in the read, <italic>b<sub>m</sub></italic> is the set of locations of matched bases and <italic>b<sub>mm</sub></italic> is the set of locations of mismatched bases.</p>
      <p>Base-calling <italic>P</italic> values can be readily computed from the base quality scores available in the FASTQ file (raw read data file). High-quality bases have low base-calling <italic>P</italic> values. Read bases that were found to be insertions are treated as matched bases in the MQS calculation. The MQS is a read-length normalized value, which is in the range of 0–200. If a read can be best mapped to more than one location, its MQS will be divided by the number of such locations.</p>
    </sec>
    <sec>
      <title>Building index for reference genome</title>
      <p>To build an index, 16 bp sequences were extracted from the reference genome in every three bases, i.e. there is a 2 bp gap between each pair of neighbouring 16 bp sequences. Correspondingly, each read has to be scanned three times for the mapping, i.e. three sets of subreads are extracted, which start from the first, second and third base of the read, respectively.</p>
      <p>We build a hash table for a reference genome to enable fast access to the chromosomal locations of subreads extracted from each read. The hash table includes all the informative 16 bp sequences extracted from the reference genome (keys) and also their chromosomal locations (values). Each base in each 16 bp sequence is encoded by 2 bits. Therefore, each 16 bp sequence occupies 4 bytes of space. For mouse or human genomes, their index sizes are 6.2 and 6.6 GB, respectively. The actual peak memory usage will be slightly higher than these, because sequences of the entire genome are loaded into memory as well when performing alignment. The index-building function provides the option of breaking the index into multiple parts so as to reduce the memory footprint (only one part is present in the memory at any time).</p>
    </sec>
    <sec>
      <title>Aligners and junction detectors under comparison</title>
      <p>Versions of aligners included in this study are as follows: Subread (1.3.1), Bowtie2 (2.0.0-Beta3), BWA (0.5.9), Maq (0.7.1), MrsFast (2.3.0.2) and Novoalign (2.07.11). All aligners were run using their default settings except Novoalign and MrsFast, which were run with the options -rRandom and -n 1, respectively, to report at most one hit for each read so that they can be compared with other aligners. Versions of junction detectors included in this study are: Subjunc (1.3.1), TopHat (1.3.0), TopHat 2 (2.0.0) and MapSplice (1.15.2). All the programs were tested on a HP Blade supercomputer, which includes 16 Xeon 2.93 GHz CPU cores and 128 GB of memory.</p>
      <p>Subread and Subjunc can be downloaded from <ext-link ext-link-type="uri" xlink:href="http://subread.sourceforge.net">http://subread.sourceforge.net</ext-link> or <ext-link ext-link-type="uri" xlink:href="http://www.bioconductor.org">http://www.bioconductor.org</ext-link> (Rsubread package).</p>
    </sec>
  </sec>
  <sec sec-type="results">
    <title>RESULTS</title>
    <sec>
      <title>The seed-and-vote paradigm</title>
      <p>We describe a new multi-seed alignment strategy that chooses the mapped genomic location for the read directly from the seeds (<xref ref-type="fig" rid="gkt214-F1">Figure 1</xref>). The new strategy uses a number of overlapping seeds from each read, called <italic>subreads</italic>. Instead of trying to pick the best seed, the strategy allows all the seeds to vote on the optimal location for the read. The algorithm then uses more conventional alignment algorithms to fill in detailed mismatch and indel information between the subreads that make up the winning voting block. <xref ref-type="fig" rid="gkt214-F1">Figure 1</xref>B illustrates the proposed seed-and-vote mapping approach with an artificial example.
<fig id="gkt214-F1" position="float"><label>Figure 1.</label><caption><p>Seed-and-vote mapping paradigm. (<bold>A</bold>) Schematic of the proposed mapping paradigm. Subreads (or seeds) are short continuous sequences extracted from each read. Substrings in green are uninformative subreads, and they are excluded from voting. Little red bars denote mismatched bases. Mapping location of the read is determined by the largest consensus set. The thin solid arrows point to the mapping location of each subread included in the largest consensus set. Mapping location of the read, as indicated by the black up-pointing triangle, is voted for by all the subreads in the largest consensus set. The dashed arrows indicate other mapping locations for the subreads, and these locations were disregarded due to insufficient number of votes. (<bold>B</bold>) Using an artificial example to illustrate the paradigm. Six subreads are extracted from the artificial read. Each square bracket denotes an extracted subread, which contains five continuous bases, and the number embedded in the blue cycle indicates the subread number. Base sequence of each subread is encoded into a string of 0’s and 1’s (each base is encoded into a 2-bit binary number). Encoded value for each subread is used as its key in the hash table. The key’s value gives the chromosomal location/s in the genome to which the corresponding subread is perfectly matched (no mismatches allowed). Four candidate mapping locations are found for this artificial read, which receive 2, 5, 1 and 2 votes (number of consensus subreads), respectively. The location that receives the largest number of votes, in this case the location with five votes, is selected as the final mapping location for this artificial read. (<bold>C</bold>) Indel detection performed under the seed-and-vote paradigm. (<bold>C1</bold>) shows the mapping results of subreads when there are no indels found in the reads (assuming no mismatches exist in the read for simplicity). (<bold>C2</bold>) and (<bold>C3</bold>) show respectively the schematic for detecting an insertion (Ins) and a deletion (Del) in the situation where insertion or deletion is found in the read and flanking subreads are found at both sides of insertion or deletion. (<bold>C4</bold>) gives the schematic for detecting indels when they occur at the locations close to the end of the reads where flanking subreads can be found at only one side. In (C2) and (C3), chromosomal locations pointed to by red arrows are the true mapping locations of subreads 8, 9 and 10, respectively, and chromosomal locations pointed to by dotted black arrows indicate the chromosomal locations to which they will be mapped if no indels exist before them. <italic>d</italic> is the indel length, equal to the difference between the location pointed to by the red arrow and the location pointed to by the dotted black arrow from the same subread. Regions encompassed by the dotted green lines are found to contain indels [(C2) and (C3)] or are candidate regions for searching indels (C4). Bases in these regions are not covered by subreads that have made successful votes, and their mapping locations will be determined by aligning to the corresponding regions (within the dotted green lines) in the reference genome. In (C4), a 4 bp window is moved along the uncovered bases to look for potential indels. When three or more bases in the window are found to be mismatches, the indel detection process is triggered for the search of indels.</p></caption><graphic xlink:href="gkt214f1p"/></fig></p>
    </sec>
    <sec>
      <title>Optimal subread length</title>
      <p>A set of equally spaced overlapping substrings, the <italic>subreads</italic>, are extracted from the read, and each is mapped to the reference genome. No mismatches are permitting when mapping each subread, so this step can be accomplished with superb speed and efficiency via a hash index of the genome. Instead of allowing mismatches, we keep the subreads relatively short to achieve a good balance between sensitivity and accuracy. Tests show that a range of subread lengths, from 10–25 bp, work well from this point of view (data not shown). Subread uses subreads of length 16 because that is in the optimal range for sensitivity and accuracy and because sequences of this length will fit exactly into a machine word on a 32-bit computer system or into half a word on a 64-bit computer system. This uses computer memory in the most efficient way and reduces data access time (<ext-link ext-link-type="uri" xlink:href="http://nar.oxfordjournals.org/lookup/suppl/doi:10.1093/nar/gkt214/-/DC1">Supplemental Methods</ext-link>, <ext-link ext-link-type="uri" xlink:href="http://nar.oxfordjournals.org/lookup/suppl/doi:10.1093/nar/gkt214/-/DC1">Supplemental Figure S2</ext-link>).</p>
      <p>For the subread strategy to work effectively, it is necessary that each subread has reasonable specificity, so subreads corresponding to highly repetitive or overly common sequences are removed from the subread set. Examination of the human genome shows that 81% of all possible 16 bp sequences occur 24 or fewer times in the genome (<ext-link ext-link-type="uri" xlink:href="http://nar.oxfordjournals.org/lookup/suppl/doi:10.1093/nar/gkt214/-/DC1">Supplemental Methods</ext-link>, <ext-link ext-link-type="uri" xlink:href="http://nar.oxfordjournals.org/lookup/suppl/doi:10.1093/nar/gkt214/-/DC1">Supplemental Figure S3</ext-link>). With this motivation, we define as uninformative any subread whose sequence occurs &gt;24 times in the reference genome. The informative subreads are therefore those subreads that occur ≤24 times in the reference genome. Simulations show that higher thresholds lead to higher mapping sensitivity but lower accuracy (<xref ref-type="table" rid="gkt214-T5">Table 5</xref>). Our goal is to achieve a high mapping accuracy and a high mapping speed; therefore, we decided to use a more stringent threshold to filter out uninformative subreads. A cut-off of 24 repeats was used for Subread when comparing it with other aligners in this study unless otherwise stated. Subread provides an option (‘-f’) in the index building program so that users can adjust this threshold if appropriate.</p>
      <p>Any set of informative subreads that vote for the same mapping location for the read is called a <italic>consensus set</italic>. In general, a read will have more than one consensus set. This is partly because of ambiguity, because a subread can be mapped to more than one location, but also because different regions of the read could genuinely originate from disjoint regions of the reference sequence, for example because an RNA read could span one or more exon–exon junctions.</p>
      <p>The largest consensus set for each read determines its mapping location. When there is no unique largest consensus set, because two or more consensus sets mapping to different locations have the same number of votes, the one covering more bases in the genome is chosen. If there is still a tie, it is broken on the basis of either MQSs or by the Hamming distance between the read and each candidate region.</p>
    </sec>
    <sec>
      <title>How many subreads and how many votes?</title>
      <p>The remaining parameters that determine the mapping algorithm are the number of subreads selected from each read and the consensus threshold. The consensus threshold is the minimum number of subreads (votes) required for reporting a mapping location. An extensive simulation study was undertaken to establish optimal values for these parameters (<ext-link ext-link-type="uri" xlink:href="http://nar.oxfordjournals.org/lookup/suppl/doi:10.1093/nar/gkt214/-/DC1">Supplemental Materials</ext-link>). Numbers of subreads ranging from 7 to 28, and consensus thresholds ranging from 10 to 70% of the number of subreads, were examined for the mapping of 10 million 101 bp reads. Not surprisingly, sensitivity decreased and accuracy improved with the consensus threshold increase for any fixed subread number (<ext-link ext-link-type="uri" xlink:href="http://nar.oxfordjournals.org/lookup/suppl/doi:10.1093/nar/gkt214/-/DC1">Supplemental Figure S4</ext-link>). However, setting the consensus threshold at ∼30% of the subread number gave good performance with respect to both accuracy and sensitivity across a wide range of subread numbers and cut-offs for removing uninformative subreads (<ext-link ext-link-type="uri" xlink:href="http://nar.oxfordjournals.org/lookup/suppl/doi:10.1093/nar/gkt214/-/DC1">Supplemental Figure S5</ext-link>). Smaller numbers of subreads are preferred from a computational cost point of view. By taking all the evaluation results into account, we decided to select 10 subreads from each read and use a consensus threshold of three for mapping.</p>
    </sec>
    <sec>
      <title>Detecting indels around the subreads</title>
      <p>Detecting deletions and insertions is an especially difficult aspect of read mapping that typically incurs considerable computational cost. Our seed-and-vote strategy, however, facilitates an efficient and accurate approach to indel detection with only very modest computation overhead. First consider indels that are flanked by consensus subreads. In that case, the genomic positions of the flanking subreads determine the indel length and bound the locations of the indel bases. Indels near the ends of the reads will not have flanking subreads on both sides. In this case, we move a window along the unmapped regions to identify indels. The subread approach only needs to align read bases not covered by the mapped subreads, a considerable computational saving compared with full alignment of the entire read.</p>
      <p><xref ref-type="fig" rid="gkt214-F1">Figure 1</xref>C illustrates how we identify indels and determine their lengths and locations. <xref ref-type="fig" rid="gkt214-F1">Figure 1</xref>(C1) shows the mapping locations of subreads when there are no indels found in a read. For simplicity, here every extracted subread is mapped to a unique location. It can be seen that the distances between mapping locations of subreads in the reference genome are the same as their distances in the read. We make use of this distance concordance to infer indel lengths. When a read contains an insertion [<xref ref-type="fig" rid="gkt214-F1">Figure 1</xref>(C2)], mapping locations of the subreads on the right side of the insertion will be shifted to the left by a distance <italic>d</italic>, which is equal to the length of insertion. Similarly, when a read contains a deletion [<xref ref-type="fig" rid="gkt214-F1">Figure 1</xref>(C3)], mapping locations of subreads on its right side will be shifted to the right by a distance equal to the length of deletion. Because there are no mismatches allowed in the flanking subreads, the indels are called with high confidence. The uncovered bases, which are not covered by mapped subreads due to indel occurrences, are then aligned to the genomic interval between the mapped locations of the flanking subreads (encompassed by the green dotted line) using a Smith–Waterman dynamic programming procedure. Because the indel length has been determined already by the flanking subreads, the Smith–Waterman algorithm can be instructed to find an alignment of the correct indel length.</p>
      <p>As it can be seen, the dynamic programming procedure is only required for aligning uncovered bases, rather than aligning the entire read sequence using this procedure as carried out by other aligners such as Novoalign. The running time of Subread increased by only 3% when using this procedure to discovered indels in the 1000 Genomes data set included in this study. The dynamic programming procedure also reported correct indel lengths for 98% of the reads that were found to contain indels in this data set.</p>
      <p>However, indels might not have flanking subreads at both their sides, especially when their locations are near the ends of the reads [<xref ref-type="fig" rid="gkt214-F1">Figure 1</xref>(C4)]. In this case, a 4 bp window is moved from the first (or last) mapped base to the start (or end) of the read to identify indels. We require at least three mismatches in the window to consider a potential indel. Any potential indel that improves the similarity between uncovered bases and the corresponding reference region is reported.</p>
    </sec>
    <sec>
      <title>Discovering exon–exon junctions between the subreads</title>
      <p>A unique feature of RNA-seq is the ability to measure distinct isoforms of a gene including alternative splicing events. Here we use the seed-and-vote paradigm to develop a novel approach for detecting exon–exon junctions and producing complete mapping results from RNA-seq reads.</p>
      <p><xref ref-type="fig" rid="gkt214-F2">Figure 2</xref> shows a schematic of the approach. The entire set of reads is scanned twice. In the first scan, a number of subreads are extracted from each read, which are then used to vote for the mapping locations of reads in the reference genome. Any locations which receive at least one vote will be considered. We select the two most voted mapping locations for each read and examine whether there are any splicing sites existing between the two selected locations. We require that a donor site (‘GT’) and a receptor site (‘AG’) exist between the two locations before considering them to have splicing points in between. We also require that the length of region in the reference genome that is spanned by the two sets of subreads that voted for the two best locations, excluding the region between the identified donor site and receptor site, must be equal to the length of the region in the read that is spanned by two same sets of subreads, when no indels are allowed. This is illustrated in the mapping of Read 1 in <xref ref-type="fig" rid="gkt214-F2">Figure 2</xref> (<inline-formula><inline-graphic xlink:href="gkt214i3.jpg"/></inline-formula>). When indels are allowed, the length difference will be equal to or less than the specified maximal indel length. This first scan is very sensitive in finding potential exon–exon junctions because any mapping locations with as low as one vote are considered. On the other hand, the requirements on the length of mapped regions and on the donor/receptor sites ensure a high accuracy to be achieved.
<fig id="gkt214-F2" position="float"><label>Figure 2.</label><caption><p>Schematic for detecting exon–exon junctions under seed-and-vote paradigm. A two-scan procedure is used to detect exon–exon junctions and to determine the mapping of each read. Three artificial reads are used to illustrate this procedure (Read 1, Read 2 and Read 50). In the first scan, a set of subreads are extracted from each read and mapped to the reference genome. The best two mapping locations from each read, which receives the two largest numbers of votes, are selected for further consideration. If donor and receptor sites are found between these two locations and total size (<inline-formula><inline-graphic xlink:href="gkt214i1.jpg"/></inline-formula>) of the two mapped regions in the reference is equal to the size (<italic>L</italic>) of the read region that is spanned by the subreads that vote for the best two mapping locations, the determined splicing points will be recorded in the putative exon–exon junction table. Anchor locations of each read in the genome and in the read are also recorded, which gives the mapping location to which the read is best mapped and the location of the leftmost base of the set of extracted subreads that vote for that location, respectively. Anchor locations will be used for retrieving putative splicing points and for the validation performed by the second scan. The first scan is applied to all the reads, and two tables are produced on completion. These two tables include chromosomal locations of putative splicing points found for each exon–exon junction and anchor information for each read, respectively. The input to the second scan includes these two tables and also the read data. For each read, the second scan uses its anchor location to search for the putative splicing points falling within the read from the junction table output from the first scan and then examines all mapping possibilities (including mapping the read as an exonic read) to eventually determine how the read should be mapped. The similarity between the read sequence and the mapped regions when it is mapped as a junction read has to be greater than that from being mapped as an exonic read (i.e. <inline-formula><inline-graphic xlink:href="gkt214i2.jpg"/></inline-formula>), if it is called a junction read. The cyan dashed line indicates the mapping location of the first base or the last base of the read when it is assumed that the read does not contain junctions. Putative splicing points are removed from the final results if they are found to not have any supporting reads after the second scan is completed. The final output from this two-scan procedure is a table of validated exon–exon junctions with the number of supporting reads included, and also the complete mapping results for each read including CIGAR strings, which describes how each base in each read is mapped.</p></caption><graphic xlink:href="gkt214f2p"/></fig></p>
      <p>The second scan will perform full read alignment for each read (including those reads mapped as exonic reads, which have only one candidate mapping location), using the output from the first scan. The second scan also serves as a validation procedure that will examine all mapping possibilities for each read and choose the best possible ones for them. It also assigns reads to the exon–exon junctions discovered from the first scan and removes those junctions that failed to get any supporting reads.</p>
      <p>Output from the first scan includes discovered putative exon–exon junctions and anchor information for reads. For each read, its anchor location in the genome is the mapping location of leftmost base of the leftmost subread in the set of subreads that voted for the best mapping location of the read, and its anchor location in the read is the location of the same base in the read. The anchor region in each read is the region that is spanned by the set of subreads that voted for the best mapping location, and the region in the genome that is mapped to by the anchor region in the read is its anchor region in the genome. The anchor location saved for each read allows the second scan to retrieve all putative exon–exon junction locations falling within the read discovered from the first scan. The second scan considers all possibilities of how each read should be finally mapped, including locations where the read is mapped as an exonic read (no junction break points were found in the read), locations where the read is mapped as a junction read that has one junction break point or locations where the read is mapped as a junction read that includes more than one junction break point.</p>
      <p>We illustrate the proposed algorithm with example involving a couple of reads, shown graphically in <xref ref-type="fig" rid="gkt214-F2">Figure 2</xref>. <italic>Read 1</italic> is found to contain a putative junction break point located at the right side of the anchor, when using its anchor location to search for splicing points from the exon–exon junction table for this read discovered by the first scan (<xref ref-type="fig" rid="gkt214-F2">Figure 2</xref>). To confirm if this is a true junction, we examine whether including this junction in the mapping result will improve its sequence similarity to the reference genome. If this junction is included, its position in <italic>Read 1</italic> can be worked out from calculating the distance between the anchor location of this read in the genome (950 on chromosome 1) and location <italic>Splicing Point 1</italic> in the genome (1000 on chromosome 1), as this distance is equal to the distance between this junction location in the read and anchor location in the read (when no indels exist). Each exon–exon junction has two splicing points in the reference genome, <italic>Splicing Point 1</italic> and <italic>Splicing Point 2</italic>. If there are indels, the junction position in the read will be shifted to the right, denoting insertion in the read, or left, denoting deletion in the read, by the number of indel bases. <italic>NM<sub>L</sub></italic> denotes the number of matched bases found in the region between the determined junction location and anchor location in the read. We further map the region, which is located between the junction location and the 3′ end of the read, to a genomic region starting from location <italic>Splice Point 2</italic>. Again, we allow indels in this mapping. The number of matched bases found in this region is denoted by <italic>NM<sub>R</sub></italic>. Sum of <italic>NM<sub>L</sub></italic> and <italic>NM<sub>R</sub></italic> gives the total number of matched bases for the entire read region located at the right side of the anchor, when this region is being considered to contain a junction. We then compare this region directly to a continuous reference region starting from the anchor location and ending at the location indicated by the cyan dash line, and count the number of matched bases, denoted by <italic>NM<sub>E</sub></italic>. This comparison checks the possibility that this region can be mapped as an exonic region, i.e. no junction exists in this region. Indels are allowed in this comparison. If the sum of <italic>NM<sub>L</sub></italic> and <italic>NM<sub>R</sub></italic> is greater than <italic>NM<sub>E</sub></italic>, the discovered junction will then be confirmed and this read will also be counted as one of the supporting reads for this junction. Otherwise, this region will be mapped as an exonic region. For the artificial read <italic>Read 1</italic>, this junction is confirmed and added to the table of validated exon–exon junctions.</p>
      <p>After determining the mapping of read region on the right side of the anchor, the second scan moves on to map the region at the left side of the anchor. There is no putative junction break points found in this region; therefore, the mapping of this region is quite straightforward. The voting subreads have already determined the mapping locations of those bases in the anchor, and only indels need to be figured out in those bases, which are located outside of the anchor region if there is any. This is done by testing if adding indels to every base could increase the matched bases.</p>
      <p><italic>Read 50</italic>, however, is found to contain a putative junction break point in the region on the left side of the anchor, in addition to its confirmed junction break point on the right side of the anchor. The second scan performs a test, similar to what it has done for confirming the right side junction, to validate the junction in this left region.</p>
      <p>After both scans are completed, every read will be fully aligned and a list of validated junction locations will be generated. Those putative junction locations, which were reported by the first scan but failed to get any supporting reads in the second scan, were removed from the result (e.g. the junction indicated by a red cross was removed). The number of supporting reads is provided for each reported junction. Mapping results for each read are reported, in addition to the chromosomal locations of discovered exon–exon junctions. For each junction read, the mapping location of each of its bases is recorded in a CIGAR string (<xref ref-type="bibr" rid="gkt214-B34">34</xref>).</p>
      <p>Subread outputs the same mapping results for the mapping of exonic reads as those given by Subjunc. For the mapping of each junction read, the mapping region given by Subread will overlap with one of the mapping regions given by Subjunc, as they use the same set of consensus subreads to determine the mapping location (Subread) or anchor location (Subjunc). Therefore, mapping locations of reads are essentially the same between Subread and Subjunc, meaning that Subread has the same mapping accuracy as Subjunc.</p>
    </sec>
    <sec>
      <title>Subread is faster than previous aligners</title>
      <p>First, we compared alternative aligners on a recent 1000 Genomes data set of 27.5 million pairs of 100 bp DNA reads. Bowtie2, Maq and Subread all succeeded in mapping almost all the reads to the human genome, and they also had the highest percentages of normalized found intervals given by the Rabema program (<xref ref-type="bibr" rid="gkt214-B35">35</xref>). The metric ‘normalized found intervals’ developed in Rabema is similar to the recall used in this study, except that it down-weights those reads that are mapped to multiple locations.</p>
      <p>Subread was nearly four times as fast as the nearest competitor, Bowtie2 (<xref ref-type="table" rid="gkt214-T1">Table 1</xref>). There was a 30-fold difference in speed between Subread and the slowest aligners. Subread remained more than twice as fast as any other aligner even when tuned to use a small memory footprint. MrsFast and Maq used considerable memory for this data set, because their memory use is dependent on the number of reads being mapped. The 1000 Genomes data set used in this evaluation gives a typical size of read data used in the field of genomic variation detection by using next-gen sequencing technology. The speed of Subread makes it suitable for production use.
<table-wrap id="gkt214-T1" position="float"><label>Table 1.</label><caption><p>Performance of aligners in mapping genomic DNA reads from the 1000 Genomes project</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th rowspan="1" colspan="1">Aligner</th><th rowspan="1" colspan="1">Mapped (%)</th><th rowspan="1" colspan="1">Rabema intervals (%)</th><th rowspan="1" colspan="1">Time (h)</th><th rowspan="1" colspan="1">Memory (Gb)</th></tr></thead><tbody align="left"><tr><td rowspan="1" colspan="1">Subread (default)</td><td rowspan="1" colspan="1">97.7</td><td rowspan="1" colspan="1">86.7</td><td rowspan="1" colspan="1">1.6</td><td rowspan="1" colspan="1">7.6</td></tr><tr><td rowspan="1" colspan="1">Subread (low memory)</td><td rowspan="1" colspan="1">97.7</td><td rowspan="1" colspan="1">86.7</td><td rowspan="1" colspan="1">2.9</td><td rowspan="1" colspan="1">4.3</td></tr><tr><td rowspan="1" colspan="1">Bowtie2</td><td rowspan="1" colspan="1">99.1</td><td rowspan="1" colspan="1">87.2</td><td rowspan="1" colspan="1">6.0</td><td rowspan="1" colspan="1">3.3</td></tr><tr><td rowspan="1" colspan="1">BWA</td><td rowspan="1" colspan="1">95.6</td><td rowspan="1" colspan="1">82.6</td><td rowspan="1" colspan="1">15.2</td><td rowspan="1" colspan="1">3.3</td></tr><tr><td rowspan="1" colspan="1">Maq</td><td rowspan="1" colspan="1">98.1</td><td rowspan="1" colspan="1">86.3</td><td rowspan="1" colspan="1">48.3</td><td rowspan="1" colspan="1">19.1</td></tr><tr><td rowspan="1" colspan="1">Novoalign</td><td rowspan="1" colspan="1">93.9</td><td rowspan="1" colspan="1">68.9</td><td rowspan="1" colspan="1">18.7</td><td rowspan="1" colspan="1">8.2</td></tr><tr><td rowspan="1" colspan="1">MrsFast</td><td rowspan="1" colspan="1">70.3</td><td rowspan="1" colspan="1">73.8</td><td rowspan="1" colspan="1">48.2</td><td rowspan="1" colspan="1">25.8</td></tr></tbody></table><table-wrap-foot><fn id="gkt214-TF1"><p>Columns give the percentage of reads that are successfully mapped, the percentage of normalized found intervals given by the Rabema program (in ‘all’ category, maximal error rate of 8%), the time taken and the peak memory usage. Results are given for Subread with default settings and when set to use less memory.</p></fn></table-wrap-foot></table-wrap></p>
      <p>The speed advantage of Subread increases as reads become longer. Subread is seven times as fast as the next fastest for mapping 202 bp reads (<ext-link ext-link-type="uri" xlink:href="http://nar.oxfordjournals.org/lookup/suppl/doi:10.1093/nar/gkt214/-/DC1">Supplemental Table S1</ext-link>). With reads of this length, only Subread, Bowtie2 and BWA were able to complete the task successfully.</p>
      <p>Next, we compared the aligners on the SEQC RNA-seq data. On this RNA data, Subread mapped by far the highest percentage of reads of any of the aligners while maintaining the same relative speed advantage as observed for DNA reads (<xref ref-type="table" rid="gkt214-T2">Table 2</xref>). Although junction detectors such as TopHat or MapSplice can be used here to achieve a mapping percentage comparable with Subread, this requires &gt;15 times the computing time (<xref ref-type="table" rid="gkt214-T7">Table 7</xref>), making this route less attractive for routine whole genome expression profiling.
<table-wrap id="gkt214-T2" position="float"><label>Table 2.</label><caption><p>Performance of aligners in mapping RNA-seq reads from the SEQC project</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th rowspan="1" colspan="1">Aligner</th><th rowspan="1" colspan="1">Mapped (%)</th><th rowspan="1" colspan="1">Time (min)</th><th rowspan="1" colspan="1">Memory (Gb)</th></tr></thead><tbody align="left"><tr><td rowspan="1" colspan="1">Subread (default)</td><td rowspan="1" colspan="1">96.9</td><td rowspan="1" colspan="1">23</td><td rowspan="1" colspan="1">7.6</td></tr><tr><td rowspan="1" colspan="1">Subread (low memory)</td><td rowspan="1" colspan="1">96.9</td><td rowspan="1" colspan="1">40</td><td rowspan="1" colspan="1">4.3</td></tr><tr><td rowspan="1" colspan="1">Bowtie2</td><td rowspan="1" colspan="1">85.7</td><td rowspan="1" colspan="1">90</td><td rowspan="1" colspan="1">3.3</td></tr><tr><td rowspan="1" colspan="1">BWA</td><td rowspan="1" colspan="1">78.6</td><td rowspan="1" colspan="1">284</td><td rowspan="1" colspan="1">3.3</td></tr><tr><td rowspan="1" colspan="1">Maq</td><td rowspan="1" colspan="1">66.4</td><td rowspan="1" colspan="1">685</td><td rowspan="1" colspan="1">5.2</td></tr><tr><td rowspan="1" colspan="1">Novoalign</td><td rowspan="1" colspan="1">78.4</td><td rowspan="1" colspan="1">361</td><td rowspan="1" colspan="1">8.1</td></tr><tr><td rowspan="1" colspan="1">MrsFast</td><td rowspan="1" colspan="1">46.2</td><td rowspan="1" colspan="1">398</td><td rowspan="1" colspan="1">7.4</td></tr></tbody></table><table-wrap-foot><fn id="gkt214-TF2"><p>Columns give the percentage of reads that are successfully mapped, the time taken and the peak memory usage. Results are given for Subread with default settings and when set to use less memory.</p></fn></table-wrap-foot></table-wrap></p>
    </sec>
    <sec>
      <title>Subread is more accurate than previous aligners</title>
      <sec>
        <title>Recovering spiked-in expression levels</title>
        <p>We examined accuracy first by sequencing spiked-in RNA transcripts, and comparing the read count coverage for each transcript with the known expression level for that transcript. The SEQC (MAQC III) project is now using Ambion(textregistered] ERCC spike-in control (<xref ref-type="bibr" rid="gkt214-B36">36</xref>) to evaluate inter-laboratory concordance in using next-gen sequencing technologies. The SEQC RNA-seq data set included in this study contained reads sequenced from these spike-in transcripts, in addition to the reads sequenced from UHRR and HBRR samples. Each spike-in transcript sequence contains a string of continuous bases, and there are no exon–exon junctions in these sequences. The set of ERCC spike-in transcripts span a large concentration range, making them useful for evaluating methods developed for processing next-gen sequencing data.</p>
        <p>A set of 92 spike-in transcripts were pooled with UHRR and HBRR RNA to make Mix 1 and Mix 2 sample. The spike-ins produce a set of transcripts 250–2000 nt in length that mimic natural eukaryotic mRNAs. The two mixes contain the same set of spike-in transcripts, but at different known concentrations in the two mixes, so that the nominal fold change between Mix 1 and Mix 2 for each transcript is known. The true fold changes vary from 0.5 to 4. Each aligner was used to map reads from the Mix 1 and Mix 2 samples to a mixed reference genome consisting of the human reference genome (GRCh37) plus the spike-in transcript sequences. Each spike-in transcript was treated as a separate chromosome. Reads mapped to each spike-in transcript were counted and used to compute a <inline-formula><inline-graphic xlink:href="gkt214i4.jpg"/></inline-formula> fold change for that transcript between the two samples.</p>
        <p>Subread returned fold changes that were closer to the true fold changes than any other aligner (<xref ref-type="table" rid="gkt214-T3">Table 3</xref>). Subread also mapped more reads than any other aligner except Bowtie2, but Bowtie2 had the worst accuracy, suggesting that its alignment is somewhat too aggressive.
<table-wrap id="gkt214-T3" position="float"><label>Table 3.</label><caption><p>Performance of aligners in mapping ERCC spike-in reads from the SEQC project</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th rowspan="2" colspan="1">Aligner</th><th colspan="2" align="center" rowspan="1">Number of mapped spike-in reads (%)<hr/></th><th rowspan="2" colspan="1">MSE of log<sub>2</sub>FC</th></tr><tr><th rowspan="1" colspan="1">Mix 1</th><th rowspan="1" colspan="1">Mix 2</th></tr></thead><tbody align="left"><tr><td rowspan="1" colspan="1">Subread</td><td rowspan="1" colspan="1">86 906 (0.64%)</td><td rowspan="1" colspan="1">133 589 (1.2%)</td><td rowspan="1" colspan="1">1.10</td></tr><tr><td rowspan="1" colspan="1">Bowtie2</td><td rowspan="1" colspan="1">87 983 (0.65%)</td><td rowspan="1" colspan="1">135 105 (1.2%)</td><td rowspan="1" colspan="1">1.34</td></tr><tr><td rowspan="1" colspan="1">BWA</td><td rowspan="1" colspan="1">85 835 (0.64%)</td><td rowspan="1" colspan="1">131 821 (1.2%)</td><td rowspan="1" colspan="1">1.28</td></tr><tr><td rowspan="1" colspan="1">Maq</td><td rowspan="1" colspan="1">81 772 (0.61%)</td><td rowspan="1" colspan="1">125 698 (1.1%)</td><td rowspan="1" colspan="1">1.33</td></tr><tr><td rowspan="1" colspan="1">Novoalign</td><td rowspan="1" colspan="1">84 556 (0.63%)</td><td rowspan="1" colspan="1">129 711 (1.2%)</td><td rowspan="1" colspan="1">1.32</td></tr><tr><td rowspan="1" colspan="1">MrsFast</td><td rowspan="1" colspan="1">70 294 (0.52%)</td><td rowspan="1" colspan="1">109 144 (1.0%)</td><td rowspan="1" colspan="1">1.15</td></tr></tbody></table><table-wrap-foot><fn id="gkt214-TF3"><p>Columns 2–3 give the number (and percentage) of reads that were correctly mapped to spike-in transcripts when sequencing the Mix 1 and Mix 2 samples. Column 4 shows the mean squared error (MSE) with which the log fold changes (log<sub>2</sub>FC) computed from the transcript-wise read counts estimate the known log fold changes between the Mix 1 and Mix 2 samples.</p></fn></table-wrap-foot></table-wrap></p>
      </sec>
      <sec>
        <title>Detecting indels</title>
        <p>Next, we evaluated aligners according to their ability to detect known indels. To contruct a genome with known deletions, we extracted a long sequence including one million bases from chromosome 1 of human reference genome and introduced deletions (at a rate of 0.02%) and SNPs (at a rate of 0.09%) to it. We then extracted 101 bp reads from locations in this sequence containing deletions, and recorded the position and length of the deletions in each read. Deletions could be located at any base position of reads, except their first and last four bases. Each read contained only one deletion event. To assess the ability of aligners in detecting indels with different lengths, we generated 16 data sets spanning every possible deletion length from 1 to 16 bp. The first such data set includes reads with 1 bp deletions, the second includes reads with 2 bp deletions and so on. Base quality scores in each read were taken from reads in a 101 bp SEQC data set. Bases in each read were mutated according to their quality scores to simulate sequencing errors, i.e. the lower the quality score a base has, the more likely it will be changed to a different nucleotide.</p>
        <p><xref ref-type="fig" rid="gkt214-F3">Figure 3</xref> shows the recall rate and accuracy of each aligner in detecting deletions at each cumulative deletion size. Maq and MrsFast do not support indel detection and therefore excluded from this evaluation (Maq only supports indel detection for paired-end reads). We added BWA-SW (<xref ref-type="bibr" rid="gkt214-B37">37</xref>) in this evaluation.
<fig id="gkt214-F3" position="float"><label>Figure 3.</label><caption><p>Performance of aligners in detecting deletions of different sizes. The horizontal axis gives the cumulative deletion sizes. For each size, the data sets with equal or smaller deletion sizes were combined and used for calculating the recall and accuracy for that size for each aligner. Aligners were run at their best possible settings for the detection of deletions with different sizes.</p></caption><graphic xlink:href="gkt214f3p"/></fig></p>
        <p>Subread was found to clearly outperform the other aligners in both accuracy and recall. It is also the only aligner that has achieved increasingly higher performance in both accuracy and recall with the increase of deletion size. The superior performance of Subread in detecting indels should be due to the power of using perfectly matched flanking subreads to discover indels. Novoalign has the second best accuracy. However, it has a rapidly decreasing recall rate with the increase of deletion length, and its recall is worse than Bowtie2. Bowtie2 has the second best recall; however, its accuracy is one of the worst. BWA-SW has a higher accuracy but lower recall than BWA. BWA-SW and BWA were found to have the worst performance among all aligners in this evaluation. Although only deletions were included in this evaluation, similar results should be observed when comparing for the detection of insertions.</p>
      </sec>
      <sec>
        <title>Correctly mapping simulated reads</title>
        <p>Next, we examined the ability of aligners to map reads to correct locations. We firstly used the two 101 bp simulation data sets generated from the modified human genome in which repetitive regions have been removed (MATERIALS AND METHODS). One data set contained indels and the other did not. Reads in each data set had a unique known mapping location.</p>
        <p>The non-indel data set enables us to perform a fair comparison for the aligners that do not support indel detection, including Maq and MrsFast. Aligners supporting indel detection were configured to disable indel detection if possible so that all aligners can be compared at equivalent terms, when using this data set for comparison. <xref ref-type="table" rid="gkt214-T4">Table 4</xref> shows that Subread has the highest accuracy in all aligners. The mapping accuracy was measured as the fraction of correctly mapped reads in all mapped reads. The accuracy achieved by Novoalign and Maq is slightly lower than that of Subread. Novoalign has a slightly higher recall rate than Subread; however, Maq has a much lower recall rate. The recall rate was calculated as the fraction of correctly mapped reads in all reads. Bowtie2 has the highest recall rate among all aligners; however, its mapping accuracy is one of the worst. BWA and MrsFast were found have both low recall rate and low accuracy among all aligners.
<table-wrap id="gkt214-T4" position="float"><label>Table 4.</label><caption><p>Performance of aligners in mapping simulation reads generated from the filtered genome (repetitve regions were removed)</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th rowspan="2" colspan="1">Aligner</th><th colspan="2" align="center" rowspan="1">Without INDELs<hr/></th><th colspan="2" align="center" rowspan="1">With INDELs<hr/></th><th rowspan="2" colspan="1">Time (min)</th><th rowspan="2" colspan="1">Memory (Gb)</th></tr><tr><th rowspan="1" colspan="1">Rec (%)</th><th rowspan="1" colspan="1">Acc (%)</th><th rowspan="1" colspan="1">Rec (%)</th><th rowspan="1" colspan="1">Acc (%)</th></tr></thead><tbody align="left"><tr><td rowspan="1" colspan="1">Subread</td><td rowspan="1" colspan="1">95.96</td><td rowspan="1" colspan="1">99.72</td><td rowspan="1" colspan="1">95.58</td><td rowspan="1" colspan="1">99.31</td><td rowspan="1" colspan="1">16 (29)</td><td rowspan="1" colspan="1">7.6 (4.3)</td></tr><tr><td rowspan="1" colspan="1">Bowtie2</td><td rowspan="1" colspan="1">99.04</td><td rowspan="1" colspan="1">99.41</td><td rowspan="1" colspan="1">98.65</td><td rowspan="1" colspan="1">99.03</td><td rowspan="1" colspan="1">66</td><td rowspan="1" colspan="1">3.3</td></tr><tr><td rowspan="1" colspan="1">BWA</td><td rowspan="1" colspan="1">81.06</td><td rowspan="1" colspan="1">99.22</td><td rowspan="1" colspan="1">80.24</td><td rowspan="1" colspan="1">98.50</td><td rowspan="1" colspan="1">205</td><td rowspan="1" colspan="1">2.4</td></tr><tr><td rowspan="1" colspan="1">Maq</td><td rowspan="1" colspan="1">90.56</td><td rowspan="1" colspan="1">99.69</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">622</td><td rowspan="1" colspan="1">5.9</td></tr><tr><td rowspan="1" colspan="1">Novoalign</td><td rowspan="1" colspan="1">95.99</td><td rowspan="1" colspan="1">99.69</td><td rowspan="1" colspan="1">95.57</td><td rowspan="1" colspan="1">99.29</td><td rowspan="1" colspan="1">91</td><td rowspan="1" colspan="1">8.0</td></tr><tr><td rowspan="1" colspan="1">MrsFast</td><td rowspan="1" colspan="1">72.78</td><td rowspan="1" colspan="1">99.45</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">256</td><td rowspan="1" colspan="1">4.6</td></tr></tbody></table><table-wrap-foot><fn id="gkt214-TF5"><p>Two data sets were used. One data set contains indels and the other does not. Column ‘Rec (%)’ gives the percentage of correctly mapped reads in all simulation reads included in the data set, and column ‘Acc (%)’ gives the percentage of correctly mapped reads in all mapped reads. Maq and MrsFast do not support indel detection, and therefore they do not have recall and accuracy values for the indel-containing data set. Running time and peak memory usage of Subread, Bowtie2, BWA and Novoalign were measured using the indel-containing data set. Running time and peak memory usage of Subread when set to use less memory are given in parentheses.</p></fn></table-wrap-foot></table-wrap></p>
        <p>We then used the data set including indels to compare those aligners that support indel detection. Here, a correctly mapped read must have a correct CIGAR string, in addition to having the correct mapping coordinate on the reference genome as given by its leftmost base. The CIGAR string describes the location and length of indels in the read if there is any. Again, Subread was found to achieve the highest mapping accuracy (<xref ref-type="table" rid="gkt214-T4">Table 4</xref>). The accuracy and recall rate of Novoalign were found to be slightly lower than those of Subread. Similar to its performance in mapping the data set that does not contain indels, Bowtie2 had a high recall rate but low accuracy. The accuracy and recall rate of BWA were both found to be the worst for this data set.</p>
        <p>We further compared running time and peak memory used by these aligners. The running time and peak memory used by Subread, Bowtie2, BWA and Novoalign were measured on the data set including indels, and other aligners were measured on the data set that does not include indels. Subread is the only aligner that allows the tuning of amount of memory used for read mapping. Subread was found to have a mapping speed 4–39 times as fast as other aligners when using 7.6 GB of memory, and 2–21 times as fast when using 4.3 GB of memory (<xref ref-type="table" rid="gkt214-T4">Table 4</xref>). Subread achieves this enormous speed advantage mainly due to its efficient voting mechanism, which does not require the expensive operation of extending a seed sequence to the entire read which is being carried out by all other aligners.</p>
        <p>Subread maintained improved accuracy over competitor aligners when mapping longer 202 bp reads (<ext-link ext-link-type="uri" xlink:href="http://nar.oxfordjournals.org/lookup/suppl/doi:10.1093/nar/gkt214/-/DC1">Supplemental Table S1</ext-link>).</p>
        <p>We also performed simulations using the unfiltered human genome, in which repetitive regions were not removed, to complement the above simulation that used the unique regions of the human genome. Simulation reads were generated from three simulators including Art, Mason and our own simulator (MATERIALS AND METHODS). Reads that were called correctly mapped must have a correct CIGAR string. In this simulation, we also tried using different cut-offs for removing uninformative subreads for Subread. As before, Subread continues to achieve better mapping accuracy and much higher mapping speed, with small cost to sensitivity (<xref ref-type="table" rid="gkt214-T5">Table 5</xref>). Bowtie2 was found to have the worst accuracy in all the comparisons here, although it had a relatively good recall.
<table-wrap id="gkt214-T5" position="float"><label>Table 5.</label><caption><p>Performance of aligners in mapping simulation reads generated from the unfiltered human genome (repetitive regions were kept)</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th rowspan="2" colspan="1">Aligner</th><th colspan="2" align="center" rowspan="1">Art<hr/></th><th colspan="2" align="center" rowspan="1">Mason<hr/></th><th colspan="2" align="center" rowspan="1">Our simulator<hr/></th><th rowspan="2" colspan="1">Time (min)</th></tr><tr><th rowspan="1" colspan="1">Rec (%)</th><th rowspan="1" colspan="1">Acc (%)</th><th rowspan="1" colspan="1">Rec (%)</th><th rowspan="1" colspan="1">Acc (%)</th><th rowspan="1" colspan="1">Rec (%)</th><th rowspan="1" colspan="1">Acc (%)</th></tr></thead><tbody align="left"><tr><td rowspan="1" colspan="1">Subread</td><td rowspan="1" colspan="1">81.5</td><td rowspan="1" colspan="1">97.9</td><td rowspan="1" colspan="1">88.8</td><td rowspan="1" colspan="1">96.1</td><td rowspan="1" colspan="1">88.5</td><td rowspan="1" colspan="1">98.0</td><td rowspan="1" colspan="1">17</td></tr><tr><td rowspan="1" colspan="1">Subread -f 100</td><td rowspan="1" colspan="1">84.4</td><td rowspan="1" colspan="1">97.7</td><td rowspan="1" colspan="1">91.5</td><td rowspan="1" colspan="1">96.0</td><td rowspan="1" colspan="1">91.3</td><td rowspan="1" colspan="1">97.9</td><td rowspan="1" colspan="1">19</td></tr><tr><td rowspan="1" colspan="1">Subread -f 200</td><td rowspan="1" colspan="1">85.5</td><td rowspan="1" colspan="1">97.6</td><td rowspan="1" colspan="1">92.5</td><td rowspan="1" colspan="1">95.9</td><td rowspan="1" colspan="1">92.4</td><td rowspan="1" colspan="1">97.8</td><td rowspan="1" colspan="1">21</td></tr><tr><td rowspan="1" colspan="1">Subread -f 300</td><td rowspan="1" colspan="1">86.1</td><td rowspan="1" colspan="1">97.5</td><td rowspan="1" colspan="1">93.1</td><td rowspan="1" colspan="1">95.8</td><td rowspan="1" colspan="1">92.9</td><td rowspan="1" colspan="1">97.7</td><td rowspan="1" colspan="1">22</td></tr><tr><td rowspan="1" colspan="1">Bowtie2</td><td rowspan="1" colspan="1">87.6</td><td rowspan="1" colspan="1">95.2</td><td rowspan="1" colspan="1">95.2</td><td rowspan="1" colspan="1">95.3</td><td rowspan="1" colspan="1">95.7</td><td rowspan="1" colspan="1">96.0</td><td rowspan="1" colspan="1">83</td></tr><tr><td rowspan="1" colspan="1">BWA</td><td rowspan="1" colspan="1">87.1</td><td rowspan="1" colspan="1">97.2</td><td rowspan="1" colspan="1">95.5</td><td rowspan="1" colspan="1">95.7</td><td rowspan="1" colspan="1">78.6</td><td rowspan="1" colspan="1">96.4</td><td rowspan="1" colspan="1">497</td></tr><tr><td rowspan="1" colspan="1">Novoalign</td><td rowspan="1" colspan="1">89.8</td><td rowspan="1" colspan="1">97.3</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">93.5</td><td rowspan="1" colspan="1">97.1</td><td rowspan="1" colspan="1">140</td></tr></tbody></table><table-wrap-foot><fn id="gkt214-TF4"><p>One hundred thousand 100 bp reads were each generated from Art and Mason simulators, and 10 million 101 bp reads were generated from our simulator. ‘-f’ option of Subread specifies the threshold for removing uninformative subread. For example, ‘-f 100’ means those subreads that occur 100 or more times in the reference genome were removed. Running time was measured using our simulation data.</p></fn></table-wrap-foot></table-wrap></p>
        <p>It can also be seen that when a higher threshold was used for removing uninformative subreads, Subread has a lower accuracy but a higher recall. The decrease of accuracy should be because more uninformative subreads remained when using a higher threshold, and these uninformative subreads introduced more ambiguity to the mapping. We prefer a low threshold (20–100) in favour of mapping accuracy, although users can tune it to achieve the balance between accuracy and recall they desire. More importantly, the speed advantage of Subread is almost unaffected by the choice of threshold values.</p>
        <p>Next, we examined how well the MQS can be used to measure the confidence of read alignment, using simulation data. MQS has been found useful in downstream analyses, for example they have been used by genotypers to improve the performance of variant calling etc. (<xref ref-type="bibr" rid="gkt214-B38">38</xref>). <xref ref-type="fig" rid="gkt214-F4">Figure 4</xref>a and c show that for each aligner, as expected, reads mapped with high MQS contained fewer incorrect alignments. This supports the use of MQS as a means to find high-confidence read alignments. Subread reports more correct alignments (higher recall) than Bowtie2 for the reads with high to medium MQS, and fewer incorrect alignments for the reads with medium to low MQS. Note that multi-mapping reads were assigned low MQS by every aligner. Novoalign seems to have a lower recall than Subread for the reads with high MQS, but a slightly better recall for the reads with low to medium MQS. Note that the overwhelming majority of mapped reads were given high MQS by every aligner. BWA has the best recall in Mason data set, but the worst recall in our simulation data set.
<fig id="gkt214-F4" position="float"><label>Figure 4.</label><caption><p>Recall and accuracy of aligners with respect to MQSs. (<bold>a</bold>) and (<bold>c</bold>) give the cumulative number of correctly mapped reads and incorrectly mapped reads from high to low mapping quality. (<bold>b</bold>) and (<bold>d</bold>) show the cumulative accuracy and error fractions from high to low mapping quality. (a) and (b) use the indel data set included in <xref ref-type="table" rid="gkt214-T4">Table 4</xref>, and (c) and (d) use the Mason data set included in <xref ref-type="table" rid="gkt214-T5">Table 5</xref>. Each point in each plot corresponds to an MQS given by an aligner. Subread was run with default setting in (a) and (b) and with -f 100 in (c) and (d).</p></caption><graphic xlink:href="gkt214f4p"/></fig></p>
        <p>When assessing the accuracy of alternative aligners relative to each MQS, we use error fraction instead of absolute number of incorrect alignments, to take into account of the fact that different aligners reported different total number of incorrect alignments. The error fraction relative to an MQS <italic>s</italic> is calculated as the number of those incorrectly mapped reads, which had MQS equal to or higher than <italic>s</italic>, divided by the total number of incorrectly mapped reads reported by the aligner. The mapping accuracy relative to <italic>s</italic> is then calculated as the number of correctly mapped reads with MQS equal to or higher than <italic>s</italic> divided by the total number of reads that had their MQS equal to or higher than <italic>s</italic>. <xref ref-type="fig" rid="gkt214-F4">Figure 4</xref>b and d show that Subread outperforms all other aligners in mapping accuracy at each MQS value. Taken together, Subread was found to have comparable recall but higher accuracy across the entire MQS range, compared with other aligners.</p>
      </sec>
    </sec>
    <sec>
      <title>Subjunc outperforms other junction detectors</title>
      <p>The proposed seed-and-vote mapping paradigm has been demonstrated to be more accurate and efficient in read mapping. Here, we show that it is also useful in detecting exon–exon junctions. We now compare Subjunc, our new junction detector developed under the seed-and-vote paradigm, with other methods including MapSplice, TopHat and TopHat 2, using both simulation data and real data (SEQC data).</p>
      <p>We randomly selected ∼600 genes from human genome and generated junction reads and exonic reads from them. Indels and sequencing errors were introduced to the read data in the same way as that used for generating simulation data for comparing aligners. It is known that distribution of gene expression levels is subject to exponential distribution. We therefore assign to genes the expression levels taken from an exponential distribution to make the simulation data more similar to real RNA-seq data. This also enables us to examine the performance of each junction detection method in detecting exon–exon junctions for both highly expressed genes and lowly expressed genes. We quantify expression levels of genes using number of reads per kilobases total exon model to take into account gene length differences.</p>
      <p>We generated three simulation data sets with different sequencing coverages including 30 times (30×), 70 times (70×) and 100 times (100×). Length of generated reads is 101 bp. These data sets roughly correspond to RNA-seq data sets containing 18 million, 42 million and 60 million reads, respectively (size of the transcriptome is estimated to be 2% of genome size). Thus, they represent typical sizes of sequencing data sets currently being generated.</p>
      <p><xref ref-type="table" rid="gkt214-T6">Table 6</xref> shows the results of comparing junction detectors using these three data sets. It can be seen that Subjunc achieves the highest accuracy in exon–exon junction detection among all detectors. MapSplice has a higher recall rate than Subjunc, but its accuracy is clearly lower than Subjunc. TopHat 2 has a slightly better performance than TopHat, but both of them were found to have the worst accuracy, and TopHat was found to have the worst recall rate.
<table-wrap id="gkt214-T6" position="float"><label>Table 6.</label><caption><p>Performance of exon–exon junction detectors in junction detection and read mapping from using simulation data</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th rowspan="2" colspan="1">Coverage</th><th rowspan="2" colspan="1">Method</th><th colspan="2" align="center" rowspan="1">Junctions<hr/></th><th colspan="2" align="center" rowspan="1">Junction reads<hr/></th><th colspan="2" align="center" rowspan="1">All reads<hr/></th><th rowspan="2" colspan="1">Time (min)</th></tr><tr><th rowspan="1" colspan="1">Rec (%)</th><th rowspan="1" colspan="1">Acc (%)</th><th rowspan="1" colspan="1">Rec (%)</th><th rowspan="1" colspan="1">Acc (%)</th><th rowspan="1" colspan="1">Rec (%)</th><th rowspan="1" colspan="1">Acc (%)</th></tr></thead><tbody align="left"><tr><td rowspan="4" colspan="1">30×</td><td rowspan="1" colspan="1">Subjunc</td><td rowspan="1" colspan="1">92.4</td><td rowspan="1" colspan="1">98.3</td><td rowspan="1" colspan="1">90.5</td><td rowspan="1" colspan="1">98.0</td><td rowspan="1" colspan="1">93.2</td><td rowspan="1" colspan="1">96.1</td><td rowspan="1" colspan="1">2</td></tr><tr><td rowspan="1" colspan="1">MapSplice</td><td rowspan="1" colspan="1">93.1</td><td rowspan="1" colspan="1">97.3</td><td rowspan="1" colspan="1">86.3</td><td rowspan="1" colspan="1">95.4</td><td rowspan="1" colspan="1">95.8</td><td rowspan="1" colspan="1">88.9</td><td rowspan="1" colspan="1">15</td></tr><tr><td rowspan="1" colspan="1">TopHat</td><td rowspan="1" colspan="1">92.0</td><td rowspan="1" colspan="1">92.3</td><td rowspan="1" colspan="1">86.7</td><td rowspan="1" colspan="1">91.9</td><td rowspan="1" colspan="1">95.7</td><td rowspan="1" colspan="1">92.0</td><td rowspan="1" colspan="1">16</td></tr><tr><td rowspan="1" colspan="1">TopHat 2</td><td rowspan="1" colspan="1">92.4</td><td rowspan="1" colspan="1">93.4</td><td rowspan="1" colspan="1">87.6</td><td rowspan="1" colspan="1">93.5</td><td rowspan="1" colspan="1">96.4</td><td rowspan="1" colspan="1">89.0</td><td rowspan="1" colspan="1">15</td></tr><tr><td rowspan="4" colspan="1">70×</td><td rowspan="1" colspan="1">Subjunc</td><td rowspan="1" colspan="1">93.2</td><td rowspan="1" colspan="1">98.0</td><td rowspan="1" colspan="1">90.7</td><td rowspan="1" colspan="1">98.0</td><td rowspan="1" colspan="1">93.3</td><td rowspan="1" colspan="1">96.1</td><td rowspan="1" colspan="1">3</td></tr><tr><td rowspan="1" colspan="1">MapSplice</td><td rowspan="1" colspan="1">94.0</td><td rowspan="1" colspan="1">97.0</td><td rowspan="1" colspan="1">86.3</td><td rowspan="1" colspan="1">95.4</td><td rowspan="1" colspan="1">95.8</td><td rowspan="1" colspan="1">88.8</td><td rowspan="1" colspan="1">17</td></tr><tr><td rowspan="1" colspan="1">TopHat</td><td rowspan="1" colspan="1">93.0</td><td rowspan="1" colspan="1">91.7</td><td rowspan="1" colspan="1">87.2</td><td rowspan="1" colspan="1">91.9</td><td rowspan="1" colspan="1">95.9</td><td rowspan="1" colspan="1">92.0</td><td rowspan="1" colspan="1">26</td></tr><tr><td rowspan="1" colspan="1">TopHat 2</td><td rowspan="1" colspan="1">93.5</td><td rowspan="1" colspan="1">93.0</td><td rowspan="1" colspan="1">88.1</td><td rowspan="1" colspan="1">93.4</td><td rowspan="1" colspan="1">96.6</td><td rowspan="1" colspan="1">88.9</td><td rowspan="1" colspan="1">24</td></tr><tr><td rowspan="4" colspan="1">100×</td><td rowspan="1" colspan="1">Subjunc</td><td rowspan="1" colspan="1">93.3</td><td rowspan="1" colspan="1">98.0</td><td rowspan="1" colspan="1">90.8</td><td rowspan="1" colspan="1">98.0</td><td rowspan="1" colspan="1">93.3</td><td rowspan="1" colspan="1">96.2</td><td rowspan="1" colspan="1">5</td></tr><tr><td rowspan="1" colspan="1">MapSplice</td><td rowspan="1" colspan="1">94.3</td><td rowspan="1" colspan="1">96.9</td><td rowspan="1" colspan="1">86.3</td><td rowspan="1" colspan="1">95.5</td><td rowspan="1" colspan="1">95.9</td><td rowspan="1" colspan="1">89.0</td><td rowspan="1" colspan="1">18</td></tr><tr><td rowspan="1" colspan="1">TopHat</td><td rowspan="1" colspan="1">93.0</td><td rowspan="1" colspan="1">91.0</td><td rowspan="1" colspan="1">87.2</td><td rowspan="1" colspan="1">91.9</td><td rowspan="1" colspan="1">95.9</td><td rowspan="1" colspan="1">92.0</td><td rowspan="1" colspan="1">32</td></tr><tr><td rowspan="1" colspan="1">TopHat 2</td><td rowspan="1" colspan="1">93.7</td><td rowspan="1" colspan="1">93.0</td><td rowspan="1" colspan="1">88.1</td><td rowspan="1" colspan="1">93.6</td><td rowspan="1" colspan="1">96.6</td><td rowspan="1" colspan="1">89.0</td><td rowspan="1" colspan="1">30</td></tr></tbody></table><table-wrap-foot><fn id="gkt214-TF7"><p>Three simulation data sets were used, which have different sequencing coverages (30×, 70× and 100×). Column ‘Junction’ gives the recall rate and accuracy for the detection of exon–exon junctions by each method. Recall rate is the percentage of correctly reported junctions in all junctions generated in the simulation data, and accuracy is the percentage of correctly reported junctions in all reported junctions. Column ‘Junction reads’ (or ‘All reads’) gives the recall rate and accuracy of mapping of junction reads (or any reads). Recall rate is the percentage of correctly reported junction reads (or any reads) in all generated junction reads (or all reads) in the simulation data, and accuracy is the percentage of correctly mapped junction reads (or any reads) in all reported junction reads (or any reads). Results are given for Subjunc with default settings.</p></fn></table-wrap-foot></table-wrap></p>
      <p>It is important to compare junction detectors for their performance in mapping reads, especially junction reads, in addition to comparing them for calling exon–exon junctions. This, however, has been overlooked in the literature. The precise mapping of RNA-seq reads (especially junction reads) is crucial for some downstream analyses, such as detection of functional variations (indels, SNPs, etc), allele-specific gene expression analysis and so on. A serious problem with variant calling is known to be the high false-positive rate. Here, we also compared the four junction detectors for their performance in mapping the reads.</p>
      <p>Subjunc was found to outperform other detectors in read mapping by a clear margin, especially in the mapping of junction reads, in which it achieves both best accuracy and best recall rate (<xref ref-type="table" rid="gkt214-T6">Table 6</xref>). The superior read mapping accuracy achieved by Subjunc gives it a lot more power in calling exon–exon junctions. Moreover, Subjunc is substantially faster in read mapping and junction calling. More comparison results for speed and memory usage can be seen from the comparison using the SEQC data set.</p>
      <p>We used the SEQC RNA-seq data to further compare junction detectors. <xref ref-type="table" rid="gkt214-T7">Table 7</xref> shows the comparison results. We compared locations of exon–exon junctions in the genome reported by each method with the chromosomal regions of annotated human exons obtained from NCBI RefSeq annotation (build 37.2), to examine the difference between alternative methods in detecting exon–exon junctions originated from the splicing of known exons. Subjunc was found to have the highest percentage of ‘known’ junctions in all its reported junctions for every sample type (column ‘% known junction’), although its absolute numbers of discovered junctions are less than MapSplice and TopHat. This suggests that Subjunc has a higher accuracy in calling junctions than other methods, which is concordant with the simulation results. MapSplice now has the lowest percentage of ‘known’ junctions, although it calls more junctions than any other methods, suggesting that its accuracy is the worst among all the methods. TopHat 2 called less junction than TopHat, but its percentage of ‘known’ junctions is higher than TopHat. Compared with Subjunc, TopHat 2 had a comparable number of reported junctions, but its percentage of ‘known’ junctions is lower. It is worth noting that overall most of the reported junctions by each method (∼80% or more) were found to originate from the well-annotated RefSeq exons. Also, every method found more exon–exon junction in samples C and D than in A and B, which is expected because samples C and D are the mixture of samples A and B.
<table-wrap id="gkt214-T7" position="float"><label>Table 7.</label><caption><p>Performance of exon–exon junction detectors in junction detection and read mapping from using SEQC RNA-seq data</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th rowspan="2" colspan="1">Method</th><th colspan="4" align="center" rowspan="1">Number of junctions (’000)<hr/></th><th colspan="4" align="center" rowspan="1">Known junctions (%)<hr/></th><th colspan="4" align="center" rowspan="1">Supporting junction reads (%)<hr/></th><th rowspan="2" colspan="1">Time (h)</th><th rowspan="2" colspan="1">Memory (Gb)</th></tr><tr><th rowspan="1" colspan="1">A</th><th rowspan="1" colspan="1">B</th><th rowspan="1" colspan="1">C</th><th rowspan="1" colspan="1">D</th><th rowspan="1" colspan="1">A</th><th rowspan="1" colspan="1">B</th><th rowspan="1" colspan="1">C</th><th rowspan="1" colspan="1">D</th><th rowspan="1" colspan="1">A</th><th rowspan="1" colspan="1">B</th><th rowspan="1" colspan="1">C</th><th rowspan="1" colspan="1">D</th></tr></thead><tbody align="left"><tr><td rowspan="1" colspan="1">Subjunc</td><td rowspan="1" colspan="1">152</td><td rowspan="1" colspan="1">142</td><td rowspan="1" colspan="1">155</td><td rowspan="1" colspan="1">157</td><td rowspan="1" colspan="1">84.4</td><td rowspan="1" colspan="1">86.6</td><td rowspan="1" colspan="1">85.6</td><td rowspan="1" colspan="1">85.8</td><td rowspan="1" colspan="1">95.8</td><td rowspan="1" colspan="1">95.1</td><td rowspan="1" colspan="1">95.7</td><td rowspan="1" colspan="1">95.3</td><td rowspan="1" colspan="1">1.4 (1.9)</td><td rowspan="1" colspan="1">8.4 (4.7)</td></tr><tr><td rowspan="1" colspan="1">MapSplice</td><td rowspan="1" colspan="1">171</td><td rowspan="1" colspan="1">157</td><td rowspan="1" colspan="1">173</td><td rowspan="1" colspan="1">175</td><td rowspan="1" colspan="1">78.3</td><td rowspan="1" colspan="1">81.4</td><td rowspan="1" colspan="1">80.1</td><td rowspan="1" colspan="1">80.2</td><td rowspan="1" colspan="1">94.4</td><td rowspan="1" colspan="1">93.5</td><td rowspan="1" colspan="1">94.2</td><td rowspan="1" colspan="1">93.8</td><td rowspan="1" colspan="1">5.6</td><td rowspan="1" colspan="1">4.3</td></tr><tr><td rowspan="1" colspan="1">TopHat</td><td rowspan="1" colspan="1">156</td><td rowspan="1" colspan="1">145</td><td rowspan="1" colspan="1">159</td><td rowspan="1" colspan="1">161</td><td rowspan="1" colspan="1">82.5</td><td rowspan="1" colspan="1">84.9</td><td rowspan="1" colspan="1">83.8</td><td rowspan="1" colspan="1">84.0</td><td rowspan="1" colspan="1">93.8</td><td rowspan="1" colspan="1">93.5</td><td rowspan="1" colspan="1">93.8</td><td rowspan="1" colspan="1">93.6</td><td rowspan="1" colspan="1">9.2</td><td rowspan="1" colspan="1">2.9</td></tr><tr><td rowspan="1" colspan="1">TopHat 2</td><td rowspan="1" colspan="1">152</td><td rowspan="1" colspan="1">141</td><td rowspan="1" colspan="1">155</td><td rowspan="1" colspan="1">157</td><td rowspan="1" colspan="1">83.8</td><td rowspan="1" colspan="1">85.9</td><td rowspan="1" colspan="1">85.0</td><td rowspan="1" colspan="1">85.2</td><td rowspan="1" colspan="1">94.1</td><td rowspan="1" colspan="1">93.5</td><td rowspan="1" colspan="1">93.9</td><td rowspan="1" colspan="1">93.7</td><td rowspan="1" colspan="1">9.9</td><td rowspan="1" colspan="1">3.5</td></tr></tbody></table><table-wrap-foot><fn id="gkt214-TF6"><p>Columns give the number of reported exon–exon junctions, percentage of reported junctions that span known exons, percentage of reported junction reads that support those known junctions, for each of the four samples included in the SEQC project (A, B, C and D). Sample A is Universal Human Reference RNA made up from 10 cancer cell lines and sample B is Human Brain Reference RNA. C and D are the mixtures of A and B. Chromosomal coordinates of annotated exons from NCBI RefSeq mouse annotation build 37.2 are used to determine whether or not a junction spans known exons. Running time and peak memory usage of Subjunc when set to use less memory are given in parenthesis.</p></fn></table-wrap-foot></table-wrap></p>
      <p>We then compared these junction detectors by examining the percentage of reported junction reads that support their reported ‘known’ junctions. Subjunc was found to have the highest percentage of supporting junction reads in each sample type (column ‘Supporting junction reads (%)’), indicating higher accuracy of Subjunc for mapping junction reads. TopHat and TopHat 2 were found to have the lowest percentages of supporting junction reads. This comparison result is consistent with the accuracy comparison results for junction reads from simulation.</p>
      <p>Consistent with the speed advantage of Subread shown in the read mapping comparisons, Subjunc was found to achieve a large speed advantage as well. Subjunc was found to be four to seven times as fast as other methods when using 8.4 GB of memory, and three to five times as fast when using 4.7 GB of memory. This greatly reduces the computational burden on discovering genome-wide splicing events.</p>
      <p>These results show improved speed and accuracy performance for Subjunc in exon–exon junction detection over existing methods.</p>
    </sec>
  </sec>
  <sec sec-type="discussion">
    <title>DISCUSSION</title>
    <p>Next-generation sequencing technologies entered mainstream genomic research only a few years ago, and the best ways to solve mapping and alignment problems are still being developed. Sequencing technologies continue to evolve at an astonishing rate, and read alignment is certain to be a significant bottleneck in the analysis of genomic data in the future at all levels of medical and biological research. Current read alignment tools are being challenged by increased data volumes and show deteriorating performance with longer reads. In this study, we propose a new multi-seed read alignment paradigm, called seed-and-vote, that abandons the computationally heavy extend operation of existing aligners in favour of a voting strategy to quickly and accurately locate the locations of reads in the reference genome.</p>
    <p>The seed-and-vote paradigm has been found to be effective not only for quickly identifying mapping locations but also for detecting indels and for detecting exon–exon junctions for RNA-seq data. Using the subreads flanking the indel regions to locate indels and to determine their sizes enables highly accurate detection of indels. The overhead computational cost for indel detection is small, because the indel detection is only required for those regions that are not covered by the subreads that have made successful votes. To detect exon junctions, the algorithm uses the best two mapping locations voted by subreads extracted from junction reads to generate a set of candidate exon–exon junctions, and then performs rigorous validation for them to achieve a high detection accuracy.</p>
    <p>We used a variety of data sets to demonstrate the performance of this paradigm against existing aligners. In particular, we used ERCC spike-in controls for the evaluation. Spike-in data sets have proved effective for evaluating methods developed for the analysis of microarray data (<xref ref-type="bibr" rid="gkt214-B31">31</xref>,<xref ref-type="bibr" rid="gkt214-B39 gkt214-B40 gkt214-B41 gkt214-B42 gkt214-B43">39–43</xref>). To the best of our knowledge, our study is the first to use spike-in controls to evaluate the performance of read aligners for mapping next-gen sequencing data. The unbiased design of ERCC spike-in transcripts and their known concentration and fold changes make them ideal for assessing the accuracy of read aligners. Our Subread aligner was found to clearly outperform other aligners in this comparison. Furthermore, we used SEQC RNA-seq data, 1000 Genomes exome sequencing data and simulation data to demonstrate the performance of Subread and Subjunc. Consistently across all evaluation data sets, the seed-and-vote paradigm showed higher accuracy and much higher mapping speed than the seed-and-extend methods, with little cost to recall. In particular, the superior performance of Subread in indel detection will bring a lot of benefit to the downstream analyses such as genomic variation detection etc. The similar indel detection approach was implemented in Subjunc as well, making it a valuable tool for detecting genomic variation in functional genomic regions (eg. exons).</p>
    <p>Subread and Subjunc allow the tuning of memory used in read mapping. This gives them great flexibility in running on computers with different configurations. Subread and Subjunc achieve their top mapping speed when the entire hash table index is loaded into memory in one go, which takes 7.6 and 8.4 GB of memory, respectively, when mapping reads to human or mouse genome. The amount of memory used by Subread is comparable with or better than those of Novoalign, Maq and MrsFast, but is higher than Bowtie2 and BWA. Given that the contemporary computers are all equipped with large memories, for example the HP Blade supercomputers include hundreds of gigabytes of memory and laptops now can easily have 8 GB of memory, the memory use is not of concern compared with the mapping speed, which is increasingly becoming a bottleneck for the read mapping. Moreover, Subread and Subjunc still have a significant speed advantage when using memory comparable with Bowtie2 and BWA, and with MapSplice, TopHat and TopHat 2, respectively.</p>
    <p>The main scoring scheme used by our seed-and-vote paradigm is the vote number. The mapping location that receives the highest number of votes is chosen for the read. It is guaranteed that the best mapping location is found when the maximum possible number of votes is achieved. It would, however, be interesting to measure how this scheme is correlated to other scoring schemes such as edit distance etc. We used the simulation data to measure this. As expected, voting number is inversely correlated to edit distance, i.e. large voting number correspond to small edit distance and vice versa (<ext-link ext-link-type="uri" xlink:href="http://nar.oxfordjournals.org/lookup/suppl/doi:10.1093/nar/gkt214/-/DC1">Supplemental Figure S6</ext-link>).</p>
    <p>A crucial advantage of the Subread seed-and-vote strategy is that it scales up to map longer reads with negligible increase in computational time. Reads of <inline-formula><inline-graphic xlink:href="gkt214i5.jpg"/></inline-formula> bp are already available, and much longer reads (1000 bp say) may be not far away. We believe that seed-and-vote will continue to yield good mapping results using 10 extracted subreads, even for longer reads, because 160 bases should be more than sufficient to determine the correct location for each read. This implies that local alignment can be achieved for a very long read virtually as quickly as for a shorter read. The time taken for the in-fill step will increase, but not enough to materially affect the overall time taken. By contrast, the running times of other existing aligners increase rapidly with read length. Subread is already faster than other aligners for 50–100 bp, and this advantage should become more pronounced as read lengths increase. Simulations in this article confirm that Subread maintains an accuracy advantage as well as being faster for 202 bp. More comprehensive evaluations should be performed as long read benchmark data sets become available.</p>
    <p>The success of the proposed paradigm in read mapping and its potentially high scalability make it become a promising new tool for the general-purpose sequence search, i.e. finding sequences from a collection of sequences (often stored in a database) that have a high overall similarity to or share common subsequences with the query sequences. The query sequences could be tens or thousands of bases long in the general biological sequence search. Blast (Basic Local Alignment Search Tool) is one of the most widely used algorithms for this kind of sequence search (<xref ref-type="bibr" rid="gkt214-B44">44</xref>). It also makes use of the seed-and-extend paradigm, which means it has the limitations of this paradigm shown in this study, especially the long running time. Our proposed seed-and-vote paradigm can be readily extended to search for a sequence of thousands of bases long from a large sequence database, by extracting more subreads from the query sequence. We speculate that using 30% of total number of extracted subreads as the consensus threshold for calling hit sequences, which is the consensus threshold used in this study for read mapping, may still give a reasonably good accuracy and recall rate, not to mention its super fast searching speed. However, further studies will be needed to investigate how to use this paradigm to perform the sequence search in the most efficient and accurate way.</p>
    <p>Some of the most commonly used statistical analyses of RNA-seq or ChIP-seq data do not actually require detailed alignment information, but are instead based purely on tables of read counts for each gene, or other pre-determined genomic feature, in each biological sample (<xref ref-type="bibr" rid="gkt214-B30">30</xref>,<xref ref-type="bibr" rid="gkt214-B45 gkt214-B46 gkt214-B47 gkt214-B48">45–48</xref>). In our own biological research, we frequently conduct differential expression analyses using total read counts mapped to the exome of each gene, or differential marking analyses of epigenetic modification using total read counts summarized by gene promoter regions or by gene bodies (<xref ref-type="bibr" rid="gkt214-B49">49</xref>). This type of analysis focuses on the total expression level or total read coverage of each gene. Subread is particularly efficient for this type of analysis, because it can identify the gene or feature to which a read maps directly from the seed-and-vote step. When mapping RNA-seq reads, Subread has the capacity to use part of the read sequence to vote for the mapping location for the entire read, and this capacity enables Subread to call mapping locations for reads spanning exon–exon junctions using the longest matched region in the read. For this genewise counts of RNA-seq reads, Subread yields equal or better results than other aligners &gt;15 times as quickly, turning weeks of computing time for large problems into an overnight run. We have created a Bioconductor package Rsubread to give access to Subread capabilities from the R command line, making a pipeline from FASTQ files to read count tables and statistical analyses using packages such as edgeR (<xref ref-type="bibr" rid="gkt214-B50">50</xref>), baySeq (<xref ref-type="bibr" rid="gkt214-B51">51</xref>) or diffBind (<ext-link ext-link-type="uri" xlink:href="www.bioconductor.org">www.bioconductor.org</ext-link>, 2013) particularly convenient. Rsubread includes functions to summarize counts at the gene or exon level given annotation for the reference gene. The latest NCBI RefSeq annotation for the human and mouse genomes are included in the package by default, and annotation for other genomes can be uploaded by the user.</p>
    <p>This study presents a new paradigm for aligning next-gen sequencing data that opens new directions for read mapping algorithms.</p>
  </sec>
  <sec>
    <title>SUPPLEMENTARY DATA</title>
    <p><ext-link ext-link-type="uri" xlink:href="http://nar.oxfordjournals.org/lookup/suppl/doi:10.1093/nar/gkt214/-/DC1">Supplementary Data</ext-link> are available at NAR Online: Supplementary Table 1, Supplementary Figures 1–6 and Supplementary Methods.</p>
  </sec>
  <sec>
    <title>FUNDING</title>
    <p>Project Grant [<award-id>1023454</award-id>] and a Fellowship from the <funding-source>Australian National Health and Medical Research Council (NHMRC)</funding-source> (to GKS); <funding-source>Victorian State Government Operational Infrastructure Support</funding-source>; <funding-source>Australian Government </funding-source>[<funding-source>NHMRC IRIIS</funding-source>]. Funding for open access charge: <funding-source>NHMRC</funding-source> Project Grant [<award-id>1023454</award-id>].</p>
    <p><italic>Conflict of interest statement</italic>. None declared.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="PMC_1" content-type="local-data">
      <caption>
        <title>Supplementary Data</title>
      </caption>
      <media mimetype="text" mime-subtype="html" xlink:href="supp_41_10_e108__index.html"/>
      <media xlink:role="associated-file" mimetype="application" mime-subtype="pdf" xlink:href="supp_gkt214_nar-02790-met-k-2012-File002.pdf"/>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack>
    <title>ACKNOWLEDGEMENTS</title>
    <p>We thank Terry Speed, Rafael Irizarry and Aaron Lun for critical reading of the manuscript, and Leming Shi and Charles Wang for providing the SEQC pilot data.</p>
  </ack>
  <ref-list>
    <title>REFERENCES</title>
    <ref id="gkt214-B1">
      <label>1</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mills</surname>
            <given-names>RE</given-names>
          </name>
          <name>
            <surname>Walter</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Stewart</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Handsaker</surname>
            <given-names>RE</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Alkan</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Abyzov</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Yoon</surname>
            <given-names>SC</given-names>
          </name>
          <name>
            <surname>Ye</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Cheetham</surname>
            <given-names>RK</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A map of human genome variation from population-scale sequencing</article-title>
        <source>Nature</source>
        <year>2010</year>
        <volume>467</volume>
        <fpage>1061</fpage>
        <lpage>1073</lpage>
        <pub-id pub-id-type="pmid">20981092</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B2">
      <label>2</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Marco-Sola</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Sammeth</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Guig</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Ribeca</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>The GEM mapper: fast, accurate and versatile alignment by filtration</article-title>
        <source>Nat. Methods</source>
        <year>2012</year>
        <volume>9</volume>
        <fpage>1185</fpage>
        <lpage>1188</lpage>
        <pub-id pub-id-type="pmid">23103880</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B3">
      <label>3</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Langmead</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Trapnell</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Pop</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Ultrafast and memory-efficient alignment of short DNA sequences to the human genome</article-title>
        <source>Genome Biol.</source>
        <year>2009</year>
        <volume>10</volume>
        <fpage>R25</fpage>
        <pub-id pub-id-type="pmid">19261174</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B4">
      <label>4</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Langmead</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Fast gapped-read alignment with Bowtie 2</article-title>
        <source>Nat. Methods</source>
        <year>2012</year>
        <volume>9</volume>
        <fpage>357</fpage>
        <lpage>359</lpage>
        <pub-id pub-id-type="pmid">22388286</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B5">
      <label>5</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Durbin</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Fast and accurate short read alignment with Burrows-Wheeler transform</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <fpage>1754</fpage>
        <lpage>1760</lpage>
        <pub-id pub-id-type="pmid">19451168</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B6">
      <label>6</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Ruan</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Durbin</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Mapping short DNA sequencing reads and calling variants using mapping quality scores</article-title>
        <source>Genome Res.</source>
        <year>2008</year>
        <volume>18</volume>
        <fpage>1851</fpage>
        <lpage>1858</lpage>
        <pub-id pub-id-type="pmid">18714091</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B7">
      <label>7</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hach</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Hormozdiari</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Alkan</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Hormozdiari</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Birol</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Eichler</surname>
            <given-names>EE</given-names>
          </name>
          <name>
            <surname>Sahinalp</surname>
            <given-names>SC</given-names>
          </name>
        </person-group>
        <article-title>mrsFAST: a cache-oblivious algorithm for short-read mapping</article-title>
        <source>Nat. Methods</source>
        <year>2010</year>
        <volume>7</volume>
        <fpage>576</fpage>
        <lpage>577</lpage>
        <pub-id pub-id-type="pmid">20676076</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B8">
      <label>8</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>David</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Dzamba</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Lister</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Ilie</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Brudno</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>SHRiMP2: sensitive yet practical SHort Read Maping</article-title>
        <source>Bioinformatics</source>
        <year>2011</year>
        <volume>27</volume>
        <fpage>1011</fpage>
        <lpage>102</lpage>
        <pub-id pub-id-type="pmid">21278192</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B9">
      <label>9</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Misra</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Agrawal</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Liao</surname>
            <given-names>WK</given-names>
          </name>
          <name>
            <surname>Choudhary</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Anatomy of a hash-based long read sequence mapping algorithm for next generation DNA sequencing</article-title>
        <source>Bioinformatics</source>
        <year>2011</year>
        <volume>27</volume>
        <fpage>189</fpage>
        <lpage>195</lpage>
        <pub-id pub-id-type="pmid">21088030</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B10">
      <label>10</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Homer</surname>
            <given-names>N</given-names>
          </name>
        </person-group>
        <article-title>A survey of sequence alignment algorithms for next-generation sequencing</article-title>
        <source>Brief. Bioinform.</source>
        <year>2010</year>
        <volume>11</volume>
        <fpage>473</fpage>
        <lpage>483</lpage>
        <pub-id pub-id-type="pmid">20460430</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B11">
      <label>11</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Smith</surname>
            <given-names>TF</given-names>
          </name>
          <name>
            <surname>Waterman</surname>
            <given-names>MS</given-names>
          </name>
        </person-group>
        <article-title>Identification of common molecular subsequences</article-title>
        <source>J. Mol. Biol.</source>
        <year>1981</year>
        <volume>147</volume>
        <fpage>195</fpage>
        <lpage>197</lpage>
        <pub-id pub-id-type="pmid">7265238</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B12">
      <label>12</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Needleman</surname>
            <given-names>SB</given-names>
          </name>
          <name>
            <surname>Wunsch</surname>
            <given-names>CD</given-names>
          </name>
        </person-group>
        <article-title>A general method applicable to the search for similarities in the amino acid sequence of two proteins</article-title>
        <source>J. Mol. Biol.</source>
        <year>1970</year>
        <volume>48</volume>
        <fpage>443</fpage>
        <lpage>453</lpage>
        <pub-id pub-id-type="pmid">5420325</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B13">
      <label>13</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Weese</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Holtgrewe</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Reinert</surname>
            <given-names>K</given-names>
          </name>
        </person-group>
        <article-title>RazerS 3: faster, fully sensitive read mapping</article-title>
        <source>Bioinformatics</source>
        <year>2012</year>
        <volume>28</volume>
        <fpage>2592</fpage>
        <lpage>2599</lpage>
        <pub-id pub-id-type="pmid">22923295</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B14">
      <label>14</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Myers</surname>
            <given-names>EW</given-names>
          </name>
        </person-group>
        <article-title>A fast bit-vector algorithm for approximate string matching based on dynamic programming</article-title>
        <source>JACM</source>
        <year>1999</year>
        <volume>46</volume>
        <fpage>395</fpage>
        <lpage>415</lpage>
      </element-citation>
    </ref>
    <ref id="gkt214-B15">
      <label>15</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lin</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>MQ</given-names>
          </name>
          <name>
            <surname>Ma</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>ZOOM! Zillions of oligos mapped</article-title>
        <source>Bioinformatics</source>
        <year>2008</year>
        <volume>24</volume>
        <fpage>2431</fpage>
        <lpage>2437</lpage>
        <pub-id pub-id-type="pmid">18684737</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B16">
      <label>16</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rizk</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Lavenier</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>GASSST: global alignment short sequence search tool</article-title>
        <source>Bioinformatics</source>
        <year>2010</year>
        <volume>26</volume>
        <fpage>2534</fpage>
        <lpage>2540</lpage>
        <pub-id pub-id-type="pmid">20739310</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B17">
      <label>17</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wu</surname>
            <given-names>TD</given-names>
          </name>
          <name>
            <surname>Nacu</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Fast and SNP-tolerant detection of complex variants and splicing in short reads</article-title>
        <source>Bioinformatics</source>
        <year>2010</year>
        <volume>26</volume>
        <fpage>873</fpage>
        <lpage>881</lpage>
        <pub-id pub-id-type="pmid">20147302</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B18">
      <label>18</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Homer</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Merriman</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Nelson</surname>
            <given-names>SF</given-names>
          </name>
        </person-group>
        <article-title>BFAST: an alignment tool for large scale genome resequencing</article-title>
        <source>PLoS One</source>
        <year>2009</year>
        <volume>4</volume>
        <fpage>e7767, 2009</fpage>
        <pub-id pub-id-type="pmid">19907642</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B19">
      <label>19</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kehr</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Weese</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Reinert</surname>
            <given-names>K</given-names>
          </name>
        </person-group>
        <article-title>STELLAR: fast and exact local alignments</article-title>
        <source>BMC Bioinformatics</source>
        <year>2011</year>
        <volume>12</volume>
        <issue>Suppl. 9</issue>
        <fpage>S15</fpage>
        <pub-id pub-id-type="pmid">22151882</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B20">
      <label>20</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rasmussen</surname>
            <given-names>KR</given-names>
          </name>
          <name>
            <surname>Stoye</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Myers</surname>
            <given-names>EW</given-names>
          </name>
        </person-group>
        <article-title>Efficient q-gram filters for finding all ϵ-matches over a given length</article-title>
        <source>J. Comput. Biol.</source>
        <year>2006</year>
        <volume>13</volume>
        <fpage>296</fpage>
        <lpage>308</lpage>
        <pub-id pub-id-type="pmid">16597241</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B21">
      <label>21</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Burkhardt</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Crauser</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Ferragina</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Lenhof</surname>
            <given-names>HP</given-names>
          </name>
          <name>
            <surname>Rivals</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Vingron</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>q-gram based database searching using a suffix array (QUASAR)</article-title>
        <source>Proceedings of RECOMB’99</source>
        <year>1999</year>
        <publisher-loc>New York</publisher-loc>
        <publisher-name>ACM</publisher-name>
        <fpage>77</fpage>
        <lpage>83</lpage>
      </element-citation>
    </ref>
    <ref id="gkt214-B22">
      <label>22</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sun</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Gao</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Tan</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Ma</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Shi</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Yao</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Guo</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Yang</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>Q</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A six-nucleotide insertion-deletion polymorphism in the CASP8 promoter is associated with susceptibility to multiple cancers</article-title>
        <source>Nat. Genet.</source>
        <year>2007</year>
        <volume>39</volume>
        <fpage>605</fpage>
        <lpage>613</lpage>
        <pub-id pub-id-type="pmid">17450141</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B23">
      <label>23</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bi</surname>
            <given-names>XH</given-names>
          </name>
          <name>
            <surname>Lu</surname>
            <given-names>CM</given-names>
          </name>
          <name>
            <surname>Liu</surname>
            <given-names>Q</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>ZX</given-names>
          </name>
          <name>
            <surname>Zhao</surname>
            <given-names>HL</given-names>
          </name>
          <name>
            <surname>Yu</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>JW</given-names>
          </name>
        </person-group>
        <article-title>A 14 bp indel variation in the NCX1 gene modulates the age at onset in late-onset Alzheimer’s disease</article-title>
        <source>J. Neural. Transm.</source>
        <year>2012</year>
        <volume>119</volume>
        <fpage>383</fpage>
        <lpage>386</lpage>
        <pub-id pub-id-type="pmid">21833492</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B24">
      <label>24</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Trapnell</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Williams</surname>
            <given-names>BA</given-names>
          </name>
          <name>
            <surname>Pertea</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Mortazavi</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Kwan</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>van Baren</surname>
            <given-names>MJ</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
          <name>
            <surname>Wold</surname>
            <given-names>BJ</given-names>
          </name>
          <name>
            <surname>Pachter</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>Transcript assembly and quantification by RNA-Seq reveals unannotated transcripts and isoform switching during cell differentiation</article-title>
        <source>Nat. Biotechnol.</source>
        <year>2010</year>
        <volume>28</volume>
        <fpage>511</fpage>
        <lpage>515</lpage>
        <pub-id pub-id-type="pmid">20436464</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B25">
      <label>25</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Trapnell</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Pachter</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Tophat: discovering splice junctions with RNA-Seq</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <fpage>1105</fpage>
        <lpage>1111</lpage>
        <pub-id pub-id-type="pmid">19289445</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B26">
      <label>26</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wang</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Singh</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Zeng</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Coleman</surname>
            <given-names>SJ</given-names>
          </name>
          <name>
            <surname>Huang</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Savich</surname>
            <given-names>GL</given-names>
          </name>
          <name>
            <surname>He</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Mieczkowski</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Grimm</surname>
            <given-names>SA</given-names>
          </name>
          <name>
            <surname>Perou</surname>
            <given-names>CM</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Mapsplice: accurate mapping of RNA-seq reads for splice junction discovery</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2010</year>
        <volume>38</volume>
        <fpage>e178</fpage>
        <pub-id pub-id-type="pmid">20802226</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B27">
      <label>27</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Robinson</surname>
            <given-names>MD</given-names>
          </name>
          <name>
            <surname>Smyth</surname>
            <given-names>GK</given-names>
          </name>
        </person-group>
        <article-title>Moderated statistical tests for assessing differences in tag abundance</article-title>
        <source>Bioinformatics</source>
        <year>2007</year>
        <volume>23</volume>
        <fpage>2881</fpage>
        <lpage>2887</lpage>
        <pub-id pub-id-type="pmid">17881408</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B28">
      <label>28</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Langmead</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Hansen</surname>
            <given-names>KD</given-names>
          </name>
          <name>
            <surname>Leek</surname>
            <given-names>JT</given-names>
          </name>
        </person-group>
        <article-title>Cloud-scale RNA-sequencing differential expression analysis with Myrna</article-title>
        <source>Genome Biol.</source>
        <year>2010</year>
        <volume>11</volume>
        <fpage>R83</fpage>
        <pub-id pub-id-type="pmid">20701754</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B29">
      <label>29</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Anders</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Huber</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <article-title>Differential expression analysis for sequence count data</article-title>
        <source>Genome Biol.</source>
        <year>2010</year>
        <volume>11</volume>
        <fpage>R106</fpage>
        <pub-id pub-id-type="pmid">20979621</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B30">
      <label>30</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>McCarthy</surname>
            <given-names>DJ</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Smyth</surname>
            <given-names>GK</given-names>
          </name>
        </person-group>
        <article-title>Differential expression analysis of multifactor RNA-seq experiments with respect to biological variation</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2012</year>
        <volume>40</volume>
        <fpage>4288</fpage>
        <lpage>4297</lpage>
        <pub-id pub-id-type="pmid">22287627</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B31">
      <label>31</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <collab>MAQC Consortium</collab>
          <name>
            <surname>Shi</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Reid</surname>
            <given-names>LH</given-names>
          </name>
          <name>
            <surname>Jones</surname>
            <given-names>WD</given-names>
          </name>
          <name>
            <surname>Shippy</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Warrington</surname>
            <given-names>JA</given-names>
          </name>
          <name>
            <surname>Baker</surname>
            <given-names>SC</given-names>
          </name>
          <name>
            <surname>Collins</surname>
            <given-names>PJ</given-names>
          </name>
          <name>
            <surname>de Longueville</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Kawasaki</surname>
            <given-names>ES</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The Microarray Quality Control (MAQC) project shows inter- and intraplatform reproducibility of gene expression measurements</article-title>
        <source>Nat. Biotechnol.</source>
        <year>2006</year>
        <volume>24</volume>
        <fpage>1151</fpage>
        <lpage>1161</lpage>
        <pub-id pub-id-type="pmid">16964229</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B32">
      <label>32</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Holtgrewe</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Mason—a read simulator for second generation sequencing data</article-title>
        <year>2010</year>
        <comment><italic>Technical Report, Mathematics Department, Freie Universität Berlin</italic>, TR-B-10-06</comment>
      </element-citation>
    </ref>
    <ref id="gkt214-B33">
      <label>33</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Huang</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Myers</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Marth</surname>
            <given-names>GT</given-names>
          </name>
        </person-group>
        <article-title>ART: a next-generation sequencing read simulator</article-title>
        <source>Bioinformatics</source>
        <year>2012</year>
        <volume>28</volume>
        <fpage>593</fpage>
        <lpage>594</lpage>
        <pub-id pub-id-type="pmid">22199392</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B34">
      <label>34</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Handsaker</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Wysoker</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Fennell</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Ruan</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Homer</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Marth</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Abecasis</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Durbin</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <collab>1000 Genome Project Data Processing Subgroup</collab>
        <article-title>The sequence Alignment/Map format and SAMtools</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <fpage>2078</fpage>
        <lpage>2079</lpage>
        <pub-id pub-id-type="pmid">19505943</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B35">
      <label>35</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Holtgrewe</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Emde</surname>
            <given-names>AK</given-names>
          </name>
          <name>
            <surname>Weese</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Reinert</surname>
            <given-names>K</given-names>
          </name>
        </person-group>
        <article-title>A novel and well-defined benchmarking method for second generation read mapping</article-title>
        <source>BMC Bioinformatics</source>
        <year>2011</year>
        <volume>12</volume>
        <fpage>210</fpage>
        <pub-id pub-id-type="pmid">21615913</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B36">
      <label>36</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Baker</surname>
            <given-names>SC</given-names>
          </name>
          <name>
            <surname>Bauer</surname>
            <given-names>SR</given-names>
          </name>
          <name>
            <surname>Beyer</surname>
            <given-names>RP</given-names>
          </name>
          <name>
            <surname>Brenton</surname>
            <given-names>JD</given-names>
          </name>
          <name>
            <surname>Bromley</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Burrill</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Causton</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Conley</surname>
            <given-names>MP</given-names>
          </name>
          <name>
            <surname>Elespuru</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Fero</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The external RNA controls consortium: a progress report</article-title>
        <source>Nat. Methods</source>
        <year>2005</year>
        <volume>2</volume>
        <fpage>731</fpage>
        <lpage>734</lpage>
        <pub-id pub-id-type="pmid">16179916</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B37">
      <label>37</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Durbin</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Fast and accurate long-read alignment with Burrows-Wheeler transform</article-title>
        <source>Bioinformatics</source>
        <year>2010</year>
        <volume>26</volume>
        <fpage>589</fpage>
        <lpage>595</lpage>
        <pub-id pub-id-type="pmid">20080505</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B38">
      <label>38</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>DePristo</surname>
            <given-names>MA</given-names>
          </name>
          <name>
            <surname>Banks</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Poplin</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Garimella</surname>
            <given-names>KV</given-names>
          </name>
          <name>
            <surname>Maguire</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Hartl</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Philippakis</surname>
            <given-names>AA</given-names>
          </name>
          <name>
            <surname>del Angel</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Rivas</surname>
            <given-names>MA</given-names>
          </name>
          <name>
            <surname>Hanna</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A framework for variation discovery and genotyping using next-generation DNA sequencing data</article-title>
        <source>Nat. Genet.</source>
        <year>2011</year>
        <volume>43</volume>
        <fpage>491</fpage>
        <lpage>498</lpage>
        <pub-id pub-id-type="pmid">21478889</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B39">
      <label>39</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>McCall</surname>
            <given-names>MN</given-names>
          </name>
          <name>
            <surname>Irizarry</surname>
            <given-names>RA</given-names>
          </name>
        </person-group>
        <article-title>Consolidated strategy for the analysis of microarray spike-in data</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2008</year>
        <volume>36</volume>
        <fpage>e108</fpage>
        <pub-id pub-id-type="pmid">18676452</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B40">
      <label>40</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dunning</surname>
            <given-names>MJ</given-names>
          </name>
          <name>
            <surname>Ritchie</surname>
            <given-names>ME</given-names>
          </name>
          <name>
            <surname>Barbosa-Morais</surname>
            <given-names>NL</given-names>
          </name>
          <name>
            <surname>Tavare</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Lynch</surname>
            <given-names>AG</given-names>
          </name>
        </person-group>
        <article-title>Spike-in validation of an Illumina-specific variance-stabilizing transformation</article-title>
        <source>BMC Res. Notes</source>
        <year>2008</year>
        <volume>1</volume>
        <fpage>18</fpage>
        <pub-id pub-id-type="pmid">18710543</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B41">
      <label>41</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bolstad</surname>
            <given-names>BM</given-names>
          </name>
          <name>
            <surname>Irizarry</surname>
            <given-names>RA</given-names>
          </name>
          <name>
            <surname>Astrand</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Speed</surname>
            <given-names>TP</given-names>
          </name>
        </person-group>
        <article-title>A comparison of normalization methods for high density oligonucleotide array data based on variance and bias</article-title>
        <source>Bioinformatics</source>
        <year>2003</year>
        <volume>19</volume>
        <fpage>185</fpage>
        <lpage>193</lpage>
        <pub-id pub-id-type="pmid">12538238</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B42">
      <label>42</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Irizarry</surname>
            <given-names>RA</given-names>
          </name>
          <name>
            <surname>Hobbs</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Collin</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Beazer-Barclay</surname>
            <given-names>YD</given-names>
          </name>
          <name>
            <surname>Antonellis</surname>
            <given-names>KJ</given-names>
          </name>
          <name>
            <surname>Scherf</surname>
            <given-names>U</given-names>
          </name>
          <name>
            <surname>Speed</surname>
            <given-names>TP</given-names>
          </name>
        </person-group>
        <article-title>Exploration, normalization, and summaries of high density oligonucleotide array probe level data</article-title>
        <source>Biostatistics</source>
        <year>2003</year>
        <volume>4</volume>
        <fpage>249</fpage>
        <lpage>264</lpage>
        <pub-id pub-id-type="pmid">12925520</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B43">
      <label>43</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Shi</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Oshlack</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Smyth</surname>
            <given-names>GK</given-names>
          </name>
        </person-group>
        <article-title>Optimizing the noise versus bias trade-off for Illumina whole genome expression beadchips</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2010</year>
        <volume>38</volume>
        <fpage>e204</fpage>
        <pub-id pub-id-type="pmid">20929874</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B44">
      <label>44</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Altschul</surname>
            <given-names>SF</given-names>
          </name>
          <name>
            <surname>Gish</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Miller</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Myers</surname>
            <given-names>EW</given-names>
          </name>
          <name>
            <surname>Lipman</surname>
            <given-names>DJ</given-names>
          </name>
        </person-group>
        <article-title>Basic local alignment search tool</article-title>
        <source>J. Mol. Biol.</source>
        <year>1990</year>
        <volume>215</volume>
        <fpage>403</fpage>
        <lpage>410</lpage>
        <pub-id pub-id-type="pmid">2231712</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B45">
      <label>45</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Robinson</surname>
            <given-names>MD</given-names>
          </name>
          <name>
            <surname>Strbenac</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Stirzaker</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Statham</surname>
            <given-names>AL</given-names>
          </name>
          <name>
            <surname>Song</surname>
            <given-names>JZ</given-names>
          </name>
          <name>
            <surname>Speed</surname>
            <given-names>TP</given-names>
          </name>
          <name>
            <surname>Clark</surname>
            <given-names>SJ</given-names>
          </name>
        </person-group>
        <article-title>Copy-number-aware differential analysis of quantitative DNA sequencing data</article-title>
        <source>Genome Res.</source>
        <year>2012</year>
        <volume>22</volume>
        <fpage>2489</fpage>
        <lpage>2496</lpage>
        <pub-id pub-id-type="pmid">22879430</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B46">
      <label>46</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhao</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Glazov</surname>
            <given-names>EA</given-names>
          </name>
          <name>
            <surname>Pattabiraman</surname>
            <given-names>DR</given-names>
          </name>
          <name>
            <surname>Al-Owaidi</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Brown</surname>
            <given-names>MA</given-names>
          </name>
          <name>
            <surname>Leo</surname>
            <given-names>PJ</given-names>
          </name>
          <name>
            <surname>Gonda</surname>
            <given-names>TJ</given-names>
          </name>
        </person-group>
        <article-title>Integrated genome-wide chromatin occupancy and expression analyses identify key myeloid pro-differentiation transcription factors repressed by Myb</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2011</year>
        <volume>39</volume>
        <fpage>4664</fpage>
        <lpage>4679</lpage>
        <pub-id pub-id-type="pmid">21317192</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B47">
      <label>47</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Vrba</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Garbe</surname>
            <given-names>JC</given-names>
          </name>
          <name>
            <surname>Stampfer</surname>
            <given-names>MR</given-names>
          </name>
          <name>
            <surname>Futscher</surname>
            <given-names>BW</given-names>
          </name>
        </person-group>
        <article-title>Epigenetic regulation of normal human mammary cell type-specific miRNAs</article-title>
        <source>Genome Res.</source>
        <year>2011</year>
        <volume>21</volume>
        <fpage>2026</fpage>
        <lpage>2037</lpage>
        <pub-id pub-id-type="pmid">21873453</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B48">
      <label>48</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>O’Connell</surname>
            <given-names>RJ</given-names>
          </name>
          <name>
            <surname>Thon</surname>
            <given-names>MR</given-names>
          </name>
          <name>
            <surname>Hacquard</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Amyotte</surname>
            <given-names>SG</given-names>
          </name>
          <name>
            <surname>Kleemann</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Torres</surname>
            <given-names>MF</given-names>
          </name>
          <name>
            <surname>Damm</surname>
            <given-names>U</given-names>
          </name>
          <name>
            <surname>Buiate</surname>
            <given-names>EA</given-names>
          </name>
          <name>
            <surname>Epstein</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Alkan</surname>
            <given-names>N</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Lifestyle transitions in plant pathogenic Colletotrichum fungi deciphered by genome and transcriptome analyses</article-title>
        <source>Nat. Genet.</source>
        <year>2012</year>
        <volume>44</volume>
        <fpage>1060</fpage>
        <lpage>1065</lpage>
        <pub-id pub-id-type="pmid">22885923</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B49">
      <label>49</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pal</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Bouras</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Shi</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Vaillant</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Sheridan</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Fu</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Breslin</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Jiang</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Ritchie</surname>
            <given-names>ME</given-names>
          </name>
          <name>
            <surname>Young</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Ezh2 coordinates global changes in the mammary epigenome induced by hormonal cues and controls mammary progenitor activity</article-title>
        <source>Cell Rep.</source>
        <year>2012</year>
        <volume>3</volume>
        <fpage>411</fpage>
        <lpage>426</lpage>
        <pub-id pub-id-type="pmid">23375371</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B50">
      <label>50</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Robinson</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>McCarthy</surname>
            <given-names>DJ</given-names>
          </name>
          <name>
            <surname>Smyth</surname>
            <given-names>GK</given-names>
          </name>
        </person-group>
        <article-title>edgeR: a Bioconductor package for differential expression analysis of digital gene expression data</article-title>
        <source>Bioinformatics</source>
        <year>2010</year>
        <volume>26</volume>
        <fpage>139</fpage>
        <lpage>140</lpage>
        <pub-id pub-id-type="pmid">19910308</pub-id>
      </element-citation>
    </ref>
    <ref id="gkt214-B51">
      <label>51</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hardcastle</surname>
            <given-names>TJ</given-names>
          </name>
          <name>
            <surname>Kelly</surname>
            <given-names>KA</given-names>
          </name>
        </person-group>
        <article-title>bayseq: empirical Bayesian methods for identifying differential expression in sequence count data</article-title>
        <source>BMC Bioinformatics</source>
        <year>2010</year>
        <volume>11</volume>
        <fpage>422</fpage>
        <pub-id pub-id-type="pmid">20698981</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

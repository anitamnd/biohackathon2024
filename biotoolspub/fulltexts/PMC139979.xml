<?DTDIdentifier.IdentifierValue article.dtd?>
<?DTDIdentifier.IdentifierType system?>
<?SourceDTD.DTDName article.dtd?>
<?SourceDTD.Version 1.0?>
<?ConverterInfo.XSLTName bmc2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">139979</article-id>
    <article-id pub-id-type="publisher-id">1471-2105-3-40</article-id>
    <article-id pub-id-type="pmid">12493080</article-id>
    <article-id pub-id-type="doi">10.1186/1471-2105-3-40</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Methodology article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>ORFer – retrieval of protein sequences and open reading frames from GenBank and storage into relational databases or text files</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes" id="A1">
        <name>
          <surname>Büssow</surname>
          <given-names>Konrad</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>buessow@molgen.mpg.de</email>
      </contrib>
      <contrib contrib-type="author" id="A2">
        <name>
          <surname>Hoffmann</surname>
          <given-names>Steve</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>Hoffmann@stud-mailer.uni-marburg.de</email>
      </contrib>
      <contrib contrib-type="author" id="A3">
        <name>
          <surname>Sievert</surname>
          <given-names>Volker</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>sievert@molgen.mpg.de</email>
      </contrib>
    </contrib-group>
    <aff id="I1"><label>1</label>Protein Structure Factory, Max Planck Institute of Molecular Genetics, Heubnerweg 6, 14059 Berlin, Germany</aff>
    <pub-date pub-type="collection">
      <year>2002</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>19</day>
      <month>12</month>
      <year>2002</year>
    </pub-date>
    <volume>3</volume>
    <fpage>40</fpage>
    <lpage>40</lpage>
    <history>
      <date date-type="received">
        <day>20</day>
        <month>9</month>
        <year>2002</year>
      </date>
      <date date-type="accepted">
        <day>19</day>
        <month>12</month>
        <year>2002</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright ©2002 Büssow et al; licensee BioMed Central Ltd. This is an Open Access article: verbatim copying and redistribution of this article are permitted in all media for any purpose, provided this notice is preserved along with the article's original URL.</copyright-statement>
      <copyright-year>2002</copyright-year>
      <copyright-holder>Büssow et al; licensee BioMed Central Ltd. This is an Open Access article: verbatim copying and redistribution of this article are permitted in all media for any purpose, provided this notice is preserved along with the article's original URL.</copyright-holder>
    </permissions>
    <self-uri xlink:href="http://www.biomedcentral.com/1471-2105/3/40"/>
    <abstract>
      <sec>
        <title>Background</title>
        <p>Functional genomics involves the parallel experimentation with large sets of proteins. This requires management of large sets of open reading frames as a prerequisite of the cloning and recombinant expression of these proteins.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>A Java program was developed for retrieval of protein and nucleic acid sequences and annotations from NCBI GenBank, using the XML sequence format. Annotations retrieved by ORFer include sequence name, organism and also the completeness of the sequence. The program has a graphical user interface, although it can be used in a non-interactive mode. For protein sequences, the program also extracts the open reading frame sequence, if available, and checks its correct translation. ORFer accepts user input in the form of single or lists of GenBank GI identifiers or accession numbers. It can be used to extract complete sets of open reading frames and protein sequences from any kind of GenBank sequence entry, including complete genomes or chromosomes. Sequences are either stored with their features in a relational database or can be exported as text files in Fasta or tabulator delimited format. The ORFer program is freely available at <ext-link ext-link-type="uri" xlink:href="http://www.proteinstrukturfabrik.de/orfer">http://www.proteinstrukturfabrik.de/orfer</ext-link>.</p>
      </sec>
      <sec>
        <title>Conclusion</title>
        <p>The ORFer program allows for fast retrieval of DNA sequences, protein sequences and their open reading frames and sequence annotations from GenBank. Furthermore, storage of sequences and features in a relational database is supported. Such a database can supplement a laboratory information system (LIMS) with appropriate sequence information.</p>
      </sec>
    </abstract>
  </article-meta>
</front>
<body>
  <sec>
    <title>Background</title>
    <p>The functional characterization of large sets of genes includes the characterization of the encoded proteins. Structural genomics aims at determining structures of large sets of proteins that will represent all domain folds present in the biosphere [<xref ref-type="bibr" rid="B1">1</xref>]. The cloning and expression of large sets of open reading frames and proteins requires the management and analysis of significant amounts of data. In the Protein Structure Factory, a collaborative Structural Genomics project <ext-link ext-link-type="uri" xlink:href="http://www.proteinstrukturfabrik.de">http://www.proteinstrukturfabrik.de</ext-link>, a relational database system is used to store sequence information and experimental data on proteins chosen as targets for structure determination. These targets consist of human protein sequence entries of the GenBank protein database. Sequences and annotations of the target proteins are integrated in the database. The ORFer program has been developed to accomplish the input of large sets of protein sequence entries of the GenBank database <ext-link ext-link-type="uri" xlink:href="http://www.ncbi.nlm.nih.gov">http://www.ncbi.nlm.nih.gov</ext-link>, together with the corresponding coding DNA sequences, into our relational database. The open reading frame sequences of the target proteins are subsequently used to automatically design PCR primers and proceed with the expression of the target proteins.</p>
    <p>ORFer is able to extract complete sets of open reading frames (ORFs) and protein sequences from any GenBank sequence entry, including complete genomes or chromosomes.</p>
    <p>The tabular data that ORFer generates is easily accessible to statistical calculation, e.g. to determine the distribution of sequence length or the proportion of incomplete sequence entries in larger sets of sequences.</p>
    <sec>
      <title>Completeness of GenBank database entries</title>
      <p>ORFer extracts information on the "completeness" of ORFs from GenBank. The term "completeness" in GenBank sequence entries refers to a biomolecule, a clone, or a biological entity as gene, transcript or open reading frame. A complete ORF ranges from the initiation to the stop codon.</p>
    </sec>
    <sec>
      <title>Alternative software</title>
      <p>Open reading frames of single protein sequences can also be retrieved directly from the GenBank web site by following the appropriate links in the HTML display of GenBank protein sequences.</p>
      <p>Functionality similar to ORFer is offered by the program coderet of the Emboss package <ext-link ext-link-type="uri" xlink:href="http://www.emboss.org">http://www.emboss.org</ext-link>. Coderet extracts transcript, open reading frame and protein sequences from GenBank DNA sequence entries. The current version of ORFer extracts ORF and protein sequences, but not transcript sequences. Coderet does not interpret GenBank protein sequence entries. Installation of the Emboss package on a local UNIX server is required to run coderet; ORFer is a stand-alone application, but can easily be integrated into LIMS applications using its database interface. The Emboss package was originally designed for command-line use, but graphical interfaces are being developed, e.g. the Jemboss interface. Coderet is fully integrated with the Emboss package. ORFer can save sequences in Fasta format, the default sequence format of the Emboss package.</p>
    </sec>
    <sec>
      <title>GenBank XML sequence format</title>
      <p>Sequences can be retrieved from GenBank in a variety of formats, including the XML <ext-link ext-link-type="uri" xlink:href="http://www.w3.org/XML/">http://www.w3.org/XML/</ext-link> and ASN.1 formats. Thereby sequence annotations are stored in an structured, tree-like fashion which allows for efficient information retrieval using a parsing process. Both formats share the same data tree structure, and a description of the ASN.1 format also applies to the structure of the XML files [<xref ref-type="bibr" rid="B2">2</xref>], <ext-link ext-link-type="uri" xlink:href="http://www.ncbi.nlm.nih.gov/IEB/ToolBox/XML/ncbixml.txt">http://www.ncbi.nlm.nih.gov/IEB/ToolBox/XML/ncbixml.txt</ext-link>.</p>
      <p>Single GenBank XML files often contain sets of sequences. In the case of DNA sequences containing ORFs that encode protein sequences, these DNA and protein sequences are usually included in the same XML file. Sets of DNA sequences, e.g. the exon sequences of a gene, are also combined in single XML files.</p>
    </sec>
  </sec>
  <sec>
    <title>Results and Discussion</title>
    <p>ORFer was developed to retrieve DNA sequences, protein sequences and their open reading frames and sequence annotations from GenBank and to store them in a relational database. We choose to use the XML sequence format of GenBank, since public domain XML parsers are available for Java, and open reading frames are stored in standard manner in the GenBank XML files. The XML files retrieved for protein sequences usually contain the encoding DNA sequence.</p>
    <p>Only GenBank sequence can be read by the current version of ORFer. Since GenBank includes protein sequences of PDB and SwissProt, and is synchronised to the EMBL database, this might not impose a serious restriction.</p>
    <p>The Ensembl genome database [<xref ref-type="bibr" rid="B3">3</xref>] offers a publicly available mySQL database server, and therefore XML or flat file parsing software is not required to extract information from Ensembl to a local database. Instead, protein and open reading frame sequences and annotations can be directly obtained by suitable SQL queries.</p>
    <p>ORFer retrieves sequence entries by either their GenBank molecular biology database identifier (GI) or accession numbers. The user supplies these identifiers, either interactively or as text files containing lists of identifiers.</p>
    <p>Sequences are stored with their features in a relational database (mySQL, Oracle or Microsoft Access) or can be exported as text files in Fasta or tab-delimited format.</p>
    <p>ORFer can be used to visually inspect hundreds of protein or DNA sequence entries in a tabular view. Another option is to display all sequences found in a single XML file, e.g. all open reading frames contained in a genomic DNA sequence entry (Figure <xref ref-type="fig" rid="F1">1</xref>).</p>
    <fig id="F1" position="float">
      <label>Figure 1</label>
      <caption>
        <p>Screen shot of the ORFer application. A search for GI identifier 4337095 retrieves all open reading frames and encoded proteins within this sequence entry. Table view of sequences retrieved from GenBank. A set of DNA and protein sequences is shown. For the protein sequences, the DNA sequence column contains the open reading frame sequence.</p>
      </caption>
      <graphic xlink:href="1471-2105-3-40-1"/>
    </fig>
    <sec>
      <title>Database schema</title>
      <p>A uniform database schema was implemented for the DBMS mySQL, Oracle8 or greater and Microsoft Access 97. The database has a main table GENBANKENTRIES, and three associated tables for species information and sequence data (Figure <xref ref-type="fig" rid="F2">2</xref>). The GENBANKENTRIES table contains fields for accession number, GI number, sequence name and description, sequence length etc.</p>
      <fig id="F2" position="float">
        <label>Figure 2</label>
        <caption>
          <p>Relational database schema. The database has a main table GENBANKENTRIES, and three associated tables for species information and sequence data.</p>
        </caption>
        <graphic xlink:href="1471-2105-3-40-2"/>
      </fig>
    </sec>
    <sec>
      <title>XML parsing: protein and gene names and species</title>
      <p>Each sequence in a GenBank XML file is represented by an XML element named Bioseq. GI identifier and accession number are found in the Seq-id_gi and Textseq-id_accession elements, respectively. The organism's species and genus are stored in the BinomialOrgName_species and BinomialOrgName_genus elements. For organisms, which do not have a species and genus name, e.g. viruses, the element Org-ref_taxname is used. In the local database, species are stored non-redundantly in the SPECIES table.</p>
      <p>ORFer will read the protein or gene name and description from the elements Prot-ref_name_E and Prot-ref_desc, if available, or from a Seqdesc_title element within the respective Bioseq element or finally from a Seqdesc_title element occurring outside the Bioseq elements, if nothing else is available.</p>
    </sec>
    <sec>
      <title>XML parsing: sequence completeness</title>
      <p>GenBank sequence entries that are known to be complete or incomplete contain MolInfo_completeness elements with an attribute named value. This attribute can have various values, e.g. "no-left" for sequences that are incomplete in the upstream direction, or "complete" for complete sequences. In addition, a seq-feat element representing a translation may contain the element Seq-feat_partial with the attribute value="true", which signifies that a translation product sequence is incomplete.</p>
      <p>ORFer looks for both kind of elements to determine whether a sequence entry has been annotated as complete or incomplete. In the "Complete" column of the ORFer Search Result window, a "+" is displayed for complete sequences and a "-" for incomplete sequences. The COMPLETECDS field in the GENBANKENTRIES table of the relational database schema contains either the values 0: "sequence known to be incomplete", or 1: "unknown" or 2: "known to be complete".</p>
    </sec>
    <sec>
      <title>XML parsing: open reading frames</title>
      <p>To obtain the nucleotide ORF of a protein sequence from a GenBank XML file, the content of Seq-feat elements, which occur in Bioseq_annot or Bioseq-set_annot elements, have to be interpreted. Seq-feat elements, that contain a Seq-feat_product element, represent a translation product of a DNA sequence. The Seq-interval element contains the nucleotide positions of the ORF that have to be combined to obtain the protein's coding sequence.</p>
      <p>ORFer only displays and stores ORFs that translate to the protein sequence, starting from the first base pair. If the translation product of the retrieved ORF is not identical to the original protein sequence, two more translations are compared upon introducing a frame-shift. If frame-shifts were introduced to get a match, the sequence entry will be labelled with "ORF was truncated to match protein" and the value 2 will be stored in the field ORFER_PROBLEM in the table GENBANKENTRIES. If none of the three translation is identical to the original protein sequence, the value 1 will be stored in this field. If translation of the sequence fails, e.g. because it contains base pair symbols other than A, C, G, T, the value 3 will be stored. No ORF sequence will be made available by the current version of ORFer, if either translation failed or if the ORF does not translate to the protein sequence.</p>
      <p>GenBank contains protein sequences which are annotated to originate from larger precursor proteins. ORFer does not present nucleotide ORFs encoding these protein sequences, but labels them as "Product of larger precursor protein". The value 4 will be stored in the field ORFER_PROBLEM in the table GENBANKENTRIES of a local database.</p>
    </sec>
    <sec>
      <title>Non-interactive mode</title>
      <p>Since ORFer stores all retrieved sequences in memory, it cannot parse unlimited numbers of sequences per session. For parsing more than about 1,000 sequences, it is recommended to use the non-interactive mode of ORFer, which automatically stores the retrieved sequences in a local database and Fasta text files, but does not keep them in memory.</p>
    </sec>
    <sec>
      <title>Retrieval of sets of protein sequences</title>
      <p>To test the ORFer application, a set of GI identifiers corresponding to human proteins where retrieved from GenBank using the NCBI Entrez query: "Homo sapiens" [Organism] AND gene_in_genomic [PROP] AND srcdb_genbank [PROP]. The NCBI Entrez query returned 59,274 human protein sequences from the GenBank protein database (June 2002), of which 10,000 were randomly selected for testing. The non-interactive mode of ORFer was used to avoid memory overflow due to the large number of sequences. In the test run, XML files where retrieved for all 10,000 GI identifiers from NCBI. 9,921 sequences were successfully parsed and a protein sequence could be extracted from the XML file. These sequences were entered into a mySQL database. For the remaining 79 sequences, either no protein sequence was found, or the Xerces XML SAX parser reported an error in the structure of the XML file. A tabulator delimited text file of the ORFer output for 1,000 of the 10,000 sequences can be downloaded; see <xref ref-type="supplementary-material" rid="S1">additional file 1</xref>.</p>
      <p>9,135 of the 9,921 protein sequences were entered into the local database together with their ORF sequence, while 786 sequences were entered without ORF sequence.</p>
      <p>No ORF was found in the XML files of 344 of these 786 sequences. These sequences comprise, for example, peptide sequences, for which no ORF is available at GenBank.</p>
      <p>For the remaining 442 entries, ORFs either could not be translated by ORFer (180 sequences), or translated to a different sequence than the protein sequence retrieved from GenBank (262 sequences). It was found that the first group of ORFs contained ambiguity nucleotide code, while the latter group of sequences is lacking the last base pair of the last codon. The last amino acid was inferred from the first two base pairs of this codon to generate the GenBank protein sequence.</p>
      <p>ORFer uses a BioJava <ext-link ext-link-type="uri" xlink:href="http://www.biojava.org">http://www.biojava.org</ext-link> routine for translation of nucleotide sequences. The current version of this routine accepts sequences composed of A, C, G, T only, and will not translate two base pairs at the end of an ORF to an amino acid. If BioJava releases enabling such translations become available, they will be integrated into ORFer.</p>
      <p>The proportion of sequence entries tagged as complete and incomplete was determined in the set of 9,921 sequences that ORFer was able to read from GenBank, including protein sequences for which no ORF was determined by ORFer. The proportion of incomplete sequences in this set of protein sequences was found to be quite high, 41.6%. For 38.4%, no information on completeness was found in the annotation. 20.0% of sequences where tagged as complete in GenBank.</p>
    </sec>
    <sec>
      <title>Retrieval of protein sequences annotated in genomic sequence entries</title>
      <p>ORFer can retrieve complete sets of ORFs and protein sequences annotated in GenBank genomic sequence entries. GenBank sequence entries of cosmid and BAC clones, chromosomes or genomes contain annotation of genes and corresponding ORFs and protein sequences. ORFer can be set to "retrieve all sequences in the XML file". In this mode, when a GI identifier of a genomic sequence is entered, ORFer will present all protein and ORFs found in the respective sequence entry.</p>
      <p>A GenBank sequence entry representing a very large sequence, e.g. a complete chromosome, may contain references to smaller genomic sequence entries rather than a long DNA sequence string. ORFer will try to follow these references and retrieve the ORFs and protein sequences included in these smaller sequence entries. Alternatively, the user may download from the NCBI Entrez web site a list of GI identifiers of all the genomic sequences that make up, for example, a chromosome and use this list as input for ORFer.</p>
      <p>ORFer was successfully tested with the following genomic sequence entries:</p>
      <p>• Bacillus subtilis complete genome, GI 16077068, 4.2 Mbp, 4,112 proteins</p>
      <p>• Anopheles gambiae genomic sequence, GI 19612245, 16.4 Mbp, 832 proteins</p>
      <p>• Human herpesvirus 5, GI 9625671, 229 kbp, 204 proteins</p>
    </sec>
  </sec>
  <sec>
    <title>Conclusions</title>
    <p>The ORFer program is an example for parsing the NCBI XML sequence format using the Java programming language. Retrieval of protein sequences with corresponding ORFs was apparently successful for sequences that contain the necessary information. For 91% of human protein sequences in GenBank, ORFer could extract an open reading frame from XML files.</p>
    <p>The main benefits of the program are:</p>
    <p>• Visual inspection of hundreds of protein or DNA sequence entries in a tabular view.</p>
    <p>• Retrieval of ORFs of whole genomes or chromosomes.</p>
    <p>• Table view of all proteins annotated in a single DNA sequence entry</p>
    <p>• Import of large numbers of sequences from GenBank into a local relational database system</p>
    <p>• Export to Fasta sequence files or tab delimited text files</p>
    <p>ORFer is a flexible program – it can write data to three different kinds of relational databases, and also to text files in Fasta and tabulator delimited format. It will hopefully prove useful for molecular biologists dealing with larger numbers of DNA or protein sequence.</p>
  </sec>
  <sec sec-type="materials|methods">
    <title>Materials and Methods</title>
    <p>ORFer is freely available from the web site <ext-link ext-link-type="uri" xlink:href="http://www.proteinstrukturfabrik.de/orfer">http://www.proteinstrukturfabrik.de/orfer</ext-link> and can be executed via Java Web Start on Windows, Solaris, Linux and Macintosh OS X. ORFer can be run as graphical user interface application or from the command line (Figure <xref ref-type="fig" rid="F1">1</xref>).</p>
    <p>ORFer was entirely written in Java using Borland JBuilder4. The Program uses BioJava libraries <ext-link ext-link-type="uri" xlink:href="http://www.biojava.org">http://www.biojava.org</ext-link> for translation of DNA into protein sequences and for writing of Fasta format sequence files. It includes JDBC drivers of Oracle and Sun and the MM MySQL drivers (Mark Matthews). XML parsing is done with Apache Xerces <ext-link ext-link-type="uri" xlink:href="http://xml.apache.org">http://xml.apache.org</ext-link>. SQuirrel SQL libraries were used for the copy pop-up menu <ext-link ext-link-type="uri" xlink:href="http://squirrel-sql.sourceforge.net/">http://squirrel-sql.sourceforge.net/</ext-link>. A modified version of the TableSorter class of Philip Milne was included for table sorting.</p>
  </sec>
  <sec>
    <title>Authors' contributions</title>
    <p>SH wrote a first version of the ORFer program and KB wrote the final version. SH and KB conceived of the program. VS and KB designed and implemented the databases.</p>
    <p>All authors read and approved the final manuscript.</p>
  </sec>
  <sec>
    <title>List of abbreviations</title>
    <p>ASN: Abstract Syntax Notation</p>
    <p>DBMS: DataBase Management System</p>
    <p>JDBC: Java Data Base Connectivity</p>
    <p>kbp: Kilo base pairs</p>
    <p>Mbp: Mega base pairs</p>
    <p>NCBI: National Center for Biotechnology Information</p>
    <p>ORF: Open Reading Frame</p>
    <p>PCR: Polymerase Chain Reaction</p>
    <p>SQL: Structured Query Language</p>
    <p>XML: eXtensible Markup Language</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="S1">
      <caption>
        <title>Additional File 1</title>
        <p>ORFer output for 1,000 random human protein sequences as tab-delimited text file.</p>
      </caption>
      <media xlink:href="1471-2105-3-40-S1.txt" mimetype="text" mime-subtype="plain">
        <caption>
          <p>Click here for file</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <sec>
    <title>Acknowledgements</title>
    <p>We would like to thank Dr. Grant Langdon for critical reading of the manuscript, Robert Büssow for inspection of the ORFer source code and Prof. Hans Lehrach for his enduring support. The Protein Structure Factory is funded by the German Federal Ministry of Education and Research (BMBF).</p>
  </sec>
  <ref-list>
    <ref id="B1">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Heinemann</surname>
          <given-names>U</given-names>
        </name>
        <name>
          <surname>Frevert</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Hofmann</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>Illing</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Maurer</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Oschkinat</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Saenger</surname>
          <given-names>W</given-names>
        </name>
        <article-title>An integrated approach to structural genomics.</article-title>
        <source>Progress in Biophysics &amp; Molecular Biology</source>
        <year>2000</year>
        <volume>73</volume>
        <issue>5</issue>
        <fpage>347</fpage>
        <lpage>362</lpage>
        <pub-id pub-id-type="doi">10.1016/S0079-6107(00)00009-2</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B2">
      <mixed-citation publication-type="other">
        <name>
          <surname>Michalickova</surname>
          <given-names>K</given-names>
        </name>
        <article-title>Biological sequences and the NCBI toolkit, flatfile I/O and SeqHound API</article-title>
        <ext-link ext-link-type="uri" xlink:href="http://bioinfo.mshri.on.ca/tkcourse/session8/1024/">http://bioinfo.mshri.on.ca/tkcourse/session8/1024/</ext-link>
      </mixed-citation>
    </ref>
    <ref id="B3">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Hubbard</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Barker</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Birney</surname>
          <given-names>E</given-names>
        </name>
        <name>
          <surname>Cameron</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Chen</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Clark</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Cox</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Cuff</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Curwen</surname>
          <given-names>V</given-names>
        </name>
        <name>
          <surname>Down</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Durbin</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Eyras</surname>
          <given-names>E</given-names>
        </name>
        <name>
          <surname>Gilbert</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Hammond</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Huminiecki</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Kasprzyk</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Lehvaslaiho</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Lijnzaad</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Melsopp</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Mongin</surname>
          <given-names>E</given-names>
        </name>
        <name>
          <surname>Pettett</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Pocock</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Potter</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Rust</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Schmidt</surname>
          <given-names>E</given-names>
        </name>
        <name>
          <surname>Searle</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Slater</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Smith</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Spooner</surname>
          <given-names>W</given-names>
        </name>
        <name>
          <surname>Stabenau</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Stalker</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Stupka</surname>
          <given-names>E</given-names>
        </name>
        <name>
          <surname>Ureta-Vidal</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Vastrik</surname>
          <given-names>I</given-names>
        </name>
        <name>
          <surname>Clamp</surname>
          <given-names>M</given-names>
        </name>
        <article-title>The Ensembl genome database project.</article-title>
        <source>Nucleic Acids Research</source>
        <year>2002</year>
        <volume>30</volume>
        <fpage>38</fpage>
        <lpage>41</lpage>
        <pub-id pub-id-type="pmid">11752248</pub-id>
        <pub-id pub-id-type="doi">10.1093/nar/30.1.38</pub-id>
      </mixed-citation>
    </ref>
  </ref-list>
</back>

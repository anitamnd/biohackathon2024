<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Gigascience</journal-id>
    <journal-id journal-id-type="iso-abbrev">Gigascience</journal-id>
    <journal-id journal-id-type="publisher-id">gigascience</journal-id>
    <journal-title-group>
      <journal-title>GigaScience</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2047-217X</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">5632288</article-id>
    <article-id pub-id-type="doi">10.1093/gigascience/gix078</article-id>
    <article-id pub-id-type="publisher-id">gix078</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Technical Note</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>fastBMA: scalable network inference and transitive reduction</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Hung</surname>
          <given-names>Ling-Hong</given-names>
        </name>
        <xref ref-type="aff" rid="aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Shi</surname>
          <given-names>Kaiyuan</given-names>
        </name>
        <xref ref-type="aff" rid="aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Wu</surname>
          <given-names>Migao</given-names>
        </name>
        <xref ref-type="aff" rid="aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Young</surname>
          <given-names>William Chad</given-names>
        </name>
        <xref ref-type="aff" rid="aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Raftery</surname>
          <given-names>Adrian E.</given-names>
        </name>
        <xref ref-type="aff" rid="aff2">2</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Yeung</surname>
          <given-names>Ka Yee</given-names>
        </name>
        <!--<email>kayee@uw.edu</email>-->
        <xref ref-type="aff" rid="aff1">1</xref>
        <xref ref-type="corresp" rid="cor1"/>
      </contrib>
    </contrib-group>
    <aff id="aff1"><label>1</label>Institute of Technology, University of Washington, Tacoma Campus, Box 358426, 1900 Commerce Street, Tacoma, WA 98402-3100, U.S.A.</aff>
    <aff id="aff2"><label>2</label>Department of Statistics, University of Washington, Box 354322, Seattle, WA 98195-4322, U.S.A.</aff>
    <author-notes>
      <corresp id="cor1"><label>*</label><bold>Correspondence address.</bold> Ka Yee Yeung, Institute of Technology, University of Washington, Tacoma Campus, Box 358426, 1900 Commerce Street, Tacoma, WA 98402-3100, U.S.A.; Tel: 253-692-4924; Fax: 253-692-5862; E-mail: <email>kayee@uw.edu</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <month>10</month>
      <year>2017</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2017-08-22">
      <day>22</day>
      <month>8</month>
      <year>2017</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>22</day>
      <month>8</month>
      <year>2017</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. -->
    <volume>6</volume>
    <issue>10</issue>
    <fpage>1</fpage>
    <lpage>10</lpage>
    <history>
      <date date-type="accepted">
        <day>10</day>
        <month>8</month>
        <year>2017</year>
      </date>
      <date date-type="received">
        <day>12</day>
        <month>1</month>
        <year>2017</year>
      </date>
      <date date-type="rev-recd">
        <day>10</day>
        <month>6</month>
        <year>2017</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Authors 2017. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2017</copyright-year>
      <license license-type="cc-by" xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<uri xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</uri>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="gix078.pdf"/>
    <abstract>
      <title>Abstract</title>
      <p>Inferring genetic networks from genome-wide expression data is extremely demanding computationally. We have developed fastBMA, a distributed, parallel, and scalable implementation of Bayesian model averaging (BMA) for this purpose. fastBMA also includes a computationally efficient module for eliminating redundant indirect edges in the network by mapping the transitive reduction to an easily solved shortest-path problem. We evaluated the performance of fastBMA on synthetic data and experimental genome-wide time series yeast and human datasets. When using a single CPU core, fastBMA is up to 100 times faster than the next fastest method, LASSO, with increased accuracy. It is a memory-efficient, parallel, and distributed application that scales to human genome-wide expression data. A 10 000-gene regulation network can be obtained in a matter of hours using a 32-core cloud cluster (2 nodes of 16 cores). fastBMA is a significant improvement over its predecessor ScanBMA. It is more accurate and orders of magnitude faster than other fast network inference methods such as the 1 based on LASSO. The improved scalability allows it to calculate networks from genome scale data in a reasonable time frame. The transitive reduction method can improve accuracy in denser networks. fastBMA is available as code (M.I.T. license) from GitHub (<ext-link ext-link-type="uri" xlink:href="https://github.com/lhhunghimself/fastBMA">https://github.com/lhhunghimself/fastBMA</ext-link>), as part of the updated networkBMA Bioconductor package (<ext-link ext-link-type="uri" xlink:href="https://www.bioconductor.org/packages/release/bioc/html/networkBMA.html">https://www.bioconductor.org/packages/release/bioc/html/networkBMA.html</ext-link>) and as ready-to-deploy Docker images (<ext-link ext-link-type="uri" xlink:href="https://hub.docker.com/r/biodepot/fastbma/">https://hub.docker.com/r/biodepot/fastbma/</ext-link>).</p>
    </abstract>
    <kwd-group kwd-group-type="keywords">
      <kwd>network inference</kwd>
      <kwd>Bayesian models</kwd>
      <kwd>time series</kwd>
      <kwd>distributed computing</kwd>
      <kwd>gene regulation</kwd>
      <kwd>Cholesky decomposition</kwd>
      <kwd>Dijkstra's algorithm</kwd>
      <kwd>Bloom filter</kwd>
      <kwd>Docker container</kwd>
      <kwd>optimized software findings</kwd>
    </kwd-group>
    <counts>
      <page-count count="10"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec id="sec1">
    <title>Background</title>
    <p>Genetic regulatory networks capture the complex relationships between biological entities, which help us to identify putative driver and passenger genes in various diseases [<xref rid="bib1" ref-type="bibr">1</xref>, <xref rid="bib2" ref-type="bibr">2</xref>]. Many approaches have been proposed to infer genetic networks using gene expression data, for example, co-expression networks [<xref rid="bib3" ref-type="bibr">3</xref>], mutual information-based methods [<xref rid="bib4" ref-type="bibr">4</xref>, <xref rid="bib5" ref-type="bibr">5</xref>] Bayesian networks [<xref rid="bib6" ref-type="bibr">6</xref>–<xref rid="bib8" ref-type="bibr">8</xref>], ordinary differential equations [<xref rid="bib9" ref-type="bibr">9</xref>, <xref rid="bib10" ref-type="bibr">10</xref>], regression-based methods [<xref rid="bib11" ref-type="bibr">11</xref>–<xref rid="bib15" ref-type="bibr">15</xref>], and ensemble methods [<xref rid="bib16" ref-type="bibr">16</xref>]. In addition, methods have been proposed to infer gene networks using multiple data sources (e.g., [<xref rid="bib17" ref-type="bibr">17</xref>–<xref rid="bib20" ref-type="bibr">20</xref>]). We have previously described ScanBMA [<xref rid="bib14" ref-type="bibr">14</xref>], an implementation of Bayesian model averaging (BMA) [<xref rid="bib21" ref-type="bibr">21</xref>] for inferring regulatory networks. ScanBMA is available from the “networkBMA” Bioconductor package [<xref rid="bib22" ref-type="bibr">22</xref>], written in R and C++. It has been shown that ScanBMA generates compact accurate networks that can incorporate prior knowledge.</p>
    <p>In this paper, we present fastBMA, which is completely written in C++ and uses more efficient and scalable regression and hashing methods. The algorithmic improvements increase the speed by a factor of 30 on smaller sets (Fig. <xref ref-type="fig" rid="fig4">4</xref>A), with greater increases observed on larger sets due to improved scalability (Fig. <xref ref-type="fig" rid="fig4">4</xref>B). fastBMA is parallelized using both OpenMP and MPI, allowing for further increases in speed when using multiple cores and processors. Although fastBMA uses the same core methodology as ScanBMA, the increased scalability allows for more thorough sampling of the search space to increase accuracy. The new probabilistic hashing procedure used by fastBMA is faster and utilizes 100 000 times less memory when analyzing large numbers of variables (see the fastBMA Methodology section). This allows fastBMA to operate on genome-scale datasets without limiting the possible regulators of a given gene to a smaller subset.</p>
    <p>A final feature of fastBMA is the implementation of a new method for eliminating redundant indirect edges in the network. The post-processing method can also be used separately to eliminate redundant edges from networks inferred by other methods. The code is open source (M.I.T. license). fastBMA is available from GitHub [<xref rid="bib23" ref-type="bibr">23</xref>], in R as part of the networkBMA package [<xref rid="bib24" ref-type="bibr">24</xref>], and as Docker images [<xref rid="bib25" ref-type="bibr">25</xref>]. The Docker containers include all the supporting dependencies necessary for MPI and make it much easier to run fastBMA on a local or cloud cluster.</p>
    <sec id="sec1-1">
      <title>Bayesian model averaging</title>
      <p>We can formulate gene network inference as a variable selection problem where the dependent variable (target gene expression) is modeled as a function of a set of predictor variables (regulatory gene expression). A regression model can be formed by fitting equation (<xref ref-type="disp-formula" rid="equ1">1</xref>).
<disp-formula id="equ1"><label>(1)</label><tex-math id="M1">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}\begin{equation*} {X_i} = {\beta _0}{\rm{\ }} + \mathop \sum \limits_{h \in H} {\beta _{h,i}}{X_h} + {\epsilon _{i,}}, \end{equation*}\end{document}</tex-math></disp-formula>where <italic>X<sub>i</sub></italic>, is the expression level of gene i, <italic>H</italic> is the set of regulators for gene i in a candidate model, β'<italic>s</italic> are the regression coefficients, and <inline-formula><tex-math id="M2">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\epsilon _{i}N\begin{array}{c} {iid}\\ \sim \end{array}( {0,\sigma _\epsilon ^2} )$\end{document}</tex-math></inline-formula> is the error term for gene i = 1…n.</p>
      <p>Time series data can also be modeled by using the expression at the previous time point to predict the next time point.
<disp-formula id="equ2"><label>(2)</label><tex-math id="M3">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}\begin{equation*}{X_{i,t}} = {\beta _{0,i}}{\rm{\ }} + \mathop \sum \limits_{h \in H} {\beta _{h,i}}{X_{h,t - 1}} + {\epsilon _{i,t}}, \end{equation*}\end{document}</tex-math></disp-formula>where <italic>X<sub>i,t</sub></italic> is the expression level of gene i at time t, <italic>H</italic> is the set of regulators for gene <italic>i</italic> in a candidate model, β'<italic>s</italic> are the regression coefficients, and <inline-formula><tex-math id="M4">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${\epsilon _{i,t}}N\begin{array}{c} {iid}\\ \sim \end{array}( {0,\sigma _\epsilon ^2} )$\end{document}</tex-math></inline-formula> is the error term for gene <italic>i</italic> = 1…n and time t = 2, …T.</p>
      <p>Different candidate models can be constructed from different sets of regulator genes. Models can be evaluated based upon a measure of their goodness of fit, such as the sum of residuals. However, in genetic analyses, the number of genes often exceeds the number of samples, and many different models can fit the data reasonably well. The core idea behind the BMA methods is that, given a set of starting prior model probabilities, we can find the posterior probability of each model and make a consensus prediction giving proportionately more weight to the more probable models. In terms of gene regulation, the posterior probability that gene <italic>j</italic> is a regulator of gene <italic>i</italic> is the sum of the posterior probabilities of all candidate models that include gene <italic>j</italic> in the set of regulators of <italic>i</italic>. This posterior probability becomes the weight of the edge drawn from gene <italic>j</italic> to gene <italic>i</italic> in the gene network. Estimates of the weights from prior knowledge can be used to seed the calculation of models to increase accuracy. Alternatively, a set of uniform starting weights based on the average number of edges observed in biological networks can be used when there is no additional information [<xref rid="bib26" ref-type="bibr">26</xref>].</p>
    </sec>
    <sec id="sec1-2">
      <title>Estimating model posterior probabilities</title>
      <p>Estimation of the posterior probabilities of the models can be accomplished by a variety of methods, some of which are very computationally intensive [<xref rid="bib12" ref-type="bibr">12</xref>]. The original BMA [<xref rid="bib21" ref-type="bibr">21</xref>] and iterative BMA (iBMA) methods [<xref rid="bib27" ref-type="bibr">27</xref>] use the Bayesian Information Criterion (BIC) [<xref rid="bib28" ref-type="bibr">28</xref>], which is simple to calculate and penalizes larger models that are easier to fit. However, BIC is an asymptotic approximation that is most accurate for large sample sizes. As an alternative, ScanBMA provided the option of using Zellner's <italic>g</italic> prior [<xref rid="bib29" ref-type="bibr">29</xref>] to compute the posterior probabilities. The <italic>g</italic> prior parameter can be estimated as the value that maximizes the total posterior probability of the models. Adjusting the range of possible values for the <italic>g</italic> prior allows us to tune the method for smaller sample sizes and produce better networks. fastBMA exclusively uses the <italic>g</italic> prior to estimate the posterior probabilities and replaces ScanBMA’s R code with a faster C++ implementation for the expectation maximization (EM) optimization of the <italic>g</italic> parameter.</p>
    </sec>
    <sec id="sec1-3">
      <title>Sampling candidate models</title>
      <p>The number of possible candidate models grows exponentially with the number of possible regulators, necessitating an efficient methodology to find a subset of reasonable models. In the original implementation of BMA for genetic regulatory network inference, the leaps and bounds algorithm [<xref rid="bib30" ref-type="bibr">30</xref>] was used to identify the <italic>n</italic> best models for a given number of variables. Occam's window [<xref rid="bib31" ref-type="bibr">31</xref>] was then used to discard models with much lower posterior probabilities than the best model. The leaps and bounds algorithm scales poorly and is limited in practice to fewer than 50 variables. Iterative BMA (iBMA) uses a pre-processing step to rank all variables (genes), iteratively applies the original BMA to the top <italic>w</italic> variables (<italic>w</italic> = 30 by default), and discards predictor variables with low posterior inclusion probabilities [<xref rid="bib13" ref-type="bibr">13</xref>]. In the iterative step, new variables from the ranked list are added to replace the discarded variables. This procedure of repeatedly applying BMA and variable swaps is continued until the <italic>w</italic> top-ranked variables have been processed. In contrast to iBMA, ScanBMA removes the restriction of the search space to an initial list of variables [<xref rid="bib14" ref-type="bibr">14</xref>]. ScanBMA keeps a list of the best current linear regression models found so far and adds or removes a variable from these models to search for better models. The process is repeated until no new models are added or removed from the best set of models. ScanBMA’s greedy approach and the implementation of its core routines in C++ enable it to typically run faster than iBMA. In this paper, we present fastBMA that uses the ScanBMA approach but exploits the fact that new models are based upon existing models. In particular, new models are fitted using the results from the existing models, which increases the speed and scalability of the search.</p>
    </sec>
    <sec id="sec1-4">
      <title>Post-processing graphs by transitive reduction</title>
      <p>BMA and other methods for reconstructing biological networks can generate edges between genes that are the result of indirect regulation through 1 or more intermediate genes. While having edges that represent either direct or indirect interactions is perfectly acceptable in a graph, biological networks are usually represented by edges that represent direct interactions. Such networks allow for more straightforward identification of potential driver genes. For genetic networks, it is therefore desirable to remove edges between nodes where the regulation is indirect (transitive reduction). This can be done through post-processing of the inferred network. One intuitive approach is based on eliminating direct edges between 2 nodes when there is a better indirect path [<xref rid="bib32" ref-type="bibr">32</xref>]. For example, <italic>Bosnacki</italic> recently proposed comparing <italic>P</italic>-values of the best edge in an indirect path with that of the direct path [<xref rid="bib33" ref-type="bibr">33</xref>]. fastBMA introduces a similar approach that reduces transitive reduction to a shortest-path problem, which can be solved more efficiently for the sparse graphs typically found in gene regulatory networks.</p>
      <p>Table <xref ref-type="table" rid="tbl1">1</xref> summarizes the key differences between the different BMA implementations.</p>
      <table-wrap id="tbl1" orientation="portrait" position="float">
        <label>Table 1:</label>
        <caption>
          <p>Differences between BMA implementations</p>
        </caption>
        <table frame="hsides" rules="groups">
          <thead>
            <tr>
              <th rowspan="1" colspan="1"/>
              <th align="center" rowspan="1" colspan="1">BMA</th>
              <th align="center" rowspan="1" colspan="1">iBMA</th>
              <th align="center" rowspan="1" colspan="1">ScanBMA</th>
              <th align="center" rowspan="1" colspan="1">fastBMA</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">Max variables</td>
              <td align="center" rowspan="1" colspan="1">50</td>
              <td align="center" rowspan="1" colspan="1">100</td>
              <td align="center" rowspan="1" colspan="1">3500</td>
              <td rowspan="1" colspan="1">10 000<sup>+</sup></td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Parallel</td>
              <td align="center" rowspan="1" colspan="1">No</td>
              <td align="center" rowspan="1" colspan="1">No</td>
              <td align="center" rowspan="1" colspan="1">No</td>
              <td rowspan="1" colspan="1">MPI/OpenMP</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Post-processing</td>
              <td align="center" rowspan="1" colspan="1">No</td>
              <td align="center" rowspan="1" colspan="1">No</td>
              <td align="center" rowspan="1" colspan="1">No</td>
              <td rowspan="1" colspan="1">Transitive reduction</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Prior specification</td>
              <td align="center" rowspan="1" colspan="1">BIC</td>
              <td align="center" rowspan="1" colspan="1">BIC</td>
              <td align="center" rowspan="1" colspan="1">BIC/<italic>g</italic> prior</td>
              <td rowspan="1" colspan="1"><italic>g</italic> prior</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Implementation</td>
              <td align="center" rowspan="1" colspan="1">R/Fortran</td>
              <td align="center" rowspan="1" colspan="1">R/Fortran</td>
              <td align="center" rowspan="1" colspan="1">R/C<sup>++</sup></td>
              <td rowspan="1" colspan="1">C<sup>++</sup></td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
    </sec>
  </sec>
  <sec id="sec2">
    <title>fastBMA Methodology</title>
    <p>Fig. <xref ref-type="fig" rid="fig1">1</xref> shows an outline of fastBMA. In this section, we report our algorithmic and implementation contributions in fastBMA and our evaluation procedure. The pseudocode for the entire implementation is provided in the <xref ref-type="supplementary-material" rid="sup12">supplementary materials</xref>.</p>
    <fig id="fig1" orientation="portrait" position="float">
      <label>Figure 1:</label>
      <caption>
        <p>Outline of fastBMA algorithm.</p>
      </caption>
      <graphic xlink:href="gix078fig1"/>
    </fig>
    <sec id="sec2-1">
      <title>Algorithmic outline of fastBMA</title>
      <p>The core approach for fastBMA is similar to that used by ScanBMA. The best models are found using ScanBMA’s search strategy with a starting value of <italic>g</italic> in the interval [1… NumberOfSamples]. Brent minimization [<xref rid="bib34" ref-type="bibr">34</xref>] is then used to find the value <italic>g</italic> in the interval that gives rise to the set of models with the highest total marginal probability. A graph is constructed by drawing edges between genes with an edge weight equal to the average posterior probability of the regulator over the set of reasonable models. Transitive reduction is applied to this graph to remove edges that can be adequately explained by a better indirect path. A final graph is constructed by retaining edges with weights greater than a given cutoff.</p>
      <p>There are 4 major algorithmic improvements that increase the speed, scalability, and accuracy of fastBMA:
<list list-type="order" id="lst1"><list-item><p>Parallel and distributed implementation</p></list-item><list-item><p>Faster regression by updating previous solutions</p></list-item><list-item><p>Probabilistic hashing</p></list-item><list-item><p>Post-processing with transitive reduction</p></list-item></list></p>
    </sec>
    <sec id="sec2-2">
      <title>Parallel and distributed implementation</title>
      <p>Parallelization can be accomplished by using a shared memory system, such as OpenMP [<xref rid="bib35" ref-type="bibr">35</xref>], which is designed for assigning work to different threads in a single CPU with multiple cores. In contrast, Message Passing Interface (MPI) [<xref rid="bib36" ref-type="bibr">36</xref>] launches multiple processes on 1 or more CPUs and passes messages between processes to coordinate the distribution of work. Both of these approaches have their respective advantages and disadvantages. OpenMP is applicable only to CPUs on a single machine and is a bit slower for fastBMA. MPI is usable on a single machine or a cluster but requires some work to set up. fastBMA implements both approaches, allowing the user to choose the preferred methodology based on their requirements.</p>
      <p>Inferring the entire regulatory network involves finding the regulators for every gene in the set. Since each of these determinations is carried out separately, each thread or process can be assigned the task of finding the regulator for a subset of genes in the set. When OpenMP is used, it provides a scheduler that dynamically assigns the regression calculations for a given gene to each thread. Threads work simultaneously on their tasks and receive a new task when they finish the previous task. All threads share access to memory, and the same input data for the regression is available to all the threads. The parallel code only extends to the regression loop; the final transitive reduction post-processing and output is done by a single thread.</p>
      <p>When MPI is used, we initially split the tasks evenly among the available CPUs. In the case of MPI processes, memory is not shared. Instead the input data is read by a master process and distributed to all the participating processes using MPI’s broadcast command. All processes then work on their tasks simultaneously in parallel and send messages to all the other processes so that all processes know which tasks are being worked upon. The length of time required for each calculation varies considerably, and, as a result, some processes will finish before others. A process that finishes early then works on tasks initially assigned to other processes that have not yet been started. When all the regulators for all the genes have been found, a master process gathers the predictions, performs transitive reduction post-processing, and outputs the final complete network. OpenMP can also be used in conjunction with MPI to further subdivide the tasks among threads available to a CPU.</p>
    </sec>
    <sec id="sec2-3">
      <title>Faster regression by updating previous solutions</title>
      <p>Even with the above parallel implementation, each individual calculation of regulators is still accomplished by a single process. If the regression procedure is too slow, this step can be rate-limiting for large numbers of genes regardless of the number of processors available. ScanBMA uses Cholesky decomposition to triangularize the regression matrix and obtain the regression coefficients through back substitution. These calculations have a time complexity of O(<italic>n</italic><sup>3</sup>), where <italic>n</italic> is the number of variables in the model. However, in the case of fastBMA, new regression models are based upon the previous models and involve the addition or removal of a single variable. It is possible to use the triangular matrix of the previous model to calculate the triangular matrix and regression coefficients for the new model. fastBMA’s new C++ implementation of this update algorithm is based on the Fortran code from the qrupdate library [<xref rid="bib37" ref-type="bibr">37</xref>].</p>
      <p>The time required for Cholesky decomposition becomes O(<italic>n</italic><sup>2</sup>) when updating the previous solution. Average sampled model sizes for typical applications range between 5 and 20, and this would be the expected speedup when using a single thread. However, fastBMA further optimizes the implementation by pre-calculating matrix multiplications and using lower-level linear algebra routines from OpenBLAS [<xref rid="bib38" ref-type="bibr">38</xref>] for further speed increases. OpenBLAS is an optimized open source implementation of the Basic Linear Algebra Subprograms (BLAS) routines. Custom wrappers were added to allow the use of the OpenBLAS Fortran libraries. Our initial prototyping indicated that the improvements in the regression procedure account for the majority of the 30-fold increase in speed observed for smaller search spaces on a single thread.</p>
    </sec>
    <sec id="sec2-4">
      <title>Replacing the hash table with a constant time and constant space probabilistic filter</title>
      <p>In order to understand the necessity and efficacy of the new probabilistic filter used by fastBMA, we must first understand the limitations of the simple hash table used by ScanBMA. Before evaluating a newly generated model, ScanBMA checks to see if that model has been previously evaluated. This is done by using a hash table to store a string representing the indices of the variables in the model. For smaller sets, the time and space required for this operation are negligible compared to the time and space required to calculate the regression coefficients. However, when the number of variables is in the thousands, this operation becomes the bottleneck. A regular hash table uses a hash function to map the model to a bucket. When the number of models is small relative to the number of buckets (small load factor), it is unlikely that 2 models will be put in the same bucket, and the time taken to look up a model is just the time to map the model to a bucket. For lexicographical strings, the hash function is applied to small substrings and the values are combined. The time required for hashing the whole string is proportional the length of the string. In the case of ScanBMA, the length of the strings formed from the concatenated variable indexes is proportional to the number of variables <italic>n</italic>. Thus for small numbers of models, the time complexity of the lookup operation will also be O(<italic>n</italic>).</p>
      <p>However, when the load factor is large, it is likely that multiple models map to the same bucket. The resulting collisions must be resolved by searching through the models in the bucket. For the C++ <italic>unordered set</italic> container used by ScanBMA, this has worse-case O(<italic>m</italic>) time complexity where <italic>m</italic> is the number of models giving a total time complexity of O(<italic>nm</italic>) for the lookup procedure when <italic>m</italic> is large. In addition, the memory required to store the hash table will be O(<italic>m</italic>). Unfortunately, when a large number of mostly uninformative variables are coupled with a large Occam's window, <italic>m</italic> grows very rapidly. In these cases, we observed that the memory and time requirements of the hashing procedure soon become limiting. For example, even though it only runs a single thread, ScanBMA will run of out memory on a 56 GB machine when there are large numbers of variables and no informative priors.</p>
      <p>It is vital that the ScanBMA algorithm does not sample a model more than once to ensure that the method will converge and terminate. However, the methodology is quite tolerant of falsely excluding models that have not been sampled. ScanBMA only explores a small sample of the possible models—the vast majority of models are normally excluded. Furthermore, in the BMA approach, many models are averaged to obtain the final edges. Variables that are important appear in many models. In the rare case where a good model is falsely excluded, the impact is minimized because the key regulators in the falsely excluded model will be found in other models. When such false negatives are tolerated, an alternative to using a hash table is to ignore the collisions. This saves both time and space by removing the dependence on <italic>m</italic> for both time and space complexity. An example of a noisy or probabilistic hashing approach is the Bloom filter [<xref rid="bib39" ref-type="bibr">39</xref>], which has been used for bioinformatics applications [<xref rid="bib40" ref-type="bibr">40</xref>] due to fast computation and low memory requirements.</p>
      <p>fastBMA includes an optimized implementation of a probabilistic hash (see Fig. <xref ref-type="fig" rid="fig2">2</xref>) that has constant time and constant memory complexity. The dependence of the computation time on <italic>m</italic> is eliminated by ignoring collisions, and the dependence on <italic>n</italic> is eliminated by using an updatable hash function (MurmurHash3 [<xref rid="bib41" ref-type="bibr">41</xref>]) that calculates the hash value of a model based on the hash value of the previous model. fastBMA uses the hash value of the model to map it to a location in a 2-dimensional bit table. The bit at that location is then set to 1. Any model that hashes to a table location with a set bit will not be processed. The error rate for the filter is initially very low, and errors are more likely near the end of the search when more bits in the table have been set. This meshes well with the search process used by fastBMA: errors at the end of the search have even less impact because almost all changes to good models are rejected at that point.</p>
      <fig id="fig2" orientation="portrait" position="float">
        <label>Figure 2:</label>
        <caption>
          <p>ScanBMA hash table vs fastBMA bit filter. The differences between the hashing methods used by ScanBMA (A) and fastBMA (B) are shown. ScanBMA concatenates the indices of the regulator variables in the model to form a unique string. The string is then mapped to 1 of a set of buckets. Strings mapping to the same bucket are kept in a second data structure, which must be navigated to look up the string. In contrast, fastBMA pre-calculates the hashes for all the possible variables. New regression models are based upon the previous models and involve the addition or removal of a single variable. The hash value for the new model is obtained by XORing the hash value for the variable to be added or deleted with the hash value of the previous model. The hash value is used to map the model to a position in a 512-kB bit table, with the row dependent on the number of variables. Mapping different sized models to different rows prevents the large number of collisions that would otherwise arise when using the XOR operator to combine hash values. A bit is set in the bit table to indicate that the model has been observed. Collisions are ignored; it is possible to falsely conclude that a novel model has been evaluated when it has not. As discussed in the Methods section, this type of error is well tolerated by the fastBMA protocol.</p>
        </caption>
        <graphic xlink:href="gix078fig2"/>
      </fig>
      <p>Our benchmarking confirms that ignoring collisions does not degrade the accuracy of fastBMA. Using a bit table of just 512 <italic>kilo</italic>bytes gives identical results for a smaller synthetic dataset and almost identical results for the larger genome-wide experimental dataset. This is reflected in Fig. <xref ref-type="fig" rid="fig4">4</xref>A, where the accuracy of fastBMA is the essentially the same (actually slightly higher) than ScanBMA when using the same search window. However, ScanBMA can use hundreds of <italic>giga</italic>bytes of memory to maintain a string hash table during wide searches over the yeast dataset.</p>
      <p>The implementation of the methodology is also further optimized for speed. New hash values are derived from old ones by looking up the value of the pre-calculated hash for the variable to be added or deleted and using XOR to combine it with the previous hash. This procedure is very fast and invertible but normally would cause severe collision problems, with the same hash being associated with different sets of variables. This is solved by mapping hashes from models of different sizes to different rows of the bit table. fastBMA uses a bit table of 64 rows by 65 326 columns. fastBMA maps the lower 16 bits of the hash value to obtain the column <italic>c</italic> and uses bits 21 and 22 combined with the last 4 bits of the model size to obtain the row <italic>r</italic> (see Fig. <xref ref-type="fig" rid="fig2">2</xref>). The value of the bit table at row <italic>r</italic> and column <italic>c</italic> is set to indicate that the hash value has been seen. Thus the hashing/insert/lookup procedure is constant time, using a very small number of fast bit operations. The tiny size of the bit table (512 kB) also makes the lookup operation very cache friendly. During our prototyping of different versions of fastBMA, we found that the optimized bit filter was much faster than using a full hash table even for small datasets where the load factor is small and there are few collisions.</p>
    </sec>
    <sec id="sec2-5">
      <title>Transitive reduction: eliminating edges when there is a better indirect path</title>
      <p>fastBMA’s transitive reduction methodology is based on eliminating direct edges between 2 nodes when there is a better alternative indirect path. This approach was first described by Wagner [<xref rid="bib32" ref-type="bibr">32</xref>]. <italic>Bosnacki</italic> recently proposed comparing <italic>P</italic>-values of the best edge in an indirect path with that of the direct path [<xref rid="bib33" ref-type="bibr">33</xref>]. fastBMA uses the stronger criterion of comparing the overall posterior probability of the entire path. The linear regression model underlying BMA does not distinguish between direct and indirect paths. However, BMA is usually seeded with the prior probabilities of a direct interaction between genes, and the posterior probabilities that constitute the edge weights in a fastBMA network are intended to be estimates of the confidence that there is a direct interaction. The overall probability of any path can be estimated (assuming independence) by multiplying the edge weights together. Equivalently, we can transform the edge weights by taking the negative log, and the highest probability path becomes the path with the lowest sum of negative log edge weights (see Fig. <xref ref-type="fig" rid="fig3">3</xref>). The question of whether a better indirect regulatory chain exists is thus mapped to the question of whether a shorter indirect path exists between the 2 nodes. This is the a shortest path problem that can be solved by Dijkstra's method with time complexity of O(N E logN + N<sup>2</sup> logN), where E is the number of edges and N is the number of nodes. By comparison, the GPU methodology of <italic>Bosnacki</italic> is O(N<sup>3</sup>) using a less selective criterion of comparing the best edge in the path. The search is also bounded: once a path's distance exceeds the direct distance, there is no need to further explore that path. In addition, fastBMA produces graphs with few high-weight edges, and, in practice, the algorithm is much faster than the worst case as most searches are quickly terminated.</p>
      <fig id="fig3" orientation="portrait" position="float">
        <label>Figure 3:</label>
        <caption>
          <p>Transitive reduction post-processing. A simple example of the transitive reduction procedure is illustrated. The 3 edge weights in the mini-graph are the posterior probabilities that A regulates B, B regulates C, and A regulates C. The probability of A regulating C through an indirect path through edges A→B→C is the product of the edge weights for A→B and B→C. We take the negative log of the probabilities (middle panel) to transform the multiplication into distances. The indirect path A→B→C is shorter than the direct path A→C, which is equivalent to the probability of A regulating C through B being greater than the probability of A directly regulating C. As a result, the edge between A and C is removed.</p>
        </caption>
        <graphic xlink:href="gix078fig3"/>
      </fig>
    </sec>
    <sec id="sec2-6">
      <title>Datasets used for testing</title>
      <p>We have previously benchmarked ScanBMA [<xref rid="bib14" ref-type="bibr">14</xref>] against other network inference methods (MRNET [<xref rid="bib5" ref-type="bibr">5</xref>], CLR [<xref rid="bib42" ref-type="bibr">42</xref>], ARACNE [<xref rid="bib4" ref-type="bibr">4</xref>], DBN [<xref rid="bib8" ref-type="bibr">8</xref>], and LASSO [<xref rid="bib11" ref-type="bibr">11</xref>, <xref rid="bib43" ref-type="bibr">43</xref>]) on smaller test sets. In this study, we focus on comparing fastBMA only to ScanBMA and LASSO, which were the 2 most accurate methods in these benchmarks and are the only 2 methods that could infer networks from the larger datasets in a reasonable time. We also compare fastBMA to other methodologies, GENIE3 [<xref rid="bib44" ref-type="bibr">44</xref>] and Jump3 [<xref rid="bib45" ref-type="bibr">45</xref>], which have demonstrated high accuracy on the simulated DREAM datasets.</p>
      <p>We used the following 3 datasets for testing.
<list list-type="order" id="lst2"><list-item><p><italic>Simulated</italic> 10-gene and 100-gene time series data (5 sets of each) and the corresponding reference networks from DREAM4 [<xref rid="bib46" ref-type="bibr">46</xref>–<xref rid="bib50" ref-type="bibr">50</xref>]. As these datasets are simulated; the true regulatory relationships are known and are used to evaluate the accuracy of the predicted networks. For Fig. <xref ref-type="fig" rid="fig4">4</xref>A, all the 10-gene and 100-gene datasets were used and treated as 1 big dataset. Individual 100-gene networks were used to generate Table <xref ref-type="table" rid="tbl2">2</xref>.</p></list-item><list-item><p>Yeast time series expression data (ArrayExpress E-MTAB-412) consisting of 3556 genes over 6 time points and 97 replicates [<xref rid="bib51" ref-type="bibr">51</xref>]. Being actual data, there is no absolute ground truth. Instead, we compared the regulatory predictions with the literature-curated regulatory relationships from the YEASTRACT database [<xref rid="bib52" ref-type="bibr">52</xref>].</p></list-item><list-item><p>Human single-cell time series RNA-Seq data GSE52529 (9776 genes) from GEO [<xref rid="bib53" ref-type="bibr">53</xref>]. As no satisfactory gold standard was available, we only used this to demonstrate that fastBMA could scale to noisy human genome-wide expression data.</p></list-item></list></p>
      <fig id="fig4" orientation="portrait" position="float">
        <label>Figure 4:</label>
        <caption>
          <p>Graphs of the overall accuracy of networks as a function of running time on the DREAM4 simulated (A) and yeast time series data (B). The area under the receiver operating character curve (AUROC) and area under the precision recall curve (AUPR) of networks inferred from the DREAM4 dataset using fastBMA (no post-processing), ScanBMA, and LASSO are plotted against the running times. The different points within a line segment represent fastBMA and ScanBMA with increasingly wider searches as determined by the odds ratio (OR) parameter (OR = 100, 1000, 10 000)—the leftmost point representing the smallest OR, which is the fastest and least accurate. LASSO does not have an equivalent parameter and was run with the default settings. For the yeast datasets, prior probabilities of regulatory relationships (informative priors) were obtained using external data sources as described in Lo et al. For all methods not using informative priors (including LASSO), variables were ordered by their absolute correlation to the response variable. For the ScanBMA on the yeast dataset, the search space was restricted to the 100 variables with the highest prior probabilities. fastBMA was run with a search space of 100 variables using 1 core and all 3556 variables using 8 cores, with and without the Lo et al. prior probabilities. All tests were conducted using Ubuntu 14.04 on an A10 Microsoft Azure cloud instance, which is an Intel Xeon CPU with 8 cores and 56 GB of RAM and is the average of 5 runs. Docker images were not used during benchmarking. Error bars are not shown as the variation between runs is too small to appear on the graphs.</p>
        </caption>
        <graphic xlink:href="gix078fig4"/>
      </fig>
      <table-wrap id="tbl2" orientation="portrait" position="float">
        <label>Table 2:</label>
        <caption>
          <p>Comparison of AUPR on Dream-4100 gene networks for Jump3, GENIE3, and fastBMA</p>
        </caption>
        <table frame="hsides" rules="groups">
          <thead>
            <tr>
              <th rowspan="1" colspan="1"/>
              <th align="center" rowspan="1" colspan="1">Network 1</th>
              <th align="center" rowspan="1" colspan="1">Network 2</th>
              <th align="center" rowspan="1" colspan="1">Network 3</th>
              <th align="center" rowspan="1" colspan="1">Network 4</th>
              <th align="center" rowspan="1" colspan="1">Network 5</th>
              <th align="center" rowspan="1" colspan="1">Running time per network</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">Jump3</td>
              <td rowspan="1" colspan="1">
                <bold>0.270</bold>
                <sup>
                  <xref ref-type="fn" rid="tb2fn3">3</xref>
                </sup>
              </td>
              <td rowspan="1" colspan="1">0.110</td>
              <td rowspan="1" colspan="1">0.200</td>
              <td rowspan="1" colspan="1">0.180</td>
              <td rowspan="1" colspan="1">
                <bold>0.174</bold>
              </td>
              <td align="center" rowspan="1" colspan="1">48 hours<sup><xref ref-type="fn" rid="tb2fn1">1</xref></sup></td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">GENIE3</td>
              <td rowspan="1" colspan="1">0.228</td>
              <td rowspan="1" colspan="1">0.096</td>
              <td rowspan="1" colspan="1">
                <bold>0.230</bold>
              </td>
              <td rowspan="1" colspan="1">0.157</td>
              <td rowspan="1" colspan="1">0.168</td>
              <td align="center" rowspan="1" colspan="1">N/A</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">fastBMA</td>
              <td rowspan="1" colspan="1">0.232</td>
              <td rowspan="1" colspan="1">
                <bold>0.127</bold>
              </td>
              <td rowspan="1" colspan="1">0.189</td>
              <td rowspan="1" colspan="1">
                <bold>0.227</bold>
              </td>
              <td rowspan="1" colspan="1">0.158</td>
              <td align="center" rowspan="1" colspan="1">3 seconds (using 1 thread)<sup><xref ref-type="fn" rid="tb2fn2">2</xref></sup></td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <fn id="tb2fn1">
            <p><sup>1</sup>Jump3 timings were from an Intel i7 processor @1.7 GHz.</p>
          </fn>
          <fn id="tb2fn2">
            <p><sup>2</sup>fastBMA timings were from an Intel Xeon E5–2670 processor @ 2.6 GHz.</p>
          </fn>
          <fn id="tb2fn3">
            <p><sup>3</sup>The highest AUPR for each network are in bold type.</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
    </sec>
    <sec id="sec2-7">
      <title>Assessment metrics and testing methodology</title>
      <p>We define a true positive (TP) as an edge in the inferred network that is also present in the ground truth or gold standard set. False positives (FP) are edges in the inferred network that are missing in the gold standard. False negatives (FN) are missing edges in the inferred network that are present in the gold standard, and true negatives (TN) are missing edges that are also missing in the gold standard. Precision (TP/(TP+FP)) and recall (TP)/(TP+FN) are useful measures of the positive predictive value and sensitivity of the methodology. However, precision and recall are dependent on the threshold used for the edge weights. Plots of precision vs recall over different values for the threshold give a more complete picture of the accuracy of the network inference. Similarly, receiver operating characteristic plots of TP/(TP+FN) vs FP/(FP+TN) for different thresholds are also useful, though less so than precision-recall plots because we are more interested in TP in sparse biological networks. We distill the overall information of these plots into a single number by estimating the area under the curve (AUC), i.e., area under precision recall curve (AUPR) and area under receiver operating curve (AUROC) for all possible threshold values. Due to the size of the larger yeast networks, all AUC calculations were done using custom software fastROCPRC [<xref rid="bib54" ref-type="bibr">54</xref>], written in C++. We primarily use AUPR and AUROC for the assessment as these metrics measure the overall performance of the methods. In practice, however, predicting <italic>some</italic> edges accurately, even if only for the most confident predictions, is still valuable for narrowing down a set of potential interactions to be further explored. Hence, we also plot the precision-recall graph to assess where the differences in accuracy are occurring. Timings for ScanBMA, fastBMA, and LASSO were the average of 5 runs on the same 8-core 56-GB Microsoft Azure A10 instance. fastBMA and ScanBMA were compiled on the instance and the binaries used. For the Jump3/GENIE3 comparison, we did not run the software ourselves but relied upon the published running times.</p>
    </sec>
  </sec>
  <sec sec-type="results" id="sec3">
    <title>Results</title>
    <p>We applied our fastBMA algorithm to both simulated and real time series gene expression data. We had previously tested several methods on these datasets [<xref rid="bib14" ref-type="bibr">14</xref>] and found that ScanBMA and LASSO were the fastest and most accurate methods. Therefore, we focused on comparing the fastBMA results to ScanBMA and LASSO [<xref rid="bib43" ref-type="bibr">43</xref>, <xref rid="bib55" ref-type="bibr">55</xref>] in Figs <xref ref-type="fig" rid="fig4">4</xref> and <xref ref-type="fig" rid="fig5">5</xref>. LASSO is a non-Bayesian linear regression method that uses a penalty term to prevent overfitting to models with many variables. It is written in Fortran and is the basis for one of the fastest network inference methods available. Both fastBMA and ScanBMA control the breadth of the search by varying the odds ratio threshold that defines the size of Occam's window. The odds ratio is the confidence in the query model relative to the best model. Models outside of this window are discarded. Hence, a larger odds ratio threshold drives a wider search, which naturally takes longer to complete.</p>
    <fig id="fig5" orientation="portrait" position="float">
      <label>Figure 5:</label>
      <caption>
        <p>Precision-recall curves. In (A) the precision-recall curves were plotted for the networks inferred from the DREAM4 data using LASSO, LASSO+post-processing, fastBMA+post-processing (odds ratio = 10 000). No informative priors were available for this synthetic dataset. In (B), curves were plotted for the networks inferred from the yeast time series data using LASSO, LASSO+post-processing, fastBMA, and fastBMA with informative prior. For the yeast dataset, curves for post-processed networks for fastBMA are not shown as they are essentially identical to the curves for networks inferred without post-processing.</p>
      </caption>
      <graphic xlink:href="gix078fig5"/>
    </fig>
    <p>We ran both ScanBMA and fastBMA with increasingly larger windows (odds ratios 100, 1000, 10 000) and the time and accuracy, as measured by AUROC and AUPR, plotted as line segments in Fig. <xref ref-type="fig" rid="fig4">4</xref>. The exception was that in Fig. <xref ref-type="fig" rid="fig4">4</xref>B ScanBMA was restricted to 100 variables and using priors due to the time and memory required to run it using all 3556 variables with the larger odds ratios. All the line segments have a positive slope, indicating that larger windows do increase the accuracy, at the expense of using more computation time. For both the synthetic DREAM4 and experimental yeast datasets, with or without prior information, the line segments for fastBMA in Fig. <xref ref-type="fig" rid="fig4">4</xref>A (where the conditions are identical) are well to the left of the corresponding line segments for ScanBMA. The x-axis is logarithmic, indicating that fastBMA is orders of magnitude faster than ScanBMA when using the same parameters. Alternatively, one can use a larger odds ratio with fastBMA and obtain a more accurate result in the same time it would take to run ScanBMA with a smaller odds ratio. This is especially important for larger datasets such as the yeast dataset with non-informative priors, where it is impractical to run ScanBMA. On the same datasets, fastBMA is also more accurate and faster than LASSO, the degree and nature of improvement depending on whether the user chooses to emphasize speed or accuracy through the choice of the odds ratio parameter.</p>
    <p>One of the main advantages of the BMA methods is that they are able to incorporate prior information to improve inference. This was not possible for the DREAM4 dataset as it is a synthetic dataset, for which relevant prior information is not available. In this case, an uninformative uniform prior probability is used. However, for the yeast dataset, we had access to priors from external data sources [<xref rid="bib12" ref-type="bibr">12</xref>]. Specifically, we applied a supervised learning approach to a training dataset consisting of regulator-gene pairs and various attributes assembled from diverse gene expression data, genome-wide binding data, protein-protein interactions, gene ontology terms, and prior knowledge from the literature. We computed predicted probabilities of regulatory relationships using this supervised learning approach, and these predicted probabilities were used as priors in the regression step. These priors are available in the <italic>lopriors.tsv</italic> file in the <xref ref-type="supplementary-material" rid="sup12">supplementary materials</xref>. The use of informative priors also allowed us to triage the variables to be explored to the 100 variables with the highest prior probabilities, saving considerable computational resources. In addition, using informative priors often increases computational efficiency by restricting the search to a smaller space. As expected, using informative priors increases the accuracy and decreases the running time of fastBMA relative to LASSO. In addition, we ran fastBMA without informative priors and without restricting the number of variables (i.e., using all 3556). This is beyond the capabilities of ScanBMA when using wider search windows. Even on this computationally demanding task, inferring the yeast network without informative priors, fastBMA is faster than LASSO with increased accuracy as assessed by AUROC and AUPR.</p>
    <p>A common use for computational network inference is to identify a small set of potential regulators that could be verified with further experiments. For this use case, an improvement in the precision of the most confident predictions is more important than a small improvement in the overall performance of the method. As some of the differences in AUC for the yeast dataset are relatively small, we plotted the precision recall curves in Fig. <xref ref-type="fig" rid="fig5">5</xref>. We see that the precision of the most confident predictions (i.e., lowest recall) is increased. The advantage of using informative priors when available is very clear. However, even when prior knowledge is not available, the fastBMA algorithm is superior, which is especially evident in the case of the DREAM4 dataset.</p>
    <p>The effect of post-processing is more limited. In Fig. <xref ref-type="fig" rid="fig5">5</xref>, the precision-recall curves for the DREAM4 dataset are almost identical for fastBMA and LASSO with and without post-processing. The same result was observed for fastBMA on the yeast dataset, and for clarity, we did not plot the overlapping precision-recall curves for the post-processed networks for fastBMA. However, we do see that post-processing has an effect on LASSO for the yeast dataset.</p>
    <p>We also tested fastBMA on a human single cell RNA-Seq dataset with 9776 variables. Using a 32-core cluster on Microsoft Azure (2 nodes of 16 cores), fastBMA was able to obtain a network in 13 hours without using informative priors. Neither ScanBMA nor LASSO is able to return results for this dataset. We do not have a gold standard for this test—the purpose was to demonstrate that fastBMA could handle a very large and noisy genomic-sized dataset and return a network within a reasonable time even in the worst case scenario where the data is noisy and there is no prior information.</p>
    <p>One possible drawback of the fastBMA methodology is the narrow search algorithm, which restricts sampling to models similar to the previously optimal models. While this is a prime reason for the speed of the approach, methodologies that sample the space more thoroughly, especially on smaller datasets, may be prove to be more effective. Table <xref ref-type="table" rid="tbl2">2</xref> compares fastBMA to the methodology of one of the best performers on the non–time series data from DREAM4, GENIE3, and its successor Jump3, which use an ensemble of decision trees for network inference. In Huyny-Thu et al. [<xref rid="bib45" ref-type="bibr">45</xref>], the AUPR for both GENIE3 and Jump3 were given for the DREAM4 time series data, allowing for a direct comparison with fastBMA. For these tests, fastBMA was run with an odds ratio of 10 000 and the AUPR compared with those listed in Huynh-Thu et al. [<xref rid="bib45" ref-type="bibr">45</xref>] in Table <xref ref-type="table" rid="tbl2">2</xref>. The best results for each of the 5 networks are highlighted. In particular, Jump3 has higher AUPR than fastBMA for 3 of the networks, and fastBMA has higher AUPR than GENIE3 in 3 of the networks, with the AUPRs being fairly similar for all the 3 of the methods. However, the running time difference is significant, with fastBMA taking 3 seconds per network and Jump3 taking 2 days. Running times for GENIE3 time series data were not given in Huynh-Thu et al. [<xref rid="bib45" ref-type="bibr">45</xref>].</p>
  </sec>
  <sec id="sec4">
    <title>Discussion and Conclusions</title>
    <p>We have described fastBMA, a parallel, scalable, and accurate method for inferring networks from genome-wide data. We have shown that fastBMA can produce networks of increased accuracy orders of magnitude faster than other fast methods, even when using a single thread. Further speed increases are possible by using more threads or processes. fastBMA is scalable, and we have shown that it can be used to analyze human genomic expression data even in the most computationally demanding situation of noisy data, no informative priors, and considering all genes as possible regulators.</p>
    <p>fastBMA includes a new transitive reduction post-processing methodology for removing redundant edges where the predicted regulatory edge can be better explained by indirect paths. Both fastBMA and LASSO already penalize large models and favor the exclusion of redundant variables. This explains why post-processing has minimal impact on the sparse networks predicted by fastBMA and LASSO. In particular, fastBMA produces very sparse networks that are not improved by further processing on any of the datasets tested. LASSO’s networks are denser. For the small synthetic DREAM4 set, the post-processing still does not improve the network. However, on the larger experimentally derived yeast dataset, spurious edges do appear in the LASSO networks despite the regularization penalty that discourages larger models. Some of these redundant edges are successfully removed by the transitive reduction post-processing, improving the overall accuracy of the network. Thus the transitive reduction methodology may prove useful as an adjunct to methods and datasets that give rise to denser networks and are more prone to over-predicting edges than fastBMA. With this in mind, and given that this methodology is different from other published methodologies, we have included the ability to run the transitive reduction module of fastBMA on any set of edges, not just those generated by fastBMA.</p>
    <p>Although we have focused on biological time series data, fastBMA can be applied to rapidly infer relationships from other high-dimensional analytics data. Also, the fastBMA methodology can be extended for even more demanding applications. For example, multiple bit filters (i.e., a Bloom filter) could be used to hash larger search spaces. fastBMA does have some limitations: the speed relies on sampling a small subset of the search space defined by the initial best set of models. This may not be an optimal strategy when there are many almost equally good dissimilar solutions and no prior knowledge to provide a guide to a set of good starting models. In these cases, especially for smaller networks, there may be better solutions such as Jump3 that can sample the space more thoroughly within a reasonable time frame. However, on the 100-gene DREAM4 datasets in Table <xref ref-type="table" rid="tbl2">2</xref>, the differences in accuracy between the methods were not large, but the speed increase was more than 4 orders of magnitude. We anticipate that the efficiency of fastBMA will be especially useful for very large datasets on the cloud where usage is metered. For this purpose, we have provided Docker images to facilitate deployment on local or cloud clusters.</p>
  </sec>
  <sec id="sec5">
    <title>Availability and requirements</title>
    <p>Project name: fastBMA</p>
    <p>Project home page: <ext-link ext-link-type="uri" xlink:href="https://github.com/lhhunghimself/fastBMA">https://github.com/lhhunghimself/fastBMA</ext-link></p>
    <p>Operating system(s): Linux (MacOS and Windows support provided through the Docker container [<xref rid="bib25" ref-type="bibr">25</xref>] and Bioconductor package [<xref rid="bib24" ref-type="bibr">24</xref>])</p>
    <p>Programming language: C++</p>
    <p>Other requirements: gcc version &gt;4.8, OpenBLAS, mpich2 (if MPI desired) to compile code</p>
    <p>License: M.I.T.</p>
    <p>Any restrictions to use by non-academics: none other than those required by the license</p>
  </sec>
  <sec id="sec6">
    <title>Availability of supporting data</title>
    <p><italic>Simulated</italic> 10-gene and 100-gene time series data (5 sets of each) and the corresponding reference networks from DREAM4 were obtained from DREAM4 [<xref rid="bib56" ref-type="bibr">56</xref>]. Yeast time series expression data (ArrayExpress E-MTAB-412) consisting of 3556 genes over 6 time points [<xref rid="bib51" ref-type="bibr">51</xref>] and literature-curated regulatory relationships from the YEASTRACT database [<xref rid="bib52" ref-type="bibr">52</xref>].</p>
    <p>Human time series RNA-Seq data GSE52529 (9776 genes) were obtained from GEO [<xref rid="bib53" ref-type="bibr">53</xref>].</p>
    <p>Snapshots of the supporting code are also available from the <italic>GigaScience</italic> database, <italic>Giga</italic>DB [<xref rid="bib23" ref-type="bibr">23</xref>].</p>
  </sec>
  <sec id="sec7">
    <title>List of abbreviations</title>
    <p>AUC: area under the curve; AUPR: area under precision recall; AUROC: area under receiver operator curve; BIC: Bayesian information criterion; BMA: Bayesian model averaging; EM: estimation maximization; iBMA: iterative Bayesian model averaging.</p>
  </sec>
  <sec id="sec8">
    <title>Competing interests</title>
    <p>The authors declare that they have no competing interests.</p>
  </sec>
  <sec id="sec9">
    <title>Funding</title>
    <p>This work was supported by the National Institutes of Health (U54HL127624 to K.Y.Y., R01HD054511 to A.E.R., R01HD070936 to A.E.R.) and Microsoft Azure for Research Awards to K.Y.Y. and L.H.H.</p>
  </sec>
  <sec id="sec10">
    <title>Author contributions</title>
    <p>L.H.H. conceived and implemented fastBMA. L.H.H., K.S., M.W., and W.C.Y. tested and benchmarked the software. K.S. and L.H.H. added fastBMA to the networkBMA R package. L.H.H. generated the Docker packages. All authors read and approved the manuscript.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="sup1">
      <label>GIGA-D-17-00012_Original-Submission.pdf</label>
      <media xlink:href="gix078_GIGA-D-17-00012_Original-Submission.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="sup2">
      <label>GIGA-D-17-00012_Revision-1.pdf</label>
      <media xlink:href="gix078_GIGA-D-17-00012_Revision-1.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="sup3">
      <label>GIGA-D-17-00012_Revision-2.pdf</label>
      <media xlink:href="gix078_GIGA-D-17-00012_Revision-2.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="sup4">
      <label>GIGA-D-17-00012_Revision-3.pdf</label>
      <media xlink:href="gix078_GIGA-D-17-00012_Revision-3.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="sup5">
      <label>Response-to-Reviewer-Comments_Original-Submission.pdf</label>
      <media xlink:href="gix078_Response-to-Reviewer-Comments_Original-Submission.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="sup6">
      <label>Response-to-Reviewer-Comments_Revision-1.pdf</label>
      <media xlink:href="gix078_Response-to-Reviewer-Comments_Revision-1.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="sup7">
      <label>Response-to-Reviewer-Comments_Revision-2.pdf</label>
      <media xlink:href="gix078_Response-to-Reviewer-Comments_Revision-2.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="sup8">
      <label>Reviewer-1-Report-(Original-Submission).pdf</label>
      <media xlink:href="gix078_Reviewer-1-Report-(Original-Submission).pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="sup9">
      <label>Reviewer-1-Report-(Revision-1).pdf</label>
      <media xlink:href="gix078_Reviewer-1-Report-(Revision-1).pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="sup10">
      <label>Reviewer-1_Original-Submission-(Attachment).pdf</label>
      <media xlink:href="gix078_Reviewer-1_Original-Submission-(Attachment).pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="sup11">
      <label>Reviewer-2-Report-(Original-Submission).pdf</label>
      <media xlink:href="gix078_Reviewer-2-Report-(Original-Submission).pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="sup12">
      <label>Supplemental materials</label>
      <media xlink:href="gix078_Supp.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack>
    <title>Acknowledgements</title>
    <p>We would like to thank Dr. Roger Bumgarner for helpful discussions.</p>
  </ack>
  <ref-list>
    <title>References</title>
    <ref id="bib1">
      <label>1.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Barabasi</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Gulbahce</surname><given-names>N</given-names></name>, <name name-style="western"><surname>Loscalzo</surname><given-names>J</given-names></name></person-group><article-title>Network medicine: a network-based approach to human disease</article-title>. <source>Nat Rev Genet</source><year>2011</year>;<volume>12</volume>(<issue>1</issue>):<fpage>56</fpage>–<lpage>68</lpage>.<pub-id pub-id-type="pmid">21164525</pub-id></mixed-citation>
    </ref>
    <ref id="bib2">
      <label>2.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Karlebach</surname><given-names>G</given-names></name>, <name name-style="western"><surname>Shamir</surname><given-names>R</given-names></name></person-group><article-title>Modelling and analysis of gene regulatory networks</article-title>. <source>Nat Rev Mol Cell Biol</source><year>2008</year>;<volume>9</volume>(<issue>10</issue>):<fpage>770</fpage>–<lpage>80</lpage>.<pub-id pub-id-type="pmid">18797474</pub-id></mixed-citation>
    </ref>
    <ref id="bib3">
      <label>3.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zhang</surname><given-names>B</given-names></name>, <name name-style="western"><surname>Horvath</surname><given-names>S</given-names></name></person-group><article-title>A general framework for weighted gene co-expression network analysis</article-title>. <source>Stat Appl Genet Mol Biol</source><year>2005</year>;<volume>4</volume>(<issue>1</issue>):<fpage>Article17</fpage>.<pub-id pub-id-type="pmid">16646834</pub-id></mixed-citation>
    </ref>
    <ref id="bib4">
      <label>4.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Margolin</surname><given-names>AA</given-names></name>, <name name-style="western"><surname>Nemenman</surname><given-names>I</given-names></name>, <name name-style="western"><surname>Basso</surname><given-names>K</given-names></name><etal/></person-group><article-title>ARACNE: an algorithm for the reconstruction of gene regulatory networks in a mammalian cellular context</article-title>. <source>BMC Bioinformatics</source><year>2006</year>;<volume>7</volume>(<issue>suppl 1</issue>):<fpage>S7</fpage>.</mixed-citation>
    </ref>
    <ref id="bib5">
      <label>5.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Meyer</surname><given-names>PE</given-names></name>, <name name-style="western"><surname>Kontos</surname><given-names>K</given-names></name>, <name name-style="western"><surname>Lafitte</surname><given-names>F</given-names></name><etal/></person-group><article-title>Information-theoretic inference of large transcriptional regulatory networks</article-title>. <source>EURASIP J Bioinform Syst Biol</source><year>2007</year>;<fpage>79879</fpage>.<pub-id pub-id-type="pmid">18354736</pub-id></mixed-citation>
    </ref>
    <ref id="bib6">
      <label>6.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Friedman</surname><given-names>N</given-names></name>, <name name-style="western"><surname>Linial</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Nachman</surname><given-names>I</given-names></name><etal/></person-group><article-title>Using Bayesian networks to analyze expression data</article-title>. <source>J Computational Biol</source><year>2000</year>;<volume>7</volume>(<issue>3–4</issue>):<fpage>601</fpage>–<lpage>20</lpage>.</mixed-citation>
    </ref>
    <ref id="bib7">
      <label>7.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zhu</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Chen</surname><given-names>Y</given-names></name>, <name name-style="western"><surname>Leonardson</surname><given-names>AS</given-names></name><etal/></person-group><article-title>Characterizing dynamic changes in the human blood transcriptional network</article-title>. <source>PLoS Comput Biol</source><year>2010</year>;<volume>6</volume>(<issue>2</issue>):<fpage>e1000671</fpage>.<pub-id pub-id-type="pmid">20168994</pub-id></mixed-citation>
    </ref>
    <ref id="bib8">
      <label>8.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zou</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Conzen</surname><given-names>SD</given-names></name></person-group><article-title>A new dynamic Bayesian network (DBN) approach for identifying gene regulatory networks from time course microarray data</article-title>. <source>Bioinformatics</source><year>2005</year>;<volume>21</volume>(<issue>1</issue>):<fpage>71</fpage>–<lpage>79</lpage>.<pub-id pub-id-type="pmid">15308537</pub-id></mixed-citation>
    </ref>
    <ref id="bib9">
      <label>9.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Cao</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Qi</surname><given-names>X</given-names></name>, <name name-style="western"><surname>Zhao</surname><given-names>H</given-names></name></person-group><article-title>Modeling gene regulation networks using ordinary differential equations</article-title>. <source>Methods Mol Biol</source><year>2012</year>;<volume>802</volume>:<fpage>185</fpage>–<lpage>97</lpage>.<pub-id pub-id-type="pmid">22130881</pub-id></mixed-citation>
    </ref>
    <ref id="bib10">
      <label>10.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wu</surname><given-names>H</given-names></name>, <name name-style="western"><surname>Lu</surname><given-names>T</given-names></name>, <name name-style="western"><surname>Xue</surname><given-names>H</given-names></name><etal/></person-group><article-title>Sparse additive ordinary differential equations for dynamic gene regulatory network modeling</article-title>. <source>J Am Stat Assoc</source><year>2014</year>;<volume>109</volume>(<issue>506</issue>):<fpage>700</fpage>–<lpage>16</lpage>.<pub-id pub-id-type="pmid">25061254</pub-id></mixed-citation>
    </ref>
    <ref id="bib11">
      <label>11.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Liu</surname><given-names>L</given-names></name>, <name name-style="western"><surname>Wu</surname><given-names>F</given-names></name>, <name name-style="western"><surname>Zhang</surname><given-names>W</given-names></name></person-group><article-title>A group LASSO-based method for robustly inferring gene regulatory networks from multiple time-course datasets</article-title>. <source>BMC Syst Biol</source><year>2014</year>;<volume>8</volume>(<issue>suppl 3</issue>):<fpage>S1</fpage>.</mixed-citation>
    </ref>
    <ref id="bib12">
      <label>12.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Lo</surname><given-names>K</given-names></name>, <name name-style="western"><surname>Raftery</surname><given-names>AE</given-names></name>, <name name-style="western"><surname>Dombek</surname><given-names>KM</given-names></name><etal/></person-group><article-title>Integrating external biological knowledge in the construction of regulatory networks from time-series expression data</article-title>. <source>BMC Syst Biol</source><year>2012</year>;<volume>6</volume>(<issue>1</issue>):<fpage>101</fpage>.<pub-id pub-id-type="pmid">22898396</pub-id></mixed-citation>
    </ref>
    <ref id="bib13">
      <label>13.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Yeung</surname><given-names>KY</given-names></name>, <name name-style="western"><surname>Dombek</surname><given-names>KM</given-names></name>, <name name-style="western"><surname>Lo</surname><given-names>K</given-names></name><etal/></person-group><article-title>Construction of regulatory networks using expression time-series data of a genotyped population</article-title>. <source>Proc Natl Acad Sci U S A</source><year>2011</year>;<volume>108</volume>(<issue>48</issue>):<fpage>19436</fpage>–<lpage>41</lpage>.<pub-id pub-id-type="pmid">22084118</pub-id></mixed-citation>
    </ref>
    <ref id="bib14">
      <label>14.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Young</surname><given-names>W</given-names></name>, <name name-style="western"><surname>Raftery</surname><given-names>AE</given-names></name>, <name name-style="western"><surname>Yeung</surname><given-names>K</given-names></name></person-group><article-title>Fast Bayesian inference for gene regulatory networks using ScanBMA</article-title>. <source>BMC Syst Biol</source><year>2014</year>;<volume>8</volume>(<issue>1</issue>):<fpage>47</fpage>.<pub-id pub-id-type="pmid">24742092</pub-id></mixed-citation>
    </ref>
    <ref id="bib15">
      <label>15.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Rogers</surname><given-names>S</given-names></name>, <name name-style="western"><surname>Girolami</surname><given-names>M</given-names></name></person-group><article-title>A Bayesian regression approach to the inference of regulatory networks from gene expression data</article-title>. <source>Bioinformatics</source><year>2005</year>;<volume>21</volume>(<issue>14</issue>):<fpage>3131</fpage>–<lpage>7</lpage>.<pub-id pub-id-type="pmid">15879452</pub-id></mixed-citation>
    </ref>
    <ref id="bib16">
      <label>16.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Marbach</surname><given-names>D</given-names></name>, <name name-style="western"><surname>Costello</surname><given-names>JC</given-names></name>, <name name-style="western"><surname>Kuffner</surname><given-names>R</given-names></name><etal/></person-group><article-title>Wisdom of crowds for robust gene network inference</article-title>. <source>Nat Methods</source><year>2012</year>;<volume>9</volume>(<issue>8</issue>):<fpage>796</fpage>–<lpage>804</lpage>.<pub-id pub-id-type="pmid">22796662</pub-id></mixed-citation>
    </ref>
    <ref id="bib17">
      <label>17.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Chen</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Hu</surname><given-names>Z</given-names></name>, <name name-style="western"><surname>Phatak</surname><given-names>M</given-names></name><etal/></person-group><article-title>Genome-wide signatures of transcription factor activity: connecting transcription factors, disease, and small molecules</article-title>. <source>PLoS Comput Biol</source><year>2013</year>;<volume>9</volume>(<issue>9</issue>):<fpage>e1003198</fpage>.<pub-id pub-id-type="pmid">24039560</pub-id></mixed-citation>
    </ref>
    <ref id="bib18">
      <label>18.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Li</surname><given-names>W</given-names></name>, <name name-style="western"><surname>Zhang</surname><given-names>S</given-names></name>, <name name-style="western"><surname>Liu</surname><given-names>C-C</given-names></name><etal/></person-group><article-title>Identifying multi-layer gene regulatory modules from multi-dimensional genomic data</article-title>. <source>Bioinformatics</source><year>2012</year>;<volume>28</volume>(<issue>19</issue>):<fpage>2458</fpage>–<lpage>66</lpage>.<pub-id pub-id-type="pmid">22863767</pub-id></mixed-citation>
    </ref>
    <ref id="bib19">
      <label>19.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zhu</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Zhang</surname><given-names>B</given-names></name>, <name name-style="western"><surname>Smith</surname><given-names>EN</given-names></name><etal/></person-group><article-title>Integrating large-scale functional genomic data to dissect the complexity of yeast regulatory networks</article-title>. <source>Nat Genet</source><year>2008</year>;<volume>40</volume>(<issue>7</issue>):<fpage>854</fpage>–<lpage>61</lpage>.<pub-id pub-id-type="pmid">18552845</pub-id></mixed-citation>
    </ref>
    <ref id="bib20">
      <label>20.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zhu</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Sova</surname><given-names>P</given-names></name>, <name name-style="western"><surname>Xu</surname><given-names>Q</given-names></name><etal/></person-group><article-title>Stitching together multiple data dimensions reveals interacting metabolomic and transcriptomic networks that modulate cell regulation</article-title>. <source>PLoS Biol</source><year>2012</year>;<volume>10</volume>(<issue>4</issue>):<fpage>e1001301</fpage>.<pub-id pub-id-type="pmid">22509135</pub-id></mixed-citation>
    </ref>
    <ref id="bib21">
      <label>21.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Raftery</surname><given-names>AE</given-names></name></person-group><article-title>Bayesian model selection in social research</article-title>. <source>Sociol Methodol</source><year>1995</year>;<volume>25</volume>:<fpage>111</fpage>–<lpage>93</lpage>.</mixed-citation>
    </ref>
    <ref id="bib22">
      <label>22.</label>
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Yeung</surname><given-names>KY</given-names></name>, <name name-style="western"><surname>Fraley</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Young</surname><given-names>WC</given-names></name><etal/></person-group><article-title>Bayesian model averaging methods and R package for gene network construction</article-title>. In: <source>Big Data Analytic Technology For Bioinformatics and Health Informatics (KDDBHI), workshop at the 20th ACM SIGKDD Conference on Knowledge Discovery and Data Mining (KDD)</source>, <publisher-loc>New York, NY</publisher-loc>, <year>2014</year><comment>Available at: <ext-link ext-link-type="uri" xlink:href="https://sites.google.com/site/kddbhi/kddbhi2014/">https://sites.google.com/site/kddbhi/kddbhi2014/</ext-link></comment>.</mixed-citation>
    </ref>
    <ref id="bib23">
      <label>23.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Hung</surname><given-names>LH</given-names></name>, <name name-style="western"><surname>Shi</surname><given-names>K</given-names></name>, <name name-style="western"><surname>Wu</surname><given-names>M</given-names></name><etal/></person-group><article-title>Supporting data for “fastBMA: scalable network inference and transitive reduction.”</article-title><source>GigaScience Database</source><year>2017.</year><comment><ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.5524/100338">http://dx.doi.org/10.5524/100338</ext-link>. Accessed 3 September 2017</comment>.</mixed-citation>
    </ref>
    <ref id="bib24">
      <label>24.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><collab>networkBMA</collab></person-group><comment><ext-link ext-link-type="uri" xlink:href="https://www.bioconductor.org/packages/release/bioc/html/networkBMA.html">https://www.bioconductor.org/packages/release/bioc/html/networkBMA.html</ext-link>. Accessed 3 September 2017</comment>.</mixed-citation>
    </ref>
    <ref id="bib25">
      <label>25.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><collab>fastBMA docker image</collab></person-group><comment><ext-link ext-link-type="uri" xlink:href="https://hub.docker.com/r/biodepot/fastbma/">https://hub.docker.com/r/biodepot/fastbma/</ext-link>. Accessed 3 September 2017</comment>.</mixed-citation>
    </ref>
    <ref id="bib26">
      <label>26.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Guelzim</surname><given-names>N</given-names></name>, <name name-style="western"><surname>Bottani</surname><given-names>S</given-names></name>, <name name-style="western"><surname>Bourgine</surname><given-names>P</given-names></name><etal/></person-group><article-title>Topological and causal structure of the yeast transcriptional regulatory network</article-title>. <source>Nat Genet</source><year>2002</year>;<volume>31</volume>(<issue>1</issue>):<fpage>60</fpage>–<lpage>63</lpage>.<pub-id pub-id-type="pmid">11967534</pub-id></mixed-citation>
    </ref>
    <ref id="bib27">
      <label>27.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Annest</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Bumgarner</surname><given-names>RE</given-names></name>, <name name-style="western"><surname>Raftery</surname><given-names>AE</given-names></name><etal/></person-group><article-title>Iterative Bayesian model averaging: a method for the application of survival analysis to high-dimensional microarray data</article-title>. <source>BMC Bioinformatics</source><year>2009</year>;<volume>10</volume><issue>1</issue>:<fpage>72</fpage>.<pub-id pub-id-type="pmid">19245714</pub-id></mixed-citation>
    </ref>
    <ref id="bib28">
      <label>28.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Schwarz</surname><given-names>G</given-names></name></person-group><article-title>Estimating the dimension of a model</article-title>. <source>Ann Stat</source><year>1978</year>;<volume>6</volume>(<issue>2</issue>):<fpage>461</fpage>–<lpage>4</lpage>.</mixed-citation>
    </ref>
    <ref id="bib29">
      <label>29.</label>
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Zellner</surname><given-names>A.</given-names></name></person-group><article-title>On assessing prior distributions and Bayesian regression analysis with g-prior distributions</article-title>. In: <person-group person-group-type="editor"><name name-style="western"><surname>Goel</surname><given-names>PK</given-names></name>, <name name-style="western"><surname>Zellner</surname><given-names>A</given-names></name></person-group>, eds. <source>Bayesian inference and decision techniques: essays in honor of Bruno de Finetti</source>, <volume>vol. 6</volume><publisher-loc>Amsterdam</publisher-loc>: <publisher-name>North Holland</publisher-name>; <year>1986</year>:<fpage>233</fpage>–<lpage>43</lpage>.</mixed-citation>
    </ref>
    <ref id="bib30">
      <label>30.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Furnival</surname><given-names>GM</given-names></name>, <name name-style="western"><surname>Wilson</surname><given-names>RW</given-names></name></person-group><article-title>Regressions by leaps and bounds</article-title>. <source>Technometrics</source><year>1974</year>;<volume>16</volume><issue>4</issue>:<fpage>499</fpage>–<lpage>511</lpage>.</mixed-citation>
    </ref>
    <ref id="bib31">
      <label>31.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Madigan</surname><given-names>D</given-names></name>, <name name-style="western"><surname>Raftery</surname><given-names>AE</given-names></name></person-group><article-title>Model selection and accounting for model uncertainty in graphical models using Occam's window</article-title>. <source>J Am Stat Assoc</source><year>1994</year>;<volume>89</volume><issue>428</issue>:<fpage>1535</fpage>–<lpage>46</lpage>.</mixed-citation>
    </ref>
    <ref id="bib32">
      <label>32.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wagner</surname><given-names>A</given-names></name></person-group><article-title>How to reconstruct a large genetic network from n gene perturbations in fewer than n2 easy steps</article-title>. <source>Bioinformatics</source><year>2001</year>;<volume>17</volume>(<issue>12</issue>):<fpage>1183</fpage>–<lpage>97</lpage>.<pub-id pub-id-type="pmid">11751227</pub-id></mixed-citation>
    </ref>
    <ref id="bib33">
      <label>33.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Bosnacki</surname><given-names>D</given-names></name>, <name name-style="western"><surname>Odenbrett</surname><given-names>MR</given-names></name>, <name name-style="western"><surname>Wijs</surname><given-names>A</given-names></name><etal/></person-group><article-title>Efficient reconstruction of biological networks via transitive reduction on general purpose graphics processors</article-title>. <source>BMC Bioinformatics</source><year>2012</year>;<volume>13</volume><issue>1</issue>:<fpage>281</fpage>.<pub-id pub-id-type="pmid">23110660</pub-id></mixed-citation>
    </ref>
    <ref id="bib34">
      <label>34.</label>
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Brent</surname><given-names>RP.</given-names></name></person-group><source>Algorithms for Minimization Without Derivatives</source>. <publisher-loc>Englewood Cliffs, NJ</publisher-loc>: <publisher-name>Prentice Hall</publisher-name>; <year>1973</year>.</mixed-citation>
    </ref>
    <ref id="bib35">
      <label>35.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><collab>OpenMP</collab></person-group><comment><ext-link ext-link-type="uri" xlink:href="http://www.openmp.org/">http://www.openmp.org/</ext-link>. Accessed 3 September 2017</comment>.</mixed-citation>
    </ref>
    <ref id="bib36">
      <label>36.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><collab>MPICH</collab></person-group><comment><ext-link ext-link-type="uri" xlink:href="https://www.mpich.org/">https://www.mpich.org/</ext-link>. Accessed 3 September 2017</comment>.</mixed-citation>
    </ref>
    <ref id="bib37">
      <label>37.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><collab>qrupdate</collab></person-group><comment><ext-link ext-link-type="uri" xlink:href="http://sourceforge.net/projects/qrupdate/">http://sourceforge.net/projects/qrupdate/</ext-link>. Acce-ssed 3 September 2017.</comment>.</mixed-citation>
    </ref>
    <ref id="bib38">
      <label>38.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><collab>OpenBLAS</collab></person-group><comment><ext-link ext-link-type="uri" xlink:href="http://www.openblas.net">http://www.openblas.net</ext-link>. Accessed 3 September 2017</comment>.</mixed-citation>
    </ref>
    <ref id="bib39">
      <label>39.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Bloom</surname><given-names>BH</given-names></name></person-group><article-title>Space/time trade-offs in hash coding with allowable errors</article-title>. <source>Commun ACM</source><year>1970</year>;<volume>13</volume>(<issue>7</issue>):<fpage>422</fpage>–<lpage>6</lpage>.</mixed-citation>
    </ref>
    <ref id="bib40">
      <label>40.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Melsted</surname><given-names>P</given-names></name>, <name name-style="western"><surname>Pritchard</surname><given-names>JK</given-names></name></person-group><article-title>Efficient counting of k-mers in DNA sequences using a bloom filter</article-title>. <source>BMC Bioinformatics</source><year>2011</year>;<volume>12</volume><issue>1</issue>:<fpage>333</fpage>.<pub-id pub-id-type="pmid">21831268</pub-id></mixed-citation>
    </ref>
    <ref id="bib41">
      <label>41.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><collab>smhasher</collab></person-group><comment><ext-link ext-link-type="uri" xlink:href="https://github.com/aappleby/smhasher">https://github.com/aappleby/smhasher</ext-link>. Access-ed 3 September 2017</comment>.</mixed-citation>
    </ref>
    <ref id="bib42">
      <label>42.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Faith</surname><given-names>JJ</given-names></name>, <name name-style="western"><surname>Hayete</surname><given-names>B</given-names></name>, <name name-style="western"><surname>Thaden</surname><given-names>JT</given-names></name><etal/></person-group><article-title>Large-scale mapping and validation of <italic>Escherichia coli</italic> transcriptional regulation from a compendium of expression profiles</article-title>. <source>PLoS Biol</source><year>2007</year>;<volume>5</volume>(<issue>1</issue>):<fpage>e8</fpage>.<pub-id pub-id-type="pmid">17214507</pub-id></mixed-citation>
    </ref>
    <ref id="bib43">
      <label>43.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Tibshirani</surname><given-names>R.</given-names></name></person-group><article-title>Regression shrinkage and selection via the Lasso</article-title>. <source>J Royal Stat Soc Series B (Methodol)</source><year>1996</year>;<volume>58</volume>(<issue>1</issue>):<fpage>267</fpage>–<lpage>88</lpage>.</mixed-citation>
    </ref>
    <ref id="bib44">
      <label>44.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Huynh-Thu</surname><given-names>VA</given-names></name>, <name name-style="western"><surname>Irrthum</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Wehenkel</surname><given-names>L</given-names></name><etal/></person-group><article-title>Inferring regulatory networks from expression data using tree-based methods</article-title>. <source>PLoS One</source><year>2010</year>;<volume>5</volume>(<issue>9</issue>).</mixed-citation>
    </ref>
    <ref id="bib45">
      <label>45.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Huynh-Thu</surname><given-names>VA</given-names></name>, <name name-style="western"><surname>Sanguinetti</surname><given-names>G</given-names></name></person-group><article-title>Combining tree-based and dynamical systems for the inference of gene regulatory networks</article-title>. <source>Bioinformatics</source><year>2015</year>;<volume>31</volume>(<issue>10</issue>):<fpage>1614</fpage>–<lpage>22</lpage>.<pub-id pub-id-type="pmid">25573916</pub-id></mixed-citation>
    </ref>
    <ref id="bib46">
      <label>46.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Stolovitzky</surname><given-names>G</given-names></name>, <name name-style="western"><surname>Monroe</surname><given-names>D</given-names></name>, <name name-style="western"><surname>Califano</surname><given-names>A</given-names></name></person-group><article-title>Dialogue on reverse-engineering assessment and methods: the DREAM of high-throughput pathway inference</article-title>. <source>Ann N Y Acad Sci</source><year>2007</year>;<volume>1115</volume><issue>1</issue>:<fpage>1</fpage>–<lpage>22</lpage>.<pub-id pub-id-type="pmid">17925349</pub-id></mixed-citation>
    </ref>
    <ref id="bib47">
      <label>47.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Prill</surname><given-names>RJ</given-names></name>, <name name-style="western"><surname>Saez-Rodriguez</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Alexopoulos</surname><given-names>LG</given-names></name><etal/></person-group><article-title>Crowdsourcing network inference: the DREAM predictive signaling network challenge</article-title>. <source>Sci Signal</source><year>2011</year>;<volume>4</volume>(<issue>189</issue>):<fpage>mr7</fpage>.<pub-id pub-id-type="pmid">21900204</pub-id></mixed-citation>
    </ref>
    <ref id="bib48">
      <label>48.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Marbach</surname><given-names>D</given-names></name>, <name name-style="western"><surname>Prill</surname><given-names>RJ</given-names></name>, <name name-style="western"><surname>Schaffter</surname><given-names>T</given-names></name><etal/></person-group><article-title>Revealing strengths and weaknesses of methods for gene network inference</article-title>. <source>Proc Natl Acad Sci U S A</source><year>2010</year>;<volume>107</volume>(<issue>14</issue>):<fpage>6286</fpage>–<lpage>91</lpage>.<pub-id pub-id-type="pmid">20308593</pub-id></mixed-citation>
    </ref>
    <ref id="bib49">
      <label>49.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Marbach</surname><given-names>D</given-names></name>, <name name-style="western"><surname>Schaffter</surname><given-names>T</given-names></name>, <name name-style="western"><surname>Mattiussi</surname><given-names>C</given-names></name><etal/></person-group><article-title>Generating realistic in silico gene networks for performance assessment of reverse engineering methods</article-title>. <source>J Comp Biol</source><year>2009</year>;<volume>16</volume>(<issue>2</issue>):<fpage>229</fpage>–<lpage>39</lpage>.</mixed-citation>
    </ref>
    <ref id="bib50">
      <label>50.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Prill</surname><given-names>RJ</given-names></name>, <name name-style="western"><surname>Marbach</surname><given-names>D</given-names></name>, <name name-style="western"><surname>Saez-Rodriguez</surname><given-names>J</given-names></name><etal/></person-group><article-title>Towards a rigorous assessment of systems biology models: the DREAM3 challenges</article-title>. <source>PLoS One</source><year>2010</year>;<volume>5</volume>(<issue>2</issue>):<fpage>e9202</fpage>.<pub-id pub-id-type="pmid">20186320</pub-id></mixed-citation>
    </ref>
    <ref id="bib51">
      <label>51.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Yeung</surname><given-names>KY</given-names></name>, <name name-style="western"><surname>Dombek</surname><given-names>KM</given-names></name>, <name name-style="western"><surname>Lo</surname><given-names>K</given-names></name><etal/></person-group><article-title>Construction of regulatory networks using expression time-series data of a genotyped population</article-title>. <source>Proc Natl Acad Sci U S A</source><year>2011</year>;<volume>108</volume>(<issue>48</issue>):<fpage>19436</fpage>–<lpage>41</lpage>.<pub-id pub-id-type="pmid">22084118</pub-id></mixed-citation>
    </ref>
    <ref id="bib52">
      <label>52.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Teixeira</surname><given-names>MC</given-names></name></person-group><article-title>The YEASTRACT database: a tool for the analysis of transcription regulatory associations in Saccharomyces cerevisiae</article-title>. <source>Nucl Acids Res</source><year>2006</year>;<volume>34</volume>(<issue>90001</issue>):<fpage>D446</fpage>–<lpage>51</lpage>.<pub-id pub-id-type="pmid">16381908</pub-id></mixed-citation>
    </ref>
    <ref id="bib53">
      <label>53.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Trapnell</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Cacchiarelli</surname><given-names>D</given-names></name>, <name name-style="western"><surname>Grimsby</surname><given-names>J</given-names></name><etal/></person-group><article-title>The dynamics and regulators of cell fate decisions are revealed by pseudotemporal ordering of single cells</article-title>. <source>Nat Biotechnol</source><year>2014</year>;<volume>32</volume>(<issue>4</issue>):<fpage>381</fpage>–<lpage>6</lpage>.<pub-id pub-id-type="pmid">24658644</pub-id></mixed-citation>
    </ref>
    <ref id="bib54">
      <label>54.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><collab>fastROCPRC</collab></person-group><comment><ext-link ext-link-type="uri" xlink:href="https://github.com/lhhunghimself/fastROCPRC">https://github.com/lhhunghimself/fastROCPRC</ext-link>. Accessed 3 September 2017</comment>.</mixed-citation>
    </ref>
    <ref id="bib55">
      <label>55.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Friedman</surname><given-names>JH</given-names></name>, <name name-style="western"><surname>Hastie</surname><given-names>T</given-names></name>, <name name-style="western"><surname>Tibshirani</surname><given-names>R</given-names></name></person-group><article-title>Regularization paths for generalized linear models via coordinate descent</article-title>. <source>J Stat Softw</source><year>2010</year>;<volume>33</volume>(<issue>1</issue>):<fpage>1</fpage>–<lpage>22</lpage>.<pub-id pub-id-type="pmid">20808728</pub-id></mixed-citation>
    </ref>
    <ref id="bib56">
      <label>56.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><collab>DREAM4</collab></person-group><comment><ext-link ext-link-type="uri" xlink:href="https://www.synapse.org/#!Synapse:syn2825304/wiki/71131">https://www.synapse.org/#!Synapse:syn2825304/wiki/71131</ext-link>. Accessed 3 September 2017</comment>.</mixed-citation>
    </ref>
  </ref-list>
</back>

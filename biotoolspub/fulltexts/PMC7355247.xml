<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">7355247</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btaa449</article-id>
    <article-id pub-id-type="publisher-id">btaa449</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Genomic Variation Analysis</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Identifying tumor clones in sparse single-cell mutation data</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Myers</surname>
          <given-names>Matthew A</given-names>
        </name>
        <xref ref-type="author-notes" rid="btaa449-FM1"/>
        <xref ref-type="aff" rid="btaa449-aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Zaccaria</surname>
          <given-names>Simone</given-names>
        </name>
        <xref ref-type="author-notes" rid="btaa449-FM1"/>
        <xref ref-type="aff" rid="btaa449-aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">http://orcid.org/0000-0003-1274-048X</contrib-id>
        <name>
          <surname>Raphael</surname>
          <given-names>Benjamin J</given-names>
        </name>
        <xref ref-type="corresp" rid="btaa449-cor1"/>
        <xref ref-type="aff" rid="btaa449-aff1"/>
        <!--<email>braphael@princeton.edu</email>-->
      </contrib>
    </contrib-group>
    <aff id="btaa449-aff1"><institution>Department of Computer Science, Princeton University</institution>, Princeton, NJ 08544, <country country="US">USA</country></aff>
    <author-notes>
      <fn id="btaa449-FM1">
        <p>The authors wish it to be known that, in their opinion, Matthew A. Myers and Simone Zaccaria should be regarded as Joint First Authors.</p>
      </fn>
      <corresp id="btaa449-cor1">To whom correspondence should be addressed. E-mail: <email>braphael@princeton.edu</email></corresp>
    </author-notes>
    <pub-date pub-type="ppub">
      <month>7</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2020-07-13">
      <day>13</day>
      <month>7</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>13</day>
      <month>7</month>
      <year>2020</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. -->
    <volume>36</volume>
    <issue>Suppl 1</issue>
    <issue-title>ISMB 2020 Proceedings</issue-title>
    <fpage>i186</fpage>
    <lpage>i193</lpage>
    <permissions>
      <copyright-statement>© The Author(s) 2020. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2020</copyright-year>
      <license license-type="cc-by-nc" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">http://creativecommons.org/licenses/by-nc/4.0/</ext-link>), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.com</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btaa449.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>Recent single-cell DNA sequencing technologies enable whole-genome sequencing of hundreds to thousands of individual cells. However, these technologies have ultra-low sequencing coverage (&lt;0.5× per cell) which has limited their use to the analysis of large copy-number aberrations (CNAs) in individual cells. While CNAs are useful markers in cancer studies, single-nucleotide mutations are equally important, both in cancer studies and in other applications. However, ultra-low coverage sequencing yields single-nucleotide mutation data that are too sparse for current single-cell analysis methods.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>We introduce SBMClone, a method to infer clusters of cells, or clones, that share groups of somatic single-nucleotide mutations. SBMClone uses a stochastic block model to overcome sparsity in ultra-low coverage single-cell sequencing data, and we show that SBMClone accurately infers the true clonal composition on simulated datasets with coverage at low as <inline-formula id="IE2"><mml:math id="IM1"><mml:mrow><mml:mn>0.2</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula>. We applied SBMClone to single-cell whole-genome sequencing data from two breast cancer patients obtained using two different sequencing technologies. On the first patient, sequenced using the 10X Genomics CNV solution with sequencing coverage <inline-formula id="IE3"><mml:math id="IM2"><mml:mrow><mml:mo>≈</mml:mo><mml:mn>0.03</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula>, SBMClone recovers the major clonal composition when incorporating a small amount of additional information. On the second patient, where pre- and post-treatment tumor samples were sequenced using DOP-PCR with sequencing coverage <inline-formula id="IE4"><mml:math id="IM3"><mml:mrow><mml:mo>≈</mml:mo><mml:mn>0.5</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula>, SBMClone shows that tumor cells are present in the post-treatment sample, contrary to published analysis of this dataset.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p>SBMClone is available on the GitHub repository <ext-link ext-link-type="uri" xlink:href="https://github.com/raphael-group/SBMClone">https://github.com/raphael-group/SBMClone</ext-link>.</p>
      </sec>
      <sec id="s5">
        <title>Supplementary information</title>
        <p><xref ref-type="supplementary-material" rid="sup1">Supplementary data</xref> are available at <italic>Bioinformatics</italic> online.</p>
      </sec>
    </abstract>
    <counts>
      <page-count count="8"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Single-cell DNA sequencing technologies that measure the genomes of individual cells are increasingly being used in cancer, metagenomics and other applications (<xref rid="btaa449-B15" ref-type="bibr">Gawad <italic>et al.</italic>, 2016</xref>). In cancer, single-cell DNA sequencing has been used to study the somatic evolution of tumors and identify distinct groups of cells, or clones, that are sensitive/resistant to treatment (<xref rid="btaa449-B1" ref-type="bibr">10X Genomics, 2019</xref>; <xref rid="btaa449-B21" ref-type="bibr">Laks <italic>et al.</italic>, 2019</xref>; <xref rid="btaa449-B27" ref-type="bibr">Navin, 2015</xref>; <xref rid="btaa449-B28" ref-type="bibr">Navin <italic>et al.</italic>, 2011</xref>; <xref rid="btaa449-B39" ref-type="bibr">Wang <italic>et al.</italic>, 2014</xref>). While single-cell DNA sequencing enables the measurement of genomic changes in individual cells, current single-cell sequencing technologies have limited accuracy and fidelity. Most single-cell DNA sequencing technologies rely on whole-genome amplification procedures like MDA or MALBAC that result in DNA amplification errors, undersampling and sequencing errors which complicate the identification of single-nucleotide mutations (<xref rid="btaa449-B15" ref-type="bibr">Gawad <italic>et al.</italic>, 2016</xref>; <xref rid="btaa449-B27" ref-type="bibr">Navin, 2015</xref>).</p>
    <p>To address the limitations in identifying mutations in single-cell sequencing data, a number of computational methods have been developed to improve mutation calling by grouping cells with similar mutational profiles (<xref rid="btaa449-B6" ref-type="bibr">Borgsmueller <italic>et al.</italic>, 2020</xref>; <xref rid="btaa449-B34" ref-type="bibr">Roth <italic>et al.</italic>, 2016</xref>) or shared cellular lineage (<xref rid="btaa449-B8" ref-type="bibr">Ciccolella <italic>et al.</italic>, 2018</xref>; <xref rid="btaa449-B12" ref-type="bibr">El-Kebir, 2018</xref>; <xref rid="btaa449-B17" ref-type="bibr">Jahn <italic>et al.</italic>, 2016</xref>; <xref rid="btaa449-B25" ref-type="bibr">Malikic <italic>et al.</italic>, 2019</xref>; <xref rid="btaa449-B26" ref-type="bibr">McPherson <italic>et al.</italic>, 2016</xref>; <xref rid="btaa449-B33" ref-type="bibr">Ross and Markowetz, 2016</xref>; <xref rid="btaa449-B35" ref-type="bibr">Satas <italic>et al.</italic>, 2019</xref>; <xref rid="btaa449-B37" ref-type="bibr">Singer <italic>et al.</italic>, 2018</xref>; <xref rid="btaa449-B42" ref-type="bibr">Zafar <italic>et al.</italic>, 2019</xref>). These methods have primarily been applied to analyze single-cell DNA sequencing data obtained from limited genomic regions: e.g. Single Cell Genotyper (SCG; <xref rid="btaa449-B34" ref-type="bibr">Roth <italic>et al.</italic>, 2016</xref>) and Bayesian non-parametric clustering (BnpC; <xref rid="btaa449-B6" ref-type="bibr">Borgsmueller <italic>et al.</italic>, 2020</xref>) have been applied to targeted single-cell sequencing datasets with up to 420 cells and up to 105 mutations (<xref rid="btaa449-B14" ref-type="bibr">Gawad <italic>et al.</italic>, 2014</xref>; <xref rid="btaa449-B26" ref-type="bibr">McPherson <italic>et al.</italic>, 2016</xref>), while BnpC and SCITE (<xref rid="btaa449-B17" ref-type="bibr">Jahn <italic>et al.</italic>, 2016</xref>) have been applied to whole-exome single-cell sequencing datasets with up to 65 cells and up to 79 mutations (<xref rid="btaa449-B24" ref-type="bibr">Leung <italic>et al.</italic>, 2017</xref>; <xref rid="btaa449-B40" ref-type="bibr">Wu <italic>et al.</italic>, 2017</xref>).</p>
    <p>Recently, a number of new single-cell DNA sequencing technologies have been introduced that produce ultra-low coverage whole-genome sequencing data from hundreds to thousands of individual cells, with reads distributed approximately uniformly across the genome of each cell. These technologies include degenerate-oligonucleotide-primed polymerase chain reaction (DOP-PCR; <xref rid="btaa449-B28" ref-type="bibr">Navin <italic>et al.</italic>, 2011</xref>) with coverage of <inline-formula id="IE5"><mml:math id="IM4"><mml:mrow><mml:mn>0.1</mml:mn><mml:mo>−</mml:mo><mml:mn>0.5</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> per cell, and the 10X Genomics Chromium CNV solution (<xref rid="btaa449-B1" ref-type="bibr">10X Genomics, 2019</xref>) and Direct Library Preparation (<xref rid="btaa449-B21" ref-type="bibr">Laks <italic>et al.</italic>, 2019</xref>) with coverage of <inline-formula id="IE6"><mml:math id="IM5"><mml:mrow><mml:mn>0.02</mml:mn><mml:mo>−</mml:mo><mml:mn>0.05</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> per cell. The initial application of these technologies has been to identify large (&gt;1 Mb) copy-number aberrations (CNAs) in individual cells, a reasonable goal with such low coverage sequencing. Recent studies (<xref rid="btaa449-B21" ref-type="bibr">Laks <italic>et al.</italic>, 2019</xref>; <xref rid="btaa449-B41" ref-type="bibr">Zaccaria and Raphael, 2019</xref>) showed that it was possible to identify single-nucleotide variants (SNVs) in ultra-low coverage DNA sequencing data by merging a large number of single cells with the same CNAs into a pseudo-bulk sample. However, CNAs will not always identify every distinct clone in a sample: some clones may have the same CNAs, or CNAs may not be present in any cells. In these cases, the previous merging approaches would fail to recover the complete clonal composition and may not reliably measure SNVs.</p>
    <p>In this work, we aim to address a more difficult question: is it possible to detect SNVs directly from ultra-low coverage whole-genome single-cell sequencing data and to partition cells into clones according to their shared mutations? Obviously, one cannot expect to reliably identify single-nucleotide mutations in individual cells with sequencing coverage <inline-formula id="IE7"><mml:math id="IM6"><mml:mrow><mml:mo>≈</mml:mo><mml:mn>0.5</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula>. However, when reasonably sized clones are uniquely distinguished by a sufficiently large number of mutations, one may expect that cells from the same clone share a higher number of mutations than cells from different clones. We formulate this problem as the clone block inference (CBI) problem, where we combine sets of cells which share the same set of mutations into <italic>blocks</italic>. This problem is closely related to several well-studied problems in computer science, including co-clustering (<xref rid="btaa449-B11" ref-type="bibr">Dhillon <italic>et al.</italic>, 2003</xref>; <xref rid="btaa449-B20" ref-type="bibr">Kumar <italic>et al.</italic>, 2011</xref>), spectral clustering (<xref rid="btaa449-B10" ref-type="bibr">Dhillon, 2001</xref>; <xref rid="btaa449-B43" ref-type="bibr">Zha <italic>et al.</italic>, 2001</xref>) and community detection (<xref rid="btaa449-B4" ref-type="bibr">Alzahrani and Horadam, 2016</xref>; <xref rid="btaa449-B13" ref-type="bibr">Fortunato and Hric, 2016</xref>). We show how to solve this problem by inferring a stochastic block model (SBM) (<xref rid="btaa449-B18" ref-type="bibr">Karrer and Newman, 2011</xref>) that describes the data. This approach is substantially different from existing single-cell algorithms which focus either on clustering cells according to their mutation profiles or on clustering mutations according to the cells that contain them. With sparse mutation data, neither the cell nor mutation signal is sufficiently strong, but by simultaneously analyzing both cells and mutations, we are able to aggregate the two weaker signals into a stronger signal and recover a block structure.</p>
    <p>We introduce SBMClone, a method that uses SBM inference algorithms (<xref rid="btaa449-B30" ref-type="bibr">Peixoto, 2014a</xref>, <xref rid="btaa449-B31" ref-type="bibr">b</xref>) to infer the clonal composition from single-cell whole-genome sequencing data. More specifically, SBMClone uses the measurements from <italic>n</italic> single-nucleotide mutations across <italic>m</italic> single cells to identify clones, which are subpopulation of cells with the same complements of mutations, and clusters of mutations that are present in the same clones. To assess the performance of SBMClone, we generated a diverse collection of simulated data using different parameters and experimental settings that mimic the features of existing whole-genome single-cell sequencing technologies with ultra-low coverage. We show that SBMClone can accurately recover the clonal composition in sequencing data with coverage as low as <inline-formula id="IE8"><mml:math id="IM7"><mml:mrow><mml:mn>0.2</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula>, while three existing methods for single-cell mutation analysis—SCG (<xref rid="btaa449-B34" ref-type="bibr">Roth <italic>et al.</italic>, 2016</xref>), SCITE (<xref rid="btaa449-B17" ref-type="bibr">Jahn <italic>et al.</italic>, 2016</xref>) and BnpC (<xref rid="btaa449-B6" ref-type="bibr">Borgsmueller <italic>et al.</italic>, 2020</xref>)—cannot. We used SBMClone to analyze single-cell whole-genome sequencing data from two breast cancer patients (<xref rid="btaa449-B1" ref-type="bibr">10X Genomics, 2019</xref>; <xref rid="btaa449-B19" ref-type="bibr">Kim <italic>et al.</italic>, 2018</xref>). On the first patient, where <inline-formula id="IE9"><mml:math id="IM8"><mml:mrow><mml:mn>4</mml:mn><mml:mo> </mml:mo><mml:mn>085</mml:mn></mml:mrow></mml:math></inline-formula> cells were sequenced using the 10X Chromium platform with ultra-low coverage (<inline-formula id="IE10"><mml:math id="IM9"><mml:mrow><mml:mo>≈</mml:mo><mml:mn>0.03</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula>), SBMClone recovers the major clonal composition consistent with previous analysis when a small amount of additional information is incorporated. On the second patient, where 90 cells were sequenced using DOP-PCR with coverage <inline-formula id="IE11"><mml:math id="IM10"><mml:mrow><mml:mo>≈</mml:mo><mml:mn>0.5</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula>, we show that SBMClone identifies tumor cells present in the post-treatment sample, contrary to the published analysis of this dataset using CNAs only. By jointly clustering both cells and mutations, SBMClone enables the accurate inference of clonal composition using single-nucleotide mutations in ultra-low coverage single-cell whole-genome sequencing data.</p>
  </sec>
  <sec>
    <title>2 Materials and methods</title>
    <p>We measure mutations at <italic>n</italic> genomic loci in <italic>m</italic> evolutionarily related single cells using ultra-low-coverage (<inline-formula id="IE12"><mml:math id="IM11"><mml:mrow><mml:mo>≈</mml:mo><mml:mn>0.5</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula>) DNA sequencing. Because of this ultra-low coverage, there is substantial uncertainty in the detection of any particular mutation in any particular cell. In particular, most mutated locations will have no more than one sequencing read that aligns to the location. If this read contains the mutation, we may assume there is a reasonable chance that the cell has the mutation (with a small probability of being incorrect due to sequencing errors). However, if the sequencing read does not contain the mutation, we cannot be certain of the mutation status since generally there is more than one copy of a locus; e.g., there are two copies of all diploid regions of the human genome. We represent our measurements and the associated uncertainty using an <italic>m </italic>×<italic> n mutation matrix</italic> <inline-formula id="IE13"><mml:math id="IM12"><mml:mrow><mml:mi>D</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> where <inline-formula id="IE14"><mml:math id="IM13"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> if we observe a read in cell <italic>i</italic> containing the mutation <italic>j</italic> and <inline-formula id="IE15"><mml:math id="IM14"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo></mml:mrow></mml:math></inline-formula>? otherwise (<xref ref-type="fig" rid="btaa449-F1">Fig. 1</xref>). <italic>D</italic> is an <italic>extremely</italic> sparse matrix: on the 10X Genomics Chromium data studied below, only <inline-formula id="IE16"><mml:math id="IM15"><mml:mrow><mml:mo>≈</mml:mo><mml:mn>0.11</mml:mn></mml:mrow></mml:math></inline-formula>% of entries are 1s.
</p>
    <fig id="btaa449-F1" orientation="portrait" position="float">
      <label>Fig. 1.</label>
      <caption>
        <p>SBMClone solves the CBI problem using an SBM. (Top) An example mutation matrix <italic>D</italic> with <italic>m</italic> cells (rows) and <italic>n</italic> mutations (columns) is composed of entries with either 1 or ‘?’ to indicate the measurement (black square) or lack of measurement (white square) of a mutation in each cell. The goal of the CBI problem is to infer the rearrangement of the rows and columns of <italic>D</italic> that form the inferred block matrix <inline-formula id="IE17"><mml:math id="IM16"><mml:mrow><mml:msub><mml:mrow><mml:mover accent="true"><mml:mi>D</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mo>ℓ</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> where rows are partitioned into <italic>k</italic> row blocks <inline-formula id="IE18"><mml:math id="IM17"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>A</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> (<italic>k</italic> = 6 here), columns are partitioned into <inline-formula id="IE19"><mml:math id="IM18"><mml:mo>ℓ</mml:mo></mml:math></inline-formula> column blocks <inline-formula id="IE20"><mml:math id="IM19"><mml:mrow><mml:msub><mml:mi>B</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>B</mml:mi><mml:mo>ℓ</mml:mo></mml:msub></mml:mrow></mml:math></inline-formula> (<inline-formula id="IE21"><mml:math id="IM20"><mml:mrow><mml:mo>ℓ</mml:mo><mml:mo>=</mml:mo><mml:mn>7</mml:mn></mml:mrow></mml:math></inline-formula> here), and each block of <inline-formula id="IE22"><mml:math id="IM21"><mml:mrow><mml:mover accent="true"><mml:mi>D</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:mrow></mml:math></inline-formula> has either high (many black squares) or low (no black squares) proportions of 1s. (Bottom left) SBMClone uses an SBM which is a generative model parameterized by the block probability matrix <inline-formula id="IE23"><mml:math id="IM22"><mml:mrow><mml:mi>P</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula>. Each block probability <inline-formula id="IE24"><mml:math id="IM23"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> indicates the expected proportion of 1s within the block composed of the cells in row block <italic>A<sub>r</sub></italic> and the mutations in column block <italic>B<sub>s</sub></italic>. (Bottom right) The mutation matrix <italic>D</italic> has a block structure because every row block <italic>A<sub>r</sub></italic> corresponds to a clone, which accumulate clusters of mutations that correspond to every column block <italic>B<sub>s</sub></italic>; this evolutionary process is described as the clone tree <italic>T</italic> where every node correspond to a clone and every edge is labeled by a mutation cluster </p>
      </caption>
      <graphic xlink:href="btaa449f1"/>
    </fig>
    <p>Although the mutation matrix <italic>D</italic> is sparse, the shared evolutionary history of the cells imposes structure on <italic>D</italic>. Specifically, there is a phylogenetic tree that describes the ancestral relationships between cells. At single-cell resolution, each node of this phylogenetic tree is a cell (either from the present time or ancestral) and each edge is labeled by the mutation(s) that distinguish the parental cell from the child cell. With ultra-low-coverage data, we have no hope of reconstructing this single-cell tree. (Even with higher-coverage single-cell sequencing data, it is often not possible to derive a fully resolved tree of single cells due to allelic dropout. For example, SCITE (<xref rid="btaa449-B17" ref-type="bibr">Jahn <italic>et al.</italic>, 2016</xref>), a method for inferring a phylogenetic tree from single-cell tumor DNA sequencing data, introduces the mutation tree to address uncertainty in the placement of cells on the tree.) While we cannot reconstruct a tree on single cells with a sparse mutation matrix <italic>D</italic>, the unknown tree imposes a structure on <italic>D</italic>. Specifically, we expect to find multiple <italic>groups</italic> of cells, with each group of cells distinguished by one or more <italic>groups</italic> of shared mutations.</p>
    <p>In applications like cancer where there is selection on mutations, clonal expansions result in groups of cells, or <italic>clones</italic>, that share large groups of mutations, including the positively selected mutation and other passenger mutations that hitchhike with this mutation. Thus, the rows and columns of <italic>D</italic> can be rearranged to obtain a block matrix <inline-formula id="IE25"><mml:math id="IM24"><mml:mrow><mml:msub><mml:mrow><mml:mover accent="true"><mml:mi>D</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mo>ℓ</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> with row blocks <inline-formula id="IE26"><mml:math id="IM25"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>A</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and column blocks <inline-formula id="IE27"><mml:math id="IM26"><mml:mrow><mml:msub><mml:mi>B</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>B</mml:mi><mml:mo>ℓ</mml:mo></mml:msub></mml:mrow></mml:math></inline-formula> (<xref ref-type="fig" rid="btaa449-F1">Fig. 1</xref>). The row blocks correspond to cells that share the same mutations, or <italic>clones</italic>, and the column blocks correspond to <italic>clusters</italic> of mutations that are present in the same cells. The evolutionary relationships between clones are described by a clone tree <italic>T</italic>, where each row block <italic>A<sub>r</sub></italic> corresponds to a vertex in <italic>T</italic> and each column block <italic>B<sub>s</sub></italic> corresponds to an edge in <italic>T</italic> (<xref ref-type="fig" rid="btaa449-F1">Fig. 1</xref>). Note that we do not aim to reconstruct <italic>T</italic>, but rather <italic>T</italic> imposes a block structure on the mutation matrix <italic>D</italic>.</p>
    <p>Our goal is to find such a block matrix <inline-formula id="IE28"><mml:math id="IM27"><mml:mrow><mml:msub><mml:mrow><mml:mover accent="true"><mml:mi>D</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mo>ℓ</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> where each block (<italic>r</italic>, <italic>s</italic>) has either many 1-entries (i.e. the cells in <italic>A<sub>r</sub></italic> contain the mutations in <italic>B<sub>s</sub></italic>) or few 1-entries (i.e. the cells in <italic>A<sub>r</sub></italic> do not contain the mutations in <italic>B<sub>s</sub></italic>). We formalize these ideas in the following problem.</p>
    <p><italic>CBI</italic>. Given a mutation matrix <inline-formula id="IE29"><mml:math id="IM28"><mml:mrow><mml:mi>D</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>?</mml:mo><mml:mo>}</mml:mo></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>×</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>, find a rearrangement of the rows and columns of <italic>D</italic> to form a block matrix <inline-formula id="IE30"><mml:math id="IM29"><mml:mrow><mml:msub><mml:mrow><mml:mover accent="true"><mml:mi>D</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mo>ℓ</mml:mo></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>?</mml:mo><mml:mo>}</mml:mo></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>×</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> with row blocks <inline-formula id="IE31"><mml:math id="IM30"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>A</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and column blocks <inline-formula id="IE32"><mml:math id="IM31"><mml:mrow><mml:msub><mml:mi>B</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:msub><mml:mi>B</mml:mi><mml:mo>ℓ</mml:mo></mml:msub></mml:mrow></mml:math></inline-formula>, and such that each block (<italic>A<sub>r</sub></italic>, <italic>B<sub>s</sub></italic>) has either a high or low proportion of 1s.</p>
    <p>We note that this problem is very different from existing methods for analyzing mutations in single-cell sequencing data. Specifically, existing methods (<xref rid="btaa449-B6" ref-type="bibr">Borgsmueller <italic>et al.</italic>, 2020</xref>; <xref rid="btaa449-B8" ref-type="bibr">Ciccolella <italic>et al.</italic>, 2018</xref>; <xref rid="btaa449-B12" ref-type="bibr">El-Kebir, 2018</xref>; <xref rid="btaa449-B17" ref-type="bibr">Jahn <italic>et al.</italic>, 2016</xref>; <xref rid="btaa449-B25" ref-type="bibr">Malikic <italic>et al.</italic>, 2019</xref>; <xref rid="btaa449-B26" ref-type="bibr">McPherson <italic>et al.</italic>, 2016</xref>; <xref rid="btaa449-B33" ref-type="bibr">Ross and Markowetz, 2016</xref>; <xref rid="btaa449-B34" ref-type="bibr">Roth <italic>et al.</italic>, 2016</xref>; <xref rid="btaa449-B35" ref-type="bibr">Satas <italic>et al.</italic>, 2019</xref>; <xref rid="btaa449-B37" ref-type="bibr">Singer <italic>et al.</italic>, 2018</xref>; <xref rid="btaa449-B42" ref-type="bibr">Zafar <italic>et al.</italic>, 2019</xref>) attempt to directly model the error rates of observing individual mutations, or rely on distances between cells according to mutations or distances between mutations according to cells. In our case, because we have ultra-low-coverage data with very few mutations recorded as present in individual cells and no confidence in the absence of a mutation in an individual cell, such approaches are unlikely to work well. Instead, one needs to consolidate signals simultaneously between <italic>groups</italic> of mutations and <italic>groups</italic> of cells.</p>
    <p>One might consider imposing additional constraints on blocks, such as a specific evolutionary model. Here, we impose no such constraints and instead solve the general problem. Note that the block structure does not depend on the infinite sites assumption (perfect phylogeny model) or any specific evolutionary model (<xref ref-type="supplementary-material" rid="sup1">Supplementary Material S1</xref>). Thus, we model the block structure of the mutation matrix <italic>D</italic> using the stochastic block model (SBM), which has been intensively studied as a model of community structure in networks (<xref rid="btaa449-B2" ref-type="bibr">Abbe, 2017</xref>; <xref rid="btaa449-B3" ref-type="bibr">Airoldi <italic>et al.</italic>, 2008</xref>; <xref rid="btaa449-B9" ref-type="bibr">Decelle <italic>et al.</italic>, 2011</xref>; <xref rid="btaa449-B13" ref-type="bibr">Fortunato and Hric, 2016</xref>; <xref rid="btaa449-B16" ref-type="bibr">Goldenberg <italic>et al.</italic>, 2010</xref>; <xref rid="btaa449-B18" ref-type="bibr">Karrer and Newman, 2011</xref>; <xref rid="btaa449-B23" ref-type="bibr">Larremore <italic>et al.</italic>, 2014</xref>; <xref rid="btaa449-B38" ref-type="bibr">Snijders and Nowicki, 1997</xref>; <xref rid="btaa449-B44" ref-type="bibr">Zhou and Amini, 2019</xref>). The SBM is parameterized by a <inline-formula id="IE33"><mml:math id="IM32"><mml:mrow><mml:mi>k</mml:mi><mml:mo>×</mml:mo><mml:mo>ℓ</mml:mo></mml:mrow></mml:math></inline-formula><italic>block probability matrix</italic> <inline-formula id="IE34"><mml:math id="IM33"><mml:mrow><mml:mi>P</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> where <inline-formula id="IE35"><mml:math id="IM34"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> indicates the probability of observing a 1-entry in row <inline-formula id="IE36"><mml:math id="IM35"><mml:mrow><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>A</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and column <inline-formula id="IE37"><mml:math id="IM36"><mml:mrow><mml:mi>j</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>B</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, and by the block assignment variables <bold><italic>v</italic></bold> and <bold><italic>e</italic></bold> whose entries <italic>v<sub>i</sub></italic> and <italic>e<sub>j</sub></italic> indicate the block assignments of row <italic>i</italic> and column <italic>j</italic>, respectively. (While the SBM typically models a symmetric matrix encoding all pairwise relationships between objects, we use the bipartite SBM (<xref rid="btaa449-B23" ref-type="bibr">Larremore <italic>et al.</italic>, 2014</xref>) to avoid relationships between pairs of cells or pairs of mutations.) According to the SBM, each entry <inline-formula id="IE38"><mml:math id="IM37"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> of the mutation matrix with block assignments <italic>v<sub>i</sub></italic> = <italic>r</italic> and <italic>e<sub>j</sub></italic> = <italic>s</italic> is sampled independently at random from Bernoulli (<italic>p<sub>r,s</sub></italic>). We emphasize that the inference of blocks with distinct probabilities <inline-formula id="IE39"><mml:math id="IM38"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> is a positive feature for our applications, as the probability to observe mutations in different blocks may be influenced by CNAs.</p>
    <p>We solve the CBI problem using the SBM inference algorithm in <xref rid="btaa449-B30" ref-type="bibr">Peixoto (2014a)</xref>. While this algorithm is based on a variant of the SBM that uses the Poisson distribution, the difference between this model and the Bernoulli-distributed SBM is negligible when entries in <italic>P</italic> are small (<xref rid="btaa449-B32" ref-type="bibr">Perry and Wolfe, 2012</xref>), as is our case. This algorithm incorporates model selection to choose the number <italic>k</italic> of clones and the number <inline-formula id="IE40"><mml:math id="IM39"><mml:mo>ℓ</mml:mo></mml:math></inline-formula> of mutation clusters that best explains the observed data. We also apply a variant of the SBM inference algorithm, the hierarchical SBM (<xref rid="btaa449-B31" ref-type="bibr">Peixoto, 2014b</xref>); the hierarchical SBM models block matrices with nested blocks, as might be expected in our case where the blocks of cells and mutations arise from the clone tree <italic>T</italic>.</p>
  </sec>
  <sec>
    <title>3 Results</title>
    <sec>
      <title>3.1 Simulated data</title>
      <p>To assess the performance of SBMClone, we simulated mutation matrices obtained from ultra-low coverage DNA sequencing data for <italic>n</italic> mutations across <italic>m</italic> cells using a two-step procedure. First, we constructed a binary <italic>m </italic>×<italic> n complete</italic> block matrix <inline-formula id="IE41"><mml:math id="IM40"><mml:mrow><mml:mi>X</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> where <inline-formula id="IE42"><mml:math id="IM41"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> indicates that cell <italic>i</italic> contains mutation <italic>j</italic>, and <inline-formula id="IE43"><mml:math id="IM42"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> otherwise. We defined <italic>k</italic> clones <inline-formula id="IE44"><mml:math id="IM43"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>A</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE45"><mml:math id="IM44"><mml:mo>ℓ</mml:mo></mml:math></inline-formula> mutation clusters <inline-formula id="IE46"><mml:math id="IM45"><mml:mrow><mml:msub><mml:mi>B</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>B</mml:mi><mml:mo>ℓ</mml:mo></mml:msub></mml:mrow></mml:math></inline-formula> such that, for each clone <italic>r</italic> and mutation cluster <italic>s</italic>, either all cells in <italic>r</italic> contain all mutations in <italic>s</italic> or no cells in <italic>r</italic> contain any mutations in <italic>s</italic> (i.e. either <inline-formula id="IE47"><mml:math id="IM46"><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>A</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mrow></mml:munder><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>B</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:mrow></mml:munder><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mo>|</mml:mo><mml:msub><mml:mi>A</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:mo>·</mml:mo><mml:mo>|</mml:mo><mml:msub><mml:mi>B</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>|</mml:mo></mml:mrow></mml:math></inline-formula> or <inline-formula id="IE48"><mml:math id="IM47"><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>A</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mrow></mml:munder><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>B</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:mrow></mml:munder><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula>). We describe the specific block matrices <italic>X</italic> used to generate simulated data below. Second, given <italic>X</italic> and a <italic>block probability p</italic>, we generated the mutation matrix <italic>D</italic> such that if <inline-formula id="IE49"><mml:math id="IM48"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> then <inline-formula id="IE50"><mml:math id="IM49"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> with probability <italic>p</italic>, and <inline-formula id="IE51"><mml:math id="IM50"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>?</mml:mo></mml:mrow></mml:math></inline-formula> otherwise. While the relationship between sequencing coverage and <italic>p</italic> is complex and highly dependent on read alignment and mutation calling, we estimated the block probability values from a previous 10X Chromium single-cell dataset (<xref rid="btaa449-B1" ref-type="bibr">10X Genomics, 2019</xref>) and we found that an average per-cell sequencing coverage of <inline-formula id="IE52"><mml:math id="IM51"><mml:mrow><mml:mn>0.03</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> corresponds to <italic>p</italic> = 0.0014, roughly a factor of 20 (see <xref ref-type="supplementary-material" rid="sup1">Supplementary Material S2</xref> for a more detailed discussion).</p>
      <p>Using this two-step procedure, we generated two types of mutation matrices <italic>D</italic>. First, we simulated data using block matrices <italic>X</italic> with <italic>m</italic> = 4000 cells divided into two clones and <italic>n</italic> = 5000 mutations divided into three mutation clusters (Section 3.1.1). Second, we simulated data using a tree-structured block matrix <italic>X</italic> based on the phylogenetic tree from <xref rid="btaa449-B41" ref-type="bibr">Zaccaria and Raphael (2019)</xref>. This phylogenetic tree was derived using CNAs and divides <italic>m</italic> = 4085 cells into 8 clones and <italic>n</italic> = 10 556 mutations into 15 clusters (Section 3.1.2). Since single-cell DNA sequencing technologies generally have different levels of technical variability and errors (e.g. false positives, amplification biases, doublets, etc.) (<xref rid="btaa449-B15" ref-type="bibr">Gawad <italic>et al.</italic>, 2016</xref>), we also simulated realistic tree-structured block matrices using an empirical block probability matrix <inline-formula id="IE53"><mml:math id="IM52"><mml:mrow><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:mrow></mml:math></inline-formula> that we derived from the previously identified clones (Section 3.1.2). For each complete block matrix <italic>X</italic>, we generated multiple mutation matrices <italic>D</italic> using different values of <italic>p</italic>.</p>
      <p>We compared SBMClone to three existing methods for inferring clones from single-cell sequencing data, SCG (<xref rid="btaa449-B34" ref-type="bibr">Roth <italic>et al.</italic>, 2016</xref>), BnpC (<xref rid="btaa449-B6" ref-type="bibr">Borgsmueller <italic>et al.</italic>, 2020</xref>) and SCITE (<xref rid="btaa449-B17" ref-type="bibr">Jahn <italic>et al.</italic>, 2016</xref>), as well as a naive approach. This naive approach represented each cell <italic>i</italic> as the number of mutations it contains (i.e. its row sum) and applied <italic>k</italic>-means clustering (<xref rid="btaa449-B5" ref-type="bibr">Arthur and Vassilvitskii, 2007</xref>) to this one-dimensional data. Both <italic>k</italic>-means and SCG were provided with the correct number <italic>k</italic> of clones, while BnpC infers the number of clones. We note that the single-cell methods were designed for much higher-coverage sequencing data and not for the ultra-low coverage whole-genome single-cell sequencing data that is the focus of this study. In particular, these methods have been applied only to mutation matrices with up to 3000 cells, up to 500 mutations and up to 60% missing entries.</p>
      <p>We applied all methods to each simulated mutation matrix and measured the performance of each method by computing the adjusted Rand index (ARI) between the true and inferred partitions of cells (clones). Both SCITE (<xref rid="btaa449-B17" ref-type="bibr">Jahn <italic>et al.</italic>, 2016</xref>) and BnpC (<xref rid="btaa449-B6" ref-type="bibr">Borgsmueller <italic>et al.</italic>, 2020</xref>) did not scale to the large sizes of our simulated mutation matrices. SCITE required multiple days of computation on most instances, and exhibited poor performance on even the smallest instances. Therefore, we excluded SCITE from further analysis and we report additional details in <xref ref-type="supplementary-material" rid="sup1">Supplementary Material S7</xref>. For BnpC, some instances required &gt;64 GB of memory or crashed with a floating point underflow error; these issues may be due to the very recent release of this method. Additional details on how BnpC and SCG were run are in <xref ref-type="supplementary-material" rid="sup1">Supplementary Materials S3 and S6</xref>.</p>
      <sec>
        <title>3.1.1 Block mutation matrices</title>
        <p>We simulated mutation matrices using a complete block matrix <italic>X</italic> composed of two clones, <italic>A</italic><sub>1</sub> and <italic>A</italic><sub>2</sub>, and three mutation clusters, <italic>B</italic><sub>1</sub>, <italic>B</italic><sub>2</sub> and <italic>B</italic><sub>3</sub> (<xref ref-type="fig" rid="btaa449-F2">Fig. 2A</xref>). Mutations in <italic>B</italic><sub>1</sub> were shared by both clones, while mutations in <italic>B</italic><sub>2</sub> and <italic>B</italic><sub>3</sub> were unique to <italic>A</italic><sub>1</sub> and <italic>A</italic><sub>2</sub>, respectively. We simulated 1 228 880 mutation matrices, each with 100–4000 cells and 100–10 000 mutations. Moreover, we varied the number of cells in each of the two clones as well as the number of mutations in the three mutation clusters. We describe here results with <italic>m</italic> = 4000 cells, <italic>n</italic> = 5000 mutations, <inline-formula id="IE54"><mml:math id="IM53"><mml:mrow><mml:mo>|</mml:mo><mml:msub><mml:mi>A</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>|</mml:mo><mml:mo>=</mml:mo><mml:mn>1600</mml:mn><mml:mo>,</mml:mo><mml:mo> </mml:mo><mml:mo>|</mml:mo><mml:msub><mml:mi>A</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>|</mml:mo><mml:mo>=</mml:mo><mml:mn>2400</mml:mn><mml:mo>,</mml:mo><mml:mo> </mml:mo><mml:mo>|</mml:mo><mml:msub><mml:mi>B</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>|</mml:mo><mml:mo>=</mml:mo><mml:mn>1500</mml:mn><mml:mo>,</mml:mo><mml:mo> </mml:mo><mml:mo>|</mml:mo><mml:msub><mml:mi>B</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>|</mml:mo><mml:mo>=</mml:mo><mml:mn>1400</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE55"><mml:math id="IM54"><mml:mrow><mml:mo>|</mml:mo><mml:msub><mml:mi>B</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>|</mml:mo><mml:mo>=</mml:mo><mml:mn>2100</mml:mn></mml:mrow></mml:math></inline-formula>. Additional results from SBMClone with varied block sizes are reported in <xref ref-type="supplementary-material" rid="sup1">Supplementary Material S4</xref> and <xref ref-type="supplementary-material" rid="sup1">Figure S2</xref>.
</p>
        <fig id="btaa449-F2" orientation="portrait" position="float">
          <label>Fig. 2.</label>
          <caption>
            <p>SBMClone outperforms existing methods on simulated mutation matrices with two clones and three clusters of mutations. (<bold>A</bold>) A complete block matrix <italic>X</italic> with <italic>m</italic> cells and <italic>n</italic> mutations is used to simulate two clones <italic>A</italic><sub>1</sub> and <italic>A</italic><sub>2</sub> that share mutations in the cluster <italic>B</italic><sub>1</sub>, while the two remaining clusters <italic>B</italic><sub>2</sub> and <italic>B</italic><sub>3</sub> of mutations are uniquely present in either <italic>A</italic><sub>1</sub> or <italic>A</italic><sub>2</sub>, respectively. (<bold>B</bold>) ARI (<italic>y</italic>-axis) in recovering the simulated clones for SBMClone, SBMClone-H (hierarchical SBM), SCG (<xref rid="btaa449-B34" ref-type="bibr">Roth <italic>et al.</italic>, 2016</xref>), BnpC (<xref rid="btaa449-B6" ref-type="bibr">Borgsmueller <italic>et al.</italic>, 2020</xref>) and <italic>k</italic>-means clustering (<italic>k</italic>-means) applied to simulated mutation matrices with <italic>m</italic>=4000 cells divided into two clones, <italic>n</italic>=5000 mutations divided into three clusters, and with varying block probability <italic>p</italic> (<italic>x</italic>-axis in log-scale)</p>
          </caption>
          <graphic xlink:href="btaa449f2"/>
        </fig>
        <p>We found that SBMClone outperformed all other methods across a range of block probabilities <italic>p</italic> (<xref ref-type="fig" rid="btaa449-F2">Fig. 2B</xref>). While no method was able to accurately recover the true clonal composition with extremely low block probability (<inline-formula id="IE56"><mml:math id="IM55"><mml:mrow><mml:mi>p</mml:mi><mml:mo>≤</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>, ARI<inline-formula id="IE57"><mml:math id="IM56"><mml:mrow><mml:mo>&lt;</mml:mo><mml:mn>0.01</mml:mn></mml:mrow></mml:math></inline-formula>), SBMClone perfectly recovered the clones with block probability <inline-formula id="IE58"><mml:math id="IM57"><mml:mo> </mml:mo><mml:mi>p</mml:mi><mml:mo>≥</mml:mo><mml:mn>5</mml:mn><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mo>-</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:math></inline-formula> using either the hierarchical or non-hierarchical model. We also analyzed the number of clones inferred by SBMClone-H and found that when ARI <inline-formula id="IE59"><mml:math id="IM58"><mml:mrow><mml:mo>≥</mml:mo><mml:mn>0.5</mml:mn></mml:mrow></mml:math></inline-formula>, SBMClone-H inferred the correct number of clones (<xref ref-type="supplementary-material" rid="sup1">Supplementary Material S10</xref> and <xref ref-type="supplementary-material" rid="sup1">Fig. S5A</xref>). In contrast, the other methods performed poorly. BnpC and SCG were unable to recover clonal composition (ARI <inline-formula id="IE60"><mml:math id="IM59"><mml:mrow><mml:mo>&lt;</mml:mo><mml:mn>0.05</mml:mn></mml:mrow></mml:math></inline-formula>) for all block probabilities <inline-formula id="IE61"><mml:math id="IM60"><mml:mrow><mml:mi>p</mml:mi><mml:mo>≤</mml:mo><mml:mn>0.1</mml:mn></mml:mrow></mml:math></inline-formula> that were tested. The naive <italic>k</italic>-means clustering approach improved in performance as <italic>p</italic> increased, reaching an ARI of approximately 0.9 at the highest value <italic>p</italic> = 0.1, a value that corresponds approximately to a sequencing coverage of 2×. However, at lower values of <italic>p</italic> &lt; 0.05 corresponding to sequencing coverage <inline-formula id="IE62"><mml:math id="IM61"><mml:mrow><mml:mo>&lt;</mml:mo><mml:mn>1</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula>, in the range of current whole-genome single-cell sequencing technologies, <italic>k</italic>-means has ARI <inline-formula id="IE63"><mml:math id="IM62"><mml:mrow><mml:mo>&lt;</mml:mo><mml:mn>0.4</mml:mn></mml:mrow></mml:math></inline-formula>, considerably worse performance than SBMClone.</p>
        <p>We also investigated the performance of SBMClone with varying tumor purity (i.e. the proportion of tumor cells in a sample) by including a population of normal cells without measured somatic mutations. We observed that SBMClone can accurately (ARI &gt; 0.95) recover low proportions of tumor cells (as low as 5%) in simulated datasets with tumor purity as low as 25% and with block probability <inline-formula id="IE64"><mml:math id="IM63"><mml:mrow><mml:mi>p</mml:mi><mml:mo>≥</mml:mo><mml:mn>0.02</mml:mn></mml:mrow></mml:math></inline-formula> (<xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S3 and Material S5</xref>).</p>
      </sec>
      <sec>
        <title>3.1.2 Tree-structured block mutation matrices</title>
        <p>We also compared all methods on simulated tree-structured mutation matrices containing multiple blocks, whose organization was derived from a phylogenetic tree describing the evolution of the <italic>m</italic> cells that accumulated <italic>n</italic> mutations. Specifically, we used a phylogenetic tree on eight clones (labeled <monospace>J–I</monospace> through <monospace>J–VIII</monospace>) across 4085 breast tumor cells that was previously inferred using CNAs derived from single-cell whole-genome sequencing data using the CHISEL algorithm (<xref rid="btaa449-B41" ref-type="bibr">Zaccaria and Raphael, 2019</xref>). This previous analysis also inferred 10 556 somatic mutations and placed them on the edges of this tree (<xref rid="btaa449-B41" ref-type="bibr">Zaccaria and Raphael, 2019</xref>). Using the clonal structure encoded by the tree, we constructed a 4 085 × 10 556 complete block matrix <italic>X</italic> with <italic>k</italic> = 8 clones and <inline-formula id="IE66"><mml:math id="IM64"><mml:mrow><mml:mo>ℓ</mml:mo><mml:mo>=</mml:mo><mml:mn>15</mml:mn></mml:mrow></mml:math></inline-formula> mutation clusters, where blocks of 1s correspond to mutations that are present in each clone and blocks of 0s correspond to mutations that are not present (<xref ref-type="fig" rid="btaa449-F3">Fig. 3A</xref>).
</p>
        <fig id="btaa449-F3" orientation="portrait" position="float">
          <label>Fig. 3.</label>
          <caption>
            <p>SBMClone outperforms existing methods on tree-structured simulated mutation matrices with both uniform and empirical block probabilities. (<bold>A</bold>) The complete block matrix <italic>X</italic> is used to simulate tree-structured mutation matrices with eight tumor clones (<monospace>J–I</monospace>,…, <monospace>J–VIII</monospace>) of <inline-formula id="IE67"><mml:math id="IM65"><mml:mrow><mml:mn>4</mml:mn><mml:mo> </mml:mo><mml:mn>085</mml:mn></mml:mrow></mml:math></inline-formula> cells and with 15 clusters of 10 556 mutations, according to a tumor phylogenetic tree previously inferred by the CHISEL algorithm from <inline-formula id="IE68"><mml:math id="IM66"><mml:mrow><mml:mn>4</mml:mn><mml:mo> </mml:mo><mml:mn>085</mml:mn></mml:mrow></mml:math></inline-formula> breast tumor cells (<xref rid="btaa449-B41" ref-type="bibr">Zaccaria and Raphael, 2019</xref>). The number of cells in each clone as well as the number of mutations in each cluster are reported for each row block and column block, respectively. (<bold>B</bold>) ARI measures the performance of SBMClone when applying either the SBM (SBMClone) or hierarchical SBM (SBMClone-H) inference algorithm, the other two existing methods [SCG (<xref rid="btaa449-B34" ref-type="bibr">Roth <italic>et al.</italic>, 2016</xref>) and BnpC (<xref rid="btaa449-B6" ref-type="bibr">Borgsmueller <italic>et al.</italic>, 2020</xref>)], and a <italic>k</italic>-means algorithm (<italic>k</italic>-means) to tree-structured simulated mutation matrices with a uniform block probability <italic>p</italic> across all blocks and with varying values of <italic>p</italic> (<italic>x</italic>-axis in log-scale). (<bold>C</bold>) The empirical block probability matrix <italic>P</italic> obtained from the 10X Chromium breast cancer data. Note that the values shown are percentages, i.e. the actual probability corresponding to each entry is 100 times smaller. Each entry is the observed proportion of 1-entries in the mutation matrix <italic>D</italic> when the cells and mutations are organized into the blocks given by the CHISEL phylogeny as in (A). (<bold>D</bold>) ARI measures the performance of SBMClone when applying either the SBM (SBMClone) or hierarchical SBM (SBMClone-H) inference algorithm, other two existing methods [SCG (<xref rid="btaa449-B34" ref-type="bibr">Roth <italic>et al.</italic>, 2016</xref>) and BnpC (<xref rid="btaa449-B6" ref-type="bibr">Borgsmueller <italic>et al.</italic>, 2020</xref>)], and a <italic>k</italic>-means algorithm (<italic>k</italic>-means) to tree-structured simulated mutation matrices with empirical block probabilities <inline-formula id="IE69"><mml:math id="IM67"><mml:mrow><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mrow><mml:mover accent="true"><mml:mi>p</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> estimated from previous studies (<xref rid="btaa449-B41" ref-type="bibr">Zaccaria and Raphael, 2019</xref>) and further scaled by a multiple (<italic>x</italic>-axis)</p>
          </caption>
          <graphic xlink:href="btaa449f3"/>
        </fig>
        <p>We simulated two sets of 4 085 × 10 556 mutation matrices. The first set of 60 mutation matrices was created using a constant block probability <italic>p</italic> across all blocks, varying this probability <italic>p</italic> from <inline-formula id="IE71"><mml:math id="IM68"><mml:mrow><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> to <inline-formula id="IE72"><mml:math id="IM69"><mml:mrow><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>. These values of <italic>p</italic> correspond to sequencing coverages of <inline-formula id="IE73"><mml:math id="IM70"><mml:mrow><mml:mn>0.02</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE74"><mml:math id="IM71"><mml:mrow><mml:mn>2</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula>, respectively. The second set of 30 mutation matrices was created using empirical block probabilities <inline-formula id="IE75"><mml:math id="IM72"><mml:mrow><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mrow><mml:mover accent="true"><mml:mi>p</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> for each block (<italic>r</italic>, <italic>s</italic>) that we derived from the clones and mutation clusters identified in <xref rid="btaa449-B41" ref-type="bibr">Zaccaria and Raphael (2019)</xref> (<xref ref-type="fig" rid="btaa449-F3">Fig. 3C</xref>). These empirical block probabilities partially account for errors and variability in single-cell DNA sequencing data; in fact, we note that empirical probabilities are lower than expected in some blocks due to the presence of errors (see <xref ref-type="supplementary-material" rid="sup1">Supplementary Material S8</xref> for details). Moreover, to simulate higher sequencing coverage, we generated mutation matrices by proportionally increasing all values in <inline-formula id="IE76"><mml:math id="IM73"><mml:mrow><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:mrow></mml:math></inline-formula> by a constant multiple—e.g. a multiple of 2 signifies that each value <inline-formula id="IE77"><mml:math id="IM74"><mml:mrow><mml:msub><mml:mrow><mml:mover accent="true"><mml:mi>p</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> is doubled to represent double the sequencing coverage (<xref ref-type="fig" rid="btaa449-F3">Fig. 3D</xref>).</p>
        <p>We found that the performance of all methods was lower on this simulated data than on the simpler block matrices above. While no method was able to accurately recover the true clonal composition with extremely low uniformly sampled block probabilities (<inline-formula id="IE78"><mml:math id="IM75"><mml:mrow><mml:mi>p</mml:mi><mml:mo>≤</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>, ARI <inline-formula id="IE79"><mml:math id="IM76"><mml:mrow><mml:mo>&lt;</mml:mo><mml:mn>0.1</mml:mn></mml:mrow></mml:math></inline-formula>) or unscaled empirical block probabilities (multiple <inline-formula id="IE80"><mml:math id="IM77"><mml:mrow><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>, ARI <inline-formula id="IE81"><mml:math id="IM78"><mml:mrow><mml:mo>&lt;</mml:mo><mml:mn>0.1</mml:mn></mml:mrow></mml:math></inline-formula>), SBMClone using either the SBM or hierarchical SBM outperforms all other methods and perfectly recovers the clones from uniformly sampled matrices with <inline-formula id="IE82"><mml:math id="IM79"><mml:mrow><mml:mi>p</mml:mi><mml:mo>≥</mml:mo><mml:mn>0.05</mml:mn></mml:mrow></mml:math></inline-formula>. With lower block probabilities, SBMClone partially recovered the clonal structure: ARI <inline-formula id="IE83"><mml:math id="IM80"><mml:mrow><mml:mo>≈</mml:mo><mml:mo> </mml:mo><mml:mn>0.85</mml:mn></mml:mrow></mml:math></inline-formula> with a uniform block probability of <inline-formula id="IE84"><mml:math id="IM81"><mml:mrow><mml:mi>p</mml:mi><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>, and ARI <inline-formula id="IE85"><mml:math id="IM82"><mml:mrow><mml:mo>≈</mml:mo><mml:mo> </mml:mo><mml:mn>0.72</mml:mn></mml:mrow></mml:math></inline-formula> when considering simulated mutation matrices when the empirical block probabilities are doubled. In contrast, SCG and BnpC were unable to recover the clonal composition for all values of the block probability <inline-formula id="IE86"><mml:math id="IM83"><mml:mrow><mml:mi>p</mml:mi><mml:mo>≤</mml:mo><mml:mn>0.1</mml:mn></mml:mrow></mml:math></inline-formula> that were tested (ARI <inline-formula id="IE87"><mml:math id="IM84"><mml:mrow><mml:mo>&lt;</mml:mo><mml:mn>0.05</mml:mn></mml:mrow></mml:math></inline-formula>) or with triple the empirical block probabilities (ARI <inline-formula id="IE88"><mml:math id="IM85"><mml:mrow><mml:mo>&lt;</mml:mo><mml:mn>0.01</mml:mn></mml:mrow></mml:math></inline-formula>). While the naive <italic>k</italic>-means algorithm did not perform as poorly, it performed considerably worse than SBMClone on uniform simulations (<xref ref-type="fig" rid="btaa449-F3">Fig. 3B</xref>, ARI <inline-formula id="IE89"><mml:math id="IM86"><mml:mrow><mml:mo>&lt;</mml:mo><mml:mn>0.7</mml:mn></mml:mrow></mml:math></inline-formula>) as well as the non-uniform simulations (<xref ref-type="fig" rid="btaa449-F3">Fig. 3C</xref>, ARI <inline-formula id="IE90"><mml:math id="IM87"><mml:mrow><mml:mo>&lt;</mml:mo><mml:mn>0.2</mml:mn></mml:mrow></mml:math></inline-formula>). Across all tree-structured simulations, SBMClone correctly inferred the number of distinct clones when it obtained ARI <inline-formula id="IE91"><mml:math id="IM88"><mml:mrow><mml:mo>≥</mml:mo><mml:mn>0.5</mml:mn></mml:mrow></mml:math></inline-formula> (<xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S5B–D</xref>).</p>
      </sec>
    </sec>
    <sec>
      <title>3.2 Cancer data</title>
      <sec>
        <title>3.2.1 10X Genomics Chromium CNV solution</title>
        <p>We used SBMClone to analyze the 10X Genomics Chromium single-cell DNA sequencing data from a breast cancer patient (<xref rid="btaa449-B1" ref-type="bibr">10X Genomics, 2019</xref>). This dataset comprises 4085 tumor cells (over 10 202 cells in total), which have been sequenced with ultra-low coverage (<inline-formula id="IE92"><mml:math id="IM89"><mml:mrow><mml:mo>≈</mml:mo><mml:mn>0.03</mml:mn></mml:mrow></mml:math></inline-formula>× per cell). The CHISEL algorithm (<xref rid="btaa449-B41" ref-type="bibr">Zaccaria and Raphael, 2019</xref>) was used to identify allele- and haplotype-specific CNAs in these cells (<xref rid="btaa449-B41" ref-type="bibr">Zaccaria and Raphael, 2019</xref>). This analysis identified eight distinct clones (labeled <monospace>J–I</monospace> through <monospace>J–VIII</monospace>) based on copy-number profiles, and constructed a phylogenetic tree relating these clones. The first branch in this tree separates the eight clones into two groups: a left branch containing 1952 cells from clones <monospace>J–I</monospace> to <monospace>J–II</monospace>, and a right branch containing 2033 cells from clones <monospace>J–III</monospace> to <monospace>J–VIII</monospace> (<xref ref-type="fig" rid="btaa449-F4">Fig. 4A</xref>). We investigated whether it was possible to recover this clonal composition by applying SBMClone to the 10 556 somatic single-nucleotide mutations that were previously identified and assigned to the corresponding branches of the phylogenetic tree (<xref rid="btaa449-B41" ref-type="bibr">Zaccaria and Raphael, 2019</xref>).
</p>
        <fig id="btaa449-F4" orientation="portrait" position="float">
          <label>Fig. 4.</label>
          <caption>
            <p>SBMClone accurately recovers two distinct phylogenetic branches of <inline-formula id="IE94"><mml:math id="IM90"><mml:mrow><mml:mn>4</mml:mn><mml:mo> </mml:mo><mml:mn>085</mml:mn></mml:mrow></mml:math></inline-formula> breast tumor cells from 10X Chromium single-cell DNA sequencing data by merging few cells. (<bold>A</bold>) A tumor phylogenetic tree that was previously reconstructed by <xref rid="btaa449-B41" ref-type="bibr">Zaccaria and Raphael (2019)</xref> from the eight tumor clones (<monospace>J–I</monospace>, … , <monospace>J–VIII</monospace>) that were identified using the CHISEL algorithm and defined as the leaves of the tree (the corresponding number of cells is indicated for each leaf). The edges of the tree were also labeled by a total of 10 556 single-nucleotide mutations, with each edge labeled by the corresponding number of mutations. The phylogenetic tree separates the <inline-formula id="IE95"><mml:math id="IM91"><mml:mrow><mml:mn>4</mml:mn><mml:mo> </mml:mo><mml:mn>085</mml:mn></mml:mrow></mml:math></inline-formula> cells from the eight clones into two distinct branches, a left branch comprising 1952 cells and a right branch comprising 2033 cells. (<bold>B</bold>) ARI (<italic>y</italic>-axis) for SBMClone, SBMClone-H (hierarchical SBM), SCG (<xref rid="btaa449-B34" ref-type="bibr">Roth <italic>et al.</italic>, 2016</xref>), BnpC (<xref rid="btaa449-B6" ref-type="bibr">Borgsmueller <italic>et al.</italic>, 2020</xref>) and <italic>k</italic>-means clustering (<italic>k</italic>-means) in recovering the eight tumor clones previously identified by the CHISEL algorithm from 10 556 single-nucleotide mutations, when merging a varying number of cells within the same clone (<italic>x</italic>-axis). (<bold>C</bold>) Clonal composition inferred by the previous copy-number analysis with CHISEL and by SBMClone, each separating cells into either the left or right evolutionary branch</p>
          </caption>
          <graphic xlink:href="btaa449f4"/>
        </fig>
        <p>All methods, including SBMClone, failed to recover the distinct clones from the single-nucleotide mutations. This result was not surprising and consistent with the simulations above, since the sequencing coverage of <inline-formula id="IE96"><mml:math id="IM92"><mml:mrow><mml:mo>≈</mml:mo><mml:mn>0.03</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> corresponds to a block probability of approximately <inline-formula id="IE97"><mml:math id="IM93"><mml:mrow><mml:mi>p</mml:mi><mml:mo>&lt;</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> in simulated data (<xref ref-type="fig" rid="btaa449-F3">Fig. 3B</xref>). We saw in the tree-structured simulated data above that with slightly larger values of the block probability (<inline-formula id="IE98"><mml:math id="IM94"><mml:mrow><mml:mi>p</mml:mi><mml:mo>≥</mml:mo><mml:mn>0.02</mml:mn></mml:mrow></mml:math></inline-formula>), SBMClone could accurately recover the distinct clones (<xref ref-type="fig" rid="btaa449-F3">Fig. 3B</xref>, ARI <inline-formula id="IE99"><mml:math id="IM95"><mml:mrow><mml:mo>&gt;</mml:mo><mml:mn>0.95</mml:mn></mml:mrow></mml:math></inline-formula>). Since it was not possible to resequence the same cells with higher coverage, we created higher-coverage data <italic>in silico</italic> by merging mutation calls from multiple single cells that were reported to be in the same clone by CHISEL (see <xref ref-type="supplementary-material" rid="sup1">Supplementary Material S9</xref> for details). While this approach may potentially propagate false-positive errors in the mutation calls of the mutation matrix <italic>D</italic>, we believe that these errors are much less common than the false negatives that we are addressing by merging mutation calls. We applied the same merging approach on our tree-structured simulated dataset with empirical block probabilities and found that merging cells (<xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S4</xref>) had a similar effect to increasing the value of block probability (<xref ref-type="fig" rid="btaa449-F3">Fig. 3C</xref>). On the real breast tumor dataset, we found that merging a small number of cells (≥8) was sufficient to enable SBMClone to accurately separate the cells into two distinct evolutionary branches that match the left and right branches in the CHISEL tree (<xref ref-type="fig" rid="btaa449-F4">Fig. 4B and C</xref>). We emphasize that merging such small numbers of cells still results in a dataset with ultra-low coverage (≈0.2×). Notably, we also found that a similar merging of cells did not appreciably improve the poor performance of other methods (<xref ref-type="fig" rid="btaa449-F4">Fig. 4B</xref>).</p>
      </sec>
      <sec>
        <title>3.2.2 DOP-PCR</title>
        <p>We used SBMClone to analyze the DOP-PCR single-cell DNA sequencing data from breast cancer patient P2 from <xref rid="btaa449-B19" ref-type="bibr">Kim <italic>et al.</italic> (2018)</xref>. This dataset includes ultra-low coverage (<inline-formula id="IE102"><mml:math id="IM96"><mml:mrow><mml:mo>≈</mml:mo><mml:mn>0.5</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula>) whole-genome sequencing of 90 cells from two different time points: 46 pre-treatment cells and 44 post-treatment cells. The published analysis of this dataset identified tumor cells <italic>only</italic> in the pre-treatment cells, and no tumor cells among the post-treatment cells (<xref rid="btaa449-B19" ref-type="bibr">Kim <italic>et al.</italic>, 2018</xref>) (<xref ref-type="fig" rid="btaa449-F5">Fig. 5</xref>). This observation led (<xref rid="btaa449-B19" ref-type="bibr">Kim <italic>et al.</italic>, 2018</xref>) to classify P2 as a patient with the ‘clonal extinction’ phenotype, where tumor cells were no longer detectable after treatment. Because of the low sequencing coverage, <xref rid="btaa449-B19" ref-type="bibr">Kim <italic>et al.</italic> (2018)</xref> restricted their analysis to CNAs using the R package ‘copy-number’ (<xref rid="btaa449-B29" ref-type="bibr">Nilsen <italic>et al.</italic>, 2012</xref>). Thus, we aimed to investigate whether single-nucleotide mutations supported a different grouping of pre- and post-treatment cells.
</p>
        <fig id="btaa449-F5" orientation="portrait" position="float">
          <label>Fig. 5.</label>
          <caption>
            <p>SBMClone identifies tumor cells in both pre- and post-treatment samples from a breast cancer patient contrasting with published analysis. (Left) Published copy-number analysis of 90 cells from a breast cancer patient P2 (<xref rid="btaa449-B19" ref-type="bibr">Kim et al., 2018</xref>) identified 16 tumor cells (green) in the pre-treatment sample, and no tumor cells in the post-treatment sample. (Right) SBMClone analysis of 51 511 SNVs from the 90 sequenced cells identified tumor cells (green) in both the pre-treatment sample (21 tumor cells) and the post-treatment sample (14 tumor cells). SBMClone’s results are supported by the identification of 18 958 SNVs that separate tumor from normal cells: these SNVs have a high block probability (0.145) in the tumor cells but a low block probability (0.050) in the normal cells</p>
          </caption>
          <graphic xlink:href="btaa449f5"/>
        </fig>
        <p>We jointly analyzed sequencing reads from all 90 cells using SBMClone. We used Bowtie2 (<xref rid="btaa449-B22" ref-type="bibr">Langmead and Salzberg, 2012</xref>) to align DNA sequencing reads using the same procedure and reference genome hg19 as described in the published analysis (<xref rid="btaa449-B19" ref-type="bibr">Kim <italic>et al.</italic>, 2018</xref>). After removing putative germline variants using dbSNP (<xref rid="btaa449-B36" ref-type="bibr">Sherry <italic>et al.</italic>, 2001</xref>) and a pseudo-matched normal sample (see <xref ref-type="supplementary-material" rid="sup1">Supplementary Material S11</xref> for details), we identified a total of 51 511 putative somatic SNVs. We applied SBMClone to the resulting 90 × 51 511 mutation matrix <italic>D</italic> and identified a block matrix with two distinct clones: one clone with 55 cells and the other clone with 35 cells. Unfortunately, we could not directly compare the clone assignments with the published results as the clone assignments from <xref rid="btaa449-B19" ref-type="bibr">Kim <italic>et al.</italic> (2018)</xref> were not publicly available. However, SBMClone’s results are consistent with the published result of a normal diploid clone with more cells and a single tumor clone with fewer cells. Therefore, we hypothesized that the clone with 55 cells corresponds to the normal diploid clone, while the other clone with 35 cells corresponds to the tumor clone.</p>
        <p>Interestingly, while the published analysis identified tumor cells only in the pre-treatment sample, SBMClone identified a tumor clone that consists of 21 pre-treatment tumor cells and 14 post-treatment tumor cells (<xref ref-type="fig" rid="btaa449-F5">Fig. 5</xref>). There are three main pieces of evidence corroborating this result. First, the 35 tumor cells identified by SBMClone are distinguished from the normal cells by blocks of mutations with substantially higher block probabilities, especially the middle block comprising 18 958 SNVs: these mutations have a much higher block probability in the tumor cells (0.145) than in the normal cells (0.050) (<xref ref-type="fig" rid="btaa449-F5">Fig. 5</xref>). Notably, we observed that 538 of the analyzed mutations are present exclusively in the 35 tumor cells identified by SBMClone (232, 87 and 219 in each mutation block, respectively). Second, we analyzed the read-depth profiles of all cells and found that both the pre- and post-treatment cells identified as tumor by SBMClone exhibit very similar read-depth profiles which are consistent with the large CNAs reported in the previous analysis by <xref rid="btaa449-B19" ref-type="bibr">Kim <italic>et al.</italic> (2018)</xref>, while the normal cells have constant read depth across the genome in both pre- and post-treatment samples (see <xref ref-type="supplementary-material" rid="sup1">Supplementary Material S11 and Fig. S6</xref>). Finally, we observed that SBMClone recovers nearly the same partition of cells when applied to a set of mutations that also includes germline variants (<xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S7</xref>). These analyses provide evidence against the ‘clonal extinction’ classification of this patient from the original publication (<xref rid="btaa449-B19" ref-type="bibr">Kim <italic>et al.</italic>, 2018</xref>), as SBMClone identified the presence of both pre- and post-treatment tumor cells. This result shows that analysis of single-nucleotide mutations can lead to important differences in the clonal composition from analysis of CNAs, and that both types of mutations must be carefully analyzed.</p>
      </sec>
    </sec>
  </sec>
  <sec>
    <title>4 Discussion</title>
    <p>Recent single-cell DNA sequencing technologies enable whole-genome sequencing of hundreds to thousands of individual cells. Unfortunately, the ultra-low coverage of such technologies has thus far limited their use to the analysis of large CNAs in individual cells (<xref rid="btaa449-B7" ref-type="bibr">Casasent <italic>et al.</italic>, 2018</xref>; <xref rid="btaa449-B21" ref-type="bibr">Laks <italic>et al</italic>., 2019</xref>; <xref rid="btaa449-B19" ref-type="bibr">Kim <italic>et al.</italic>, 2018</xref>; <xref rid="btaa449-B27" ref-type="bibr">Navin, 2015</xref>; <xref rid="btaa449-B28" ref-type="bibr">Navin <italic>et al.</italic>, 2011</xref>; <xref rid="btaa449-B41" ref-type="bibr">Zaccaria and Raphael, 2019</xref>). While CNAs can often be used to effectively identify distinct clones, the clonal composition of a tumor is not determined solely by CNAs; single-nucleotide mutations are equally important, both in cancer studies and in other applications of single-cell whole-genome sequencing (<xref rid="btaa449-B15" ref-type="bibr">Gawad <italic>et al.</italic>, 2016</xref>). For example, distinct clones may be characterized by the same complement of CNAs but different single-nucleotide mutations, whose identification is thus crucial for recovering the correct clonal composition. Moreover, recent studies (<xref rid="btaa449-B21" ref-type="bibr">Laks <italic>et al</italic>., 2019</xref>; <xref rid="btaa449-B41" ref-type="bibr">Zaccaria and Raphael, 2019</xref>) showed that whole-genome single-cell DNA sequencing data can be used to identify single-nucleotide mutations by merging large sets of cells into a pseudo-bulk sample. However, such approaches lose the characteristic single-cell resolution provided by such technologies.</p>
    <p>Here, we introduced SBMClone, a method that infers clonal composition from single-nucleotide mutations identified in ultra-low coverage whole-genome single-cell DNA sequencing data. Specifically, SBMClone uses SBM inference algorithms to partition cells into distinct clones containing different groups of mutations. While current methods infer the clonal composition by clustering either cells with similar mutation profiles or mutations present in the same sets of cells, SBMClone simultaneously groups both cells and mutations into distinct blocks.</p>
    <p>We showed that SBMClone accurately infers clonal composition in simulated datasets of varying complexity with per-cell coverage as low as <inline-formula id="IE104"><mml:math id="IM97"><mml:mrow><mml:mn>0.2</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula>. Even on much lower-coverage (<inline-formula id="IE105"><mml:math id="IM98"><mml:mrow><mml:mo>≈</mml:mo><mml:mn>0.03</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula>) data from a breast cancer patient sequenced on the 10X Chromium platform (<xref rid="btaa449-B1" ref-type="bibr">10X Genomics, 2019</xref>), we showed that using a small amount of additional information we can recover clonal compositions that are corroborated by analysis of CNAs (<xref rid="btaa449-B41" ref-type="bibr">Zaccaria and Raphael, 2019</xref>). On single-cell whole-genome DOP-PCR data from a breast cancer patient (<xref rid="btaa449-B19" ref-type="bibr">Kim <italic>et al.</italic>, 2018</xref>), we showed that SBMClone identifies post-treatment tumor cells that were not identified in the original copy-number analysis.</p>
    <p>While SBMClone demonstrated the possibility of accurately inferring clonal composition from ultra-low coverage single-cell DNA sequencing data, there are several opportunities for future improvement. First, while our application of SBMClone focused on single-nucleotide mutations, the method could be extended to analyze other types of mutations—such as CNAs or structural variations—either individually or jointly. Indeed, a method that analyzes both single-nucleotide mutations and CNAs could be more powerful to detect low-frequency clones and more robust to the variability and errors in single-cell sequencing data. Second, while the sequencing coverage (<inline-formula id="IE106"><mml:math id="IM99"><mml:mrow><mml:mo>≈</mml:mo><mml:mn>0.03</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula>) of current 10X Genomics single-cell sequencing datasets appears to be insufficient to identify clonal structure using single-nucleotide mutations, our study demonstrates that an approximately eightfold increase in coverage per cell (<inline-formula id="IE107"><mml:math id="IM100"><mml:mrow><mml:mo>≈</mml:mo><mml:mn>0.24</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula>) or the higher coverage obtained by DOP-PCR (<inline-formula id="IE108"><mml:math id="IM101"><mml:mrow><mml:mo>≈</mml:mo><mml:mn>0.5</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula>) is sufficient for SBMClone to identify a subclone present in <inline-formula id="IE109"><mml:math id="IM102"><mml:mo>≈</mml:mo></mml:math></inline-formula>20% of sequenced cells. Even higher coverage may enable accurate inference of clones with lower population frequency; indeed, the copy-number analysis of the same 10X data identified eight clones, including one clone representing &lt;1% (39/4085) of the tumor cells (<xref rid="btaa449-B41" ref-type="bibr">Zaccaria and Raphael, 2019</xref>). Third, while SBMClone infers clonal composition without enforcing any evolutionary constraints, one could incorporate a specific evolutionary model and jointly infer evolutionary structure and clonal composition. Finally, SBMClone could be extended to other applications, such as metagenomics or <italic>in vitro</italic> evolution studies, in the latter case helping to monitor changes in population dynamics over time.</p>
    <p><italic>Financial Support</italic>: none declared. </p>
    <p><italic>Conflict of Interest</italic>: B.J.R. is a cofounder of, and consultant to, Medley Genomics. </p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="sup1">
      <label>btaa449_Supplementary_Data</label>
      <media xlink:href="btaa449_supplementary_data.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btaa449-B1">
      <mixed-citation publication-type="other">10X Genomics. (<year>2019</year>) <italic>Assessing Tumor Heterogeneity with Single Cell CNV</italic>
<ext-link ext-link-type="uri" xlink:href="https://www.10xgenomics.com/solutions/single-cell-cnv">https://www.10xgenomics.com/solutions/single-cell-cnv</ext-link> (16 September 2019, date last accessed).</mixed-citation>
    </ref>
    <ref id="btaa449-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Abbe</surname><given-names>E.</given-names></name></person-group> (<year>2017</year>) 
<article-title>Community detection and stochastic block models: recent developments</article-title>. <source>J. Mach. Learn. Res</source>., <volume>18</volume>, <fpage>6446</fpage>–<lpage>6531</lpage>.</mixed-citation>
    </ref>
    <ref id="btaa449-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Airoldi</surname><given-names>E.M.</given-names></name></person-group><etal>et al</etal> (<year>2008</year>) 
<article-title>Mixed membership stochastic blockmodels</article-title>. <source>J. Mach. Learn. Res</source>., <volume>9</volume>, <fpage>1981</fpage>–<lpage>2014</lpage>.<pub-id pub-id-type="pmid">21701698</pub-id></mixed-citation>
    </ref>
    <ref id="btaa449-B4">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Alzahrani</surname><given-names>T.</given-names></name>, <name name-style="western"><surname>Horadam</surname><given-names>K.J.</given-names></name></person-group> (<year>2016</year>) <chapter-title>Community detection in bipartite networks: algorithms and case studies</chapter-title> In: <source>Complex Systems and Networks</source>. 
<publisher-name>Springer</publisher-name>, Berlin, Heidelberg, pp. <fpage>25</fpage>–<lpage>50</lpage>.</mixed-citation>
    </ref>
    <ref id="btaa449-B5">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Arthur</surname><given-names>D.</given-names></name>, <name name-style="western"><surname>Vassilvitskii</surname><given-names>S.</given-names></name></person-group> (<year>2007</year>) k-means++: the advantages of careful seeding. In: <italic>Proceedings of the Eighteenth A</italic>nnual ACM-SIAM <italic>Symposium</italic> on Discrete <italic>Algorithms</italic> Society for Industrial and Applied Mathematics, New Orleans, Louisiana, pp. <fpage>1027</fpage>–<lpage>1035</lpage>.</mixed-citation>
    </ref>
    <ref id="btaa449-B6">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Borgsmueller</surname><given-names>N.</given-names></name></person-group><etal>et al</etal> (<year>2020</year>) Bayesian non-parametric clustering of single-cell mutation profiles. <italic>bioRxiv,</italic> 907345.</mixed-citation>
    </ref>
    <ref id="btaa449-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Casasent</surname><given-names>A.K.</given-names></name></person-group><etal>et al</etal> (<year>2018</year>) 
<article-title>Multiclonal invasion in breast tumors identified by topographic single cell sequencing</article-title>. <source>Cell</source>, <volume>172</volume>, <fpage>205</fpage>–<lpage>217</lpage>.<pub-id pub-id-type="pmid">29307488</pub-id></mixed-citation>
    </ref>
    <ref id="btaa449-B8">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Ciccolella</surname><given-names>S.</given-names></name></person-group><etal>et al</etal> (<year>2018</year>) Inferring cancer progression from single cell sequencing while allowing loss of mutations. <italic>bioRxiv</italic>, 268243.</mixed-citation>
    </ref>
    <ref id="btaa449-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Decelle</surname><given-names>A.</given-names></name></person-group><etal>et al</etal> (<year>2011</year>) 
<article-title>Inference and phase transitions in the detection of modules in sparse networks</article-title>. <source>Phys. Rev. Lett</source>., <volume>107</volume>, <fpage>065701</fpage>.<pub-id pub-id-type="pmid">21902340</pub-id></mixed-citation>
    </ref>
    <ref id="btaa449-B10">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Dhillon</surname><given-names>I.S.</given-names></name></person-group> (<year>2001</year>) Co-clustering documents and words using bipartite spectral graph partitioning. In: <italic>Proceedings of the Seventh ACM SIGKDD International Conference</italic> on Knowledge <italic>D</italic>iscovery and <italic>Data Mining</italic> ACM, San Francisco, California, pp. <fpage>269</fpage>–<lpage>274</lpage>.</mixed-citation>
    </ref>
    <ref id="btaa449-B11">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Dhillon</surname><given-names>I.S.</given-names></name></person-group><etal>et al</etal> (<year>2003</year>) Information-theoretic co-clustering. In: <italic>Proceedings of the Ninth</italic> ACM SIGKDD <italic>International Conference</italic> on Knowledge <italic>Discovery</italic> and <italic>Data Mining</italic> ACM, Washington, D.C. pp. <fpage>89</fpage>–<lpage>98</lpage>.</mixed-citation>
    </ref>
    <ref id="btaa449-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>El-Kebir</surname><given-names>M.</given-names></name></person-group> (<year>2018</year>) 
<article-title>Sphyr: tumor phylogeny estimation from single-cell sequencing data under loss and error</article-title>. <source>Bioinformatics</source>, <volume>34</volume>, <fpage>i671</fpage>–<lpage>i679</lpage>.<pub-id pub-id-type="pmid">30423070</pub-id></mixed-citation>
    </ref>
    <ref id="btaa449-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Fortunato</surname><given-names>S.</given-names></name>, <name name-style="western"><surname>Hric</surname><given-names>D.</given-names></name></person-group> (<year>2016</year>) 
<article-title>Community detection in networks: a user guide</article-title>. <source>Phys. Rep</source>., <volume>659</volume>, <fpage>1</fpage>–<lpage>44</lpage>.</mixed-citation>
    </ref>
    <ref id="btaa449-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Gawad</surname><given-names>C.</given-names></name></person-group><etal>et al</etal> (<year>2014</year>) 
<article-title>Dissecting the clonal origins of childhood acute lymphoblastic leukemia by single-cell genomics</article-title>. <source>Proc. Natl. Acad. Sci. USA</source>, <volume>111</volume>, <fpage>17947</fpage>–<lpage>17952</lpage>.<pub-id pub-id-type="pmid">25425670</pub-id></mixed-citation>
    </ref>
    <ref id="btaa449-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Gawad</surname><given-names>C.</given-names></name></person-group><etal>et al</etal> (<year>2016</year>) 
<article-title>Single-cell genome sequencing: current state of the science</article-title>. <source>Nat. Rev. Genet</source>., <volume>17</volume>, <fpage>175</fpage>–<lpage>188</lpage>.<pub-id pub-id-type="pmid">26806412</pub-id></mixed-citation>
    </ref>
    <ref id="btaa449-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Goldenberg</surname><given-names>A.</given-names></name></person-group><etal>et al</etal> (<year>2010</year>) 
<article-title>A survey of statistical network models</article-title>. <source>Found. Trends Mach. Learn</source>., <volume>2</volume>, <fpage>129</fpage>–<lpage>233</lpage>.</mixed-citation>
    </ref>
    <ref id="btaa449-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Jahn</surname><given-names>K.</given-names></name></person-group><etal>et al</etal> (<year>2016</year>) 
<article-title>Tree inference for single-cell data</article-title>. <source>Genome Biol</source>., <volume>17</volume>, <fpage>86</fpage>.<pub-id pub-id-type="pmid">27149953</pub-id></mixed-citation>
    </ref>
    <ref id="btaa449-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Karrer</surname><given-names>B.</given-names></name>, <name name-style="western"><surname>Newman</surname><given-names>M.E.</given-names></name></person-group> (<year>2011</year>) 
<article-title>Stochastic blockmodels and community structure in networks</article-title>. <source>Phys. Rev. E</source>, <volume>83</volume>, <fpage>016107</fpage>.</mixed-citation>
    </ref>
    <ref id="btaa449-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Kim</surname><given-names>C.</given-names></name></person-group><etal>et al</etal> (<year>2018</year>) 
<article-title>Chemoresistance evolution in triple-negative breast cancer delineated by single-cell sequencing</article-title>. <source>Cell</source>, <volume>173</volume>, <fpage>879</fpage>–<lpage>893</lpage>.<pub-id pub-id-type="pmid">29681456</pub-id></mixed-citation>
    </ref>
    <ref id="btaa449-B20">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Kumar</surname><given-names>A.</given-names></name></person-group><etal>et al</etal> (<year>2011</year>) <chapter-title>Co-regularized multi-view spectral clustering</chapter-title> In: <source>Advances in Neural Information Processing Systems.</source> Curran Associates, Inc., Granada, Spain, pp. <fpage>1413</fpage>–<lpage>1421</lpage>.</mixed-citation>
    </ref>
    <ref id="btaa449-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Laks</surname><given-names>E.</given-names></name></person-group>, <etal>et al</etal> (<year>2019</year>) 
<article-title>Clonal decomposition and DNA replication states defined by scaled single-cell genome sequencing</article-title>. <source>Cell</source>, <volume>179</volume>, <fpage>1207</fpage>–<lpage>1221</lpage>.<pub-id pub-id-type="pmid">31730858</pub-id></mixed-citation>
    </ref>
    <ref id="btaa449-B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Langmead</surname><given-names>B.</given-names></name>, <name name-style="western"><surname>Salzberg</surname><given-names>S.L.</given-names></name></person-group> (<year>2012</year>) 
<article-title>Fast gapped-read alignment with bowtie 2</article-title>. <source>Nat. Methods</source>, <volume>9</volume>, <fpage>357</fpage>–<lpage>359</lpage>.<pub-id pub-id-type="pmid">22388286</pub-id></mixed-citation>
    </ref>
    <ref id="btaa449-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Larremore</surname><given-names>D.B.</given-names></name></person-group><etal>et al</etal> (<year>2014</year>) 
<article-title>Efficiently inferring community structure in bipartite networks</article-title>. <source>Phys. Rev. E</source>, <volume>90</volume>, <fpage>012805</fpage>.</mixed-citation>
    </ref>
    <ref id="btaa449-B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Leung</surname><given-names>M.L.</given-names></name></person-group><etal>et al</etal> (<year>2017</year>) 
<article-title>Single-cell DNA sequencing reveals a late-dissemination model in metastatic colorectal cancer</article-title>. <source>Genome Res</source>., <volume>27</volume>, <fpage>1287</fpage>–<lpage>1299</lpage>.<pub-id pub-id-type="pmid">28546418</pub-id></mixed-citation>
    </ref>
    <ref id="btaa449-B25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Malikic</surname><given-names>S.</given-names></name></person-group><etal>et al</etal> (<year>2019</year>) 
<article-title>PhISCS: a combinatorial approach for subperfect tumor phylogeny reconstruction via integrative use of single-cell and bulk sequencing data</article-title>. <source>Genome Res</source>., <volume>29</volume>, <fpage>1860</fpage>–<lpage>1877</lpage>.<pub-id pub-id-type="pmid">31628256</pub-id></mixed-citation>
    </ref>
    <ref id="btaa449-B26">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>McPherson</surname><given-names>A.</given-names></name></person-group><etal>et al</etal> (<year>2016</year>) 
<article-title>Divergent modes of clonal spread and intraperitoneal mixing in high-grade serous ovarian cancer</article-title>. <source>Nat. Genet</source>., <volume>48</volume>, <fpage>758</fpage>–<lpage>767</lpage>.<pub-id pub-id-type="pmid">27182968</pub-id></mixed-citation>
    </ref>
    <ref id="btaa449-B27">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Navin</surname><given-names>N.E.</given-names></name></person-group> (<year>2015</year>) 
<article-title>The first five years of single-cell cancer genomics and beyond</article-title>. <source>Genome Res</source>., <volume>25</volume>, <fpage>1499</fpage>–<lpage>1507</lpage>.<pub-id pub-id-type="pmid">26430160</pub-id></mixed-citation>
    </ref>
    <ref id="btaa449-B28">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Navin</surname><given-names>N.</given-names></name></person-group><etal>et al</etal> (<year>2011</year>) 
<article-title>Tumour evolution inferred by single-cell sequencing</article-title>. <source>Nature</source>, <volume>472</volume>, <fpage>90</fpage>–<lpage>94</lpage>.<pub-id pub-id-type="pmid">21399628</pub-id></mixed-citation>
    </ref>
    <ref id="btaa449-B29">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Nilsen</surname><given-names>G.</given-names></name></person-group><etal>et al</etal> (<year>2012</year>) 
<article-title>Copynumber: efficient algorithms for single-and multi-track copy number segmentation</article-title>. <source>BMC Genomics</source>, <volume>13</volume>, <fpage>591</fpage>.<pub-id pub-id-type="pmid">23442169</pub-id></mixed-citation>
    </ref>
    <ref id="btaa449-B30">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Peixoto</surname><given-names>T.P.</given-names></name></person-group> (<year>2014</year>a) 
<article-title>Efficient Monte Carlo and greedy heuristic for the inference of stochastic block models</article-title>. <source>Phys. Rev. E</source>, <volume>89</volume>, <fpage>012804</fpage>.</mixed-citation>
    </ref>
    <ref id="btaa449-B31">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Peixoto</surname><given-names>T.P.</given-names></name></person-group> (<year>2014</year>b) 
<article-title>Hierarchical block structures and high-resolution model selection in large networks</article-title>. <source>Phys. Rev. X</source>, <volume>4</volume>, <fpage>011047</fpage>.</mixed-citation>
    </ref>
    <ref id="btaa449-B32">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Perry</surname><given-names>P.O.</given-names></name>, <name name-style="western"><surname>Wolfe</surname><given-names>P.J.</given-names></name></person-group> (<year>2012</year>) Null models for network data. arXiv:1201.5871.</mixed-citation>
    </ref>
    <ref id="btaa449-B33">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Ross</surname><given-names>E.M.</given-names></name>, <name name-style="western"><surname>Markowetz</surname><given-names>F.</given-names></name></person-group> (<year>2016</year>) 
<article-title>OncoNEM: inferring tumor evolution from single-cell sequencing data</article-title>. <source>Genome Biol</source>., <volume>17</volume>, <fpage>69</fpage>.<pub-id pub-id-type="pmid">27083415</pub-id></mixed-citation>
    </ref>
    <ref id="btaa449-B34">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Roth</surname><given-names>A.</given-names></name></person-group><etal>et al</etal> (<year>2016</year>) 
<article-title>Clonal genotype and population structure inference from single-cell tumor sequencing</article-title>. <source>Nat. Methods</source>, <volume>13</volume>, <fpage>573</fpage>–<lpage>576</lpage>.<pub-id pub-id-type="pmid">27183439</pub-id></mixed-citation>
    </ref>
    <ref id="btaa449-B35">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Satas</surname><given-names>G.</given-names></name></person-group><etal>et al</etal> (<year>2019</year>) Single-cell tumor phylogeny inference with copy-number constrained mutation losses. <italic>bioRxiv</italic>, <fpage>840355</fpage>.</mixed-citation>
    </ref>
    <ref id="btaa449-B36">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Sherry</surname><given-names>S.T.</given-names></name></person-group><etal>et al</etal> (<year>2001</year>) 
<article-title>dbSNP: the NCBI database of genetic variation</article-title>. <source>Nucleic Acids Res</source>., <volume>29</volume>, <fpage>308</fpage>–<lpage>311</lpage>.<pub-id pub-id-type="pmid">11125122</pub-id></mixed-citation>
    </ref>
    <ref id="btaa449-B37">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Singer</surname><given-names>J.</given-names></name></person-group><etal>et al</etal> (<year>2018</year>) 
<article-title>Single-cell mutation identification via phylogenetic inference</article-title>. <source>Nat. Commun</source>., <volume>9</volume>, <fpage>5144</fpage>.<pub-id pub-id-type="pmid">30514897</pub-id></mixed-citation>
    </ref>
    <ref id="btaa449-B38">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Snijders</surname><given-names>T.A.</given-names></name>, <name name-style="western"><surname>Nowicki</surname><given-names>K.</given-names></name></person-group> (<year>1997</year>) 
<article-title>Estimation and prediction for stochastic block models for graphs with latent block structure</article-title>. <source>J. Class</source>., <volume>14</volume>, <fpage>75</fpage>–<lpage>100</lpage>.</mixed-citation>
    </ref>
    <ref id="btaa449-B39">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wang</surname><given-names>Y.</given-names></name></person-group><etal>et al</etal> (<year>2014</year>) 
<article-title>Clonal evolution in breast cancer revealed by single nucleus genome sequencing</article-title>. <source>Nature</source>, <volume>512</volume>, <fpage>155</fpage>–<lpage>160</lpage>.<pub-id pub-id-type="pmid">25079324</pub-id></mixed-citation>
    </ref>
    <ref id="btaa449-B40">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wu</surname><given-names>H.</given-names></name></person-group><etal>et al</etal> (<year>2017</year>) 
<article-title>Evolution and heterogeneity of non-hereditary colorectal cancer revealed by single-cell exome sequencing</article-title>. <source>Oncogene</source>, <volume>36</volume>, <fpage>2857</fpage>–<lpage>2867</lpage>.<pub-id pub-id-type="pmid">27941887</pub-id></mixed-citation>
    </ref>
    <ref id="btaa449-B41">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Zaccaria</surname><given-names>S.</given-names></name>, <name name-style="western"><surname>Raphael</surname><given-names>B.J.</given-names></name></person-group> (<year>2019</year>) Characterizing the allele- and haplotype-specific copy number landscape of cancer genomes at single-cell resolution with chisel. <italic>bioRxiv</italic>, <fpage>837195</fpage>.</mixed-citation>
    </ref>
    <ref id="btaa449-B42">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zafar</surname><given-names>H.</given-names></name></person-group><etal>et al</etal> (<year>2019</year>) 
<article-title>Siclonefit: Bayesian inference of population structure, genotype, and phylogeny of tumor clones from single-cell genome sequencing data</article-title>. <source>Genome Res</source>., <volume>29</volume>, <fpage>1847</fpage>–<lpage>1859</lpage>.<pub-id pub-id-type="pmid">31628257</pub-id></mixed-citation>
    </ref>
    <ref id="btaa449-B43">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Zha</surname><given-names>H.</given-names></name></person-group><etal>et al</etal> (<year>2001</year>) Bipartite graph partitioning and data clustering. In: <italic>Proceedings of the Tenth International Conference</italic> on Information and <italic>Knowledge Management</italic> ACM, Atlanta, Georgia, pp. <fpage>25</fpage>–<lpage>32</lpage>.</mixed-citation>
    </ref>
    <ref id="btaa449-B44">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zhou</surname><given-names>Z.</given-names></name>, <name name-style="western"><surname>Amini</surname><given-names>A.A.</given-names></name></person-group> (<year>2019</year>) 
<article-title>Analysis of spectral clustering algorithms for community detection: the general bipartite setting</article-title>. <source>J. Mach. Learn. Res</source>., <volume>20</volume>, <fpage>1</fpage>–<lpage>47</lpage>.</mixed-citation>
    </ref>
  </ref-list>
</back>

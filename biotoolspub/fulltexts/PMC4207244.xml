<?properties open_access?>
<?subarticle report9845?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v3.0 20080202//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName journalpublishing3.dtd?>
<?SourceDTD.Version 3.0?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">F1000Res</journal-id>
    <journal-id journal-id-type="iso-abbrev">F1000Res</journal-id>
    <journal-id journal-id-type="pmc">F1000Research</journal-id>
    <journal-title-group>
      <journal-title>F1000Research</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2046-1402</issn>
    <publisher>
      <publisher-name>F1000Research</publisher-name>
      <publisher-loc>London, UK</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">4207244</article-id>
    <article-id pub-id-type="pmid">25352980</article-id>
    <article-id pub-id-type="doi">10.12688/f1000research.4392.2</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software Tool Article</subject>
      </subj-group>
      <subj-group>
        <subject>Articles</subject>
        <subj-group>
          <subject>Bioinformatics</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>setsApp for Cytoscape: Set operations for Cytoscape Nodes and Edges</article-title>
      <fn-group content-type="pub-status">
        <fn>
          <p>v2; ref status: indexed</p>
        </fn>
      </fn-group>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Morris</surname>
          <given-names>John H.</given-names>
        </name>
        <xref ref-type="corresp" rid="c1">a</xref>
        <xref ref-type="aff" rid="a1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Lotia</surname>
          <given-names>Samad</given-names>
        </name>
        <xref ref-type="aff" rid="a2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Wu</surname>
          <given-names>Allan</given-names>
        </name>
        <xref ref-type="aff" rid="a1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Doncheva</surname>
          <given-names>Nadezhda T.</given-names>
        </name>
        <xref ref-type="aff" rid="a1">1</xref>
        <xref ref-type="aff" rid="a3">3</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Albrecht</surname>
          <given-names>Mario</given-names>
        </name>
        <xref ref-type="aff" rid="a4">4</xref>
        <xref ref-type="aff" rid="a5">5</xref>
        <xref ref-type="aff" rid="a6">6</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Pico</surname>
          <given-names>Alexander R.</given-names>
        </name>
        <xref ref-type="aff" rid="a2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Ferrin</surname>
          <given-names>Thomas E</given-names>
        </name>
        <xref ref-type="aff" rid="a1">1</xref>
      </contrib>
      <aff id="a1"><label>1</label>Resource for Biocomputing, Visualization, and Informatics, University of California, San Francisco, CA 94143, USA</aff>
      <aff id="a2"><label>2</label>Gladstone Institutes, San Francisco, CA, USA</aff>
      <aff id="a3"><label>3</label>Max Planck Institute for Informatics, Saarbrücken, 66123, Germany</aff>
      <aff id="a4"><label>4</label>University Medicine Greifswald, Greifswald, 17489, Germany</aff>
      <aff id="a5"><label>5</label>Graz University of Technology, Graz, 8010, Austria</aff>
      <aff id="a6"><label>6</label>BioTechMed-Graz, Graz, 8036, Austria</aff>
    </contrib-group>
    <author-notes>
      <corresp id="c1">
        <label>a</label>
        <email xlink:href="mailto:scooter@cgl.ucsf.edu">scooter@cgl.ucsf.edu</email>
      </corresp>
      <fn fn-type="con">
        <p>JHM and SL wrote the manuscript and enhanced the app. AW ported the initial version of the app from Cytoscape 2.8 to Cytoscape 3. NTD wrote the initial version of the app. MA, AP and TF supervised app development and provided input on the manuscript.</p>
      </fn>
      <fn fn-type="conflict">
        <p><bold>Competing interests: </bold>No competing interests were disclosed.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="epub">
      <day>5</day>
      <month>8</month>
      <year>2015</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2014</year>
    </pub-date>
    <volume>3</volume>
    <elocation-id>149</elocation-id>
    <history>
      <date date-type="accepted">
        <day>2</day>
        <month>7</month>
        <year>2015</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright: © 2015 Morris JH et al.</copyright-statement>
      <copyright-year>2015</copyright-year>
      <license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an open access article distributed under the terms of the Creative Commons Attribution Licence, which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri content-type="pdf" xlink:type="simple" xlink:href="f1000research-3-7271.pdf"/>
    <abstract>
      <p>setsApp (
<ext-link ext-link-type="uri" xlink:href="http://apps.cytoscape.org/apps/setsapp">http://apps.cytoscape.org/apps/setsapp</ext-link>) is a relatively simple Cytoscape 3 app for users to handle groups of nodes and/or edges. It supports several important biological workflows and enables various set operations. setsApp provides basic tools to create sets of nodes or edges, import or export sets, and perform standard set operations (union, difference, intersection) on those sets. Automatic set partitioning and layout functions are also provided. The sets functionality is also exposed to users and app developers in the form of a set of commands that can be used for scripting purposes or integrated in other Cytoscape apps.</p>
    </abstract>
    <kwd-group kwd-group-type="author">
      <kwd>cytoscape</kwd>
      <kwd>app</kwd>
      <kwd>sets functionality</kwd>
    </kwd-group>
    <funding-group>
      <award-group id="fund-1">
        <funding-source>NIGMS</funding-source>
        <award-id>P41-GM103504</award-id>
        <award-id>P41-GM103311</award-id>
      </award-group>
      <award-group id="fund-2">
        <funding-source>Boehringer Ingelheim Fonds</funding-source>
      </award-group>
      <award-group id="fund-3">
        <funding-source>Deutsche Forschungsgemeinschaft</funding-source>
      </award-group>
      <funding-statement>JHM, SL and AP were funded by NIGMS grants P41-GM103504 and P41-GM103311. AW and TF were funded by NIGMS grant P41-GM103311. NTD was partially funded by a Boehringer Ingelheim Fonds travel grant, and her research was conducted in the context of the DFG-funded Cluster of Excellence for Multimodal Computing and Interaction. MA was financially supported by the projects GANI_MED and BioTechMed-Graz.</funding-statement>
    </funding-group>
  </article-meta>
  <notes notes-type="version-changes">
    <sec>
      <label>Updated</label>
      <title>Changes from Version 1</title>
      <p>In this revised version of the article, we have extended our software to include two new features: automatic partitioning of sets and layout algorithms adapted to be setaware. To incorporate these changes, we updated screenshots and descriptions of the UI, included a new paragraph in the Results as well as sentences in existing paragraphs, and added two new authors.</p>
    </sec>
  </notes>
</front>
<body>
  <sec sec-type="intro">
    <title>Introduction</title>
    <p>Cytoscape
<sup><xref rid="ref-1" ref-type="bibr">1</xref>,
<xref rid="ref-2" ref-type="bibr">2</xref></sup> provides an environment for the visualization and analysis of networks and associated annotations. The primary audience for Cytoscape is the biological community and Cytoscape supports a number of standard use cases for analyzing and visualizing biological data. Many of these use cases involve the selection of a number of nodes or edges based on some analysis or annotation and either performing an action on that selection or comparing those nodes or edges to a different set of nodes or edges that resulted from alternative analyses or analyses based on alternative annotations. The core capabilities for Cytoscape provide some tools to facilitate these types of comparisons but they can be counterintuitive or complicated to use.
<italic>setsApp</italic> is a Cytoscape 3 application that provides a general set of tools for users and developers to define and maintain sets of nodes or edges and compare those sets using the standard set operations of union, intersection, and difference. Partition and layout features are also provided to assist in generating sets and performing set-aware layouts.</p>
    <p>In this paper, we present the implementation of
<italic>setsApp</italic>, in particular, how
<italic>setsApp</italic> integrates with the Cytoscape command system, and then present a sample biological workflow using
<italic>setsApp</italic>.</p>
  </sec>
  <sec>
    <title>Implementation</title>
    <p>Cytoscape provides two approaches to implementing apps: a simple app and a bundle app. Simple apps are implemented using the same general approach as in Cytoscape 2.8, but at the cost of significant flexibility. Bundle apps utilize Open Service Gateway Initiative (OSGi)
<sup><xref rid="ref-3" ref-type="bibr">3</xref></sup> interfaces through APIs provided by Cytoscape to interact with the Cytoscape core functionality.
<italic>setsApp</italic> is implemented as a bundle app and utilizes the Cytoscape 3.1.0 API. There are three main components to the
<italic>setsApp</italic> implementation: the user interface, the command interface, and the underlying data model for maintaining sets of nodes and edges.</p>
    <sec>
      <title>User interface</title>
      <p>The
<italic>setsApp</italic> user interface consists of menu items in the main Apps menu, node and edge context menus, and a panel added to the
<bold>Control Panel</bold> (left or west) section of the Cytoscape user interface. The main feature of the
<bold>Sets</bold> panel is the list of currently defined sets. Each set can be expanded to see all of the nodes or edges within that set, and context menus provide the ability to select, deselect, rename, or remove sets. As long as you have one set defined,
<bold>Partition</bold> and
<bold>Layout</bold> buttons will be active at the bottom of the panel. The partition feature will create new sets based on shared and excluded sets present in all currently defined sets. The layout feature will perform the selected layout algorithm taking into account set memberships, i.e., attempting to keep sets close together. When multiple sets are selected, the
<bold>Set Operations</bold> buttons are enabled. This allows users to create new sets based on the union, intersection, or difference of other sets. Note that the results of a union or intersection are well-defined for multiple sets, but the difference operation is order dependent. If only two sets are selected, the order of selection is preserved. If more than two sets are selected, the order is the order of selection, so care must be taken when attempting to create a difference set of more than two sets. Sets can be created from the currently selected nodes or edges, or based on a particular node or edge attribute. When creating sets from attributes, the user will need to supply a prefix for the sets to be created and choose the attribute (currently only String attributes are supported) from a list. Sets can also be created by importing them from a simple text file. Each set can be individually exported to a text file.</p>
      <p><italic>setsApp</italic> provides a context menu for sets and set members in the control pane. In addition to having menu items to manage sets, the user may select all set members in the network, or if the set is expanded, individual members. This functionality presents an easy way for users to visualize the results of set operations and to perform interactive exploratory analysis.</p>
      <p>The menus provided through the top-level Apps menu offer the same functionality as the
<bold>Create set from</bold> menu in the
<italic>setsApp</italic> control panel with the addition of a menu to import a set from a file. Node and edge context menus provide the user with the ability to add or remove the corresponding node or edge from sets.</p>
    </sec>
    <sec>
      <title>Command interface</title>
      <p>In addition to the standard user interface described above,
<italic>setsApp</italic> provides a number of “commands”. These commands may be used for scripting purposes or by other Cytoscape apps that wish to take advantage of the
<italic>setsApp</italic> functionality.
<xref ref-type="table" rid="T1">Table 1</xref> provides a list of commands and the arguments.</p>
      <table-wrap id="T1" orientation="portrait" position="anchor">
        <label>Table 1. </label>
        <caption>
          <title><italic>setsApp</italic> Commands.</title>
          <p>Arguments with asterisks are required.</p>
        </caption>
        <table frame="hsides" rules="groups" content-type="article-table">
          <thead>
            <tr>
              <th align="left" rowspan="1" colspan="1">Command</th>
              <th align="left" rowspan="1" colspan="1">Arguments</th>
              <th align="left" rowspan="1" colspan="1">Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td valign="top" rowspan="1" colspan="1"><italic>setsApp</italic> addTo</td>
              <td valign="top" rowspan="1" colspan="1"><bold>edgeList</bold>=
<italic>list of edges</italic>*
<break/><bold>nodeList</bold>=
<italic>list of nodes</italic>*
<break/><bold>network</bold>=
<italic>network to use</italic><break/><bold>name</bold>=
<italic>name of set</italic>*</td>
              <td valign="top" rowspan="1" colspan="1">Adds the listed nodes or edges to the named set. An
<break/>error will occur if the types (node or edge) do not match
<break/>or if the set does not exist. The set name and one of
<break/>edgeList or nodeList are required.</td>
            </tr>
            <tr>
              <td valign="top" rowspan="1" colspan="1"><italic>setsApp</italic> createSet</td>
              <td valign="top" rowspan="1" colspan="1"><bold>edgeList</bold>=
<italic>list of edges</italic>*
<break/><bold>nodeList</bold>=
<italic>list of nodes</italic>*
<break/><bold>network</bold>=
<italic>network to use</italic><break/><bold>name</bold>=
<italic>name of set</italic>*</td>
              <td valign="top" rowspan="1" colspan="1">Creates the set from the edge or node list. It throws an
<break/>error if both edge and node lists are provided.</td>
            </tr>
            <tr>
              <td valign="top" rowspan="1" colspan="1"><italic>setsApp</italic> difference</td>
              <td valign="top" rowspan="1" colspan="1"><bold>name</bold>=
<italic>name of new set</italic>*
<break/><bold>set1</bold>=
<italic>name of the first set</italic>*
<break/><bold>set2</bold>=
<italic>name of the second set</italic>*</td>
              <td valign="top" rowspan="1" colspan="1">Performs a difference of two sets and puts the result into
<break/>a new set.</td>
            </tr>
            <tr>
              <td valign="top" rowspan="1" colspan="1"><italic>setsApp</italic> export</td>
              <td valign="top" rowspan="1" colspan="1"><bold>Column</bold>=
<italic>column containing the</italic><break/><italic>id key</italic><break/><bold>name</bold>=
<italic>name of set</italic>*
<break/><bold>setFile</bold>=
<italic>path to the file to import</italic>*</td>
              <td valign="top" rowspan="1" colspan="1">Exports a set to the specified file using the designated
<break/>column to identify the node or edge.</td>
            </tr>
            <tr>
              <td valign="top" rowspan="1" colspan="1"><italic>setsApp</italic> import</td>
              <td valign="top" rowspan="1" colspan="1"><bold>Column</bold>=
<italic>column containing the</italic><break/><italic>id key</italic><break/><bold>Type</bold>=
<bold>[Node|Edge]*</bold><break/><bold>name</bold>=
<italic>name of set</italic>*
<break/><bold>setFile</bold>=
<italic>path to the file to import</italic>*</td>
              <td valign="top" rowspan="1" colspan="1">Exports a set to the specified file using the designated
<break/>column to match the node or edge identifier from the file.</td>
            </tr>
            <tr>
              <td valign="top" rowspan="1" colspan="1"><italic>setsApp</italic> intersect</td>
              <td valign="top" rowspan="1" colspan="1"><bold>name</bold>=
<italic>name of new set</italic>*
<break/><bold>set1</bold>=
<italic>name of the first set</italic>*
<break/><bold>set2</bold>=
<italic>name of the second set</italic>*</td>
              <td valign="top" rowspan="1" colspan="1">Performs an intersection of two sets and puts the result
<break/>into a new set.</td>
            </tr>
            <tr>
              <td valign="top" rowspan="1" colspan="1"><italic>setsApp</italic> remove</td>
              <td valign="top" rowspan="1" colspan="1"><bold>name</bold>=
<italic>name of set</italic>*</td>
              <td valign="top" rowspan="1" colspan="1">Removes (deletes) the set.</td>
            </tr>
            <tr>
              <td valign="top" rowspan="1" colspan="1"><italic>setsApp</italic><break/>removeFrom</td>
              <td valign="top" rowspan="1" colspan="1"><bold>edgeList</bold>=
<italic>list of edges</italic>*
<break/><bold>nodeList</bold>=
<italic>list of nodes</italic>*
<break/><bold>network</bold>=
<italic>network to use</italic><break/><bold>name</bold>=
<italic>name of set</italic>*</td>
              <td valign="top" rowspan="1" colspan="1">Removes the listed nodes or edges from the named set.
<break/>An error will occur if the types (node or edge) do not
<break/>match or if the set does not exist. The set name and one
<break/>of edgeList or nodeList are required.</td>
            </tr>
            <tr>
              <td valign="top" rowspan="1" colspan="1"><italic>setsApp</italic> rename</td>
              <td valign="top" rowspan="1" colspan="1"><bold>newName</bold>=
<italic>new name for the set</italic><break/><bold>oldName</bold>=
<italic>old (current) name for</italic><break/><italic>the set</italic></td>
              <td valign="top" rowspan="1" colspan="1">Renames an existing set.</td>
            </tr>
            <tr>
              <td valign="top" rowspan="1" colspan="1"><italic>setsApp</italic> union</td>
              <td valign="top" rowspan="1" colspan="1"><bold>name</bold>=
<italic>name of new set</italic>*
<break/><bold>set1</bold>=
<italic>name of the first set</italic>*
<break/><bold>set2</bold>=
<italic>name of the second set</italic>*</td>
              <td valign="top" rowspan="1" colspan="1">Performs a union of two sets and puts the result into a
<break/>new set.</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      <p>A command is made available to Cytoscape by creating a standard Cytoscape TaskFactory with two new properties in the org.cytoscape.work package: ServiceProperties.COMMAND_NAMESPACE, which is always set to “
<italic>setsApp</italic>”; and ServiceProperties.COMMAND, which is the command name (e.g. “addTo”). The command arguments are implemented as Tunables within the Task called by the designated TaskFactory. Because there is no guarantee that the Task will be executed within the context of a GUI, care should be taken to make sure that the appropriate Tunable types are used. For example, the NodeList Tunable allows the command-line user to enter a list of nodes rather than assuming that the user will have selected nodes interactively.</p>
      <p>For another Cytoscape app to use any of these commands, it would need to call one of the Cytoscape TaskManagers and provide it org.cytoscape.command.CommandExecutorTaskFactory’s createTaskIterator method with the appropriate argument map, command, and command namespace. The TaskObserver method may be used if the command returns any values. For example:</p>
      <p id="l1">
        <bold><styled-content style="#CA6538" style-type="color">Listing 1.</styled-content> Example Command Usage.</bold>
      </p>
      <p>
        <preformat>
          <styled-content>SynchronousTaskManager tm =
  serviceRegistrar. getService
      (SynchronousTaskManager.</styled-content>
          <styled-content style="color:#0000FF">class</styled-content>
          <styled-content>);
CommandExecutorTaskFactory cetf =
  serviceRegistrar. getService
      (CommandExecutorTaskFactory.</styled-content>
          <styled-content style="color:#0000FF">class</styled-content>
          <styled-content>);
Map&lt;String, Object&gt; argMap = </styled-content>
          <styled-content style="color:#0000FF">new</styled-content>
          <styled-content>HashMap&lt;String, Object&gt;();
argMap.put(</styled-content>
          <styled-content style="color:#9400D1">"name"</styled-content>
          <styled-content>, </styled-content>
          <styled-content style="color:#9400D1">"NewSet"</styled-content>
          <styled-content>);</styled-content>
          <styled-content style="color:#009900">// selected is a special keyword for the</styled-content>
          <styled-content style="color:#009900">NodeList tunable</styled-content>
          <styled-content>argMap.put(</styled-content>
          <styled-content style="color:#9400D1">"nodeList"</styled-content>
          <styled-content>,</styled-content>
          <styled-content style="color:#9400D1">"selected"</styled-content>
          <styled-content>);</styled-content>
          <styled-content style="color:#009900">// the current network</styled-content>
          <styled-content>argMap.put(</styled-content>
          <styled-content style="color:#9400D1">"network"</styled-content>
          <styled-content>,</styled-content>
          <styled-content style="color:#9400D1">"current"</styled-content>
          <styled-content>);</styled-content>
          <styled-content style="color:#009900">// Assumes that this implements TaskObserver</styled-content>
          <styled-content>tm.execute(cetf.createTaskIterator(</styled-content>
          <styled-content style="color:#9400D1">"setsApp"</styled-content>
          <styled-content>,</styled-content>
          <styled-content style="color:#9400D1">"createSet"</styled-content>
          <styled-content>, </styled-content>
          <styled-content>argMap, </styled-content>
          <styled-content style="color:#0000FF">this</styled-content>
          <styled-content>), </styled-content>
          <styled-content style="color:#0000FF">this</styled-content>
          <styled-content>);</styled-content>
        </preformat>
      </p>
    </sec>
    <sec>
      <title>Data model</title>
      <p>The main model object for a node or edge set is the
<italic>Set</italic> object, which stores a map of all of the nodes or edges in this set. A
<italic>SetsManager</italic> provides the methods to create and destroy sets. The
<italic>SetsManager</italic> also serves the critical function of serializing the information about Sets to the default hidden table (see CyNetwork.HIDDEN_ATTRS) for nodes or edges (depending on the type of the Set). Each Set is created as a boolean column in the hidden table which is set to
<bold>true</bold> if the corresponding node or edge is in that set. By storing values in the default hidden tables, the information about sets is automatically saved in Cytoscape sessions and restored when sessions are reloaded.
<italic>SetsManager</italic> implements
<italic>SessionReloadedListener</italic> and recreates the
<italic>Set</italic>s from the information stored in the hidden table columns.</p>
    </sec>
  </sec>
  <sec sec-type="results">
    <title>Results</title>
    <p>A simple example use case might be the exploration of the data set from Ideker
<italic>et al.</italic>, 2001
<sup><xref rid="ref-4" ref-type="bibr">4</xref></sup>, which measured the change in expression for 331 genes after a systematic deletion of genes known to be involved in the
<italic>Saccharomyces cerevisiae</italic> switch to galactose metabolism. This data was combined with known protein-protein and protein-DNA interactions to explore the biological response to deletions in the presence (the G in the column names) or absence of galactose in the medium. This data set is now included as a sample with Cytoscape downloads (
<italic>galFiltered.cys</italic>). In our workflow we use Cytoscape’s
<bold>Select</bold> panel to select all proteins that are underexpressed (gal1RGexp &lt; -0.5 fold change) in the deletion of GAL1 (
<xref ref-type="fig" rid="f1">Figure 1</xref>). That selection is saved as a set named GAL1- (
<bold>Apps→
<italic>SetsApp</italic>→Create node set</bold>). We then select all of the proteins that are overexpressed (gal1RGexp &gt; 0.5 fold change) in the deletion of GAL1 and save that selection as a set named GAL1+. Repeating this for GAL4 (column gal4RGexp) and GAL80 (column gal80Rexp) results in 6 sets altogether: GAL1+, GAL1-, GAL4+, GAL4-, GAL80+, GAL80- (
<xref ref-type="fig" rid="f2">Figure 2</xref>). Note that the data for GAL1 and GAL4 is in the presence of galactose, but the data for GAL80 is in the absence of galactose since GAL80 is a known repressor of GAL4.</p>
    <fig fig-type="figure" id="f1" orientation="portrait" position="float">
      <label>Figure 1. </label>
      <caption>
        <title>Screenshot of Cytoscape’s Select panel with underexpressed genes in the gal1RGexp condition being selected.</title>
        <p>Nodes that match the gal1RGexp condition are highlighted in red.</p>
      </caption>
      <graphic xlink:href="f1000research-3-7271-g0000"/>
    </fig>
    <fig fig-type="figure" id="f2" orientation="portrait" position="float">
      <label>Figure 2. </label>
      <caption>
        <title>Screenshot of Cytoscape showing the Sets panel with all condition sets created.</title>
        <p>Nodes in the GAL+ set are highlighted in red.</p>
      </caption>
      <graphic xlink:href="f1000research-3-7271-g0001"/>
    </fig>
    <p>Given those six sets of genes, we can explore the data sets by looking at combinations of the sets. For example, we could look at the intersection of all of the underexpressed proteins by selecting each of GAL1-, GAL4-, and GAL80- in the
<bold>Sets</bold> panel and pressing the
<bold>Intersection</bold> button in the
<bold>Set Operations</bold> box near the bottom of the panel. If we name the resulting set GAL- we see that it contains a single gene: YOL058W (ARG1). In this data set of 331 genes, only this one gene is repressed for all three of the deleted GAL genes. In the absence of galactose when GAL80 is deleted, ARG1 is underexpressed, and in the presence of galactose when either GAL1 or GAL4 are deleted the gene is also underexpressed. Looking at the expression significance values in the Node Table Panel of Cytoscape (gal1RGsig, gal4RGsig, and gal80Rsig) this is a highly significant result, although there is no direct correlation between the galactose switch and arginine biosynthesis regulation that we were able to find in the literature. On the other hand, ARG1 is regulated by the GCN4 activator which is known to repress protein synthesis during periods of stress or starvation
<sup><xref rid="ref-5" ref-type="bibr">5</xref></sup>, which explains the significant down-regulation of ARG1. We can perform a similar analysis to understand the consistent up-regulation of the five genes in the GAL+ set corresponding to gene symbols: GIP1, NCE103, YIG1, POT1, and ICL1.
<xref ref-type="fig" rid="f2">Figure 2</xref> shows the results of the intersection operations.</p>
    <p>We can also explore data sets by using layout algorithms that are informed by the sets we created earlier. By default, Cytoscape provides over a dozen layout algorithms that spatially place nodes in order to help elucidate meaningful patterns of relationships in networks. Most layout algorithms take into account connectivity between nodes.
<italic>SetsApp</italic> augments Cytoscape by supplying two additional layout algorithms that take set membership into account. The setsbased grid layout places nodes in the same set together into independent grids, i.e., a grid of grids. This is ideal for quickly separating nodes in different sets for manual manipulation later on. The setsbased force directed layout employs the Prefuse force directed layout provided by Cytoscape but also tries to put nodes in the same set closer together in the network. Users can adjust the force between nodes in a given set relative to connected nodes and thereby emphasize or diminish the grouping based on set membership by changing values in the layout settings panel (
<bold>Layout</bold>→
<bold>Settings</bold>... ).</p>
  </sec>
  <sec sec-type="conclusions">
    <title>Conclusions</title>
    <p>There are many Cytoscape workflows that could take advantage of the features of
<italic>setsApp</italic>. Any workflow that might want to look for groups of nodes or edges that share multiple traits, or that explicitly do not share those traits. While it is possible to duplicate many of the final results enabled by
<italic>setsApp</italic> by using Cytoscape 3.1’s new
<bold>Select</bold> panel, a user would need to know in advance exactly the combination of features that were biologically interesting.
<italic>setsApp</italic> provides an alternative that allows users to explore various combinations of nodes and edges and to save such selections for later uses. We also provide layout algorithms that take set membership into consideration.</p>
    <p>In the workflow we developed above, we combined the functionality of Cytoscape’s
<bold>Select</bold> panel with
<italic>setsApp</italic> to explore combinations of sets of genes based on shared properties. There are many more sophisticated apps available to Cytoscape users that could be used to do a more thorough analysis of this data set including jActiveModules
<sup><xref rid="ref-6" ref-type="bibr">6</xref></sup>, clusterMaker
<sup><xref rid="ref-7" ref-type="bibr">7</xref></sup> and RINalyzer
<sup><xref rid="ref-8" ref-type="bibr">8</xref></sup>, however, the workflow above demonstrates the utility of a simple set-oriented approach to exploring networks.</p>
  </sec>
  <sec>
    <title>Software availability</title>
    <p>Software available from:
<ext-link ext-link-type="uri" xlink:href="http://apps.cytoscape.org/apps/setsApp">http://apps.cytoscape.org/apps/setsApp</ext-link>
</p>
    <p>Latest source code:
<ext-link ext-link-type="uri" xlink:href="https://github.com/RBVI/setsApp">https://github.com/RBVI/setsApp</ext-link>
</p>
    <p>Source code as at the time of publication:
<ext-link ext-link-type="uri" xlink:href="https://github.com/F1000Research/setsApp">https://github.com/F1000Research/setsApp</ext-link>
</p>
    <p>Archived code as at the time of publication:
<ext-link ext-link-type="uri" xlink:href="http://www.dx.doi.org/10.5281/zenodo.10424">http://www.dx.doi.org/10.5281/zenodo.10424</ext-link>
<sup><xref rid="ref-9" ref-type="bibr">9</xref></sup>
</p>
    <p>License: Lesser GNU Public License 3.0:
<ext-link ext-link-type="uri" xlink:href="https://www.gnu.org/licenses/lgpl.html">https://www.gnu.org/licenses/lgpl.html</ext-link>
</p>
  </sec>
</body>
<back>
  <ref-list>
    <ref id="ref-1">
      <label>1</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Shannon</surname><given-names>P</given-names></name><name><surname>Markiel</surname><given-names>A</given-names></name><name><surname>Ozier</surname><given-names>O</given-names></name><etal/></person-group>:
<article-title>Cytoscape: a software environment for integrated models of biomolecular interaction networks.</article-title><source><italic>Genome Res.</italic></source><year>2003</year>;<volume>13</volume>(<issue>11</issue>):<fpage>2498</fpage>–<lpage>504</lpage>.
<pub-id pub-id-type="doi">10.1101/gr.1239303</pub-id><!--<pub-id pub-id-type="pmcid">403769</pub-id>--><?supplied-pmid 14597658?><pub-id pub-id-type="pmid">14597658</pub-id></mixed-citation>
    </ref>
    <ref id="ref-2">
      <label>2</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Cline</surname><given-names>MS</given-names></name><name><surname>Smoot</surname><given-names>M</given-names></name><name><surname>Cerami</surname><given-names>E</given-names></name><etal/></person-group>:
<article-title>Integration of biological networks and gene expression data using Cytoscape.</article-title><source><italic>Nat Protoc.</italic></source><year>2007</year>;<volume>2</volume>(<issue>10</issue>):<fpage>2366</fpage>–<lpage>82</lpage>.
<pub-id pub-id-type="doi">10.1038/nprot.2007.324</pub-id><!--<pub-id pub-id-type="pmcid">3685583</pub-id>--><?supplied-pmid 17947979?><pub-id pub-id-type="pmid">17947979</pub-id></mixed-citation>
    </ref>
    <ref id="ref-3">
      <label>3</label>
      <mixed-citation publication-type="journal"><collab>OSGi Alliance</collab>.
<article-title>OSGi service platform: release 3, March 2003</article-title>. IOS Press: Ohmsha, Amsterdam; Washington, DC,<year>2003</year><ext-link ext-link-type="uri" xlink:href="http://www.osgi.org/download/r3/r3.book.pdf">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-4">
      <label>4</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ideker</surname><given-names>T</given-names></name><name><surname>Thorsson</surname><given-names>V</given-names></name><name><surname>Ranish</surname><given-names>JA</given-names></name><etal/></person-group>:
<article-title>Integrated genomic and proteomic analyses of a systematically perturbed metabolic network.</article-title><source><italic>Science.</italic></source><year>2001</year>;<volume>292</volume>(<issue>5518</issue>):<fpage>929</fpage>–<lpage>34</lpage>.
<pub-id pub-id-type="doi">10.1126/science.292.5518.929</pub-id><?supplied-pmid 11340206?><pub-id pub-id-type="pmid">11340206</pub-id></mixed-citation>
    </ref>
    <ref id="ref-5">
      <label>5</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hinnebusch</surname><given-names>AG</given-names></name></person-group>:
<article-title>Translational regulation of yeast
<italic>GCN4</italic>. A window on factors that control initiator-tRNA binding to the ribosome.</article-title><source><italic>J Biol Chem.</italic></source><year>1997</year>;<volume>272</volume>(<issue>35</issue>):<fpage>21661</fpage>–<lpage>4</lpage>.
<pub-id pub-id-type="doi">10.1074/jbc.272.35.21661</pub-id><?supplied-pmid 9268289?><pub-id pub-id-type="pmid">9268289</pub-id></mixed-citation>
    </ref>
    <ref id="ref-6">
      <label>6</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ideker</surname><given-names>T</given-names></name><name><surname>Ozier</surname><given-names>O</given-names></name><name><surname>Schwikowski</surname><given-names>B</given-names></name><etal/></person-group>:
<article-title>Discovering regulatory and signalling circuits in molecular interaction networks.</article-title><source><italic>Bioinformatics.</italic></source><year>2002</year>;<volume>18</volume>(<issue>Suppl 1</issue>):<fpage>S233</fpage>–<lpage>40</lpage>.
<pub-id pub-id-type="doi">10.1093/bioinformatics/18.suppl_1.S233</pub-id><?supplied-pmid 12169552?><pub-id pub-id-type="pmid">12169552</pub-id></mixed-citation>
    </ref>
    <ref id="ref-7">
      <label>7</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Morris</surname><given-names>JH</given-names></name><name><surname>Apeltsin</surname><given-names>L</given-names></name><name><surname>Newman</surname><given-names>AM</given-names></name><etal/></person-group>:
<article-title><italic>clusterMaker</italic>: a multi-algorithm clustering plugin for Cytoscape.</article-title><source><italic>BMC Bioinformatics.</italic></source><year>2011</year>;<volume>12</volume>:<fpage>436</fpage>.
<pub-id pub-id-type="doi">10.1186/1471-2105-12-436</pub-id><!--<pub-id pub-id-type="pmcid">3262844</pub-id>--><?supplied-pmid 22070249?><pub-id pub-id-type="pmid">22070249</pub-id></mixed-citation>
    </ref>
    <ref id="ref-8">
      <label>8</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Doncheva</surname><given-names>NT</given-names></name><name><surname>Assenov</surname><given-names>Y</given-names></name><name><surname>Domingues</surname><given-names>FS</given-names></name><etal/></person-group>:
<article-title>Topological analysis and interactive visualization of biological networks and protein structures.</article-title><source><italic>Nat Protoc.</italic></source><year>2012</year>;<volume>7</volume>(<issue>4</issue>):<fpage>670</fpage>–<lpage>85</lpage>.
<pub-id pub-id-type="doi">10.1038/nprot.2012.004</pub-id><?supplied-pmid 22422314?><pub-id pub-id-type="pmid">22422314</pub-id></mixed-citation>
    </ref>
    <ref id="ref-9">
      <label>9</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Morris</surname><given-names>JH</given-names></name><name><surname>Wu</surname><given-names>A</given-names></name><name><surname>Doncheva</surname><given-names>NT</given-names></name><etal/></person-group>:
<article-title>F1000Research/SettsApp.</article-title><source><italic>ZENODO.</italic></source><year>2014</year><ext-link ext-link-type="uri" xlink:href="http://www.dx.doi.org/10.5281/zenodo.10424">Data Source</ext-link></mixed-citation>
    </ref>
  </ref-list>
</back>
<sub-article id="report9845" article-type="peer-review">
  <front-stub>
    <article-id pub-id-type="doi">10.5256/f1000research.7271.r9845</article-id>
    <title-group>
      <article-title>Referee response for version 2</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Munzner</surname>
          <given-names>Tamara</given-names>
        </name>
        <xref ref-type="aff" rid="r9845a1">1</xref>
        <role>Referee</role>
      </contrib>
      <aff id="r9845a1"><label>1</label>Department of Computer Science, University of British Columbia, Vancouver, BC, Canada</aff>
    </contrib-group>
    <author-notes>
      <fn fn-type="conflict">
        <p><bold>Competing interests: </bold>No competing interests were disclosed.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="epub">
      <day>6</day>
      <month>8</month>
      <year>2015</year>
    </pub-date>
    <related-article id="d35e1456" related-article-type="peer-reviewed-article" ext-link-type="doi" xlink:href="10.12688/f1000research.4392.2">Version </related-article>
    <custom-meta-group>
      <custom-meta>
        <meta-name>recommendation</meta-name>
        <meta-value>approve</meta-value>
      </custom-meta>
    </custom-meta-group>
  </front-stub>
  <body>
    <p>Revisions are reasonable.</p>
    <p>I have read this submission. I believe that I have an appropriate level of expertise to confirm that it is of an acceptable scientific standard.</p>
  </body>
</sub-article>
<sub-article id="report5299" article-type="peer-review">
  <front-stub>
    <article-id pub-id-type="doi">10.5256/f1000research.4701.r5299</article-id>
    <title-group>
      <article-title>Referee response for version 1</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Munzner</surname>
          <given-names>Tamara</given-names>
        </name>
        <xref ref-type="aff" rid="r5299a1">1</xref>
        <role>Referee</role>
      </contrib>
      <aff id="r5299a1"><label>1</label>Department of Computer Science, University of British Columbia, Vancouver, BC, Canada</aff>
    </contrib-group>
    <author-notes>
      <fn fn-type="conflict">
        <p><bold>Competing interests: </bold>No competing interests were disclosed.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="epub">
      <day>28</day>
      <month>7</month>
      <year>2014</year>
    </pub-date>
    <related-article id="d35e1504" related-article-type="peer-reviewed-article" ext-link-type="doi" xlink:href="10.12688/f1000research.4392.1">Version </related-article>
    <custom-meta-group>
      <custom-meta>
        <meta-name>recommendation</meta-name>
        <meta-value>approve</meta-value>
      </custom-meta>
    </custom-meta-group>
  </front-stub>
  <body>
    <p>This short article clearly describes the setsApp plugin for Cytoscape and walks the reader through example analysis. It ends with a useful disclaimer that the goal of the app is to provide users with a simple workflow, rather than completely novel capabilities.</p>
    <p>The paragraph covering TaskFactory details will probably require multiple passes for readers unfamiliar with Cytoscape internals, but the major point can still be gleaned from the write-up as it stands.</p>
    <p>Minor issue: </p>
    <p>It would be easier to read if the Figures were renumbered so that they match the order of discussion in the text; now Figure 1 comes after 2 and 3.</p>
    <p>I have read this submission. I believe that I have an appropriate level of expertise to confirm that it is of an acceptable scientific standard.</p>
  </body>
</sub-article>
<sub-article id="report5302" article-type="peer-review">
  <front-stub>
    <article-id pub-id-type="doi">10.5256/f1000research.4701.r5302</article-id>
    <title-group>
      <article-title>Referee response for version 1</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Kelder</surname>
          <given-names>Thomas</given-names>
        </name>
        <xref ref-type="aff" rid="r5302a1">1</xref>
        <role>Referee</role>
      </contrib>
      <aff id="r5302a1"><label>1</label>EdgeLeap B.V., Utrecht, Netherlands</aff>
    </contrib-group>
    <author-notes>
      <fn fn-type="conflict">
        <p><bold>Competing interests: </bold>No competing interests were disclosed.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="epub">
      <day>14</day>
      <month>7</month>
      <year>2014</year>
    </pub-date>
    <related-article id="d35e1558" related-article-type="peer-reviewed-article" ext-link-type="doi" xlink:href="10.12688/f1000research.4392.1">Version </related-article>
    <custom-meta-group>
      <custom-meta>
        <meta-name>recommendation</meta-name>
        <meta-value>approve</meta-value>
      </custom-meta>
    </custom-meta-group>
  </front-stub>
  <body>
    <p>The authors describe setsApp for Cytoscape, an app that provides a user and developer friendly way to define sets of nodes and edges and perform union, intersect and difference operations on these sets. The features of this app are rather basic (set definition and simple set operations), but nevertheless provide a very useful extension to core Cytoscape functionality. By designing the app so that it can be used through either the GUI or the commands interface makes it a very powerful utility component that can be used in different use cases, workflows, or as building block in other apps. The manuscript is well written and provides a clear and detailed description of the app data model, usage instructions and use case. I tested the app using Cytoscape 3.1.1 and everything worked as described.</p>
    <p><bold>Minor comments on the manuscript:</bold> 
<list list-type="order"><list-item><p>The paragraph following Table 1 is very technical. A code example to illustrate the use of Tunables would be useful. Also consider placing this paragraph after Listing 1, so the reader is first being shown how to call the setsApp commands, before diving into technical details.</p></list-item><list-item><p>Listing 1: The code example is incomplete, please define the “serviceRegistrar” variable, how would I get an instance as developer?</p></list-item></list>
</p>
    <p><bold>Minor comments and suggestions on the App:</bold> 
<list list-type="order"><list-item><p>It doesn't seem possible to compare sets across different networks, the App gives an error when I tried. What is the reasoning behind this? If the networks contain overlapping nodes, wouldn't it be valid to perform the operations across the different networks?</p></list-item><list-item><p>In case sets have been defined for multiple networks, it is hard to see in the Sets panel to which network each set belongs. The only way I could find was to click the set and choose “Select” so the nodes get selected in the corresponding network. It would be useful to group the sets by network or indicate the parent network otherwise (i.e. different colors of the red dots).</p></list-item><list-item><p>Small GUI tweak proposal: in the dialog where the user needs to specify the set name, it would be handy if the “Enter” key would map to the “Ok” button, so you don’t have to switch to the mouse. It would be more intuitive and speed up the creation of several sets.</p></list-item></list>
</p>
    <p>I have read this submission. I believe that I have an appropriate level of expertise to confirm that it is of an acceptable scientific standard.</p>
  </body>
</sub-article>
<sub-article id="report5300" article-type="peer-review">
  <front-stub>
    <article-id pub-id-type="doi">10.5256/f1000research.4701.r5300</article-id>
    <title-group>
      <article-title>Referee response for version 1</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Wang</surname>
          <given-names>Jiguang</given-names>
        </name>
        <xref ref-type="aff" rid="r5300a1">1</xref>
        <role>Referee</role>
      </contrib>
      <aff id="r5300a1"><label>1</label>Department of Biomedical Informatics, Columbia University, New York, NY, USA</aff>
    </contrib-group>
    <author-notes>
      <fn fn-type="conflict">
        <p><bold>Competing interests: </bold>No competing interests were disclosed.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="epub">
      <day>14</day>
      <month>7</month>
      <year>2014</year>
    </pub-date>
    <related-article id="d35e1635" related-article-type="peer-reviewed-article" ext-link-type="doi" xlink:href="10.12688/f1000research.4392.1">Version </related-article>
    <custom-meta-group>
      <custom-meta>
        <meta-name>recommendation</meta-name>
        <meta-value>approve</meta-value>
      </custom-meta>
    </custom-meta-group>
  </front-stub>
  <body>
    <p>This manuscript described a new Cytoscape App, named 
<italic>SetsApp.  </italic>This app provides very simple function about the operations on node or edge sets. It is
<bold> </bold>easy to install, and easy to use. I have only minor suggestions for revision:
<list list-type="order"><list-item><p>The operation "difference" on three sets is not well defined. This operation should be disabled when selecting three sets.</p></list-item><list-item><p>If a new set has the same name with the old one, there will be a warning. This is good, but when I close the warning, my operation is also closed. It will be more convenient if this app goes back to the window of "Enter a new name for the new set".</p></list-item><list-item><p>When importing sets from file: if the parameters are not properly set, the app will import nothing. It will be better if warning information tells users the parameters are not properly used.</p></list-item></list>
</p>
    <p>I have read this submission. I believe that I have an appropriate level of expertise to confirm that it is of an acceptable scientific standard.</p>
  </body>
</sub-article>

<?properties no_embargo?>
<?properties open_access?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">J Appl Crystallogr</journal-id>
    <journal-id journal-id-type="publisher-id">J. Appl. Cryst.</journal-id>
    <journal-title>Journal of Applied Crystallography</journal-title>
    <issn pub-type="ppub">0021-8898</issn>
    <publisher>
      <publisher-name>International Union of Crystallography</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">2483472</article-id>
    <article-id pub-id-type="publisher-id">he5368</article-id>
    <article-id pub-id-type="doi">10.1107/S0021889807021206</article-id>
    <article-id pub-id-type="coden">JACGAR</article-id>
    <article-id pub-id-type="pii">S0021889807021206</article-id>
    <article-id pub-id-type="pmid">19461840</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research Papers</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title><italic>Phaser</italic> crystallographic software</article-title>
      <alt-title>
        <italic>Phaser</italic>
      </alt-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>McCoy</surname>
          <given-names>Airlie J.</given-names>
        </name>
        <xref ref-type="aff" rid="a">a</xref>
        <xref ref-type="corresp" rid="cor">*</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Grosse-Kunstleve</surname>
          <given-names>Ralf W.</given-names>
        </name>
        <xref ref-type="aff" rid="b">b</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Adams</surname>
          <given-names>Paul D.</given-names>
        </name>
        <xref ref-type="aff" rid="b">b</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Winn</surname>
          <given-names>Martyn D.</given-names>
        </name>
        <xref ref-type="aff" rid="c">c</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Storoni</surname>
          <given-names>Laurent C.</given-names>
        </name>
        <xref ref-type="aff" rid="a">a</xref>
        <xref ref-type="author-notes" rid="aunote1">‡</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Read</surname>
          <given-names>Randy J.</given-names>
        </name>
        <xref ref-type="aff" rid="a">a</xref>
      </contrib>
      <aff id="a"><label>a</label>Department of Haematology, University of Cambridge, Cambridge Institute for Medical Research, Wellcome Trust/MRC Building, Hills Road, Cambridge CB2 0XY, <country>UK</country></aff>
      <aff id="b"><label>b</label>Lawrence Berkeley National Laboratory, One Cyclotron Road, Bldg 64R0121, Berkeley, CA 94720-8118, <country>USA</country></aff>
      <aff id="c"><label>c</label>Daresbury Laboratory, Warrington WA4 4AD, <country>UK</country></aff>
    </contrib-group>
    <author-notes>
      <corresp id="cor">Correspondence e-mail: <email>ajm201@cam.ac.uk</email></corresp>
      <fn id="aunote1" fn-type="current-aff">
        <label>‡</label>
        <p>Present address: Department of Applied Mathematics and Theoretical Physics, University of Cambridge, UK.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="ppub">
      <day>01</day>
      <month>8</month>
      <year>2007</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>13</day>
      <month>7</month>
      <year>2007</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>13</day>
      <month>7</month>
      <year>2007</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the
			<pub-date pub-type="epub"/>. -->
    <volume>40</volume>
    <issue>Pt 4</issue>
    <issue-id pub-id-type="publisher-id">j070400</issue-id>
    <fpage>658</fpage>
    <lpage>674</lpage>
    <history>
      <date date-type="received">
        <day>31</day>
        <month>1</month>
        <year>2007</year>
      </date>
      <date date-type="accepted">
        <day>27</day>
        <month>4</month>
        <year>2007</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© International Union of Crystallography 2007</copyright-statement>
      <copyright-year>2007</copyright-year>
      <license license-type="open-access" xlink:href="http://journals.iucr.org/services/termsofuse.html">
        <p>This is an open-access article distributed under the terms described at http://journals.iucr.org/services/termsofuse.html.</p>
      </license>
    </permissions>
    <self-uri xlink:type="simple" xlink:href="http://dx.doi.org/10.1107/S0021889807021206">A full version of this article is available from Crystallography Journals Online.</self-uri>
    <abstract abstract-type="toc">
      <p>A description is given of <italic>Phaser-2.1</italic>: software for phasing macromolecular crystal structures by molecular replacement and single-wavelength anomalous dispersion phasing.</p>
    </abstract>
    <abstract>
      <p><italic>Phaser</italic> is a program for phasing macromolecular crystal structures by both molecular replacement and experimental phasing methods. The novel phasing algorithms implemented in <italic>Phaser</italic> have been developed using maximum likelihood and multivariate statistics. For molecular replacement, the new algorithms have proved to be significantly better than traditional methods in discriminating correct solutions from noise, and for single-wavelength anomalous dispersion experimental phasing, the new algorithms, which account for correlations between <italic>F</italic>
               <sup>+</sup> and <italic>F</italic>
               <sup>−</sup>, give better phases (lower mean phase error with respect to the phases given by the refined structure) than those that use mean <italic>F</italic> and anomalous differences Δ<italic>F</italic>. One of the design concepts of <italic>Phaser</italic> was that it be capable of a high degree of automation. To this end, <italic>Phaser</italic> (written in C++) can be called directly from Python, although it can also be called using traditional <italic>CCP4</italic> keyword-style input. <italic>Phaser</italic> is a platform for future development of improved phasing methods and their release, including source code, to the crystallographic community.</p>
    </abstract>
    <kwd-group>
      <kwd>computer programs</kwd>
      <kwd>molecular replacement</kwd>
      <kwd>SAD phasing</kwd>
      <kwd>likelihood</kwd>
      <kwd>structural genomics</kwd>
    </kwd-group>
  </article-meta>
</front>
<body>
  <sec sec-type="introduction" id="sec1">
    <label>1.</label>
    <title>Introduction</title>
    <p>Improved crystallographic methods rely on both improved automation and improved algorithms. The software handling one part of structure solution must be automatically linked to software handling parts upstream and downstream of it in the structure solution pathway with (ideally) no user input, and the algorithms implemented in the software must be of high quality, so that the branching or termination of the structure solution pathway is minimized or eliminated. Automation allows all the choices in structure solution to be explored where the patience and job-tracking abilities of users would be exhausted, while good algorithms give solutions for poorer models, poorer data or unfavourable crystal symmetry. Both forms of improvement are essential for the success of high-throughput structural genomics (Burley <italic>et al.</italic>, 1999<xref ref-type="bibr" rid="bb7"> ▶</xref>).</p>
    <p>Macromolecular phasing by either of the two main methods, molecular replacement (MR) and experimental phasing, which includes the technique of single-wavelength anomalous dispersion (SAD), are key parts of the structure solution pathway that have potential for improvement in both automation and the underlying algorithms. MR and SAD are good phasing methods for the development of structure solution pipelines because they only involve the collection of a single data set from a single crystal and have the advantage of minimizing the effects of radiation damage. <italic>Phaser</italic> aims to facilitate automation of these methods through ease of scripting, and to facilitate the development of improved algorithms for these methods through the use of maximum likelihood and multivariate statistics.</p>
    <p>Other software shares some of these features. For molecular replacement, <italic>AMoRe</italic> (Navaza, 1994<xref ref-type="bibr" rid="bb46"> ▶</xref>) and <italic>MOLREP</italic> (Vagin &amp; Teplyakov, 1997<xref ref-type="bibr" rid="bb66"> ▶</xref>) both implement automation strategies, though they lack likelihood-based scoring functions. Likelihood-based experimental phasing can be carried out using <italic>Sharp</italic> (La Fortelle &amp; Bricogne, 1997<xref ref-type="bibr" rid="bb35"> ▶</xref>).</p>
  </sec>
  <sec id="sec2">
    <label>2.</label>
    <title>Algorithms</title>
    <p>The novel algorithms in <italic>Phaser</italic> are based on maximum likelihood probability theory and multivariate statistics rather than the traditional least-squares and Patterson methods. <italic>Phaser</italic> has novel maximum likelihood phasing algorithms for the rotation functions and translation functions in MR and the SAD function in experimental phasing, but also implements other non-likelihood algorithms that are critical to success in certain cases. Summaries of the algorithms implemented in <italic>Phaser</italic> are given below. For completeness and for consistency of notation, some equations given elsewhere are repeated here.</p>
    <sec id="sec2.1">
      <label>2.1.</label>
      <title>Maximum likelihood</title>
      <p>Maximum likelihood is a branch of statistical inference that asserts that the best model on the evidence of the data is the one that explains what has in fact been observed with the highest probability (Fisher, 1922<xref ref-type="bibr" rid="bb19"> ▶</xref>). The model is a set of parameters, including the variances describing the error estimates for the parameters. The introduction of maximum likelihood estimators into the methods of refinement, experimental phasing and, with <italic>Phaser</italic>, MR has substantially increased success rates for structure solution over the methods that they replaced. A set of thought experiments with dice (McCoy, 2004<xref ref-type="bibr" rid="bb38"> ▶</xref>) demonstrates that likelihood agrees with our intuition and illustrates the key concepts required for understanding likelihood as it is applied to crystallography.</p>
      <p>The likelihood of the model given the data is defined as the probability of the data given the model. Where the data have independent probability distributions, the joint probability of the data given the model is the product of the individual distributions. In crystallography, the data are the individual reflection intensities. These are not strictly independent, and indeed the statistical relationships resulting from positivity and atomicity underlie direct methods for small-molecule structures (reviewed by Giacovazzo, 1998<xref ref-type="bibr" rid="bb21"> ▶</xref>). For macromolecular structures, these direct-methods relationships are weaker than effects exploited by density modification methods (reviewed by Kleywegt &amp; Read, 1997<xref ref-type="bibr" rid="bb32"> ▶</xref>); the presence of solvent means that the molecular transform is over-sampled, and if there is noncrystallographic symmetry then other correlations are also present. However, the assumption of independence is necessary to make the problem tractable and works well in practice.</p>
      <p>To avoid the numerical problems of working with the product of potentially hundreds of thousands of small probabilities (one for each reflection), the log of the likelihood is used. This has a maximum at the same set of parameters as the original function. <disp-formula id="fd1"><graphic xlink:href="j-40-00658-efd1.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>Maximum likelihood also has the property that if the data are mathematically transformed to another function of the parameters, then the likelihood optimum will occur at the same set of parameters as the untransformed data. Hence, it is possible to work with either the structure-factor intensities or the structure-factor amplitudes. In the maximum likelihood functions in <italic>Phaser</italic>, the structure-factor amplitudes (<italic>F</italic>s), or normalized structure-factor amplitudes (<italic>E</italic>s, which are <italic>F</italic>s normalized so that the mean-square values are 1) are used.</p>
      <p>The crystallographic phase problem means that the phase of the structure factor is not measured in the experiment. However, it is easiest to derive the probability distributions in terms of the phased structure factors and then to eliminate the unknown phase by integration, a process known as integrating out a nuisance variable (the nuisance variable being the introduced phase of the observed structure factor, or equivalently the phase difference between the observed structure factor and its expected value). The central limit theorem applies to structure factors, which are sums of many small atomic contributions, so the probability distribution for an acentric reflection, <bold>F</bold>
               <sub>O</sub>, given the expected value of <bold>F</bold>
               <sub>O</sub> (〈<bold>F</bold>
               <sub>O</sub>〉) is a two-dimensional Gaussian with variance Σ centred on 〈<bold>F</bold>
               <sub>O</sub>〉. (Note that here and in the following, bold font is used to represent complex or signed structure factors, and italics to represent their amplitudes.)</p>
      <p>In applications to molecular replacement and structure refinement, 〈<bold>F</bold>
               <sub>O</sub>〉 is the structure factor calculated from the model (<bold>F</bold>
               <sub>C</sub>) multiplied by a fraction <italic>D</italic> (where 0 &lt; <italic>D</italic> &lt; 1; Luzzati, 1952<xref ref-type="bibr" rid="bb37"> ▶</xref>) that accounts for the effects of errors in the positions and scattering of the atoms that are correlated with the true structure factor. (If one works with <italic>E</italic> values, the factor <italic>D</italic> is replaced by <italic>σ</italic>
               <sub>A</sub> and Σ is replaced by 1 − <italic>σ</italic>
               <sub>A</sub>
               <sup>2</sup>.) Integrating out the phase between <bold>F</bold>
               <sub>O</sub> and 〈<bold>F</bold>
               <sub>O</sub>〉 gives <disp-formula id="fd2"><graphic xlink:href="j-40-00658-efd2.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>where I<sub>0</sub> is the modified Bessel function of order 0 and 〈<italic>F</italic>
               <sub>O</sub>〉 represents the absolute value of 〈<bold>F</bold>
               <sub>O</sub>〉. This is called the Rice distribution in statistical literature and is also known as the Sim (1959<xref ref-type="bibr" rid="bb60"> ▶</xref>) distribution in crystallographic literature. The special case where 〈<italic>F</italic>
               <sub>O</sub>〉 = 0 (<italic>i.e.</italic> nothing is known about the structure) is the Wilson (1949<xref ref-type="bibr" rid="bb68"> ▶</xref>) distribution, which we denote as <inline-formula><inline-graphic xlink:href="j-40-00658-efi1.jpg" mimetype="image" mime-subtype="gif"/></inline-formula>.</p>
      <p>The probability distribution for a centric <italic>F</italic>
               <sub>O</sub> given 〈<italic>F</italic>
               <sub>O</sub>〉 is the sum of two one-dimensional Gaussians: <disp-formula id="fd3"><graphic xlink:href="j-40-00658-efd3.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>This is called the Woolfson (1956<xref ref-type="bibr" rid="bb71"> ▶</xref>) distribution. The special case where 〈<italic>F</italic>
               <sub>O</sub>〉 = 0 is the centric Wilson distribution, denoted <inline-formula><inline-graphic xlink:href="j-40-00658-efi2.jpg" mimetype="image" mime-subtype="gif"/></inline-formula>.</p>
      <p>The Rice, Wilson, Woolfson and centric Wilson distributions are the basis for all the maximum likelihood functions used in <italic>Phaser</italic>. The analysis of each problem (<italic>e.g.</italic> rotation search, translation search or refinement) gives rise to different estimations of the mean of the structure-factor distribution (〈<italic>F</italic>
               <sub>O</sub>〉) and different variances of the structure-factor distribution (Σ) in each case (to give <italic>e.g.</italic> the rotation function, translation function or refinement function, respectively).</p>
      <p>When there is experimental error in <italic>F</italic>
               <sub>O</sub>, the variance of the Gaussian is inflated by an amount ν to reflect the influence of that error. This approach to the incorporation of experimental error approximates the recorded scalar measurement error on the structure-factor intensity as a complex measurement error in the structure-factor amplitude. This approximation is a good one when the measurement error makes a much smaller contribution to the variance than other contributions (for, example the model error). The suggestion to assume that the measurement error is complex was first made by Green (1979<xref ref-type="bibr" rid="bb23"> ▶</xref>) in the context of isomorphous replacement. It has been used subsequently by Murshudov <italic>et al.</italic> (1997<xref ref-type="bibr" rid="bb44"> ▶</xref>) in <italic>REFMAC</italic> and by Bricogne &amp; Irwin (1996<xref ref-type="bibr" rid="bb4"> ▶</xref>) in Buster/TNT, and has been shown to work well in practice. The Rice probability function for acentric reflections including experimental error thus takes the form <disp-formula id="fd4"><graphic xlink:href="j-40-00658-efd4.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>The variances of the Wilson, Woolfson and centric Wilson probability distributions are similarly inflated, with Σ replaced by Σ + ν.</p>
      <sec id="sec2.1.1">
        <label>2.1.1.</label>
        <title>Anisotropy correction</title>
        <p>Maximum likelihood functions are less sensitive when there is systematic variation in intensities not expected by the likelihood functions, for example an anisotropic variation in reflection intensities with direction in reciprocal space. The sensitivity of the maximum likelihood functions can be restored in this case by effectively removing the anisotropy using the method of Popov &amp; Bourenkov (2003<xref ref-type="bibr" rid="bb51"> ▶</xref>), in which an anisotropic Σ<sub>N</sub> scale factor of seven parameters is applied to both structure-factor amplitudes <italic>F</italic> and their errors (σ<sub><italic>F</italic></sub>), to generate corrected <italic>E</italic> values and their errors (σ<sub><italic>E</italic></sub> values). When expressed in terms of β values (Trueblood <italic>et al.</italic>, 1996<xref ref-type="bibr" rid="bb65"> ▶</xref>)<disp-formula id="fd5"><graphic xlink:href="j-40-00658-efd5.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>then <italic>E</italic>
                  <sub>O</sub> = <italic>F</italic>
                  <sub>O</sub>/(∊Σ<sub>N</sub>)<sup>1/2</sup> and <italic>σ</italic>
                  <sub><italic>E</italic></sub> = <italic>σ</italic>
                  <sub><italic>F</italic></sub>/(∊Σ<sub>N</sub>)<sup>1/2</sup>, where ∊ is the expected intensity factor for reflection <bold>h</bold>, which corrects for the fact that for certain reflections the contributions from symmetry-related models are identical. The function <italic>J</italic>(<bold>h</bold>) is the intensity expected, on absolute scale, from a crystal with its atoms at rest; it depends on the content of the asymmetric unit and on the resolution of the reflection only, and it is computed using the average value of scattering determined from experimental protein crystal data (the ‘BEST’ curve; Popov &amp; Bourenkov, 2003<xref ref-type="bibr" rid="bb51"> ▶</xref>). The scale factor <italic>K</italic> and the six anisotropic parameters (β<sub>1</sub>,…, <italic>β</italic>
                  <sub>6</sub>) are determined by refinement to maximize the Wilson log-likelihood function: <disp-formula id="fd6"><graphic xlink:href="j-40-00658-efd6.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>The anisotropic β values can be interconverted to anisotropic <italic>B</italic> factors or <italic>U</italic> factors (Grosse-Kunstleve &amp; Adams, 2002<xref ref-type="bibr" rid="bb24"> ▶</xref>). The degree of anisotropy reported is the difference between the largest and smallest eigenvalues (<italic>B</italic> factors) of the anisotropic tensor.</p>
      </sec>
      <sec id="sec2.1.2">
        <label>2.1.2.</label>
        <title>Brute rotation function</title>
        <p>There are two maximum likelihood rotation functions implemented in <italic>Phaser</italic>: the Wilson maximum likelihood rotation function (MLRF<sub>0</sub>) and the Sim maximum likelihood rotation function (MLRF) (Read, 2001<xref ref-type="bibr" rid="bb54"> ▶</xref>). To find the best orientation of a model, one or the other is calculated for the model on a grid of orientations covering the rotational asymmetric unit for the space group. At each search orientation the lengths of the structure factors for the model in that orientation and in its symmetry-related orientations in the unit cell are known, but the relative phases of the structure factors (which would be given by knowing the positions of the models as well as the orientations) are unknown. The probability distribution for the rotation function is thus given by a random walk of structure factors in reciprocal space; the lengths of the steps of the random walk are given by the lengths of the structure-factor contributions that make up the total structure factor for the unit cell, with an additional term being given by model incompleteness (Read, 2001<xref ref-type="bibr" rid="bb54"> ▶</xref>; McCoy, 2004<xref ref-type="bibr" rid="bb38"> ▶</xref>).</p>
        <p>For the Wilson MLRF<sub>0</sub>, the structure-factor probability for each reflection is given by a two-dimensional Gaussian centred on the origin. Integrating out the phase of <italic>F</italic>
                  <sub>O</sub> gives the probabilities of the structure-factor amplitudes, and the rotation function is expressed in terms of the logarithms of the probabilities: <disp-formula id="fd7"><graphic xlink:href="j-40-00658-efd7.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>where <inline-formula><inline-graphic xlink:href="j-40-00658-efi3.jpg" mimetype="image" mime-subtype="gif"/></inline-formula>
               </p>
        <p>Each <italic>F</italic>
                  <sub><italic>j</italic></sub> represents a structure-factor contribution with unknown phase relative to the other contributions; it could be the contribution from a single symmetry copy of the rotating molecule, or the sum of symmetry-related contributions from a component with fixed orientation and position. Σ<sub>N</sub> = 〈<inline-formula><inline-graphic xlink:href="j-40-00658-efi4.jpg" mimetype="image" mime-subtype="gif"/></inline-formula>/∊〉 is the expected value of the total structure factor. The term in curly brackets is the term given by the random walk of structure factors in the unit cell (each structure factor corrected by the correlated component of the atomic errors, <italic>D</italic>) and the term in square brackets is the additional variance due to any incompleteness of the model, <italic>i.e.</italic> Σ<sub>N</sub> reduced by the expected value of the modelled contributions.</p>
        <p>When compared with the Wilson MLRF<sub>0</sub>, somewhat better discrimination of the best orientation is given by the Sim MLRF (Read, 2001<xref ref-type="bibr" rid="bb54"> ▶</xref>), which is the default MLRF in <italic>Phaser</italic>. For the Sim MLRF, the structure-factor probability for each reflection is given by a two-dimensional Gaussian offset from the origin by the length of one of the structure-factor contributions. The probability distribution has smallest variance when the largest structure-factor contribution is chosen as the offset:<disp-formula id="fd8"><graphic xlink:href="j-40-00658-efd8.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>where <inline-formula><inline-graphic xlink:href="j-40-00658-efi5.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="j-40-00658-efi6.jpg" mimetype="image" mime-subtype="gif"/></inline-formula>.</p>
        <p>The maximum likelihood rotation functions are significantly different from previous Patterson-based rotation functions. The equations naturally account for knowledge of partial structure, since the structure-factor contributions <italic>F</italic>
                  <sub><italic>j</italic></sub> need not correspond only to the search model, but can correspond to any components modelled in the unit cell. The contribution from fixed and moving (<italic>i.e.</italic> rotating) contributions is perhaps clearer if the variances for the Sim MLRF are written in the following form <disp-formula id="fdu1"><graphic xlink:href="j-40-00658-efd9.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>
                  <disp-formula id="fdu2"><graphic xlink:href="j-40-00658-efd10.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>
                  <disp-formula id="fdu3"><graphic xlink:href="j-40-00658-efd11.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>The subscripts <italic>j</italic>
                  <sub>fix</sub> refer to the contributions of any fixed (<italic>i.e.</italic> non-rotating) models that have unknown positions relative to each other (and hence structure factors with unknown relative phase); in most cases any fixed components will have known relative positions so that their contributions can be summed to a single term. The subscripts <italic>j</italic>
                  <sub>move</sub> refer to the symmetry-related contributions from the moving (<italic>i.e.</italic> rotating) model. Putting in the contributions of fixed components improves the sensitivity of the likelihood target in two ways. First, the perturbation term Σ<sub>fix</sub> adjusts the variance according to the size of the fixed contribution, thus providing information on how much of the structure factor remains to be explained by the rotating model. Second, the fixed contribution is likely to be larger than that of any symmetry-related copy of the rotating molecule, thus reducing the overall variance through the <italic>F</italic>
                  <sub>big</sub> term. Inclusion of partial structure information in the rotation function has previously only been attempted using Patterson subtraction techniques, <italic>i.e.</italic> using coefficients |<italic>F</italic>
                  <sub>O</sub>|<sup>2</sup> − |<italic>F</italic>
                  <sub>C</sub>|<sup>2</sup> (Nordman, 1994<xref ref-type="bibr" rid="bb48"> ▶</xref>; Zhang &amp; Matthews, 1994<xref ref-type="bibr" rid="bb72"> ▶</xref>) or coefficients (|<italic>F</italic>
                  <sub>O</sub>| − |<italic>F</italic>
                  <sub><bold>C</bold></sub>|)<sup>2</sup> (Dauter <italic>et al.</italic>, 1991<xref ref-type="bibr" rid="bb14"> ▶</xref>), which suffer from the problem of achieving correct relative scaling between <italic>F</italic>
                  <sub>O</sub> and <italic>F</italic>
                  <sub>C</sub>.</p>
        <p>Maximum likelihood rotation functions can also be used to calculate ‘degenerate’ translation functions, wherein the translation in two directions perpendicular to a rotation axis is determined (Read, 2001<xref ref-type="bibr" rid="bb54"> ▶</xref>). Structure-factor contributions related by the rotation axis can be collected, whereas contributions related by other symmetry operators have unknown relative phase. Although implemented in <italic>Phaser</italic>, this application of MLRF has found little use in practice because current computational resources do not place limits on the calculation of a full three-dimensional fast translation function (see §§2.1.4<xref ref-type="sec" rid="sec2.1.4"/> and 2.1.5<xref ref-type="sec" rid="sec2.1.5"/>), which has better discrimination of the correct translation. Note that the term ‘degenerate’ as used here does not refer to the degeneracy in the coordinates of the first MR model to be fixed in space groups with an undefined origin (<italic>e.g.</italic> the <italic>y</italic> coordinate in the standard setting of <italic>P</italic>2<sub>1</sub>).</p>
      </sec>
      <sec id="sec2.1.3">
        <label>2.1.3.</label>
        <title>Fast rotation function</title>
        <p>The Sim MLRF and Wilson MLRF<sub>0</sub> are very slow to compute. A significant speed improvement is achieved in <italic>Phaser</italic> by the calculation of approximations to the Wilson MLRF<sub>0</sub>, the likelihood-enhanced fast rotation functions (LERFs; Storoni <italic>et al.</italic>, 2004<xref ref-type="bibr" rid="bb61"> ▶</xref>). The Wilson MLRF<sub>0</sub> is used as the starting point for the approximation rather than the Sim MLRF because, although the Sim MLRF gives slightly better results than the Wilson MLRF<sub>0</sub>, it requires that the biggest calculated structure factor be selected for each reflection and each orientation. The LERFs are derived from the Taylor series expansion of the Wilson MLRF<sub>0</sub> and calculated <italic>via</italic> fast Fourier transform. The highest peaks from the LERFs are then rescored with a maximum likelihood rotation function (Sim MLRF by default), which gives better discrimination of the correct orientation (Storoni <italic>et al.</italic>, 2004<xref ref-type="bibr" rid="bb61"> ▶</xref>).</p>
        <p>The first-order likelihood-enhanced fast rotation function (LERF1) is the first term in the Taylor series expansion of the Wilson MLRF<sub>0</sub>. It can be thought of as a scaled and variance weighted version of the Patterson overlap function used in the traditional Crowther (1972<xref ref-type="bibr" rid="bb13"> ▶</xref>) fast rotation function. The function can be expressed as <disp-formula id="fd9"><graphic xlink:href="j-40-00658-efd12.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>where <disp-formula id="fdu9a"><graphic xlink:href="j-40-00658-efd13.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>
                  <disp-formula id="fdu4"><graphic xlink:href="j-40-00658-efd14.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>and<disp-formula id="fdu5"><graphic xlink:href="j-40-00658-efd15.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>χ<sub>Ω</sub> is the Fourier transform of the function that takes the value 1 within the spherical volume Ω and 0 outside. χ<sub>Ω</sub> can be expressed in terms of spherical harmonics <italic>Y</italic>
                  <sub><italic>l</italic>,<italic>m</italic></sub> and the irreducible matrices of the rotation group <italic>D</italic>
                  <sup><italic>l</italic></sup>
                  <sub><italic>m</italic>,<italic>m</italic>′</sub>. When the rotation is parameterized in terms of Eulerian angles (<italic>ϕ</italic>, <italic>θ</italic>, <italic>ψ</italic>) the matrices take a form that enables computation of the rotation function for each θ as a two-dimensional fast Fourier transform.</p>
        <p>The second-order likelihood-enhanced fast rotation function (LERF2) adds to LERF1 the second-order Taylor series terms only involving models related by the identity symmetry operator (<italic>i.e.</italic> LERF2 does not include any cross-terms between symmetry-related models with different symmetry operators). <italic>Phaser</italic> also has available the traditional Crowther fast rotation function (Crowther, 1972<xref ref-type="bibr" rid="bb13"> ▶</xref>), which was implemented primarily to enable accurate comparisons with the new LERFs. Both LERF1 and LERF2 give better discrimination of the correct orientation from noise than the Crowther fast rotation function, although LERF2 does not improve the results significantly over those obtained by LERF1. Crucially, LERF2 does not significantly improve the <italic>Z</italic> score of a solution and therefore its presence in the peak list, and so the same orientations will be rescored with the Sim MLRF (or the Wilson MLRF<sub>0</sub>) no matter which of the two functions are used. LERF1 is the fast rotation function called by default.</p>
      </sec>
      <sec id="sec2.1.4">
        <label>2.1.4.</label>
        <title>Brute translation function</title>
        <p>At each search position in a translation function search the structure factors for the search model can be calculated. The maximum likelihood translation function (MLTF) is therefore the same function as the maximum likelihood refinement function (Read, 2001<xref ref-type="bibr" rid="bb54"> ▶</xref>). To find the best position of a model, the MLTF is calculated for the model on a hexagonal grid of positions,<disp-formula id="fd10"><graphic xlink:href="j-40-00658-efd16.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>where <inline-formula><inline-graphic xlink:href="j-40-00658-efi7.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="j-40-00658-efi8.jpg" mimetype="image" mime-subtype="gif"/></inline-formula>.</p>
        <p>MLTF makes good use of partial structure information to enhance the signal for the position of the model that is the subject of the search underway. The partial structure information comes from models already placed (fixed) in the asymmetric unit. This is made clearer by expressing the MLTF explicitly in terms of fixed and moving (<italic>i.e.</italic> translating) models: <disp-formula id="fd11"><graphic xlink:href="j-40-00658-efd17.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>where<disp-formula id="fdu6a"><graphic xlink:href="j-40-00658-efd18.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>
                  <disp-formula id="fdu6"><graphic xlink:href="j-40-00658-efd19.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>
                  <disp-formula id="fdu7"><graphic xlink:href="j-40-00658-efd20.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>and<disp-formula id="fdu7a"><graphic xlink:href="j-40-00658-efd21.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>
               </p>
        <p><bold>F</bold><sub>fix</sub> refers to the summed contribution of fixed models with known position and phase. <bold>F</bold>
                  <sub>move</sub> refers to the summed contribution of translating models with known position and phase at translation <bold>T</bold>. Σ<sub>T</sub> is the variance that takes into account the acquisition of extra information from the contributions of the fixed and moving models.</p>
      </sec>
      <sec id="sec2.1.5">
        <label>2.1.5.</label>
        <title>Fast translation function</title>
        <p>As are the maximum likelihood rotation functions, the MLTF is slow to compute. A speed improvement is achieved in <italic>Phaser</italic> in the same way as for the Wilson MLRF<sub>0</sub>. An approximation to MLTF, the likelihood-enhanced fast translation function (LETF), is calculated by fast Fourier transform and then the top peaks rescored with MLTF (McCoy <italic>et al.</italic>, 2005<xref ref-type="bibr" rid="bb40"> ▶</xref>). The fast translation function LETF1 was derived from the first term in the Taylor series expansion of the brute translation function described above. <disp-formula id="fd12"><graphic xlink:href="j-40-00658-efd22.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>where<disp-formula id="fdu12a"><graphic xlink:href="j-40-00658-efd23.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>and<disp-formula id="fdu12b"><graphic xlink:href="j-40-00658-efd24.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula> 
                  <disp-formula id="fdu8"><graphic xlink:href="j-40-00658-efd25.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>LETF1 is calculated with a single fast Fourier transform following the method of Navaza &amp; Vernoslova (1995<xref ref-type="bibr" rid="bb47"> ▶</xref>). As for the brute translation function, the fast translation function is able to include known partial structure information.</p>
        <p>Four other fast translation functions are implemented in <italic>Phaser</italic>. Three of these are approximations to MLTF, <italic>i.e.</italic> an alternative first-order approximation (LETFL) and two second-order approximations (LETF2 and LETFQ) (McCoy <italic>et al.</italic>, 2005<xref ref-type="bibr" rid="bb40"> ▶</xref>). There is also a form of the correlation coefficient used by other MR translation function programs [<italic>AMoRe</italic> (Navaza, 1994<xref ref-type="bibr" rid="bb46"> ▶</xref>) and <italic>MOLREP</italic> (Vagin &amp; Teplyakov, 1997<xref ref-type="bibr" rid="bb66"> ▶</xref>)]. In <italic>Phaser</italic>, the calculated structure factors are multiplied by the Luzatti <italic>D</italic> value that takes into account the expected coordinate error, <italic>via</italic> the ensembling procedure (see §<xref ref-type="sec" rid="sec2.2.2"/>2.2.2). The results are thus improved over the implementations mentioned above, which do not include this factor.</p>
        <p>All four likelihood-enhanced (LETF) approximations to MLTF give better discrimination of the correct translation from noise than the correlation coefficient (McCoy <italic>et al.</italic>, 2005<xref ref-type="bibr" rid="bb40"> ▶</xref>). The first-order approximations to MLTF also have the significant advantage that they only require one FFT sampled at <italic>d</italic>
                  <sub>min</sub>/4, while the second-order approximations have the advantage of only requiring two FFTs: the correlation coefficient requires three FFTs. Although the second-order functions are better approximations than the first-order ones, the improvement in discrimination of the correct solution is minimal, and not warranted by the increase in computation time and memory required. As in the case of the rotation function, as long as the correct solution is in the list of peaks selected as a result of the LETF, the correct position will be easily identified by the superior discrimination given by MLTF after rescoring the peaks. LETF1 is chosen as the default in <italic>Phaser</italic>.</p>
      </sec>
      <sec id="sec2.1.6">
        <label>2.1.6.</label>
        <title>Refinement target function</title>
        <p>Since the rotation and translation functions (both the brute and fast forms) are calculated on a grid of orientations and positions, it is unlikely that the highest scoring orientation or position in the search will correspond to the true maximum of the function. The optimal orientation and position for each component in the solution is found by refining them away from the search grid positions. In <italic>Phaser</italic>, appropriate choices of target function for the refinement allow it to accommodate any combination of components with defined rotation only, defined rotation and degenerate translation only, and/or defined rotation and translation. In this way, the refinement target function is different from that used in dedicated crystallographic refinement programs, which only refine structures where all components have known rotation and translation, <italic>i.e.</italic> all atoms have known coordinates. When there is a component of the solution that includes a rotation only or degenerate translation component, the Sim MLRF is used; components in the solution that have known rotations and translations are incorporated as the fixed component to the Sim MLRF. When all components of the solution have rotation and translation components, the MLTF is used, as in other refinement programs. The gradients for the refinement are generated by finite difference methods (rather than analytically).</p>
        <p>The traditional way of determining whether or not an MR solution is correct after rigid-body refinement has been to look at the <italic>R</italic> factor, with general opinion being that the final <italic>R</italic> factor should be less than 45–50% for the solution to be correct. However, the greater sensitivity of the MLRF and MLTF in discriminating the correct solution from noise with poorer models means that it is commonly the case that <italic>Phaser</italic> finds solutions with high signal to noise ratios, but with <italic>R</italic> factors considerably higher than this threshold (55% or more). The poor electron density maps for structures with <italic>R</italic> factors this high can make proceeding from MR to model building and restrained atomic refinement problematic, and can present a bottleneck in structure solutions by MR with <italic>Phaser</italic>. Model editing and electron density modification methods may nonetheless overcome this hurdle, depending on the resolution of the data, the solvent content and the presence or absence of noncrystallographic symmetry.</p>
      </sec>
    </sec>
    <sec id="sec2.2">
      <label>2.2.</label>
      <title>Multivariate statistics</title>
      <p>The maximum likelihood functions described above are derived from univariate structure-factor distributions. Other applications, where correlations between structure factors are significant, require the joint distribution of collections of structure factors to be considered. For acentric structure factors these are defined through the multivariate complex normal distribution (Wooding, 1956<xref ref-type="bibr" rid="bb70"> ▶</xref>), <disp-formula id="fd13"><graphic xlink:href="j-40-00658-efd26.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>where <bold>F</bold> is a column vector, <bold>F</bold>
               <sup>H</sup> is a row vector of its complex conjugate (the Hermitian transpose) and <bold>Σ</bold> is the covariance matrix with elements σ<sub><italic>ij</italic></sub> given by <disp-formula id="fd14"><graphic xlink:href="j-40-00658-efd27.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>Note that the element σ<sub><italic>ji</italic></sub> = <inline-formula><inline-graphic xlink:href="j-40-00658-efi9.jpg" mimetype="image" mime-subtype="gif"/></inline-formula>, <italic>i.e.</italic> that the matrix <bold>Σ</bold> is Hermitian.</p>
      <p>If the vector <bold>F</bold> is partitioned into <bold>G</bold> and <bold>H</bold>, multivariate statistics describes how to derive the conditional distribution of <bold>G</bold> given <bold>H</bold>, <italic>P</italic>(<bold>G</bold>;<bold>H</bold>), from the joint probability distribution <italic>P</italic>(<bold>F</bold>) (Johnson &amp; Wichern, 1998<xref ref-type="bibr" rid="bb28"> ▶</xref>). In the applications below, <italic>P</italic>(<bold>F</bold>) is the joint distribution of observed and calculated structure factors, and the partitioning is between the observed structure factors <bold>G</bold> and the calculated structure factors <bold>H</bold>. Assuming that the expected values of <bold>F</bold> are all zero before introducing information from <bold>H</bold>, <disp-formula id="fd15"><graphic xlink:href="j-40-00658-efd28.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>where the mean <inline-formula><inline-graphic xlink:href="j-40-00658-efi10.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> and the covariance matrix <inline-formula><inline-graphic xlink:href="j-40-00658-efi11.jpg" mimetype="image" mime-subtype="gif"/></inline-formula>, and the initial covariance matrix is partitioned as <disp-formula id="fdu9"><graphic xlink:href="j-40-00658-efd29.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>The standard manipulations give the form of the conditional probability of observed structure factors given the calculated structure factors, with the mean of the distribution and the terms in the covariance matrices calculated from first principles.</p>
      <p>For centric reflections, the multivariate normal distribution is applied to real numbers, and the covariance matrix is symmetric.</p>
      <sec id="sec2.2.1">
        <label>2.2.1.</label>
        <title>SAD Function</title>
        <p>The SAD likelihood function for an acentric reflection for which <inline-formula><inline-graphic xlink:href="j-40-00658-efi12.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="j-40-00658-efi13.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> are both measured is derived by introducing the phase of the observed structure factors and then integrating out these phases at the end of the analysis: <disp-formula id="fd16"><graphic xlink:href="j-40-00658-efd30.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>
                  <inline-formula><inline-graphic xlink:href="j-40-00658-efi14.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="j-40-00658-efi15.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> are the structure factors calculated from the anomalous substructure. The probabilities <inline-formula><inline-graphic xlink:href="j-40-00658-efi16.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="j-40-00658-efi17.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> are derived using standard manipulations from the joint probability distribution <inline-formula><inline-graphic xlink:href="j-40-00658-efi18.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> where <inline-formula><inline-graphic xlink:href="j-40-00658-efi19.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="j-40-00658-efi20.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> are the phased observed structure-factor amplitudes. The term in square brackets can be integrated analytically to give a Rice distribution, which primarily accounts for the anomalous difference. The other term accounts for the anomalous scatterers being part of the model of the total scattering. In addition to this term for acentric reflections for which <inline-formula><inline-graphic xlink:href="j-40-00658-efi12.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="j-40-00658-efi13.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> are both measured, the SAD likelihood function includes a term for acentric reflections for which only <inline-formula><inline-graphic xlink:href="j-40-00658-efi12.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> or <inline-formula><inline-graphic xlink:href="j-40-00658-efi13.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> is recorded (‘singleton’ reflections) and a term for centric reflections. These terms describe the phase information obtained from the partial structure contributed by the anomalous scatterers. The information from the normal scattering components is useful even if the anomalous scatterer is relatively light and can be very significant if the anomalous scatterer is also a heavy atom. <disp-formula id="fd17"><graphic xlink:href="j-40-00658-efd31.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>where <inline-formula><inline-graphic xlink:href="j-40-00658-efi25.jpg" mimetype="image" mime-subtype="gif"/></inline-formula>.</p>
        <p>The variance terms <inline-formula><inline-graphic xlink:href="j-40-00658-efi26.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> and σ<sub>+</sub>, and the real and imaginary components of <bold>D</bold>
                  <sub>Φ</sub> are refined along with the atomic parameters to optimize the log-likelihood. The term <inline-formula><inline-graphic xlink:href="j-40-00658-efi26.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> measures the error in predicting a single structure factor using only the information from the corresponding single calculated structure factor, and roughly corresponds to a measure of missing real scattering power. The term σ<sub>+</sub> measures the error in predicting <inline-formula><inline-graphic xlink:href="j-40-00658-efi12.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> using the information from <inline-formula><inline-graphic xlink:href="j-40-00658-efi13.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> and the calculated structure factors for both hands, and roughly corresponds to a measure of the error in the calculated anomalous differences. Finally, the term <bold>D</bold>
                  <sub>Φ</sub> accounts for the effect of correlated errors in <inline-formula><inline-graphic xlink:href="j-40-00658-efi30.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="j-40-00658-efi31.jpg" mimetype="image" mime-subtype="gif"/></inline-formula>.</p>
        <p>The SAD likelihood function explicitly accounts for the correlations between <inline-formula><inline-graphic xlink:href="j-40-00658-efi12.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="j-40-00658-efi13.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> (McCoy <italic>et al.</italic>, 2004<xref ref-type="bibr" rid="bb41"> ▶</xref>; Pannu &amp; Read, 2004<xref ref-type="bibr" rid="bb49"> ▶</xref>). Only one numerical (phase) integration is required. The number of phase points used for the integration is dynamically allocated to each reflection based on the variances for that reflection. Large variances mean that the probability distribution is diffuse, and few points are needed to calculate the integral. Small variances mean that the probability distribution is sharp, and many points are needed in order to sample the peaks of the distribution.</p>
        <p>Log-likelihood gradient maps, analogous to those used for other likelihood targets in <italic>Sharp</italic> (Vonrhein <italic>et al.</italic>, 2006<xref ref-type="bibr" rid="bb67"> ▶</xref>), are calculated to determine the possible positions of new atomic sites. Log-likelihood gradient maps are specific to the values of <inline-formula><inline-graphic xlink:href="j-40-00658-efi34.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> and used for the calculation of the map coefficients, corresponding to the anomalous scatterer whose position is sought. Log-likelihood gradient maps can also be calculated for purely real (by setting <inline-formula><inline-graphic xlink:href="j-40-00658-efi34.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> = 1, <italic>f</italic>′′ = 0) or purely anomalous (by setting <inline-formula><inline-graphic xlink:href="j-40-00658-efi34.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> = 0, <italic>f</italic>′′ = 1) scatterers.</p>
      </sec>
      <sec id="sec2.2.2">
        <label>2.2.2.</label>
        <title>Ensembling</title>
        <p>A set of structurally aligned models from the PDB can be used to generate a single calculated structure factor set using an ‘ensembling’ procedure. The method uses the estimated r.m.s. deviation between the model and the target to weight the structure factors contributing to the set and to determine the fall-off in structure factors with resolution.</p>
        <p>The joint probability distribution of the target and model structure factors has a covariance matrix that can be partitioned as <disp-formula id="fd18"><graphic xlink:href="j-40-00658-efd32.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>where the subscripts t and m refer to the target and model structure factors, respectively.</p>
        <p><bold>Σ</bold><sub>tt</sub> is a 1 × 1 matrix (<italic>i.e.</italic> a scalar), and when the analysis is performed in terms of the normalized structure factors (<italic>i.e.</italic> structure factors normalized so that their mean-square values are one), then <bold>Σ</bold>
                  <sub>tt</sub> = 1.</p>
        <p><bold>Σ</bold><sub>tm</sub> is a 1 × <italic>n</italic> row vector of σ<sub>A</sub> values between the target and <italic>n</italic> models, which are approximated for each model using a four-parameter curve (Murshudov <italic>et al.</italic>, 1997<xref ref-type="bibr" rid="bb44"> ▶</xref>) <disp-formula id="fd19"><graphic xlink:href="j-40-00658-efd33.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>where <italic>f</italic>
                  <sub>P</sub> (= 1 by default) is the fraction of ordered structure modelled, <italic>f</italic>
                  <sub>sol</sub> (= 0.95 by default) and <italic>B</italic>
                  <sub>sol</sub> (= 300 Å<sup>2</sup> by default) describe the low-resolution fall-off from not modelling the bulk solvent, RMS is the estimated r.m.s. deviation of the atoms in the model to the atoms in the target structure, and <italic>d</italic> is the resolution. The default values of <italic>f</italic>
                  <sub>sol</sub> and <italic>B</italic>
                  <sub>sol</sub> were chosen by examining σ<sub>A</sub> curves for a variety of data sets. The r.m.s. deviation must be given as input, but can be entered indirectly <italic>via</italic> sequence identity using the formula of Chothia &amp; Lesk (1986<xref ref-type="bibr" rid="bb9"> ▶</xref>), which relates the r.m.s. deviation of main-chain atoms to the sequence identity (<italic>f</italic>
                  <sub>identity</sub>), but with the minimum increased from 0.4 to 0.8 Å. <disp-formula id="fd20"><graphic xlink:href="j-40-00658-efd34.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>The r.m.s. deviation given by this formula can be a severe underestimate if there is conformational difference between the model(s) and the target structure. If such a conformational difference is expected or suspected, then the r.m.s. deviation should be inflated from the value determined from the formula and entered directly (for example, see McCoy, 2007<xref ref-type="bibr" rid="bb39"> ▶</xref>). As there is no equivalent formula for RNA or DNA, the r.m.s. deviation of nucleic acid must be entered directly.</p>
        <p><bold>Σ</bold><sub>mm</sub> is the <italic>n</italic> × <italic>n</italic> covariance matrix involving only the models. When normalized structure factors are used, it becomes a correlation matrix with diagonal elements equal to 1 and the off-diagonal elements given by <disp-formula id="fd21"><graphic xlink:href="j-40-00658-efd35.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>The off-diagonal terms will not have a significant imaginary term unless the models are translationally misaligned, leading to a systematic phase shift. This will never be the case for correctly aligned structures, and so the off-diagonal terms are therefore assumed to be real, <disp-formula id="fd22"><graphic xlink:href="j-40-00658-efd36.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>The ensemble structure factor is then taken as the mean of the distribution and is given by <disp-formula id="fd23"><graphic xlink:href="j-40-00658-efd37.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>where <italic>w</italic>
                  <sub><italic>j</italic></sub> are the weights applied to the model normalized structure factors. <disp-formula id="fd24"><graphic xlink:href="j-40-00658-efd38.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>The ensemble structure factors could be calculated for the models in each orientation and position in the rotation and translation searches, but this would be prohibitively time consuming. Instead, structure factors are calculated for a model in a large <italic>P</italic>1 unit cell and structure factors for the orientation and position in the correct unit cell generated by structure-factor interpolation (Lattman &amp; Love, 1970<xref ref-type="bibr" rid="bb36"> ▶</xref>).</p>
      </sec>
    </sec>
    <sec id="sec2.3">
      <label>2.3.</label>
      <title>Normal-mode analysis</title>
      <p>Suhre &amp; Sanejouand (2004<xref ref-type="bibr" rid="bb62"> ▶</xref>) have shown that perturbation of a model along the lowest frequency normal modes can generate a model that is closer to the target structure when there has been a conformational change between the model and the target structure. This method has now been implemented in <italic>Phaser</italic>. The normal modes of the elastic network model are obtained by eigenvalue decomposition of the Hessian matrix <italic>H</italic>: <disp-formula id="fd25"><graphic xlink:href="j-40-00658-efd39.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>where <italic>a</italic> and <italic>b</italic> refer to the atom numbers and <italic>N</italic> is the number of atoms. <italic>H</italic>
               <sub><italic>a</italic>,<italic>b</italic></sub> are the 3 × 3 matrices containing the second derivatives of the energy with respect to the three spatial coordinates: <disp-formula id="fd26"><graphic xlink:href="j-40-00658-efd40.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>when |<bold>r</bold>
               <sub><italic>a</italic>,<italic>b</italic></sub>| ≤ <italic>R</italic> and where <bold>r</bold>
               <sub><italic>a</italic>,<italic>b</italic></sub> = <bold>r</bold>
               <sub><italic>a</italic></sub> − <bold>r</bold>
               <sub><italic>b</italic></sub>, <bold>r</bold>
               <sub><italic>a</italic></sub> and <bold>r</bold>
               <sub><italic>b</italic></sub> are the coordinates of the atoms <italic>a</italic> and <italic>b</italic>, <italic>R</italic> is the cut-off radius for considering the interaction (= 5 Å by default), and <italic>C</italic> is the force constant (= 1 by default). When |<bold>r</bold>
               <sub><italic>a</italic>,<italic>b</italic></sub>| &gt; <italic>R</italic>, <italic>H</italic> = 0. The atoms are taken to be of equal mass. The eigenvalues λ and eigenvectors <italic>U</italic> of <italic>H</italic> can then be calculated. <disp-formula id="fd27"><graphic xlink:href="j-40-00658-efd41.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>The eigenvalues are directly proportional to the squares of the vibrational frequencies of the normal modes, the lowest eigenvalues thus giving the lowest normal modes. Six of the eigenvalues will be zero, corresponding to the six degrees of freedom for a rotation and translation of the entire structure.</p>
      <p>For all but the smallest proteins, eigenvalue decomposition of the all-atom Hessian is not computationally feasible with current computer technology. Various methods have been developed to reduce the size of the eigenvalue problem. Bahar <italic>et al.</italic> (1997<xref ref-type="bibr" rid="bb3"> ▶</xref>) and Hinsen (1998<xref ref-type="bibr" rid="bb26"> ▶</xref>) have shown that it is possible to find the lowest frequency normal modes of proteins in the elastic network model by considering amino acid Cα atoms only. However, this merely postpones the computational problem until the proteins are an order of magnitude larger. The problem is solved for any size protein with the rotation–translation block (RTB) approach (Durand <italic>et al.</italic>, 1994<xref ref-type="bibr" rid="bb16"> ▶</xref>; Tama <italic>et al.</italic>, 2000<xref ref-type="bibr" rid="bb63"> ▶</xref>), where the protein is divided into blocks of atoms and the rotation and translation modes for each block used project the full Hessian into a lower dimension. The projection matrix is a block-diagonal matrix of dimensions 3<italic>N</italic> × 3<italic>N.</italic> 
               <disp-formula id="fd28"><graphic xlink:href="j-40-00658-efd42.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>Each of the <italic>NB</italic> block matrices <italic>P</italic>
               <sub><italic>nb</italic></sub> has dimensions 3<italic>N</italic>
               <sub><italic>nb</italic></sub> × 6, where <italic>N</italic>
               <sub><italic>nb</italic></sub> is the number of atoms in the block <italic>nb</italic>,<disp-formula id="fd29"><graphic xlink:href="j-40-00658-efd43.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>For atom <italic>j</italic> in block <italic>nb</italic> displaced <inline-formula><inline-graphic xlink:href="j-40-00658-efi37.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> from the centre of mass, <inline-formula><inline-graphic xlink:href="j-40-00658-efi38.jpg" mimetype="image" mime-subtype="gif"/></inline-formula> of the block, the 3 × 6 matrix <italic>P</italic>
               <sub><italic>nb,j</italic></sub> is <disp-formula id="fd30"><graphic xlink:href="j-40-00658-efd44.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>The first three columns of the matrix contain the infinitesimal translation eigenvectors of the block and last three columns contain the infinitesimal rotation eigenvectors of the block. The orthogonal basis <italic>Q</italic> of <italic>P</italic>
               <sub><italic>nb</italic></sub> is then found by <italic>QR</italic> decomposition:<disp-formula id="fd31"><graphic xlink:href="j-40-00658-efd45.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>where <italic>Q</italic>
               <sub><italic>nb</italic></sub> is a 3<italic>N</italic>
               <sub><italic>nb</italic></sub> × 6 orthogonal matrix and <italic>R</italic>
               <sub><italic>nb</italic></sub> is a 6 × 6 upper triangle matrix. <italic>H</italic> can then be projected into the subspace spanned by the translation/rotation basis vectors of the blocks:<disp-formula id="fd32"><graphic xlink:href="j-40-00658-efd46.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>where <disp-formula id="fdu32a"><graphic xlink:href="j-40-00658-efd47.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>
            </p>
      <p>The eigenvalues λ<sub>P</sub> and eigenvectors <italic>U</italic>
               <sub>P</sub> of the projected Hessian are then found. <disp-formula id="fd33"><graphic xlink:href="j-40-00658-efd48.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>The RTB method is able to restrict the size of the eigenvalue problem for any size of protein with the inclusion of an appropriately large <italic>N</italic>
               <sub><italic>nb</italic></sub> for each block. In the implementation of the RTB method in <italic>Phaser</italic>, <italic>N</italic>
               <sub><italic>nb</italic></sub> for each block is set for each protein such that the total size of the eigenvalue problem is restricted to a matrix <italic>H</italic>
               <sub>P</sub> of maximum dimensions 750 × 750. This enables the eigenvalue problem to be solved in a matter of minutes with current computing technology. The eigenvectors of the translation/rotation subspace can then be expanded back to the atomic space (dimensions of <italic>U</italic> are <italic>N</italic> × <italic>N</italic>): <disp-formula id="fd34"><graphic xlink:href="j-40-00658-efd49.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>As for the decomposition of the full Hessian <italic>H</italic>, the eigenvalues are directly proportional to the squares of the vibrational frequencies of the normal modes, the lowest eigenvalues thus giving the lowest normal modes. Although the eigenvalues and eigenvectors generated from decomposition of the full Hessian and using the RTB approach will diverge with increasing frequency, the RTB approach is able to model with good accuracy the lowest frequency normal modes, which are the modes of interest for looking at conformational difference in proteins.</p>
      <p>The all-atom, Cα only and RTB normal-mode analysis methods are implemented in <italic>Phaser</italic>. After normal-mode analysis, <italic>n</italic> normal modes can be used to generate 2<sup><italic>n</italic></sup> − 1 (nonzero) combinations of normal modes. <italic>Phaser</italic> allows the user to specify the r.m.s. deviation between model and target desired by the perturbation, and the fraction d<italic>q</italic> of the displacement vector for each mode combination corresponding to each model combination is then used to generate the models. Large r.m.s. deviations will cause the geometry of the model to become distorted. <italic>Phaser</italic> reports when the model becomes so distorted that there are Cα clashes in the structure.</p>
    </sec>
    <sec id="sec2.4">
      <label>2.4.</label>
      <title>Packing function</title>
      <p>The packing of potential solutions in the asymmetric unit is not inherently part of the translation function. It is therefore possible that an arrangement of models has a high log-likelihood gain, although the models may overlap and therefore be physically unreasonable. The packing of the solutions is checked using a clash test using a subset of the atoms in the structure: the ‘trace’ atoms. For proteins, the trace atoms are the Cα positions, spaced at 3.8 Å. For nucleic acid, the phosphate and C atoms in the ribose-phosphate backbone and the N atoms of the bases are selected as trace atoms. These atoms are also spaced at about 3.8 Å, so that the density of trace atoms in nucleic acid is similar to that of proteins, which makes the number of protein–protein, protein–nucleic acid and nucleic acid–nucleic acid clashes comparable where there is a mixed protein–nucleic acid structure.</p>
      <p>For the clash test, the number of trace atoms from another model within a given distance (default 3 Å) is counted. The clash test includes symmetry-related copies of the model under consideration, other components in the asymmetric unit and their symmetry-related copies. If the search model has a low sequence identity with the target, or has large flexible loops that could adopt an alternative conformation, the number of clashes may be expected to be nonzero. By default the best packing solutions are carried forward, although a specific number of allowed clashes may also be given as the cut-off for acceptance. However, it is better to edit models before use so that structurally nonconserved surface loops are excluded, as they will only contribute noise to the rotation and translation functions.</p>
      <p>Where an ensemble of structures is used as the model, the highest homology model is taken as the template for the packing search. Before this model is used, the trace atom positions are edited to take account of large conformational differences between the models in the ensemble. Equivalent trace atom positions are compared and if the coordinates deviate by more than 3 Å then the template trace atom is deleted. Thus, use of an ensemble not only improves signal to noise in the maximum likelihood search functions, it also improves the discrimination of possible solutions by the packing function.</p>
    </sec>
    <sec id="sec2.5">
      <label>2.5.</label>
      <title>Minimizer</title>
      <p>Minimization is used in <italic>Phaser</italic> to optimize the parameters against the appropriate log-likelihood function in the anisotropy correction, in MR (refines the position and orientation of a rigid-body model) and in SAD phasing. The same minimizer code is used for all three applications and has been designed to be easily extensible to other applications. The minimizer for the anisotropy correction uses Newton’s method, while MR and SAD use the standard Broyden–Fletcher–Goldfarb–Shanno (BFGS) algorithm. Both minimization methods in <italic>Phaser</italic> include a line search. The line search algorithm is a basic iterative method for finding the local minimum of a target function <italic>f</italic>. Starting at parameters <bold><italic>x</italic></bold>, the algorithm finds the minimum (within a convergence tolerance) of <disp-formula id="fd35"><graphic xlink:href="j-40-00658-efd50.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>by varying γ, where γ is the step distance along a descent direction <bold><italic>d</italic></bold>. Newton’s method and the BFGS algorithm differ in the determination of the descent direction <bold><italic>d</italic></bold> that is passed to the line search, and thus the speed of convergence. Within one cycle of the line search (where there is no change in <bold><italic>d</italic></bold>) the trial step distances γ are chosen using the golden section method. The golden ratio (5<sup>1/2</sup>/2 + 1/2) divides a line so that the ratio of the larger part to the total is the same as the ratio of the smaller to larger. The method makes no assumptions about the function’s behaviour; in particular, it does not assume that the function is quadratic within the bracketed section. If this assumption were made, the line search could proceed <italic>via</italic> parabolic interpolation.</p>
      <p>Newton’s method uses the Hessian matrix <italic>H</italic> of second derivatives and the gradient <italic>g</italic> at the initial set of parameters <bold><italic>x</italic></bold>
               <sub>0</sub> to find the values of the parameters at the minimum <bold><italic>x</italic></bold>
               <sub>min</sub>. <disp-formula id="fd36"><graphic xlink:href="j-40-00658-efd51.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>If the function is quadratic in <bold><italic>x</italic></bold> then Newton’s method will find the minimum in one step, but if not, iteration is required. The method requires the inversion of the Hessian matrix, which, for large matrices, consumes a large amount of computational time and memory resources. The eigenvalues of the Hessian need to be positive for the function to be at a minimum, rather than a maximum or saddle point, since the method converges to any point where the gradient vector is zero. When used with the anisotropy correction, the full Hessian matrix is calculated analytically.</p>
      <p>The BFGS algorithm is one of the most powerful minimization methods when calculation of the full Hessian using analytic or finite difference methods is very computationally intensive. At every step, the gradient search vector is analysed to build up an approximate Hessian matrix <italic>H</italic>, in order to make the resulting search vector direction <bold><italic>d</italic></bold> better than the original gradient vector direction. In the ‘pure’ form of the BFGS algorithm, the method is started with matrix <italic>H</italic> equal to the identity matrix. The off-diagonal elements of the Hessian, the mixed second derivatives (<italic>i.e.</italic> ∂<sup>2</sup>LL/∂<italic>p</italic>
               <sub><italic>i</italic></sub>∂<italic>p</italic>
               <sub><italic>j</italic></sub>) are thus initially zero. As the BFGS cycle proceeds, the off-diagonal elements become nonzero using information derived from the gradient. However, in <italic>Phaser</italic>, the matrix <italic>H</italic> is not the identity but rather is seeded with diagonal elements equal to the second derivatives of the parameters (<italic>p</italic>
               <sub><italic>i</italic></sub>) with respect to the log-likelihood target function (LL) (<italic>i.e.</italic> ∂<sup>2</sup>LL/∂<italic>p</italic>
               <sub><italic>i</italic></sub>
               <sup>2</sup>, or curvatures), the values found in the ‘true’ Hessian. For the SAD refinement the diagonal elements are calculated analytically, but for the MR refinement the diagonal elements are calculated by finite difference methods. Seeding the Hessian with the diagonal elements dramatically accelerates convergence when the parameters are on different scales; when an identity matrix is used, the parameters on a larger scale can fail to shift significantly because their gradients tend to be smaller, even though the necessary shifts tend to be larger. In the inverse Hessian, small curvatures for parameters on a large scale translate into large scale factors applied to the corresponding gradient terms. If any of these curvature terms are negative (as may happen when the parameters are far from their optimal values), the matrix is not positive definite. Such a situation is corrected by using problem-specific information on the expected relative scale of the parameters from the ‘large-shift’ variable, as discussed below in §2.5.1<xref ref-type="sec" rid="sec2.5.1"/>.</p>
      <p>In addition to the basic minimization algorithms, the minimizer incorporates the ability to bound, constrain, restrain and reparameterize variables, as discussed in detail below. Bounds must be applied to prevent parameters becoming nonphysical, constraints effectively reduce the number of parameters, restraints are applied to include prior probability information, and reparameterization of variables makes the parameter space more quadratic and improves the performance of the minimizer.</p>
      <sec id="sec2.5.1">
        <label>2.5.1.</label>
        <title>Problem-specific parameter scaling information</title>
        <p>When a function is defined for minimization in <italic>Phaser</italic>, information must be provided on the relative scales of the parameters of that function, through a ‘large-shifts’ variable. As its name implies, the variable defines the size of a parameter shift that would be considered ‘large’ for each parameter. The ratios of these large-shift values thus specify prior knowledge about the relative scales of the different parameters for each problem. Suitable large-shift values are found by a combination of physical insight (<italic>e.g.</italic> the size of a coordinate shift considered to be large will be proportional to <italic>d</italic>
                  <sub>min</sub> for the data set) and numerical simulations, studying the behaviour of the likelihood function as parameters are varied systematically in a variety of test cases.</p>
        <p>The large-shifts information is used in two ways. Firstly, it is used to prevent the line search from taking an excessively large step, which can happen if the estimated curvature for a parameter happens to be too small and can lead to the refinement becoming numerically unstable. If the initial step for a line search would change any parameter by more than its large-shift value, the initial step is scaled down. Secondly, it is used to provide relative scale information to correct negative curvature values. Parameters with positive curvatures are used to define the average relationship between the large-shift values and the curvatures, which can then be used to compute appropriate curvature values for the parameters with negative curvatures. This stabilizes the refinement until it is sufficiently close to the minimum that all curvatures become positive.</p>
      </sec>
      <sec id="sec2.5.2">
        <label>2.5.2.</label>
        <title>Reparameterization</title>
        <p>Second-order minimization algorithms in effect assume that, at least in the region around the minimum, the function can be approximated as a quadratic. Where this assumption holds, the minimizer will converge faster. It is therefore advantageous to use functions of the parameters being minimized so that the target function is more quadratic in the new parameter space than in the original parameter space (Edwards, 1992<xref ref-type="bibr" rid="bb17"> ▶</xref>). For example, atomic <italic>B</italic> factors tend to converge slowly to their refined values because the <italic>B</italic> factor appears in the exponential term in the structure-factor equation. Although any function of the parameters can be used for this purpose, we have found that taking the logarithm of a parameter is often the most effective reparameterization operation (not only for the <italic>B</italic> factors). <disp-formula id="fd37"><graphic xlink:href="j-40-00658-efd52.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>The offset <italic>x</italic>
                  <sub>offset</sub> is chosen so that the value of <italic>x</italic>′ does not become undefined for allowed values of <italic>x</italic>, and to optimize the quadratic nature of the function in <italic>x</italic>′. For instance, atomic <italic>B</italic> factors are reparameterized using an offset of 5 Å<sup>2</sup>, which allows the <italic>B</italic> factors to approach zero and also has the physical interpretation of accounting roughly for the width of the distribution of electrons for a stationary atom.</p>
      </sec>
      <sec id="sec2.5.3">
        <label>2.5.3.</label>
        <title>Bounds</title>
        <p>Bounds on the minimization are applied by setting upper and/or lower limits for each variable where required (<italic>e.g.</italic> occupancy minimum set to zero). If a parameter reaches a limit during a line search, that line search is terminated. In subsequent line searches, the gradient of that parameter is set to zero whenever the search direction would otherwise move the parameter outside of its bounds. Multiplying the gradient by the step size thus does not alter the value of the parameter at its limit. The parameter will remain at its limit unless calculation of the gradient in subsequent cycles of minimization indicates that the parameter should move away from the boundary and into the allowed range of values.</p>
      </sec>
      <sec id="sec2.5.4">
        <label>2.5.4.</label>
        <title>Constraints</title>
        <p>Space-group-dependent constraints apply to the anisotropic tensor applied to Σ<sub>N</sub> in the anisotropic diffraction correction. Atoms on special positions also have constraints on the values of their anisotropic tensor. The anisotropic displacement ellipsoid must remain invariant under the application of each symmetry operator of the space group or site-symmetry group, respectively (Giacovazzo, 1992<xref ref-type="bibr" rid="bb20"> ▶</xref>; Grosse-Kunstleve &amp; Adams, 2002<xref ref-type="bibr" rid="bb24"> ▶</xref>). These constraints reduce the number of parameters by either fixing some values of the anisotropic <italic>B</italic> factors to zero or setting some sets of <italic>B</italic> factors to be equal. The derivatives in the gradient and Hessian must also be constrained to reflect the constraints in the parameters.</p>
      </sec>
      <sec id="sec2.5.5">
        <label>2.5.5.</label>
        <title>Restraints</title>
        <p>Bayes’ theorem describes how the probability of the model given the data is related to the likelihood and gives a justification for the use of restraints on the parameters of the model. <disp-formula id="fd38"><graphic xlink:href="j-40-00658-efd53.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>If the probability of the data is taken as a constant, then <disp-formula id="fd39"><graphic xlink:href="j-40-00658-efd54.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>
                  <italic>P</italic>(model) is called the prior probability. When the logarithm of the above equation is taken, <disp-formula id="fd40"><graphic xlink:href="j-40-00658-efd55.jpg" mimetype="image" mime-subtype="gif" position="float"/></disp-formula>Prior probability is therefore introduced into the log-likelihood target function by the addition of terms. If parameters of the model are assumed to have independent Gaussian probability distributions, then the Bayesian view of likelihood will lead to the addition of least-squares terms and hence least-squares restraints on those parameters, such as the least-squares restraints applied to bond lengths and bond angles in typical macromolecular structure refinement programs. In <italic>Phaser</italic>, least-squares terms are added to restrain the <italic>B</italic> factors of atoms to the Wilson <italic>B</italic> factor in SAD refinement, and to restrain the anisotropic <italic>B</italic> factors to being more isotropic (the ‘sphericity’ restraint). A similar sphericity restraint is used in <italic>SHELXL</italic> (Sheldrick, 1995<xref ref-type="bibr" rid="bb57"> ▶</xref>) and in <italic>REFMAC</italic>5 (Murshudov <italic>et al.</italic>, 1999<xref ref-type="bibr" rid="bb45"> ▶</xref>).</p>
      </sec>
    </sec>
  </sec>
  <sec id="sec3">
    <label>3.</label>
    <title>Automation</title>
    <p><italic>Phaser</italic> is designed as a large set of library routines grouped together and made available to users as a series of applications, called modes. The routine-groupings in the modes have been selected mainly on historical grounds; they represent traditional steps in the structure solution pipeline. There are 13 such modes in total: ‘anisotropy correction’, ‘cell content analysis’, ‘normal-mode analysis’, ‘ensembling’, ‘fast rotation function’, ‘brute rotation function’, ‘fast translation function’, ‘brute translation function’, ‘log-likelihood gain’, ‘rigid-body refinement’, ‘single-wavelength anomalous dispersion’, ‘automated molecular replacement’ and ‘automated experimental phasing’. The ‘automated molecular replacement’ and ‘automated experimental phasing’ modes are particularly powerful and aim to automate fully structure solution by MR and SAD, respectively.</p>
    <p>Aspects of the decision making within the modes are under user input control. For example, the ‘fast rotation function’ mode performs the ensembling calculation, then a fast rotation function calculation and then rescores the top solutions from the fast search with a brute rotation function. There are three possible fast rotation function algorithms and two possible brute rotation functions to choose from. There are four possible criteria for selecting the peaks in the fast rotation function for rescoring with the brute rotation function, and for selecting the results from the rescoring for output. Alternatively, the rescoring of the fast rotation function with the brute rotation function can be turned off to produce results from the fast rotation function only. Other modes generally have fewer routines but are designed along the same principles (details are given in the documentation).</p>
    <sec id="sec3.1">
      <label>3.1.</label>
      <title>Automated molecular replacement</title>
      <p>Most structures that can be solved by MR with <italic>Phaser</italic> can be solved using the ‘automated molecular replacement’ mode. The flow diagram for this mode is shown in Fig. 1<xref ref-type="fig" rid="fig1"> ▶</xref>. The search strategy automates four search processes: those for multiple components in the asymmetric unit, for ambiguity in the hand of the space group and/or other space groups in the same point group, for permutations in the search order for components (when there are multiple components), and for finding the best model when there is more than one possible model for a component.</p>
      <sec id="sec3.1.1">
        <label>3.1.1.</label>
        <title>Multiple components of asymmetric unit</title>
        <p>Where there are many models to be placed in the asymmetric unit, the signal from the placement of the first model may be buried in noise and the correct placement of this first model only found in the context of all models being placed in the asymmetric unit. One way of tackling this problem has been to use stochastic methods to search the multi-dimensional space (Chang &amp; Lewis, 1997<xref ref-type="bibr" rid="bb8"> ▶</xref>; Kissinger <italic>et al.</italic>, 1999<xref ref-type="bibr" rid="bb31"> ▶</xref>; Glykos &amp; Kokkinidis, 2000<xref ref-type="bibr" rid="bb22"> ▶</xref>). However, we have chosen to use a tree-search-with-pruning approach, where a list of possible placements of the first (and subsequent) models is kept until the placement of the final model. This tree-search-with-pruning search strategy can generate very branched searches that would be challenging for users to negotiate by running separate jobs, but becomes trivial with suitable automation. The search strategy exploits the strength of the maximum likelihood target functions in using prior information in the search for subsequent components in the asymmetric unit.</p>
        <p>The tree-search-with-pruning strategy is heavily dependent on the criteria used for selecting the peaks that survive to the next round. Four selection criteria are available in <italic>Phaser</italic>: selection by percentage difference between the top and mean log-likelihood of the search, selection by <italic>Z</italic> score, selection by number of peaks, and selection of all peaks. The default is selection by percentage, with the default percentage set at 75%. This selection method has the advantage that, if there is one clear peak standing well above the noise, it alone will be passed to the next round, while if there is no clear signal, all peaks high in the list will be passed as potential solutions to the next round. If structure solution fails, it may be possible to rescue the solution by reducing the percentage cut-off used for selection from 75% to, for example, 65%, so that if the correct peak was just missing the default cut-off, it is now included in the list passed to the next round.</p>
        <p>The tree-search-with-pruning search strategy is sub-optimal where there are multiple copies of the same search model in the asymmetric unit. In this case the search generates many branches, each of which has a subset of the complete solution, and so there is a combinatorial explosion in the search. The tree search would only converge onto one branch (solution) with the placement of the last component on each of the branches, but in practice the run time often becomes excessive and the job is terminated before this point can be reached. When searching for multiple copies of the same component in the asymmetric unit, several copies should be added at each search step (rather than branching at each search step), but this search strategy must currently be performed semi-manually as described elsewhere (McCoy, 2007<xref ref-type="bibr" rid="bb39"> ▶</xref>).</p>
      </sec>
      <sec id="sec3.1.2">
        <label>3.1.2.</label>
        <title>Alternative space groups</title>
        <p>The space group of a structure can often be ambiguous after data collection. Ambiguities of space group within the one point group may arise from theoretical considerations (if the space group has an enantiomorph) or on experimental grounds (the data along one or more axes were not collected and the systematic absences along these axes cannot be determined). Changing the space group of a structure to another in the same point group can be performed without re-indexing, merging or scaling the data. Determination of the space group within a point group is therefore an integral part of structure solution by MR. The translation function will yield the highest log-likelihood gain for a correctly packed solution in the correct space group. <italic>Phaser</italic> allows the user to make a selection of space groups within the same point group for the first translation function calculation in a search for multiple components in the asymmetric unit. If the signal from the placement of the first component is not significantly above noise, the correct space group may not be chosen by this protocol, and the search for all components in the asymmetric unit should be completed separately in all alternative space groups.</p>
      </sec>
      <sec id="sec3.1.3">
        <label>3.1.3.</label>
        <title>Alternative models</title>
        <p>As the database of known structures expands, the number of potential MR models is also rapidly increasing. Each available model can be used as a separate search model, or combined with other aligned structures in an ‘ensemble’ model. There are also various ways of editing structures before use as MR models (Schwarzenbacher <italic>et al.</italic>, 2004<xref ref-type="bibr" rid="bb56"> ▶</xref>). The number of MR trials that can be performed thus increases combinatorially with the number of potential models, which makes job tracking difficult for the user. In addition, most users stop performing MR trials as soon as any solution is found, rather than continuing the search until the MR solution with the greatest log-likelihood gain is found, and so they fail to optimize the starting point for subsequent steps in the structure solution pipeline.</p>
        <p>The use of alternative models to represent a structure component is also useful where there are multiple copies of one type of component in the asymmetric unit and the different copies have different conformations due to packing differences. The best solution will then have the different copies modelled by different search models; if the conformation change is severe enough, it may not be possible to solve the structure without modelling the differences. A set of alternative search models may be generated using previously observed conformational differences among similar structures, or, for example, by normal-mode analysis (see §2.3<xref ref-type="sec" rid="sec2.3"/>).</p>
        <p><italic>Phaser</italic> automates searches over multiple models for a component, where each potential model is tested in turn before the one with the greatest log-likelihood gain is found. The loop over alternative models for a component is only implemented in the rotation functions, as the solutions passed from the rotation function to the translation function step explicitly specify which model to use as well as the orientation for the translation function in question.</p>
      </sec>
      <sec id="sec3.1.4">
        <label>3.1.4.</label>
        <title>Search order permutation</title>
        <p>When searching for multiple components in the asymmetric unit, the order of the search can be a factor in success. The models with the biggest component of the total structure factor will be the easiest to find: when weaker scattering components are the subject of the initial search, the solution may be buried in noise and not significant enough to survive the selection criteria in the tree-search-with-pruning search strategy. Once the strongest scattering components are located, then the search for weaker scattering components (in the background of the strong scattering components) is more likely to be a success. Having a high component of the total structure factor correlates with the model representing a high fraction of the total contents of the asymmetric unit, low r.m.s. deviation between model and target atoms, and low <italic>B</italic> factors for the target to which the model corresponds. Although the first of these (high completeness) can be determined in advance from the fraction of the total molecular weight represented by the model, the second can only be estimated from the Chothia &amp; Lesk (1986<xref ref-type="bibr" rid="bb9"> ▶</xref>) formula and the third is unknown in advance. If structure solution fails with the search performed in the order of the molecular weights, then other permutations of search order should be tried. In <italic>Phaser</italic>, this possibility is automated on request: the entire search strategy (except for the initial anisotropic data correction) is performed for all unique permutations of search orders.</p>
      </sec>
    </sec>
    <sec id="sec3.2">
      <label>3.2.</label>
      <title>Automated experimental phasing</title>
      <p>SAD is the simplest type of experimental phasing method to automate, as it involves only one crystal and one data set. SAD is now becoming the experimental phasing method of choice, overtaking multiple-wavelength anomalous dis­persion because only a single data set needs to be collected. This can help minimize radiation damage to the crystal, which has a major adverse effect on the success of multi-wavelength experiments. The ‘automated experimental phasing’ mode in <italic>Phaser</italic> takes an atomic substructure determined by Patterson, direct or dual-space methods (Karle &amp; Hauptman, 1956<xref ref-type="bibr" rid="bb29"> ▶</xref>; Rossmann, 1961<xref ref-type="bibr" rid="bb55"> ▶</xref>; Mukherjee <italic>et al.</italic>, 1989<xref ref-type="bibr" rid="bb43"> ▶</xref>; Miller <italic>et al.</italic>, 1994<xref ref-type="bibr" rid="bb42"> ▶</xref>; Sheldrick &amp; Gould, 1995<xref ref-type="bibr" rid="bb58"> ▶</xref>; Sheldrick <italic>et al.</italic>, 2001<xref ref-type="bibr" rid="bb59"> ▶</xref>; Grosse-Kunstleve &amp; Adams, 2003<xref ref-type="bibr" rid="bb25"> ▶</xref>) and refines the positions, occupancies, <italic>B</italic> factors and values of the atoms to optimize the SAD function, then uses log-likelihood gradient maps to complete the atomic substructure. The flow diagram for this mode is shown in Fig. 2<xref ref-type="fig" rid="fig2"> ▶</xref>. The search strategy automates two search processes: those for ambiguity in the hand of the space group and for completing atomic substructure from log-likelihood gradient maps. A feature of using the SAD function for phasing is that the substructure need not only consist of anomalous scatterers; indeed it can consist of only real scatterers, since the real scattering of the partial structure is used as part of the phasing function. This allows structures to be completed from initial real scattering models.</p>
      <sec id="sec3.2.1">
        <label>3.2.1.</label>
        <title>Enantiomorphic space groups</title>
        <p>Since the SAD phasing mode of <italic>Phaser</italic> takes as input an atomic substructure model, the space group of the solution has already been determined to within the enantiomorph of the correct space group. Changing the enantiomorph of a SAD refinement involves changing the enantiomorph of the heavy atoms, or in some cases the space group (<italic>e.g.</italic> the enantiomorphic space group of <italic>P</italic>4<sub>1</sub> is <italic>P</italic>4<sub>3</sub>). In some rare cases (<italic>Fdd</italic>2, <italic>I</italic>4<sub>1</sub>, <italic>I</italic>4<sub>1</sub>22, <italic>I</italic>4<sub>1</sub>
                  <italic>md</italic>, <italic>I</italic>4<sub>1</sub>
                  <italic>cd</italic>, <italic>I</italic>
                  <inline-formula><inline-graphic xlink:href="j-40-00658-efi39.jpg" mimetype="image" mime-subtype="gif"/></inline-formula>2<italic>d</italic>, <italic>F</italic>4<sub>1</sub>32; Koch &amp; Fischer, 1989<xref ref-type="bibr" rid="bb33"> ▶</xref>) the origin of the heavy-atom sites is changed [<italic>e.g.</italic> the enantiomorphic space group of <italic>I</italic>4<sub>1</sub> is <italic>I</italic>4<sub>1</sub> with the origin shifted to (<inline-formula><inline-graphic xlink:href="j-40-00658-efi40.jpg" mimetype="image" mime-subtype="gif"/></inline-formula>, 0, 0)]. If there is only one type of anomalous scatterer, the refinement need not be repeated in both hands: only the phasing needs to be carried out in the second hand to be considered. However, if there is more than one type of anomalous scatterer, then the refinement and substructure completion needs to be repeated, as it will not be enantiomorphically symmetric in the other hand. To facilitate this, <italic>Phaser</italic> runs the refinement and substructure completion in both hands [as does other experimental phasing software, <italic>e.g. Solve</italic> (Terwilliger &amp; Berendzen, 1999<xref ref-type="bibr" rid="bb64"> ▶</xref>) and <italic>autosharp</italic> (Vonrhein <italic>et al.</italic>, 2006<xref ref-type="bibr" rid="bb67"> ▶</xref>)]. The correct space group can then be found by inspection of the electron density maps; the density will only be interpretable in the correct space group. In cases with significant contributions from at least two types of anomalous scatterer in the substructure, the correct space group can also be identified by the log-likelihood gain.</p>
      </sec>
      <sec id="sec3.2.2">
        <label>3.2.2.</label>
        <title>Completing the substructure</title>
        <p>Peaks in log-likelihood gradient maps indicate the coordinates at which new atoms should be added to improve the log-likelihood gain. In the initial maps, the peaks are likely to indicate the positions of the strongest anomalous scatterers that are missing from the model. As the phasing improves, weaker anomalous scatterers, such as intrinsic sulfurs, will appear in the log-likelihood gradient maps, and finally, if the phasing is exceptional and the resolution high, non-anomalous scatterers will appear, since the SAD function includes a contribution from the real scattering.</p>
        <p>After refinement, atoms are excluded from the substructure if their occupancy drops below a tenth of the highest occupancy amongst those atoms of the same atom type (and therefore <inline-formula><inline-graphic xlink:href="j-40-00658-efi41.jpg" mimetype="image" mime-subtype="gif"/></inline-formula>). Excluded sites are flagged rather than permanently deleted, so that if a peak later appears in the log-likelihood gradient map at this position, the atom can be reinstated and prevented from being deleted again, in order to prevent oscillations in the addition of new sites between cycles and therefore lack of convergence of the substructure completion algorithm.</p>
        <p>New atoms are added automatically after a peak and hole search of the log-likelihood gradient maps. The cut-off for the consideration of a peak as a potential new atom is that its <italic>Z</italic> score be higher than 6 (by default) and also higher than the depth of the largest hole in the map, <italic>i.e.</italic> the largest hole is taken as an additional indication of the noise level of the map. The proximity of each potential new site to previous atoms is then calculated. If a peak is more than a cut-off distance (<italic>κ</italic> Å) of a previous site, the peak is added as a new atom with the average occupancy and <italic>B</italic> factor from the current set of sites. If the peak is within <italic>κ</italic> Å of an isotropic atom already present, the old atom is made anisotropic. Holes in the log-likelihood gradient map within <italic>κ</italic> Å of an isotropic atom also cause the atom’s <italic>B</italic> factor to be switched to anisotropic. However, if the peak or hole is within <italic>κ</italic> Å of an anisotropic atom already present, the peak or hole is ignored. If a peak is within <italic>κ</italic> Å of a previously excluded site, the excluded site is reinstated and flagged as not for deletion in order to prevent oscillations, as described above. At the end of the cycle of atom addition and isotropic to anisotropic atomic <italic>B</italic>-factor switching, new sites within 2<italic>κ</italic> Å of an old atom that is now anisotropic are then removed, since the peak may be absorbed by refining the anisotropic <italic>B</italic> factor; if not, it will be accepted as a new site in the next cycle of log-likelihood gradient completion. The distance <italic>κ</italic> may be input directly by the user, but by default it is the ‘optical resolution’ of the structure (<italic>κ</italic> = 0.715<italic>d</italic>
                  <sub>min</sub>), but not less than 1 Å and no more than 10 Å.</p>
        <p>If the structure contains more than one significant anomalous scatterer, then log-likelihood gradient maps are calculated from each atom type, the maps compared and the atom type associated with each significant peak assigned from the map with the most significant peak at that location.</p>
      </sec>
      <sec id="sec3.2.3">
        <label>3.2.3.</label>
        <title>Initial real scattering model</title>
        <p>One of the reasons for including MR and SAD phasing within one software package is the ability to use MR solutions with the SAD phasing target to improve the phases. Since the SAD phasing target contains a contribution from the real scatterers, it is possible to use a partial MR model with no anomalous scattering as the initial atomic substructure used for SAD phasing. This approach is useful where there is a poor MR solution combined with a poor anomalous signal in the data. If the poor MR solution means that the structure cannot be phased from this model alone, and the poor anomalous signal means that the anomalous scatterers cannot be located in the data alone, then using the MR solution as the starting model for SAD phasing may provide enough phase information to locate the anomalous scatterers. The combined phase information will be stronger than from either source alone. To facilitate this method of structure solution, <italic>Phaser</italic> allows the user to input a partial structure model that will be interpreted in terms of its real scattering only and, following phasing with this substructure, to complete the anomalous scattering model from log-likelihood gradient maps as described above.</p>
      </sec>
    </sec>
    <sec id="sec3.3">
      <label>3.3.</label>
      <title>Input and output</title>
      <p>The fastest and most efficient way, in terms of development time, to link software together is using a scripting language, while using a compiled language is most efficient for intensive computation. Following the lead of the <italic>PHENIX</italic> project (Adams <italic>et al.</italic>, 2002<xref ref-type="bibr" rid="bb2"> ▶</xref>, 2004<xref ref-type="bibr" rid="bb1"> ▶</xref>), <italic>Phaser</italic> uses Python (<ext-link ext-link-type="uri" xlink:href="http://python.org">http://python.org</ext-link>) as the scripting language, C++ as the compiled language, and the Boost.Python library (<ext-link ext-link-type="uri" xlink:href="http://boost.org/libs/python/">http://boost.org/libs/python/</ext-link>) for linking C++ and Python. Other packages, notably <italic>X-PLOR</italic> (Brünger, 1993<xref ref-type="bibr" rid="bb5"> ▶</xref>) and <italic>CNS</italic> (Brünger <italic>et al.</italic>, 1998<xref ref-type="bibr" rid="bb6"> ▶</xref>), have defined their own scripting languages, but the choice of Python ensures that the scripting language is maintained by an active community. <italic>Phaser</italic> functionality has mostly been made available to Python at the ‘mode’ level. However, some low-level SAD refinement routines in <italic>Phaser</italic> have been made available to Python directly, so that they can be easily incorporated into phenix.refine.</p>
      <p>A long tradition of <italic>CCP4</italic> keyword-style input in established macromolecular crystallography software (almost exclusively written in Fortran) means that, for many users, this has been the familiar method of calling crystallographic software and is preferred to a Python interface. The challenge for the development of <italic>Phaser</italic> was to find a way of satisfying both keyword-style input and Python scripting with minimal increase in development time. Taking advantage of the C++ class structure allowed both to be implemented with very little additional code. Each keyword is managed by its own class. The input to each mode of <italic>Phaser</italic> is controlled by Input objects, which are derived from the set of keyword classes appropriate to the mode. The keyword classes are in turn derived from a CCP4base class containing the functionality for the keyword-style input. Each keyword class has a parse routine that calls the CCP4base class functions to parse the keyword input, stores the input parameters as local variables and then passes these parameters to a keyword class set function. The keyword class set functions check the validity and consistency of the input, throw errors where appropriate and finally set the keyword class’s member parameters. Alternatively, the keyword class set functions can be called directly from Python. These keyword classes are a standalone part of the <italic>Phaser</italic> code and have already been used in other software developments (<italic>Pointless</italic>; Evans, 2006<xref ref-type="bibr" rid="bb18"> ▶</xref>).</p>
      <p>An Output object controls all text output from <italic>Phaser</italic> sent to standard output and to text files. Switches on the Output object give different output styles: <italic>CCP4</italic>-style for compatibility with <italic>CCP4</italic> distribution, <italic>PHENIX</italic>-style for compatibility with the <italic>PHENIX</italic> interface, CIMR-style for development, XML-style output for developers of automation scripts and a ‘silent running’ option to be used when running <italic>Phaser</italic> from Python. In addition to the text output, where possible <italic>Phaser</italic> writes results to files in standard format; coordinates to ‘pdb’ files and reflection data (<italic>e.g.</italic> map coefficients) to ‘mtz’ files. Switches on the Output object control the writing of these files.</p>
      <sec id="sec3.3.1">
        <label>3.3.1.</label>
        <title><italic>CCP4</italic>-style output</title>
        <p>CCP4-style output is a text log file sent to standard output. While this form of output is easily comprehensible to users, it is far from ideal as an output style for automation scripts. However, it is the only output style available from much of the established software that developers wish to use in their automation scripts, and it is common to use Unix tools such as ‘grep’ to extract key information. For this reason, the log files of <italic>Phaser</italic> have been designed to help developers who prefer to use this style of output. <italic>Phaser</italic> prints four levels of log file, summary, log, verbose and debug, as specified by user input. The important output information is in all four levels of file, but it is most efficient to work with the summary output. <italic>Phaser</italic> prints ‘SUCCESS’ and ‘FAILURE’ at the end of the log file to demarcate the exit state of the program, and also prints the names of any of the other output files produced by the program to the summary output, amongst other features.</p>
      </sec>
      <sec id="sec3.3.2">
        <label>3.3.2.</label>
        <title>XML output</title>
        <p>XML is becoming commonly used as a way of communicating between steps in an automation pipeline, because XML output can be added very simply by the program author and relatively simply by others with access to the source code. For this reason, <italic>Phaser</italic> also outputs an XML file when requested. The XML file encapsulates the mark-up within 〈phaser〉 tags. As there is no standard set of XML tags for crystallographic results, <italic>Phaser</italic>’s XML tags are mostly specific to <italic>Phaser</italic> but were arrived at after consultation with other developers of XML output for crystallographic software.</p>
      </sec>
      <sec id="sec3.3.3">
        <label>3.3.3.</label>
        <title>Python interface</title>
        <p>The most elegant and efficient way to run <italic>Phaser</italic> as part of an automation script is to call the functionality directly from Python. Using <italic>Phaser</italic> through the Python interface is similar to using <italic>Phaser</italic> through the keyword interface. Each mode of operation of <italic>Phaser</italic> described above is controlled by an Input object and its parameter set functions, which have been made available to Python with the Boost.Python library. <italic>Phaser</italic> is then run with a call to the ‘run-job’ function, which takes the Input object as a parameter. The ‘run-job’ function returns a Result object on completion, which can then be queried using its get functions. The Python Result object can be stored as a ‘pickled’ class structure directly to disk. Text is not sent to standard out in the <italic>CCP4</italic> logfile way but may be redirected to another output stream. All Input and Result objects are fully documented.</p>
      </sec>
    </sec>
  </sec>
  <sec id="sec4">
    <label>4.</label>
    <title>Future developments</title>
    <p><italic>Phaser</italic> will continue to be developed as a platform for implementing novel phasing algorithms and bringing the most effective approaches to the crystallographic community. Much work remains to be done formulating maximum likelihood functions with respect to noncrystallographic symmetry, to account for correlations in the data and to consider non-isomorphism, all with the aim of achieving the best possible initial electron density map.</p>
    <p>After a generation in which Fortran dominated crystallographic software code, C++ and Python have become the new standard. Several developments, including <italic>Phaser</italic>, <italic>PHENIX</italic> (Adams <italic>et al.</italic>, 2002<xref ref-type="bibr" rid="bb2"> ▶</xref>, 2004<xref ref-type="bibr" rid="bb1"> ▶</xref>), <italic>Clipper</italic> (Cowtan, 2002<xref ref-type="bibr" rid="bb12"> ▶</xref>) and <italic>mmdb</italic> (Krissinel <italic>et al.</italic>, 2004<xref ref-type="bibr" rid="bb34"> ▶</xref>), simultaneously chose C++ as the compiled language at their inception at the turn of the millennium. At about the same time, Python was chosen as a scripting language by <italic>PHENIX</italic>, <italic>ccp4mg</italic> (Potterton <italic>et al.</italic>, 2002<xref ref-type="bibr" rid="bb52"> ▶</xref>, 2004<xref ref-type="bibr" rid="bb53"> ▶</xref>) and <italic>PyMol</italic> (DeLano, 2002<xref ref-type="bibr" rid="bb15"> ▶</xref>), amongst others. Since then, other major software developments have also started or converted to C++ and Python, for example <italic>PyWarp</italic> (Cohen <italic>et al.</italic>, 2004<xref ref-type="bibr" rid="bb10"> ▶</xref>), <italic>MrBump</italic> (Keegan &amp; Winn, 2007<xref ref-type="bibr" rid="bb30"> ▶</xref>) and <italic>Pointless</italic> (Evans, 2006<xref ref-type="bibr" rid="bb18"> ▶</xref>). The choice of C++ for software development was driven by the availability of free compilers, an ISO standard (International Standardization Organization <italic> et al.</italic>, 1998<xref ref-type="bibr" rid="bb27"> ▶</xref>), sophisticated dynamic memory management and the inherent strengths of using an object-oriented language. Python was equally attractive because of the strong community support, its object-oriented design, and the ability to link C++ and Python through the Boost.Python library or the SWIG library (<ext-link ext-link-type="uri" xlink:href="http://www.swig.org/">http://www.swig.org/</ext-link>). Now that a ‘critical mass’ of developers has taken to using the new languages, C++ and Python are likely to remain the standard for crystallographic software for the current generation of crystallographic software developers.</p>
    <p><italic>Phaser</italic> source code has been distributed directly by the authors (see <ext-link ext-link-type="uri" xlink:href="http://www-structmed.cimr.cam.ac.uk/phaser">http://www-structmed.cimr.cam.ac.uk/phaser</ext-link> for details) and through the <italic>PHENIX</italic> and <italic>CCP4</italic> (Collaborative Computing Project, Number 4, 1994<xref ref-type="bibr" rid="bb11"> ▶</xref>) software suites. The source code is released for several reasons, including that we believe source code is the most complete form of publication for the algorithms in <italic>Phaser</italic>. It is hoped that generous licensing conditions and source distribution will encourage the use of <italic>Phaser</italic> by other developers of crystallographic software and those writing crystallographic automation scripts. There are no licensing restrictions on the use of <italic>Phaser</italic> in macromolecular crystallography pipelines by other developers, and the license conditions even allow developers to alter the source code (although not to redistribute it). We welcome suggestions for improvements to be incorporated into new versions.</p>
    <p>Compilation of <italic>Phaser</italic> requires the computational crystallography toolbox (<italic>cctbx</italic>; Grosse-Kunstleve &amp; Adams, 2003<xref ref-type="bibr" rid="bb25"> ▶</xref>), which includes a distribution of the cmtz library (Winn <italic>et al.</italic>, 2002<xref ref-type="bibr" rid="bb69"> ▶</xref>). The Boost libraries (<ext-link ext-link-type="uri" xlink:href="http://boost.org/">http://boost.org/</ext-link>) are required for access to the functionality from Python. <italic>Phaser</italic> runs under a wide range of operating systems including Linux, Irix, OSF1/Tru64, MacOS-X and Windows, and precompiled executables are available for these platforms when only keyword-style access (and not Python access) is required. Graphical user interfaces to <italic>Phaser</italic> are available for both the <italic>PHENIX</italic> and the <italic>CCP4</italic> suites. User support is available through <italic>PHENIX</italic>, <italic>CCP4</italic> and from the authors (email cimr-phaser@lists.cam.ac.uk).</p>
  </sec>
</body>
<back>
  <ack>
    <p>We thank Anne Baker for the bulk of the development of the CCP4 MR GUI for <italic>Phaser</italic>, Tom Terwilliger for much of the development of the Phenix AutoMR wizard, Richard Francis for writing the distribution cgi scripts, and the many users who have provided invaluable feedback. This work was funded by a Principal Research Fellowship from the Wellcome Trust (RJR) and by NIH/NIGMS under grant No. 1P01GM063210.</p>
  </ack>
  <ref-list>
    <title>References</title>
    <ref id="bb1">
      <citation citation-type="other">Adams, P. D., Gopal, K., Grosse-Kunstleve, R. W., Hung, L.-W., Ioerger, T. R., McCoy, A. J., Moriarty, N. W., Pai, R. K., Read, R. J., Romo, T. D., Sacchettini, J. C., Sauter, N. K., Storoni, L. C. &amp; Terwilliger, T. C. (2004). <italic>J. Synchrotron Rad.</italic><bold>11</bold>, 53–55.</citation>
    </ref>
    <ref id="bb2">
      <citation citation-type="other">Adams, P. D., Grosse-Kunstleve, R. W., Hung, L.-W., Ioerger, T. R., McCoy, A. J., Moriarty, N. W., Read, R. J., Sacchettini, J. C., Sauter, N. K. &amp; Terwilliger, T. C. (2002). <italic>Acta Cryst.</italic> D<bold>58</bold>, 1948–1954.</citation>
    </ref>
    <ref id="bb3">
      <citation citation-type="other">Bahar, I., Atilgan, A. R. &amp; Erman, B. (1997). <italic>Folding Des.</italic><bold>2</bold>, 173–181.</citation>
    </ref>
    <ref id="bb4">
      <citation citation-type="other">Bricogne, G. &amp; Irwin, J. (1996). <italic>Macromolecular Refinement: Proceedings of the CCP4 Study Weekend</italic>, edited by E. Dodson, M. Moore, A. Ralph &amp; S. Bailey, pp. 85–92. Warrington: Daresbury Laboratory.</citation>
    </ref>
    <ref id="bb5">
      <citation citation-type="other">Brünger, A. T. (1993). <italic>X-Plor</italic> Version 3.1. <italic>System for X-ray Crystallography and NMR</italic> Yale University Press.</citation>
    </ref>
    <ref id="bb6">
      <citation citation-type="other">Brünger, A. T., Adams, P. D., Clore, G. M., DeLano, W. L., Gros, P., Grosse-Kunstleve, R. W., Jiang, J.-S., Kuszewski, J., Nilges, M., Pannu, N. S., Read, R. J., Rice, L. M., Simonson, T. &amp; Warren, G. L. (1998). <italic>Acta Cryst.</italic> D<bold>54</bold>, 905–921.</citation>
    </ref>
    <ref id="bb7">
      <citation citation-type="other">Burley, S. K., Almo, S. C., Bonanno, J. B., Capel, M., Chance, M. R., Gaasterland, T., Lin, D., Sali, A., Studier, F. W. &amp; Swaminathan, S. (1999). <italic>Nature Genet.</italic><bold>23</bold>, 151–157.</citation>
    </ref>
    <ref id="bb8">
      <citation citation-type="other">Chang, G. &amp; Lewis, M. (1997). <italic>Acta Cryst.</italic> D<bold>53</bold>, 279–289.</citation>
    </ref>
    <ref id="bb9">
      <citation citation-type="other">Chothia, C. &amp; Lesk, A. M. (1986). <italic>EMBO J.</italic><bold>5</bold>, 823–826.</citation>
    </ref>
    <ref id="bb10">
      <citation citation-type="other">Cohen, S. X., Morris, R. J., Fernandez, F. J., Ben Jelloul, M., Kakaris, M., Parthasarathy, V., Lamzin, V. S., Kleywegt, G. J. &amp; Perrakis, A. (2004). <italic>Acta Cryst.</italic> D<bold>60</bold>, 2222–2229.</citation>
    </ref>
    <ref id="bb11">
      <citation citation-type="other">Collaborative Computational Project, Number 4 (1994). <italic>Acta Cryst.</italic> D<bold>50</bold>, 760–763.</citation>
    </ref>
    <ref id="bb12">
      <citation citation-type="other">Cowtan K. (2002). <italic>Handling Reflection Data using the Clipper Libraries</italic>, CCP4 Newsletter 41.</citation>
    </ref>
    <ref id="bb13">
      <citation citation-type="other">Crowther, R. A. (1972). <italic>The Molecular Replacement Method</italic>, edited by M. G. Rossmann, pp. 173–178. New York: Gordon and Breach.</citation>
    </ref>
    <ref id="bb14">
      <citation citation-type="other">Dauter, Z., Betzel, C., Genov, N., Pipon, N. &amp; Wilson, K. S. (1991). <italic>Acta Cryst.</italic> B<bold>47</bold>, 707–730.</citation>
    </ref>
    <ref id="bb15">
      <citation citation-type="other">DeLano, W. L. (2002). <italic>The PyMOL Molecular Graphics System</italic> DeLano Scientific, San Carlos, CA, USA.</citation>
    </ref>
    <ref id="bb16">
      <citation citation-type="other">Durand, P., Trinquier, G. &amp; Sanejouand, Y. H. (1994). <italic>Biopolymers</italic>, <bold>34</bold>, 759–771.</citation>
    </ref>
    <ref id="bb17">
      <citation citation-type="other">Edwards, A. W. F. (1992). <italic>Likelihood</italic> Baltimore: Johns Hopkins University Press.</citation>
    </ref>
    <ref id="bb18">
      <citation citation-type="other">Evans, P. (2006). <italic>Acta Cryst.</italic> D<bold>62</bold>, 72–82.</citation>
    </ref>
    <ref id="bb19">
      <citation citation-type="other">Fisher, R. A. (1922). <italic>Philos. Trans. R. Soc. A</italic>, <bold>222</bold>, 309–368.</citation>
    </ref>
    <ref id="bb20">
      <citation citation-type="other">Giacovazzo, C. (1992). Editor. <italic>Fundamentals of Crystallography</italic> IUCr/Oxford University Press.</citation>
    </ref>
    <ref id="bb21">
      <citation citation-type="other">Giacovazzo, C. (1998). <italic>Direct Phasing in Crystallography: Fundamentals and Applications</italic> IUCr/Oxford University Press.</citation>
    </ref>
    <ref id="bb22">
      <citation citation-type="other">Glykos, N. M. &amp; Kokkinidis, M. (2000). <italic>Acta Cryst.</italic> D<bold>56</bold>, 169–174.</citation>
    </ref>
    <ref id="bb23">
      <citation citation-type="other">Green, E. A. (1979). <italic>Acta Cryst.</italic> A<bold>35</bold>, 351–359.</citation>
    </ref>
    <ref id="bb24">
      <citation citation-type="other">Grosse-Kunstleve, R. W. &amp; Adams, P. D. (2002). <italic>J. Appl. Cryst.</italic><bold>35</bold>, 477–480.</citation>
    </ref>
    <ref id="bb25">
      <citation citation-type="other">Grosse-Kunstleve, R. W. &amp; Adams, P. D. (2003). <italic>Acta Cryst.</italic> D<bold>59</bold>, 1966–1973.</citation>
    </ref>
    <ref id="bb26">
      <citation citation-type="other">Hinsen, K. (1998). <italic>Proteins</italic>, <bold>33</bold>, 417–429.</citation>
    </ref>
    <ref id="bb27">
      <citation citation-type="other">International Standardization Organization (ISO), International Electrotechnical Commission (IEC), American National Standards Institute (ANSI) and Information Technology Industry Council (ITI) (1998). International Standard ISO/IEC 14882, 1st ed., Information Technology Industry Council, 1250 Eye Street NW, Washington, DC 20005, USA (also available at http://webstore.ansi.org/).</citation>
    </ref>
    <ref id="bb28">
      <citation citation-type="other">Johnson, R. A. &amp; Wichern, D. W. (1998). <italic>Applied Multivariate Statistical Analysis</italic>, 4th ed. New Jersey: Prentice-Hall.</citation>
    </ref>
    <ref id="bb29">
      <citation citation-type="other">Karle, J. &amp; Hauptman, H. (1956). <italic>Acta Cryst.</italic><bold>9</bold>, 635–651.</citation>
    </ref>
    <ref id="bb30">
      <citation citation-type="other">Keegan, R. M. &amp; Winn, M. D. (2007). <italic>Acta Cryst.</italic> D<bold>63</bold>, 447–457.</citation>
    </ref>
    <ref id="bb31">
      <citation citation-type="other">Kissinger, C. R., Gehlhaar, D. K. &amp; Fogel, D. B. (1999). <italic>Acta Cryst.</italic> D<bold>55</bold>, 484–491.</citation>
    </ref>
    <ref id="bb32">
      <citation citation-type="other">Kleywegt, G. J. &amp; Read, R. J. (1997). <italic>Structure</italic>, <bold>5</bold>, 1557–1569.</citation>
    </ref>
    <ref id="bb33">
      <citation citation-type="other">Koch, E. &amp; Fischer, W. (1989). <italic>International Tables for Crystallography</italic>, Vol. A, edited by T. Hahn, pp. 855–869. Dordrecht: IUCr/Kluwer Academic Publishers.</citation>
    </ref>
    <ref id="bb34">
      <citation citation-type="other">Krissinel, E. B., Winn, M. D., Ballard, C. C., Ashton, A. W., Patel, P., Potterton, E. A., McNicholas, S. J., Cowtan, K. D. &amp; Emsley, P. (2004). <italic>Acta Cryst.</italic> D<bold>60</bold>, 2250–2255.</citation>
    </ref>
    <ref id="bb35">
      <citation citation-type="other">La Fortelle, E. de &amp; Bricogne, G. (1997). <italic>Methods Enzymol.</italic><bold>276</bold>, 472–494.</citation>
    </ref>
    <ref id="bb36">
      <citation citation-type="other">Lattman, E. E. &amp; Love, W. E. (1970). <italic>Acta Cryst.</italic> B<bold>26</bold>, 1854–1857.</citation>
    </ref>
    <ref id="bb37">
      <citation citation-type="other">Luzzati, V. (1952). <italic>Acta Cryst.</italic><bold>5</bold>, 802–810.</citation>
    </ref>
    <ref id="bb38">
      <citation citation-type="other">McCoy, A. J. (2004). <italic>Acta Cryst.</italic> D<bold>60</bold>, 2169–2183.</citation>
    </ref>
    <ref id="bb39">
      <citation citation-type="other">McCoy, A. J. (2007). <italic>Acta Cryst.</italic> D<bold>63</bold>, 32–41.</citation>
    </ref>
    <ref id="bb40">
      <citation citation-type="other">McCoy, A. J., Grosse-Kunstleve, R. W., Storoni, L. C. &amp; Read, R. J. (2005). <italic>Acta Cryst.</italic> D<bold>61</bold>, 458–464.</citation>
    </ref>
    <ref id="bb41">
      <citation citation-type="other">McCoy, A. J., Storoni, L. C. &amp; Read, R. J. (2004). <italic>Acta Cryst.</italic> D<bold>60</bold>, 1220–1228.</citation>
    </ref>
    <ref id="bb42">
      <citation citation-type="other">Miller, R., Gallo, S. M., Khalak, H. G. &amp; Weels, C. M. (1994). <italic>J. Appl. Cryst.</italic><bold>27</bold>, 613–621.</citation>
    </ref>
    <ref id="bb43">
      <citation citation-type="other">Mukherjee, A. K., Helliwell, J. R. &amp; Main, P. (1989). <italic>Acta Cryst.</italic> A<bold>45</bold>, 715–718.</citation>
    </ref>
    <ref id="bb44">
      <citation citation-type="other">Murshudov, G. N., Vagin, A. A. &amp; Dodson, E. J. (1997). <italic>Acta Cryst.</italic> D<bold>53</bold>, 240–255.</citation>
    </ref>
    <ref id="bb45">
      <citation citation-type="other">Murshudov, G. N., Vagin, A. A., Lebedev, A., Wilson, K. S. &amp; Dodson, E. J. (1999). <italic>Acta Cryst.</italic> D<bold>55</bold>, 247–255.</citation>
    </ref>
    <ref id="bb46">
      <citation citation-type="other">Navaza, J. (1994). <italic>Acta Cryst.</italic> A<bold>50</bold>, 157–163.</citation>
    </ref>
    <ref id="bb47">
      <citation citation-type="other">Navaza, J. &amp; Vernoslova, E. (1995). <italic>Acta Cryst.</italic> A<bold>51</bold>, 445–449.</citation>
    </ref>
    <ref id="bb48">
      <citation citation-type="other">Nordman, C. E. (1994). <italic>Acta Cryst.</italic> A<bold>50</bold>, 68–72.</citation>
    </ref>
    <ref id="bb49">
      <citation citation-type="other">Pannu, N. S. &amp; Read, R. J. (2004). <italic>Acta Cryst.</italic> D<bold>60</bold>, 22–27.</citation>
    </ref>
    <ref id="bb51">
      <citation citation-type="other">Popov, A. N. &amp; Bourenkov, G. P. (2003). <italic>Acta Cryst.</italic> D<bold>59</bold>, 1145–1153.</citation>
    </ref>
    <ref id="bb52">
      <citation citation-type="other">Potterton, E., McNicholas, S., Krissinel, E., Cowtan, K. &amp; Noble, M. (2002). <italic>Acta Cryst.</italic> D<bold>58</bold>, 1955–1957.</citation>
    </ref>
    <ref id="bb53">
      <citation citation-type="other">Potterton, L., McNicholas, S., Krissinel, E., Gruber, J., Cowtan, K., Emsley, P., Murshudov, G. N., Cohen, S., Perrakis, A. &amp; Noble, M. (2004). <italic>Acta Cryst.</italic> D<bold>60</bold>, 2288–2294.</citation>
    </ref>
    <ref id="bb54">
      <citation citation-type="other">Read, R. J. (2001). <italic>Acta Cryst.</italic> D<bold>57</bold>, 1373–1382.</citation>
    </ref>
    <ref id="bb55">
      <citation citation-type="other">Rossmann, M. G. (1961). <italic>Acta Cryst.</italic><bold>14</bold>, 383–388.</citation>
    </ref>
    <ref id="bb56">
      <citation citation-type="other">Schwarzenbacher, R., Godzik, A., Grzechnik, S. K. &amp; Jaroszewski, L. (2004). <italic>Acta Cryst.</italic> D<bold>60</bold>, 1229–1236.</citation>
    </ref>
    <ref id="bb57">
      <citation citation-type="other">Sheldrick, G. M. (1995). <italic>SHELXL93</italic> Institut für Anorganische Chemie, Göttingen, Germany.</citation>
    </ref>
    <ref id="bb58">
      <citation citation-type="other">Sheldrick, G. M. &amp; Gould, R. O. (1995). <italic>Acta Cryst.</italic> B<bold>51</bold>, 423–431.</citation>
    </ref>
    <ref id="bb59">
      <citation citation-type="other">Sheldrick, G. M., Hauptman, H. A., Weeks, C. M., Miller, R. &amp; Usoń, I. (2001). <italic>International Tables for Crystallography</italic>, Vol. F, edited by M. G. Rossmann &amp; E. Arnold, pp. 233–245. Dordrecht: Kluwer Academic Publishers.</citation>
    </ref>
    <ref id="bb60">
      <citation citation-type="other">Sim, G. A. (1959). <italic>Acta Cryst.</italic><bold>12</bold>, 813–815.</citation>
    </ref>
    <ref id="bb61">
      <citation citation-type="other">Storoni, L. C., McCoy, A. J. &amp; Read, R. J. (2004). <italic>Acta Cryst.</italic> D<bold>60</bold>, 432–438.</citation>
    </ref>
    <ref id="bb62">
      <citation citation-type="other">Suhre, K. &amp; Sanejouand, Y.-H. (2004). <italic>Acta Cryst.</italic> D<bold>60</bold>, 796–799.</citation>
    </ref>
    <ref id="bb63">
      <citation citation-type="other">Tama, F., Gadea, F. X., Marques, O. &amp; Sanejouand, Y. H. (2000). <italic>Proteins Struct. Funct. Genet.</italic><bold>41</bold>, 1–7.</citation>
    </ref>
    <ref id="bb64">
      <citation citation-type="other">Terwilliger, T. C. &amp; Berendzen, J. (1999). <italic>Acta Cryst.</italic> D<bold>55</bold>, 849–861.</citation>
    </ref>
    <ref id="bb65">
      <citation citation-type="other">Trueblood, K. N., Bürgi, H.-B., Burzlaff, H., Dunitz, J. D., Gramaccioli, C. M., Schulz, H. H., Shmueli, U. &amp; Abrahams, S. C. (1996). <italic>Acta Cryst.</italic> A<bold>52</bold>, 770–781.</citation>
    </ref>
    <ref id="bb66">
      <citation citation-type="other">Vagin, A. &amp; Teplyakov, A. (1997). <italic>J. Appl. Cryst.</italic><bold>30</bold>, 1022–1025.</citation>
    </ref>
    <ref id="bb67">
      <citation citation-type="other">Vonrhein, C., Blanc, E., Roversi, P. &amp; Bricogne, G. (2006). <italic>Macromolecular Crystallography Protocols</italic>, Vol. 2, edited by S. Doublié. Totowa, NJ, USA: Humana Press.</citation>
    </ref>
    <ref id="bb68">
      <citation citation-type="other">Wilson, A. J. C. (1949). <italic>Acta Cryst.</italic><bold>2</bold>, 318–321.</citation>
    </ref>
    <ref id="bb69">
      <citation citation-type="other">Winn, M. D., Ashton, A. W., Briggs, P. J., Ballard, C. C. &amp; Patel, P. (2002). <italic>Acta Cryst.</italic> D<bold>58</bold>, 1929–1936.</citation>
    </ref>
    <ref id="bb70">
      <citation citation-type="other">Wooding, R. A. (1956). <italic>Biometrika</italic>, <bold>43</bold>, 212–215.</citation>
    </ref>
    <ref id="bb71">
      <citation citation-type="other">Woolfson, M. M. (1956). <italic>Acta Cryst.</italic><bold>9</bold>, 804–810.</citation>
    </ref>
    <ref id="bb72">
      <citation citation-type="other">Zhang, X.-J. &amp; Matthews, B. W. (1994). <italic>Acta Cryst.</italic> D<bold>50</bold>, 675–686.</citation>
    </ref>
  </ref-list>
</back>
<floats-wrap>
  <fig id="fig1" position="float">
    <label>Figure 1</label>
    <caption>
      <p>Flow diagram for automated molecular replacement in <italic>Phaser</italic>.</p>
    </caption>
    <graphic xlink:href="j-40-00658-fig1"/>
  </fig>
  <fig id="fig2" position="float">
    <label>Figure 2</label>
    <caption>
      <p>Flow diagram for automated experimental phasing in <italic>Phaser</italic>.</p>
    </caption>
    <graphic xlink:href="j-40-00658-fig2"/>
  </fig>
</floats-wrap>

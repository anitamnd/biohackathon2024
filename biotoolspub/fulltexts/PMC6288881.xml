<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6288881</article-id>
    <article-id pub-id-type="publisher-id">2498</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-018-2498-2</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>BiSpark: a Spark-based highly scalable aligner for bisulfite sequencing data</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Soe</surname>
          <given-names>Seokjun</given-names>
        </name>
        <address>
          <email>dane2522@gmail.com</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Park</surname>
          <given-names>Yoonjae</given-names>
        </name>
        <address>
          <email>yjpark@kdd.snu.ac.kr</email>
        </address>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-0960-5829</contrib-id>
        <name>
          <surname>Chae</surname>
          <given-names>Heejoon</given-names>
        </name>
        <address>
          <email>heechae@sookmyung.ac.kr</email>
        </address>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0004 0470 5905</institution-id><institution-id institution-id-type="GRID">grid.31501.36</institution-id><institution>Department of Computer Science and Engineering, </institution><institution>Seoul National University, </institution></institution-wrap>Seoul, Republic of Korea </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0004 0470 5905</institution-id><institution-id institution-id-type="GRID">grid.31501.36</institution-id><institution>Seoul National University, </institution></institution-wrap>Seoul, Republic of Korea </aff>
      <aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 0729 3748</institution-id><institution-id institution-id-type="GRID">grid.412670.6</institution-id><institution>Division of Computer Science, Sookmyung Women’s University, </institution></institution-wrap>Seoul, Republic of Korea </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>10</day>
      <month>12</month>
      <year>2018</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>10</day>
      <month>12</month>
      <year>2018</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2018</year>
    </pub-date>
    <volume>19</volume>
    <elocation-id>472</elocation-id>
    <history>
      <date date-type="received">
        <day>16</day>
        <month>12</month>
        <year>2017</year>
      </date>
      <date date-type="accepted">
        <day>16</day>
        <month>11</month>
        <year>2018</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2018</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold> This article is distributed under the terms of the Creative Commons Attribution 4.0 International License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p>Bisulfite sequencing is one of the major high-resolution DNA methylation measurement method. Due to the selective nucleotide conversion on unmethylated cytosines after treatment with sodium bisulfite, processing bisulfite-treated sequencing reads requires additional steps which need high computational demands. However, a dearth of efficient aligner that is designed for bisulfite-treated sequencing becomes a bottleneck of large-scale DNA methylome analyses.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>In this study, we present a highly scalable, efficient, and load-balanced bisulfite aligner, BiSpark, which is designed for processing large volumes of bisulfite sequencing data. We implemented the BiSpark algorithm over the Apache Spark, a memory optimized distributed data processing framework, to achieve the maximum data parallel efficiency. The BiSpark algorithm is designed to support redistribution of imbalanced data to minimize delays on large-scale distributed environment.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p>Experimental results on methylome datasets show that BiSpark significantly outperforms other state-of-the-art bisulfite sequencing aligners in terms of alignment speed and scalability with respect to dataset size and a number of computing nodes while providing highly consistent and comparable mapping results.</p>
      </sec>
      <sec>
        <title>Availability</title>
        <p>The implementation of BiSpark software package and source code is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/bhi-kimlab/BiSpark/">https://github.com/bhi-kimlab/BiSpark/</ext-link>.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>DNA methylation</kwd>
      <kwd>Bisulfite sequencing</kwd>
      <kwd>Alignment</kwd>
      <kwd>Apache Spark</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100004083</institution-id>
            <institution>Ministry of Science ICT and Future Planning</institution>
          </institution-wrap>
        </funding-source>
        <award-id>2017R1C1B5018165</award-id>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100003725</institution-id>
            <institution>National Research Foundation of Korea</institution>
          </institution-wrap>
        </funding-source>
        <award-id>NRF-2016R1D1A1A02937186</award-id>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100002559</institution-id>
            <institution>Sookmyung Women's University</institution>
          </institution-wrap>
        </funding-source>
        <award-id>1-1703-2032</award-id>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100003710</institution-id>
            <institution>Korea Health Industry Development Institute</institution>
          </institution-wrap>
        </funding-source>
        <award-id>HI15C3224</award-id>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2018</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p>DNA methylation plays a critical role in gene regulation process. It is well-known that promoter methylation causes suppression of down stream gene transcription, and abnormal DNA methylation status of diseases-associated genes such as tumor suppressor genes or oncogenes are often considered as biomarkers of the diseases. In addition, promoter methylation especially at the transcription factor binding sites (TFBS) changes the affinity of TF binding result in abnormal expression of downstream genes. Thus, measuring DNA methylation level now becomes one of the most desirable follow-up studies for transcriptome analysis. Various measurement methods for DNA methylation were previously introduced. Illuminaś Infinium HumanMethylation 27K, 450K, and MethylationEPIC (850K) BeadChip array cost-efficiently interrogate the methylation status of certain number of CpG sites and non-CpG sites across the genome at single-nucleotide resolution depending on their coverages. Methylated DNA immunoprecipitation-sequencing (MeDIP-seq) [<xref ref-type="bibr" rid="CR1">1</xref>] isolates methylated DNA fragments via antibodies followed by massively parallelized sequencing. Methyl-Binding Domain sequencing (MBD-seq) utilizes an affinity between MBD protein and methyl-CpG. These enriched DNA methylation measurement methods have been used to estimate genome-wide methylation level estimation.</p>
    <p>Bisulfite sequencing is one of the most well-known methylation measurement techniques to determine methylation pattern in single base-pair resolution. Bisulfite sequencing utilizes the characteristic of differential nucleotide conversion between methylated and unmethylated nucleotides under the bisulfite treatment. By utilizing bisulfite treatment technique, whole genome bisulfite sequencing (WGBS) can measure DNA methylation statuses of the entire genome. Due to the nucleotide conversion caused by bisulfite treatment, reads from the bisulfite sequencing have higher mismatch ratio than whole genome sequencing. As a result, bisulfite-treated reads requires a specialized alignment algorithm to correctly estimate the methylation levels. Compared to the WGBS measuring genome-wide DNA methylation status, Reduced representation bisulfite sequencing (RRBS) [<xref ref-type="bibr" rid="CR2">2</xref>] selects 1% of the genomic regions that are considered as key regions related to gene transcriptional process such as promoters. RRBS uses restriction enzyme to reduce genome complexity followed by subsequent bisulfite treatment. Due to the high cost of measuring the whole genome DNA methylation status, the cost-efficient RRBS technique becomes a popular alternative method measuring the DNA methylation in single-nucleotide resolution.</p>
    <p>In order to handle bisulfite-treated reads, various approaches have been proposed. Because of the nucleotide conversion of un-methylated cytosine (umC) to thymine by the bisulfite treatment, sequenced reads from bisulfite sequencing require to discriminating whether the Ts in the reads come from original DNA nucleotide or from converted nucleotide (umC). Bismark [<xref ref-type="bibr" rid="CR3">3</xref>] and BSSeeker [<xref ref-type="bibr" rid="CR4">4</xref>] use the ‘three-letter’ approach [<xref ref-type="bibr" rid="CR5">5</xref>] to determine the origin of bisulfite-treated nucleotides. In ‘three-letter’ approach, all cytosines in reference genome and bisulfite-treated reads are converted to thymines in order to reduce the ambiguity of thymines. General DNA read alignment algorithm is used to find the best mapping position of the read, and then methylation levels are measured from the unconverted reference genome and reads. BRAT-BW [<xref ref-type="bibr" rid="CR6">6</xref>] adopts this ‘three-letter’ approach with the multi-seed and uses FM-index to achieve higher efficiency and lower memory footprint respectively. On the other hand, BSMAP [<xref ref-type="bibr" rid="CR7">7</xref>] and RMAP [<xref ref-type="bibr" rid="CR8">8</xref>] utilize wildcard concept to map the ambiguous bisulfite-treated reads. In wildcard approach, both cytosines and thymines are allowed to map on cytosines in the reference genome. A heuristic approach was also introduced to improve the mapping sensitivity of bisulfite-treated reads. Pash[<xref ref-type="bibr" rid="CR9">9</xref>] employs collating k-mer matches with neighboring k diagonals and applies a heuristic alignment.</p>
    <p>Among these several approaches of mapping bisulfite-treated reads, the ‘three-letter’ algorithm is the most widely used because it has showed better alignment performance in various perspectives [<xref ref-type="bibr" rid="CR5">5</xref>]. However, even the aligners using the ‘three-letter’ algorithm shows relatively better performance in terms of mapping accuracy, they are still suffer from high computational demands because in the ’three-letter’ algorithm, the aligning step requires to process at most four times more volumes of data (two times more for each directional library reads) to correctly estimate the DNA methylation level (discrimination between original thymine and thymine converted from umC). Thus, measuring DNA methylation level by widely-used ‘three-letter’ approach is still considered as one of the significant bottlenecks of entire methylome data analysis. Even though some aligners, such as Bismark and BS-Seeker2, offer multi-core parallel processing to alleviate this shortcoming of the ’three-letter’ approach, they are still not well scaled-up enough and limited within a single node capacity of computational resources. Besides, since increasing the computing resources, such as CPU/cores and memory within a single large computing server, called scale-up, rapidly drops the cost-effectiveness, it has been widely researched to achieve higher performance by using a cluster of computers instead, called scale-out. Considering financial factors, the scale-out approach can be more affordable to users and well-designed scale-out approach usually shows better scalability than scale-up approach [<xref ref-type="bibr" rid="CR10">10</xref>]. As a result, in order to overcome the limitation of a single node scale-up approach, distributed system, such as cloud environment, has been considered as an alternative solution to the multi-core model.</p>
    <p>The distributed system approach was first adopted to map DNA sequences and related data-intensive processing tasks. Cloudburst [<xref ref-type="bibr" rid="CR11">11</xref>] and CloudAligner [<xref ref-type="bibr" rid="CR12">12</xref>] were introduced to improve the mapping performance by using MapReduce framework [<xref ref-type="bibr" rid="CR13">13</xref>]. They are executed parallelly on multiple nodes based on Hadoop framework [<xref ref-type="bibr" rid="CR14">14</xref>] and achieve efficient large-scale alignment on the distributed system. Crossbow [<xref ref-type="bibr" rid="CR15">15</xref>] is an another application that utilizes the multi-node approach to resolve the performance problem of alignment and SNP calling. Crossbow is an analysis software pipeline designed to run in the cloud environment (especially on the Amazon Elastic MapReduce [<xref ref-type="bibr" rid="CR16">16</xref>]) and thus allows dynamic allocation of computing resources. SparkBWA [<xref ref-type="bibr" rid="CR17">17</xref>] adopts recently introduced Apache Spark framework [<xref ref-type="bibr" rid="CR18">18</xref>], a memory-optimized software framework designed for large-scale data processing on distributed cluster of computers, accelerating BWA aligner [<xref ref-type="bibr" rid="CR19">19</xref>] on the multiple computing nodes.</p>
    <p>There exist aligners that adopt the multi-node concept for processing the bisulfite-treated sequencing datasets. The CloudAligner provides an option for handling the bisulfite-treated reads within their algorithm. Bison [<xref ref-type="bibr" rid="CR20">20</xref>] utilizes MPI (Message Passing Interface) library [<xref ref-type="bibr" rid="CR21">21</xref>] to process bisulfite sequencing data over the cluster. However, these algorithms are still suffering from either lack of functionalities and poor performance due to originally being designed for a general purpose aligner, or not scaled enough especially in the large volumes of methylome analysis.</p>
    <p>In order to overcome such drawbacks, we developed the <italic>BiSpark</italic> algorithm, a highly scalable, efficient, and load-balanced bisulfite aligner that utilizes distributed environment to significantly improve aligning speed and scalability while keeping reasonable mappability, precision, sensitivity, and accuracy. The <italic>BiSpark</italic> algorithm is designed to fully utilize the benefits of recently introduced Apache Spark distributed framework. In the <italic>BiSpark</italic> algorithm, we designed a well-parallelized ‘three-letter’ mapping algorithm fitting on Spark framework, resulting in scaling out almost linearly. In addition, implemented a highly-optimized load-balancing algorithm in the <italic>BiSpark</italic> provides re-distributing data almost evenly across the cluster nodes, achieving better scalability on a large-scale cluster.</p>
  </sec>
  <sec id="Sec2">
    <title>Implementation</title>
    <p>We completely redesigned and implemented ‘three-letter’ algorithm suitable for the distributed Apache Spark environment. The basic concept of ‘three-letter’ algorithm was adopted from BSSeeker2 [<xref ref-type="bibr" rid="CR22">22</xref>], while we designed the parallelized version of ‘three-letter’ algorithm to fit into RDD (Resilient Distributed Datasets) and key-value concepts [<xref ref-type="bibr" rid="CR23">23</xref>] of the Spark framework.</p>
    <p>We also integrated HDFS (Hadoop Distributed File System) [<xref ref-type="bibr" rid="CR24">24</xref>] to provide centralized data management, which makes <italic>BiSpark</italic> to efficiently handle shared data among cluster while user need not bother with distributing data. Following is implementation details of the <italic>BiSpark</italic> algorithm.</p>
    <sec id="Sec3">
      <title>Genome preparation</title>
      <p>The ‘three-letter’ algorithm essentially requires transforming reference genomes into customized reference genomes that consist of only three nucleotides, and this needs four types of genome transformations (all cytosine to thymine (CT) conversion and guanine to adenine (GA) conversion for each Watson (W) and Crick (C) strand, resulting in W-GA, W-CT, C-GA, C-CT conversion). In <italic>BiSpark</italic>, all four reference genome conversion and indexing are performed in the master node first and moved to HDFS for multi-node sharing.</p>
    </sec>
    <sec id="Sec4">
      <title>Analysis workflow</title>
      <p>The workflow of <italic>BiSpark</italic> consists of four major parts (Fig. <xref rid="Fig1" ref-type="fig">1</xref>): (1) converting data into key-value RDD structure, (2) transforming reads into ‘three-letter’ reads and mapping to customized reference genome, (3) finding best alignment and filtering, and (4) profiling methylation information for each read. Following is the details of each <italic>BiSpark</italic> analysis phases.
<fig id="Fig1"><label>Fig. 1</label><caption><p>Analysis workflow within <italic>BiSpark</italic> consists of 4 processing phases: (1) Distributing the reads into key-value pairs, (2) Transforming reads into ‘three-letter’ reads and mapping to transformed reference genome, (3) Aggregating mapping results and filtering ambiguous reads, and (4) Profiling the methylation information for each read. The figure depicts the case when library of input data is a non-directional</p></caption><graphic xlink:href="12859_2018_2498_Fig1_HTML" id="MO1"/></fig>
</p>
      <sec id="Sec5">
        <title>Phase 1: converting to key-value RDD structure</title>
        <p>At initial stage, the <italic>BiSpark</italic> accepts raw sequencing data files, FASTQ/A format, as inputs and converts them into list of key-value structured tuples; the first column is a read identifier (key) and the second column is a read sequence (value). At the same time, the <italic>BiSpark</italic> stores these tuples into the RDD blocks, named as readRDD, which is the basic data structure used in Spark framework. Since the RDDs are partitioned and placed over memories of cluster nodes, the <italic>BiSpark</italic> could distribute input data across the cluster as well as keep them in main memory, which can reduce I/O latency if the data is re-used. As a result, the <italic>BiSpark</italic> algorithm could minimize physical disk access, resulting in a significant speed up during follow-up data manipulation phases.</p>
      </sec>
      <sec id="Sec6">
        <title>Phase 2: ‘three-letter’ transforming and mapping</title>
        <p>Mapping the bisulfite-treated sequencing data, which has innate uncertainty, requires additional data manipulation steps. In order to handle this on the distributed environment, the <italic>BiSpark</italic> transforms readRDDs to transRDD which consists of &lt;read id, transformed read sequence &gt; tuples. These transRDDs are subcategorized into CTtransRDD (cytosine to thymine conversion) and GAtransRDD (guanine to adenine conversion), which reduces uncertainties of bisulfite-treated reads from each Watson and Crick strand respectively.</p>
        <p>Once the transRDDs are created, the <italic>BiSpark</italic> aligns each of the transRDDs to ‘three-letter’ customized reference genomes. We adopted <italic>Bowtie2</italic> for mapping reads to reference genome, known as one of the best DNA sequence aligner [<xref ref-type="bibr" rid="CR22">22</xref>]. During the mapping process, the <italic>BiSpark</italic> aligns each transRDD loaded on the memory of each distributed node, and generates another list of tuples, called mapRDD. By utilizing quality information, poor reads are discarded. These mapRDDs contains information of read-id with alignment results including general alignment information, such as number of mismatches and genomic coordinates, as well as specialized information, such as conversion type of transRDD. These mapRDDs have read id as the key while having alignment result including the number of mismatches and genomic coordinates and additional information, such as a conversion type of transRDD. The mapRDDs are subcategorized into W-CTmapRDD, W-GAmapRDD, C-CTmapRDD and C-GAmapRDD depending on the alignment pairs between the transRDDs and the customized reference genomes. At the end of aliment process, the <italic>BiSpark</italic> keeps all the mapRDDs within the main memory so as to be accessed rapidly in following steps.</p>
      </sec>
      <sec id="Sec7">
        <title>Phase 3: finding the best alignment</title>
        <p>Data transfer between nodes is one of the biggest obstacles in distributed data processing. In the ‘three-letter’ algorithm, two converted reads (CT, GA) are generated from a single read, and mapping these reads creates four different alignment results (W-CT, W-GA, C-CT, and C-GA). In order to handle the ambiguity caused by bisulfite-treatment, the next step of the analysis is figuring out the best alignment among these results. In a distributed system, these four different alignment results are dispersed across multiple nodes, and to find the best sort, the alignment results with the same key need to be rearranged to be located on the same node. This transfer and redistribution of the data between nodes, called ‘shuffling’, need to be performed per every single read, and thus it is one of the most time-consuming part of the distributed algorithm. In general, how to minimize the number of shuffling phases is a major issue for designing a distributed algorithm and has significant impact on the performance.</p>
        <p>To alleviate the issue of ‘three-letter’ algorithm implemented in distributed system, we designed each mapRDD to use the same partition algorithm and to be divided into the same number of partitions. Then, if we applied context-level union function, offered by Spark, the shuffling does not occur while all mapRDDs are merged into a single RDD due to the design of Spark framework. As a result, the distributed version of ‘three-letter’ algorithm implemented within the <italic>BiSpark</italic> could significantly reduce the processing time. Finally, the aggregated alignment results are combined by read id, resulting in a single RDD, called combRDD, whose value is a list of mapping results.</p>
        <p>The ‘three-letter’ transformation reduces mismatches of alignment, but increases the probability of the false-positive alignments. To solve this known issue, most ‘three-letter’ mapping algorithms have strong restrictions to determine if the mapping result is valid [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR4">4</xref>, <xref ref-type="bibr" rid="CR22">22</xref>]. In the <italic>BiSpark</italic> algorithm, the best alignment among the results is the alignment that has the uniquely least number of mismatches. If multiple alignments have the same smallest number of mismatches, the read and corresponding alignments are considered ambiguous, thus discarded. Moreover, the <italic>BiSpark</italic> also supports a user-defined mismatch cutoff to adjust the intensity of the restriction depending on the situation. All results not satisfying these conditions are discarded, resulting in the filteredRDD. Through these steps, the <italic>BiSpark</italic> could keep high mappability (details in “<xref rid="Sec14" ref-type="sec">Mapping quality evaluation</xref>” section).</p>
      </sec>
      <sec id="Sec8">
        <title>Phase 4: methylation profiling</title>
        <p>In ‘three-letter’ algorithm, read sequence, mapping information, and original reference genome sequence are required to estimate methylation status at each site. In distributed environment, gathering all these information together from the multiple nodes requires multiple shuffling operations, which is time-consuming. To minimize multi-node data transfer during the methylation calling phase, we combined the read sequence and mapping information from the readRDD and mapRDD respectively, and designed new RDD, called mergedRDD. In this way, although the size of each tuple is slightly increased, the information of read sequence could be delivered to filteredRDD with mapping information which means the <italic>BiSpark</italic> could avoid additional shuffling operations. In addition, since the original reference genome sequence also required to be staged to the multi-nodes, the <italic>BiSpark</italic> minimize the reference staging time via broadcasting it by utilizing shared variable functionality of the Spark framework allowing direct access to the reference genome sequence from the multi-nodes. Based on these optimized implementation, the <italic>BiSpark</italic> could achieve significant performance gain compared to other algorithms (see details in “<xref rid="Sec15" ref-type="sec">Scalability evaluation to data size</xref>” and “<xref rid="Sec16" ref-type="sec">Scalability evaluation to cluster size</xref>” sections). Finally, methylRDD has the methylation information, estimated by comparing filteredRDD with the original reference genome sequence, as the value. The methylRDD is finally converted to SAM [<xref ref-type="bibr" rid="CR25">25</xref>] format and stored in HDFS.</p>
      </sec>
    </sec>
    <sec id="Sec9">
      <title>Load balancing</title>
      <p>Single node delay due to unbalanced data distribution in distributed data processing makes the entire cluster wait. As a result, load balancing over the nodes of the cluster is one of the most important issues when designing a parallel algorithm.</p>
      <p>While designing the ‘three-letter’ algorithm in distributed environment, we investigated the data imbalance at each phase and found that there exist two possible bottleneck points. The first point is where HDFS reads sequence data. When Spark reads data from HDFS, it creates partitions based on the number of chunks in HDFS, not the number of executers, so each Spark executor is assigned different size of input data. Another imbalance can be found after the phrase of finding the best alignment followed by filtering. This is because the ratio of valid alignment would be different for each partition.</p>
      <p>In order to prevent the delays caused by imbalances, the <italic>BiSpark</italic> applied hash partitioning algorithm. Even though hash partitioning does not ensure perfectly balanced partitions, the data would be approximately well distributed because of the hash function. At each of the data imbalance points, the <italic>BiSpark</italic> utilizes <italic>portable_hash</italic> function, supported by Spark framework, to determine which partition the data should be placed. By re-partitioning data with the applied hash function, implementation of the ‘three-letter’ algorithm in the <italic>BiSpark</italic> could expect the well-distributed data across the multiple nodes. Although introducing extra partitioning improves parallel efficiency, it requires additional shuffling operation, which takes additional processing time. Considering the trade-off, the <italic>BiSpark</italic> offers the load balancing functionality as an option, enabling users to select proper mode depending on the cluster size. For more details of the performance gain from the implemented load balancing within the <italic>BiSpark</italic> algorithm, see “<xref rid="Sec15" ref-type="sec">Scalability evaluation to data size</xref>” and “<xref rid="Sec16" ref-type="sec">Scalability evaluation to cluster size</xref>” sections.</p>
    </sec>
  </sec>
  <sec id="Sec10">
    <title>Experiment</title>
    <sec id="Sec11">
      <title>Bisulfite-treated methylome data</title>
      <p>For our experimental studies, we evaluated the algorithms on both simulation data sets and real-life data sets. Simulation data was generated by Sherman [<xref ref-type="bibr" rid="CR26">26</xref>] (bisulfite-treated Read FastQ Simulator), already used by previous studies [<xref ref-type="bibr" rid="CR20">20</xref>], setting up with human chromosome 1, read length to 95bp, and the number of reads to 1,000,000. We prepared three datasets with error ratio in 0%, 1%, and 2% for accuracy evaluation.</p>
      <p>Real data set is a whole genome bisulfite sequencing (WGBS) dataset obtained from Gene Expression Omnibus (GEO) repository whose series accession number is GSE80911 [<xref ref-type="bibr" rid="CR27">27</xref>]. The sequencing data was measured by Illumina HiSeq 2500 in 95bp length. For the performance evaluation, we cut the entire data out to create the various size of testing data sets. During aligning process for performance evaluation, we used human reference genome (ver. Build 37, hg19). The statistics of the data sets used in our experiments are summarized in Table <xref rid="Tab1" ref-type="table">1</xref>.
<table-wrap id="Tab1"><label>Table 1</label><caption><p>Experimental data for performance evaluation</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Data set</th><th align="left">Tailored data size</th><th align="left"># of reads</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left">Simulation data</td><td align="left">122MB</td><td align="left">1,000,000</td><td align="left">Simulation set with 0% error</td></tr><tr><td align="left"/><td align="left">122MB</td><td align="left">1,000,000</td><td align="left">Simulation set with 1% error</td></tr><tr><td align="left"/><td align="left">122MB</td><td align="left">1,000,000</td><td align="left">Simulation set with 2% error</td></tr><tr><td align="left">GEO WGBS data (GSE80911)</td><td align="left">1.6GB</td><td align="left">10,000,000</td><td align="left">10 million reads real data set</td></tr><tr><td align="left"/><td align="left">7.9GB</td><td align="left">50,000,000</td><td align="left">50 million reads real data set</td></tr><tr><td align="left"/><td align="left">16GB</td><td align="left">100,000,000</td><td align="left">100 million reads real data set</td></tr><tr><td align="left"/><td align="left">32GB</td><td align="left">200,000,000</td><td align="left">200 million reads real data set</td></tr><tr><td align="left">Reference genome</td><td align="left">Build 37, hg19</td><td align="left"/><td align="left"/></tr></tbody></table><table-wrap-foot><p>Simulation data sets are generated by Sherman [<xref ref-type="bibr" rid="CR26">26</xref>] with various error rates (0%, 1% and 2% respectively) where the error rate is a mean error rate per bp whereby the error curve follows an exponential decay model. Each test data sets are tailored from original WGBS data based on number of reads</p></table-wrap-foot></table-wrap>
</p>
    </sec>
    <sec id="Sec12">
      <title>Experimental design</title>
      <p>We empirically evaluated performance of the <italic>BiSpark</italic> with existing state-of-art bisulfite aligning methods. We first compared the <italic>BiSpark</italic> to aligners, CloudAligner and Bison, implemented based on distributed environment. CloudAligner is a general short-read DNA aligner running on the Hadoop MapReduce framework that includes bisulfite-treated read alignment function while Bison a recently introduced distributed aligner specifically designed for processing bisulfite-treated short reads via utilizing MPI library. The performance of algorithms is tested in terms of scaling out with respect to data size and cluster size over the cluster of multiple nodes. We also compared the <italic>BiSpark</italic> to a single-node but multi-core parallel bisulfite aligner. We selected Bismark for single server aligner since Bismark has been evaluated as the best performance bisulfite aligner without losing the sensitivity [<xref ref-type="bibr" rid="CR5">5</xref>, <xref ref-type="bibr" rid="CR28">28</xref>] within the single-node parallelization category.</p>
      <p>We first evaluated four metrics including mappability, precision, sensitivity and accuracy from simulation data. Unlike real data, simulation data reports the original position of generated read, which enables us to measure the metrics. The details of how we calculated metrics are described below. 
<disp-formula id="Equa"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\begin{array}{lcl} TP &amp; = &amp; \text{number of correctly mapped reads} \\ FP &amp; = &amp; \text{number of incorrectly mapped reads} \\ FN &amp; = &amp; \text{number of unmapped reads} \\ mappability &amp; = &amp; \frac{\text{number of mapped reads}}{\text{number of all reads}} \\ precision &amp; = &amp; \frac{TP}{TP+FP} \\ sensitivity &amp; = &amp; \frac{TP}{TP+FN} \\ accuracy &amp; = &amp; \frac{TP}{TP+FP+FN} \\ \end{array} $$ \end{document}</tex-math><mml:math id="M2"><mml:mrow><mml:mtable class="array" columnalign="left"><mml:mtr><mml:mtd><mml:mtext mathvariant="italic">TP</mml:mtext></mml:mtd><mml:mtd><mml:mo>=</mml:mo></mml:mtd><mml:mtd><mml:mtext>number of correctly mapped reads</mml:mtext></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mtext mathvariant="italic">FP</mml:mtext></mml:mtd><mml:mtd><mml:mo>=</mml:mo></mml:mtd><mml:mtd><mml:mtext>number of incorrectly mapped reads</mml:mtext></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mtext mathvariant="italic">FN</mml:mtext></mml:mtd><mml:mtd><mml:mo>=</mml:mo></mml:mtd><mml:mtd><mml:mtext>number of unmapped reads</mml:mtext></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mtext mathvariant="italic">mappability</mml:mtext></mml:mtd><mml:mtd><mml:mo>=</mml:mo></mml:mtd><mml:mtd><mml:mfrac><mml:mrow><mml:mtext>number of mapped reads</mml:mtext></mml:mrow><mml:mrow><mml:mtext>number of all reads</mml:mtext></mml:mrow></mml:mfrac></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mtext mathvariant="italic">precision</mml:mtext></mml:mtd><mml:mtd><mml:mo>=</mml:mo></mml:mtd><mml:mtd><mml:mfrac><mml:mrow><mml:mtext mathvariant="italic">TP</mml:mtext></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">TP</mml:mtext><mml:mo>+</mml:mo><mml:mtext mathvariant="italic">FP</mml:mtext></mml:mrow></mml:mfrac></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mtext mathvariant="italic">sensitivity</mml:mtext></mml:mtd><mml:mtd><mml:mo>=</mml:mo></mml:mtd><mml:mtd><mml:mfrac><mml:mrow><mml:mtext mathvariant="italic">TP</mml:mtext></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">TP</mml:mtext><mml:mo>+</mml:mo><mml:mtext mathvariant="italic">FN</mml:mtext></mml:mrow></mml:mfrac></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mtext mathvariant="italic">accuracy</mml:mtext></mml:mtd><mml:mtd><mml:mo>=</mml:mo></mml:mtd><mml:mtd><mml:mfrac><mml:mrow><mml:mtext mathvariant="italic">TP</mml:mtext></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">TP</mml:mtext><mml:mo>+</mml:mo><mml:mtext mathvariant="italic">FP</mml:mtext><mml:mo>+</mml:mo><mml:mtext mathvariant="italic">FN</mml:mtext></mml:mrow></mml:mfrac></mml:mtd></mml:mtr><mml:mtr/></mml:mtable></mml:mrow></mml:math><graphic xlink:href="12859_2018_2498_Article_Equa.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>The more the error in reads, the harder the reads are correctly mapped. Therefore, we measured metrics while increasing error ratio.</p>
      <p>We also evaluated the scalabilities of the aligners to data size and number of nodes of the cluster with real data. To compare <italic>BiSpark</italic> with existing aligners, we built 3 clusters which consist of 10, 20, and 40 computing nodes respectively while each of cluster has one additional master node. We also prepared a single server with 24 cores to measure the performance and indirectly compare with non-distributed aligner, Bismark. Our constructed testing environment is summarized in Table <xref rid="Tab2" ref-type="table">2</xref>.
<table-wrap id="Tab2"><label>Table 2</label><caption><p>Testbed for performance evaluation</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">System/framework</th><th align="left">description</th><th align="left">version</th></tr></thead><tbody><tr><td align="left">Master</td><td align="left">1 master node of cluster</td><td align="left">CPU: 2.2GHz</td></tr><tr><td align="left"/><td align="left">(Intel Xeon E5-2407)</td><td align="left">Memory: 8GB</td></tr><tr><td align="left">Slaves</td><td align="left">{10,20,40} slave nodes of cluster</td><td align="left">CPU: 3.3GHz</td></tr><tr><td align="left"/><td align="left">(Intel i3-3220)</td><td align="left">Memory: 8GB</td></tr><tr><td align="left">Single server</td><td align="left">24 core single server</td><td align="left">CPU: 2.6GHz</td></tr><tr><td align="left"/><td align="left">(Intel Xeon X5650)</td><td align="left">Memory: 94GB</td></tr><tr><td align="left">Apache Hadoop</td><td align="left">Distributed file system</td><td align="left">v2.6.0</td></tr><tr><td align="left">Apache Spark</td><td align="left">Data processing framework</td><td align="left">v1.6.0</td></tr><tr><td align="left">Bowtie2</td><td align="left">General short read aligner</td><td align="left">v2.2.9</td></tr><tr><td align="left">CloudAligner</td><td align="left">Bisulfite aligner on cluster</td><td align="left">v1.8</td></tr><tr><td align="left">Bison</td><td align="left">Bisulfite aligner on cluster</td><td align="left">v0.3.3</td></tr><tr><td align="left">Bismark</td><td align="left">Bisulfite aligner on single machine</td><td align="left">v0.18.1</td></tr></tbody></table></table-wrap>
</p>
      <p>We denoted <italic>BiSpark</italic> without additional load balancing implementation as <italic>BiSpark</italic>-plain while <italic>BiSpark</italic> with load balancing is denoted as <italic>BiSpark</italic>-balance. For all aligners, there are some pre-processes including transforming and indexing reference genome, distributing input file and changing the format of the input file. Because pre-processing is alinger-specific and can be reused continuously after running once, we exclude pre-processing time when measuring elapsed time. For the reference genome, we used chromosome 1 of human genome because the CloudAligner can only process single chromosome at a time. We tested all aligners in non-directional library mode. When executing Bison, we used 9, 21 and 41 nodes for the 10-cluster, 20-cluster, and 40-cluster experiments respectively. This is because, in the Bison aligner, there exist a restriction on the setting of a number of nodes that allows only 4((<italic>N</italic>−1)/4)+1 nodes if there are <italic>N</italic> nodes.</p>
    </sec>
  </sec>
  <sec id="Sec13" sec-type="results">
    <title>Results</title>
    <sec id="Sec14">
      <title>Mapping quality evaluation</title>
      <p>Table <xref rid="Tab3" ref-type="table">3</xref> shows mappability, precision, sensitivity and accuracy of aligners for each simulation data set. The results of CloudAligner are excluded from the table since it fails to create correct methylation profiles over the simulation datasets. From the evaluation results, the <italic>BiSpark</italic> shows the best performance on all four metrics with the 0% error dataset. In addition, as the error rate increases, the <italic>BiSpark</italic> still shows the best performance on mappability and sensitivity, and reasonably high precision. From these evaluations, we could confirm that the <italic>BiSpark</italic> algorithm is accurate and robust enough to the errors.
<table-wrap id="Tab3"><label>Table 3</label><caption><p>Mappability, precision, sensitivity and accuracy of aligners</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Data set</th><th align="left">Aligner</th><th align="left">Mappability</th><th align="left">Precision</th><th align="left">Sensitivity</th><th align="left">Accuracy</th></tr></thead><tbody><tr><td align="justify">With 0% error</td><td align="left">BiSpark†</td><td align="left">0.9569</td><td align="left">1.0</td><td align="left">0.9569</td><td align="left">0.9569</td></tr><tr><td align="justify"/><td align="left">Bismark</td><td align="left">0.9454</td><td align="left">1.0</td><td align="left">0.9454</td><td align="left">0.9454</td></tr><tr><td align="justify"/><td align="left">Bison</td><td align="left">0.8030</td><td align="left">0.6090</td><td align="left">0.7129</td><td align="left">0.4891</td></tr><tr><td align="justify">With 1% error</td><td align="left">BiSpark†</td><td align="left">0.9494</td><td align="left">0.9892</td><td align="left">0.9489</td><td align="left">0.9392</td></tr><tr><td align="justify"/><td align="left">Bismark</td><td align="left">0.9440</td><td align="left">0.9961</td><td align="left">0.9438</td><td align="left">0.9403</td></tr><tr><td align="justify"/><td align="left">Bison</td><td align="left">0.8297</td><td align="left">0.5812</td><td align="left">0.7391</td><td align="left">0.4823</td></tr><tr><td align="justify">With 2% error</td><td align="left">BiSpark†</td><td align="left">0.9422</td><td align="left">0.9800</td><td align="left">0.9411</td><td align="left">0.9234</td></tr><tr><td align="justify"/><td align="left">Bismark</td><td align="left">0.9182</td><td align="left">0.9862</td><td align="left">0.9171</td><td align="left">0.9055</td></tr><tr><td align="justify"/><td align="left">Bison</td><td align="left">0.8315</td><td align="left">0.5729</td><td align="left">0.7387</td><td align="left">0.4763</td></tr></tbody></table><table-wrap-foot><p><sup>†</sup>The results from both BiSpark-plain and balance are denoted as BiSpark because the difference is only in the part where data is distributed, which means the results of two versions are always same</p></table-wrap-foot></table-wrap>
</p>
    </sec>
    <sec id="Sec15">
      <title>Scalability evaluation to data size</title>
      <p>We compared the scalability to data size by increasing input data size while cluster size remains unchanged. All real dataset in Table <xref rid="Tab1" ref-type="table">1</xref> were used and 20-cluster was used to execute CloudAligner, Bison, and the <italic>BiSpark</italic> while a single server was used to execute Bismark. Bismark supports parallel computing with a multicore option. However, there is no specific formulation of how many cores Bismark uses while execute Bismark with the multicore option. Instead, the user documentation of Bismark described that 4 multicore option would probably use 20 cores without any specific formulation. Therefore, we used 5 multicore option for safe comparison, even though 5 multicore option would use more than 21 cores.</p>
      <p>The performance evaluation result of each aligner in terms of scalability to data size is depicted in Fig. <xref rid="Fig2" ref-type="fig">2</xref>a. From the result, we could compare two evaluation points; one is a performance of speed itself inferred from <italic>y</italic>-axis value of each aligner measured in seconds. The other one is scalability to the number of reads inferred from the gradient of lines of each aligner. The scalability to the number of reads is getting more important in alignment process as the recent trend of sequencing depth becomes deeper resulting in large volumes of data.
<fig id="Fig2"><label>Fig. 2</label><caption><p>Comparison between the <italic>BiSpark</italic> and other bisulfite-treated aligners. In the performance test, the <italic>BiSpark</italic> outperforms all other aligners in terms of (<bold>a</bold>) scalability to data size and (<bold>b</bold>) cluster size</p></caption><graphic xlink:href="12859_2018_2498_Fig2_HTML" id="MO2"/></fig>
</p>
      <p>The result showed that both versions of <italic>BiSpark</italic> outperform other aligners for both evaluation points. The estimated aligning time over the 10M reads data showed that <italic>BiSpark</italic>-plain only took 617 s and this is around more than 20 times faster than CloudAligner that took 14,783 s. This performance difference got higher when the larger volume of data set used. During the further evaluation though the data size increasing from 10M reads to 200M reads, the aligning time of Bismark was steeply increased from 1551 s to 32,972 s which means <italic>BiSpark</italic>-plain is around 2.5 times faster than Bismark on 10M reads and 3.5 times faster on 200M reads. That is, the more reads to be processed, the faster <italic>BiSpark</italic> is. From the comparison result with recently introduced Bison, the <italic>BiSpark</italic>-plain achieved around 22% performance improvement on 200M reads.</p>
    </sec>
    <sec id="Sec16">
      <title>Scalability evaluation to cluster size</title>
      <p>We also compared the scalability to cluster size by increasing the number of slave nodes while data size remains unchanged. The dataset which consists of 100 million reads (16GB) was used as input and Bismark was excluded for this experiment since the experiment was done on the cluster.</p>
      <p>The evaluation result of aligners which are able to be executed on the cluster is depicted in Fig. <xref rid="Fig2" ref-type="fig">2</xref>b. Unlike Fig. <xref rid="Fig2" ref-type="fig">2</xref>a, the <italic>y</italic>-axis of Fig. <xref rid="Fig2" ref-type="fig">2</xref>b is the number of processed reads per second, interpreted as throughput. We used this measurement since it is easier to visualize scalability by direct proportion curve than inverse proportion curve. The throughput which is inverse proportional to the performance of speed is inferred from <italic>y</italic> value of the plot while how well the aligner can scale up (out) is measured by the gradient of the plot where steeper gradient signifies better scalability.</p>
      <p>We observed consistent result with the previous experiment for throughput analysis as the <italic>BiSpark</italic> showed the best throughput for all 10, 20 and 40 number of slave nodes, followed by Bison and CloudAligner. Also, the <italic>BiSpark</italic> scales up better than other aligners, which represents that the aligning module implemented within the <italic>BiSpark</italic> algorithm is highly parallelized and optimized. The <italic>BiSpark</italic>-balance showed relatively less throughput than <italic>BiSpark</italic>-plain for the cluster of 10 and 20 nodes but showed better throughput for the cluster of 40 nodes.</p>
    </sec>
  </sec>
  <sec id="Sec17" sec-type="conclusion">
    <title>Conclusions</title>
    <p>We developed <italic>BiSpark</italic>, a highly parallelized Spark-based bisulfite-treated sequence aligner. The <italic>BiSpark</italic> not only shows the fastest speed for any size of the dataset with any size of the cluster but also shows the best scalability to both data size and cluster size. In addition, <italic>BiSpark</italic> improves practical usabilities that existing tools do not support. CloudAligner can only align sequencing reads to the single chromosome of reference genome per single execution. Bison has a restriction on cluster size and requires data to be manually distributed to all computing nodes before executing. The <italic>BiSpark</italic> alleviates these inconveniences by utilizing combination of the Spark framework over the HDFS.</p>
    <p>We also developed <italic>BiSpark</italic>-balance which re-partitions RDDs in balance with additional shuffling. Since load balancing and shuffling are a trade-off in terms of the speed, it is hard to conclude theoretically whether the performance would be improved or not. Empirical results from our experiment showed that <italic>BiSpark</italic>-balance scaled well to data size but was generally slower than <italic>BiSpark</italic>-plain. However, <italic>BiSpark</italic>-balance showed better throughput when cluster size increased. The reason <italic>BiSpark</italic>-balance works faster for big cluster might be that the more nodes should wait for the slowest node as cluster size increases. In this case, re-partition can accelerate the aligning process even with the time-consuming shuffling operation since the throughput of the slowest node would be much more improved.</p>
    <p>In this study, we newly implemented a bisulfite-treated sequence aligner over the distributed Apache Spark framework. We believe that by using the <italic>BiSpark</italic>, the burden of sequencing data analysis on bisulfite-treated methylome data could be significantly decreased and thus it allows large-scale epigenetic studies especially related with DNA methylation.</p>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>CPU</term>
        <def>
          <p>Central processing unit</p>
        </def>
      </def-item>
      <def-item>
        <term>SAM</term>
        <def>
          <p>Sequence alignment map</p>
        </def>
      </def-item>
      <def-item>
        <term>SNP</term>
        <def>
          <p>Single nucleotide polymorphism</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <ack>
    <title>Acknowledgements</title>
    <p>Not applicable.</p>
    <sec id="d29e1396">
      <title>Funding</title>
      <p>This work was supported by the National Research Foundation of Korea (NRF) grant funded by the Korea government (MSIP; Ministry of Science, ICT &amp; Future Planning) (No. 2017R1C1B5018165), supported by Basic Science Research Program through the NRF funded by the Ministry of Education (NRF-2016R1D1A1A02937186), supported by a grant of the Korea Health Technology R&amp;D Project through the Korea Health Industry Development Institute (KHIDI), funded by the Ministry of Health &amp; Welfare, Republic of Korea (grant number : HI15C3224), and also supported by the Sookmyung Women’s University Research Grants (1-1703-2032).</p>
    </sec>
    <sec id="d29e1401">
      <title>Availability of data and materials</title>
      <p>The implementation of BiSpark software package, source code, and test data sets are available at <ext-link ext-link-type="uri" xlink:href="https://bhi-kimlab.github.io/BiSpark/">https://bhi-kimlab.github.io/BiSpark/</ext-link>.</p>
    </sec>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors’ contributions</title>
    <p>H.C. conducted the experiment, H.C. and S.S drafted the manuscript, S.S. Y.P processed data and analyzed results, All authors read and approved the final manuscript.</p>
  </notes>
  <notes notes-type="COI-statement">
    <sec>
      <title>Ethics approval and consent to participate</title>
      <p>Not applicable.</p>
    </sec>
    <sec>
      <title>Consent for publication</title>
      <p>Not applicable.</p>
    </sec>
    <sec>
      <title>Competing interests</title>
      <p>The authors declare that they have no competing interests.</p>
    </sec>
    <sec>
      <title>Publisher’s Note</title>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </sec>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Taiwo</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Wilson</surname>
            <given-names>GA</given-names>
          </name>
          <name>
            <surname>Morris</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Seisenberger</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Reik</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Pearce</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Beck</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Butcher</surname>
            <given-names>LM</given-names>
          </name>
        </person-group>
        <article-title>Methylome analysis using medip-seq with low dna concentrations</article-title>
        <source>Nat Protoc</source>
        <year>2012</year>
        <volume>7</volume>
        <issue>4</issue>
        <fpage>617</fpage>
        <pub-id pub-id-type="doi">10.1038/nprot.2012.012</pub-id>
        <pub-id pub-id-type="pmid">22402632</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gu</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Smith</surname>
            <given-names>ZD</given-names>
          </name>
          <name>
            <surname>Bock</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Boyle</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Gnirke</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Meissner</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Preparation of reduced representation bisulfite sequencing libraries for genome-scale dna methylation profiling</article-title>
        <source>Nat Protoc</source>
        <year>2011</year>
        <volume>6</volume>
        <issue>4</issue>
        <fpage>468</fpage>
        <lpage>81</lpage>
        <pub-id pub-id-type="doi">10.1038/nprot.2010.190</pub-id>
        <pub-id pub-id-type="pmid">21412275</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Krueger</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Andrews</surname>
            <given-names>SR</given-names>
          </name>
        </person-group>
        <article-title>Bismark: a flexible aligner and methylation caller for bisulfite-seq applications</article-title>
        <source>Bioinformatics</source>
        <year>2011</year>
        <volume>27</volume>
        <issue>11</issue>
        <fpage>1571</fpage>
        <lpage>2</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btr167</pub-id>
        <pub-id pub-id-type="pmid">21493656</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chen</surname>
            <given-names>P-Y</given-names>
          </name>
          <name>
            <surname>Cokus</surname>
            <given-names>SJ</given-names>
          </name>
          <name>
            <surname>Pellegrini</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Bs seeker: precise mapping for bisulfite sequencing</article-title>
        <source>BMC Bioinformatics</source>
        <year>2010</year>
        <volume>11</volume>
        <issue>1</issue>
        <fpage>203</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-11-203</pub-id>
        <pub-id pub-id-type="pmid">20416082</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kunde-Ramamoorthy</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Coarfa</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Laritsky</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Kessler</surname>
            <given-names>NJ</given-names>
          </name>
          <name>
            <surname>Harris</surname>
            <given-names>RA</given-names>
          </name>
          <name>
            <surname>Xu</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Shen</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Milosavljevic</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Waterland</surname>
            <given-names>RA</given-names>
          </name>
        </person-group>
        <article-title>Comparison and quantitative verification of mapping algorithms for whole-genome bisulfite sequencing</article-title>
        <source>Nucleic Acids Res</source>
        <year>2014</year>
        <volume>42</volume>
        <issue>6</issue>
        <fpage>43</fpage>
        <lpage>43</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkt1325</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Harris</surname>
            <given-names>EY</given-names>
          </name>
          <name>
            <surname>Ponts</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Le Roch</surname>
            <given-names>KG</given-names>
          </name>
          <name>
            <surname>Lonardi</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Brat-bw: efficient and accurate mapping of bisulfite-treated reads</article-title>
        <source>Bioinformatics</source>
        <year>2012</year>
        <volume>28</volume>
        <issue>13</issue>
        <fpage>1795</fpage>
        <lpage>6</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bts264</pub-id>
        <pub-id pub-id-type="pmid">22563065</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Xi</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <article-title>Bsmap: whole genome bisulfite sequence mapping program</article-title>
        <source>BMC Bioinformatics</source>
        <year>2009</year>
        <volume>10</volume>
        <issue>1</issue>
        <fpage>232</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-10-232</pub-id>
        <pub-id pub-id-type="pmid">19635165</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8</label>
      <mixed-citation publication-type="other">Smith AD, Xuan Z, Zhang MQ. BMC Bioinformatics. 2008; 9(1):128.</mixed-citation>
    </ref>
    <ref id="CR9">
      <label>9</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Coarfa</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Yu</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Miller</surname>
            <given-names>CA</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Harris</surname>
            <given-names>RA</given-names>
          </name>
          <name>
            <surname>Milosavljevic</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Pash 3.0: A versatile software package for read mapping and integrative analysis of genomic and epigenomic variation using massively parallel dna sequencing</article-title>
        <source>BMC Bioinformatics</source>
        <year>2010</year>
        <volume>11</volume>
        <issue>1</issue>
        <fpage>572</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-11-572</pub-id>
        <pub-id pub-id-type="pmid">21092284</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Michael</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Moreira</surname>
            <given-names>JE</given-names>
          </name>
          <name>
            <surname>Shiloach</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Wisniewski</surname>
            <given-names>RW</given-names>
          </name>
        </person-group>
        <article-title>Scale-up x scale-out: A case study using nutch/lucene</article-title>
        <source>Parallel and Distributed Processing Symposium, 2007. IPDPS 2007. IEEE International</source>
        <year>2007</year>
        <publisher-loc>Long Beach</publisher-loc>
        <publisher-name>IEEE</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Schatz</surname>
            <given-names>MC</given-names>
          </name>
        </person-group>
        <article-title>Cloudburst: highly sensitive read mapping with mapreduce</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <issue>11</issue>
        <fpage>1363</fpage>
        <lpage>9</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp236</pub-id>
        <pub-id pub-id-type="pmid">19357099</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nguyen</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Shi</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Ruden</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>Cloudaligner: A fast and full-featured mapreduce based tool for sequence mapping</article-title>
        <source>BMC Res Notes</source>
        <year>2011</year>
        <volume>4</volume>
        <issue>1</issue>
        <fpage>171</fpage>
        <pub-id pub-id-type="doi">10.1186/1756-0500-4-171</pub-id>
        <pub-id pub-id-type="pmid">21645377</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dean</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Ghemawat</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Mapreduce: simplified data processing on large clusters</article-title>
        <source>Commun ACM</source>
        <year>2008</year>
        <volume>51</volume>
        <issue>1</issue>
        <fpage>107</fpage>
        <lpage>13</lpage>
        <pub-id pub-id-type="doi">10.1145/1327452.1327492</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Borthakur</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>The hadoop distributed file system: Architecture and design</article-title>
        <source>Hadoop Proj Website</source>
        <year>2007</year>
        <volume>11</volume>
        <issue>2007</issue>
        <fpage>21</fpage>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gurtowski</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Schatz</surname>
            <given-names>MC</given-names>
          </name>
          <name>
            <surname>Langmead</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Genotyping in the cloud with crossbow</article-title>
        <source>Curr Protoc Bioinforma</source>
        <year>2012</year>
        <volume>39</volume>
        <fpage>15</fpage>
        <lpage>3</lpage>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Gunarathne</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>T-L</given-names>
          </name>
          <name>
            <surname>Qiu</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Fox</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>Mapreduce in the clouds for science</article-title>
        <source>Cloud Computing Technology and Science (CloudCom), 2010 IEEE Second International Conference On</source>
        <year>2010</year>
        <publisher-loc>Washington, DC</publisher-loc>
        <publisher-name>IEEE Computer Society</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Abuín</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Pichel</surname>
            <given-names>JC</given-names>
          </name>
          <name>
            <surname>Pena</surname>
            <given-names>TF</given-names>
          </name>
          <name>
            <surname>Amigo</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Sparkbwa: speeding up the alignment of high-throughput dna sequencing data</article-title>
        <source>PloS ONE</source>
        <year>2016</year>
        <volume>11</volume>
        <issue>5</issue>
        <fpage>0155461</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0155461</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18</label>
      <mixed-citation publication-type="other">Shanahan JG, Dai L. Large scale distributed data science using apache spark. In: Proceedings of the 21th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining. ACM: 2015. p. 2323–2324.</mixed-citation>
    </ref>
    <ref id="CR19">
      <label>19</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Durbin</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Fast and accurate short read alignment with burrows–wheeler transform</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <issue>14</issue>
        <fpage>1754</fpage>
        <lpage>60</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp324</pub-id>
        <pub-id pub-id-type="pmid">19451168</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ryan</surname>
            <given-names>DP</given-names>
          </name>
          <name>
            <surname>Ehninger</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>Bison: bisulfite alignment on nodes of a cluster</article-title>
        <source>BMC Bioinformatics</source>
        <year>2014</year>
        <volume>15</volume>
        <issue>1</issue>
        <fpage>337</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-15-337</pub-id>
        <pub-id pub-id-type="pmid">25326660</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gropp</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Lusk</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Doss</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Skjellum</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>A high-performance, portable implementation of the mpi message passing interface standard</article-title>
        <source>Parallel Comput</source>
        <year>1996</year>
        <volume>22</volume>
        <issue>6</issue>
        <fpage>789</fpage>
        <lpage>828</lpage>
        <pub-id pub-id-type="doi">10.1016/0167-8191(96)00024-5</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22</label>
      <mixed-citation publication-type="other">Guo W, Fiziev P, Yan W, Cokus S, Sun X, Zhang MQ, Chen P-Y, Pellegrini M. BMC Genomics. 2013; 14(1):774.</mixed-citation>
    </ref>
    <ref id="CR23">
      <label>23</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Zaharia</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Chowdhury</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Das</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Dave</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Ma</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>McCauley</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Franklin</surname>
            <given-names>MJ</given-names>
          </name>
          <name>
            <surname>Shenker</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Stoica</surname>
            <given-names>I</given-names>
          </name>
        </person-group>
        <article-title>Resilient distributed datasets: A fault-tolerant abstraction for in-memory cluster computing</article-title>
        <source>Proceedings of the 9th USENIX Conference on Networked Systems Design and Implementation</source>
        <year>2012</year>
        <publisher-loc>San Jose</publisher-loc>
        <publisher-name>USENIX Association</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Shvachko</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Kuang</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Radia</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Chansler</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>The hadoop distributed file system</article-title>
        <source>Mass Storage Systems and Technologies (MSST), 2010 IEEE 26th Symposium On</source>
        <year>2010</year>
        <publisher-loc>Nevada</publisher-loc>
        <publisher-name>IEEE</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Handsaker</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Wysoker</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Fennell</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Ruan</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Homer</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Marth</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Abecasis</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Durbin</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>The sequence alignment/map format and samtools</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <issue>16</issue>
        <fpage>2078</fpage>
        <lpage>9</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp352</pub-id>
        <pub-id pub-id-type="pmid">19505943</pub-id>
      </element-citation>
    </ref>
    <ref id="CR26">
      <label>26</label>
      <mixed-citation publication-type="other">Krueger F. <ext-link ext-link-type="uri" xlink:href="https://www.bioinformatics.babraham.ac.uk/projects/sherman/">https://www.bioinformatics.babraham.ac.uk/projects/sherman/</ext-link>. 2011. <ext-link ext-link-type="uri" xlink:href="https://www.bioinformatics.babraham.ac.uk/projects/sherman/">https://www.bioinformatics.babraham.ac.uk/projects/sherman/</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR27">
      <label>27</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Consortium</surname>
            <given-names>EP</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>An integrated encyclopedia of dna elements in the human genome</article-title>
        <source>Nature</source>
        <year>2012</year>
        <volume>489</volume>
        <issue>7414</issue>
        <fpage>57</fpage>
        <lpage>74</lpage>
        <pub-id pub-id-type="doi">10.1038/nature11247</pub-id>
        <pub-id pub-id-type="pmid">22955616</pub-id>
      </element-citation>
    </ref>
    <ref id="CR28">
      <label>28</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chatterjee</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Stockwell</surname>
            <given-names>PA</given-names>
          </name>
          <name>
            <surname>Rodger</surname>
            <given-names>EJ</given-names>
          </name>
          <name>
            <surname>Morison</surname>
            <given-names>IM</given-names>
          </name>
        </person-group>
        <article-title>Comparison of alignment software for genome-wide bisulphite sequence data</article-title>
        <source>Nucleic Acids Res</source>
        <year>2012</year>
        <volume>40</volume>
        <issue>10</issue>
        <fpage>79</fpage>
        <lpage>79</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gks150</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

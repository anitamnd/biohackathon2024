<?DTDIdentifier.IdentifierValue article.dtd?>
<?DTDIdentifier.IdentifierType system?>
<?SourceDTD.DTDName article.dtd?>
<?SourceDTD.Version 1.0?>
<?ConverterInfo.XSLTName bmc2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">3694458</article-id>
    <article-id pub-id-type="publisher-id">1471-2105-14-184</article-id>
    <article-id pub-id-type="pmid">23758764</article-id>
    <article-id pub-id-type="doi">10.1186/1471-2105-14-184</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Benchmarking short sequence mapping tools</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" id="A1">
        <name>
          <surname>Hatem</surname>
          <given-names>Ayat</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <xref ref-type="aff" rid="I2">2</xref>
        <email>dayat@bmi.osu.edu</email>
      </contrib>
      <contrib contrib-type="author" id="A2">
        <name>
          <surname>Bozdağ</surname>
          <given-names>Doruk</given-names>
        </name>
        <xref ref-type="aff" rid="I2">2</xref>
        <email>bozdagd@bmi.osu.edu</email>
      </contrib>
      <contrib contrib-type="author" id="A3">
        <name>
          <surname>Toland</surname>
          <given-names>Amanda E</given-names>
        </name>
        <xref ref-type="aff" rid="I3">3</xref>
        <email>Amanda.Toland@osumc.edu</email>
      </contrib>
      <contrib contrib-type="author" corresp="yes" id="A4">
        <name>
          <surname>Çatalyürek</surname>
          <given-names>Ümit V</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <xref ref-type="aff" rid="I2">2</xref>
        <email>umit@bmi.osu.edu</email>
      </contrib>
    </contrib-group>
    <aff id="I1"><label>1</label>Department of Electrical and Computer Engineering, The Ohio State University, Columbus, OH, USA</aff>
    <aff id="I2"><label>2</label>Department of Biomedical Informatics, The Ohio State University, Columbus, OH, USA</aff>
    <aff id="I3"><label>3</label>Department of Molecular Virology, Immunology and Medical Genetics, The Ohio State University, Columbus, OH, USA</aff>
    <pub-date pub-type="collection">
      <year>2013</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>7</day>
      <month>6</month>
      <year>2013</year>
    </pub-date>
    <volume>14</volume>
    <fpage>184</fpage>
    <lpage>184</lpage>
    <history>
      <date date-type="received">
        <day>9</day>
        <month>8</month>
        <year>2012</year>
      </date>
      <date date-type="accepted">
        <day>28</day>
        <month>5</month>
        <year>2013</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright © 2013 Hatem et al.; licensee BioMed Central Ltd.</copyright-statement>
      <copyright-year>2013</copyright-year>
      <copyright-holder>Hatem et al.; licensee BioMed Central Ltd.</copyright-holder>
      <license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0">http://creativecommons.org/licenses/by/2.0</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="http://www.biomedcentral.com/1471-2105/14/184"/>
    <abstract>
      <sec>
        <title>Background</title>
        <p>The development of next-generation sequencing instruments has led to the generation of millions of short sequences in a single run. The process of aligning these reads to a reference genome is time consuming and demands the development of fast and accurate alignment tools. However, the current proposed tools make different compromises between the accuracy and the speed of mapping. Moreover, many important aspects are overlooked while comparing the performance of a newly developed tool to the state of the art. Therefore, there is a need for an objective evaluation method that covers all the aspects. In this work, we introduce a benchmarking suite to extensively analyze sequencing tools with respect to various aspects and provide an objective comparison.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>We applied our benchmarking tests on 9 well known mapping tools, namely, Bowtie, Bowtie2, BWA, SOAP2, MAQ, RMAP, GSNAP, Novoalign, and mrsFAST (mrFAST) using synthetic data and real RNA-Seq data. MAQ and RMAP are based on building hash tables for the reads, whereas the remaining tools are based on indexing the reference genome. The benchmarking tests reveal the strengths and weaknesses of each tool. The results show that no single tool outperforms all others in all metrics. However, Bowtie maintained the best throughput for most of the tests while BWA performed better for longer read lengths. The benchmarking tests are not restricted to the mentioned tools and can be further applied to others.</p>
      </sec>
      <sec>
        <title>Conclusion</title>
        <p>The mapping process is still a hard problem that is affected by many factors. In this work, we provided a benchmarking suite that reveals and evaluates the different factors affecting the mapping process. Still, there is no tool that outperforms all of the others in all the tests. Therefore, the end user should clearly specify his needs in order to choose the tool that provides the best results.</p>
      </sec>
    </abstract>
    <kwd-group>
      <kwd>Short sequence mapping</kwd>
      <kwd>Next-generation sequencing</kwd>
      <kwd>Benchmark</kwd>
      <kwd>Sequence analysis</kwd>
    </kwd-group>
  </article-meta>
</front>
<body>
  <sec sec-type="intro">
    <title>Introduction</title>
    <p>Next-generation sequencing (NGS) technology has evolved rapidly in the last five years, leading to the generation of hundreds of millions of sequences (reads) in a single run. The number of generated reads varies between 1 million for long reads generated by Roche/454 sequencer (≈400 base pairs (bps)) and 2.4 billion for short reads generated by Illumina/Solexa and ABI/SOLIDTM sequencers (≈75 bps). The invention of the high-throughput sequencers has led to a significant cost reduction, e.g., a Megabase of DNA sequence costs only &lt;DOLLAR/&gt;0.1 [<xref ref-type="bibr" rid="B1">1</xref>].</p>
    <p>Nevertheless, the large amount of generated data tells us almost nothing about the DNA, as stated by Flicek and Birney [<xref ref-type="bibr" rid="B2">2</xref>]. This is due to the lack of proper analysis tools and algorithms. Therefore, bioinformatics researchers started to think about new ways to efficiently handle and analyze this large amount of data.</p>
    <p>One of the areas that attracted many researchers to work on is the alignment (mapping) of the generated sequences, i.e., the alignment of reads generated by NGS machines to a reference genome. Because, an efficient alignment of this large amount of reads with high accuracy is a crucial part in many applications’ workflow, such as genome resequencing [<xref ref-type="bibr" rid="B2">2</xref>], DNA methylation [<xref ref-type="bibr" rid="B3">3</xref>], RNA-Seq [<xref ref-type="bibr" rid="B4">4</xref>], ChIP sequencing, SNPs detection [<xref ref-type="bibr" rid="B5">5</xref>], genomic structural variants detection [<xref ref-type="bibr" rid="B6">6</xref>], and metagenomics [<xref ref-type="bibr" rid="B7">7</xref>]. Therefore, numerous tools have been developed to undertake this challenging task including MAQ [<xref ref-type="bibr" rid="B8">8</xref>], RMAP [<xref ref-type="bibr" rid="B9">9</xref>], GSNAP [<xref ref-type="bibr" rid="B10">10</xref>], Bowtie [<xref ref-type="bibr" rid="B11">11</xref>], Bowtie2 [<xref ref-type="bibr" rid="B12">12</xref>], BWA [<xref ref-type="bibr" rid="B13">13</xref>], SOAP2 [<xref ref-type="bibr" rid="B14">14</xref>], Mosaik [<xref ref-type="bibr" rid="B15">15</xref>], FANGS [<xref ref-type="bibr" rid="B16">16</xref>], SHRIMP [<xref ref-type="bibr" rid="B17">17</xref>], BFAST [<xref ref-type="bibr" rid="B18">18</xref>], MapReads, SOCS [<xref ref-type="bibr" rid="B19">19</xref>], PASS [<xref ref-type="bibr" rid="B20">20</xref>], mrFAST [<xref ref-type="bibr" rid="B6">6</xref>], mrsFAST [<xref ref-type="bibr" rid="B21">21</xref>], ZOOM [<xref ref-type="bibr" rid="B22">22</xref>], Slider [<xref ref-type="bibr" rid="B23">23</xref>], SliderII [<xref ref-type="bibr" rid="B24">24</xref>], RazerS [<xref ref-type="bibr" rid="B25">25</xref>], RazerS3 [<xref ref-type="bibr" rid="B26">26</xref>], and Novoalign [<xref ref-type="bibr" rid="B27">27</xref>]. Moreover, GPU-based tools have been developed to optimally map more reads such as SARUMAN [<xref ref-type="bibr" rid="B28">28</xref>] and SOAP3 [<xref ref-type="bibr" rid="B29">29</xref>]. However, due to using different mapping techniques, each tool provides different trade-offs between speed and quality of the mapping. For instance, the quality is often compromised in the following ways to reduce runtime: </p>
    <p>● Neglecting base quality score.</p>
    <p>● Limiting the number of allowed mismatches.</p>
    <p>● Disabling gapped alignment or limiting the gap length.</p>
    <p>● Ignoring SNP information.</p>
    <p>In most cases, it is unclear how such compromises affect the performance of newly developed tools in comparison to the state of the art ones. Therefore, many studies have been carried out to provide such comparisons. Some of the available studies were mainly focused on providing new tools (e.g., [<xref ref-type="bibr" rid="B10">10</xref>,<xref ref-type="bibr" rid="B13">13</xref>]). The remaining studies tried to provide a thorough comparison while each covering a different aspect (e.g., [<xref ref-type="bibr" rid="B30">30</xref>-<xref ref-type="bibr" rid="B34">34</xref>]).</p>
    <p>For instance, Li and Homer [<xref ref-type="bibr" rid="B30">30</xref>] classified the tools into groups according to the used indexing technique and the features the tools support such as gapped alignment, long read alignment, and bisulfite-treated reads alignment. In other words, in that work, the main focus was classifying the tools into groups rather than evaluating their performance on various settings.</p>
    <p>Similar to Li and Homer, Fronseca et al. [<xref ref-type="bibr" rid="B34">34</xref>] provided another classification study. However, they included more tools in the study, around 60 mappers, while being more focused on providing a comprehensive overview of the characteristics of the tools.</p>
    <p>Ruffalo et al. [<xref ref-type="bibr" rid="B32">32</xref>] presented a comparison between Bowtie, BWA, Novoalign, SHRiMP, mrFAST, mrsFAST, and SOAP2. Unlike the above mentioned studies, Ruffalo et al. evaluated the accuracy of the tools in different settings. They defined a read to be correctly mapped if it maps to the correct location in the genome and has a quality score higher than or equal to the threshold. Accordingly, they evaluated the behavior of the tools while varying the sequencing error rate, indel size, and indel frequency. However, they used the default options of the mapping tools in most of the experiments. In addition, they considered small simulated data sets of 500,000 reads of length 50 bps while using an artificial genome of length 500Mbp and the Human genome of length 3Gbp as the reference genomes.</p>
    <p>Another study was done by Holtgrewe et al. [<xref ref-type="bibr" rid="B31">31</xref>], where the focus was the sensitivity of the tools. They enumerated the possible matching intervals with a maximum distance <italic>k</italic> for each read. Afterwards, they evaluated the sensitivity of the mappers according to the number of intervals they detected. Holtgrewe et al. used the suggested sensitivity evaluation criteria to evaluate the performance of SOAP2, Bowtie, BWA, and Shrimp2 on both simulated and real datasets. However, they used small reference genomes (the S. cerevisiae genome of length 12 Mbp and the D. melanogaster genome of length 169 Mbp). In addition, the experiments were performed on small real data sets of 10,000 reads. For evaluating the performance of the tools on real data sets, Holtgrewe et al. used RazerS to detect the possible matching intervals. RazerS is a full sensitive mapper, hence it is a very slow mapper [<xref ref-type="bibr" rid="B21">21</xref>]. Therefore, scaling the suggested benchmark process for realistic whole genome mapping experiments with millions of reads is not practical. Nevertheless, after the initial submission of this work, RazerS3 [<xref ref-type="bibr" rid="B26">26</xref>] was published, thus, making a significant improvement in the running time of the evaluation process.</p>
    <p>Schbath et al. [<xref ref-type="bibr" rid="B33">33</xref>] also focused on evaluating the sensitivity of the sequencing tools. They evaluated if a tool correctly reports a read as a unique or not. In addition, for non-unique reads, they evaluated if a tool detects all of the mapping locations. However, in their work, like many previous studies, the tools were used with default options, and they tested the tools with a very small read length of 40 bps. Additionally, the error model they used did not include indels and allowed only 3 mismatches.</p>
    <p>Even though many studies have been published for evaluating short sequence mapping tools, the problem is still open and further perspectives were not tackled in the current studies. For instance, the above studies did not consider the effect of changing the default options and using the same options across the tools. In addition, some of the studies used small data sets (e.g., 10,00 and 500,000 reads) while using small reference genomes (e.g., 169Mbps and 500Mbps) [<xref ref-type="bibr" rid="B31">31</xref>,<xref ref-type="bibr" rid="B32">32</xref>]. Furthermore, they did not take the effect of input properties and algorithmic features into account. Here, input properties refer to the type of the reference genome and the properties of the reads including their length and source. Algorithmic features, on the other hand, pertain to the features provided by the mapping tool regarding its performance and utility. Therefore, there is still a need for a quantitative evaluation method to systematically compare mapping tools in multiple aspects. In this paper, we address this problem and present two different sets of experiments to evaluate and understand the strengths and weaknesses of each tool. The first set includes the benchmarking suite, consisting of tests that cover a variety of input properties and algorithmic features. These tests are applied on real RNA-Seq data and genomic resequencing synthetic data to verify the effectiveness of the benchmarking tests. The real data set consists of 1 million reads while the synthetic data sets consist of 1 million reads and 16 million reads. Additionally, we have used multiple genomes with sizes varying from 0.1 Gbps to 3.1 Gbps. The second set includes a use case experiment, namely, SNP calling, to understand the effects of mapping techniques on a real application.</p>
    <p>Furthermore, we introduce a new, albeit simple, mathematical definition for the mapping correctness. We define a read to be correctly mapped if it is mapped while not violating the mapping criteria. This is in contrast to previous works where they define a read to be correctly mapped if it maps to its original genomic location. Clearly, if one knows “the original genomic location”, there is no need to map the reads. Hence, even though such a definition can be considered more biologically relevant, unfortunately this definition is neither sufficient nor computationally achievable. For instance, a read could be mapped to the original location with two mismatches (i.e., substitution error or SNP) while there might exist a mapping with an exact match to another location. If a tool does not have any <italic>a-priori</italic> information about the data, it would be impossible to choose the two mismatches location over the exact matching one. One can only hope that such tool can return “the original genomic location” when the user asks the tool to return all matching locations with two mismatches or less. Indeed, as later shown in the paper, our suggested definition is computationally more accurate than the naïve one. In addition, it complements other definitions such as the one suggested by Holtgrewe et al. [<xref ref-type="bibr" rid="B31">31</xref>].</p>
    <p>To assess our work, we apply these tests on nine well known short sequence mapping tools, namely, Bowtie, Bowtie2, BWA, SOAP2, MAQ, RMAP, Novoalign, GSNAP, and mrFAST (mrsFAST). Unlike the other tools in this study, mrFAST (mrsFAST) is a full sensitive exact mapper that reports all the mapping locations. Therefore, comparing the mapping accuracy performance of mrFAST with the remaining tools is beneficial in further understanding the behavior of the different tools, even though comparing the execution time performance will not be fair. Moreover, we compare the performance of these tools with that of FANGS, a long read mapping tool, to show their effectiveness in handling long reads. The remaining tools were chosen according to the indexing techniques they use. Therefore, we can emphasize on the effect of the indexing technique on the performance. The experiments are carried out while using the same options for the tools, whenever possible.</p>
    <p>The paper is organized as follows: in the next section, we briefly describe the sequence mapping problem, the mapping techniques used by the tools, and various evaluation criteria used to evaluate the performance of the tools including other definitions for mapping correctness. Then, we discuss how we designed the benchmarking suite and give a real application for the mapping problem. Finally, we present and explain the results for our benchmarking suite.</p>
  </sec>
  <sec>
    <title>Background</title>
    <p>The exact matching of DNA sequences to a genome is a special case of the string matching problem. It requires incorporating the known properties or features of the DNA sequences and the sequencing technologies, thus, adding additional complexity to the mapping process. In this section, we first give a brief description of a set of features of DNA and sequencing technologies. Then, we explain how the tools used in this study work and support these features. Additionally, we describe the default options setup and show how divergent they are among the tools. Finally, we compare the evaluation criteria used in previous studies.</p>
    <sec>
      <title>Features</title>
      <p>● <italic>Seeding</italic> represents the first few tens of base pairs of a read. The seed part of a read is expected to contain less erroneous characters due to the specifics of the NGS technologies. Therefore, the seeding property is mostly used to maximize performance and accuracy.</p>
      <p>● <italic>Base quality scores</italic> provide a measure on correctness of each base in the read. The base quality score is assigned by a phred-like algorithm [<xref ref-type="bibr" rid="B35">35</xref>,<xref ref-type="bibr" rid="B36">36</xref>]. The score <italic>Q</italic> is equal to −10 log10(<italic>e</italic>), where <italic>e</italic> is the probability that the base is wrong. Some tools use the quality scores to decide mismatch locations. Others accept or reject the read based on the sum of the quality scores at mismatch positions.</p>
      <p>● <italic>Existence of indels</italic> necessitates inserting or deleting nucleotides while mapping a sequence to a reference genome (gaps). The complexity of choosing a gap location increases with the read length. Therefore, some tools do not allow any gaps while others limit their locations and numbers.</p>
      <p>● <italic>Paired-end reads</italic> result from sequencing both ends of a DNA molecule. Mapping paired-end reads increases the confidence in the mapping locations due to having an estimation of the distance between the two ends.</p>
      <p>● <italic>Color space read</italic> is a read type generated by SOLiD sequencers. In this technology, overlapping pairs of letters are read and given a number (color) out of four numbers [<xref ref-type="bibr" rid="B17">17</xref>]. The reads can be converted into bases, however, performing the mapping in the color space has advantages in terms of error detection.</p>
      <p>● <italic>Splicing</italic> refers to the process of cutting the RNA to remove the non-coding part (introns) and keeping only the coding part (exons) and joining them together. Therefore, when sequencing the RNA, a read might be located across exon-exon junctions. The process of mapping such reads back to the genome is hard due to the variability of the intron length. For instance, the intron length ranges between 250 and 65,130 nt in eukaryotic model organisms [<xref ref-type="bibr" rid="B37">37</xref>].</p>
      <p>● <italic>SNPs</italic> are variations of a single nucleotide between members of the same species. SNPs are not mismatches. Therefore, their locations should be identified before mapping reads in order to correctly identify actual mismatch positions.</p>
      <p>● <italic>Bisulphite treatment</italic> is a method used for the study of the methylation state of the DNA [<xref ref-type="bibr" rid="B3">3</xref>]. In bisulphite treated reads, each unmethylated cytosine is converted to uracil. Therefore, they require special handling in order not to misalign the reads.</p>
    </sec>
    <sec>
      <title>Tools’ description</title>
      <p>For most of the existing tools (and for all the ones we consider), the mapping process starts by building an index for the reference genome or the reads. Then, the index is used to find the corresponding genomic positions for each read. There are many techniques used to build the index [<xref ref-type="bibr" rid="B30">30</xref>]. The two most common techniques are the followings: </p>
      <p>● Hash Tables: The hash based methods are divided into two types: hashing the reads and hashing the genome. In general, the main idea for both types is to build a hash table for subsequences of the reads/genome. The key of each entry is a subsequence while the value is a list of positions where the subsequence can be found. Hashing based tools include the following tools:</p>
      <p><bold>GSNAP</bold>[<xref ref-type="bibr" rid="B10">10</xref>] is a genome indexing tool. The hash table is built by dividing the reference genome into overlapping oligomers of length 12 sampled every 3 nucleotides. The mapping phase works by first dividing the read into smaller substrings, finding candidate regions for each substring, and finally combining the regions for all of the substrings to generate the final results. GSNAP was mainly designed to detect complex variants and splicing in individual reads. However, in this study, GSNAP is only used as a mapper to evaluate its efficiency.</p>
      <p><bold>Novoalign</bold>[<xref ref-type="bibr" rid="B27">27</xref>] is a genome indexing tool. Similar to GSNAP, the hash table is built by dividing the reads into overlapping oligomers. The mapping phase uses the Needleman-Wunsch algorithm with affine gap penalties to find the global optimum alignment.</p>
      <p><bold>mrFAST and mrsFAST</bold>[<xref ref-type="bibr" rid="B6">6</xref>,<xref ref-type="bibr" rid="B21">21</xref>] are genome indexing tools. They build a collision free hash table to index <italic>k</italic>-mers of the genome. mrFAST and mrsFAST are both developed with the same method, however, the former supports gaps and mismatches while the latter supports only mismatches to run faster. Therefore, in the following, we will use mrsFAST for experiments that do not allow gaps and mrFAST for experiments that allow gaps. Unlike the other tools, mrFAST and mrsFAST report all of the available mapping locations for a read. This is important in many applications such as structural variants detection.</p>
      <p><bold>FANGS</bold>[<xref ref-type="bibr" rid="B16">16</xref>] is a genome indexing tool. In contrary to the other tools, it is designed to handle the long reads generated by the 454 sequencer.</p>
      <p><bold>MAQ</bold>[<xref ref-type="bibr" rid="B8">8</xref>] is a read indexing tool. The algorithm works by first constructing multiple hash tables for the reads. Then, the reference genome is scanned against the tables to find the mapping locations.</p>
      <p><bold>RMAP</bold>[<xref ref-type="bibr" rid="B9">9</xref>] is a read indexing tool. Similar to MAQ, RMAP pre-processes the reads to build the hash table, then the reference genome is scanned against the hash table to extract the mapping locations.</p>
      <p>Most of the newly developed tools are based on indexing the genome. Nevertheless, MAQ and RMAP are included in this study to investigate the effectiveness of our benchmarking tests on evaluating read indexing based tools. In addition, we investigate if there is any potential for the read indexing technique to be used in new tools.</p>
      <p>● Burrows-Wheeler Transform (BWT):</p>
      <p><bold>BWT</bold>[<xref ref-type="bibr" rid="B38">38</xref>] is an efficient data indexing technique that maintains a relatively small memory footprint when searching through a given data block. BWT was extended by Ferragina and Manzini [<xref ref-type="bibr" rid="B39">39</xref>] to a newer data structure, named FM-index, to support exact matching. By transforming the genome into an FM-index, the lookup performance of the algorithm improves for the cases where a single read matches multiple locations in the genome. However, the improved performance comes with a significantly large index build up time compared to hash tables.</p>
      <p>BWT based tools include the following:</p>
      <p><bold>Bowtie</bold>[<xref ref-type="bibr" rid="B11">11</xref>] starts by building an FM-index for the reference genome and then uses the modified Ferragina and Manzini [<xref ref-type="bibr" rid="B39">39</xref>] matching algorithm to find the mapping location. There are two main versions of Bowtie namely Bowtie and Bowtie 2. Bowtie 2 is mainly designed to handle reads longer than 50 bps. Additionally, Bowtie 2 supports features not handled by Bowtie. It was noticed that both versions had different performance in the experiments. Therefore, both versions are included in this study.</p>
      <p><bold>BWA</bold>[<xref ref-type="bibr" rid="B13">13</xref>] is another BWT based tool. The BWA tool uses the Ferragina and Manzini [<xref ref-type="bibr" rid="B39">39</xref>] matching algorithm to find exact matches, similar to Bowtie. To find inexact matches, the authors provided a new backtracking algorithm that searches for matches between substring of the reference genome and the query within a certain defined distance.</p>
      <p><bold>SOAP2</bold>[<xref ref-type="bibr" rid="B14">14</xref>] works differently than the other BWT based tools. It uses the BWT and the hash table techniques to index the reference genome in order to speed up the exact matching process. On the other hand, it applies a “split-read strategy”, i.e., splits the read into fragments based on the number of mismatches, to find inexact matches.</p>
      <p>In addition to providing different mapping techniques, each tool handles only a subset of the DNA sequences and the sequencing technologies features. Moreover, there are differences in the way the features are handled, which are summarized in Table <xref ref-type="table" rid="T1">1</xref>. For instance, BWA, SOAP, and GSNAP accept or reject an alignment based on counting the number of mismatches between the read and the corresponding genomic position. On the other hand, Bowtie, MAQ, and Novoalign use a quality threshold (i.e., alignment score) to perform the same function. The quality threshold is different from the mapping quality. The former is the probability of the occurrence of the read sequence given an alignment location while the latter is the Bayesian posterior probability for the correctness of the alignment location calculated from all of the alignments found for the read.</p>
      <table-wrap position="float" id="T1">
        <label>Table 1</label>
        <caption>
          <p>Features supported by the tools</p>
        </caption>
        <table frame="hsides" rules="groups" border="1">
          <colgroup>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
          </colgroup>
          <thead valign="top">
            <tr>
              <th align="left"> </th>
              <th align="center">
                <bold>Bowtie</bold>
              </th>
              <th align="center">
                <bold>Bowtie2</bold>
              </th>
              <th align="center">
                <bold>BWA</bold>
              </th>
              <th align="center">
                <bold>SOAP2</bold>
              </th>
              <th align="center">
                <bold>MAQ</bold>
              </th>
              <th align="center">
                <bold>RMAP</bold>
              </th>
              <th align="center">
                <bold>GSNAP</bold>
              </th>
              <th align="center">
                <bold>FANGS</bold>
              </th>
              <th align="center">
                <bold>Novoalign</bold>
              </th>
              <th align="center">
                <bold>mrFAST</bold>
              </th>
              <th align="center">
                <bold>mrsFAST</bold>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" valign="bottom">Seed mm.<hr/></td>
              <td align="center" valign="bottom">Up to 3<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">Any<hr/></td>
              <td align="center" valign="bottom">Up to 2<hr/></td>
              <td align="center" valign="bottom">Any<hr/></td>
              <td align="center" valign="bottom">Any<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">Non-seed mm.<hr/></td>
              <td align="center" valign="bottom">QS<hr/></td>
              <td align="center" valign="bottom">AS<hr/></td>
              <td align="center" valign="bottom">Count<hr/></td>
              <td align="center" valign="bottom">Count<hr/></td>
              <td align="center" valign="bottom">QS<hr/></td>
              <td align="center" valign="bottom">Count<hr/></td>
              <td align="center" valign="bottom">Count<hr/></td>
              <td align="center" valign="bottom">Count<hr/></td>
              <td align="center" valign="bottom">QS<hr/></td>
              <td align="center" valign="bottom">Count<hr/></td>
              <td align="center" valign="bottom">Count<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">Var. seed len.<hr/></td>
              <td align="center" valign="bottom">&gt; 5<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">Any<hr/></td>
              <td align="center" valign="bottom">&gt; 28<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">Mapping qual.<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">Yes<hr/></td>
              <td align="center" valign="bottom">Yes<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">Yes<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">Yes<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">Gapped align.<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">Yes<hr/></td>
              <td align="center" valign="bottom">Yes<hr/></td>
              <td align="center" valign="bottom">PE<hr/></td>
              <td align="center" valign="bottom">PE<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">Yes<hr/></td>
              <td align="center" valign="bottom">Yes<hr/></td>
              <td align="center" valign="bottom">Yes<hr/></td>
              <td align="center" valign="bottom">Yes<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">Colorspace<hr/></td>
              <td align="center" valign="bottom">Yes<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">Yes<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">Yes<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">Yes<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">Splicing<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">Yes<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">SNP tolerance<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">Yes<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
            </tr>
            <tr>
              <td align="left">Bisulphite reads</td>
              <td align="center"> </td>
              <td align="center"> </td>
              <td align="center"> </td>
              <td align="center"> </td>
              <td align="center"> </td>
              <td align="center">Yes</td>
              <td align="center">Yes</td>
              <td align="center"> </td>
              <td align="center">Yes</td>
              <td align="center">Yes</td>
              <td align="center"> </td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <p>PE: paired-end only, mm.: mismatches, QS: base quality score, count: total count of mismatches in the read, AS: alignment score, and empty cells mean not supported.</p>
        </table-wrap-foot>
      </table-wrap>
      <p>In some cases, the features are partially supported. For example, SOAP2 supports gapped alignment only for paired end reads, while BWA limits the gap size. Therefore, considering only one of the above features when comparing between the tools would lead to under- or over-estimation of the tools’ performance.</p>
    </sec>
    <sec>
      <title>Default options of the tested tools</title>
      <p>In general, using a tool’s default options yields a good performance while maintaining a good output quality. Most users use the tools with the default options or only tweak some of them. Therefore, it is important to understand the effect of using these options and the kind of compromises made while using them. For the nine tools considered in this paper, the most crucial default options are the following: </p>
      <p>● Maximum number of mismatches in the seed: the seed based tools use a default value of 2.</p>
      <p>● Maximum number of mismatches in the read: Bowtie2, BWA, and GSNAP determine the number of mismatches based on the read length. It is 10 for RMAP, 2 for mrsFAST, and 5 for SOAP2, FANGS, and mrFAST.</p>
      <p>● Seed length: It is 28 for MAQ, 32 for RMAP, and 28 for Bowtie. BWA disables seeding while SOAP2 considers the whole read as the seed.</p>
      <p>● Quality threshold: It is equal to 70 for MAQ and Bowtie while it depends on the read length and the genome size for Novoalign.</p>
      <p>● Splicing: This option is enabled for GSNAP.</p>
      <p>● Gapped alignment: It is enabled for Bowtie2, GSNAP, BWA, Novoalign and MAQ while it is disabled for SOAP2.</p>
      <p>● Minimum and maximum insert sizes for paired-end mapping: The insert size represents the distance between the two ends. The values used for the minimum and the maximum insert sizes are 0 and 250 for Bowtie and MAQ, 0 and 500 for BWA and Bowtie2, 400 and 500 for SOAP2, and 100 and 400 for RMAP. mrFAST and mrsFAST do not have default values for max and min insert sizes.</p>
      <p>Indeed, as will be shown in the results’ section, having different default values lead to different results for the same data set. Hence, using the same values when comparing between the tools is important.</p>
    </sec>
    <sec>
      <title>Evaluation criteria</title>
      <p>In general, the performance of the tools is evaluated by considering three aspects, namely, the <italic>throughput</italic> or the <italic>running time</italic>, the <italic>memory footprint</italic>, and the <italic>mapping percentage</italic>. The <italic>throughput</italic> is the number of base pairs mapped per second (bps/sec) while the <italic>memory footprint</italic> is the required memory by the tool to store/process the read/genome index. The <italic>mapping percentage</italic> is the percentage of reads each tool maps.</p>
      <p>The <italic>mapping percentage</italic> is further divided into a <italic>correctly mapped</italic> reads part and an <italic>error</italic> (false positives) part. There have been many definitions suggested for the <italic>error</italic> in previous studies. For instance, for the simulated reads, the naïve and most used definition for <italic>error</italic> is the percentage of reads mapped to the incorrect location (i.e., a location other than the genomic location the read was originally extracted from) [<xref ref-type="bibr" rid="B10">10</xref>,<xref ref-type="bibr" rid="B13">13</xref>]. Clearly, this definition is neither sufficient nor computationally correct. Figure <xref ref-type="fig" rid="F1">1</xref> gives an example explaining the drawbacks of this definition. After applying sequencing errors, the read does not exactly match the original genomic location. Since the tools do not have any <italic>a-priori</italic> information for the data, it would be impossible to choose the two mismatches location as the best mapping location over the exact matching one. Therefore, the naïve criteria would judge the tool as incorrectly mapping the read if the tool returned either alignment (2) or (3) while in fact it picked a more accurate matching.</p>
      <fig id="F1" position="float">
        <label>Figure 1</label>
        <caption>
          <p><bold>Evaluation criteria.</bold> An example showing how the different evaluation criteria work. In the upper part of the figure, the sequence in blue is the original genomic position where the simulated read was extracted from. After applying sequencing errors, the read does not exactly match to the original location (3 mismatches). In the lower part of the figure, three possible alignment locations for the read are shown with their mapping quality score (MQ). The naïve criterion would only consider the alignment (1) as the correct alignment. For Ruffalo et al. [<xref ref-type="bibr" rid="B32">32</xref>] criterion, if the used threshold is 30, then (1) is <italic>correctly mapped</italic> while (2) and (3) are <italic>incorrectly mapped-strict</italic>. On the other hand, if the threshold is 40, then (3) is considered as <italic>incorrectly mapped relaxed</italic>. Holtgrewe et al. [<xref ref-type="bibr" rid="B31">31</xref>] criterion in the oracle mode would detect (1) and (2) and consider them <italic>correctly mapped</italic> while (3) would be considered as <italic>incorrectly mapped</italic>.</p>
        </caption>
        <graphic xlink:href="1471-2105-14-184-1"/>
      </fig>
      <p>The naïve definition for the <italic>error</italic> was further modified by Ruffalo et al. [<xref ref-type="bibr" rid="B32">32</xref>] to develop a more concrete definition. The authors incorporated the mapping quality information such that a read is <italic>correctly mapped</italic> if it is mapped to the original genomic location while having a mapping quality greater than a certain threshold. They further categorized the incorrectly mapped reads into <italic>incorrectly mapped-strict</italic> and <italic>incorrectly mapped-relaxed</italic>. The <italic>incorrectly mapped-strict</italic> are the reads that were mapped with a quality higher than the threshold while not mapped to the original genomic location. On the other hand, the <italic>incorrectly mapped-relaxed</italic> are the reads that were mapped to an incorrect location with a quality higher than the threshold and there is no correct mapping for the read with a mapping quality higher than the threshold. As an example, in Figure <xref ref-type="fig" rid="F1">1</xref>, if the used threshold is 30, then the read would be considered <italic>correctly mapped</italic> if the tool returned alignment (1) while it would be considered as <italic>incorrectly mapped-strict</italic> if the tool returned either alignment (2) or (3). On the other hand, if the used threshold is 40, a read would be <italic>incorrectly mapped-relaxed</italic> if the tool returned alignment (3). Indeed, this is a valuable evaluation criterion, however, many tools, such as SOAP2, RMAP, and BWA, do not use quality scores in the mapping phase. In addition, not all of the tools report the mapping quality.</p>
      <p>Another definition was introduced by Holtgrewe et al. [<xref ref-type="bibr" rid="B31">31</xref>]. Unlike the previous works, the authors tried to find a gold standard for each read, where a gold standard refers to all of the possible matching intervals for each read with a maximum distance <italic>k</italic> from the read. To enumerate all of the possible matching intervals, the authors used RazerS to detect the initial seed location for each interval. Afterwards, they developed a method to find the boundary of the interval centered at the seed and with a maximum distance <italic>k</italic> from the read. They named the suggested evaluation method Rabema. As an example, a possible interval with <italic>k</italic>=3 would contain alignment (1) and (2) in Figure <xref ref-type="fig" rid="F1">1</xref>. Accordingly, Holtgrewe et al. defined the <italic>false negatives</italic> as the intervals missed by the mapper and the <italic>false positives</italic> as the intervals returned by the mapper and not included in the gold standard. However, consisting of seed detection phase and enumeration phase while depending on RazerS to return seed locations for the matching intervals makes Rabema impractical to apply on large genomes and long read lengths, e.g., RazerS took 25 hours to map 1 million reads of length 100 to the Human genome while doubling the running time when increasing the read length from 75 to 100 [<xref ref-type="bibr" rid="B21">21</xref>]. Therefore, Holtgrewe et al. suggested another mode, an <italic>oracle mode</italic>, which makes use of the original location of simulated reads. The <italic>oracle mode</italic> uses the original location as the seed location instead of using RazerS to detect the initial seed locations. However, this method is only suitable in case of <italic>a-priori</italic> knowledge that the possible mapping locations for a read are around the simulated location (e.g., alignment (3) in Figure <xref ref-type="fig" rid="F1">1</xref> would be missed in the <italic>oracle mode</italic>). Nevertheless, after the initial submission of this work, RazerS3 [<xref ref-type="bibr" rid="B26">26</xref>] was published; making a significant improvement in Rabema running time and elevating the slowness problem. Even though the suggested definition for a gold standard quantitatively estimates the sensitivity for each mapper, it suffers from a couple of drawbacks. First, the definition does not take into consideration whether the alignments are violating the mapping criterion for the mapper or not. For instance, in Figure <xref ref-type="fig" rid="F1">1</xref>, the sensitivity of the mapper would increase if it detected alignments (1), (2), and (3). However, if the mapping criterion for the mapper is to allow a maximum of two mismatches, then alignment (1) should have not been detected by the mapper and should be considered as a wrong alignment or error. Second, quality aware based tools, such as Bowtie, MAQ, and Novoalign, would be incorrectly evaluated by Rabema since they use the quality threshold to accept or reject a read instead of calculating the edit or hamming distance. Therefore, they might map a read with more mismatches than the limit allowed by Rabema.</p>
    </sec>
  </sec>
  <sec sec-type="methods">
    <title>Methods</title>
    <sec>
      <title>Benchmark design</title>
      <p>In this section, we present the features covered by our benchmarking suite. In addition, we explain how they were previously addressed by the tools we mention in this paper. However, two algorithmic features, namely SNPs and Splicing awareness, are not presented in the results section due to being supported only by one tool. The tests are categorized as follows: </p>
      <p>● Mapping options</p>
      <p><bold>Quality threshold</bold>: MAQ, Bowtie, and Novoalign use the quality threshold to determine the number of allowed mismatches. Therefore, setting a quality threshold is similar to explicitly setting the number of mismatches. However, there is no hard limit on the actual number of mismatches. The impact of varying the quality threshold while finding a mapping between the quality threshold and the number of mismatches has not been studied before.</p>
      <p><bold>Number of mismatches</bold>: Changing the number of allowed mismatches affects the percentage of mapped reads. This effect was studied in [<xref ref-type="bibr" rid="B10">10</xref>], however, the mismatches were generated uniformly on the genome which does not mimic real mismatches distribution.</p>
      <p><bold>Seed length</bold>: Seeding-based tools impose limits on the number of mismatches in the seed part. As a result, increasing or decreasing the length of the seed part affects the percentage of mapped reads. The effect of the seed length has not been studied in details before.</p>
      <p>● Input properties</p>
      <p><bold>Read length</bold>: The read length varies between 30bps for ABI’s SOLiD and Illumina’s Solexa sequencers up to 500 bps for Roche’s 454. Therefore, the impact of read length should be considered for throughput evaluation. Even though the effect of the read length was explored in several studies, the default options were usually used leading to incomparable trade-offs.</p>
      <p><bold>Paired-end reads</bold>: Mapping paired reads requires the mapping of both ends within a maximum distance between them. Hence, it adds a constraint when finding the corresponding genomic locations.</p>
      <p><bold>Genome type</bold>: The efficiency of most algorithms are tested by using the Human genome as the reference. However, each genome has its own properties such as the percentage of repeated regions and ambiguous characters. Therefore, using a single genome does not reveal the effect of these properties. To the best of our knowledge, BWA [<xref ref-type="bibr" rid="B13">13</xref>] was the only tool to test its performance on a large genome other than the Human.</p>
      <p>● Algorithmic features</p>
      <p><bold>Gapped alignment</bold>: is important for variant discovery due to the ability to detect indel polymorphism [<xref ref-type="bibr" rid="B30">30</xref>]. Bowtie2, GSNAP, Novoalign, BWA, and mrFAST are the only tools to support it for single-end reads while the remaining tools support it for paired-end only. However, from the results provided by the previous studies, it is not obvious how gapped alignment affects the performance of the tools in comparison to allowing only mismatches.</p>
      <p><bold>SNP awareness</bold>: Incorporating SNP information into mapping allows considering minor alleles as matches rather than mismatches. Currently, this feature is provided only by GSNAP. It was shown in [<xref ref-type="bibr" rid="B10">10</xref>] that integrating SNP information affected around 8% of the reads and allowed mapping 0.4% of unmapped reads.</p>
      <p><bold>Splicing awareness</bold>: Reads located across exon-exon junctions would be wrongly aligned using standard alignment algorithms. Splicing awareness is only required for certain types of data such as RNA-Seq data. The only tool that currently supports splicing while performing the mapping phase is GSNAP. It was shown in [<xref ref-type="bibr" rid="B10">10</xref>] that the alignment yield increased by 8-9% when splicing detection based on known splice junctions was introduced. However, there was only 0.3-0.6% increase in case of detecting novel splice junctions.</p>
      <p>● Scalability</p>
      <p>The scalability of the mapping tools may be different under different parallel settings. Many tools support multithreading, which is expected to yield linearly increasing speedup with the increase in the number of CPU cores. On the other hand, using multiprocessing is more general and may improve the throughput even for tools that do not support multithreading (e.g., MAQ and RMAP), where multiprocessing refers to using more than one process in a distributed memory fashion while communicating through a message passing interface.</p>
      <p>● Accuracy evaluation</p>
      <p>Each tool is expected to map a set of reads based on its mapping criteria. However, a subset of the reads might not be mapped (i.e., <italic>false negatives</italic>) due to using heuristics in the mapping algorithm or the default options limitations. Moreover, some of the tools map a subset of these reads while violating the mapping criteria.</p>
      <p>● Rabema evaluation</p>
      <p>Rabema benchmark enumerates all of the possible matching locations. Then, it evaluates whether the tool detected the possible matching locations with the specified error rate or not. Therefore, Rabema evaluation is a valuable one and helps in adding another perspective when comparing between the tools.</p>
    </sec>
    <sec>
      <title>Usecase: SNP calling</title>
      <p>SNP calling is the process of detecting genetic variations in a given genome. The genetic variations contribute to the generation of different phenotypes for the same gene, leading to increasing the risk of having complex diseases. Therefore, the discovery of SNPs is a very important process that needs to be done accurately. Many tools have been developed to detect SNPs including ssahaSNP [<xref ref-type="bibr" rid="B40">40</xref>] and SNPdetector [<xref ref-type="bibr" rid="B41">41</xref>]. These tools were developed to analyze the DNA sequences generated using either the Sanger or the direct PCR amplification methods. However, with the development of the next generation sequencing technology, new tools are required to analyze the new data [<xref ref-type="bibr" rid="B42">42</xref>]. The developed new tools work by first mapping sequences to a reference genome, then using statistical analysis methods to extract SNPs [<xref ref-type="bibr" rid="B42">42</xref>] after filtering out low-quality mismatches. Therefore, accurately mapping the reads to the reference genome is a very crucial task in the SNP calling pipeline.</p>
    </sec>
  </sec>
  <sec>
    <title>Results and discussion</title>
    <p>In this section, we present the results from our benchmarking tests. The experiments were performed on a cluster of quad-core AMD Opteron CPUs at 2.4 GHz with 32 GB of RAM. We used SOAP2 v2.20, Bowtie v0.12.6 and v2.0.0-beta5, BWA v0.5.0, MAQ v0.7.0, RMAP v2.05.0, FANGS v0.2.3, GSNAP v2010-07-27, Novoalign v2.07.0, and mrFAST and mrsFAST v2.5.0.4.</p>
    <p><bold>Performance evaluation</bold>: The performance is evaluated by considering two factors, namely, the mapping percentage and the throughput. The mapping percentage is the percentage of reads each tool maps while the throughput is the number of mapped base pairs per second (bps/sec). The throughput is calculated by dividing the number of reads mapped over the running time. For genome indexing based tools, the running time includes only the matching time while it includes the indexing and matching time for read indexing based tools. However, the running time for mrsFAST includes also the indexing time even though it is a genome indexing based tool. This is due to the dependence of the sensitivity of mrsFAST on the window size used in the indexing phase. Therefore, the index is rebuilt in most of the experiments to maintain a full sensitivity for mrsFAST.</p>
    <p>In addition, the mapping percentage is further divided into the following: </p>
    <p>● <italic>Correctly mapped reads</italic>: The percentage of reads mapped within the mapping criteria.</p>
    <p>● <italic>Error</italic>: The percentage of reads mapped while violating the mapping criteria. As shown in the background section, this definition provides another evaluation perspective that was not covered by older definitions.</p>
    <p>● <italic>Amb</italic>: The percentage of reads mapped to more than one location with the same number of mismatches. Most of the tools can return more than one mapping location for <italic>Amb</italic> reads if desired. However, RMAP only reports the number of <italic>Amb</italic> reads while not providing any information regarding the mapping location and the number of mismatches. Therefore, we will not be able to report the mismatches distribution for the RMAP reported <italic>Amb</italic> reads.</p>
    <p><bold>Data sets</bold>: We evaluated the tools on two types of data sets, namely, synthetic data and real data. The synthetic data set mimics reads generated from genomic sequencing while the real data set is for RNA-Seq. The data sets are further generated as follows: </p>
    <p>● <italic>Synthetic data</italic>: There is a number of tools available to extract synthetic, Fastq format, data sets from a reference genome including <monospace>wgsim</monospace>[<xref ref-type="bibr" rid="B43">43</xref>], <monospace>dwgsim</monospace>[<xref ref-type="bibr" rid="B44">44</xref>], <monospace>Mason</monospace>[<xref ref-type="bibr" rid="B45">45</xref>], and <monospace>ART</monospace>[<xref ref-type="bibr" rid="B46">46</xref>]. <monospace>wgsim</monospace> generates reads with uniform error distribution while <monospace>dwgsim</monospace> provides a uniformly increasing/decreasing error rate. On the other hand, <monospace>Mason</monospace> and <monospace>ART</monospace> mimic the error rates for Illumina and 454 sequencers. In this study, we are using <monospace>wgsim</monospace> and <monospace>ART</monospace> to generate the synthetic data from the Human genome. <monospace>wgsim</monospace> helps in providing a fair comparison between the tools by using a uniform error distribution model resulting in the same quality score for each base. Therefore, all of the tools can be allowed exactly the same number of mismatches regardless of the technique used to set the maximum number. For <monospace>wgsim</monospace>, the reads were generated with 0.09% SNP mutation rate, 0.01% indel mutation rate, 2% uniform sequencing base error rate, and with a maximum insert size of 500, which are the same parameters used in [<xref ref-type="bibr" rid="B13">13</xref>]. Additionally, Dohm et al. [<xref ref-type="bibr" rid="B47">47</xref>] showed that the sequencing error rate for Illumina changes between 0.3% for the beginning of the read and 3.8% at the end of the read. Therefore, a uniform sequencing error rate of 2% is acceptable. Moreover, according to the error rates and indels rate used by the <monospace>Mason</monospace> simulator [<xref ref-type="bibr" rid="B45">45</xref>], an indel rate of 0.01% is acceptable. We determined the number of reads to generate using <monospace>wgsim</monospace> based on the used tool and the experiment. On the other hand, <monospace>ART</monospace> does not explicitly allow the user to choose the number of generated reads. <monospace>ART</monospace> generates reads that cover the whole genome with a given coverage level. Therefore, to manage generating 1 million reads, we used <monospace>ART</monospace> to generate reads that cover the whole genome with 1x coverage. Then, we randomly selected 1 million reads from the output reads.</p>
    <p>● To make sure that the results are not affected by different <monospace>wgsim</monospace> runs, we generated 13 different <monospace>wgsim</monospace> data sets and ran a sample of the tools independently on each data set. The sample included BWA, GSNAP, Bowtie, Bowtie2, and SOAP2. We found that the maximum standard deviation from the average was 0.03 (results are not included). Since there is no significant change between the runs, we will only carry each experiment once on a single data set.</p>
    <p>● <italic>Real data</italic>: There are many types of real data sets such as RNA-Seq data, Chip-Seq data, and DNA sequences that are used in different applications. It is important in our evaluation process to choose the right data set type to better evaluate the applicability of the tools in the different applications. Therefore, we prefer to use RNA-Seq data sets as they are used in many applications including SNP and alternative splicing detection. The used data set consists of 1 million reads generated by Illumina sequencer after isolating mRNA from the Spretus mouse colon tissues. The mouse genome version mm9 was used as the reference genome. Indeed, as will be shown, the tools have similar behavior on both the mouse and the human genomes. Therefore, there is no contradiction in using the human genome for generating the synthetic data while the mouse genome is used for the real ones.</p>
    <p>First, we present the effect of the default options. The results for this experiment are given in Figures <xref ref-type="fig" rid="F2">2</xref> and <xref ref-type="fig" rid="F3">3</xref>. Figure <xref ref-type="fig" rid="F2">2</xref> shows the results when using <monospace>wgsim</monospace> to generate the synthetic data while Figure <xref ref-type="fig" rid="F3">3</xref> shows the results using <monospace>ART</monospace>. As stated previously, tools try to use the options that yield a good performance while maintaining a good output quality. For instance, as shown in Figure <xref ref-type="fig" rid="F2">2</xref>, Bowtie achieves a throughput of around 1.6·10<sup>5</sup>bps/s at the expense of mapping only 67.58% of the reads. On the other hand, BWA maps 91% of the reads at the expense of having a throughput of 0.1·10<sup>5</sup> bps/s. Additionally, SOAP and mrsFAST (Figures <xref ref-type="fig" rid="F2">2</xref> and <xref ref-type="fig" rid="F3">3</xref>) would look like that they provide the smallest mapping. However, percentage they are only allowing 2 mismatches while other tools such as mrFAST and GSNAP are allowing more than 5 mismatches. Therefore, using only the default options to build our conclusions would be misleading. Indeed, further experiments show that BWA obtains a high throughput when allowed to use the same options as Bowtie (see BWA-ND in Figure <xref ref-type="fig" rid="F2">2</xref>). Moreover, BWA achieves a higher throughput than Bowtie in other experiments. Therefore, it is important to use the same options to truly understand how the tools behave.</p>
    <fig id="F2" position="float">
      <label>Figure 2</label>
      <caption>
        <p><bold>Default options effect using </bold><monospace><bold>wgsim</bold></monospace><bold>.</bold> Mapping 1 million reads of length 125 extracted from the Human genome using <monospace>wgsim</monospace>. Each tool was allowed to use its own default options. BWA-ND refers to BWA’s results while using Bowtie’s default options which are 2 mismatches in the seed, 3 mismatches in the whole read, and no gapped alignment.</p>
      </caption>
      <graphic xlink:href="1471-2105-14-184-2"/>
    </fig>
    <fig id="F3" position="float">
      <label>Figure 3</label>
      <caption>
        <p><bold>Default options effect using ART.</bold> Mapping 1 million reads of length 100 extracted from the Human genome using <monospace>ART</monospace>. Each tool was allowed to use its own default options.</p>
      </caption>
      <graphic xlink:href="1471-2105-14-184-3"/>
    </fig>
    <p>In the remaining experiments, unless otherwise stated, the number of mismatches in the seed and in the whole read are fixed to 2 and 5, respectively, while the quality threshold is kept at 100. The minimum and maximum insert sizes allowed are 0 and 500, respectively. In addition, the splicing, SNPs, and gapped alignment options are disabled, unless otherwise stated. For the number of reported hits, tools are only allowed to report one location except for mrsFAST that does not have this option and report all of the mapping locations. The default values are used for the remaining options.</p>
    <sec>
      <title>Mapping options</title>
      <p><bold>Quality threshold</bold> is one of the two main metrics used for mismatch tolerance. The other main metric is the explicit specification of the number of mismatches. To compare fairly between the tools, a relationship between the two metrics should be found, which is the main target of this experiment. In this experiment, <monospace>wgsim</monospace> is used to generate the data set instead of using <monospace>ART</monospace> or a real one. The different base quality scores in real data cause quality threshold based tools to allow more mismatches than the other tools. For instance, when allowing a quality threshold of 70 and 5 mismatches for the remaining tools, Bowtie and MAQ map reads with up to 10 mismatches while the other tools are limited to 5 (results are not included). Therefore, MAQ and Bowtie had a mapping percentage larger than the other tools, hence, the comparison is not fair. Nevertheless, in the following, we show how the quality threshold can be used to mimic the behavior of the explicit specification of the number of mismatches.</p>
      <p>For <monospace>wgsim</monospace> generated synthetic data, quality thresholds of 60, 80, 100, 120, and 140 should correspond to 3, 4, 5, 6, and 7 mismatches. To assess our conclusion, we designed an experiment where all tools were allowed a maximum of 7 mismatches while using a quality threshold of 140. Figure <xref ref-type="fig" rid="F4">4</xref> shows that the tools map the reads with the same maximum number of mismatches while having similar mapping rates. However, the differences in the mapping rates are due to the pruning of the search space done by the default options for some of the tools. In addition, other tools incorrectly mapped some of the reads causing an increase in the mapping percentage. For instance, 0.6% of reported hits for MAQ and SOAP2 are considered as <italic>error</italic> (i.e., reads mapped while violating the mapping criteria) while Bowtie’s default options limit the allowed number of backtracks to find mismatches. On the other hand, GSNAP and mrsFAST map around 92% of the reads even though GSNAP reports <italic>error</italic> hits. This is due to being non-seed based tools, thus allowing more mismatches to be found in the first few base pairs. Additionally, mrsFAST is a full sensitive mapper, therefore, it can detect reads missed by other tools.</p>
      <fig id="F4" position="float">
        <label>Figure 4</label>
        <caption>
          <p><bold>Quality threshold vs. number of mismatches.</bold> Mapping 1 million reads of length 125 extracted using <monospace>wgsim</monospace> from the Human genome while allowing up to 7 mismatches and a quality threshold of 140. The <italic>error</italic> is 0.6% for SOAP2 and MAQ and 0.45% for GSNAP.</p>
        </caption>
        <graphic xlink:href="1471-2105-14-184-4"/>
      </fig>
      <p><bold>Number of mismatches</bold>: Not only does the number of mismatches affect the percentage of mapped reads, but also affects the throughput. In particular, the mapping percentage increases nonlinearly with the number of mismatches. Figure <xref ref-type="fig" rid="F5">5</xref> shows the effect of the number of mismatches in more details using a <monospace>wgsim</monospace> generated data set. There is a 20% increase in the percentage of mapped reads when allowing 3 mismatches instead of 2. On the other hand, there is less than 0.7% increase when allowing 7 mismatches instead of 6. In addition, the <italic>error</italic> percentage decreases for large number of mismatches. For instance, SOAP2’s <italic>error</italic> percentage is 21% when allowing 2 mismatches while it is reduced to 1% when allowing 6 mismatches. Additionally, mrsFAST mapped around 0.1-0.5% more reads than the remaining tools since it is a full sensitive mapper. From the throughput point of view, the tools behave differently. For instance, Bowtie, MAQ, RMAP, and mrsFAST are able to maintain almost the same throughput while the throughput increases for SOAP2 and GSNAP and decreases for BWA. The degradation in BWA’s performance is due to exceeding the default number of mismatches leading to excessive backtracking to find mismatch locations.</p>
      <fig id="F5" position="float">
        <label>Figure 5</label>
        <caption>
          <p><bold>Effect of changing the number of mismatches using a synthetic data set extracted using </bold><monospace><bold>wgsim</bold></monospace><bold>.</bold> Comparing the different tools while changing the total mismatches from 2 to 7. T-mms stands for the maximum allowed mismatches. A data set of 1 million reads of length 125 extracted from the Human genome using <monospace>wgsim</monospace> was used in this experiment.</p>
        </caption>
        <graphic xlink:href="1471-2105-14-184-5"/>
      </fig>
      <p>Additionally, we used a data set of 1 million reads of length 100 generated by <monospace>ART</monospace> to evaluate the tools. The results for this experiment are shown in Figure <xref ref-type="fig" rid="F6">6</xref>. Similar to the <monospace>wgsim</monospace> results, the increase in the percentage of mapped reads when allowing 2 mismatches instead of 3 is larger than the increase when allowing 7 mismatches instead of 6. Unlike <monospace>wgsim</monospace> results, Bowtie maintains a higher throughput than Bowtie2 for the different number of mismatches. This is due to the difference in the read length between <monospace>wgism</monospace> and <monospace>ART</monospace> data sets (100 for <monospace>ART</monospace> instead of 125). Moreover, Bowtie uses the quality threshold while Bowtie2 does not.</p>
      <fig id="F6" position="float">
        <label>Figure 6</label>
        <caption>
          <p><bold>Effect of changing the number of mismatches using a synthetic data set extracted using </bold><monospace><bold>ART</bold></monospace><bold>.</bold> Comparing the different tools while changing the total mismatches from 2 to 7. T-mms stands for the maximum allowed mismatches. A data set of 1 million reads of length 100 extracted from the Human genome using <monospace>ART</monospace> was used in this experiment.</p>
        </caption>
        <graphic xlink:href="1471-2105-14-184-6"/>
      </fig>
      <p>To further understand the behavior of the tools, the same set of experiments is applied on the mouse mRNA real data set. The results given in Figure <xref ref-type="fig" rid="F7">7</xref> show that the <italic>error</italic> percentage for GSNAP still decreases for large number of mismatches. In addition, there is a small reduction in BWA’s throughput for large number of mismatches. Interestingly, the throughput for mrsFAST is different between the synthetic data and the real data. In the synthetic data set, mrsFAST’s throughput is higher than RMAP while maintaining the same throughput across the different number of mismatches. On the other hand, on the real data, the throughput decreases with the increase in the number of mismatches. In addition, there is a 7x reduction in the throughput between 4 t-mms and 5 t-mms. To maintain a full sensitivity for small read lengths while allowing a large number of mismatches, mrsFAST requires the use of a small window size when building the index (window size of 8 for 5 t-mms instead of 10 for 4 t-mms). The smaller the window size, the longer it takes to process the index. Additionally, there is a limit on the window size (min 8 and max 14). Therefore, mrsFAST starts to lose its sensitivity for detecting mapping locations for 6 and 7 t-mms.</p>
      <fig id="F7" position="float">
        <label>Figure 7</label>
        <caption>
          <p><bold>Effect of changing the number of mismatches using a real data set.</bold> Comparing the different tools while changing the total mismatches from 2 to 7. T-mms stands for the maximum allowed mismatches. A real mRNA data set of 1 million reads of length 51 bps extracted from the Spretus mouse strain and mapped against the mouse genome version mm9 was used in this experiment.</p>
        </caption>
        <graphic xlink:href="1471-2105-14-184-7"/>
      </fig>
      <p><bold>Seed length</bold>: Theoretically, when fixing the number of allowed mismatches in the seed and in the whole read, changing the seed length affects the mapping results. Specifically, a shorter seed allows more mismatches in the remaining part of the read to be found. Therefore, the percentage of mapped reads would increase even though the throughput would decrease. On the other hand, having a longer seed would result in pruning some parts of the search tree as soon as possible; leading to throughput improvement. The aim of this experiment is to study this trade off. As shown in the results given in Figure <xref ref-type="fig" rid="F8">8</xref> using a <monospace>wgism</monospace> data set, the tools behave as expected. However, there are some exceptions. For instance, when increasing the seed length from 32 to 36 the percentage of mapped reads for SOAP2 and Bowtie decreases, however the throughput is not affected. In addition, there is a 0.8% increase in the percentage of mapped reads for Bowtie when increasing the seed length from 28 to 32. This behavior is due to the backtracking property that stops once a certain limit is reached. Therefore, as a result of having less erroneous bases in the seed part, Bowtie can continue more in the depth first search without exceeding the backtracking limit.</p>
      <fig id="F8" position="float">
        <label>Figure 8</label>
        <caption>
          <p><bold>Effect of changing the seed length using a synthetic data set.</bold> The effect of changing the seed length on the BWT based tools. The tools were used to map 16 million reads of length 70 bps on the Human genome. SOAP2 does not support seed length &lt; 28.</p>
        </caption>
        <graphic xlink:href="1471-2105-14-184-8"/>
      </fig>
      <p>We also carried out the same experiment on the real mouse mRNA data set. The results given in Figure <xref ref-type="fig" rid="F9">9</xref> show that the same behavior for Bowtie is still obtained on real data. However, Bowtie has only 0.01% increase when increasing the seed length from 28 to 32 instead of the 0.8% obtained in synthetic data.</p>
      <fig id="F9" position="float">
        <label>Figure 9</label>
        <caption>
          <p><bold>Effect of changing the seed length using a real data set.</bold> The effect of changing the seed length on the BWT based tools. The tools were used to map real mRNA data set of 1 million reads of length 51 bps extracted from the Spretus mouse strain on the mouse genome version mm9. SOAP2 does not support seed length &lt; 28.</p>
        </caption>
        <graphic xlink:href="1471-2105-14-184-9"/>
      </fig>
    </sec>
    <sec>
      <title>Input properties</title>
      <p><bold>Read length</bold>: Longer reads tend to have more mismatches beside requiring more time to be fully mapped [<xref ref-type="bibr" rid="B48">48</xref>]. In general, for a fixed number of mismatches, increasing the read length decreases the percentage of mapped reads. Therefore, the aim of this experiment is to understand the read length effect. The results in Figure <xref ref-type="fig" rid="F10">10</xref> show that the mapping percentage decreases with the increase in the read length while the <italic>error</italic> percentage increases. As an example, 95% of FANGS’ output for read length 500 is <italic>error</italic> compared to 12% of its output for read length 200. This is due to the increase of the erroneous bases with the increase of the read length. Therefore, it becomes harder to map the reads with the specified mapping criteria. In addition, Bowtie, Bowtie2, and BWA were the only short sequence mapping tools that managed to map long reads. In particular, the max read length was 128 for MAQ, 300 for RMAP, and 200 for GSNAP, 199 for mrsFAST, while SOAP2 took more than 24 hours to map the reads with length 300 and hence not reported. On the other hand, mrsFAST’s run on read length 36 was suddenly terminated. This is probably due to the small read length and the large number of mismatches. From the throughput point of view, tools do not maintain the same behavior. For instance, the throughput of Bowtie and SOAP2 decreases for long read lengths. This is due to the backtracking property and the split strategy [<xref ref-type="bibr" rid="B14">14</xref>] used by Bowtie and SOAP2, respectively, to find inexact matches. Moreover, Bowtie is better than Bowtie2 for read lengths 36 and 70. On the other hand, even though the throughput of BWA and GSNAP increases with the read length, it starts to decrease for read length 500 and 200, respectively. GSNAP works by combining position lists to create candidate mapping regions. Therefore, for long reads, the throughput decreases due to the increase in the work needed to generate and combine position lists. For mrsFAST, the throughput increases with the read length since the available mapping locations for a read are less for longer reads in comparison to small ones.</p>
      <fig id="F10" position="float">
        <label>Figure 10</label>
        <caption>
          <p><bold>Effect of changing the read length using a synthetic data set extracted using </bold><monospace><bold>wgsim</bold></monospace><bold>.</bold> The effect of changing the read length from 36 to 500. The reads were extracted from the Human genome. RMAP and MAQ are slower than the other tools. Therefore, 1 million reads were used to test MAQ and RMAP while 16 million reads were used for the remaining ones.</p>
        </caption>
        <graphic xlink:href="1471-2105-14-184-10"/>
      </fig>
      <p>Additionally, we carried out the same experiment on synthetic data sets generated by the <monospace>ART</monospace> tool. We did not carry out the experiment on a real data set due to the lack of proper real data sets that have different read lengths, have exactly the same coverage, generated by the same sequencer, and extracted from the same tissue. The results for this experiment are shown in Figure <xref ref-type="fig" rid="F11">11</xref>. Similar to <monospace>wgsim</monospace> results, the <italic>error</italic> percentage increases with the increase in the read length for GSNAP and SOAP2. Interestingly, the percentage of mapped reads for Bowtie, MAQ, and Novoalign are not significantly affected with the increase in the read length in comparison to the other tools. This is due to the fact that the longer the read is the smaller the quality score becomes for the bases at the end of the reads [<xref ref-type="bibr" rid="B49">49</xref>]. Therefore, Bowtie, MAQ, and Novoalign can map the reads with more mismatches while maintaining the same quality threshold.</p>
      <fig id="F11" position="float">
        <label>Figure 11</label>
        <caption>
          <p><bold>Effect of changing the read length using a </bold><monospace><bold>ART</bold></monospace><bold> generated data set.</bold> The effect of mapping 1 million reads extracted by <monospace>ART</monospace> from the mouse genome version mm9 while changing the read length from 36 to 100.</p>
        </caption>
        <graphic xlink:href="1471-2105-14-184-11"/>
      </fig>
      <p><bold>Paired-end</bold>: Mapping paired-end reads affects the performance of the tools due to the added constraint of mapping both ends within a maximum insert size. Therefore, in this experiment, we want to understand how the performance of the tools is affected while mapping paired-end reads instead of single-end ones. The results in Figure <xref ref-type="fig" rid="F12">12</xref> (ungapped bars) show that the throughput decreases for all of the tools while mapping paired-end reads, except for BWA which was able to maintain almost the same throughput while MAQ had a small increase. Even though all of the algorithms work by finding mapping locations for each end alone and then finding the best pair, GSNAP was the only tool to face a drop by 90% in the throughput. Additionally, the percentage of mapped reads is less when mapping paired-end read due to applying the same mapping criteria for single-end reads on paired-end reads.</p>
      <fig id="F12" position="float">
        <label>Figure 12</label>
        <caption>
          <p><bold>Effect of using paired-end data using a </bold><monospace><bold>wgsim</bold></monospace><bold> synthetic data set.</bold> The effect of mapping paired-end reads of length 70 to the Human genome. 1 million reads were used to test RMAP and MAQ while 16 million reads were used to test the other tools. SE and PE refer to single end and paired end, respectively. <italic>Error</italic> is only provided for PE due to exceeding the allowed insert size mrsFAST is used for the ungapped alignment and mrFAST is used for the gapped one.</p>
        </caption>
        <graphic xlink:href="1471-2105-14-184-12"/>
      </fig>
      <p>Even though the maximum insert size was 500, tools such as BWA, SOAP, and GSNAP mapped paired-end reads while exceeding the maximum insert size, except for Novoalign that explicitly requires the user to set the standard deviation for the insert size.</p>
      <p><bold>Genome type</bold>: To capture the effect of the genome type, we designed an experiment in which the Human, Chimpanzee, Mouse, Zebrafish, Lancelet, A. mellifera, and C. elegans genomes were used as reference genomes. The sizes of these genomes are 3.1Gbps, 3.0Gpbs, 2.5Gbps, 1.5Gbps, 0.9Gbps, 0.57Gbps, and 0.1Gbps, respectively. Theoretically, for genome indexing based tools, the throughput is expected to slightly increase with the decrease in the genome size. However, the results in Figure <xref ref-type="fig" rid="F13">13</xref> show that some tools do not act as expected. For instance, there is a difference in the throughput between the Chimpanzee and the Human genomes even though their sizes are similar. In addition, SOAP2’s and Novoalign’s throughput decreases significantly for the Zebrafish genome while GSNAP did not finish its run on the same genome albeit running for two days. The reason for this behavior is the large repetition rate in the Zebrafish genome. For instance, while mapping 1 million randomly generated reads from the Zebrafish genome, around 600 reads were mapped to more than 100,000 locations in comparison to the Lancelet with the maximum number of locations is around 10,000 for only 1 read. Additionally, mrsFAST detects more than 8 billions locations when mapping the Zebrafish data set while mapping reads to the Zebrafish genome where it detected only 24 millions when mapping the Lancelet data set. Hence, for GSNAP, the large repetition rates lead to long genomic position lists; resulting in a significant slow down of GSNAP. Another interesting result is the ability of most of the tools to map more than 96% of the Zebrafish data set compared to around 91% of the Human and 89% for the Lancelet data sets. The large mapping percentage is also due to the large repetition rate. Hence, due to synthetically generating the reads, large number of reads are generated from the repeated regions. As a result, the probability of finding a mapping location increases. In addition to the above results, it is also noticed that Bowtie scales better than Bowtie2 on different genomes. Moreover, MAQ’s throughput for the C. elegans genome is larger than Novoalign while maintaining a comparable mapping percentage. Therefore, read indexing based tools might perform better than some genome indexing based tools for small genomes albeit being very slow for large genomes.</p>
      <fig id="F13" position="float">
        <label>Figure 13</label>
        <caption>
          <p><bold>Effect of changing the genome type using </bold><monospace><bold>wgsim</bold></monospace><bold> generated synthetic data set.</bold> 16 million reads of length 70 bps were generated from the Human, Zebrafish, Lancelet, Chimpanzee, A. mellifera, and C. elegans genomes using <monospace>wgsim</monospace> for this test. 1 million reads were used for MAQ and RMAP.</p>
        </caption>
        <graphic xlink:href="1471-2105-14-184-13"/>
      </fig>
      <p>To further understand the behavior of the tools, we generated a data set of 1 million reads using <monospace>ART</monospace>. Figure <xref ref-type="fig" rid="F14">14</xref> shows the results using the <monospace>ART</monospace> data sets. Similar to <monospace>wgsim</monospace> results, SOAP2 and Novoalign still encounter a significant decrease in the throughput when mapping the Zebrafish data set. Additionally, Bowtie still scales better than Bowtie2 with the different genomes. Interestingly, GSNAP finished its run on the Zebrafish data set even though it still faces a decrease in the throughput. On the other hand, unlike <monospace>wgsim</monospace> results, mrsFAST encounters a decrease in the throughput when mapping the Zebrafish data set. It is not obvious why mrsFAST encounters such a decrease even though its performance on the other genomes remains the same regardless of using <monospace>wgsim</monospace> or <monospace>ART</monospace>.</p>
      <fig id="F14" position="float">
        <label>Figure 14</label>
        <caption>
          <p><bold>Effect of changing the genome type using </bold><monospace><bold>ART</bold></monospace><bold>generated synthetic data set.</bold> 1 million reads of length 70bps were generated from the Human, Zebrafish, Lancelet, Chimpanzee, A. mellifera, and C. elegans genomes using <monospace>ART</monospace>.</p>
        </caption>
        <graphic xlink:href="1471-2105-14-184-14"/>
      </fig>
      <p>In general, the throughput of the tools increases when using <monospace>ART</monospace> instead of <monospace>wgsim</monospace> data sets. However, the relative performance between the tools and the different genomes is still the same.</p>
    </sec>
    <sec>
      <title>Algorithmic features</title>
      <p><bold>Gapped alignment</bold> should improve the mapping percentage albeit decreasing the throughput. We designed an experiment to understand the effect of gapped alignment. Tools were used to map synthetically generated reads of length 70 to the Human genome while allowing one gap of length 3. However, mrFAST does not provide any option to limit the gap size. The results in Figure <xref ref-type="fig" rid="F12">12</xref> show that the mapping percentage increases by 4% for SOAP2 and 1.5% for mrFAST in case of gapped alignment, while there is no change for BWA and GSNAP. However, there is a drop of 15% and 75% in the throughput for BWA and GSNAP, respectively. The decrease for GSNAP is due to the overhead added to the algorithm to find pairs of candidate regions that co-localize within a maximum allowed gap size. The algorithm tries to find a crossover between the two regions without exceeding the maximum number of mismatches leading to a significant decrease in the throughput. Interestingly, the decrease in the throughput is less for the real data set as shown in Figure <xref ref-type="fig" rid="F15">15</xref>. However, the decrease is still larger than the decrease in the throughput for the remaining tools.</p>
      <fig id="F15" position="float">
        <label>Figure 15</label>
        <caption>
          <p><bold>Effect of enabling gapped alignment using a real data set.</bold> mRNA data set of 1 million reads extracted from the Spretus mouse strain is used in this experiment and mapped on the mouse genome version mm9.</p>
        </caption>
        <graphic xlink:href="1471-2105-14-184-15"/>
      </fig>
      <p>For the real data set, mrsFAST (mrFAST) is not included in the results since the minimum allowed window size in the indexing phase does not guarantee a full sensitivity for mrFAST.</p>
    </sec>
    <sec>
      <title>Scalability</title>
      <p>In this experiment, we tested the multithreading behavior. In addition, pMap [<xref ref-type="bibr" rid="B50">50</xref>] was used to run multiple instances of each tool on a number of processors on a single node to test the multiprocessing effect. pMap is an open-source MPI-based tool that enables parallelization of existing short sequence mapping tools by partitioning the reads and distributing the work among the different processors. A single node was used in the multiprocessing experiment to understand the effect of a good implementation of multithreading. The results for both experiments are given in Figure <xref ref-type="fig" rid="F16">16</xref>. We can observe from the multithreading results that the tools had almost a linear speedup up to 4 threads. However, when increasing to 8 threads, Bowtie was the only tool to achieve 8x speedup. In addition, BWA had a similar speedup in both multithreading and multiprocessing. For the multiprocessing experiment, FANGS achieved almost a 6x speedup while there was a small improvement for MAQ and RMAP. For the remaining tools, most of them were able to maintain more than a 5x speedup for 8 processors, however this is less than a linear speedup. One reason for this degradation is the overhead of the distribution and merging steps required by distributed memory systems. As expected, we can notice that multithreading provides almost a linear speedup, however, it is limited by the number of cores.</p>
      <fig id="F16" position="float">
        <label>Figure 16</label>
        <caption>
          <p><bold>Speedup when using multithreading and multiprocessing.</bold> 16 million reads of length 125 were mapped to the Human genome while using multithreading (the upper figure) or multiprocessing (the lower figure).</p>
        </caption>
        <graphic xlink:href="1471-2105-14-184-16"/>
      </fig>
      <p>In general, using multiprocessing provides more degrees of freedom by parallelizing tools that do not support multithreading and by making use of the available computational resources.</p>
      <p>Another important observation is the effect of the indexing method on the total speedup. Read indexing based tools did not have any significant speedup in comparison to the genome indexing based ones which had more than 5x speedup. Therefore, genome indexing is more efficient in case of designing a read partitioning parallelism based tool.</p>
    </sec>
    <sec>
      <title>Accuracy evaluation</title>
      <p>The aim of this experiment is to evaluate the percentage of reads each tool actually maps out of the set of the mappable reads. A read is mappable if the distance between the read and its original genomic location does not violate the mapping criteria. In this experiment, the reads were generated using <monospace>ART</monospace> to measure the sensitivity of the tools in case of varying the distribution of mismatches. The used mapping criterion was fixed to five mismatches for Bowtie2, SOAP, GSNAP, BWA, mrsFAST, and RMAP. For the remaining tools, a quality threshold of 100 was used. In general, gapped alignment was disabled. The results given in Table <xref ref-type="table" rid="T2">2</xref> show that Bowtie did not map around 0.14% of the set of the mappable reads (i.e., <italic>false negatives</italic>) while Bowtie2 did not map around 7.71%. Moreover, Bowtie mapped 93% of the reads while Bowtie2 only mapped 85%. Nevertheless, the sensitivity of both tools can be increased by changing the default options at the expense of significantly decreasing the throughput. Interestingly, BWA, SOAP2, and mrsFAST mapped all of the mappable reads without any <italic>error</italic>.</p>
      <table-wrap position="float" id="T2">
        <label>Table 2</label>
        <caption>
          <p>Sensitivity evaluation of the different tools</p>
        </caption>
        <table frame="hsides" rules="groups" border="1">
          <colgroup>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
          </colgroup>
          <thead valign="top">
            <tr>
              <th align="left"> </th>
              <th align="left"> </th>
              <th align="center">
                <bold>Bowtie</bold>
              </th>
              <th align="center">
                <bold>Bowtie2</bold>
              </th>
              <th align="center">
                <bold>BWA</bold>
              </th>
              <th align="center">
                <bold>SOAP2</bold>
              </th>
              <th align="center">
                <bold>MAQ</bold>
              </th>
              <th align="center">
                <bold>RMAP</bold>
              </th>
              <th align="center">
                <bold>GSNAP</bold>
              </th>
              <th align="center">
                <bold>Novoalign</bold>
              </th>
              <th align="right">
                <bold>mrsFAST</bold>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" valign="bottom">Mapped<hr/></td>
              <td align="center" valign="bottom">Expected<hr/></td>
              <td align="center" valign="bottom">93.57<hr/></td>
              <td align="center" valign="bottom">93.25<hr/></td>
              <td align="center" valign="bottom">91.29<hr/></td>
              <td align="center" valign="bottom">91.29<hr/></td>
              <td align="center" valign="bottom">93.57<hr/></td>
              <td align="center" valign="bottom">90.12<hr/></td>
              <td align="center" valign="bottom">93.25<hr/></td>
              <td align="center" valign="bottom">96.18<hr/></td>
              <td align="right" valign="bottom">93.25<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">Actual<hr/></td>
              <td align="center" valign="bottom">93.43<hr/></td>
              <td align="center" valign="bottom">85.54<hr/></td>
              <td align="center" valign="bottom">91.29<hr/></td>
              <td align="center" valign="bottom">91.29<hr/></td>
              <td align="center" valign="bottom">92.92<hr/></td>
              <td align="center" valign="bottom">82.53<hr/></td>
              <td align="center" valign="bottom">93.25<hr/></td>
              <td align="center" valign="bottom">96.02<hr/></td>
              <td align="right" valign="bottom">93.25<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">Error<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">0.73<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">0.03<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="right" valign="bottom"> <hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">Unmapped<hr/></td>
              <td align="center" valign="bottom">Expected<hr/></td>
              <td align="center" valign="bottom">6.43<hr/></td>
              <td align="center" valign="bottom">6.75<hr/></td>
              <td align="center" valign="bottom">8.71<hr/></td>
              <td align="center" valign="bottom">8.71<hr/></td>
              <td align="center" valign="bottom">6.43<hr/></td>
              <td align="center" valign="bottom">9.88<hr/></td>
              <td align="center" valign="bottom">6.75<hr/></td>
              <td align="center" valign="bottom">3.82<hr/></td>
              <td align="right" valign="bottom">6.75<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">Actual<hr/></td>
              <td align="center" valign="bottom">6.25<hr/></td>
              <td align="center" valign="bottom">6.68<hr/></td>
              <td align="center" valign="bottom">8.32<hr/></td>
              <td align="center" valign="bottom">6.83<hr/></td>
              <td align="center" valign="bottom">5.08<hr/></td>
              <td align="center" valign="bottom">8.29<hr/></td>
              <td align="center" valign="bottom">3.66<hr/></td>
              <td align="center" valign="bottom">3.81<hr/></td>
              <td align="right" valign="bottom">6.62<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">Error<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">1.73<hr/></td>
              <td align="center" valign="bottom">1.25<hr/></td>
              <td align="center" valign="bottom">1.5<hr/></td>
              <td align="center" valign="bottom">2.97<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="right" valign="bottom"> <hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">Reported mapped<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">93.61<hr/></td>
              <td align="center" valign="bottom">85.61<hr/></td>
              <td align="center" valign="bottom">91.68<hr/></td>
              <td align="center" valign="bottom">93.17<hr/></td>
              <td align="center" valign="bottom">94.27<hr/></td>
              <td align="center" valign="bottom">84.11<hr/></td>
              <td align="center" valign="bottom">96.34<hr/></td>
              <td align="center" valign="bottom">96.03<hr/></td>
              <td align="right" valign="bottom">93.38<hr/></td>
            </tr>
            <tr>
              <td align="left">Reported correct</td>
              <td align="center"> </td>
              <td align="center">93.61</td>
              <td align="center">85.61</td>
              <td align="center">91.68</td>
              <td align="center">90.71</td>
              <td align="center">93.02</td>
              <td align="center">82.61</td>
              <td align="center">93.37</td>
              <td align="center">96.03</td>
              <td align="right">93.38</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <p>Evaluating the sensitivity of the tools on a data set of 1 million reads of length 70 generated by <monospace>ART</monospace>. The numbers are in percentage. The Reported mapped percentage is the total percentage of reads mapped by each tool. It is equal to Actual Mapped + (Expected Unmapped- Actual Unmapped) while Reported correct is the total number of correctly mapped reads.</p>
        </table-wrap-foot>
      </table-wrap>
      <p>In general, the tools were able to map a percentage of the unmappable reads, however, it was mapped with a large <italic>error</italic> percentage. For instance, even though GSNAP mapped around 3% of the unmappable reads, only 0.03% of them were correctly mapped. Therefore, even though GSNAP maps the largest percentage of reads, other tools such as BWA and Novoalign are more accurate and precise than GSNAP.</p>
      <p>It is important to note that the percentage of reads mapped from the unmappable reads is similar to the percentage of <italic>incorrectly mapped reads-relaxed</italic> given in Ruffalo et al. work [<xref ref-type="bibr" rid="B32">32</xref>]. However, they define a read to be unmappable if it has a mapping quality less than a certain threshold while we consider it as unmappable if it violates the mapping criteria for the tool.</p>
    </sec>
    <sec>
      <title>Rabema evaluation</title>
      <p>The aim of this experiment is to evaluate the tools based on the number of reads with a specified error rate the tool has been able to map. Unlike the previous experiment, this experiment does not take into consideration how each tool works. Therefore, it is similar to evaluating the efficiency of the different mapping techniques (i.e., seeding vs. non-seeding, quality scores vs. mismatches). The experiment is performed on a synthetic data set of length 100 extracted from the Human genome using <monospace>ART</monospace>. The maximum allowed error rate was 5%, i.e., 5 mismatches in that case. The results for this experiment are shown in Table <xref ref-type="table" rid="T3">3</xref>. Rabema takes the output SAM file from each tool as the input. However, MAQ and RMAP do not create the output in the SAM format. Therefore, there are not included. Additionally, GSNAP results are not included since the output GSNAP SAM file contains messed up quality scores.</p>
      <table-wrap position="float" id="T3">
        <label>Table 3</label>
        <caption>
          <p>Rabema evaluation</p>
        </caption>
        <table frame="hsides" rules="groups" border="1">
          <colgroup>
            <col align="right"/>
            <col align="right"/>
            <col align="right"/>
            <col align="right"/>
            <col align="right"/>
            <col align="right"/>
            <col align="right"/>
            <col align="right"/>
          </colgroup>
          <thead valign="top">
            <tr>
              <th align="right">
                <bold>Error</bold>
              </th>
              <th align="right">
                <bold>#Reads</bold>
              </th>
              <th align="right">
                <bold>Bowtie</bold>
              </th>
              <th align="right">
                <bold>Bowtie2</bold>
              </th>
              <th align="right">
                <bold>BWA</bold>
              </th>
              <th align="right">
                <bold>SOAP2</bold>
              </th>
              <th align="right">
                <bold>Novoalign</bold>
              </th>
              <th align="right">
                <bold>mrsFAST</bold>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="right" valign="bottom">0<hr/></td>
              <td align="right" valign="bottom">832<hr/></td>
              <td align="right" valign="bottom">100<hr/></td>
              <td align="right" valign="bottom">100<hr/></td>
              <td align="right" valign="bottom">100<hr/></td>
              <td align="right" valign="bottom">100<hr/></td>
              <td align="right" valign="bottom">97.24<hr/></td>
              <td align="right" valign="bottom">100<hr/></td>
            </tr>
            <tr>
              <td align="right" valign="bottom">1<hr/></td>
              <td align="right" valign="bottom">6316<hr/></td>
              <td align="right" valign="bottom">96.99<hr/></td>
              <td align="right" valign="bottom">100<hr/></td>
              <td align="right" valign="bottom">100<hr/></td>
              <td align="right" valign="bottom">100<hr/></td>
              <td align="right" valign="bottom">98.29<hr/></td>
              <td align="right" valign="bottom">100<hr/></td>
            </tr>
            <tr>
              <td align="right" valign="bottom">2<hr/></td>
              <td align="right" valign="bottom">23495<hr/></td>
              <td align="right" valign="bottom">97.30<hr/></td>
              <td align="right" valign="bottom">97.16<hr/></td>
              <td align="right" valign="bottom">100<hr/></td>
              <td align="right" valign="bottom">99.97<hr/></td>
              <td align="right" valign="bottom">98.70<hr/></td>
              <td align="right" valign="bottom">100<hr/></td>
            </tr>
            <tr>
              <td align="right" valign="bottom">3<hr/></td>
              <td align="right" valign="bottom">55941<hr/></td>
              <td align="right" valign="bottom">97.00<hr/></td>
              <td align="right" valign="bottom">95.92<hr/></td>
              <td align="right" valign="bottom">99.85<hr/></td>
              <td align="right" valign="bottom">95.78<hr/></td>
              <td align="right" valign="bottom">98.84<hr/></td>
              <td align="right" valign="bottom">100<hr/></td>
            </tr>
            <tr>
              <td align="right" valign="bottom">4<hr/></td>
              <td align="right" valign="bottom">98063<hr/></td>
              <td align="right" valign="bottom">96.48<hr/></td>
              <td align="right" valign="bottom">94.22<hr/></td>
              <td align="right" valign="bottom">99.49<hr/></td>
              <td align="right" valign="bottom">96.43<hr/></td>
              <td align="right" valign="bottom">99.02<hr/></td>
              <td align="right" valign="bottom">100<hr/></td>
            </tr>
            <tr>
              <td align="right">5</td>
              <td align="right">135096</td>
              <td align="right">95.63</td>
              <td align="right">91.14</td>
              <td align="right">98.76</td>
              <td align="right">97.34</td>
              <td align="right">99.12</td>
              <td align="right">100</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <p>Rabema evaluation results on the different tools using a data set of 1 million reads of length 100 extracted from the Human genome using <monospace>ART</monospace>. The maximum allowed error is 5% (i.e., 5 mismatches in this case). #Reads is the number of reads expected to be mapped with certain Error. The remaining columns for the tools show the percentage of reads detected by each tool out of the #Reads. Invalid mappings (i.e., reads mapped with errors more than the assigned error rate threshold) for Bowtie and Novoalign are 567,531 and 587,542 reads, respectively.</p>
        </table-wrap-foot>
      </table-wrap>
      <p>As shown in the results, both Novoalign and Bowtie are evaluated as mapping invalid reads. This is because Rabema does not take the quality scores into consideration and just calculate the edit distance. Therefore, from the mismatches perspective, the reads have more than 5 mismatches. However, from the quality threshold perspective, they have a quality threshold less than the specified one. Therefore, at the end, they are valid mappings.</p>
      <p>In general, BWA has been able to detect almost all of the reads with the correct error rate. This suggest that most of the mismatches exist at the end of the read. In addition, the seeding technique is a valid method specially if it can speed up the mapping process.On the other hand, even though SOAP2 is a seed based tool, similar to BWA, it could not detect as much correct reads as BWA. Bowtie2 missed some of the reads, however, it can detect them by changing its sensitivity at the cost of increasing the running time. On the other hand, mrsFAST mapped all of the reads with the correct error rate since it is a full sensitive mapper.</p>
    </sec>
    <sec>
      <title>Use case: SNP calling</title>
      <p>The aim of this experiment is to understand how the different mapping techniques affect the quality of SNP calling. The tools were used to map an mRNA dataset of 23 million reads extracted from the Spretus mouse strain. Then Partek [<xref ref-type="bibr" rid="B51">51</xref>], a genomic suite developed to analyze NGS data, is used to detect SNPs. The mouse genome version mm9 was used as the reference genome in this experiment. A quality threshold of 70 was used for Bowtie and Novoalign while the remaining tools were allowed 5 mismatches. In addition, gapped alignment was enabled for Bowtie2, BWA, GSNAP, and Novoalign. Table <xref ref-type="table" rid="T4">4</xref> shows the results for this experiment. The SNP detection step was done for GSNAP and SOAP2 after filtering out the erroneous reads. The log-odd ratio represents how accurate the SNP is. The small log-odds ratio for some of the SNPs is due to either the small number of reads that supports that SNP or the mixed genotype calls. We can observe that there is a large number of accurately detected SNPs. This is expected due to the high divergence of the Spretus strain from other mice strains. For the sake of completeness, we are including the whole number of detected SNPs, however, in our analysis, we focus only on the number of accurately detected SNPs shown in the last column. The results show that GSNAP detected the largest number of accurate SNPs while Novoalign detected the smallest. In addition, more than 94% of the highly accurate SNPs detected by Novoalign were also detected by the other tools (not shown). To further understand the reason for the low number of SNPs detected by Bowtie and Novoalign, we carried out the same experiment while using a quality threshold of 100. The number of highly accurate SNPs increased to 1474 and 1100 for Bowtie and Novoalign, respectively. Moreover, the reads with more than 5 mismatches did not contribute to the increase in the number of SNPs. This is due to the fact that SNPs have a high base quality score. Therefore, a read with a SNP would be sequenced with a small number of errors.</p>
      <table-wrap position="float" id="T4">
        <label>Table 4</label>
        <caption>
          <p>SNP calling results</p>
        </caption>
        <table frame="hsides" rules="groups" border="1">
          <colgroup>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
          </colgroup>
          <thead valign="top">
            <tr>
              <th align="left" valign="bottom">
                <bold>Tools</bold>
                <hr/>
              </th>
              <th colspan="12" align="center" valign="bottom">
                <bold>Log-odds ratio</bold>
                <hr/>
              </th>
            </tr>
            <tr>
              <th align="left"> </th>
              <th align="right">
                <bold>5</bold>
              </th>
              <th align="right">
                <bold>100</bold>
              </th>
              <th align="right">
                <bold>200</bold>
              </th>
              <th align="right">
                <bold>300</bold>
              </th>
              <th align="right">
                <bold>400</bold>
              </th>
              <th align="right">
                <bold>500</bold>
              </th>
              <th align="right">
                <bold>600</bold>
              </th>
              <th align="right">
                <bold>700</bold>
              </th>
              <th align="right">
                <bold>800</bold>
              </th>
              <th align="right">
                <bold>900</bold>
              </th>
              <th align="right">
                <bold>1000</bold>
              </th>
              <th align="right">
                <bold>1000000</bold>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" valign="bottom">Bowtie<hr/></td>
              <td align="right" valign="bottom">89479<hr/></td>
              <td align="right" valign="bottom">24337<hr/></td>
              <td align="right" valign="bottom">5082<hr/></td>
              <td align="right" valign="bottom">2231<hr/></td>
              <td align="right" valign="bottom">1076<hr/></td>
              <td align="right" valign="bottom">648<hr/></td>
              <td align="right" valign="bottom">426<hr/></td>
              <td align="right" valign="bottom">281<hr/></td>
              <td align="right" valign="bottom">0<hr/></td>
              <td align="right" valign="bottom">0<hr/></td>
              <td align="right" valign="bottom">0<hr/></td>
              <td align="right" valign="bottom">1171<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">Bowtie2<hr/></td>
              <td align="right" valign="bottom">200914<hr/></td>
              <td align="right" valign="bottom">62178<hr/></td>
              <td align="right" valign="bottom">10018<hr/></td>
              <td align="right" valign="bottom">4200<hr/></td>
              <td align="right" valign="bottom">2052<hr/></td>
              <td align="right" valign="bottom">1156<hr/></td>
              <td align="right" valign="bottom">767<hr/></td>
              <td align="right" valign="bottom">537<hr/></td>
              <td align="right" valign="bottom">0<hr/></td>
              <td align="right" valign="bottom">0<hr/></td>
              <td align="right" valign="bottom">0<hr/></td>
              <td align="right" valign="bottom">2035<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">BWA<hr/></td>
              <td align="right" valign="bottom">192050<hr/></td>
              <td align="right" valign="bottom">52115<hr/></td>
              <td align="right" valign="bottom">9028<hr/></td>
              <td align="right" valign="bottom">4049<hr/></td>
              <td align="right" valign="bottom">1894<hr/></td>
              <td align="right" valign="bottom">1087<hr/></td>
              <td align="right" valign="bottom">737<hr/></td>
              <td align="right" valign="bottom">525<hr/></td>
              <td align="right" valign="bottom">0<hr/></td>
              <td align="right" valign="bottom">0<hr/></td>
              <td align="right" valign="bottom">0<hr/></td>
              <td align="right" valign="bottom">2067<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">SOAP2<hr/></td>
              <td align="right" valign="bottom">174475<hr/></td>
              <td align="right" valign="bottom">49302<hr/></td>
              <td align="right" valign="bottom">8552<hr/></td>
              <td align="right" valign="bottom">3824<hr/></td>
              <td align="right" valign="bottom">1837<hr/></td>
              <td align="right" valign="bottom">1030<hr/></td>
              <td align="right" valign="bottom">704<hr/></td>
              <td align="right" valign="bottom">508<hr/></td>
              <td align="right" valign="bottom">0<hr/></td>
              <td align="right" valign="bottom">0<hr/></td>
              <td align="right" valign="bottom">0<hr/></td>
              <td align="right" valign="bottom">1941<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">Novoalign<hr/></td>
              <td align="right" valign="bottom">69798<hr/></td>
              <td align="right" valign="bottom">17586<hr/></td>
              <td align="right" valign="bottom">4061<hr/></td>
              <td align="right" valign="bottom">1875<hr/></td>
              <td align="right" valign="bottom">936<hr/></td>
              <td align="right" valign="bottom">519<hr/></td>
              <td align="right" valign="bottom">363<hr/></td>
              <td align="right" valign="bottom">252<hr/></td>
              <td align="right" valign="bottom">0<hr/></td>
              <td align="right" valign="bottom">0<hr/></td>
              <td align="right" valign="bottom">0<hr/></td>
              <td align="right" valign="bottom">941<hr/></td>
            </tr>
            <tr>
              <td align="left">GSNAP</td>
              <td align="right">207920</td>
              <td align="right">69015</td>
              <td align="right">11416</td>
              <td align="right">4928</td>
              <td align="right">2482</td>
              <td align="right">1325</td>
              <td align="right">971</td>
              <td align="right">617</td>
              <td align="right">0</td>
              <td align="right">0</td>
              <td align="right">0</td>
              <td align="right">2602</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <p>SNP calling results when using the different tools. Each row represents a different tool while each column shows the number of SNPs detected with a log-odds ratio, which is a measure of the accuracy of the detected SNP, centered around the given values. The larger the log-odds ratio is, the more accurate the detected SNP becomes.</p>
        </table-wrap-foot>
      </table-wrap>
    </sec>
  </sec>
  <sec sec-type="conclusions">
    <title>Conclusion</title>
    <p>There have been many studies carried out to analyze the performance of short sequence mapping tools and choose the best tool among them. However, the analysis of short sequence mapping tools is still an active problem with many aspects have not been addressed yet. In this work, we provided a benchmarking study for short sequence mapping tools while tackling different aspects that have not been covered by previous studies. We mainly focused on studying the effect of different input properties, algorithmic features, and changing the default options on the performance of the different tools. Additionally, we provided a set of benchmarking tests which extensively analyze the performance of the different tools. Each of the benchmarking tests stresses on a different aspect. The benchmarking tests were further applied on a variety of short sequence mapping tools, namely, Bowtie, Bowtie2, BWA, SOAP2, MAQ, RMAP, GSNAP, Novoalign, mrsFAST (mrFAST), and FANGS.</p>
    <p>The experiments show that some tools report an <italic>error</italic> percentage (i.e., reads mapped while violating the mapping criteria). Among these tools are GSNAP and SOAP2. GSNAP reported the highest <italic>error</italic> percentage in the experiments. Additionally, the <italic>error</italic> increases with the read length and it decreases with the the number of mismatches. Nevertheless, GSNAP was one of the tools which reports the largest mapping percentage in most of the experiments even after filtering out the <italic>error</italic> reads. The main reason for mapping more reads is allowing any number of mismatches in the seed part. From a real application perspective, GSNAP’s filtered output helped in detecting the largest number of SNPs.</p>
    <p>The evaluation of Bowtie, Bowtie2, BWA, mrsFAST, and Novoalign show their ability to correctly map the reads. Moreover, Novoalign mapped the largest percentage of reads, similar to GSNAP, specially for highly repeated genomes. However, it maintained the lowest throughput among the genome indexing tools in most of the experiments.</p>
    <p>mrsFAST’s throughput is highly affected by the read length and the number of mismatches. Our experiments show that it is better to use mrsFAST for longer reads. It can also be used for short reads but only with a small number of mismatches.</p>
    <p>In general, genome indexing based tools performed better than read indexing tools in all of the experiments. However, MAQ was faster than Novoalign for small genomes. Therefore there is a potential for read indexing tools to be used for small genomes. In addition to providing the worst performance, read indexing does not provide any significant speedup in case of using read partitioning based parallelism. Therefore, the read indexing method is not preferred when designing a new read partitioning mapping tools.</p>
    <p>Interestingly, the genome type experiment revealed many strengths and weaknesses for the tools. For instance, the performance of SOAP2, GSNAP, and Novoalign is highly dependent on the genome type; the throughput decreased significantly for the Zebrafish genome. This is due to the large repetition rate on the Zebrafish genome. In addition, the tools behaved differently on the Human and the Chimpanzee genomes albeit having comparable genome sizes. The results of the genome type experiment suggest that the different properties of the genomes affect the performance of the tools. Therefore, further investigations are required to understand the different properties of the genomes and their effect on the different mapping techniques.</p>
    <p>Even though there are differences between the results for the real data sets and the synthetic ones, both experiments are important as they give us a different perspective when comparing between the tools. The control on the number of mismatches for the <monospace>wgsim</monospace> synthetic data allows us to know exactly what the throughput of each tool is while looking for exactly the same number of mismatches. Therefore, it becomes easier to understand why a tool is faster than another one or why a tool seems to map more reads than the other ones. At the same time, it is important to look at the behavior of the tools in case of real data and real-like synthetic data (e.g., <monospace>ART</monospace>) to further understand how they behave in the real world. For instance, for the number of mismatches experiment, even though Bowtie looks like it maps a percentage of reads similar to the other tools in case of 7 t-mms, it actually maps the reads with a maximum of 4 t-mms. Therefore, the output mappings are more accurate than the other tools.</p>
    <p>In general, there is no <italic>the-best</italic> tool among all of the tools; each tool was <italic>the-best</italic> in certain conditions. The short sequence mapping problem is still an active problem and new tools are needed to be developed. However, these new tools should be application-specific. By taking the target application into consideration, more accurate results can be obtained. For instance, for genome assembly, we can analyze the reference genome and estimate the number of reads that can be mapped for the different regions (e.g., repeated regions) based on the coverage information in the sequencing process. Another example for an application with very specific properties is the mapping of RNA-Seq data which contain short sequences for the exon regions rather than intron regions for the genome. Therefore, for well-studied genomes, if a small number of reads where mapped to different intron regions, we can expect them to be wrongly mapped and look for other mapping locations with more number of mismatches or less mapping quality.</p>
  </sec>
  <sec>
    <title>Availability</title>
    <p>Links to tools, datasets, parameters used in each individual tool and test, and the code used to verify the tools are available at <ext-link ext-link-type="uri" xlink:href="http://bmi.osu.edu/hpc/software/benchmark/">http://bmi.osu.edu/hpc/software/benchmark/</ext-link>.</p>
  </sec>
  <sec>
    <title>Competing interests</title>
    <p>The authors declare that there are no competing interests.</p>
  </sec>
  <sec>
    <title>Authors’ contributions</title>
    <p>AH and DB designed the experiments, AH carried out experiments, wrote the first draft of the manuscript. AET provided and analyzed SNP dataset. UVC led the project, helped with the design and interpretation of the experiments, reviewed and revised the manuscript. All authors read and approved the final manuscript.</p>
  </sec>
</body>
<back>
  <sec>
    <title>Acknowledgements</title>
    <p>This work was supported in parts by the DOE grant DE-FC02-06ER2775; by the NSF grants CNS-0643969, OCI-0904809, and OCI-0904802, by the NIH grant R01 CA133461, and by grant NPRP 4-1454-1-233 from the Qatar National Research Fund (a member of The Qatar Foundation).</p>
  </sec>
  <ref-list>
    <ref id="B1">
      <mixed-citation publication-type="other">
        <article-title>National human genome institute</article-title>
        <comment>[<ext-link ext-link-type="uri" xlink:href="http://www.genome.gov">http://www.genome.gov</ext-link>]</comment>
      </mixed-citation>
    </ref>
    <ref id="B2">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Flicek</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Birney</surname>
          <given-names>E</given-names>
        </name>
        <article-title>Sense from sequence reads: methods for alignment and assembly</article-title>
        <source>Nat Methods</source>
        <year>2009</year>
        <volume>6</volume>
        <issue>11s</issue>
        <fpage>S6</fpage>
        <lpage>12</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.1376</pub-id>
        <?supplied-pmid 19844229?>
        <pub-id pub-id-type="pmid">19844229</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B3">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Cokus</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Feng</surname>
          <given-names>S</given-names>
        </name>
        <etal/>
        <article-title>Shotgun bisulphite sequencing of the Arabidopsis genome reveals DNA methylation patterning</article-title>
        <source>Nat</source>
        <year>2008</year>
        <volume>452</volume>
        <issue>7184</issue>
        <fpage>215</fpage>
        <lpage>219</lpage>
        <pub-id pub-id-type="doi">10.1038/nature06745</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B4">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Sultan</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Schulz</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Richard</surname>
          <given-names>H</given-names>
        </name>
        <etal/>
        <article-title>A global view of gene activity and alternative splicing by deep sequencing of the human transcriptome</article-title>
        <source>Science</source>
        <year>2008</year>
        <volume>321</volume>
        <issue>5891</issue>
        <fpage>956</fpage>
        <lpage>960</lpage>
        <pub-id pub-id-type="doi">10.1126/science.1160342</pub-id>
        <?supplied-pmid 18599741?>
        <pub-id pub-id-type="pmid">18599741</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B5">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Van Tessel</surname>
          <given-names>CP</given-names>
        </name>
        <name>
          <surname>Simth</surname>
          <given-names>TPL</given-names>
        </name>
        <name>
          <surname>Matukumali</surname>
          <given-names>LK</given-names>
        </name>
        <etal/>
        <article-title>SNP discovery and allele frequency estimation by deep sequencing of reduced representation libraries</article-title>
        <source>Nat Methods</source>
        <year>2008</year>
        <volume>5</volume>
        <issue>3</issue>
        <fpage>247</fpage>
        <lpage>252</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.1185</pub-id>
        <?supplied-pmid 18297082?>
        <pub-id pub-id-type="pmid">18297082</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B6">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Alkan</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Kidd</surname>
          <given-names>J</given-names>
        </name>
        <collab>Marques-Bonet T</collab>
        <etal/>
        <article-title>Personalized copy number and segmental duplication maps using next-generation sequencing</article-title>
        <source>Nat Genet</source>
        <year>2009</year>
        <volume>41</volume>
        <issue>10</issue>
        <fpage>1061</fpage>
        <lpage>1067</lpage>
        <pub-id pub-id-type="doi">10.1038/ng.437</pub-id>
        <?supplied-pmid 19718026?>
        <pub-id pub-id-type="pmid">19718026</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B7">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Qin</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Li</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Raes</surname>
          <given-names>J</given-names>
        </name>
        <etal/>
        <article-title>A human gut microbial gene catalogue established by metagenomic sequencing</article-title>
        <source>Nat</source>
        <year>2010</year>
        <volume>464</volume>
        <issue>7285</issue>
        <fpage>59</fpage>
        <lpage>65</lpage>
        <pub-id pub-id-type="doi">10.1038/nature08821</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B8">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Li</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Ruan</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Durbin</surname>
          <given-names>R</given-names>
        </name>
        <article-title>Mapping short DNA sequencing reads and calling variants using mapping quality scores</article-title>
        <source>Gen Res</source>
        <year>2008</year>
        <volume>18</volume>
        <issue>11</issue>
        <fpage>1851</fpage>
        <lpage>1858</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.078212.108</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B9">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Smith</surname>
          <given-names>AD</given-names>
        </name>
        <name>
          <surname>Xuan</surname>
          <given-names>Z</given-names>
        </name>
        <collab>Zhang MQ</collab>
        <article-title>Using quality scores and longer reads improves accuracy of Solexa read mapping</article-title>
        <source>BMC Bioinf</source>
        <year>2008</year>
        <volume>9</volume>
        <fpage>128+</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-9-128</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B10">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Wu</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Nacu</surname>
          <given-names>S</given-names>
        </name>
        <article-title>Fast and SNP-tolerant detection of complex variants and splicing in short reads</article-title>
        <source>Bioinf</source>
        <year>2010</year>
        <volume>7</volume>
        <issue>26</issue>
        <fpage>873</fpage>
        <lpage>881</lpage>
      </mixed-citation>
    </ref>
    <ref id="B11">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Langmead</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Trapnell</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Pop</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Salzberg</surname>
          <given-names>S</given-names>
        </name>
        <article-title>Ultrafast and memory-efficient alignment of short DNA sequences to the human genome</article-title>
        <source>Gen Biol</source>
        <year>2009</year>
        <volume>10</volume>
        <issue>3</issue>
        <fpage>R25+</fpage>
      </mixed-citation>
    </ref>
    <ref id="B12">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Langmead</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Salzberg</surname>
          <given-names>SL</given-names>
        </name>
        <article-title>Fast gapped-read alignment with Bowtie 2</article-title>
        <source>Nat Meth</source>
        <year>2012</year>
        <volume>9</volume>
        <fpage>357</fpage>
        <lpage>359</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.1923</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B13">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Li</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Durbin</surname>
          <given-names>R</given-names>
        </name>
        <article-title>Fast and accurate short read alignment with Burrows-Wheeler transform</article-title>
        <source>Bioinf</source>
        <year>2009</year>
        <volume>25</volume>
        <issue>14</issue>
        <fpage>1754</fpage>
        <lpage>1760</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp324</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B14">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Li</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Yu</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Li</surname>
          <given-names>Y</given-names>
        </name>
        <etal/>
        <article-title>SOAP2: an improved ultrafast tool for short read alignment</article-title>
        <source>Bioinf</source>
        <year>2009</year>
        <volume>25</volume>
        <issue>15</issue>
        <fpage>1966</fpage>
        <lpage>1967</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp336</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B15">
      <mixed-citation publication-type="other">
        <article-title>Mosaik</article-title>
        <comment>[<ext-link ext-link-type="uri" xlink:href="http://code.google.com/p/mosaik-aligner">http://code.google.com/p/mosaik-aligner</ext-link>]</comment>
      </mixed-citation>
    </ref>
    <ref id="B16">
      <mixed-citation publication-type="other">
        <name>
          <surname>Misra</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Narayanan</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Lin</surname>
          <given-names>S</given-names>
        </name>
        <etal/>
        <article-title>FANGS: high speed sequence mapping for next generation sequencers</article-title>
        <source>ACM Symposium on Applied Computing: 2009; Sierre, Switzerland</source>
        <year>2009</year>
        <fpage>1539</fpage>
        <lpage>1546</lpage>
        <?supplied-pmid 19432372?>
        <pub-id pub-id-type="pmid">19432372</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B17">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Rumble</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Lacroute</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Dalca</surname>
          <given-names>A</given-names>
          <suffix>et al</suffix>
        </name>
        <article-title>SHRiMP: accurate Mapping of Short Color-space Reads</article-title>
        <source>PLoS Comput Biol</source>
        <year>2009</year>
        <volume>5</volume>
        <issue>5</issue>
        <fpage>e1000386+</fpage>
        <?supplied-pmid 19461883?>
        <pub-id pub-id-type="pmid">19461883</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B18">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Homer</surname>
          <given-names>N</given-names>
        </name>
        <name>
          <surname>Merriman</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Nelson</surname>
          <given-names>S</given-names>
        </name>
        <article-title>BFAST: an alignment tool for large scale genome resequencing</article-title>
        <source>PLoS ONE</source>
        <year>2009</year>
        <volume>4</volume>
        <issue>11</issue>
        <fpage>e7767</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0007767</pub-id>
        <?supplied-pmid 19907642?>
        <pub-id pub-id-type="pmid">19907642</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B19">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Ondov</surname>
          <given-names>BD</given-names>
        </name>
        <name>
          <surname>Varadarajan</surname>
          <given-names>V</given-names>
        </name>
        <name>
          <surname>Passalacqua</surname>
          <given-names>KD</given-names>
        </name>
        <etal/>
        <article-title>Efficient mapping of Applied Biosystems SOLiD sequence data to a reference genome for functional genomic applications</article-title>
        <source>Bioinf</source>
        <year>2008</year>
        <volume>24</volume>
        <issue>23</issue>
        <fpage>2776</fpage>
        <lpage>2777</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btn512</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B20">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Campagna</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Albiero</surname>
          <given-names>A</given-names>
        </name>
        <collab>Bilardi A</collab>
        <etal/>
        <article-title>PASS: a program to align short sequences</article-title>
        <source>Bioinf</source>
        <year>2009</year>
        <volume>25</volume>
        <issue>7</issue>
        <fpage>967</fpage>
        <lpage>968</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp087</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B21">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Hach</surname>
          <given-names>F</given-names>
        </name>
        <name>
          <surname>Hormozdiari</surname>
          <given-names>F</given-names>
        </name>
        <name>
          <surname>Alkan</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Hormozdiari</surname>
          <given-names>F</given-names>
        </name>
        <name>
          <surname>Birol</surname>
          <given-names>I</given-names>
        </name>
        <name>
          <surname>Eichler</surname>
          <given-names>EE</given-names>
        </name>
        <name>
          <surname>Sahinalp</surname>
          <given-names>SC</given-names>
        </name>
        <article-title>mrsFast: a cache-oblivious algorithm for short-read mapping</article-title>
        <source>Nat Method</source>
        <year>2010</year>
        <volume>7</volume>
        <issue>8</issue>
        <fpage>576</fpage>
        <lpage>577</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth0810-576</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B22">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Lin</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Zhang</surname>
          <given-names>Z</given-names>
        </name>
        <collab>Zhang MQ</collab>
        <etal/>
        <article-title>ZOOM! Zillions of oligos mapped</article-title>
        <source>Bioinf</source>
        <year>2008</year>
        <volume>24</volume>
        <issue>21</issue>
        <fpage>2431</fpage>
        <lpage>2437</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btn416</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B23">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Malhis</surname>
          <given-names>N</given-names>
        </name>
        <name>
          <surname>Butterfield</surname>
          <given-names>YS</given-names>
        </name>
        <name>
          <surname>Ester</surname>
          <given-names>M</given-names>
        </name>
        <etal/>
        <article-title>Slider = Maximum use of probability information for alignment of short sequence reads and SNP detection</article-title>
        <source>Bioinf</source>
        <year>2008</year>
        <volume>25</volume>
        <fpage>6</fpage>
        <lpage>13</lpage>
      </mixed-citation>
    </ref>
    <ref id="B24">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Malhis</surname>
          <given-names>N</given-names>
        </name>
        <name>
          <surname>Jones</surname>
          <given-names>S</given-names>
        </name>
        <article-title>High quality SNP calling using Illumina data at shallow coverage</article-title>
        <source>Bioinf</source>
        <year>2010</year>
        <volume>26</volume>
        <issue>8</issue>
        <fpage>1029</fpage>
        <lpage>1035</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btq092</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B25">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Weese</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Emde</surname>
          <given-names>AK</given-names>
        </name>
        <name>
          <surname>Rausch</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Döring</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Reinert</surname>
          <given-names>K</given-names>
        </name>
        <article-title>RazerS-fast read mapping with sensitivity control</article-title>
        <source>Genome Res</source>
        <year>2009</year>
        <volume>19</volume>
        <fpage>1646</fpage>
        <lpage>1654</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.088823.108</pub-id>
        <?supplied-pmid 19592482?>
        <pub-id pub-id-type="pmid">19592482</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B26">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Weese</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Holtgrewe</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Reinert</surname>
          <given-names>K</given-names>
        </name>
        <article-title>RazerS 3: faster, fully sensitive read mapping</article-title>
        <source>Bioinf</source>
        <year>2012</year>
        <volume>28</volume>
        <issue>20</issue>
        <fpage>2592</fpage>
        <lpage>2599</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bts505</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B27">
      <mixed-citation publication-type="other">
        <article-title>Novoalign</article-title>
        <comment>[<ext-link ext-link-type="uri" xlink:href="http://www.novocraft.com">http://www.novocraft.com</ext-link>]</comment>
      </mixed-citation>
    </ref>
    <ref id="B28">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Blom</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Jakobi</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Doppmeier</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Jaenicke</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Kalinowski</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Stoye</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Goesmann</surname>
          <given-names>A</given-names>
        </name>
        <article-title>Exact and complete short-read alignment to microbial genomes using Graphics Processing Unit programming</article-title>
        <source>Bioinf</source>
        <year>2011</year>
        <volume>27</volume>
        <issue>10</issue>
        <fpage>1351</fpage>
        <lpage>1358</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btr151</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B29">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Liu</surname>
          <given-names>CM</given-names>
        </name>
        <name>
          <surname>Wong</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Wu</surname>
          <given-names>E</given-names>
        </name>
        <name>
          <surname>Luo</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Yiu</surname>
          <given-names>SM</given-names>
        </name>
        <name>
          <surname>Li</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Wang</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Yu</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Chu</surname>
          <given-names>X</given-names>
        </name>
        <name>
          <surname>Zhao</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>Li</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Lam</surname>
          <given-names>TW</given-names>
        </name>
        <article-title>SOAP3: ultra-fast GPU-based parallel alignment tool for short reads</article-title>
        <source>Bioinf</source>
        <year>2012</year>
        <volume>28</volume>
        <issue>6</issue>
        <fpage>878</fpage>
        <lpage>879</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bts061</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B30">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Li</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Homer</surname>
          <given-names>N</given-names>
        </name>
        <article-title>A survey of sequence alignment algorithms for next-generation sequencing</article-title>
        <source>Brief Bioinf</source>
        <year>2010</year>
        <volume>11</volume>
        <issue>5</issue>
        <fpage>473</fpage>
        <lpage>483</lpage>
        <pub-id pub-id-type="doi">10.1093/bib/bbq015</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B31">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Holtgrewe</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Emde</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Weese</surname>
          <given-names>D</given-names>
          <suffix>et al</suffix>
        </name>
        <article-title>A novel and well-defined benchmarking method for second generation read mapping</article-title>
        <source>BMC Bioinf</source>
        <year>2011</year>
        <volume>12</volume>
        <fpage>210+</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-12-210</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B32">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Ruffalo</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>LaFramboise</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Koyutürk</surname>
          <given-names>M</given-names>
        </name>
        <article-title>Comparative analysis of algorithms for next-generation sequencing read alignment</article-title>
        <source>Bioinf</source>
        <year>2011</year>
        <volume>27</volume>
        <issue>20</issue>
        <fpage>2790</fpage>
        <lpage>2796</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btr477</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B33">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Schbath</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Martin</surname>
          <given-names>V</given-names>
        </name>
        <name>
          <surname>Zytnicki</surname>
          <given-names>M</given-names>
        </name>
        <etal/>
        <article-title>Mapping reads on a genomic sequence: an algorithmic overwiew and a practical comparative analysis</article-title>
        <source>Jr Comp Biol</source>
        <year>2012</year>
        <volume>19</volume>
        <issue>6</issue>
        <fpage>796</fpage>
        <lpage>813</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2012.0022</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B34">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Fonseca</surname>
          <given-names>NA</given-names>
        </name>
        <name>
          <surname>Rung</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Brazma</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Marioni</surname>
          <given-names>JC</given-names>
        </name>
        <article-title>Tools for mapping high-throughput sequencing data</article-title>
        <source>Bioinf</source>
        <year>2012</year>
        <volume>28</volume>
        <issue>24</issue>
        <fpage>3169</fpage>
        <lpage>3177</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bts605</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B35">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Ewing</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Hillier</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Wendl</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Green</surname>
          <given-names>P</given-names>
        </name>
        <article-title>Base-calling of automated sequencer traces using phred. I. Accuracy assessment</article-title>
        <source>Genome Res</source>
        <year>1998</year>
        <volume>8</volume>
        <issue>3</issue>
        <fpage>175</fpage>
        <lpage>185</lpage>
        <?supplied-pmid 9521921?>
        <pub-id pub-id-type="pmid">9521921</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B36">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Ewing</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Green</surname>
          <given-names>P</given-names>
        </name>
        <article-title>Base-calling of automated sequencer traces using phred. II. Error probabilities</article-title>
        <source>Genome Res</source>
        <year>1998</year>
        <volume>8</volume>
        <issue>3</issue>
        <fpage>186</fpage>
        <lpage>194</lpage>
        <?supplied-pmid 9521922?>
        <pub-id pub-id-type="pmid">9521922</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B37">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Deutsch</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Long</surname>
          <given-names>M</given-names>
        </name>
        <article-title>Intron-exon structures of eukaryotic model organisms</article-title>
        <source>Nucl Acids Res</source>
        <year>1999</year>
        <volume>27</volume>
        <issue>15</issue>
        <fpage>3219</fpage>
        <lpage>3228</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/27.15.3219</pub-id>
        <?supplied-pmid 10454621?>
        <pub-id pub-id-type="pmid">10454621</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B38">
      <mixed-citation publication-type="other">
        <name>
          <surname>Burrows</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Wheeler</surname>
          <given-names>D</given-names>
        </name>
        <article-title>A block-sorting lossless data compression algorithm</article-title>
        <source>Tech. Rep</source>
        <comment>124, Digital Equipment Corporation, Palo Alto (CA) 1994.</comment>
      </mixed-citation>
    </ref>
    <ref id="B39">
      <mixed-citation publication-type="other">
        <name>
          <surname>Ferragina</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Manzini</surname>
          <given-names>G</given-names>
        </name>
        <article-title>Opportunistic data structures with applications</article-title>
        <source>41st Annual Symposium on Foundations of Computer Science, Washington, DC</source>
        <year>2000</year>
        <fpage>390</fpage>
        <lpage>398</lpage>
      </mixed-citation>
    </ref>
    <ref id="B40">
      <mixed-citation publication-type="other">
        <article-title>ssahaSNP</article-title>
        <comment>[<ext-link ext-link-type="uri" xlink:href="http://www.sanger.ac.uk/resources/software/ssahasnp/">http://www.sanger.ac.uk/resources/software/ssahasnp/</ext-link>]</comment>
      </mixed-citation>
    </ref>
    <ref id="B41">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Zhang</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Wheeler</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Yakub</surname>
          <given-names>I</given-names>
        </name>
        <etal/>
        <article-title>SNPdetector: a software tool for sensitive and accurate SNP detection</article-title>
        <source>PLoS Comput Biol</source>
        <year>2005</year>
        <volume>1</volume>
        <issue>5</issue>
        <fpage>e53</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.0010053</pub-id>
        <?supplied-pmid 16261194?>
        <pub-id pub-id-type="pmid">16261194</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B42">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Li</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Li</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Fang</surname>
          <given-names>X</given-names>
        </name>
        <etal/>
        <article-title>SNP detection for massively parallel whole-genome resequencing</article-title>
        <source>Genome Res</source>
        <year>2009</year>
        <volume>18</volume>
        <issue>6</issue>
        <fpage>1124</fpage>
        <lpage>1132</lpage>
        <pub-id pub-id-type="pmid">19420381</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B43">
      <mixed-citation publication-type="other">
        <article-title>wgsim</article-title>
        <comment>[<ext-link ext-link-type="uri" xlink:href="https://github.com/lh3/wgsim">https://github.com/lh3/wgsim</ext-link>]</comment>
      </mixed-citation>
    </ref>
    <ref id="B44">
      <mixed-citation publication-type="other">
        <article-title>dwgsim</article-title>
        <comment>[<ext-link ext-link-type="uri" xlink:href="http://sourceforge.net/projects/dnaa">http://sourceforge.net/projects/dnaa</ext-link>]</comment>
      </mixed-citation>
    </ref>
    <ref id="B45">
      <mixed-citation publication-type="other">
        <name>
          <surname>Holtgrewe</surname>
          <given-names>M</given-names>
        </name>
        <article-title>Mason - a read simulator for second generation sequencing data</article-title>
        <comment>Tech. Rep. TB-B-10-06, Digital Equipment Corporation, Institut für Mathematik und Informatik, Freie Universität Berlin, Berlin, Germany 2010</comment>
      </mixed-citation>
    </ref>
    <ref id="B46">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Huang</surname>
          <given-names>W</given-names>
        </name>
        <name>
          <surname>Li</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Myers</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Marth</surname>
          <given-names>G</given-names>
        </name>
        <article-title>ART: a next-generation sequencing read simulator</article-title>
        <source>Bioinf</source>
        <year>2012</year>
        <volume>28</volume>
        <issue>4</issue>
        <fpage>593</fpage>
        <lpage>594</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btr708</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B47">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Dohm</surname>
          <given-names>JC</given-names>
        </name>
        <name>
          <surname>Lottaz</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Borodina</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Himmelbauer</surname>
          <given-names>H</given-names>
        </name>
        <article-title>Substantial biases in ultra-short read data sets from high-throughput DNA sequencing</article-title>
        <source>Nucl Acid Res</source>
        <year>2008</year>
        <volume>36</volume>
        <issue>16</issue>
        <fpage>e105</fpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkn425</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B48">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Schroder</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Schroder</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Puglisi</surname>
          <given-names>S</given-names>
          <suffix>et al</suffix>
        </name>
        <article-title>SNP detection for massively parallel whole-genome resequencing</article-title>
        <source>Bioinf</source>
        <year>2009</year>
        <volume>25</volume>
        <issue>17</issue>
        <fpage>2157</fpage>
        <lpage>2163</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp379</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B49">
      <mixed-citation publication-type="journal">
        <name>
          <surname>McElroy</surname>
          <given-names>KE</given-names>
        </name>
        <name>
          <surname>Luciani</surname>
          <given-names>F</given-names>
        </name>
        <name>
          <surname>Thomas</surname>
          <given-names>T</given-names>
        </name>
        <article-title>GemSIM: general, error-model based simulator of next-generation sequencing data</article-title>
        <source>BMC Genomics</source>
        <year>2012</year>
        <volume>13</volume>
        <fpage>74</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2164-13-74</pub-id>
        <?supplied-pmid 22336055?>
        <pub-id pub-id-type="pmid">22336055</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B50">
      <mixed-citation publication-type="other">
        <article-title>pMap</article-title>
        <comment>[<ext-link ext-link-type="uri" xlink:href="http://bmi.osu.edu/hpc/software/pmap/pmap.html">http://bmi.osu.edu/hpc/software/pmap/pmap.html</ext-link>]</comment>
      </mixed-citation>
    </ref>
    <ref id="B51">
      <mixed-citation publication-type="other">
        <name>
          <surname>Inc</surname>
          <given-names>P</given-names>
        </name>
        <article-title>Partek Genomics SuiteTM v2.6</article-title>
        <comment>Tech. rep., Partek Inc., St. Louis 2010</comment>
      </mixed-citation>
    </ref>
  </ref-list>
</back>
<?DTDIdentifier.IdentifierValue article.dtd?>
<?DTDIdentifier.IdentifierType system?>
<?SourceDTD.DTDName article.dtd?>
<?SourceDTD.Version 1.0?>
<?ConverterInfo.XSLTName bmc2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">3694458</article-id>
    <article-id pub-id-type="publisher-id">1471-2105-14-184</article-id>
    <article-id pub-id-type="pmid">23758764</article-id>
    <article-id pub-id-type="doi">10.1186/1471-2105-14-184</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Benchmarking short sequence mapping tools</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" id="A1">
        <name>
          <surname>Hatem</surname>
          <given-names>Ayat</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <xref ref-type="aff" rid="I2">2</xref>
        <email>dayat@bmi.osu.edu</email>
      </contrib>
      <contrib contrib-type="author" id="A2">
        <name>
          <surname>Bozdağ</surname>
          <given-names>Doruk</given-names>
        </name>
        <xref ref-type="aff" rid="I2">2</xref>
        <email>bozdagd@bmi.osu.edu</email>
      </contrib>
      <contrib contrib-type="author" id="A3">
        <name>
          <surname>Toland</surname>
          <given-names>Amanda E</given-names>
        </name>
        <xref ref-type="aff" rid="I3">3</xref>
        <email>Amanda.Toland@osumc.edu</email>
      </contrib>
      <contrib contrib-type="author" corresp="yes" id="A4">
        <name>
          <surname>Çatalyürek</surname>
          <given-names>Ümit V</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <xref ref-type="aff" rid="I2">2</xref>
        <email>umit@bmi.osu.edu</email>
      </contrib>
    </contrib-group>
    <aff id="I1"><label>1</label>Department of Electrical and Computer Engineering, The Ohio State University, Columbus, OH, USA</aff>
    <aff id="I2"><label>2</label>Department of Biomedical Informatics, The Ohio State University, Columbus, OH, USA</aff>
    <aff id="I3"><label>3</label>Department of Molecular Virology, Immunology and Medical Genetics, The Ohio State University, Columbus, OH, USA</aff>
    <pub-date pub-type="collection">
      <year>2013</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>7</day>
      <month>6</month>
      <year>2013</year>
    </pub-date>
    <volume>14</volume>
    <fpage>184</fpage>
    <lpage>184</lpage>
    <history>
      <date date-type="received">
        <day>9</day>
        <month>8</month>
        <year>2012</year>
      </date>
      <date date-type="accepted">
        <day>28</day>
        <month>5</month>
        <year>2013</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright © 2013 Hatem et al.; licensee BioMed Central Ltd.</copyright-statement>
      <copyright-year>2013</copyright-year>
      <copyright-holder>Hatem et al.; licensee BioMed Central Ltd.</copyright-holder>
      <license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0">http://creativecommons.org/licenses/by/2.0</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="http://www.biomedcentral.com/1471-2105/14/184"/>
    <abstract>
      <sec>
        <title>Background</title>
        <p>The development of next-generation sequencing instruments has led to the generation of millions of short sequences in a single run. The process of aligning these reads to a reference genome is time consuming and demands the development of fast and accurate alignment tools. However, the current proposed tools make different compromises between the accuracy and the speed of mapping. Moreover, many important aspects are overlooked while comparing the performance of a newly developed tool to the state of the art. Therefore, there is a need for an objective evaluation method that covers all the aspects. In this work, we introduce a benchmarking suite to extensively analyze sequencing tools with respect to various aspects and provide an objective comparison.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>We applied our benchmarking tests on 9 well known mapping tools, namely, Bowtie, Bowtie2, BWA, SOAP2, MAQ, RMAP, GSNAP, Novoalign, and mrsFAST (mrFAST) using synthetic data and real RNA-Seq data. MAQ and RMAP are based on building hash tables for the reads, whereas the remaining tools are based on indexing the reference genome. The benchmarking tests reveal the strengths and weaknesses of each tool. The results show that no single tool outperforms all others in all metrics. However, Bowtie maintained the best throughput for most of the tests while BWA performed better for longer read lengths. The benchmarking tests are not restricted to the mentioned tools and can be further applied to others.</p>
      </sec>
      <sec>
        <title>Conclusion</title>
        <p>The mapping process is still a hard problem that is affected by many factors. In this work, we provided a benchmarking suite that reveals and evaluates the different factors affecting the mapping process. Still, there is no tool that outperforms all of the others in all the tests. Therefore, the end user should clearly specify his needs in order to choose the tool that provides the best results.</p>
      </sec>
    </abstract>
    <kwd-group>
      <kwd>Short sequence mapping</kwd>
      <kwd>Next-generation sequencing</kwd>
      <kwd>Benchmark</kwd>
      <kwd>Sequence analysis</kwd>
    </kwd-group>
  </article-meta>
</front>
<body>
  <sec sec-type="intro">
    <title>Introduction</title>
    <p>Next-generation sequencing (NGS) technology has evolved rapidly in the last five years, leading to the generation of hundreds of millions of sequences (reads) in a single run. The number of generated reads varies between 1 million for long reads generated by Roche/454 sequencer (≈400 base pairs (bps)) and 2.4 billion for short reads generated by Illumina/Solexa and ABI/SOLIDTM sequencers (≈75 bps). The invention of the high-throughput sequencers has led to a significant cost reduction, e.g., a Megabase of DNA sequence costs only &lt;DOLLAR/&gt;0.1 [<xref ref-type="bibr" rid="B1">1</xref>].</p>
    <p>Nevertheless, the large amount of generated data tells us almost nothing about the DNA, as stated by Flicek and Birney [<xref ref-type="bibr" rid="B2">2</xref>]. This is due to the lack of proper analysis tools and algorithms. Therefore, bioinformatics researchers started to think about new ways to efficiently handle and analyze this large amount of data.</p>
    <p>One of the areas that attracted many researchers to work on is the alignment (mapping) of the generated sequences, i.e., the alignment of reads generated by NGS machines to a reference genome. Because, an efficient alignment of this large amount of reads with high accuracy is a crucial part in many applications’ workflow, such as genome resequencing [<xref ref-type="bibr" rid="B2">2</xref>], DNA methylation [<xref ref-type="bibr" rid="B3">3</xref>], RNA-Seq [<xref ref-type="bibr" rid="B4">4</xref>], ChIP sequencing, SNPs detection [<xref ref-type="bibr" rid="B5">5</xref>], genomic structural variants detection [<xref ref-type="bibr" rid="B6">6</xref>], and metagenomics [<xref ref-type="bibr" rid="B7">7</xref>]. Therefore, numerous tools have been developed to undertake this challenging task including MAQ [<xref ref-type="bibr" rid="B8">8</xref>], RMAP [<xref ref-type="bibr" rid="B9">9</xref>], GSNAP [<xref ref-type="bibr" rid="B10">10</xref>], Bowtie [<xref ref-type="bibr" rid="B11">11</xref>], Bowtie2 [<xref ref-type="bibr" rid="B12">12</xref>], BWA [<xref ref-type="bibr" rid="B13">13</xref>], SOAP2 [<xref ref-type="bibr" rid="B14">14</xref>], Mosaik [<xref ref-type="bibr" rid="B15">15</xref>], FANGS [<xref ref-type="bibr" rid="B16">16</xref>], SHRIMP [<xref ref-type="bibr" rid="B17">17</xref>], BFAST [<xref ref-type="bibr" rid="B18">18</xref>], MapReads, SOCS [<xref ref-type="bibr" rid="B19">19</xref>], PASS [<xref ref-type="bibr" rid="B20">20</xref>], mrFAST [<xref ref-type="bibr" rid="B6">6</xref>], mrsFAST [<xref ref-type="bibr" rid="B21">21</xref>], ZOOM [<xref ref-type="bibr" rid="B22">22</xref>], Slider [<xref ref-type="bibr" rid="B23">23</xref>], SliderII [<xref ref-type="bibr" rid="B24">24</xref>], RazerS [<xref ref-type="bibr" rid="B25">25</xref>], RazerS3 [<xref ref-type="bibr" rid="B26">26</xref>], and Novoalign [<xref ref-type="bibr" rid="B27">27</xref>]. Moreover, GPU-based tools have been developed to optimally map more reads such as SARUMAN [<xref ref-type="bibr" rid="B28">28</xref>] and SOAP3 [<xref ref-type="bibr" rid="B29">29</xref>]. However, due to using different mapping techniques, each tool provides different trade-offs between speed and quality of the mapping. For instance, the quality is often compromised in the following ways to reduce runtime: </p>
    <p>● Neglecting base quality score.</p>
    <p>● Limiting the number of allowed mismatches.</p>
    <p>● Disabling gapped alignment or limiting the gap length.</p>
    <p>● Ignoring SNP information.</p>
    <p>In most cases, it is unclear how such compromises affect the performance of newly developed tools in comparison to the state of the art ones. Therefore, many studies have been carried out to provide such comparisons. Some of the available studies were mainly focused on providing new tools (e.g., [<xref ref-type="bibr" rid="B10">10</xref>,<xref ref-type="bibr" rid="B13">13</xref>]). The remaining studies tried to provide a thorough comparison while each covering a different aspect (e.g., [<xref ref-type="bibr" rid="B30">30</xref>-<xref ref-type="bibr" rid="B34">34</xref>]).</p>
    <p>For instance, Li and Homer [<xref ref-type="bibr" rid="B30">30</xref>] classified the tools into groups according to the used indexing technique and the features the tools support such as gapped alignment, long read alignment, and bisulfite-treated reads alignment. In other words, in that work, the main focus was classifying the tools into groups rather than evaluating their performance on various settings.</p>
    <p>Similar to Li and Homer, Fronseca et al. [<xref ref-type="bibr" rid="B34">34</xref>] provided another classification study. However, they included more tools in the study, around 60 mappers, while being more focused on providing a comprehensive overview of the characteristics of the tools.</p>
    <p>Ruffalo et al. [<xref ref-type="bibr" rid="B32">32</xref>] presented a comparison between Bowtie, BWA, Novoalign, SHRiMP, mrFAST, mrsFAST, and SOAP2. Unlike the above mentioned studies, Ruffalo et al. evaluated the accuracy of the tools in different settings. They defined a read to be correctly mapped if it maps to the correct location in the genome and has a quality score higher than or equal to the threshold. Accordingly, they evaluated the behavior of the tools while varying the sequencing error rate, indel size, and indel frequency. However, they used the default options of the mapping tools in most of the experiments. In addition, they considered small simulated data sets of 500,000 reads of length 50 bps while using an artificial genome of length 500Mbp and the Human genome of length 3Gbp as the reference genomes.</p>
    <p>Another study was done by Holtgrewe et al. [<xref ref-type="bibr" rid="B31">31</xref>], where the focus was the sensitivity of the tools. They enumerated the possible matching intervals with a maximum distance <italic>k</italic> for each read. Afterwards, they evaluated the sensitivity of the mappers according to the number of intervals they detected. Holtgrewe et al. used the suggested sensitivity evaluation criteria to evaluate the performance of SOAP2, Bowtie, BWA, and Shrimp2 on both simulated and real datasets. However, they used small reference genomes (the S. cerevisiae genome of length 12 Mbp and the D. melanogaster genome of length 169 Mbp). In addition, the experiments were performed on small real data sets of 10,000 reads. For evaluating the performance of the tools on real data sets, Holtgrewe et al. used RazerS to detect the possible matching intervals. RazerS is a full sensitive mapper, hence it is a very slow mapper [<xref ref-type="bibr" rid="B21">21</xref>]. Therefore, scaling the suggested benchmark process for realistic whole genome mapping experiments with millions of reads is not practical. Nevertheless, after the initial submission of this work, RazerS3 [<xref ref-type="bibr" rid="B26">26</xref>] was published, thus, making a significant improvement in the running time of the evaluation process.</p>
    <p>Schbath et al. [<xref ref-type="bibr" rid="B33">33</xref>] also focused on evaluating the sensitivity of the sequencing tools. They evaluated if a tool correctly reports a read as a unique or not. In addition, for non-unique reads, they evaluated if a tool detects all of the mapping locations. However, in their work, like many previous studies, the tools were used with default options, and they tested the tools with a very small read length of 40 bps. Additionally, the error model they used did not include indels and allowed only 3 mismatches.</p>
    <p>Even though many studies have been published for evaluating short sequence mapping tools, the problem is still open and further perspectives were not tackled in the current studies. For instance, the above studies did not consider the effect of changing the default options and using the same options across the tools. In addition, some of the studies used small data sets (e.g., 10,00 and 500,000 reads) while using small reference genomes (e.g., 169Mbps and 500Mbps) [<xref ref-type="bibr" rid="B31">31</xref>,<xref ref-type="bibr" rid="B32">32</xref>]. Furthermore, they did not take the effect of input properties and algorithmic features into account. Here, input properties refer to the type of the reference genome and the properties of the reads including their length and source. Algorithmic features, on the other hand, pertain to the features provided by the mapping tool regarding its performance and utility. Therefore, there is still a need for a quantitative evaluation method to systematically compare mapping tools in multiple aspects. In this paper, we address this problem and present two different sets of experiments to evaluate and understand the strengths and weaknesses of each tool. The first set includes the benchmarking suite, consisting of tests that cover a variety of input properties and algorithmic features. These tests are applied on real RNA-Seq data and genomic resequencing synthetic data to verify the effectiveness of the benchmarking tests. The real data set consists of 1 million reads while the synthetic data sets consist of 1 million reads and 16 million reads. Additionally, we have used multiple genomes with sizes varying from 0.1 Gbps to 3.1 Gbps. The second set includes a use case experiment, namely, SNP calling, to understand the effects of mapping techniques on a real application.</p>
    <p>Furthermore, we introduce a new, albeit simple, mathematical definition for the mapping correctness. We define a read to be correctly mapped if it is mapped while not violating the mapping criteria. This is in contrast to previous works where they define a read to be correctly mapped if it maps to its original genomic location. Clearly, if one knows “the original genomic location”, there is no need to map the reads. Hence, even though such a definition can be considered more biologically relevant, unfortunately this definition is neither sufficient nor computationally achievable. For instance, a read could be mapped to the original location with two mismatches (i.e., substitution error or SNP) while there might exist a mapping with an exact match to another location. If a tool does not have any <italic>a-priori</italic> information about the data, it would be impossible to choose the two mismatches location over the exact matching one. One can only hope that such tool can return “the original genomic location” when the user asks the tool to return all matching locations with two mismatches or less. Indeed, as later shown in the paper, our suggested definition is computationally more accurate than the naïve one. In addition, it complements other definitions such as the one suggested by Holtgrewe et al. [<xref ref-type="bibr" rid="B31">31</xref>].</p>
    <p>To assess our work, we apply these tests on nine well known short sequence mapping tools, namely, Bowtie, Bowtie2, BWA, SOAP2, MAQ, RMAP, Novoalign, GSNAP, and mrFAST (mrsFAST). Unlike the other tools in this study, mrFAST (mrsFAST) is a full sensitive exact mapper that reports all the mapping locations. Therefore, comparing the mapping accuracy performance of mrFAST with the remaining tools is beneficial in further understanding the behavior of the different tools, even though comparing the execution time performance will not be fair. Moreover, we compare the performance of these tools with that of FANGS, a long read mapping tool, to show their effectiveness in handling long reads. The remaining tools were chosen according to the indexing techniques they use. Therefore, we can emphasize on the effect of the indexing technique on the performance. The experiments are carried out while using the same options for the tools, whenever possible.</p>
    <p>The paper is organized as follows: in the next section, we briefly describe the sequence mapping problem, the mapping techniques used by the tools, and various evaluation criteria used to evaluate the performance of the tools including other definitions for mapping correctness. Then, we discuss how we designed the benchmarking suite and give a real application for the mapping problem. Finally, we present and explain the results for our benchmarking suite.</p>
  </sec>
  <sec>
    <title>Background</title>
    <p>The exact matching of DNA sequences to a genome is a special case of the string matching problem. It requires incorporating the known properties or features of the DNA sequences and the sequencing technologies, thus, adding additional complexity to the mapping process. In this section, we first give a brief description of a set of features of DNA and sequencing technologies. Then, we explain how the tools used in this study work and support these features. Additionally, we describe the default options setup and show how divergent they are among the tools. Finally, we compare the evaluation criteria used in previous studies.</p>
    <sec>
      <title>Features</title>
      <p>● <italic>Seeding</italic> represents the first few tens of base pairs of a read. The seed part of a read is expected to contain less erroneous characters due to the specifics of the NGS technologies. Therefore, the seeding property is mostly used to maximize performance and accuracy.</p>
      <p>● <italic>Base quality scores</italic> provide a measure on correctness of each base in the read. The base quality score is assigned by a phred-like algorithm [<xref ref-type="bibr" rid="B35">35</xref>,<xref ref-type="bibr" rid="B36">36</xref>]. The score <italic>Q</italic> is equal to −10 log10(<italic>e</italic>), where <italic>e</italic> is the probability that the base is wrong. Some tools use the quality scores to decide mismatch locations. Others accept or reject the read based on the sum of the quality scores at mismatch positions.</p>
      <p>● <italic>Existence of indels</italic> necessitates inserting or deleting nucleotides while mapping a sequence to a reference genome (gaps). The complexity of choosing a gap location increases with the read length. Therefore, some tools do not allow any gaps while others limit their locations and numbers.</p>
      <p>● <italic>Paired-end reads</italic> result from sequencing both ends of a DNA molecule. Mapping paired-end reads increases the confidence in the mapping locations due to having an estimation of the distance between the two ends.</p>
      <p>● <italic>Color space read</italic> is a read type generated by SOLiD sequencers. In this technology, overlapping pairs of letters are read and given a number (color) out of four numbers [<xref ref-type="bibr" rid="B17">17</xref>]. The reads can be converted into bases, however, performing the mapping in the color space has advantages in terms of error detection.</p>
      <p>● <italic>Splicing</italic> refers to the process of cutting the RNA to remove the non-coding part (introns) and keeping only the coding part (exons) and joining them together. Therefore, when sequencing the RNA, a read might be located across exon-exon junctions. The process of mapping such reads back to the genome is hard due to the variability of the intron length. For instance, the intron length ranges between 250 and 65,130 nt in eukaryotic model organisms [<xref ref-type="bibr" rid="B37">37</xref>].</p>
      <p>● <italic>SNPs</italic> are variations of a single nucleotide between members of the same species. SNPs are not mismatches. Therefore, their locations should be identified before mapping reads in order to correctly identify actual mismatch positions.</p>
      <p>● <italic>Bisulphite treatment</italic> is a method used for the study of the methylation state of the DNA [<xref ref-type="bibr" rid="B3">3</xref>]. In bisulphite treated reads, each unmethylated cytosine is converted to uracil. Therefore, they require special handling in order not to misalign the reads.</p>
    </sec>
    <sec>
      <title>Tools’ description</title>
      <p>For most of the existing tools (and for all the ones we consider), the mapping process starts by building an index for the reference genome or the reads. Then, the index is used to find the corresponding genomic positions for each read. There are many techniques used to build the index [<xref ref-type="bibr" rid="B30">30</xref>]. The two most common techniques are the followings: </p>
      <p>● Hash Tables: The hash based methods are divided into two types: hashing the reads and hashing the genome. In general, the main idea for both types is to build a hash table for subsequences of the reads/genome. The key of each entry is a subsequence while the value is a list of positions where the subsequence can be found. Hashing based tools include the following tools:</p>
      <p><bold>GSNAP</bold>[<xref ref-type="bibr" rid="B10">10</xref>] is a genome indexing tool. The hash table is built by dividing the reference genome into overlapping oligomers of length 12 sampled every 3 nucleotides. The mapping phase works by first dividing the read into smaller substrings, finding candidate regions for each substring, and finally combining the regions for all of the substrings to generate the final results. GSNAP was mainly designed to detect complex variants and splicing in individual reads. However, in this study, GSNAP is only used as a mapper to evaluate its efficiency.</p>
      <p><bold>Novoalign</bold>[<xref ref-type="bibr" rid="B27">27</xref>] is a genome indexing tool. Similar to GSNAP, the hash table is built by dividing the reads into overlapping oligomers. The mapping phase uses the Needleman-Wunsch algorithm with affine gap penalties to find the global optimum alignment.</p>
      <p><bold>mrFAST and mrsFAST</bold>[<xref ref-type="bibr" rid="B6">6</xref>,<xref ref-type="bibr" rid="B21">21</xref>] are genome indexing tools. They build a collision free hash table to index <italic>k</italic>-mers of the genome. mrFAST and mrsFAST are both developed with the same method, however, the former supports gaps and mismatches while the latter supports only mismatches to run faster. Therefore, in the following, we will use mrsFAST for experiments that do not allow gaps and mrFAST for experiments that allow gaps. Unlike the other tools, mrFAST and mrsFAST report all of the available mapping locations for a read. This is important in many applications such as structural variants detection.</p>
      <p><bold>FANGS</bold>[<xref ref-type="bibr" rid="B16">16</xref>] is a genome indexing tool. In contrary to the other tools, it is designed to handle the long reads generated by the 454 sequencer.</p>
      <p><bold>MAQ</bold>[<xref ref-type="bibr" rid="B8">8</xref>] is a read indexing tool. The algorithm works by first constructing multiple hash tables for the reads. Then, the reference genome is scanned against the tables to find the mapping locations.</p>
      <p><bold>RMAP</bold>[<xref ref-type="bibr" rid="B9">9</xref>] is a read indexing tool. Similar to MAQ, RMAP pre-processes the reads to build the hash table, then the reference genome is scanned against the hash table to extract the mapping locations.</p>
      <p>Most of the newly developed tools are based on indexing the genome. Nevertheless, MAQ and RMAP are included in this study to investigate the effectiveness of our benchmarking tests on evaluating read indexing based tools. In addition, we investigate if there is any potential for the read indexing technique to be used in new tools.</p>
      <p>● Burrows-Wheeler Transform (BWT):</p>
      <p><bold>BWT</bold>[<xref ref-type="bibr" rid="B38">38</xref>] is an efficient data indexing technique that maintains a relatively small memory footprint when searching through a given data block. BWT was extended by Ferragina and Manzini [<xref ref-type="bibr" rid="B39">39</xref>] to a newer data structure, named FM-index, to support exact matching. By transforming the genome into an FM-index, the lookup performance of the algorithm improves for the cases where a single read matches multiple locations in the genome. However, the improved performance comes with a significantly large index build up time compared to hash tables.</p>
      <p>BWT based tools include the following:</p>
      <p><bold>Bowtie</bold>[<xref ref-type="bibr" rid="B11">11</xref>] starts by building an FM-index for the reference genome and then uses the modified Ferragina and Manzini [<xref ref-type="bibr" rid="B39">39</xref>] matching algorithm to find the mapping location. There are two main versions of Bowtie namely Bowtie and Bowtie 2. Bowtie 2 is mainly designed to handle reads longer than 50 bps. Additionally, Bowtie 2 supports features not handled by Bowtie. It was noticed that both versions had different performance in the experiments. Therefore, both versions are included in this study.</p>
      <p><bold>BWA</bold>[<xref ref-type="bibr" rid="B13">13</xref>] is another BWT based tool. The BWA tool uses the Ferragina and Manzini [<xref ref-type="bibr" rid="B39">39</xref>] matching algorithm to find exact matches, similar to Bowtie. To find inexact matches, the authors provided a new backtracking algorithm that searches for matches between substring of the reference genome and the query within a certain defined distance.</p>
      <p><bold>SOAP2</bold>[<xref ref-type="bibr" rid="B14">14</xref>] works differently than the other BWT based tools. It uses the BWT and the hash table techniques to index the reference genome in order to speed up the exact matching process. On the other hand, it applies a “split-read strategy”, i.e., splits the read into fragments based on the number of mismatches, to find inexact matches.</p>
      <p>In addition to providing different mapping techniques, each tool handles only a subset of the DNA sequences and the sequencing technologies features. Moreover, there are differences in the way the features are handled, which are summarized in Table <xref ref-type="table" rid="T1">1</xref>. For instance, BWA, SOAP, and GSNAP accept or reject an alignment based on counting the number of mismatches between the read and the corresponding genomic position. On the other hand, Bowtie, MAQ, and Novoalign use a quality threshold (i.e., alignment score) to perform the same function. The quality threshold is different from the mapping quality. The former is the probability of the occurrence of the read sequence given an alignment location while the latter is the Bayesian posterior probability for the correctness of the alignment location calculated from all of the alignments found for the read.</p>
      <table-wrap position="float" id="T1">
        <label>Table 1</label>
        <caption>
          <p>Features supported by the tools</p>
        </caption>
        <table frame="hsides" rules="groups" border="1">
          <colgroup>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
          </colgroup>
          <thead valign="top">
            <tr>
              <th align="left"> </th>
              <th align="center">
                <bold>Bowtie</bold>
              </th>
              <th align="center">
                <bold>Bowtie2</bold>
              </th>
              <th align="center">
                <bold>BWA</bold>
              </th>
              <th align="center">
                <bold>SOAP2</bold>
              </th>
              <th align="center">
                <bold>MAQ</bold>
              </th>
              <th align="center">
                <bold>RMAP</bold>
              </th>
              <th align="center">
                <bold>GSNAP</bold>
              </th>
              <th align="center">
                <bold>FANGS</bold>
              </th>
              <th align="center">
                <bold>Novoalign</bold>
              </th>
              <th align="center">
                <bold>mrFAST</bold>
              </th>
              <th align="center">
                <bold>mrsFAST</bold>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" valign="bottom">Seed mm.<hr/></td>
              <td align="center" valign="bottom">Up to 3<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">Any<hr/></td>
              <td align="center" valign="bottom">Up to 2<hr/></td>
              <td align="center" valign="bottom">Any<hr/></td>
              <td align="center" valign="bottom">Any<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">Non-seed mm.<hr/></td>
              <td align="center" valign="bottom">QS<hr/></td>
              <td align="center" valign="bottom">AS<hr/></td>
              <td align="center" valign="bottom">Count<hr/></td>
              <td align="center" valign="bottom">Count<hr/></td>
              <td align="center" valign="bottom">QS<hr/></td>
              <td align="center" valign="bottom">Count<hr/></td>
              <td align="center" valign="bottom">Count<hr/></td>
              <td align="center" valign="bottom">Count<hr/></td>
              <td align="center" valign="bottom">QS<hr/></td>
              <td align="center" valign="bottom">Count<hr/></td>
              <td align="center" valign="bottom">Count<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">Var. seed len.<hr/></td>
              <td align="center" valign="bottom">&gt; 5<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">Any<hr/></td>
              <td align="center" valign="bottom">&gt; 28<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">Mapping qual.<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">Yes<hr/></td>
              <td align="center" valign="bottom">Yes<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">Yes<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">Yes<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">Gapped align.<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">Yes<hr/></td>
              <td align="center" valign="bottom">Yes<hr/></td>
              <td align="center" valign="bottom">PE<hr/></td>
              <td align="center" valign="bottom">PE<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">Yes<hr/></td>
              <td align="center" valign="bottom">Yes<hr/></td>
              <td align="center" valign="bottom">Yes<hr/></td>
              <td align="center" valign="bottom">Yes<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">Colorspace<hr/></td>
              <td align="center" valign="bottom">Yes<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">Yes<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">Yes<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">Yes<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">Splicing<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">Yes<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">SNP tolerance<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">Yes<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
            </tr>
            <tr>
              <td align="left">Bisulphite reads</td>
              <td align="center"> </td>
              <td align="center"> </td>
              <td align="center"> </td>
              <td align="center"> </td>
              <td align="center"> </td>
              <td align="center">Yes</td>
              <td align="center">Yes</td>
              <td align="center"> </td>
              <td align="center">Yes</td>
              <td align="center">Yes</td>
              <td align="center"> </td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <p>PE: paired-end only, mm.: mismatches, QS: base quality score, count: total count of mismatches in the read, AS: alignment score, and empty cells mean not supported.</p>
        </table-wrap-foot>
      </table-wrap>
      <p>In some cases, the features are partially supported. For example, SOAP2 supports gapped alignment only for paired end reads, while BWA limits the gap size. Therefore, considering only one of the above features when comparing between the tools would lead to under- or over-estimation of the tools’ performance.</p>
    </sec>
    <sec>
      <title>Default options of the tested tools</title>
      <p>In general, using a tool’s default options yields a good performance while maintaining a good output quality. Most users use the tools with the default options or only tweak some of them. Therefore, it is important to understand the effect of using these options and the kind of compromises made while using them. For the nine tools considered in this paper, the most crucial default options are the following: </p>
      <p>● Maximum number of mismatches in the seed: the seed based tools use a default value of 2.</p>
      <p>● Maximum number of mismatches in the read: Bowtie2, BWA, and GSNAP determine the number of mismatches based on the read length. It is 10 for RMAP, 2 for mrsFAST, and 5 for SOAP2, FANGS, and mrFAST.</p>
      <p>● Seed length: It is 28 for MAQ, 32 for RMAP, and 28 for Bowtie. BWA disables seeding while SOAP2 considers the whole read as the seed.</p>
      <p>● Quality threshold: It is equal to 70 for MAQ and Bowtie while it depends on the read length and the genome size for Novoalign.</p>
      <p>● Splicing: This option is enabled for GSNAP.</p>
      <p>● Gapped alignment: It is enabled for Bowtie2, GSNAP, BWA, Novoalign and MAQ while it is disabled for SOAP2.</p>
      <p>● Minimum and maximum insert sizes for paired-end mapping: The insert size represents the distance between the two ends. The values used for the minimum and the maximum insert sizes are 0 and 250 for Bowtie and MAQ, 0 and 500 for BWA and Bowtie2, 400 and 500 for SOAP2, and 100 and 400 for RMAP. mrFAST and mrsFAST do not have default values for max and min insert sizes.</p>
      <p>Indeed, as will be shown in the results’ section, having different default values lead to different results for the same data set. Hence, using the same values when comparing between the tools is important.</p>
    </sec>
    <sec>
      <title>Evaluation criteria</title>
      <p>In general, the performance of the tools is evaluated by considering three aspects, namely, the <italic>throughput</italic> or the <italic>running time</italic>, the <italic>memory footprint</italic>, and the <italic>mapping percentage</italic>. The <italic>throughput</italic> is the number of base pairs mapped per second (bps/sec) while the <italic>memory footprint</italic> is the required memory by the tool to store/process the read/genome index. The <italic>mapping percentage</italic> is the percentage of reads each tool maps.</p>
      <p>The <italic>mapping percentage</italic> is further divided into a <italic>correctly mapped</italic> reads part and an <italic>error</italic> (false positives) part. There have been many definitions suggested for the <italic>error</italic> in previous studies. For instance, for the simulated reads, the naïve and most used definition for <italic>error</italic> is the percentage of reads mapped to the incorrect location (i.e., a location other than the genomic location the read was originally extracted from) [<xref ref-type="bibr" rid="B10">10</xref>,<xref ref-type="bibr" rid="B13">13</xref>]. Clearly, this definition is neither sufficient nor computationally correct. Figure <xref ref-type="fig" rid="F1">1</xref> gives an example explaining the drawbacks of this definition. After applying sequencing errors, the read does not exactly match the original genomic location. Since the tools do not have any <italic>a-priori</italic> information for the data, it would be impossible to choose the two mismatches location as the best mapping location over the exact matching one. Therefore, the naïve criteria would judge the tool as incorrectly mapping the read if the tool returned either alignment (2) or (3) while in fact it picked a more accurate matching.</p>
      <fig id="F1" position="float">
        <label>Figure 1</label>
        <caption>
          <p><bold>Evaluation criteria.</bold> An example showing how the different evaluation criteria work. In the upper part of the figure, the sequence in blue is the original genomic position where the simulated read was extracted from. After applying sequencing errors, the read does not exactly match to the original location (3 mismatches). In the lower part of the figure, three possible alignment locations for the read are shown with their mapping quality score (MQ). The naïve criterion would only consider the alignment (1) as the correct alignment. For Ruffalo et al. [<xref ref-type="bibr" rid="B32">32</xref>] criterion, if the used threshold is 30, then (1) is <italic>correctly mapped</italic> while (2) and (3) are <italic>incorrectly mapped-strict</italic>. On the other hand, if the threshold is 40, then (3) is considered as <italic>incorrectly mapped relaxed</italic>. Holtgrewe et al. [<xref ref-type="bibr" rid="B31">31</xref>] criterion in the oracle mode would detect (1) and (2) and consider them <italic>correctly mapped</italic> while (3) would be considered as <italic>incorrectly mapped</italic>.</p>
        </caption>
        <graphic xlink:href="1471-2105-14-184-1"/>
      </fig>
      <p>The naïve definition for the <italic>error</italic> was further modified by Ruffalo et al. [<xref ref-type="bibr" rid="B32">32</xref>] to develop a more concrete definition. The authors incorporated the mapping quality information such that a read is <italic>correctly mapped</italic> if it is mapped to the original genomic location while having a mapping quality greater than a certain threshold. They further categorized the incorrectly mapped reads into <italic>incorrectly mapped-strict</italic> and <italic>incorrectly mapped-relaxed</italic>. The <italic>incorrectly mapped-strict</italic> are the reads that were mapped with a quality higher than the threshold while not mapped to the original genomic location. On the other hand, the <italic>incorrectly mapped-relaxed</italic> are the reads that were mapped to an incorrect location with a quality higher than the threshold and there is no correct mapping for the read with a mapping quality higher than the threshold. As an example, in Figure <xref ref-type="fig" rid="F1">1</xref>, if the used threshold is 30, then the read would be considered <italic>correctly mapped</italic> if the tool returned alignment (1) while it would be considered as <italic>incorrectly mapped-strict</italic> if the tool returned either alignment (2) or (3). On the other hand, if the used threshold is 40, a read would be <italic>incorrectly mapped-relaxed</italic> if the tool returned alignment (3). Indeed, this is a valuable evaluation criterion, however, many tools, such as SOAP2, RMAP, and BWA, do not use quality scores in the mapping phase. In addition, not all of the tools report the mapping quality.</p>
      <p>Another definition was introduced by Holtgrewe et al. [<xref ref-type="bibr" rid="B31">31</xref>]. Unlike the previous works, the authors tried to find a gold standard for each read, where a gold standard refers to all of the possible matching intervals for each read with a maximum distance <italic>k</italic> from the read. To enumerate all of the possible matching intervals, the authors used RazerS to detect the initial seed location for each interval. Afterwards, they developed a method to find the boundary of the interval centered at the seed and with a maximum distance <italic>k</italic> from the read. They named the suggested evaluation method Rabema. As an example, a possible interval with <italic>k</italic>=3 would contain alignment (1) and (2) in Figure <xref ref-type="fig" rid="F1">1</xref>. Accordingly, Holtgrewe et al. defined the <italic>false negatives</italic> as the intervals missed by the mapper and the <italic>false positives</italic> as the intervals returned by the mapper and not included in the gold standard. However, consisting of seed detection phase and enumeration phase while depending on RazerS to return seed locations for the matching intervals makes Rabema impractical to apply on large genomes and long read lengths, e.g., RazerS took 25 hours to map 1 million reads of length 100 to the Human genome while doubling the running time when increasing the read length from 75 to 100 [<xref ref-type="bibr" rid="B21">21</xref>]. Therefore, Holtgrewe et al. suggested another mode, an <italic>oracle mode</italic>, which makes use of the original location of simulated reads. The <italic>oracle mode</italic> uses the original location as the seed location instead of using RazerS to detect the initial seed locations. However, this method is only suitable in case of <italic>a-priori</italic> knowledge that the possible mapping locations for a read are around the simulated location (e.g., alignment (3) in Figure <xref ref-type="fig" rid="F1">1</xref> would be missed in the <italic>oracle mode</italic>). Nevertheless, after the initial submission of this work, RazerS3 [<xref ref-type="bibr" rid="B26">26</xref>] was published; making a significant improvement in Rabema running time and elevating the slowness problem. Even though the suggested definition for a gold standard quantitatively estimates the sensitivity for each mapper, it suffers from a couple of drawbacks. First, the definition does not take into consideration whether the alignments are violating the mapping criterion for the mapper or not. For instance, in Figure <xref ref-type="fig" rid="F1">1</xref>, the sensitivity of the mapper would increase if it detected alignments (1), (2), and (3). However, if the mapping criterion for the mapper is to allow a maximum of two mismatches, then alignment (1) should have not been detected by the mapper and should be considered as a wrong alignment or error. Second, quality aware based tools, such as Bowtie, MAQ, and Novoalign, would be incorrectly evaluated by Rabema since they use the quality threshold to accept or reject a read instead of calculating the edit or hamming distance. Therefore, they might map a read with more mismatches than the limit allowed by Rabema.</p>
    </sec>
  </sec>
  <sec sec-type="methods">
    <title>Methods</title>
    <sec>
      <title>Benchmark design</title>
      <p>In this section, we present the features covered by our benchmarking suite. In addition, we explain how they were previously addressed by the tools we mention in this paper. However, two algorithmic features, namely SNPs and Splicing awareness, are not presented in the results section due to being supported only by one tool. The tests are categorized as follows: </p>
      <p>● Mapping options</p>
      <p><bold>Quality threshold</bold>: MAQ, Bowtie, and Novoalign use the quality threshold to determine the number of allowed mismatches. Therefore, setting a quality threshold is similar to explicitly setting the number of mismatches. However, there is no hard limit on the actual number of mismatches. The impact of varying the quality threshold while finding a mapping between the quality threshold and the number of mismatches has not been studied before.</p>
      <p><bold>Number of mismatches</bold>: Changing the number of allowed mismatches affects the percentage of mapped reads. This effect was studied in [<xref ref-type="bibr" rid="B10">10</xref>], however, the mismatches were generated uniformly on the genome which does not mimic real mismatches distribution.</p>
      <p><bold>Seed length</bold>: Seeding-based tools impose limits on the number of mismatches in the seed part. As a result, increasing or decreasing the length of the seed part affects the percentage of mapped reads. The effect of the seed length has not been studied in details before.</p>
      <p>● Input properties</p>
      <p><bold>Read length</bold>: The read length varies between 30bps for ABI’s SOLiD and Illumina’s Solexa sequencers up to 500 bps for Roche’s 454. Therefore, the impact of read length should be considered for throughput evaluation. Even though the effect of the read length was explored in several studies, the default options were usually used leading to incomparable trade-offs.</p>
      <p><bold>Paired-end reads</bold>: Mapping paired reads requires the mapping of both ends within a maximum distance between them. Hence, it adds a constraint when finding the corresponding genomic locations.</p>
      <p><bold>Genome type</bold>: The efficiency of most algorithms are tested by using the Human genome as the reference. However, each genome has its own properties such as the percentage of repeated regions and ambiguous characters. Therefore, using a single genome does not reveal the effect of these properties. To the best of our knowledge, BWA [<xref ref-type="bibr" rid="B13">13</xref>] was the only tool to test its performance on a large genome other than the Human.</p>
      <p>● Algorithmic features</p>
      <p><bold>Gapped alignment</bold>: is important for variant discovery due to the ability to detect indel polymorphism [<xref ref-type="bibr" rid="B30">30</xref>]. Bowtie2, GSNAP, Novoalign, BWA, and mrFAST are the only tools to support it for single-end reads while the remaining tools support it for paired-end only. However, from the results provided by the previous studies, it is not obvious how gapped alignment affects the performance of the tools in comparison to allowing only mismatches.</p>
      <p><bold>SNP awareness</bold>: Incorporating SNP information into mapping allows considering minor alleles as matches rather than mismatches. Currently, this feature is provided only by GSNAP. It was shown in [<xref ref-type="bibr" rid="B10">10</xref>] that integrating SNP information affected around 8% of the reads and allowed mapping 0.4% of unmapped reads.</p>
      <p><bold>Splicing awareness</bold>: Reads located across exon-exon junctions would be wrongly aligned using standard alignment algorithms. Splicing awareness is only required for certain types of data such as RNA-Seq data. The only tool that currently supports splicing while performing the mapping phase is GSNAP. It was shown in [<xref ref-type="bibr" rid="B10">10</xref>] that the alignment yield increased by 8-9% when splicing detection based on known splice junctions was introduced. However, there was only 0.3-0.6% increase in case of detecting novel splice junctions.</p>
      <p>● Scalability</p>
      <p>The scalability of the mapping tools may be different under different parallel settings. Many tools support multithreading, which is expected to yield linearly increasing speedup with the increase in the number of CPU cores. On the other hand, using multiprocessing is more general and may improve the throughput even for tools that do not support multithreading (e.g., MAQ and RMAP), where multiprocessing refers to using more than one process in a distributed memory fashion while communicating through a message passing interface.</p>
      <p>● Accuracy evaluation</p>
      <p>Each tool is expected to map a set of reads based on its mapping criteria. However, a subset of the reads might not be mapped (i.e., <italic>false negatives</italic>) due to using heuristics in the mapping algorithm or the default options limitations. Moreover, some of the tools map a subset of these reads while violating the mapping criteria.</p>
      <p>● Rabema evaluation</p>
      <p>Rabema benchmark enumerates all of the possible matching locations. Then, it evaluates whether the tool detected the possible matching locations with the specified error rate or not. Therefore, Rabema evaluation is a valuable one and helps in adding another perspective when comparing between the tools.</p>
    </sec>
    <sec>
      <title>Usecase: SNP calling</title>
      <p>SNP calling is the process of detecting genetic variations in a given genome. The genetic variations contribute to the generation of different phenotypes for the same gene, leading to increasing the risk of having complex diseases. Therefore, the discovery of SNPs is a very important process that needs to be done accurately. Many tools have been developed to detect SNPs including ssahaSNP [<xref ref-type="bibr" rid="B40">40</xref>] and SNPdetector [<xref ref-type="bibr" rid="B41">41</xref>]. These tools were developed to analyze the DNA sequences generated using either the Sanger or the direct PCR amplification methods. However, with the development of the next generation sequencing technology, new tools are required to analyze the new data [<xref ref-type="bibr" rid="B42">42</xref>]. The developed new tools work by first mapping sequences to a reference genome, then using statistical analysis methods to extract SNPs [<xref ref-type="bibr" rid="B42">42</xref>] after filtering out low-quality mismatches. Therefore, accurately mapping the reads to the reference genome is a very crucial task in the SNP calling pipeline.</p>
    </sec>
  </sec>
  <sec>
    <title>Results and discussion</title>
    <p>In this section, we present the results from our benchmarking tests. The experiments were performed on a cluster of quad-core AMD Opteron CPUs at 2.4 GHz with 32 GB of RAM. We used SOAP2 v2.20, Bowtie v0.12.6 and v2.0.0-beta5, BWA v0.5.0, MAQ v0.7.0, RMAP v2.05.0, FANGS v0.2.3, GSNAP v2010-07-27, Novoalign v2.07.0, and mrFAST and mrsFAST v2.5.0.4.</p>
    <p><bold>Performance evaluation</bold>: The performance is evaluated by considering two factors, namely, the mapping percentage and the throughput. The mapping percentage is the percentage of reads each tool maps while the throughput is the number of mapped base pairs per second (bps/sec). The throughput is calculated by dividing the number of reads mapped over the running time. For genome indexing based tools, the running time includes only the matching time while it includes the indexing and matching time for read indexing based tools. However, the running time for mrsFAST includes also the indexing time even though it is a genome indexing based tool. This is due to the dependence of the sensitivity of mrsFAST on the window size used in the indexing phase. Therefore, the index is rebuilt in most of the experiments to maintain a full sensitivity for mrsFAST.</p>
    <p>In addition, the mapping percentage is further divided into the following: </p>
    <p>● <italic>Correctly mapped reads</italic>: The percentage of reads mapped within the mapping criteria.</p>
    <p>● <italic>Error</italic>: The percentage of reads mapped while violating the mapping criteria. As shown in the background section, this definition provides another evaluation perspective that was not covered by older definitions.</p>
    <p>● <italic>Amb</italic>: The percentage of reads mapped to more than one location with the same number of mismatches. Most of the tools can return more than one mapping location for <italic>Amb</italic> reads if desired. However, RMAP only reports the number of <italic>Amb</italic> reads while not providing any information regarding the mapping location and the number of mismatches. Therefore, we will not be able to report the mismatches distribution for the RMAP reported <italic>Amb</italic> reads.</p>
    <p><bold>Data sets</bold>: We evaluated the tools on two types of data sets, namely, synthetic data and real data. The synthetic data set mimics reads generated from genomic sequencing while the real data set is for RNA-Seq. The data sets are further generated as follows: </p>
    <p>● <italic>Synthetic data</italic>: There is a number of tools available to extract synthetic, Fastq format, data sets from a reference genome including <monospace>wgsim</monospace>[<xref ref-type="bibr" rid="B43">43</xref>], <monospace>dwgsim</monospace>[<xref ref-type="bibr" rid="B44">44</xref>], <monospace>Mason</monospace>[<xref ref-type="bibr" rid="B45">45</xref>], and <monospace>ART</monospace>[<xref ref-type="bibr" rid="B46">46</xref>]. <monospace>wgsim</monospace> generates reads with uniform error distribution while <monospace>dwgsim</monospace> provides a uniformly increasing/decreasing error rate. On the other hand, <monospace>Mason</monospace> and <monospace>ART</monospace> mimic the error rates for Illumina and 454 sequencers. In this study, we are using <monospace>wgsim</monospace> and <monospace>ART</monospace> to generate the synthetic data from the Human genome. <monospace>wgsim</monospace> helps in providing a fair comparison between the tools by using a uniform error distribution model resulting in the same quality score for each base. Therefore, all of the tools can be allowed exactly the same number of mismatches regardless of the technique used to set the maximum number. For <monospace>wgsim</monospace>, the reads were generated with 0.09% SNP mutation rate, 0.01% indel mutation rate, 2% uniform sequencing base error rate, and with a maximum insert size of 500, which are the same parameters used in [<xref ref-type="bibr" rid="B13">13</xref>]. Additionally, Dohm et al. [<xref ref-type="bibr" rid="B47">47</xref>] showed that the sequencing error rate for Illumina changes between 0.3% for the beginning of the read and 3.8% at the end of the read. Therefore, a uniform sequencing error rate of 2% is acceptable. Moreover, according to the error rates and indels rate used by the <monospace>Mason</monospace> simulator [<xref ref-type="bibr" rid="B45">45</xref>], an indel rate of 0.01% is acceptable. We determined the number of reads to generate using <monospace>wgsim</monospace> based on the used tool and the experiment. On the other hand, <monospace>ART</monospace> does not explicitly allow the user to choose the number of generated reads. <monospace>ART</monospace> generates reads that cover the whole genome with a given coverage level. Therefore, to manage generating 1 million reads, we used <monospace>ART</monospace> to generate reads that cover the whole genome with 1x coverage. Then, we randomly selected 1 million reads from the output reads.</p>
    <p>● To make sure that the results are not affected by different <monospace>wgsim</monospace> runs, we generated 13 different <monospace>wgsim</monospace> data sets and ran a sample of the tools independently on each data set. The sample included BWA, GSNAP, Bowtie, Bowtie2, and SOAP2. We found that the maximum standard deviation from the average was 0.03 (results are not included). Since there is no significant change between the runs, we will only carry each experiment once on a single data set.</p>
    <p>● <italic>Real data</italic>: There are many types of real data sets such as RNA-Seq data, Chip-Seq data, and DNA sequences that are used in different applications. It is important in our evaluation process to choose the right data set type to better evaluate the applicability of the tools in the different applications. Therefore, we prefer to use RNA-Seq data sets as they are used in many applications including SNP and alternative splicing detection. The used data set consists of 1 million reads generated by Illumina sequencer after isolating mRNA from the Spretus mouse colon tissues. The mouse genome version mm9 was used as the reference genome. Indeed, as will be shown, the tools have similar behavior on both the mouse and the human genomes. Therefore, there is no contradiction in using the human genome for generating the synthetic data while the mouse genome is used for the real ones.</p>
    <p>First, we present the effect of the default options. The results for this experiment are given in Figures <xref ref-type="fig" rid="F2">2</xref> and <xref ref-type="fig" rid="F3">3</xref>. Figure <xref ref-type="fig" rid="F2">2</xref> shows the results when using <monospace>wgsim</monospace> to generate the synthetic data while Figure <xref ref-type="fig" rid="F3">3</xref> shows the results using <monospace>ART</monospace>. As stated previously, tools try to use the options that yield a good performance while maintaining a good output quality. For instance, as shown in Figure <xref ref-type="fig" rid="F2">2</xref>, Bowtie achieves a throughput of around 1.6·10<sup>5</sup>bps/s at the expense of mapping only 67.58% of the reads. On the other hand, BWA maps 91% of the reads at the expense of having a throughput of 0.1·10<sup>5</sup> bps/s. Additionally, SOAP and mrsFAST (Figures <xref ref-type="fig" rid="F2">2</xref> and <xref ref-type="fig" rid="F3">3</xref>) would look like that they provide the smallest mapping. However, percentage they are only allowing 2 mismatches while other tools such as mrFAST and GSNAP are allowing more than 5 mismatches. Therefore, using only the default options to build our conclusions would be misleading. Indeed, further experiments show that BWA obtains a high throughput when allowed to use the same options as Bowtie (see BWA-ND in Figure <xref ref-type="fig" rid="F2">2</xref>). Moreover, BWA achieves a higher throughput than Bowtie in other experiments. Therefore, it is important to use the same options to truly understand how the tools behave.</p>
    <fig id="F2" position="float">
      <label>Figure 2</label>
      <caption>
        <p><bold>Default options effect using </bold><monospace><bold>wgsim</bold></monospace><bold>.</bold> Mapping 1 million reads of length 125 extracted from the Human genome using <monospace>wgsim</monospace>. Each tool was allowed to use its own default options. BWA-ND refers to BWA’s results while using Bowtie’s default options which are 2 mismatches in the seed, 3 mismatches in the whole read, and no gapped alignment.</p>
      </caption>
      <graphic xlink:href="1471-2105-14-184-2"/>
    </fig>
    <fig id="F3" position="float">
      <label>Figure 3</label>
      <caption>
        <p><bold>Default options effect using ART.</bold> Mapping 1 million reads of length 100 extracted from the Human genome using <monospace>ART</monospace>. Each tool was allowed to use its own default options.</p>
      </caption>
      <graphic xlink:href="1471-2105-14-184-3"/>
    </fig>
    <p>In the remaining experiments, unless otherwise stated, the number of mismatches in the seed and in the whole read are fixed to 2 and 5, respectively, while the quality threshold is kept at 100. The minimum and maximum insert sizes allowed are 0 and 500, respectively. In addition, the splicing, SNPs, and gapped alignment options are disabled, unless otherwise stated. For the number of reported hits, tools are only allowed to report one location except for mrsFAST that does not have this option and report all of the mapping locations. The default values are used for the remaining options.</p>
    <sec>
      <title>Mapping options</title>
      <p><bold>Quality threshold</bold> is one of the two main metrics used for mismatch tolerance. The other main metric is the explicit specification of the number of mismatches. To compare fairly between the tools, a relationship between the two metrics should be found, which is the main target of this experiment. In this experiment, <monospace>wgsim</monospace> is used to generate the data set instead of using <monospace>ART</monospace> or a real one. The different base quality scores in real data cause quality threshold based tools to allow more mismatches than the other tools. For instance, when allowing a quality threshold of 70 and 5 mismatches for the remaining tools, Bowtie and MAQ map reads with up to 10 mismatches while the other tools are limited to 5 (results are not included). Therefore, MAQ and Bowtie had a mapping percentage larger than the other tools, hence, the comparison is not fair. Nevertheless, in the following, we show how the quality threshold can be used to mimic the behavior of the explicit specification of the number of mismatches.</p>
      <p>For <monospace>wgsim</monospace> generated synthetic data, quality thresholds of 60, 80, 100, 120, and 140 should correspond to 3, 4, 5, 6, and 7 mismatches. To assess our conclusion, we designed an experiment where all tools were allowed a maximum of 7 mismatches while using a quality threshold of 140. Figure <xref ref-type="fig" rid="F4">4</xref> shows that the tools map the reads with the same maximum number of mismatches while having similar mapping rates. However, the differences in the mapping rates are due to the pruning of the search space done by the default options for some of the tools. In addition, other tools incorrectly mapped some of the reads causing an increase in the mapping percentage. For instance, 0.6% of reported hits for MAQ and SOAP2 are considered as <italic>error</italic> (i.e., reads mapped while violating the mapping criteria) while Bowtie’s default options limit the allowed number of backtracks to find mismatches. On the other hand, GSNAP and mrsFAST map around 92% of the reads even though GSNAP reports <italic>error</italic> hits. This is due to being non-seed based tools, thus allowing more mismatches to be found in the first few base pairs. Additionally, mrsFAST is a full sensitive mapper, therefore, it can detect reads missed by other tools.</p>
      <fig id="F4" position="float">
        <label>Figure 4</label>
        <caption>
          <p><bold>Quality threshold vs. number of mismatches.</bold> Mapping 1 million reads of length 125 extracted using <monospace>wgsim</monospace> from the Human genome while allowing up to 7 mismatches and a quality threshold of 140. The <italic>error</italic> is 0.6% for SOAP2 and MAQ and 0.45% for GSNAP.</p>
        </caption>
        <graphic xlink:href="1471-2105-14-184-4"/>
      </fig>
      <p><bold>Number of mismatches</bold>: Not only does the number of mismatches affect the percentage of mapped reads, but also affects the throughput. In particular, the mapping percentage increases nonlinearly with the number of mismatches. Figure <xref ref-type="fig" rid="F5">5</xref> shows the effect of the number of mismatches in more details using a <monospace>wgsim</monospace> generated data set. There is a 20% increase in the percentage of mapped reads when allowing 3 mismatches instead of 2. On the other hand, there is less than 0.7% increase when allowing 7 mismatches instead of 6. In addition, the <italic>error</italic> percentage decreases for large number of mismatches. For instance, SOAP2’s <italic>error</italic> percentage is 21% when allowing 2 mismatches while it is reduced to 1% when allowing 6 mismatches. Additionally, mrsFAST mapped around 0.1-0.5% more reads than the remaining tools since it is a full sensitive mapper. From the throughput point of view, the tools behave differently. For instance, Bowtie, MAQ, RMAP, and mrsFAST are able to maintain almost the same throughput while the throughput increases for SOAP2 and GSNAP and decreases for BWA. The degradation in BWA’s performance is due to exceeding the default number of mismatches leading to excessive backtracking to find mismatch locations.</p>
      <fig id="F5" position="float">
        <label>Figure 5</label>
        <caption>
          <p><bold>Effect of changing the number of mismatches using a synthetic data set extracted using </bold><monospace><bold>wgsim</bold></monospace><bold>.</bold> Comparing the different tools while changing the total mismatches from 2 to 7. T-mms stands for the maximum allowed mismatches. A data set of 1 million reads of length 125 extracted from the Human genome using <monospace>wgsim</monospace> was used in this experiment.</p>
        </caption>
        <graphic xlink:href="1471-2105-14-184-5"/>
      </fig>
      <p>Additionally, we used a data set of 1 million reads of length 100 generated by <monospace>ART</monospace> to evaluate the tools. The results for this experiment are shown in Figure <xref ref-type="fig" rid="F6">6</xref>. Similar to the <monospace>wgsim</monospace> results, the increase in the percentage of mapped reads when allowing 2 mismatches instead of 3 is larger than the increase when allowing 7 mismatches instead of 6. Unlike <monospace>wgsim</monospace> results, Bowtie maintains a higher throughput than Bowtie2 for the different number of mismatches. This is due to the difference in the read length between <monospace>wgism</monospace> and <monospace>ART</monospace> data sets (100 for <monospace>ART</monospace> instead of 125). Moreover, Bowtie uses the quality threshold while Bowtie2 does not.</p>
      <fig id="F6" position="float">
        <label>Figure 6</label>
        <caption>
          <p><bold>Effect of changing the number of mismatches using a synthetic data set extracted using </bold><monospace><bold>ART</bold></monospace><bold>.</bold> Comparing the different tools while changing the total mismatches from 2 to 7. T-mms stands for the maximum allowed mismatches. A data set of 1 million reads of length 100 extracted from the Human genome using <monospace>ART</monospace> was used in this experiment.</p>
        </caption>
        <graphic xlink:href="1471-2105-14-184-6"/>
      </fig>
      <p>To further understand the behavior of the tools, the same set of experiments is applied on the mouse mRNA real data set. The results given in Figure <xref ref-type="fig" rid="F7">7</xref> show that the <italic>error</italic> percentage for GSNAP still decreases for large number of mismatches. In addition, there is a small reduction in BWA’s throughput for large number of mismatches. Interestingly, the throughput for mrsFAST is different between the synthetic data and the real data. In the synthetic data set, mrsFAST’s throughput is higher than RMAP while maintaining the same throughput across the different number of mismatches. On the other hand, on the real data, the throughput decreases with the increase in the number of mismatches. In addition, there is a 7x reduction in the throughput between 4 t-mms and 5 t-mms. To maintain a full sensitivity for small read lengths while allowing a large number of mismatches, mrsFAST requires the use of a small window size when building the index (window size of 8 for 5 t-mms instead of 10 for 4 t-mms). The smaller the window size, the longer it takes to process the index. Additionally, there is a limit on the window size (min 8 and max 14). Therefore, mrsFAST starts to lose its sensitivity for detecting mapping locations for 6 and 7 t-mms.</p>
      <fig id="F7" position="float">
        <label>Figure 7</label>
        <caption>
          <p><bold>Effect of changing the number of mismatches using a real data set.</bold> Comparing the different tools while changing the total mismatches from 2 to 7. T-mms stands for the maximum allowed mismatches. A real mRNA data set of 1 million reads of length 51 bps extracted from the Spretus mouse strain and mapped against the mouse genome version mm9 was used in this experiment.</p>
        </caption>
        <graphic xlink:href="1471-2105-14-184-7"/>
      </fig>
      <p><bold>Seed length</bold>: Theoretically, when fixing the number of allowed mismatches in the seed and in the whole read, changing the seed length affects the mapping results. Specifically, a shorter seed allows more mismatches in the remaining part of the read to be found. Therefore, the percentage of mapped reads would increase even though the throughput would decrease. On the other hand, having a longer seed would result in pruning some parts of the search tree as soon as possible; leading to throughput improvement. The aim of this experiment is to study this trade off. As shown in the results given in Figure <xref ref-type="fig" rid="F8">8</xref> using a <monospace>wgism</monospace> data set, the tools behave as expected. However, there are some exceptions. For instance, when increasing the seed length from 32 to 36 the percentage of mapped reads for SOAP2 and Bowtie decreases, however the throughput is not affected. In addition, there is a 0.8% increase in the percentage of mapped reads for Bowtie when increasing the seed length from 28 to 32. This behavior is due to the backtracking property that stops once a certain limit is reached. Therefore, as a result of having less erroneous bases in the seed part, Bowtie can continue more in the depth first search without exceeding the backtracking limit.</p>
      <fig id="F8" position="float">
        <label>Figure 8</label>
        <caption>
          <p><bold>Effect of changing the seed length using a synthetic data set.</bold> The effect of changing the seed length on the BWT based tools. The tools were used to map 16 million reads of length 70 bps on the Human genome. SOAP2 does not support seed length &lt; 28.</p>
        </caption>
        <graphic xlink:href="1471-2105-14-184-8"/>
      </fig>
      <p>We also carried out the same experiment on the real mouse mRNA data set. The results given in Figure <xref ref-type="fig" rid="F9">9</xref> show that the same behavior for Bowtie is still obtained on real data. However, Bowtie has only 0.01% increase when increasing the seed length from 28 to 32 instead of the 0.8% obtained in synthetic data.</p>
      <fig id="F9" position="float">
        <label>Figure 9</label>
        <caption>
          <p><bold>Effect of changing the seed length using a real data set.</bold> The effect of changing the seed length on the BWT based tools. The tools were used to map real mRNA data set of 1 million reads of length 51 bps extracted from the Spretus mouse strain on the mouse genome version mm9. SOAP2 does not support seed length &lt; 28.</p>
        </caption>
        <graphic xlink:href="1471-2105-14-184-9"/>
      </fig>
    </sec>
    <sec>
      <title>Input properties</title>
      <p><bold>Read length</bold>: Longer reads tend to have more mismatches beside requiring more time to be fully mapped [<xref ref-type="bibr" rid="B48">48</xref>]. In general, for a fixed number of mismatches, increasing the read length decreases the percentage of mapped reads. Therefore, the aim of this experiment is to understand the read length effect. The results in Figure <xref ref-type="fig" rid="F10">10</xref> show that the mapping percentage decreases with the increase in the read length while the <italic>error</italic> percentage increases. As an example, 95% of FANGS’ output for read length 500 is <italic>error</italic> compared to 12% of its output for read length 200. This is due to the increase of the erroneous bases with the increase of the read length. Therefore, it becomes harder to map the reads with the specified mapping criteria. In addition, Bowtie, Bowtie2, and BWA were the only short sequence mapping tools that managed to map long reads. In particular, the max read length was 128 for MAQ, 300 for RMAP, and 200 for GSNAP, 199 for mrsFAST, while SOAP2 took more than 24 hours to map the reads with length 300 and hence not reported. On the other hand, mrsFAST’s run on read length 36 was suddenly terminated. This is probably due to the small read length and the large number of mismatches. From the throughput point of view, tools do not maintain the same behavior. For instance, the throughput of Bowtie and SOAP2 decreases for long read lengths. This is due to the backtracking property and the split strategy [<xref ref-type="bibr" rid="B14">14</xref>] used by Bowtie and SOAP2, respectively, to find inexact matches. Moreover, Bowtie is better than Bowtie2 for read lengths 36 and 70. On the other hand, even though the throughput of BWA and GSNAP increases with the read length, it starts to decrease for read length 500 and 200, respectively. GSNAP works by combining position lists to create candidate mapping regions. Therefore, for long reads, the throughput decreases due to the increase in the work needed to generate and combine position lists. For mrsFAST, the throughput increases with the read length since the available mapping locations for a read are less for longer reads in comparison to small ones.</p>
      <fig id="F10" position="float">
        <label>Figure 10</label>
        <caption>
          <p><bold>Effect of changing the read length using a synthetic data set extracted using </bold><monospace><bold>wgsim</bold></monospace><bold>.</bold> The effect of changing the read length from 36 to 500. The reads were extracted from the Human genome. RMAP and MAQ are slower than the other tools. Therefore, 1 million reads were used to test MAQ and RMAP while 16 million reads were used for the remaining ones.</p>
        </caption>
        <graphic xlink:href="1471-2105-14-184-10"/>
      </fig>
      <p>Additionally, we carried out the same experiment on synthetic data sets generated by the <monospace>ART</monospace> tool. We did not carry out the experiment on a real data set due to the lack of proper real data sets that have different read lengths, have exactly the same coverage, generated by the same sequencer, and extracted from the same tissue. The results for this experiment are shown in Figure <xref ref-type="fig" rid="F11">11</xref>. Similar to <monospace>wgsim</monospace> results, the <italic>error</italic> percentage increases with the increase in the read length for GSNAP and SOAP2. Interestingly, the percentage of mapped reads for Bowtie, MAQ, and Novoalign are not significantly affected with the increase in the read length in comparison to the other tools. This is due to the fact that the longer the read is the smaller the quality score becomes for the bases at the end of the reads [<xref ref-type="bibr" rid="B49">49</xref>]. Therefore, Bowtie, MAQ, and Novoalign can map the reads with more mismatches while maintaining the same quality threshold.</p>
      <fig id="F11" position="float">
        <label>Figure 11</label>
        <caption>
          <p><bold>Effect of changing the read length using a </bold><monospace><bold>ART</bold></monospace><bold> generated data set.</bold> The effect of mapping 1 million reads extracted by <monospace>ART</monospace> from the mouse genome version mm9 while changing the read length from 36 to 100.</p>
        </caption>
        <graphic xlink:href="1471-2105-14-184-11"/>
      </fig>
      <p><bold>Paired-end</bold>: Mapping paired-end reads affects the performance of the tools due to the added constraint of mapping both ends within a maximum insert size. Therefore, in this experiment, we want to understand how the performance of the tools is affected while mapping paired-end reads instead of single-end ones. The results in Figure <xref ref-type="fig" rid="F12">12</xref> (ungapped bars) show that the throughput decreases for all of the tools while mapping paired-end reads, except for BWA which was able to maintain almost the same throughput while MAQ had a small increase. Even though all of the algorithms work by finding mapping locations for each end alone and then finding the best pair, GSNAP was the only tool to face a drop by 90% in the throughput. Additionally, the percentage of mapped reads is less when mapping paired-end read due to applying the same mapping criteria for single-end reads on paired-end reads.</p>
      <fig id="F12" position="float">
        <label>Figure 12</label>
        <caption>
          <p><bold>Effect of using paired-end data using a </bold><monospace><bold>wgsim</bold></monospace><bold> synthetic data set.</bold> The effect of mapping paired-end reads of length 70 to the Human genome. 1 million reads were used to test RMAP and MAQ while 16 million reads were used to test the other tools. SE and PE refer to single end and paired end, respectively. <italic>Error</italic> is only provided for PE due to exceeding the allowed insert size mrsFAST is used for the ungapped alignment and mrFAST is used for the gapped one.</p>
        </caption>
        <graphic xlink:href="1471-2105-14-184-12"/>
      </fig>
      <p>Even though the maximum insert size was 500, tools such as BWA, SOAP, and GSNAP mapped paired-end reads while exceeding the maximum insert size, except for Novoalign that explicitly requires the user to set the standard deviation for the insert size.</p>
      <p><bold>Genome type</bold>: To capture the effect of the genome type, we designed an experiment in which the Human, Chimpanzee, Mouse, Zebrafish, Lancelet, A. mellifera, and C. elegans genomes were used as reference genomes. The sizes of these genomes are 3.1Gbps, 3.0Gpbs, 2.5Gbps, 1.5Gbps, 0.9Gbps, 0.57Gbps, and 0.1Gbps, respectively. Theoretically, for genome indexing based tools, the throughput is expected to slightly increase with the decrease in the genome size. However, the results in Figure <xref ref-type="fig" rid="F13">13</xref> show that some tools do not act as expected. For instance, there is a difference in the throughput between the Chimpanzee and the Human genomes even though their sizes are similar. In addition, SOAP2’s and Novoalign’s throughput decreases significantly for the Zebrafish genome while GSNAP did not finish its run on the same genome albeit running for two days. The reason for this behavior is the large repetition rate in the Zebrafish genome. For instance, while mapping 1 million randomly generated reads from the Zebrafish genome, around 600 reads were mapped to more than 100,000 locations in comparison to the Lancelet with the maximum number of locations is around 10,000 for only 1 read. Additionally, mrsFAST detects more than 8 billions locations when mapping the Zebrafish data set while mapping reads to the Zebrafish genome where it detected only 24 millions when mapping the Lancelet data set. Hence, for GSNAP, the large repetition rates lead to long genomic position lists; resulting in a significant slow down of GSNAP. Another interesting result is the ability of most of the tools to map more than 96% of the Zebrafish data set compared to around 91% of the Human and 89% for the Lancelet data sets. The large mapping percentage is also due to the large repetition rate. Hence, due to synthetically generating the reads, large number of reads are generated from the repeated regions. As a result, the probability of finding a mapping location increases. In addition to the above results, it is also noticed that Bowtie scales better than Bowtie2 on different genomes. Moreover, MAQ’s throughput for the C. elegans genome is larger than Novoalign while maintaining a comparable mapping percentage. Therefore, read indexing based tools might perform better than some genome indexing based tools for small genomes albeit being very slow for large genomes.</p>
      <fig id="F13" position="float">
        <label>Figure 13</label>
        <caption>
          <p><bold>Effect of changing the genome type using </bold><monospace><bold>wgsim</bold></monospace><bold> generated synthetic data set.</bold> 16 million reads of length 70 bps were generated from the Human, Zebrafish, Lancelet, Chimpanzee, A. mellifera, and C. elegans genomes using <monospace>wgsim</monospace> for this test. 1 million reads were used for MAQ and RMAP.</p>
        </caption>
        <graphic xlink:href="1471-2105-14-184-13"/>
      </fig>
      <p>To further understand the behavior of the tools, we generated a data set of 1 million reads using <monospace>ART</monospace>. Figure <xref ref-type="fig" rid="F14">14</xref> shows the results using the <monospace>ART</monospace> data sets. Similar to <monospace>wgsim</monospace> results, SOAP2 and Novoalign still encounter a significant decrease in the throughput when mapping the Zebrafish data set. Additionally, Bowtie still scales better than Bowtie2 with the different genomes. Interestingly, GSNAP finished its run on the Zebrafish data set even though it still faces a decrease in the throughput. On the other hand, unlike <monospace>wgsim</monospace> results, mrsFAST encounters a decrease in the throughput when mapping the Zebrafish data set. It is not obvious why mrsFAST encounters such a decrease even though its performance on the other genomes remains the same regardless of using <monospace>wgsim</monospace> or <monospace>ART</monospace>.</p>
      <fig id="F14" position="float">
        <label>Figure 14</label>
        <caption>
          <p><bold>Effect of changing the genome type using </bold><monospace><bold>ART</bold></monospace><bold>generated synthetic data set.</bold> 1 million reads of length 70bps were generated from the Human, Zebrafish, Lancelet, Chimpanzee, A. mellifera, and C. elegans genomes using <monospace>ART</monospace>.</p>
        </caption>
        <graphic xlink:href="1471-2105-14-184-14"/>
      </fig>
      <p>In general, the throughput of the tools increases when using <monospace>ART</monospace> instead of <monospace>wgsim</monospace> data sets. However, the relative performance between the tools and the different genomes is still the same.</p>
    </sec>
    <sec>
      <title>Algorithmic features</title>
      <p><bold>Gapped alignment</bold> should improve the mapping percentage albeit decreasing the throughput. We designed an experiment to understand the effect of gapped alignment. Tools were used to map synthetically generated reads of length 70 to the Human genome while allowing one gap of length 3. However, mrFAST does not provide any option to limit the gap size. The results in Figure <xref ref-type="fig" rid="F12">12</xref> show that the mapping percentage increases by 4% for SOAP2 and 1.5% for mrFAST in case of gapped alignment, while there is no change for BWA and GSNAP. However, there is a drop of 15% and 75% in the throughput for BWA and GSNAP, respectively. The decrease for GSNAP is due to the overhead added to the algorithm to find pairs of candidate regions that co-localize within a maximum allowed gap size. The algorithm tries to find a crossover between the two regions without exceeding the maximum number of mismatches leading to a significant decrease in the throughput. Interestingly, the decrease in the throughput is less for the real data set as shown in Figure <xref ref-type="fig" rid="F15">15</xref>. However, the decrease is still larger than the decrease in the throughput for the remaining tools.</p>
      <fig id="F15" position="float">
        <label>Figure 15</label>
        <caption>
          <p><bold>Effect of enabling gapped alignment using a real data set.</bold> mRNA data set of 1 million reads extracted from the Spretus mouse strain is used in this experiment and mapped on the mouse genome version mm9.</p>
        </caption>
        <graphic xlink:href="1471-2105-14-184-15"/>
      </fig>
      <p>For the real data set, mrsFAST (mrFAST) is not included in the results since the minimum allowed window size in the indexing phase does not guarantee a full sensitivity for mrFAST.</p>
    </sec>
    <sec>
      <title>Scalability</title>
      <p>In this experiment, we tested the multithreading behavior. In addition, pMap [<xref ref-type="bibr" rid="B50">50</xref>] was used to run multiple instances of each tool on a number of processors on a single node to test the multiprocessing effect. pMap is an open-source MPI-based tool that enables parallelization of existing short sequence mapping tools by partitioning the reads and distributing the work among the different processors. A single node was used in the multiprocessing experiment to understand the effect of a good implementation of multithreading. The results for both experiments are given in Figure <xref ref-type="fig" rid="F16">16</xref>. We can observe from the multithreading results that the tools had almost a linear speedup up to 4 threads. However, when increasing to 8 threads, Bowtie was the only tool to achieve 8x speedup. In addition, BWA had a similar speedup in both multithreading and multiprocessing. For the multiprocessing experiment, FANGS achieved almost a 6x speedup while there was a small improvement for MAQ and RMAP. For the remaining tools, most of them were able to maintain more than a 5x speedup for 8 processors, however this is less than a linear speedup. One reason for this degradation is the overhead of the distribution and merging steps required by distributed memory systems. As expected, we can notice that multithreading provides almost a linear speedup, however, it is limited by the number of cores.</p>
      <fig id="F16" position="float">
        <label>Figure 16</label>
        <caption>
          <p><bold>Speedup when using multithreading and multiprocessing.</bold> 16 million reads of length 125 were mapped to the Human genome while using multithreading (the upper figure) or multiprocessing (the lower figure).</p>
        </caption>
        <graphic xlink:href="1471-2105-14-184-16"/>
      </fig>
      <p>In general, using multiprocessing provides more degrees of freedom by parallelizing tools that do not support multithreading and by making use of the available computational resources.</p>
      <p>Another important observation is the effect of the indexing method on the total speedup. Read indexing based tools did not have any significant speedup in comparison to the genome indexing based ones which had more than 5x speedup. Therefore, genome indexing is more efficient in case of designing a read partitioning parallelism based tool.</p>
    </sec>
    <sec>
      <title>Accuracy evaluation</title>
      <p>The aim of this experiment is to evaluate the percentage of reads each tool actually maps out of the set of the mappable reads. A read is mappable if the distance between the read and its original genomic location does not violate the mapping criteria. In this experiment, the reads were generated using <monospace>ART</monospace> to measure the sensitivity of the tools in case of varying the distribution of mismatches. The used mapping criterion was fixed to five mismatches for Bowtie2, SOAP, GSNAP, BWA, mrsFAST, and RMAP. For the remaining tools, a quality threshold of 100 was used. In general, gapped alignment was disabled. The results given in Table <xref ref-type="table" rid="T2">2</xref> show that Bowtie did not map around 0.14% of the set of the mappable reads (i.e., <italic>false negatives</italic>) while Bowtie2 did not map around 7.71%. Moreover, Bowtie mapped 93% of the reads while Bowtie2 only mapped 85%. Nevertheless, the sensitivity of both tools can be increased by changing the default options at the expense of significantly decreasing the throughput. Interestingly, BWA, SOAP2, and mrsFAST mapped all of the mappable reads without any <italic>error</italic>.</p>
      <table-wrap position="float" id="T2">
        <label>Table 2</label>
        <caption>
          <p>Sensitivity evaluation of the different tools</p>
        </caption>
        <table frame="hsides" rules="groups" border="1">
          <colgroup>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
          </colgroup>
          <thead valign="top">
            <tr>
              <th align="left"> </th>
              <th align="left"> </th>
              <th align="center">
                <bold>Bowtie</bold>
              </th>
              <th align="center">
                <bold>Bowtie2</bold>
              </th>
              <th align="center">
                <bold>BWA</bold>
              </th>
              <th align="center">
                <bold>SOAP2</bold>
              </th>
              <th align="center">
                <bold>MAQ</bold>
              </th>
              <th align="center">
                <bold>RMAP</bold>
              </th>
              <th align="center">
                <bold>GSNAP</bold>
              </th>
              <th align="center">
                <bold>Novoalign</bold>
              </th>
              <th align="right">
                <bold>mrsFAST</bold>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" valign="bottom">Mapped<hr/></td>
              <td align="center" valign="bottom">Expected<hr/></td>
              <td align="center" valign="bottom">93.57<hr/></td>
              <td align="center" valign="bottom">93.25<hr/></td>
              <td align="center" valign="bottom">91.29<hr/></td>
              <td align="center" valign="bottom">91.29<hr/></td>
              <td align="center" valign="bottom">93.57<hr/></td>
              <td align="center" valign="bottom">90.12<hr/></td>
              <td align="center" valign="bottom">93.25<hr/></td>
              <td align="center" valign="bottom">96.18<hr/></td>
              <td align="right" valign="bottom">93.25<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">Actual<hr/></td>
              <td align="center" valign="bottom">93.43<hr/></td>
              <td align="center" valign="bottom">85.54<hr/></td>
              <td align="center" valign="bottom">91.29<hr/></td>
              <td align="center" valign="bottom">91.29<hr/></td>
              <td align="center" valign="bottom">92.92<hr/></td>
              <td align="center" valign="bottom">82.53<hr/></td>
              <td align="center" valign="bottom">93.25<hr/></td>
              <td align="center" valign="bottom">96.02<hr/></td>
              <td align="right" valign="bottom">93.25<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">Error<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">0.73<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">0.03<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="right" valign="bottom"> <hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">Unmapped<hr/></td>
              <td align="center" valign="bottom">Expected<hr/></td>
              <td align="center" valign="bottom">6.43<hr/></td>
              <td align="center" valign="bottom">6.75<hr/></td>
              <td align="center" valign="bottom">8.71<hr/></td>
              <td align="center" valign="bottom">8.71<hr/></td>
              <td align="center" valign="bottom">6.43<hr/></td>
              <td align="center" valign="bottom">9.88<hr/></td>
              <td align="center" valign="bottom">6.75<hr/></td>
              <td align="center" valign="bottom">3.82<hr/></td>
              <td align="right" valign="bottom">6.75<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">Actual<hr/></td>
              <td align="center" valign="bottom">6.25<hr/></td>
              <td align="center" valign="bottom">6.68<hr/></td>
              <td align="center" valign="bottom">8.32<hr/></td>
              <td align="center" valign="bottom">6.83<hr/></td>
              <td align="center" valign="bottom">5.08<hr/></td>
              <td align="center" valign="bottom">8.29<hr/></td>
              <td align="center" valign="bottom">3.66<hr/></td>
              <td align="center" valign="bottom">3.81<hr/></td>
              <td align="right" valign="bottom">6.62<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">Error<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">1.73<hr/></td>
              <td align="center" valign="bottom">1.25<hr/></td>
              <td align="center" valign="bottom">1.5<hr/></td>
              <td align="center" valign="bottom">2.97<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="right" valign="bottom"> <hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">Reported mapped<hr/></td>
              <td align="center" valign="bottom"> <hr/></td>
              <td align="center" valign="bottom">93.61<hr/></td>
              <td align="center" valign="bottom">85.61<hr/></td>
              <td align="center" valign="bottom">91.68<hr/></td>
              <td align="center" valign="bottom">93.17<hr/></td>
              <td align="center" valign="bottom">94.27<hr/></td>
              <td align="center" valign="bottom">84.11<hr/></td>
              <td align="center" valign="bottom">96.34<hr/></td>
              <td align="center" valign="bottom">96.03<hr/></td>
              <td align="right" valign="bottom">93.38<hr/></td>
            </tr>
            <tr>
              <td align="left">Reported correct</td>
              <td align="center"> </td>
              <td align="center">93.61</td>
              <td align="center">85.61</td>
              <td align="center">91.68</td>
              <td align="center">90.71</td>
              <td align="center">93.02</td>
              <td align="center">82.61</td>
              <td align="center">93.37</td>
              <td align="center">96.03</td>
              <td align="right">93.38</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <p>Evaluating the sensitivity of the tools on a data set of 1 million reads of length 70 generated by <monospace>ART</monospace>. The numbers are in percentage. The Reported mapped percentage is the total percentage of reads mapped by each tool. It is equal to Actual Mapped + (Expected Unmapped- Actual Unmapped) while Reported correct is the total number of correctly mapped reads.</p>
        </table-wrap-foot>
      </table-wrap>
      <p>In general, the tools were able to map a percentage of the unmappable reads, however, it was mapped with a large <italic>error</italic> percentage. For instance, even though GSNAP mapped around 3% of the unmappable reads, only 0.03% of them were correctly mapped. Therefore, even though GSNAP maps the largest percentage of reads, other tools such as BWA and Novoalign are more accurate and precise than GSNAP.</p>
      <p>It is important to note that the percentage of reads mapped from the unmappable reads is similar to the percentage of <italic>incorrectly mapped reads-relaxed</italic> given in Ruffalo et al. work [<xref ref-type="bibr" rid="B32">32</xref>]. However, they define a read to be unmappable if it has a mapping quality less than a certain threshold while we consider it as unmappable if it violates the mapping criteria for the tool.</p>
    </sec>
    <sec>
      <title>Rabema evaluation</title>
      <p>The aim of this experiment is to evaluate the tools based on the number of reads with a specified error rate the tool has been able to map. Unlike the previous experiment, this experiment does not take into consideration how each tool works. Therefore, it is similar to evaluating the efficiency of the different mapping techniques (i.e., seeding vs. non-seeding, quality scores vs. mismatches). The experiment is performed on a synthetic data set of length 100 extracted from the Human genome using <monospace>ART</monospace>. The maximum allowed error rate was 5%, i.e., 5 mismatches in that case. The results for this experiment are shown in Table <xref ref-type="table" rid="T3">3</xref>. Rabema takes the output SAM file from each tool as the input. However, MAQ and RMAP do not create the output in the SAM format. Therefore, there are not included. Additionally, GSNAP results are not included since the output GSNAP SAM file contains messed up quality scores.</p>
      <table-wrap position="float" id="T3">
        <label>Table 3</label>
        <caption>
          <p>Rabema evaluation</p>
        </caption>
        <table frame="hsides" rules="groups" border="1">
          <colgroup>
            <col align="right"/>
            <col align="right"/>
            <col align="right"/>
            <col align="right"/>
            <col align="right"/>
            <col align="right"/>
            <col align="right"/>
            <col align="right"/>
          </colgroup>
          <thead valign="top">
            <tr>
              <th align="right">
                <bold>Error</bold>
              </th>
              <th align="right">
                <bold>#Reads</bold>
              </th>
              <th align="right">
                <bold>Bowtie</bold>
              </th>
              <th align="right">
                <bold>Bowtie2</bold>
              </th>
              <th align="right">
                <bold>BWA</bold>
              </th>
              <th align="right">
                <bold>SOAP2</bold>
              </th>
              <th align="right">
                <bold>Novoalign</bold>
              </th>
              <th align="right">
                <bold>mrsFAST</bold>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="right" valign="bottom">0<hr/></td>
              <td align="right" valign="bottom">832<hr/></td>
              <td align="right" valign="bottom">100<hr/></td>
              <td align="right" valign="bottom">100<hr/></td>
              <td align="right" valign="bottom">100<hr/></td>
              <td align="right" valign="bottom">100<hr/></td>
              <td align="right" valign="bottom">97.24<hr/></td>
              <td align="right" valign="bottom">100<hr/></td>
            </tr>
            <tr>
              <td align="right" valign="bottom">1<hr/></td>
              <td align="right" valign="bottom">6316<hr/></td>
              <td align="right" valign="bottom">96.99<hr/></td>
              <td align="right" valign="bottom">100<hr/></td>
              <td align="right" valign="bottom">100<hr/></td>
              <td align="right" valign="bottom">100<hr/></td>
              <td align="right" valign="bottom">98.29<hr/></td>
              <td align="right" valign="bottom">100<hr/></td>
            </tr>
            <tr>
              <td align="right" valign="bottom">2<hr/></td>
              <td align="right" valign="bottom">23495<hr/></td>
              <td align="right" valign="bottom">97.30<hr/></td>
              <td align="right" valign="bottom">97.16<hr/></td>
              <td align="right" valign="bottom">100<hr/></td>
              <td align="right" valign="bottom">99.97<hr/></td>
              <td align="right" valign="bottom">98.70<hr/></td>
              <td align="right" valign="bottom">100<hr/></td>
            </tr>
            <tr>
              <td align="right" valign="bottom">3<hr/></td>
              <td align="right" valign="bottom">55941<hr/></td>
              <td align="right" valign="bottom">97.00<hr/></td>
              <td align="right" valign="bottom">95.92<hr/></td>
              <td align="right" valign="bottom">99.85<hr/></td>
              <td align="right" valign="bottom">95.78<hr/></td>
              <td align="right" valign="bottom">98.84<hr/></td>
              <td align="right" valign="bottom">100<hr/></td>
            </tr>
            <tr>
              <td align="right" valign="bottom">4<hr/></td>
              <td align="right" valign="bottom">98063<hr/></td>
              <td align="right" valign="bottom">96.48<hr/></td>
              <td align="right" valign="bottom">94.22<hr/></td>
              <td align="right" valign="bottom">99.49<hr/></td>
              <td align="right" valign="bottom">96.43<hr/></td>
              <td align="right" valign="bottom">99.02<hr/></td>
              <td align="right" valign="bottom">100<hr/></td>
            </tr>
            <tr>
              <td align="right">5</td>
              <td align="right">135096</td>
              <td align="right">95.63</td>
              <td align="right">91.14</td>
              <td align="right">98.76</td>
              <td align="right">97.34</td>
              <td align="right">99.12</td>
              <td align="right">100</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <p>Rabema evaluation results on the different tools using a data set of 1 million reads of length 100 extracted from the Human genome using <monospace>ART</monospace>. The maximum allowed error is 5% (i.e., 5 mismatches in this case). #Reads is the number of reads expected to be mapped with certain Error. The remaining columns for the tools show the percentage of reads detected by each tool out of the #Reads. Invalid mappings (i.e., reads mapped with errors more than the assigned error rate threshold) for Bowtie and Novoalign are 567,531 and 587,542 reads, respectively.</p>
        </table-wrap-foot>
      </table-wrap>
      <p>As shown in the results, both Novoalign and Bowtie are evaluated as mapping invalid reads. This is because Rabema does not take the quality scores into consideration and just calculate the edit distance. Therefore, from the mismatches perspective, the reads have more than 5 mismatches. However, from the quality threshold perspective, they have a quality threshold less than the specified one. Therefore, at the end, they are valid mappings.</p>
      <p>In general, BWA has been able to detect almost all of the reads with the correct error rate. This suggest that most of the mismatches exist at the end of the read. In addition, the seeding technique is a valid method specially if it can speed up the mapping process.On the other hand, even though SOAP2 is a seed based tool, similar to BWA, it could not detect as much correct reads as BWA. Bowtie2 missed some of the reads, however, it can detect them by changing its sensitivity at the cost of increasing the running time. On the other hand, mrsFAST mapped all of the reads with the correct error rate since it is a full sensitive mapper.</p>
    </sec>
    <sec>
      <title>Use case: SNP calling</title>
      <p>The aim of this experiment is to understand how the different mapping techniques affect the quality of SNP calling. The tools were used to map an mRNA dataset of 23 million reads extracted from the Spretus mouse strain. Then Partek [<xref ref-type="bibr" rid="B51">51</xref>], a genomic suite developed to analyze NGS data, is used to detect SNPs. The mouse genome version mm9 was used as the reference genome in this experiment. A quality threshold of 70 was used for Bowtie and Novoalign while the remaining tools were allowed 5 mismatches. In addition, gapped alignment was enabled for Bowtie2, BWA, GSNAP, and Novoalign. Table <xref ref-type="table" rid="T4">4</xref> shows the results for this experiment. The SNP detection step was done for GSNAP and SOAP2 after filtering out the erroneous reads. The log-odd ratio represents how accurate the SNP is. The small log-odds ratio for some of the SNPs is due to either the small number of reads that supports that SNP or the mixed genotype calls. We can observe that there is a large number of accurately detected SNPs. This is expected due to the high divergence of the Spretus strain from other mice strains. For the sake of completeness, we are including the whole number of detected SNPs, however, in our analysis, we focus only on the number of accurately detected SNPs shown in the last column. The results show that GSNAP detected the largest number of accurate SNPs while Novoalign detected the smallest. In addition, more than 94% of the highly accurate SNPs detected by Novoalign were also detected by the other tools (not shown). To further understand the reason for the low number of SNPs detected by Bowtie and Novoalign, we carried out the same experiment while using a quality threshold of 100. The number of highly accurate SNPs increased to 1474 and 1100 for Bowtie and Novoalign, respectively. Moreover, the reads with more than 5 mismatches did not contribute to the increase in the number of SNPs. This is due to the fact that SNPs have a high base quality score. Therefore, a read with a SNP would be sequenced with a small number of errors.</p>
      <table-wrap position="float" id="T4">
        <label>Table 4</label>
        <caption>
          <p>SNP calling results</p>
        </caption>
        <table frame="hsides" rules="groups" border="1">
          <colgroup>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
            <col/>
          </colgroup>
          <thead valign="top">
            <tr>
              <th align="left" valign="bottom">
                <bold>Tools</bold>
                <hr/>
              </th>
              <th colspan="12" align="center" valign="bottom">
                <bold>Log-odds ratio</bold>
                <hr/>
              </th>
            </tr>
            <tr>
              <th align="left"> </th>
              <th align="right">
                <bold>5</bold>
              </th>
              <th align="right">
                <bold>100</bold>
              </th>
              <th align="right">
                <bold>200</bold>
              </th>
              <th align="right">
                <bold>300</bold>
              </th>
              <th align="right">
                <bold>400</bold>
              </th>
              <th align="right">
                <bold>500</bold>
              </th>
              <th align="right">
                <bold>600</bold>
              </th>
              <th align="right">
                <bold>700</bold>
              </th>
              <th align="right">
                <bold>800</bold>
              </th>
              <th align="right">
                <bold>900</bold>
              </th>
              <th align="right">
                <bold>1000</bold>
              </th>
              <th align="right">
                <bold>1000000</bold>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" valign="bottom">Bowtie<hr/></td>
              <td align="right" valign="bottom">89479<hr/></td>
              <td align="right" valign="bottom">24337<hr/></td>
              <td align="right" valign="bottom">5082<hr/></td>
              <td align="right" valign="bottom">2231<hr/></td>
              <td align="right" valign="bottom">1076<hr/></td>
              <td align="right" valign="bottom">648<hr/></td>
              <td align="right" valign="bottom">426<hr/></td>
              <td align="right" valign="bottom">281<hr/></td>
              <td align="right" valign="bottom">0<hr/></td>
              <td align="right" valign="bottom">0<hr/></td>
              <td align="right" valign="bottom">0<hr/></td>
              <td align="right" valign="bottom">1171<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">Bowtie2<hr/></td>
              <td align="right" valign="bottom">200914<hr/></td>
              <td align="right" valign="bottom">62178<hr/></td>
              <td align="right" valign="bottom">10018<hr/></td>
              <td align="right" valign="bottom">4200<hr/></td>
              <td align="right" valign="bottom">2052<hr/></td>
              <td align="right" valign="bottom">1156<hr/></td>
              <td align="right" valign="bottom">767<hr/></td>
              <td align="right" valign="bottom">537<hr/></td>
              <td align="right" valign="bottom">0<hr/></td>
              <td align="right" valign="bottom">0<hr/></td>
              <td align="right" valign="bottom">0<hr/></td>
              <td align="right" valign="bottom">2035<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">BWA<hr/></td>
              <td align="right" valign="bottom">192050<hr/></td>
              <td align="right" valign="bottom">52115<hr/></td>
              <td align="right" valign="bottom">9028<hr/></td>
              <td align="right" valign="bottom">4049<hr/></td>
              <td align="right" valign="bottom">1894<hr/></td>
              <td align="right" valign="bottom">1087<hr/></td>
              <td align="right" valign="bottom">737<hr/></td>
              <td align="right" valign="bottom">525<hr/></td>
              <td align="right" valign="bottom">0<hr/></td>
              <td align="right" valign="bottom">0<hr/></td>
              <td align="right" valign="bottom">0<hr/></td>
              <td align="right" valign="bottom">2067<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">SOAP2<hr/></td>
              <td align="right" valign="bottom">174475<hr/></td>
              <td align="right" valign="bottom">49302<hr/></td>
              <td align="right" valign="bottom">8552<hr/></td>
              <td align="right" valign="bottom">3824<hr/></td>
              <td align="right" valign="bottom">1837<hr/></td>
              <td align="right" valign="bottom">1030<hr/></td>
              <td align="right" valign="bottom">704<hr/></td>
              <td align="right" valign="bottom">508<hr/></td>
              <td align="right" valign="bottom">0<hr/></td>
              <td align="right" valign="bottom">0<hr/></td>
              <td align="right" valign="bottom">0<hr/></td>
              <td align="right" valign="bottom">1941<hr/></td>
            </tr>
            <tr>
              <td align="left" valign="bottom">Novoalign<hr/></td>
              <td align="right" valign="bottom">69798<hr/></td>
              <td align="right" valign="bottom">17586<hr/></td>
              <td align="right" valign="bottom">4061<hr/></td>
              <td align="right" valign="bottom">1875<hr/></td>
              <td align="right" valign="bottom">936<hr/></td>
              <td align="right" valign="bottom">519<hr/></td>
              <td align="right" valign="bottom">363<hr/></td>
              <td align="right" valign="bottom">252<hr/></td>
              <td align="right" valign="bottom">0<hr/></td>
              <td align="right" valign="bottom">0<hr/></td>
              <td align="right" valign="bottom">0<hr/></td>
              <td align="right" valign="bottom">941<hr/></td>
            </tr>
            <tr>
              <td align="left">GSNAP</td>
              <td align="right">207920</td>
              <td align="right">69015</td>
              <td align="right">11416</td>
              <td align="right">4928</td>
              <td align="right">2482</td>
              <td align="right">1325</td>
              <td align="right">971</td>
              <td align="right">617</td>
              <td align="right">0</td>
              <td align="right">0</td>
              <td align="right">0</td>
              <td align="right">2602</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <p>SNP calling results when using the different tools. Each row represents a different tool while each column shows the number of SNPs detected with a log-odds ratio, which is a measure of the accuracy of the detected SNP, centered around the given values. The larger the log-odds ratio is, the more accurate the detected SNP becomes.</p>
        </table-wrap-foot>
      </table-wrap>
    </sec>
  </sec>
  <sec sec-type="conclusions">
    <title>Conclusion</title>
    <p>There have been many studies carried out to analyze the performance of short sequence mapping tools and choose the best tool among them. However, the analysis of short sequence mapping tools is still an active problem with many aspects have not been addressed yet. In this work, we provided a benchmarking study for short sequence mapping tools while tackling different aspects that have not been covered by previous studies. We mainly focused on studying the effect of different input properties, algorithmic features, and changing the default options on the performance of the different tools. Additionally, we provided a set of benchmarking tests which extensively analyze the performance of the different tools. Each of the benchmarking tests stresses on a different aspect. The benchmarking tests were further applied on a variety of short sequence mapping tools, namely, Bowtie, Bowtie2, BWA, SOAP2, MAQ, RMAP, GSNAP, Novoalign, mrsFAST (mrFAST), and FANGS.</p>
    <p>The experiments show that some tools report an <italic>error</italic> percentage (i.e., reads mapped while violating the mapping criteria). Among these tools are GSNAP and SOAP2. GSNAP reported the highest <italic>error</italic> percentage in the experiments. Additionally, the <italic>error</italic> increases with the read length and it decreases with the the number of mismatches. Nevertheless, GSNAP was one of the tools which reports the largest mapping percentage in most of the experiments even after filtering out the <italic>error</italic> reads. The main reason for mapping more reads is allowing any number of mismatches in the seed part. From a real application perspective, GSNAP’s filtered output helped in detecting the largest number of SNPs.</p>
    <p>The evaluation of Bowtie, Bowtie2, BWA, mrsFAST, and Novoalign show their ability to correctly map the reads. Moreover, Novoalign mapped the largest percentage of reads, similar to GSNAP, specially for highly repeated genomes. However, it maintained the lowest throughput among the genome indexing tools in most of the experiments.</p>
    <p>mrsFAST’s throughput is highly affected by the read length and the number of mismatches. Our experiments show that it is better to use mrsFAST for longer reads. It can also be used for short reads but only with a small number of mismatches.</p>
    <p>In general, genome indexing based tools performed better than read indexing tools in all of the experiments. However, MAQ was faster than Novoalign for small genomes. Therefore there is a potential for read indexing tools to be used for small genomes. In addition to providing the worst performance, read indexing does not provide any significant speedup in case of using read partitioning based parallelism. Therefore, the read indexing method is not preferred when designing a new read partitioning mapping tools.</p>
    <p>Interestingly, the genome type experiment revealed many strengths and weaknesses for the tools. For instance, the performance of SOAP2, GSNAP, and Novoalign is highly dependent on the genome type; the throughput decreased significantly for the Zebrafish genome. This is due to the large repetition rate on the Zebrafish genome. In addition, the tools behaved differently on the Human and the Chimpanzee genomes albeit having comparable genome sizes. The results of the genome type experiment suggest that the different properties of the genomes affect the performance of the tools. Therefore, further investigations are required to understand the different properties of the genomes and their effect on the different mapping techniques.</p>
    <p>Even though there are differences between the results for the real data sets and the synthetic ones, both experiments are important as they give us a different perspective when comparing between the tools. The control on the number of mismatches for the <monospace>wgsim</monospace> synthetic data allows us to know exactly what the throughput of each tool is while looking for exactly the same number of mismatches. Therefore, it becomes easier to understand why a tool is faster than another one or why a tool seems to map more reads than the other ones. At the same time, it is important to look at the behavior of the tools in case of real data and real-like synthetic data (e.g., <monospace>ART</monospace>) to further understand how they behave in the real world. For instance, for the number of mismatches experiment, even though Bowtie looks like it maps a percentage of reads similar to the other tools in case of 7 t-mms, it actually maps the reads with a maximum of 4 t-mms. Therefore, the output mappings are more accurate than the other tools.</p>
    <p>In general, there is no <italic>the-best</italic> tool among all of the tools; each tool was <italic>the-best</italic> in certain conditions. The short sequence mapping problem is still an active problem and new tools are needed to be developed. However, these new tools should be application-specific. By taking the target application into consideration, more accurate results can be obtained. For instance, for genome assembly, we can analyze the reference genome and estimate the number of reads that can be mapped for the different regions (e.g., repeated regions) based on the coverage information in the sequencing process. Another example for an application with very specific properties is the mapping of RNA-Seq data which contain short sequences for the exon regions rather than intron regions for the genome. Therefore, for well-studied genomes, if a small number of reads where mapped to different intron regions, we can expect them to be wrongly mapped and look for other mapping locations with more number of mismatches or less mapping quality.</p>
  </sec>
  <sec>
    <title>Availability</title>
    <p>Links to tools, datasets, parameters used in each individual tool and test, and the code used to verify the tools are available at <ext-link ext-link-type="uri" xlink:href="http://bmi.osu.edu/hpc/software/benchmark/">http://bmi.osu.edu/hpc/software/benchmark/</ext-link>.</p>
  </sec>
  <sec>
    <title>Competing interests</title>
    <p>The authors declare that there are no competing interests.</p>
  </sec>
  <sec>
    <title>Authors’ contributions</title>
    <p>AH and DB designed the experiments, AH carried out experiments, wrote the first draft of the manuscript. AET provided and analyzed SNP dataset. UVC led the project, helped with the design and interpretation of the experiments, reviewed and revised the manuscript. All authors read and approved the final manuscript.</p>
  </sec>
</body>
<back>
  <sec>
    <title>Acknowledgements</title>
    <p>This work was supported in parts by the DOE grant DE-FC02-06ER2775; by the NSF grants CNS-0643969, OCI-0904809, and OCI-0904802, by the NIH grant R01 CA133461, and by grant NPRP 4-1454-1-233 from the Qatar National Research Fund (a member of The Qatar Foundation).</p>
  </sec>
  <ref-list>
    <ref id="B1">
      <mixed-citation publication-type="other">
        <article-title>National human genome institute</article-title>
        <comment>[<ext-link ext-link-type="uri" xlink:href="http://www.genome.gov">http://www.genome.gov</ext-link>]</comment>
      </mixed-citation>
    </ref>
    <ref id="B2">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Flicek</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Birney</surname>
          <given-names>E</given-names>
        </name>
        <article-title>Sense from sequence reads: methods for alignment and assembly</article-title>
        <source>Nat Methods</source>
        <year>2009</year>
        <volume>6</volume>
        <issue>11s</issue>
        <fpage>S6</fpage>
        <lpage>12</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.1376</pub-id>
        <?supplied-pmid 19844229?>
        <pub-id pub-id-type="pmid">19844229</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B3">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Cokus</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Feng</surname>
          <given-names>S</given-names>
        </name>
        <etal/>
        <article-title>Shotgun bisulphite sequencing of the Arabidopsis genome reveals DNA methylation patterning</article-title>
        <source>Nat</source>
        <year>2008</year>
        <volume>452</volume>
        <issue>7184</issue>
        <fpage>215</fpage>
        <lpage>219</lpage>
        <pub-id pub-id-type="doi">10.1038/nature06745</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B4">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Sultan</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Schulz</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Richard</surname>
          <given-names>H</given-names>
        </name>
        <etal/>
        <article-title>A global view of gene activity and alternative splicing by deep sequencing of the human transcriptome</article-title>
        <source>Science</source>
        <year>2008</year>
        <volume>321</volume>
        <issue>5891</issue>
        <fpage>956</fpage>
        <lpage>960</lpage>
        <pub-id pub-id-type="doi">10.1126/science.1160342</pub-id>
        <?supplied-pmid 18599741?>
        <pub-id pub-id-type="pmid">18599741</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B5">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Van Tessel</surname>
          <given-names>CP</given-names>
        </name>
        <name>
          <surname>Simth</surname>
          <given-names>TPL</given-names>
        </name>
        <name>
          <surname>Matukumali</surname>
          <given-names>LK</given-names>
        </name>
        <etal/>
        <article-title>SNP discovery and allele frequency estimation by deep sequencing of reduced representation libraries</article-title>
        <source>Nat Methods</source>
        <year>2008</year>
        <volume>5</volume>
        <issue>3</issue>
        <fpage>247</fpage>
        <lpage>252</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.1185</pub-id>
        <?supplied-pmid 18297082?>
        <pub-id pub-id-type="pmid">18297082</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B6">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Alkan</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Kidd</surname>
          <given-names>J</given-names>
        </name>
        <collab>Marques-Bonet T</collab>
        <etal/>
        <article-title>Personalized copy number and segmental duplication maps using next-generation sequencing</article-title>
        <source>Nat Genet</source>
        <year>2009</year>
        <volume>41</volume>
        <issue>10</issue>
        <fpage>1061</fpage>
        <lpage>1067</lpage>
        <pub-id pub-id-type="doi">10.1038/ng.437</pub-id>
        <?supplied-pmid 19718026?>
        <pub-id pub-id-type="pmid">19718026</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B7">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Qin</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Li</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Raes</surname>
          <given-names>J</given-names>
        </name>
        <etal/>
        <article-title>A human gut microbial gene catalogue established by metagenomic sequencing</article-title>
        <source>Nat</source>
        <year>2010</year>
        <volume>464</volume>
        <issue>7285</issue>
        <fpage>59</fpage>
        <lpage>65</lpage>
        <pub-id pub-id-type="doi">10.1038/nature08821</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B8">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Li</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Ruan</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Durbin</surname>
          <given-names>R</given-names>
        </name>
        <article-title>Mapping short DNA sequencing reads and calling variants using mapping quality scores</article-title>
        <source>Gen Res</source>
        <year>2008</year>
        <volume>18</volume>
        <issue>11</issue>
        <fpage>1851</fpage>
        <lpage>1858</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.078212.108</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B9">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Smith</surname>
          <given-names>AD</given-names>
        </name>
        <name>
          <surname>Xuan</surname>
          <given-names>Z</given-names>
        </name>
        <collab>Zhang MQ</collab>
        <article-title>Using quality scores and longer reads improves accuracy of Solexa read mapping</article-title>
        <source>BMC Bioinf</source>
        <year>2008</year>
        <volume>9</volume>
        <fpage>128+</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-9-128</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B10">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Wu</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Nacu</surname>
          <given-names>S</given-names>
        </name>
        <article-title>Fast and SNP-tolerant detection of complex variants and splicing in short reads</article-title>
        <source>Bioinf</source>
        <year>2010</year>
        <volume>7</volume>
        <issue>26</issue>
        <fpage>873</fpage>
        <lpage>881</lpage>
      </mixed-citation>
    </ref>
    <ref id="B11">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Langmead</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Trapnell</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Pop</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Salzberg</surname>
          <given-names>S</given-names>
        </name>
        <article-title>Ultrafast and memory-efficient alignment of short DNA sequences to the human genome</article-title>
        <source>Gen Biol</source>
        <year>2009</year>
        <volume>10</volume>
        <issue>3</issue>
        <fpage>R25+</fpage>
      </mixed-citation>
    </ref>
    <ref id="B12">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Langmead</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Salzberg</surname>
          <given-names>SL</given-names>
        </name>
        <article-title>Fast gapped-read alignment with Bowtie 2</article-title>
        <source>Nat Meth</source>
        <year>2012</year>
        <volume>9</volume>
        <fpage>357</fpage>
        <lpage>359</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.1923</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B13">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Li</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Durbin</surname>
          <given-names>R</given-names>
        </name>
        <article-title>Fast and accurate short read alignment with Burrows-Wheeler transform</article-title>
        <source>Bioinf</source>
        <year>2009</year>
        <volume>25</volume>
        <issue>14</issue>
        <fpage>1754</fpage>
        <lpage>1760</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp324</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B14">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Li</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Yu</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Li</surname>
          <given-names>Y</given-names>
        </name>
        <etal/>
        <article-title>SOAP2: an improved ultrafast tool for short read alignment</article-title>
        <source>Bioinf</source>
        <year>2009</year>
        <volume>25</volume>
        <issue>15</issue>
        <fpage>1966</fpage>
        <lpage>1967</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp336</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B15">
      <mixed-citation publication-type="other">
        <article-title>Mosaik</article-title>
        <comment>[<ext-link ext-link-type="uri" xlink:href="http://code.google.com/p/mosaik-aligner">http://code.google.com/p/mosaik-aligner</ext-link>]</comment>
      </mixed-citation>
    </ref>
    <ref id="B16">
      <mixed-citation publication-type="other">
        <name>
          <surname>Misra</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Narayanan</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Lin</surname>
          <given-names>S</given-names>
        </name>
        <etal/>
        <article-title>FANGS: high speed sequence mapping for next generation sequencers</article-title>
        <source>ACM Symposium on Applied Computing: 2009; Sierre, Switzerland</source>
        <year>2009</year>
        <fpage>1539</fpage>
        <lpage>1546</lpage>
        <?supplied-pmid 19432372?>
        <pub-id pub-id-type="pmid">19432372</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B17">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Rumble</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Lacroute</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Dalca</surname>
          <given-names>A</given-names>
          <suffix>et al</suffix>
        </name>
        <article-title>SHRiMP: accurate Mapping of Short Color-space Reads</article-title>
        <source>PLoS Comput Biol</source>
        <year>2009</year>
        <volume>5</volume>
        <issue>5</issue>
        <fpage>e1000386+</fpage>
        <?supplied-pmid 19461883?>
        <pub-id pub-id-type="pmid">19461883</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B18">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Homer</surname>
          <given-names>N</given-names>
        </name>
        <name>
          <surname>Merriman</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Nelson</surname>
          <given-names>S</given-names>
        </name>
        <article-title>BFAST: an alignment tool for large scale genome resequencing</article-title>
        <source>PLoS ONE</source>
        <year>2009</year>
        <volume>4</volume>
        <issue>11</issue>
        <fpage>e7767</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0007767</pub-id>
        <?supplied-pmid 19907642?>
        <pub-id pub-id-type="pmid">19907642</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B19">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Ondov</surname>
          <given-names>BD</given-names>
        </name>
        <name>
          <surname>Varadarajan</surname>
          <given-names>V</given-names>
        </name>
        <name>
          <surname>Passalacqua</surname>
          <given-names>KD</given-names>
        </name>
        <etal/>
        <article-title>Efficient mapping of Applied Biosystems SOLiD sequence data to a reference genome for functional genomic applications</article-title>
        <source>Bioinf</source>
        <year>2008</year>
        <volume>24</volume>
        <issue>23</issue>
        <fpage>2776</fpage>
        <lpage>2777</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btn512</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B20">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Campagna</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Albiero</surname>
          <given-names>A</given-names>
        </name>
        <collab>Bilardi A</collab>
        <etal/>
        <article-title>PASS: a program to align short sequences</article-title>
        <source>Bioinf</source>
        <year>2009</year>
        <volume>25</volume>
        <issue>7</issue>
        <fpage>967</fpage>
        <lpage>968</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp087</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B21">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Hach</surname>
          <given-names>F</given-names>
        </name>
        <name>
          <surname>Hormozdiari</surname>
          <given-names>F</given-names>
        </name>
        <name>
          <surname>Alkan</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Hormozdiari</surname>
          <given-names>F</given-names>
        </name>
        <name>
          <surname>Birol</surname>
          <given-names>I</given-names>
        </name>
        <name>
          <surname>Eichler</surname>
          <given-names>EE</given-names>
        </name>
        <name>
          <surname>Sahinalp</surname>
          <given-names>SC</given-names>
        </name>
        <article-title>mrsFast: a cache-oblivious algorithm for short-read mapping</article-title>
        <source>Nat Method</source>
        <year>2010</year>
        <volume>7</volume>
        <issue>8</issue>
        <fpage>576</fpage>
        <lpage>577</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth0810-576</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B22">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Lin</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Zhang</surname>
          <given-names>Z</given-names>
        </name>
        <collab>Zhang MQ</collab>
        <etal/>
        <article-title>ZOOM! Zillions of oligos mapped</article-title>
        <source>Bioinf</source>
        <year>2008</year>
        <volume>24</volume>
        <issue>21</issue>
        <fpage>2431</fpage>
        <lpage>2437</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btn416</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B23">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Malhis</surname>
          <given-names>N</given-names>
        </name>
        <name>
          <surname>Butterfield</surname>
          <given-names>YS</given-names>
        </name>
        <name>
          <surname>Ester</surname>
          <given-names>M</given-names>
        </name>
        <etal/>
        <article-title>Slider = Maximum use of probability information for alignment of short sequence reads and SNP detection</article-title>
        <source>Bioinf</source>
        <year>2008</year>
        <volume>25</volume>
        <fpage>6</fpage>
        <lpage>13</lpage>
      </mixed-citation>
    </ref>
    <ref id="B24">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Malhis</surname>
          <given-names>N</given-names>
        </name>
        <name>
          <surname>Jones</surname>
          <given-names>S</given-names>
        </name>
        <article-title>High quality SNP calling using Illumina data at shallow coverage</article-title>
        <source>Bioinf</source>
        <year>2010</year>
        <volume>26</volume>
        <issue>8</issue>
        <fpage>1029</fpage>
        <lpage>1035</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btq092</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B25">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Weese</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Emde</surname>
          <given-names>AK</given-names>
        </name>
        <name>
          <surname>Rausch</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Döring</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Reinert</surname>
          <given-names>K</given-names>
        </name>
        <article-title>RazerS-fast read mapping with sensitivity control</article-title>
        <source>Genome Res</source>
        <year>2009</year>
        <volume>19</volume>
        <fpage>1646</fpage>
        <lpage>1654</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.088823.108</pub-id>
        <?supplied-pmid 19592482?>
        <pub-id pub-id-type="pmid">19592482</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B26">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Weese</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Holtgrewe</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Reinert</surname>
          <given-names>K</given-names>
        </name>
        <article-title>RazerS 3: faster, fully sensitive read mapping</article-title>
        <source>Bioinf</source>
        <year>2012</year>
        <volume>28</volume>
        <issue>20</issue>
        <fpage>2592</fpage>
        <lpage>2599</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bts505</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B27">
      <mixed-citation publication-type="other">
        <article-title>Novoalign</article-title>
        <comment>[<ext-link ext-link-type="uri" xlink:href="http://www.novocraft.com">http://www.novocraft.com</ext-link>]</comment>
      </mixed-citation>
    </ref>
    <ref id="B28">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Blom</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Jakobi</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Doppmeier</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Jaenicke</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Kalinowski</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Stoye</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Goesmann</surname>
          <given-names>A</given-names>
        </name>
        <article-title>Exact and complete short-read alignment to microbial genomes using Graphics Processing Unit programming</article-title>
        <source>Bioinf</source>
        <year>2011</year>
        <volume>27</volume>
        <issue>10</issue>
        <fpage>1351</fpage>
        <lpage>1358</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btr151</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B29">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Liu</surname>
          <given-names>CM</given-names>
        </name>
        <name>
          <surname>Wong</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Wu</surname>
          <given-names>E</given-names>
        </name>
        <name>
          <surname>Luo</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Yiu</surname>
          <given-names>SM</given-names>
        </name>
        <name>
          <surname>Li</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Wang</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Yu</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Chu</surname>
          <given-names>X</given-names>
        </name>
        <name>
          <surname>Zhao</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>Li</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Lam</surname>
          <given-names>TW</given-names>
        </name>
        <article-title>SOAP3: ultra-fast GPU-based parallel alignment tool for short reads</article-title>
        <source>Bioinf</source>
        <year>2012</year>
        <volume>28</volume>
        <issue>6</issue>
        <fpage>878</fpage>
        <lpage>879</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bts061</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B30">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Li</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Homer</surname>
          <given-names>N</given-names>
        </name>
        <article-title>A survey of sequence alignment algorithms for next-generation sequencing</article-title>
        <source>Brief Bioinf</source>
        <year>2010</year>
        <volume>11</volume>
        <issue>5</issue>
        <fpage>473</fpage>
        <lpage>483</lpage>
        <pub-id pub-id-type="doi">10.1093/bib/bbq015</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B31">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Holtgrewe</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Emde</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Weese</surname>
          <given-names>D</given-names>
          <suffix>et al</suffix>
        </name>
        <article-title>A novel and well-defined benchmarking method for second generation read mapping</article-title>
        <source>BMC Bioinf</source>
        <year>2011</year>
        <volume>12</volume>
        <fpage>210+</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-12-210</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B32">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Ruffalo</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>LaFramboise</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Koyutürk</surname>
          <given-names>M</given-names>
        </name>
        <article-title>Comparative analysis of algorithms for next-generation sequencing read alignment</article-title>
        <source>Bioinf</source>
        <year>2011</year>
        <volume>27</volume>
        <issue>20</issue>
        <fpage>2790</fpage>
        <lpage>2796</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btr477</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B33">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Schbath</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Martin</surname>
          <given-names>V</given-names>
        </name>
        <name>
          <surname>Zytnicki</surname>
          <given-names>M</given-names>
        </name>
        <etal/>
        <article-title>Mapping reads on a genomic sequence: an algorithmic overwiew and a practical comparative analysis</article-title>
        <source>Jr Comp Biol</source>
        <year>2012</year>
        <volume>19</volume>
        <issue>6</issue>
        <fpage>796</fpage>
        <lpage>813</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2012.0022</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B34">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Fonseca</surname>
          <given-names>NA</given-names>
        </name>
        <name>
          <surname>Rung</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Brazma</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Marioni</surname>
          <given-names>JC</given-names>
        </name>
        <article-title>Tools for mapping high-throughput sequencing data</article-title>
        <source>Bioinf</source>
        <year>2012</year>
        <volume>28</volume>
        <issue>24</issue>
        <fpage>3169</fpage>
        <lpage>3177</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bts605</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B35">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Ewing</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Hillier</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Wendl</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Green</surname>
          <given-names>P</given-names>
        </name>
        <article-title>Base-calling of automated sequencer traces using phred. I. Accuracy assessment</article-title>
        <source>Genome Res</source>
        <year>1998</year>
        <volume>8</volume>
        <issue>3</issue>
        <fpage>175</fpage>
        <lpage>185</lpage>
        <?supplied-pmid 9521921?>
        <pub-id pub-id-type="pmid">9521921</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B36">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Ewing</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Green</surname>
          <given-names>P</given-names>
        </name>
        <article-title>Base-calling of automated sequencer traces using phred. II. Error probabilities</article-title>
        <source>Genome Res</source>
        <year>1998</year>
        <volume>8</volume>
        <issue>3</issue>
        <fpage>186</fpage>
        <lpage>194</lpage>
        <?supplied-pmid 9521922?>
        <pub-id pub-id-type="pmid">9521922</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B37">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Deutsch</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Long</surname>
          <given-names>M</given-names>
        </name>
        <article-title>Intron-exon structures of eukaryotic model organisms</article-title>
        <source>Nucl Acids Res</source>
        <year>1999</year>
        <volume>27</volume>
        <issue>15</issue>
        <fpage>3219</fpage>
        <lpage>3228</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/27.15.3219</pub-id>
        <?supplied-pmid 10454621?>
        <pub-id pub-id-type="pmid">10454621</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B38">
      <mixed-citation publication-type="other">
        <name>
          <surname>Burrows</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Wheeler</surname>
          <given-names>D</given-names>
        </name>
        <article-title>A block-sorting lossless data compression algorithm</article-title>
        <source>Tech. Rep</source>
        <comment>124, Digital Equipment Corporation, Palo Alto (CA) 1994.</comment>
      </mixed-citation>
    </ref>
    <ref id="B39">
      <mixed-citation publication-type="other">
        <name>
          <surname>Ferragina</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Manzini</surname>
          <given-names>G</given-names>
        </name>
        <article-title>Opportunistic data structures with applications</article-title>
        <source>41st Annual Symposium on Foundations of Computer Science, Washington, DC</source>
        <year>2000</year>
        <fpage>390</fpage>
        <lpage>398</lpage>
      </mixed-citation>
    </ref>
    <ref id="B40">
      <mixed-citation publication-type="other">
        <article-title>ssahaSNP</article-title>
        <comment>[<ext-link ext-link-type="uri" xlink:href="http://www.sanger.ac.uk/resources/software/ssahasnp/">http://www.sanger.ac.uk/resources/software/ssahasnp/</ext-link>]</comment>
      </mixed-citation>
    </ref>
    <ref id="B41">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Zhang</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Wheeler</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Yakub</surname>
          <given-names>I</given-names>
        </name>
        <etal/>
        <article-title>SNPdetector: a software tool for sensitive and accurate SNP detection</article-title>
        <source>PLoS Comput Biol</source>
        <year>2005</year>
        <volume>1</volume>
        <issue>5</issue>
        <fpage>e53</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.0010053</pub-id>
        <?supplied-pmid 16261194?>
        <pub-id pub-id-type="pmid">16261194</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B42">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Li</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Li</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Fang</surname>
          <given-names>X</given-names>
        </name>
        <etal/>
        <article-title>SNP detection for massively parallel whole-genome resequencing</article-title>
        <source>Genome Res</source>
        <year>2009</year>
        <volume>18</volume>
        <issue>6</issue>
        <fpage>1124</fpage>
        <lpage>1132</lpage>
        <pub-id pub-id-type="pmid">19420381</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B43">
      <mixed-citation publication-type="other">
        <article-title>wgsim</article-title>
        <comment>[<ext-link ext-link-type="uri" xlink:href="https://github.com/lh3/wgsim">https://github.com/lh3/wgsim</ext-link>]</comment>
      </mixed-citation>
    </ref>
    <ref id="B44">
      <mixed-citation publication-type="other">
        <article-title>dwgsim</article-title>
        <comment>[<ext-link ext-link-type="uri" xlink:href="http://sourceforge.net/projects/dnaa">http://sourceforge.net/projects/dnaa</ext-link>]</comment>
      </mixed-citation>
    </ref>
    <ref id="B45">
      <mixed-citation publication-type="other">
        <name>
          <surname>Holtgrewe</surname>
          <given-names>M</given-names>
        </name>
        <article-title>Mason - a read simulator for second generation sequencing data</article-title>
        <comment>Tech. Rep. TB-B-10-06, Digital Equipment Corporation, Institut für Mathematik und Informatik, Freie Universität Berlin, Berlin, Germany 2010</comment>
      </mixed-citation>
    </ref>
    <ref id="B46">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Huang</surname>
          <given-names>W</given-names>
        </name>
        <name>
          <surname>Li</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Myers</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Marth</surname>
          <given-names>G</given-names>
        </name>
        <article-title>ART: a next-generation sequencing read simulator</article-title>
        <source>Bioinf</source>
        <year>2012</year>
        <volume>28</volume>
        <issue>4</issue>
        <fpage>593</fpage>
        <lpage>594</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btr708</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B47">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Dohm</surname>
          <given-names>JC</given-names>
        </name>
        <name>
          <surname>Lottaz</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Borodina</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Himmelbauer</surname>
          <given-names>H</given-names>
        </name>
        <article-title>Substantial biases in ultra-short read data sets from high-throughput DNA sequencing</article-title>
        <source>Nucl Acid Res</source>
        <year>2008</year>
        <volume>36</volume>
        <issue>16</issue>
        <fpage>e105</fpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkn425</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B48">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Schroder</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Schroder</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Puglisi</surname>
          <given-names>S</given-names>
          <suffix>et al</suffix>
        </name>
        <article-title>SNP detection for massively parallel whole-genome resequencing</article-title>
        <source>Bioinf</source>
        <year>2009</year>
        <volume>25</volume>
        <issue>17</issue>
        <fpage>2157</fpage>
        <lpage>2163</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp379</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B49">
      <mixed-citation publication-type="journal">
        <name>
          <surname>McElroy</surname>
          <given-names>KE</given-names>
        </name>
        <name>
          <surname>Luciani</surname>
          <given-names>F</given-names>
        </name>
        <name>
          <surname>Thomas</surname>
          <given-names>T</given-names>
        </name>
        <article-title>GemSIM: general, error-model based simulator of next-generation sequencing data</article-title>
        <source>BMC Genomics</source>
        <year>2012</year>
        <volume>13</volume>
        <fpage>74</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2164-13-74</pub-id>
        <?supplied-pmid 22336055?>
        <pub-id pub-id-type="pmid">22336055</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B50">
      <mixed-citation publication-type="other">
        <article-title>pMap</article-title>
        <comment>[<ext-link ext-link-type="uri" xlink:href="http://bmi.osu.edu/hpc/software/pmap/pmap.html">http://bmi.osu.edu/hpc/software/pmap/pmap.html</ext-link>]</comment>
      </mixed-citation>
    </ref>
    <ref id="B51">
      <mixed-citation publication-type="other">
        <name>
          <surname>Inc</surname>
          <given-names>P</given-names>
        </name>
        <article-title>Partek Genomics SuiteTM v2.6</article-title>
        <comment>Tech. rep., Partek Inc., St. Louis 2010</comment>
      </mixed-citation>
    </ref>
  </ref-list>
</back>

<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">9676013</article-id>
    <article-id pub-id-type="pmid">36205601</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btac664</article-id>
    <article-id pub-id-type="publisher-id">btac664</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Applications Note</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Phylogenetics</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Phytest: quality control for phylogenetic analyses</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-7070-0078</contrib-id>
        <name>
          <surname>Wirth</surname>
          <given-names>Wytamma</given-names>
        </name>
        <aff><institution>Peter Doherty Institute for Infection and Immunity, University of Melbourne</institution>, Melbourne 3010, <country country="AU">Australia</country></aff>
        <xref rid="btac664-cor1" ref-type="corresp"/>
        <!--wytamma.wirth@unimelb.edu.au-->
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Mutch</surname>
          <given-names>Simon</given-names>
        </name>
        <aff><institution>Melbourne Data Analytics Platform, University of Melbourne</institution>, Melbourne 3010, <country country="AU">Australia</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Turnbull</surname>
          <given-names>Robert</given-names>
        </name>
        <aff><institution>Melbourne Data Analytics Platform, University of Melbourne</institution>, Melbourne 3010, <country country="AU">Australia</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-2863-0907</contrib-id>
        <name>
          <surname>Duchene</surname>
          <given-names>Sebastian</given-names>
        </name>
        <aff><institution>Peter Doherty Institute for Infection and Immunity, University of Melbourne</institution>, Melbourne 3010, <country country="AU">Australia</country></aff>
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Schwartz</surname>
          <given-names>Russell</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="btac664-cor1">To whom the correspondence should be addressed. Email: <email>wytamma.wirth@unimelb.edu.au</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <day>15</day>
      <month>11</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2022-10-07">
      <day>07</day>
      <month>10</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>07</day>
      <month>10</month>
      <year>2022</year>
    </pub-date>
    <volume>38</volume>
    <issue>22</issue>
    <fpage>5124</fpage>
    <lpage>5125</lpage>
    <history>
      <date date-type="received">
        <day>04</day>
        <month>7</month>
        <year>2022</year>
      </date>
      <date date-type="rev-recd">
        <day>29</day>
        <month>9</month>
        <year>2022</year>
      </date>
      <date date-type="editorial-decision">
        <day>29</day>
        <month>9</month>
        <year>2022</year>
      </date>
      <date date-type="accepted">
        <day>04</day>
        <month>10</month>
        <year>2022</year>
      </date>
      <date date-type="corrected-typeset">
        <day>20</day>
        <month>10</month>
        <year>2022</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2022. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2022</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btac664.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>The ability to automatically conduct quality control checks on phylogenetic analyses is becoming more important with the increase in genetic sequencing and the use of real-time pipelines e.g. in the SARS-CoV-2 era. Implementations of real-time phylogenetic analyses require automated testing to make sure that problems in the data are caught automatically within analysis pipelines and in a timely manner. Here, we present Phytest (version 1.1) a tool for automating quality control checks on sequences, trees and metadata during phylogenetic analyses.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>Phytest is a phylogenetic analysis testing program that easily integrates into existing phylogenetic pipelines. We demonstrate the utility of Phytest with real-world examples.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p>Phytest source code is available on GitHub (<ext-link xlink:href="https://github.com/phytest-devs/phytest" ext-link-type="uri">https://github.com/phytest-devs/phytest</ext-link>) and can be installed via PyPI with the command ‘pip install phytest’. Extensive documentation can be found at <ext-link xlink:href="https://phytest-devs.github.io/phytest/" ext-link-type="uri">https://phytest-devs.github.io/phytest/</ext-link>.</p>
      </sec>
      <sec id="s5">
        <title>Supplementary information</title>
        <p>Supplementary data are available at <italic toggle="yes">Bioinformatics</italic> online.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Australian Research Council</institution>
            <institution-id institution-id-type="DOI">10.13039/501100000923</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>DE190100805</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Australian National Health and Medical Research Council</institution>
          </institution-wrap>
        </funding-source>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>NHMRC</institution>
            <institution-id institution-id-type="DOI">10.13039/501100000925</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>APP1157586</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="2"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Phylogenetics is increasingly performed in automated pipelines, run with increasing frequency as sequence data becomes more readily available [e.g. during the SARS-CoV-2/coronavirus disease 2019 (COVID-19) pandemic]. The frequency of runs and complexity of these pipelines can result in the introduction of erroneous data causing failures, or worse, incorrect results and conclusions. Manually checking analyses for errors can be repetitive and laborious, wasting researchers time. While automated testing software exists for code, no such testing frameworks are available to easily test for errors in phylogenetic analyses.</p>
    <p>Here, we present Phytest (version 1.1.0) a tool for automating quality control checks on sequence, phylogenetic trees and associated metadata files during phylogenetic analyses. Phytest ensures that phylogenetic analyses meet user-defined quality control standards. Phytest can be installed from the Python Package Index (PyPI) using the command <monospace>pip install phytest</monospace>.</p>
  </sec>
  <sec>
    <title>2 Implementation and usage</title>
    <p>Phytest is based on the popular Python testing framework Pytest (<xref rid="btac664-B5" ref-type="bibr">Krekel <italic toggle="yes">et al.</italic>, 2004</xref>). It allows users to write tests for their phylogenetic analyses the same way they write tests for their code (<xref rid="btac664-F1" ref-type="fig">Fig. 1</xref>). Phytest has been developed as a command-line interface (CLI), Python module and Pytest plugin, providing multiple methods of invocation. It provides many convenient helper functions for testing phylogenetic analyses including methods for testing sequences, alignments, trees and metadata files.</p>
    <fig position="float" id="btac664-F1">
      <label>Fig. 1.</label>
      <caption>
        <p>Conceptual figure of Phytest workflow. Sequence, tree and metadata files from a phylogenetic analyses are used as inputs to Phytest. Tests written in Python are run against these data structures using Phytest to determine if downstream analysis should proceed</p>
      </caption>
      <graphic xlink:href="btac664f1" position="float"/>
    </fig>
    <p>Phytest is easily extendable and provides a simple interface for writing custom phylogenetic tests. The interface follows the Pytest model of testing i.e. tests are defined as Python functions containing assert statements that are collected and evaluated at run-time. Tests that fail are captured and reported to the user allowing for repeatable and automated testing.</p>
    <p>Phytest injects special fixtures into test functions, allowing for easy evaluation and testing of phylogenetic data structures. These fixtures provide the standard Biopython (sequences, alignments and trees) and Pandas (metadata) class methods as well as special assert methods for testing these data structures (<xref rid="btac664-B2" ref-type="bibr">Cock <italic toggle="yes">et al.</italic>, 2009</xref>; <xref rid="btac664-B6" ref-type="bibr">McKinney <italic toggle="yes">et al.</italic>, 2010</xref>). For example, the Phytest Sequence class implements the method <monospace>Sequence.assert_percent_GC</monospace>. Calling this method on the fixture object with the expected GC-content e.g. <monospace>sequence.assert_percent_GC(38)</monospace> will raise an error if the percent of G and C nucleotides in the sequence is not equal to 38%. Many methods also provide maximum and minimum arguments so the upper and lower bounds can be tested e.g. <monospace>sequence.assert_percent_GC(min</monospace> <monospace>=</monospace> <monospace>30, max</monospace> <monospace>=</monospace> <monospace>40)</monospace>.</p>
    <p>All Phytest assert methods also provide a warning flag, e.g. <monospace>sequence.assert_percent_GC(38, warn=True)</monospace> causing the method to raise a warning instead of an error if the test fails. In an automated pipeline, this provides a way to inform the user of potential problems without causing the pipeline to fail. The warning flag can be set automatically by calling the method with the warn_ prefix instead of assert_ e.g. <monospace>sequence.warn_percent_GC(38)</monospace>. See the documentation for a full list of built-in assert methods (<ext-link xlink:href="https://phytest-devs.github.io/phytest/reference.html" ext-link-type="uri">https://phytest-devs.github.io/phytest/reference.html</ext-link>).</p>
    <p>Phylogenetic tree, sequence and metadata files are passed from the command line, allowing test re-usability on different files. The Phytest CLI requires a path to the file containing user-defined tests and has optional flags for specifying sequence/alignment, tree and metadata files e.g. <monospace>phytest test.py --sequence sequences.fasta --tree tree.newick --data metadata.csv.</monospace> Alternative file formats can be specified with --<monospace>sequence-format, --tree-format</monospace> and --data-format flags, supported formats include those supported by Biopython and comma/tab-separated values and Excel formats for metadata. Using the Phytest --<monospace>report</monospace> flag will generate a detailed HTML report of test results.</p>
  </sec>
  <sec>
    <title>3 Examples</title>
    <p>We provide several examples of how Phytest can integrate into standard phylogenetic analyses and scenarios as separate repositories in the phytest-devs GitHub organization (<ext-link xlink:href="https://github.com/phytest-devs" ext-link-type="uri">https://github.com/phytest-devs</ext-link>). These include Phytest for quality control in a Nextstrain/Snakemake pipeline (<xref rid="btac664-B4" ref-type="bibr">Hadfield <italic toggle="yes">et al.</italic>, 2018</xref>; <xref rid="btac664-B7" ref-type="bibr">Mölder <italic toggle="yes">et al.</italic>, 2021</xref>) (<ext-link xlink:href="https://github.com/phytest-devs/phytest-nextstrain-example" ext-link-type="uri">https://github.com/phytest-devs/phytest-nextstrain-example</ext-link>), Testing phylogenetic data with Continuous Integration features on GitHub (<ext-link xlink:href="https://github.com/phytest-devs/phytest-continuous-testing-example" ext-link-type="uri">https://github.com/phytest-devs/phytest-continuous-testing-example</ext-link>) and using Phytest to test for temporal signal (<ext-link xlink:href="https://github.com/phytest-devs/phytest-temporal-signal-example" ext-link-type="uri">https://github.com/phytest-devs/phytest-temporal-signal-example</ext-link>).</p>
    <sec>
      <title>3.1 Temporal signal example</title>
      <p>Temporal signal is an important prerequisite for estimating evolutionary rates and timescales (<xref rid="btac664-B9" ref-type="bibr">Rieux and Balloux, 2016</xref>). A data set with temporal signal is one in which the sampling time span captures sufficient genetic variation to allow for estimates of the evolutionary rate (also known as the molecular clock rate). Analyses of temporal signal can also be useful to detect problematic sequences, such as those with sequencing errors or mislabeled dates, before fitting a molecular clock and estimating evolutionary rates and dates, such as when using BEAST (<xref rid="btac664-B1" ref-type="bibr">Bouckaert <italic toggle="yes">et al.</italic>, 2019</xref>; <xref rid="btac664-B3" ref-type="bibr">Drummond and Rambaut, 2007</xref>). A repository containing the code for this example can be found at <ext-link xlink:href="https://github.com/phytest-devs/phytest-temporal-signal-example" ext-link-type="uri">https://github.com/phytest-devs/phytest-temporal-signal-example</ext-link>. Here, we use data from the TempEst tutorial <ext-link xlink:href="https://beast.community/tempest_tutorial" ext-link-type="uri">https://beast.community/tempest_tutorial</ext-link>. TempEst is a useful program for performing temporal signal analysis, however, it is not possible to easily automate the TempEst graphical user interface (<xref rid="btac664-B8" ref-type="bibr">Rambaut <italic toggle="yes">et al.</italic>, 2016</xref>). Internally, Phytest uses TimeTree to perform a root-to-tip regression, allowing users to automate temporal signal testing (<xref rid="btac664-B10" ref-type="bibr">Sagulenko <italic toggle="yes">et al.</italic>, 2018</xref>). The <monospace>Tree.assert_root_to_tip</monospace> method is used for testing temporal signal and provides arguments for testing the coefficient of determination (<italic toggle="yes">R</italic><sup>2</sup>), regression slope (a crude estimate of the evolutionary rates) and root date.</p>
    </sec>
  </sec>
  <sec>
    <title>4 Conclusions</title>
    <p>Phytest is a flexible and powerful tool for reproducibility and automation. New data are often incorporated or manually edited when developing or optimizing a phylogenetic analysis pipeline. Phytest ensures that analyses meet user-specified standards each time they are run. We believe Phytest will be increasingly useful as the use of automated phylogenetic pipelines increases, especially in the field of real-time phylogenetic analysis.</p>
  </sec>
  <sec>
    <title>Funding</title>
    <p>This work was supported by the Australian Research Council [DE190100805] and Australian National Health and Medical Research Council (NHMRC) [APP1157586].</p>
    <p><italic toggle="yes">Conflict of Interest</italic>: none declared.</p>
  </sec>
</body>
<back>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btac664-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bouckaert</surname><given-names>R.</given-names></string-name></person-group><etal>et al</etal> (<year>2019</year>) <article-title>Beast 2.5: an advanced software platform for Bayesian evolutionary analysis</article-title>. <source>PLoS Comput. Biol</source>., <volume>15</volume>, <fpage>e1006650</fpage>.<pub-id pub-id-type="pmid">30958812</pub-id></mixed-citation>
    </ref>
    <ref id="btac664-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cock</surname><given-names>P.J.</given-names></string-name></person-group><etal>et al</etal> (<year>2009</year>) <article-title>Biopython: freely available python tools for computational molecular biology and bioinformatics</article-title>. <source>Bioinformatics</source>, <volume>25</volume>, <fpage>1422</fpage>–<lpage>1423</lpage>.<pub-id pub-id-type="pmid">19304878</pub-id></mixed-citation>
    </ref>
    <ref id="btac664-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Drummond</surname><given-names>A.J.</given-names></string-name>, <string-name><surname>Rambaut</surname><given-names>A.</given-names></string-name></person-group> (<year>2007</year>) <article-title>BEAST: Bayesian evolutionary analysis by sampling trees</article-title>. <source>BMC Evol. Biol</source>., <volume>7</volume>, <fpage>214</fpage>.<pub-id pub-id-type="pmid">17996036</pub-id></mixed-citation>
    </ref>
    <ref id="btac664-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hadfield</surname><given-names>J.</given-names></string-name></person-group><etal>et al</etal> (<year>2018</year>) <article-title>Nextstrain: real-time tracking of pathogen evolution</article-title>. <source>Bioinformatics</source>, <volume>34</volume>, <fpage>4121</fpage>–<lpage>4123</lpage>.<pub-id pub-id-type="pmid">29790939</pub-id></mixed-citation>
    </ref>
    <ref id="btac664-B5">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Krekel</surname><given-names>H.</given-names></string-name></person-group><etal>et al</etal> (<year>2004</year>) pytest 7.1.2. <ext-link xlink:href="https://github.com/pytest-dev/pytest" ext-link-type="uri">https://github.com/pytest-dev/pytest</ext-link></mixed-citation>
    </ref>
    <ref id="btac664-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>McKinney</surname><given-names>W.</given-names></string-name></person-group><etal>et al</etal> (<year>2010</year>) Data structures for statistical computing in python. In: <italic toggle="yes">Proceedings of the 9th Python in Science Conference.</italic> Vol. <volume>445</volume>. Austin, TX, pp. <fpage>51</fpage>–<lpage>56</lpage>.</mixed-citation>
    </ref>
    <ref id="btac664-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Mölder</surname><given-names>F.</given-names></string-name></person-group><etal>et al</etal> (<year>2021</year>) <article-title>Sustainable data analysis with snakemake</article-title>. <source>F1000Research</source>, <volume>10</volume>, <fpage>33</fpage>.<pub-id pub-id-type="pmid">34035898</pub-id></mixed-citation>
    </ref>
    <ref id="btac664-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Rambaut</surname><given-names>A.</given-names></string-name></person-group><etal>et al</etal> (<year>2016</year>) <article-title>Exploring the temporal structure of heterochronous sequences using TempEst (formerly Path-O-Gen)</article-title>. <source>Virus Evol</source>., <volume>2</volume>, <fpage>vew007</fpage>.<pub-id pub-id-type="pmid">27774300</pub-id></mixed-citation>
    </ref>
    <ref id="btac664-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Rieux</surname><given-names>A.</given-names></string-name>, <string-name><surname>Balloux</surname><given-names>F.</given-names></string-name></person-group> (<year>2016</year>) <article-title>Inferences from tip-calibrated phylogenies: a review and a practical guide</article-title>. <source>Mol. Ecol</source>., <volume>25</volume>, <fpage>1911</fpage>–<lpage>1924</lpage>.<pub-id pub-id-type="pmid">26880113</pub-id></mixed-citation>
    </ref>
    <ref id="btac664-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sagulenko</surname><given-names>P.</given-names></string-name></person-group><etal>et al</etal> (<year>2018</year>) <article-title>TreeTime: maximum-likelihood phylodynamic analysis</article-title>. <source>Virus Evol</source>., <volume>4</volume>, <fpage>vex042</fpage>.<pub-id pub-id-type="pmid">29340210</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>
